<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_24_rsync-1.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">writefd<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">fd<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">buf<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="37">int<pos:position pos:line="1" pos:column="40"/></name></type> <name pos:line="1" pos:column="41">len<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">total<pos:position pos:line="3" pos:column="12"/></name> <init pos:line="3" pos:column="13">= <expr><literal type="number" pos:line="3" pos:column="15">0<pos:position pos:line="3" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">fd_set<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">fds<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">buffer_f_in<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">-<pos:position pos:line="6" pos:column="23"/></operator><literal type="number" pos:line="6" pos:column="23">1<pos:position pos:line="6" pos:column="24"/></literal></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25"> 
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">write<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">fd<pos:position pos:line="7" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="21">buf<pos:position pos:line="7" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="25">len<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></return></block></then></if>

  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><name pos:line="9" pos:column="10">total<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&lt;<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="18">len<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition> <block pos:line="9" pos:column="23">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><call><name pos:line="10" pos:column="15">write<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">fd<pos:position pos:line="10" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="24">buf<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">+<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">total<pos:position pos:line="10" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="34">len<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">total<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">ret<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">==<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block type="pseudo"><return pos:line="12" pos:column="19">return <expr><name pos:line="12" pos:column="26">total<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></return></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">ret<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <operator pos:line="14" pos:column="16">-<pos:position pos:line="14" pos:column="17"/></operator><literal type="number" pos:line="14" pos:column="17">1<pos:position pos:line="14" pos:column="18"/></literal> <operator pos:line="14" pos:column="19">&amp;&amp;<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="22">errno<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">!=<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="31">EWOULDBLOCK<pos:position pos:line="14" pos:column="42"/></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> 
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><ternary><condition><expr><name pos:line="15" pos:column="14">total<pos:position pos:line="15" pos:column="19"/></name></expr>?<pos:position pos:line="15" pos:column="20"/></condition><then><expr><name pos:line="15" pos:column="20">total<pos:position pos:line="15" pos:column="25"/></name></expr></then><else pos:line="15" pos:column="25">:<expr><operator pos:line="15" pos:column="26">-<pos:position pos:line="15" pos:column="27"/></operator><literal type="number" pos:line="15" pos:column="27">1<pos:position pos:line="15" pos:column="28"/></literal></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="29"/></return></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">ret<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">==<pos:position pos:line="17" pos:column="15"/></operator> <operator pos:line="17" pos:column="16">-<pos:position pos:line="17" pos:column="17"/></operator><literal type="number" pos:line="17" pos:column="17">1<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19"> <block pos:line="17" pos:column="20">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">read_check<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">buffer_f_in<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="20" pos:column="7">FD_ZERO<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><operator pos:line="20" pos:column="15">&amp;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="16">fds<pos:position pos:line="20" pos:column="19"/></name></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">FD_SET<pos:position pos:line="21" pos:column="13"/></name><argument_list pos:line="21" pos:column="13">(<argument><expr><name pos:line="21" pos:column="14">fd<pos:position pos:line="21" pos:column="16"/></name></expr></argument>,<argument><expr><operator pos:line="21" pos:column="17">&amp;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="18">fds<pos:position pos:line="21" pos:column="21"/></name></expr></argument>)<pos:position pos:line="21" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">select<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><literal type="number" pos:line="22" pos:column="14">16<pos:position pos:line="22" pos:column="16"/></literal></expr></argument>,<argument><expr><name pos:line="22" pos:column="17">NULL<pos:position pos:line="22" pos:column="21"/></name></expr></argument>,<argument><expr><operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="23">fds<pos:position pos:line="22" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="27">NULL<pos:position pos:line="22" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="22" pos:column="32">NULL<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">total<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">+=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">ret<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>
  }<pos:position pos:line="26" pos:column="4"/></block></while>

  <return pos:line="28" pos:column="3">return <expr><name pos:line="28" pos:column="10">total<pos:position pos:line="28" pos:column="15"/></name></expr>;<pos:position pos:line="28" pos:column="16"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_544_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">recv_additional_file_list<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">f<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">file_list<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">flist<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ndx<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">read_ndx<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">f<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">ndx<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NDX_FLIST_EOF<pos:position pos:line="5" pos:column="33"/></name></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <block pos:line="5" pos:column="35">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">flist_eof<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">DEBUG_GTE<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">FLIST<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="38">3<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">rprintf<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">FINFO<pos:position pos:line="8" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="40">"[%s] flist_eof=1\n"<pos:position pos:line="8" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="62">who_am_i<pos:position pos:line="8" pos:column="70"/></name><argument_list pos:line="8" pos:column="70">()<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="74"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">change_local_filter_dir<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">NULL<pos:position pos:line="9" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="47">0<pos:position pos:line="9" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="50">0<pos:position pos:line="9" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></then> <else pos:line="10" pos:column="11">else <block pos:line="10" pos:column="16">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">ndx<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">NDX_FLIST_OFFSET<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">-<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="42">ndx<pos:position pos:line="11" pos:column="45"/></name></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">ndx<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&lt;<pos:position pos:line="12" pos:column="29"/></operator> <literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal> <operator pos:line="12" pos:column="29">||<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">ndx<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">&gt;=<pos:position pos:line="12" pos:column="41"/></operator> <name><name pos:line="12" pos:column="39">dir_flist<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">used<pos:position pos:line="12" pos:column="54"/></name></name></expr>)<pos:position pos:line="12" pos:column="55"/></condition><then pos:line="12" pos:column="55"> <block pos:line="12" pos:column="56">{
			<expr_stmt><expr><name pos:line="13" pos:column="25">ndx<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">NDX_FLIST_OFFSET<pos:position pos:line="13" pos:column="47"/></name> <operator pos:line="13" pos:column="48">-<pos:position pos:line="13" pos:column="49"/></operator> <name pos:line="13" pos:column="50">ndx<pos:position pos:line="13" pos:column="53"/></name></expr>;<pos:position pos:line="13" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">rprintf<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">FERROR<pos:position pos:line="14" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="15" pos:column="33">"[%s] Invalid dir index: %d (%d - %d)\n"<pos:position pos:line="15" pos:column="73"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="16" pos:column="33">who_am_i<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">()<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">ndx<pos:position pos:line="16" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">NDX_FLIST_OFFSET<pos:position pos:line="16" pos:column="66"/></name></expr></argument>,
				<argument><expr><name pos:line="17" pos:column="33">NDX_FLIST_OFFSET<pos:position pos:line="17" pos:column="49"/></name> <operator pos:line="17" pos:column="50">-<pos:position pos:line="17" pos:column="51"/></operator> <name><name pos:line="17" pos:column="52">dir_flist<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">-&gt;<pos:position pos:line="17" pos:column="66"/></operator><name pos:line="17" pos:column="63">used<pos:position pos:line="17" pos:column="67"/></name></name> <operator pos:line="17" pos:column="68">+<pos:position pos:line="17" pos:column="69"/></operator> <literal type="number" pos:line="17" pos:column="70">1<pos:position pos:line="17" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">exit_cleanup<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">RERR_PROTOCOL<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">DEBUG_GTE<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">FLIST<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="38">3<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">rprintf<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">FINFO<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="40">"[%s] receiving flist for dir %d\n"<pos:position pos:line="21" pos:column="75"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="22" pos:column="33">who_am_i<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">()<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">ndx<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="24" pos:column="17">flist<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">recv_file_list<pos:position pos:line="24" pos:column="39"/></name><argument_list pos:line="24" pos:column="39">(<argument><expr><name pos:line="24" pos:column="40">f<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="43">ndx<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">flist<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">-&gt;<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="24">parent_ndx<pos:position pos:line="25" pos:column="34"/></name></name> <operator pos:line="25" pos:column="35">=<pos:position pos:line="25" pos:column="36"/></operator> <name pos:line="25" pos:column="37">ndx<pos:position pos:line="25" pos:column="40"/></name></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></else></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

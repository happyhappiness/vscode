<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_705.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">singleOptionHelp<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">FILE<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type> <name pos:line="1" pos:column="37">f<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">maxLeftCol<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, 
			     <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">poptOption<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="56">opt<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>,
			     <parameter><decl><type><specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <name pos:line="3" pos:column="36">char<pos:position pos:line="3" pos:column="40"/></name> <modifier pos:line="3" pos:column="41">*<pos:position pos:line="3" pos:column="42"/></modifier></type><name pos:line="3" pos:column="42">translation_domain<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list> <block pos:line="3" pos:column="62">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">indentLength<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">maxLeftCol<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">+<pos:position pos:line="4" pos:column="36"/></operator> <literal type="number" pos:line="4" pos:column="37">5<pos:position pos:line="4" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">lineLength<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">79<pos:position pos:line="5" pos:column="24"/></literal> <operator pos:line="5" pos:column="25">-<pos:position pos:line="5" pos:column="26"/></operator> <name pos:line="5" pos:column="27">indentLength<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type> <name pos:line="6" pos:column="18">help<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name pos:line="6" pos:column="25">D_<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">translation_domain<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="48">opt<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">-&gt;<pos:position pos:line="6" pos:column="56"/></operator><name pos:line="6" pos:column="53">descrip<pos:position pos:line="6" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">helpLength<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">char<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type> <name pos:line="8" pos:column="18">ch<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">format<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><literal type="number" pos:line="9" pos:column="17">10<pos:position pos:line="9" pos:column="19"/></literal></expr>]<pos:position pos:line="9" pos:column="20"/></index></name></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type> <name pos:line="10" pos:column="12">left<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type> <name pos:line="11" pos:column="18">argDescrip<pos:position pos:line="11" pos:column="28"/></name> <init pos:line="11" pos:column="29">= <expr><call><name pos:line="11" pos:column="31">getArgDescrip<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">opt<pos:position pos:line="11" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="50">translation_domain<pos:position pos:line="11" pos:column="68"/></name></expr></argument>)<pos:position pos:line="11" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="70"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">left<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">malloc<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">maxLeftCol<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">+<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="32">1<pos:position pos:line="13" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="14" pos:column="5">*<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">left<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="char" pos:line="14" pos:column="13">'\0'<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">opt<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">longName<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">&amp;&amp;<pos:position pos:line="16" pos:column="33"/></operator> <name><name pos:line="16" pos:column="26">opt<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">shortName<pos:position pos:line="16" pos:column="40"/></name></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">sprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">left<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"-%c, --%s"<pos:position pos:line="17" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="36">opt<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">shortName<pos:position pos:line="17" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="52">opt<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">longName<pos:position pos:line="17" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="67"/></expr_stmt></block></then>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><name><name pos:line="18" pos:column="14">opt<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">-&gt;<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="19">shortName<pos:position pos:line="18" pos:column="28"/></name></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">sprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">left<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"-%c"<pos:position pos:line="19" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="30">opt<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">shortName<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name><name pos:line="20" pos:column="14">opt<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">longName<pos:position pos:line="20" pos:column="27"/></name></name></expr>)<pos:position pos:line="20" pos:column="28"/></condition><then pos:line="20" pos:column="28">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">sprintf<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name pos:line="21" pos:column="17">left<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"--%s"<pos:position pos:line="21" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="31">opt<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">longName<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="46"/></expr_stmt></block></then></if></elseif></if>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><operator pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">left<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16"> <block type="pseudo"><return pos:line="22" pos:column="17">return ;<pos:position pos:line="22" pos:column="25"/></return></block></then></if>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">argDescrip<pos:position pos:line="23" pos:column="19"/></name></expr>)<pos:position pos:line="23" pos:column="20"/></condition><then pos:line="23" pos:column="20"> <block pos:line="23" pos:column="21">{
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">strcat<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">left<pos:position pos:line="24" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="22">"="<pos:position pos:line="24" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">strcat<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">left<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="22">argDescrip<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">help<pos:position pos:line="28" pos:column="13"/></name></expr>)<pos:position pos:line="28" pos:column="14"/></condition><then pos:line="28" pos:column="14">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">fprintf<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">f<pos:position pos:line="29" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="19">"  %-*s   "<pos:position pos:line="29" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">maxLeftCol<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">left<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt></block></then>
    <else pos:line="30" pos:column="5">else <block pos:line="30" pos:column="10">{
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">fprintf<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">(<argument><expr><name pos:line="31" pos:column="17">f<pos:position pos:line="31" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="31" pos:column="19">"  %s\n"<pos:position pos:line="31" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="29">left<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt> 
	<goto pos:line="32" pos:column="9">goto <name pos:line="32" pos:column="14">out<pos:position pos:line="32" pos:column="17"/></name>;<pos:position pos:line="32" pos:column="18"/></goto>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">helpLength<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <call><name pos:line="35" pos:column="18">strlen<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">help<pos:position pos:line="35" pos:column="29"/></name></expr></argument>)<pos:position pos:line="35" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
    <while pos:line="36" pos:column="5">while <condition pos:line="36" pos:column="11">(<expr><name pos:line="36" pos:column="12">helpLength<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&gt;<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="25">lineLength<pos:position pos:line="36" pos:column="35"/></name></expr>)<pos:position pos:line="36" pos:column="36"/></condition> <block pos:line="36" pos:column="37">{
	<expr_stmt><expr><name pos:line="37" pos:column="9">ch<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <name pos:line="37" pos:column="14">help<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">+<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">lineLength<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">-<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="34">1<pos:position pos:line="37" pos:column="35"/></literal></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
	<while pos:line="38" pos:column="9">while <condition pos:line="38" pos:column="15">(<expr><name pos:line="38" pos:column="16">ch<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">&gt;<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="21">help<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">&amp;&amp;<pos:position pos:line="38" pos:column="36"/></operator> <operator pos:line="38" pos:column="29">!<pos:position pos:line="38" pos:column="30"/></operator><call><name pos:line="38" pos:column="30">isspace<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><operator pos:line="38" pos:column="38">*<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="39">ch<pos:position pos:line="38" pos:column="41"/></name></expr></argument>)<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="44">ch<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">--<pos:position pos:line="38" pos:column="48"/></operator></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt></block></while>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">ch<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">==<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">help<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24"> <block type="pseudo"><break pos:line="39" pos:column="25">break;<pos:position pos:line="39" pos:column="31"/></break></block></then></if>		<comment type="block" pos:line="39" pos:column="41">/* give up */</comment>
	<while pos:line="40" pos:column="9">while <condition pos:line="40" pos:column="15">(<expr><name pos:line="40" pos:column="16">ch<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">&gt;<pos:position pos:line="40" pos:column="23"/></operator> <operator pos:line="40" pos:column="21">(<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">help<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">+<pos:position pos:line="40" pos:column="28"/></operator> <literal type="number" pos:line="40" pos:column="29">1<pos:position pos:line="40" pos:column="30"/></literal><operator pos:line="40" pos:column="30">)<pos:position pos:line="40" pos:column="31"/></operator> <operator pos:line="40" pos:column="32">&amp;&amp;<pos:position pos:line="40" pos:column="42"/></operator> <call><name pos:line="40" pos:column="35">isspace<pos:position pos:line="40" pos:column="42"/></name><argument_list pos:line="40" pos:column="42">(<argument><expr><operator pos:line="40" pos:column="43">*<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">ch<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="48"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="49">ch<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">--<pos:position pos:line="40" pos:column="53"/></operator></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt></block></while>
	<expr_stmt><expr><name pos:line="41" pos:column="9">ch<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">++<pos:position pos:line="41" pos:column="13"/></operator></expr>;<pos:position pos:line="41" pos:column="14"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">sprintf<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">format<pos:position pos:line="43" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="25">"%%.%ds\n%%%ds"<pos:position pos:line="43" pos:column="40"/></literal></expr></argument>, <argument><expr><call pos:line="43" pos:column="42">(<name pos:line="43" pos:column="43">int<pos:position pos:line="43" pos:column="46"/></name>) <argument_list pos:line="43" pos:column="48">(<argument><expr><name pos:line="43" pos:column="49">ch<pos:position pos:line="43" pos:column="51"/></name> <operator pos:line="43" pos:column="52">-<pos:position pos:line="43" pos:column="53"/></operator> <name pos:line="43" pos:column="54">help<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="43" pos:column="61">indentLength<pos:position pos:line="43" pos:column="73"/></name></expr></argument>)<pos:position pos:line="43" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="44" pos:column="9">fprintf<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">f<pos:position pos:line="44" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="20">format<pos:position pos:line="44" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="28">help<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="34">" "<pos:position pos:line="44" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="45" pos:column="9">help<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">=<pos:position pos:line="45" pos:column="15"/></operator> <name pos:line="45" pos:column="16">ch<pos:position pos:line="45" pos:column="18"/></name></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>
	<while pos:line="46" pos:column="9">while <condition pos:line="46" pos:column="15">(<expr><call><name pos:line="46" pos:column="16">isspace<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><operator pos:line="46" pos:column="24">*<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">help<pos:position pos:line="46" pos:column="29"/></name></expr></argument>)<pos:position pos:line="46" pos:column="30"/></argument_list></call> <operator pos:line="46" pos:column="31">&amp;&amp;<pos:position pos:line="46" pos:column="41"/></operator> <operator pos:line="46" pos:column="34">*<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">help<pos:position pos:line="46" pos:column="39"/></name></expr>)<pos:position pos:line="46" pos:column="40"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="41">help<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">++<pos:position pos:line="46" pos:column="47"/></operator></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt></block></while>
	<expr_stmt><expr><name pos:line="47" pos:column="9">helpLength<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">=<pos:position pos:line="47" pos:column="21"/></operator> <call><name pos:line="47" pos:column="22">strlen<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">help<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></while>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">helpLength<pos:position pos:line="50" pos:column="19"/></name></expr>)<pos:position pos:line="50" pos:column="20"/></condition><then pos:line="50" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="21">fprintf<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">f<pos:position pos:line="50" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="32">"%s\n"<pos:position pos:line="50" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="40">help<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt></block></then></if>

<label><name pos:line="52" pos:column="1">out<pos:position pos:line="52" pos:column="4"/></name>:<pos:position pos:line="52" pos:column="5"/></label>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">free<pos:position pos:line="53" pos:column="9"/></name><argument_list pos:line="53" pos:column="9">(<argument><expr><name pos:line="53" pos:column="10">left<pos:position pos:line="53" pos:column="14"/></name></expr></argument>)<pos:position pos:line="53" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="16"/></expr_stmt>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

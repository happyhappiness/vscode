<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_121_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">read_batch_csum_info<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">flist_entry<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="44">struct<pos:position pos:line="1" pos:column="50"/></name> <name pos:line="1" pos:column="51">sum_struct<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">s<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
			  <parameter><decl><type><name pos:line="2" pos:column="27">int<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">checksums_match<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">file_flist_entry<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">file_chunk_ct<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">uint32<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">file_sum1<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">file_sum2<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><name pos:line="8" pos:column="24">SUM_LENGTH<pos:position pos:line="8" pos:column="34"/></name></expr>]<pos:position pos:line="8" pos:column="35"/></index></name></decl>;<pos:position pos:line="8" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">extern<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">int<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">csum_length<pos:position pos:line="9" pos:column="31"/></name></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">read_batch_csums_file<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><operator pos:line="11" pos:column="31">(<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">char<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></operator><operator pos:line="11" pos:column="38">)<pos:position pos:line="11" pos:column="39"/></operator> <operator pos:line="11" pos:column="40">&amp;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="41">file_flist_entry<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="59">sizeof<argument_list pos:line="11" pos:column="65">(<argument><expr><name pos:line="11" pos:column="66">int<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">file_flist_entry<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">!=<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="33">flist_entry<pos:position pos:line="12" pos:column="44"/></name></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45"> <block pos:line="12" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">rprintf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">FINFO<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="32">"file_flist_entry (%d) != flist_entry (%d)\n"<pos:position pos:line="13" pos:column="77"/></literal></expr></argument>,
			<argument><expr><name pos:line="14" pos:column="25">file_flist_entry<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="43">flist_entry<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">close<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">fdb<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">exit_cleanup<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><literal type="number" pos:line="16" pos:column="30">1<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>

	}<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">read_batch_csums_file<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><operator pos:line="19" pos:column="39">(<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">char<pos:position pos:line="19" pos:column="44"/></name> <operator pos:line="19" pos:column="45">*<pos:position pos:line="19" pos:column="46"/></operator><operator pos:line="19" pos:column="46">)<pos:position pos:line="19" pos:column="47"/></operator> <operator pos:line="19" pos:column="48">&amp;<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="49">file_chunk_ct<pos:position pos:line="19" pos:column="62"/></name></expr></argument>,
				      <argument><expr><sizeof pos:line="20" pos:column="39">sizeof<argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">int<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">checksums_match<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <literal type="number" pos:line="21" pos:column="36">1<pos:position pos:line="21" pos:column="37"/></literal></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
		<for pos:line="22" pos:column="17">for <control pos:line="22" pos:column="21">(<init><expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></init> <condition><expr><name pos:line="22" pos:column="29">i<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">&lt;<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="33">file_chunk_ct<pos:position pos:line="22" pos:column="46"/></name></expr>;<pos:position pos:line="22" pos:column="47"/></condition> <incr><expr><name pos:line="22" pos:column="48">i<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">++<pos:position pos:line="22" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="52"/></control> <block pos:line="22" pos:column="53">{

			<expr_stmt><expr><call><name pos:line="24" pos:column="25">read_batch_csums_file<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><operator pos:line="24" pos:column="47">(<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="48">char<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">*<pos:position pos:line="24" pos:column="54"/></operator><operator pos:line="24" pos:column="54">)<pos:position pos:line="24" pos:column="55"/></operator> <operator pos:line="24" pos:column="56">&amp;<pos:position pos:line="24" pos:column="61"/></operator><name pos:line="24" pos:column="57">file_sum1<pos:position pos:line="24" pos:column="66"/></name></expr></argument>,
					      <argument><expr><sizeof pos:line="25" pos:column="47">sizeof<argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">uint32<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">read_batch_csums_file<pos:position pos:line="26" pos:column="46"/></name><argument_list pos:line="26" pos:column="46">(<argument><expr><name pos:line="26" pos:column="47">file_sum2<pos:position pos:line="26" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">csum_length<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>

			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><operator pos:line="28" pos:column="29">(<pos:position pos:line="28" pos:column="30"/></operator><name><name pos:line="28" pos:column="30">s<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">sums<pos:position pos:line="28" pos:column="37"/></name><index pos:line="28" pos:column="37">[<expr><name pos:line="28" pos:column="38">i<pos:position pos:line="28" pos:column="39"/></name></expr>]<pos:position pos:line="28" pos:column="40"/></index></name><operator pos:line="28" pos:column="40">.<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="41">sum1<pos:position pos:line="28" pos:column="45"/></name> <operator pos:line="28" pos:column="46">!=<pos:position pos:line="28" pos:column="48"/></operator> <name pos:line="28" pos:column="49">file_sum1<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">)<pos:position pos:line="28" pos:column="59"/></operator> <operator pos:line="28" pos:column="60">||<pos:position pos:line="28" pos:column="62"/></operator>
			    <operator pos:line="29" pos:column="29">(<pos:position pos:line="29" pos:column="30"/></operator><call><name pos:line="29" pos:column="30">memcmp<pos:position pos:line="29" pos:column="36"/></name><argument_list pos:line="29" pos:column="36">(<argument><expr><name><name pos:line="29" pos:column="37">s<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">sums<pos:position pos:line="29" pos:column="44"/></name><index pos:line="29" pos:column="44">[<expr><name pos:line="29" pos:column="45">i<pos:position pos:line="29" pos:column="46"/></name></expr>]<pos:position pos:line="29" pos:column="47"/></index></name><operator pos:line="29" pos:column="47">.<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="48">sum2<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="54">file_sum2<pos:position pos:line="29" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="65">csum_length<pos:position pos:line="29" pos:column="76"/></name></expr></argument>)<pos:position pos:line="29" pos:column="77"/></argument_list></call>
				<operator pos:line="30" pos:column="33">!=<pos:position pos:line="30" pos:column="35"/></operator> <literal type="number" pos:line="30" pos:column="36">0<pos:position pos:line="30" pos:column="37"/></literal><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator></expr>)<pos:position pos:line="30" pos:column="39"/></condition><then pos:line="30" pos:column="39"> <block pos:line="30" pos:column="40">{
				<expr_stmt><expr><operator pos:line="31" pos:column="33">*<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">checksums_match<pos:position pos:line="31" pos:column="49"/></name> <operator pos:line="31" pos:column="50">=<pos:position pos:line="31" pos:column="51"/></operator> <literal type="number" pos:line="31" pos:column="52">0<pos:position pos:line="31" pos:column="53"/></literal></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="32" pos:column="26"/></block></then></if>
		}<pos:position pos:line="33" pos:column="18"/></block></for>		<comment type="block" pos:line="33" pos:column="33">/*  end for  */</comment>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

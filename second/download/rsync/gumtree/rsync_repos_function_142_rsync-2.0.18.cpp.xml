<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_142_rsync-2.0.18.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">Realloc<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">p<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">size<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name pos:line="3" pos:column="14">p<pos:position pos:line="3" pos:column="15"/></name></expr>)<pos:position pos:line="3" pos:column="16"/></condition><then pos:line="3" pos:column="16"> <block type="pseudo"><return pos:line="3" pos:column="17">return <expr><operator pos:line="3" pos:column="24">(<pos:position pos:line="3" pos:column="25"/></operator><name pos:line="3" pos:column="25">void<pos:position pos:line="3" pos:column="29"/></name> <operator pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></operator><operator pos:line="3" pos:column="31">)<pos:position pos:line="3" pos:column="32"/></operator><call><name pos:line="3" pos:column="32">malloc<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">size<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="45"/></return></block></then></if>
	<return pos:line="4" pos:column="9">return <expr><operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">void<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></operator><operator pos:line="4" pos:column="23">)<pos:position pos:line="4" pos:column="24"/></operator><call><name pos:line="4" pos:column="24">realloc<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">p<pos:position pos:line="4" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="35">size<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_397_rsync-3.0.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">get_tmpname<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">fnametmp<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">fname<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">maxname<pos:position pos:line="3" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="22">added<pos:position pos:line="3" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="29">length<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><literal type="number" pos:line="3" pos:column="38">0<pos:position pos:line="3" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">f<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">suf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">tmpdir<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
		<comment type="block" pos:line="8" pos:column="17">/* Note: this can't overflow, so the return value is safe */</comment>
		<expr_stmt><expr><name pos:line="9" pos:column="17">length<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">strlcpy<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">fnametmp<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">tmpdir<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">MAXPATHLEN<pos:position pos:line="9" pos:column="62"/></name> <operator pos:line="9" pos:column="63">-<pos:position pos:line="9" pos:column="64"/></operator> <literal type="number" pos:line="9" pos:column="65">2<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">fnametmp<pos:position pos:line="10" pos:column="25"/></name><index pos:line="10" pos:column="25">[<expr><name pos:line="10" pos:column="26">length<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">++<pos:position pos:line="10" pos:column="34"/></operator></expr>]<pos:position pos:line="10" pos:column="35"/></index></name> <operator pos:line="10" pos:column="36">=<pos:position pos:line="10" pos:column="37"/></operator> <literal type="char" pos:line="10" pos:column="38">'/'<pos:position pos:line="10" pos:column="41"/></literal></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">f<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">strrchr<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">fname<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="33">'/'<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="39">!=<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">NULL<pos:position pos:line="13" pos:column="46"/></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47"> <block pos:line="13" pos:column="48">{
		<expr_stmt><expr><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">f<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">tmpdir<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">length<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">f<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">-<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">fname<pos:position pos:line="16" pos:column="43"/></name></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
			<comment type="block" pos:line="17" pos:column="25">/* copy up to and including the slash */</comment>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">strlcpy<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">fnametmp<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">fname<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">length<pos:position pos:line="18" pos:column="56"/></name> <operator pos:line="18" pos:column="57">+<pos:position pos:line="18" pos:column="58"/></operator> <literal type="number" pos:line="18" pos:column="59">1<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">f<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">fname<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">fnametmp<pos:position pos:line="22" pos:column="17"/></name><index pos:line="22" pos:column="17">[<expr><name pos:line="22" pos:column="18">length<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">++<pos:position pos:line="22" pos:column="26"/></operator></expr>]<pos:position pos:line="22" pos:column="27"/></index></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="char" pos:line="22" pos:column="30">'.'<pos:position pos:line="22" pos:column="33"/></literal></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="24" pos:column="9">/* The maxname value is bufsize, and includes space for the '\0'.
	 * NAME_MAX needs an extra -1 for the name's leading dot. */</comment>
	<expr_stmt><expr><name pos:line="26" pos:column="9">maxname<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">MIN<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">MAXPATHLEN<pos:position pos:line="26" pos:column="33"/></name> <operator pos:line="26" pos:column="34">-<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">length<pos:position pos:line="26" pos:column="42"/></name> <operator pos:line="26" pos:column="43">-<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">TMPNAME_SUFFIX_LEN<pos:position pos:line="26" pos:column="63"/></name></expr></argument>,
		      <argument><expr><name pos:line="27" pos:column="23">NAME_MAX<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">-<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal> <operator pos:line="27" pos:column="36">-<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">TMPNAME_SUFFIX_LEN<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">maxname<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">&lt;<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="23">1<pos:position pos:line="29" pos:column="24"/></literal></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25"> <block pos:line="29" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">rprintf<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name pos:line="30" pos:column="25">FERROR_XFER<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="38">"temporary filename too long: %s\n"<pos:position pos:line="30" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="75">fname<pos:position pos:line="30" pos:column="80"/></name></expr></argument>)<pos:position pos:line="30" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="31" pos:column="17">fnametmp<pos:position pos:line="31" pos:column="25"/></name><index pos:line="31" pos:column="25">[<expr><literal type="number" pos:line="31" pos:column="26">0<pos:position pos:line="31" pos:column="27"/></literal></expr>]<pos:position pos:line="31" pos:column="28"/></index></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <literal type="char" pos:line="31" pos:column="31">'\0'<pos:position pos:line="31" pos:column="35"/></literal></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><literal type="number" pos:line="32" pos:column="24">0<pos:position pos:line="32" pos:column="25"/></literal></expr>;<pos:position pos:line="32" pos:column="26"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="35" pos:column="9">added<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <call><name pos:line="35" pos:column="17">strlcpy<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">fnametmp<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">+<pos:position pos:line="35" pos:column="35"/></operator> <name pos:line="35" pos:column="36">length<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">f<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="47">maxname<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">added<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">&gt;=<pos:position pos:line="36" pos:column="24"/></operator> <name pos:line="36" pos:column="22">maxname<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="17">added<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">maxname<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">-<pos:position pos:line="37" pos:column="34"/></operator> <literal type="number" pos:line="37" pos:column="35">1<pos:position pos:line="37" pos:column="36"/></literal></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="38" pos:column="9">suf<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <name pos:line="38" pos:column="15">fnametmp<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">+<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="26">length<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">+<pos:position pos:line="38" pos:column="34"/></operator> <name pos:line="38" pos:column="35">added<pos:position pos:line="38" pos:column="40"/></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>

	<comment type="block" pos:line="40" pos:column="9">/* Trim any dangling high-bit chars if the first-trimmed char (if any) is
	 * also a high-bit char, just in case we cut into a multi-byte sequence.
	 * We are guaranteed to stop because of the leading '.' we added. */</comment>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">(<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">int<pos:position pos:line="43" pos:column="17"/></name><operator pos:line="43" pos:column="17">)<pos:position pos:line="43" pos:column="18"/></operator><name><name pos:line="43" pos:column="18">f<pos:position pos:line="43" pos:column="19"/></name><index pos:line="43" pos:column="19">[<expr><name pos:line="43" pos:column="20">added<pos:position pos:line="43" pos:column="25"/></name></expr>]<pos:position pos:line="43" pos:column="26"/></index></name> <operator pos:line="43" pos:column="27">&amp;<pos:position pos:line="43" pos:column="32"/></operator> <literal type="number" pos:line="43" pos:column="29">0x80<pos:position pos:line="43" pos:column="33"/></literal></expr>)<pos:position pos:line="43" pos:column="34"/></condition><then pos:line="43" pos:column="34"> <block pos:line="43" pos:column="35">{
		<while pos:line="44" pos:column="17">while <condition pos:line="44" pos:column="23">(<expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">int<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">)<pos:position pos:line="44" pos:column="29"/></operator><name><name pos:line="44" pos:column="29">suf<pos:position pos:line="44" pos:column="32"/></name><index pos:line="44" pos:column="32">[<expr><operator pos:line="44" pos:column="33">-<pos:position pos:line="44" pos:column="34"/></operator><literal type="number" pos:line="44" pos:column="34">1<pos:position pos:line="44" pos:column="35"/></literal></expr>]<pos:position pos:line="44" pos:column="36"/></index></name> <operator pos:line="44" pos:column="37">&amp;<pos:position pos:line="44" pos:column="42"/></operator> <literal type="number" pos:line="44" pos:column="39">0x80<pos:position pos:line="44" pos:column="43"/></literal></expr>)<pos:position pos:line="44" pos:column="44"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="25">suf<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">--<pos:position pos:line="45" pos:column="30"/></operator></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt></block></while>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="48" pos:column="9">memcpy<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name pos:line="48" pos:column="16">suf<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="21">TMPNAME_SUFFIX<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="37">TMPNAME_SUFFIX_LEN<pos:position pos:line="48" pos:column="55"/></name><operator pos:line="48" pos:column="55">+<pos:position pos:line="48" pos:column="56"/></operator><literal type="number" pos:line="48" pos:column="56">1<pos:position pos:line="48" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>

	<return pos:line="50" pos:column="9">return <expr><literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

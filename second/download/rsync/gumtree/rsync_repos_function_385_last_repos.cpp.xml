<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_385_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">partial_dir_fname<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fname<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">t<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">partial_fname<pos:position pos:line="3" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">sz<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><sizeof pos:line="4" pos:column="18">sizeof <name pos:line="4" pos:column="25">partial_fname<pos:position pos:line="4" pos:column="38"/></name></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">fn<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">fn<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">strrchr<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">fname<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="34">'/'<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call><operator pos:line="7" pos:column="38">)<pos:position pos:line="7" pos:column="39"/></operator> <operator pos:line="7" pos:column="40">!=<pos:position pos:line="7" pos:column="42"/></operator> <name pos:line="7" pos:column="43">NULL<pos:position pos:line="7" pos:column="47"/></name></expr>)<pos:position pos:line="7" pos:column="48"/></condition><then pos:line="7" pos:column="48"> <block pos:line="7" pos:column="49">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">fn<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">++<pos:position pos:line="8" pos:column="21"/></operator></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><operator pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">partial_dir<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">!=<pos:position pos:line="9" pos:column="36"/></operator> <literal type="char" pos:line="9" pos:column="37">'/'<pos:position pos:line="9" pos:column="40"/></literal></expr>)<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41"> <block pos:line="9" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="10" pos:column="25">int<pos:position pos:line="10" pos:column="28"/></name></type> <name pos:line="10" pos:column="29">len<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><name pos:line="10" pos:column="35">fn<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">-<pos:position pos:line="10" pos:column="39"/></operator> <name pos:line="10" pos:column="40">fname<pos:position pos:line="10" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="11" pos:column="25">strncpy<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">t<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">fname<pos:position pos:line="11" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="43">len<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt> <comment type="block" pos:line="11" pos:column="49">/* safe */</comment>
			<expr_stmt><expr><name pos:line="12" pos:column="25">t<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">+=<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">len<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
			<expr_stmt><expr><name pos:line="13" pos:column="25">sz<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">-=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">len<pos:position pos:line="13" pos:column="34"/></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
	}<pos:position pos:line="15" pos:column="10"/></block></then> <else pos:line="15" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">fn<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">fname<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt></block></else></if>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">int<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">)<pos:position pos:line="17" pos:column="18"/></operator><call><name pos:line="17" pos:column="18">pathjoin<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">t<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">sz<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">partial_dir<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">fn<pos:position pos:line="17" pos:column="49"/></name></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call> <operator pos:line="17" pos:column="51">&gt;=<pos:position pos:line="17" pos:column="56"/></operator> <name pos:line="17" pos:column="54">sz<pos:position pos:line="17" pos:column="56"/></name></expr>)<pos:position pos:line="17" pos:column="57"/></condition><then pos:line="17" pos:column="57">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></return></block></then></if>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">daemon_filter_list<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">head<pos:position pos:line="19" pos:column="36"/></name></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">t<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">strrchr<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">partial_fname<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="20" pos:column="44">'/'<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="21" pos:column="17">*<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">t<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="char" pos:line="21" pos:column="22">'\0'<pos:position pos:line="21" pos:column="26"/></literal></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name pos:line="22" pos:column="21">check_filter<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="35">daemon_filter_list<pos:position pos:line="22" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="55">FLOG<pos:position pos:line="22" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">partial_fname<pos:position pos:line="22" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="76">1<pos:position pos:line="22" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call> <operator pos:line="22" pos:column="79">&lt;<pos:position pos:line="22" pos:column="83"/></operator> <literal type="number" pos:line="22" pos:column="81">0<pos:position pos:line="22" pos:column="82"/></literal></expr>)<pos:position pos:line="22" pos:column="83"/></condition><then pos:line="22" pos:column="83">
			<block type="pseudo"><return pos:line="23" pos:column="25">return <expr><name pos:line="23" pos:column="32">NULL<pos:position pos:line="23" pos:column="36"/></name></expr>;<pos:position pos:line="23" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><operator pos:line="24" pos:column="17">*<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">t<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="char" pos:line="24" pos:column="22">'/'<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">check_filter<pos:position pos:line="25" pos:column="33"/></name><argument_list pos:line="25" pos:column="33">(<argument><expr><operator pos:line="25" pos:column="34">&amp;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="35">daemon_filter_list<pos:position pos:line="25" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="55">FLOG<pos:position pos:line="25" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="61">partial_fname<pos:position pos:line="25" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="76">0<pos:position pos:line="25" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="78"/></argument_list></call> <operator pos:line="25" pos:column="79">&lt;<pos:position pos:line="25" pos:column="83"/></operator> <literal type="number" pos:line="25" pos:column="81">0<pos:position pos:line="25" pos:column="82"/></literal></expr>)<pos:position pos:line="25" pos:column="83"/></condition><then pos:line="25" pos:column="83">
			<block type="pseudo"><return pos:line="26" pos:column="25">return <expr><name pos:line="26" pos:column="32">NULL<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">partial_fname<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

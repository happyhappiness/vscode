<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_714_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">double<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">my_modf<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">double<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">x0<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">double<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">iptr<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">LLONG<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">l<pos:position pos:line="4" pos:column="16"/></name><init pos:line="4" pos:column="16">=<expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">double<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">x<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">x0<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">double<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">f<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">1.0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></init><condition><expr><name pos:line="8" pos:column="18">i<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator><literal type="number" pos:line="8" pos:column="20">100<pos:position pos:line="8" pos:column="23"/></literal></expr>;<pos:position pos:line="8" pos:column="24"/></condition><incr><expr><name pos:line="8" pos:column="24">i<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">++<pos:position pos:line="8" pos:column="27"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="28"/></control> <block pos:line="8" pos:column="29">{
		<expr_stmt><expr><name pos:line="9" pos:column="17">l<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">long<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">x<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><name pos:line="10" pos:column="21">l<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;=<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">x<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">+<pos:position pos:line="10" pos:column="29"/></operator><literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal><operator pos:line="10" pos:column="30">)<pos:position pos:line="10" pos:column="31"/></operator> <operator pos:line="10" pos:column="32">&amp;&amp;<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="35">l<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">&gt;=<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="40">(<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">x<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-<pos:position pos:line="10" pos:column="43"/></operator><literal type="number" pos:line="10" pos:column="43">1<pos:position pos:line="10" pos:column="44"/></literal><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46"> <block type="pseudo"><break pos:line="10" pos:column="47">break;<pos:position pos:line="10" pos:column="53"/></break></block></then></if>
		<expr_stmt><expr><name pos:line="11" pos:column="17">x<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">*=<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="22">0.1<pos:position pos:line="11" pos:column="25"/></literal></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="12" pos:column="17">f<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">*=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="22">10.0<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></for>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">i<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">100<pos:position pos:line="15" pos:column="21"/></literal></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22"> <block pos:line="15" pos:column="23">{
		<comment type="block" pos:line="16" pos:column="17">/* yikes! the number is beyond what we can handle. What do we do? */</comment>
		<expr_stmt><expr><operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator><operator pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">iptr<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">)<pos:position pos:line="17" pos:column="24"/></operator> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <literal type="number" pos:line="17" pos:column="27">0<pos:position pos:line="17" pos:column="28"/></literal></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
		<return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">i<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">!=<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20"> <block pos:line="21" pos:column="21">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">double<pos:position pos:line="22" pos:column="23"/></name></type> <name pos:line="22" pos:column="24">i2<pos:position pos:line="22" pos:column="26"/></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">double<pos:position pos:line="23" pos:column="23"/></name></type> <name pos:line="23" pos:column="24">ret<pos:position pos:line="23" pos:column="27"/></name></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">ret<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">my_modf<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name pos:line="25" pos:column="31">x0<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">l<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">*<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">f<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="39">&amp;<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="40">i2<pos:position pos:line="25" pos:column="42"/></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><operator pos:line="26" pos:column="18">*<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">iptr<pos:position pos:line="26" pos:column="23"/></name><operator pos:line="26" pos:column="23">)<pos:position pos:line="26" pos:column="24"/></operator> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">l<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">*<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">f<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">+<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">i2<pos:position pos:line="26" pos:column="35"/></name></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
		<return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">ret<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if> 

	<expr_stmt><expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><operator pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">iptr<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">)<pos:position pos:line="30" pos:column="16"/></operator> <operator pos:line="30" pos:column="17">=<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">l<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></expr_stmt>
	<return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">x<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">-<pos:position pos:line="31" pos:column="19"/></operator> <operator pos:line="31" pos:column="20">(<pos:position pos:line="31" pos:column="21"/></operator><operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">iptr<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">)<pos:position pos:line="31" pos:column="27"/></operator></expr>;<pos:position pos:line="31" pos:column="28"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

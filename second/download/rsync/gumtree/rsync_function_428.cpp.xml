<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_428.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">send_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">argc<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name><name pos:line="1" pos:column="55">argv<pos:position pos:line="1" pos:column="59"/></name><index pos:line="1" pos:column="59">[]<pos:position pos:line="1" pos:column="61"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="15">l<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">stat<pos:position pos:line="4" pos:column="20"/></name></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>,<modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="18">dir<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">dbuf<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">MAXPATHLEN<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">lastpath<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><name pos:line="7" pos:column="23">MAXPATHLEN<pos:position pos:line="7" pos:column="33"/></name></expr>]<pos:position pos:line="7" pos:column="34"/></index></name><init pos:line="7" pos:column="34">=<expr><literal type="string" pos:line="7" pos:column="35">""<pos:position pos:line="7" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="8" pos:column="9">struct<pos:position pos:line="8" pos:column="15"/></name> <name pos:line="8" pos:column="16">file_list<pos:position pos:line="8" pos:column="25"/></name></name> <modifier pos:line="8" pos:column="26">*<pos:position pos:line="8" pos:column="27"/></modifier></type><name pos:line="8" pos:column="27">flist<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">verbose<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&amp;&amp;<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="24">recurse<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">&amp;&amp;<pos:position pos:line="10" pos:column="42"/></operator> <operator pos:line="10" pos:column="35">!<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">am_server<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">&amp;&amp;<pos:position pos:line="10" pos:column="56"/></operator> <name pos:line="10" pos:column="49">f<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">!=<pos:position pos:line="10" pos:column="53"/></operator> <operator pos:line="10" pos:column="54">-<pos:position pos:line="10" pos:column="55"/></operator><literal type="number" pos:line="10" pos:column="55">1<pos:position pos:line="10" pos:column="56"/></literal></expr>)<pos:position pos:line="10" pos:column="57"/></condition><then pos:line="10" pos:column="57"> <block pos:line="10" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">fprintf<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">FINFO<pos:position pos:line="11" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="31">"building file list ... "<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">fflush<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">FINFO<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">flist<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator>struct <name pos:line="15" pos:column="25">file_list<pos:position pos:line="15" pos:column="34"/></name> <operator pos:line="15" pos:column="35">*<pos:position pos:line="15" pos:column="36"/></operator><operator pos:line="15" pos:column="36">)<pos:position pos:line="15" pos:column="37"/></operator><call><name pos:line="15" pos:column="37">malloc<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><sizeof pos:line="15" pos:column="44">sizeof<argument_list pos:line="15" pos:column="50">(<argument><expr><name><name pos:line="15" pos:column="51">flist<pos:position pos:line="15" pos:column="56"/></name><index pos:line="15" pos:column="56">[<expr><literal type="number" pos:line="15" pos:column="57">0<pos:position pos:line="15" pos:column="58"/></literal></expr>]<pos:position pos:line="15" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">flist<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="21">out_of_memory<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><literal type="string" pos:line="16" pos:column="35">"send_file_list"<pos:position pos:line="16" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="18" pos:column="9">flist<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">count<pos:position pos:line="18" pos:column="21"/></name></name><operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="19" pos:column="9">flist<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">malloced<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <literal type="number" pos:line="19" pos:column="27">1000<pos:position pos:line="19" pos:column="31"/></literal></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">flist<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">files<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator>struct <name pos:line="20" pos:column="32">file_struct<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">*<pos:position pos:line="20" pos:column="45"/></operator><operator pos:line="20" pos:column="45">*<pos:position pos:line="20" pos:column="46"/></operator><operator pos:line="20" pos:column="46">)<pos:position pos:line="20" pos:column="47"/></operator><call><name pos:line="20" pos:column="47">malloc<pos:position pos:line="20" pos:column="53"/></name><argument_list pos:line="20" pos:column="53">(<argument><expr><sizeof pos:line="20" pos:column="54">sizeof<argument_list pos:line="20" pos:column="60">(<argument><expr><name><name pos:line="20" pos:column="61">flist<pos:position pos:line="20" pos:column="66"/></name><operator pos:line="20" pos:column="66">-&gt;<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="68">files<pos:position pos:line="20" pos:column="73"/></name><index pos:line="20" pos:column="73">[<expr><literal type="number" pos:line="20" pos:column="74">0<pos:position pos:line="20" pos:column="75"/></literal></expr>]<pos:position pos:line="20" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></sizeof><operator pos:line="20" pos:column="77">*<pos:position pos:line="20" pos:column="78"/></operator>
						     <name><name pos:line="21" pos:column="54">flist<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">malloced<pos:position pos:line="21" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">flist<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">files<pos:position pos:line="22" pos:column="26"/></name></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="28">out_of_memory<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><literal type="string" pos:line="22" pos:column="42">"send_file_list"<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt></block></then></if>

	<for pos:line="24" pos:column="9">for <control pos:line="24" pos:column="13">(<init><expr><name pos:line="24" pos:column="14">i<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></init><condition><expr><name pos:line="24" pos:column="18">i<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">argc<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></condition><incr><expr><name pos:line="24" pos:column="25">i<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">++<pos:position pos:line="24" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="29"/></control> <block pos:line="24" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="25" pos:column="17">char<pos:position pos:line="25" pos:column="21"/></name></type> <name><name pos:line="25" pos:column="22">fname2<pos:position pos:line="25" pos:column="28"/></name><index pos:line="25" pos:column="28">[<expr><name pos:line="25" pos:column="29">MAXPATHLEN<pos:position pos:line="25" pos:column="39"/></name></expr>]<pos:position pos:line="25" pos:column="40"/></index></name></decl>;<pos:position pos:line="25" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">char<pos:position pos:line="26" pos:column="21"/></name> <modifier pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></modifier></type><name pos:line="26" pos:column="23">fname<pos:position pos:line="26" pos:column="28"/></name> <init pos:line="26" pos:column="29">= <expr><name pos:line="26" pos:column="31">fname2<pos:position pos:line="26" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="28" pos:column="17">strncpy<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">fname<pos:position pos:line="28" pos:column="30"/></name></expr></argument>,<argument><expr><name><name pos:line="28" pos:column="31">argv<pos:position pos:line="28" pos:column="35"/></name><index pos:line="28" pos:column="35">[<expr><name pos:line="28" pos:column="36">i<pos:position pos:line="28" pos:column="37"/></name></expr>]<pos:position pos:line="28" pos:column="38"/></index></name></expr></argument>,<argument><expr><name pos:line="28" pos:column="39">MAXPATHLEN<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-<pos:position pos:line="28" pos:column="50"/></operator><literal type="number" pos:line="28" pos:column="50">1<pos:position pos:line="28" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">fname<pos:position pos:line="29" pos:column="22"/></name><index pos:line="29" pos:column="22">[<expr><name pos:line="29" pos:column="23">MAXPATHLEN<pos:position pos:line="29" pos:column="33"/></name><operator pos:line="29" pos:column="33">-<pos:position pos:line="29" pos:column="34"/></operator><literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal></expr>]<pos:position pos:line="29" pos:column="36"/></index></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="number" pos:line="29" pos:column="39">0<pos:position pos:line="29" pos:column="40"/></literal></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

		<expr_stmt><expr><name pos:line="31" pos:column="17">l<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">strlen<pos:position pos:line="31" pos:column="27"/></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">fname<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">l<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">!=<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal> <operator pos:line="32" pos:column="28">&amp;&amp;<pos:position pos:line="32" pos:column="38"/></operator> <name><name pos:line="32" pos:column="31">fname<pos:position pos:line="32" pos:column="36"/></name><index pos:line="32" pos:column="36">[<expr><name pos:line="32" pos:column="37">l<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-<pos:position pos:line="32" pos:column="39"/></operator><literal type="number" pos:line="32" pos:column="39">1<pos:position pos:line="32" pos:column="40"/></literal></expr>]<pos:position pos:line="32" pos:column="41"/></index></name> <operator pos:line="32" pos:column="42">==<pos:position pos:line="32" pos:column="44"/></operator> <literal type="char" pos:line="32" pos:column="45">'/'<pos:position pos:line="32" pos:column="48"/></literal></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49"> <block pos:line="32" pos:column="50">{
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">strcat<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">fname<pos:position pos:line="33" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="33" pos:column="38">"."<pos:position pos:line="33" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">link_stat<pos:position pos:line="36" pos:column="30"/></name><argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">fname<pos:position pos:line="36" pos:column="36"/></name></expr></argument>,<argument><expr><operator pos:line="36" pos:column="37">&amp;<pos:position pos:line="36" pos:column="42"/></operator><name pos:line="36" pos:column="38">st<pos:position pos:line="36" pos:column="40"/></name></expr></argument>)<pos:position pos:line="36" pos:column="41"/></argument_list></call> <operator pos:line="36" pos:column="42">!=<pos:position pos:line="36" pos:column="44"/></operator> <literal type="number" pos:line="36" pos:column="45">0<pos:position pos:line="36" pos:column="46"/></literal></expr>)<pos:position pos:line="36" pos:column="47"/></condition><then pos:line="36" pos:column="47"> <block pos:line="36" pos:column="48">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">io_error<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">=<pos:position pos:line="37" pos:column="34"/></operator><literal type="number" pos:line="37" pos:column="34">1<pos:position pos:line="37" pos:column="35"/></literal></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">fprintf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">FERROR<pos:position pos:line="38" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="38" pos:column="40">"%s : %s\n"<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>,<argument><expr><name pos:line="38" pos:column="52">fname<pos:position pos:line="38" pos:column="57"/></name></expr></argument>,<argument><expr><call><name pos:line="38" pos:column="58">strerror<pos:position pos:line="38" pos:column="66"/></name><argument_list pos:line="38" pos:column="66">(<argument><expr><name pos:line="38" pos:column="67">errno<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="75"/></expr_stmt>
			<continue pos:line="39" pos:column="25">continue;<pos:position pos:line="39" pos:column="34"/></continue>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>

		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><call><name pos:line="42" pos:column="21">S_ISDIR<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name><name pos:line="42" pos:column="29">st<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">.<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="32">st_mode<pos:position pos:line="42" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call> <operator pos:line="42" pos:column="41">&amp;&amp;<pos:position pos:line="42" pos:column="51"/></operator> <operator pos:line="42" pos:column="44">!<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">recurse<pos:position pos:line="42" pos:column="52"/></name></expr>)<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53"> <block pos:line="42" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">fprintf<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">FINFO<pos:position pos:line="43" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="43" pos:column="39">"skipping directory %s\n"<pos:position pos:line="43" pos:column="64"/></literal></expr></argument>,<argument><expr><name pos:line="43" pos:column="65">fname<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="72"/></expr_stmt>
			<continue pos:line="44" pos:column="25">continue;<pos:position pos:line="44" pos:column="34"/></continue>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="47" pos:column="17">dir<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name pos:line="47" pos:column="23">NULL<pos:position pos:line="47" pos:column="27"/></name></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>

		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">relative_paths<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37"> <block pos:line="49" pos:column="38">{
			<expr_stmt><expr><name pos:line="50" pos:column="25">p<pos:position pos:line="50" pos:column="26"/></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <call><name pos:line="50" pos:column="29">strrchr<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name pos:line="50" pos:column="37">fname<pos:position pos:line="50" pos:column="42"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="50" pos:column="43">'/'<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="48"/></expr_stmt>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name pos:line="51" pos:column="29">p<pos:position pos:line="51" pos:column="30"/></name></expr>)<pos:position pos:line="51" pos:column="31"/></condition><then pos:line="51" pos:column="31"> <block pos:line="51" pos:column="32">{
				<expr_stmt><expr><operator pos:line="52" pos:column="33">*<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">p<pos:position pos:line="52" pos:column="35"/></name> <operator pos:line="52" pos:column="36">=<pos:position pos:line="52" pos:column="37"/></operator> <literal type="number" pos:line="52" pos:column="38">0<pos:position pos:line="52" pos:column="39"/></literal></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
				<if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><name pos:line="53" pos:column="37">p<pos:position pos:line="53" pos:column="38"/></name> <operator pos:line="53" pos:column="39">==<pos:position pos:line="53" pos:column="41"/></operator> <name pos:line="53" pos:column="42">fname<pos:position pos:line="53" pos:column="47"/></name></expr>)<pos:position pos:line="53" pos:column="48"/></condition><then pos:line="53" pos:column="48"> 
					<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="41">dir<pos:position pos:line="54" pos:column="44"/></name> <operator pos:line="54" pos:column="45">=<pos:position pos:line="54" pos:column="46"/></operator> <literal type="string" pos:line="54" pos:column="47">"/"<pos:position pos:line="54" pos:column="50"/></literal></expr>;<pos:position pos:line="54" pos:column="51"/></expr_stmt></block></then>
				<else pos:line="55" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="41">dir<pos:position pos:line="56" pos:column="44"/></name> <operator pos:line="56" pos:column="45">=<pos:position pos:line="56" pos:column="46"/></operator> <name pos:line="56" pos:column="47">fname<pos:position pos:line="56" pos:column="52"/></name></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt></block></else></if>      
				<expr_stmt><expr><name pos:line="57" pos:column="33">fname<pos:position pos:line="57" pos:column="38"/></name> <operator pos:line="57" pos:column="39">=<pos:position pos:line="57" pos:column="40"/></operator> <name pos:line="57" pos:column="41">p<pos:position pos:line="57" pos:column="42"/></name><operator pos:line="57" pos:column="42">+<pos:position pos:line="57" pos:column="43"/></operator><literal type="number" pos:line="57" pos:column="43">1<pos:position pos:line="57" pos:column="44"/></literal></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>      
			}<pos:position pos:line="58" pos:column="26"/></block></then></if>
		}<pos:position pos:line="59" pos:column="18"/></block></then> <elseif pos:line="59" pos:column="19">else <if pos:line="59" pos:column="24">if <condition pos:line="59" pos:column="27">(<expr><name pos:line="59" pos:column="28">f<pos:position pos:line="59" pos:column="29"/></name> <operator pos:line="59" pos:column="30">!=<pos:position pos:line="59" pos:column="32"/></operator> <operator pos:line="59" pos:column="33">-<pos:position pos:line="59" pos:column="34"/></operator><literal type="number" pos:line="59" pos:column="34">1<pos:position pos:line="59" pos:column="35"/></literal> <operator pos:line="59" pos:column="36">&amp;&amp;<pos:position pos:line="59" pos:column="46"/></operator> <operator pos:line="59" pos:column="39">(<pos:position pos:line="59" pos:column="40"/></operator><name pos:line="59" pos:column="40">p<pos:position pos:line="59" pos:column="41"/></name><operator pos:line="59" pos:column="41">=<pos:position pos:line="59" pos:column="42"/></operator><call><name pos:line="59" pos:column="42">strrchr<pos:position pos:line="59" pos:column="49"/></name><argument_list pos:line="59" pos:column="49">(<argument><expr><name pos:line="59" pos:column="50">fname<pos:position pos:line="59" pos:column="55"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="59" pos:column="56">'/'<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="60"/></argument_list></call><operator pos:line="59" pos:column="60">)<pos:position pos:line="59" pos:column="61"/></operator></expr>)<pos:position pos:line="59" pos:column="62"/></condition><then pos:line="59" pos:column="62"> <block pos:line="59" pos:column="63">{
			<comment type="block" pos:line="60" pos:column="25">/* this ensures we send the intermediate directories,
			   thus getting their permissions right */</comment>
			<expr_stmt><expr><operator pos:line="62" pos:column="25">*<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">p<pos:position pos:line="62" pos:column="27"/></name> <operator pos:line="62" pos:column="28">=<pos:position pos:line="62" pos:column="29"/></operator> <literal type="number" pos:line="62" pos:column="30">0<pos:position pos:line="62" pos:column="31"/></literal></expr>;<pos:position pos:line="62" pos:column="32"/></expr_stmt>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><call><name pos:line="63" pos:column="29">strcmp<pos:position pos:line="63" pos:column="35"/></name><argument_list pos:line="63" pos:column="35">(<argument><expr><name pos:line="63" pos:column="36">lastpath<pos:position pos:line="63" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="63" pos:column="45">fname<pos:position pos:line="63" pos:column="50"/></name></expr></argument>)<pos:position pos:line="63" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="52"/></condition><then pos:line="63" pos:column="52"> <block pos:line="63" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="64" pos:column="33">strcpy<pos:position pos:line="64" pos:column="39"/></name><argument_list pos:line="64" pos:column="39">(<argument><expr><name pos:line="64" pos:column="40">lastpath<pos:position pos:line="64" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="50">fname<pos:position pos:line="64" pos:column="55"/></name></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="65" pos:column="33">*<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">p<pos:position pos:line="65" pos:column="35"/></name> <operator pos:line="65" pos:column="36">=<pos:position pos:line="65" pos:column="37"/></operator> <literal type="char" pos:line="65" pos:column="38">'/'<pos:position pos:line="65" pos:column="41"/></literal></expr>;<pos:position pos:line="65" pos:column="42"/></expr_stmt>
				<for pos:line="66" pos:column="33">for <control pos:line="66" pos:column="37">(<init><expr><name pos:line="66" pos:column="38">p<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">=<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="40">fname<pos:position pos:line="66" pos:column="45"/></name><operator pos:line="66" pos:column="45">+<pos:position pos:line="66" pos:column="46"/></operator><literal type="number" pos:line="66" pos:column="46">1<pos:position pos:line="66" pos:column="47"/></literal></expr>;<pos:position pos:line="66" pos:column="48"/></init> <condition><expr><operator pos:line="66" pos:column="49">(<pos:position pos:line="66" pos:column="50"/></operator><name pos:line="66" pos:column="50">p<pos:position pos:line="66" pos:column="51"/></name><operator pos:line="66" pos:column="51">=<pos:position pos:line="66" pos:column="52"/></operator><call><name pos:line="66" pos:column="52">strchr<pos:position pos:line="66" pos:column="58"/></name><argument_list pos:line="66" pos:column="58">(<argument><expr><name pos:line="66" pos:column="59">p<pos:position pos:line="66" pos:column="60"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="66" pos:column="61">'/'<pos:position pos:line="66" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="65"/></argument_list></call><operator pos:line="66" pos:column="65">)<pos:position pos:line="66" pos:column="66"/></operator></expr>;<pos:position pos:line="66" pos:column="67"/></condition> <incr><expr><name pos:line="66" pos:column="68">p<pos:position pos:line="66" pos:column="69"/></name><operator pos:line="66" pos:column="69">++<pos:position pos:line="66" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="72"/></control> <block pos:line="66" pos:column="73">{
					<expr_stmt><expr><operator pos:line="67" pos:column="41">*<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">p<pos:position pos:line="67" pos:column="43"/></name> <operator pos:line="67" pos:column="44">=<pos:position pos:line="67" pos:column="45"/></operator> <literal type="number" pos:line="67" pos:column="46">0<pos:position pos:line="67" pos:column="47"/></literal></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="68" pos:column="41">send_file_name<pos:position pos:line="68" pos:column="55"/></name><argument_list pos:line="68" pos:column="55">(<argument><expr><name pos:line="68" pos:column="56">f<pos:position pos:line="68" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="59">flist<pos:position pos:line="68" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="66">fname<pos:position pos:line="68" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="73">0<pos:position pos:line="68" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="76">0<pos:position pos:line="68" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="79"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="69" pos:column="41">*<pos:position pos:line="69" pos:column="42"/></operator><name pos:line="69" pos:column="42">p<pos:position pos:line="69" pos:column="43"/></name> <operator pos:line="69" pos:column="44">=<pos:position pos:line="69" pos:column="45"/></operator> <literal type="char" pos:line="69" pos:column="46">'/'<pos:position pos:line="69" pos:column="49"/></literal></expr>;<pos:position pos:line="69" pos:column="50"/></expr_stmt>
				}<pos:position pos:line="70" pos:column="34"/></block></for>
			}<pos:position pos:line="71" pos:column="26"/></block></then> <else pos:line="71" pos:column="27">else <block pos:line="71" pos:column="32">{
				<expr_stmt><expr><operator pos:line="72" pos:column="33">*<pos:position pos:line="72" pos:column="34"/></operator><name pos:line="72" pos:column="34">p<pos:position pos:line="72" pos:column="35"/></name> <operator pos:line="72" pos:column="36">=<pos:position pos:line="72" pos:column="37"/></operator> <literal type="char" pos:line="72" pos:column="38">'/'<pos:position pos:line="72" pos:column="41"/></literal></expr>;<pos:position pos:line="72" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="73" pos:column="26"/></block></else></if>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if></elseif></if>
		
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><operator pos:line="76" pos:column="21">!<pos:position pos:line="76" pos:column="22"/></operator><operator pos:line="76" pos:column="22">*<pos:position pos:line="76" pos:column="23"/></operator><name pos:line="76" pos:column="23">fname<pos:position pos:line="76" pos:column="28"/></name></expr>)<pos:position pos:line="76" pos:column="29"/></condition><then pos:line="76" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="25">fname<pos:position pos:line="77" pos:column="30"/></name> <operator pos:line="77" pos:column="31">=<pos:position pos:line="77" pos:column="32"/></operator> <literal type="string" pos:line="77" pos:column="33">"."<pos:position pos:line="77" pos:column="36"/></literal></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt></block></then></if>
		
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">dir<pos:position pos:line="79" pos:column="24"/></name> <operator pos:line="79" pos:column="25">&amp;&amp;<pos:position pos:line="79" pos:column="35"/></operator> <operator pos:line="79" pos:column="28">*<pos:position pos:line="79" pos:column="29"/></operator><name pos:line="79" pos:column="29">dir<pos:position pos:line="79" pos:column="32"/></name></expr>)<pos:position pos:line="79" pos:column="33"/></condition><then pos:line="79" pos:column="33"> <block pos:line="79" pos:column="34">{
			<if pos:line="80" pos:column="25">if <condition pos:line="80" pos:column="28">(<expr><call><name pos:line="80" pos:column="29">getcwd<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><name pos:line="80" pos:column="36">dbuf<pos:position pos:line="80" pos:column="40"/></name></expr></argument>,<argument><expr><name pos:line="80" pos:column="41">MAXPATHLEN<pos:position pos:line="80" pos:column="51"/></name><operator pos:line="80" pos:column="51">-<pos:position pos:line="80" pos:column="52"/></operator><literal type="number" pos:line="80" pos:column="52">1<pos:position pos:line="80" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="54"/></argument_list></call> <operator pos:line="80" pos:column="55">==<pos:position pos:line="80" pos:column="57"/></operator> <name pos:line="80" pos:column="58">NULL<pos:position pos:line="80" pos:column="62"/></name></expr>)<pos:position pos:line="80" pos:column="63"/></condition><then pos:line="80" pos:column="63"> <block pos:line="80" pos:column="64">{
				<expr_stmt><expr><call><name pos:line="81" pos:column="33">fprintf<pos:position pos:line="81" pos:column="40"/></name><argument_list pos:line="81" pos:column="40">(<argument><expr><name pos:line="81" pos:column="41">FERROR<pos:position pos:line="81" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="81" pos:column="48">"getwd : %s\n"<pos:position pos:line="81" pos:column="62"/></literal></expr></argument>,<argument><expr><call><name pos:line="81" pos:column="63">strerror<pos:position pos:line="81" pos:column="71"/></name><argument_list pos:line="81" pos:column="71">(<argument><expr><name pos:line="81" pos:column="72">errno<pos:position pos:line="81" pos:column="77"/></name></expr></argument>)<pos:position pos:line="81" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="80"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="82" pos:column="33">exit_cleanup<pos:position pos:line="82" pos:column="45"/></name><argument_list pos:line="82" pos:column="45">(<argument><expr><literal type="number" pos:line="82" pos:column="46">1<pos:position pos:line="82" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="83" pos:column="26"/></block></then></if>
			<if pos:line="84" pos:column="25">if <condition pos:line="84" pos:column="28">(<expr><call><name pos:line="84" pos:column="29">chdir<pos:position pos:line="84" pos:column="34"/></name><argument_list pos:line="84" pos:column="34">(<argument><expr><name pos:line="84" pos:column="35">dir<pos:position pos:line="84" pos:column="38"/></name></expr></argument>)<pos:position pos:line="84" pos:column="39"/></argument_list></call> <operator pos:line="84" pos:column="40">!=<pos:position pos:line="84" pos:column="42"/></operator> <literal type="number" pos:line="84" pos:column="43">0<pos:position pos:line="84" pos:column="44"/></literal></expr>)<pos:position pos:line="84" pos:column="45"/></condition><then pos:line="84" pos:column="45"> <block pos:line="84" pos:column="46">{
				<expr_stmt><expr><name pos:line="85" pos:column="33">io_error<pos:position pos:line="85" pos:column="41"/></name><operator pos:line="85" pos:column="41">=<pos:position pos:line="85" pos:column="42"/></operator><literal type="number" pos:line="85" pos:column="42">1<pos:position pos:line="85" pos:column="43"/></literal></expr>;<pos:position pos:line="85" pos:column="44"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="86" pos:column="33">fprintf<pos:position pos:line="86" pos:column="40"/></name><argument_list pos:line="86" pos:column="40">(<argument><expr><name pos:line="86" pos:column="41">FERROR<pos:position pos:line="86" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="86" pos:column="48">"chdir %s : %s\n"<pos:position pos:line="86" pos:column="65"/></literal></expr></argument>,
					<argument><expr><name pos:line="87" pos:column="41">dir<pos:position pos:line="87" pos:column="44"/></name></expr></argument>,<argument><expr><call><name pos:line="87" pos:column="45">strerror<pos:position pos:line="87" pos:column="53"/></name><argument_list pos:line="87" pos:column="53">(<argument><expr><name pos:line="87" pos:column="54">errno<pos:position pos:line="87" pos:column="59"/></name></expr></argument>)<pos:position pos:line="87" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="62"/></expr_stmt>
				<continue pos:line="88" pos:column="33">continue;<pos:position pos:line="88" pos:column="42"/></continue>
			}<pos:position pos:line="89" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="90" pos:column="25">flist_dir<pos:position pos:line="90" pos:column="34"/></name> <operator pos:line="90" pos:column="35">=<pos:position pos:line="90" pos:column="36"/></operator> <name pos:line="90" pos:column="37">dir<pos:position pos:line="90" pos:column="40"/></name></expr>;<pos:position pos:line="90" pos:column="41"/></expr_stmt>
			<if pos:line="91" pos:column="25">if <condition pos:line="91" pos:column="28">(<expr><name pos:line="91" pos:column="29">one_file_system<pos:position pos:line="91" pos:column="44"/></name></expr>)<pos:position pos:line="91" pos:column="45"/></condition><then pos:line="91" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="33">set_filesystem<pos:position pos:line="92" pos:column="47"/></name><argument_list pos:line="92" pos:column="47">(<argument><expr><name pos:line="92" pos:column="48">fname<pos:position pos:line="92" pos:column="53"/></name></expr></argument>)<pos:position pos:line="92" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="55"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="93" pos:column="25">send_file_name<pos:position pos:line="93" pos:column="39"/></name><argument_list pos:line="93" pos:column="39">(<argument><expr><name pos:line="93" pos:column="40">f<pos:position pos:line="93" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="93" pos:column="42">flist<pos:position pos:line="93" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="93" pos:column="48">fname<pos:position pos:line="93" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="93" pos:column="54">recurse<pos:position pos:line="93" pos:column="61"/></name></expr></argument>,<argument><expr><name pos:line="93" pos:column="62">FLAG_DELETE<pos:position pos:line="93" pos:column="73"/></name></expr></argument>)<pos:position pos:line="93" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><name pos:line="94" pos:column="25">flist_dir<pos:position pos:line="94" pos:column="34"/></name> <operator pos:line="94" pos:column="35">=<pos:position pos:line="94" pos:column="36"/></operator> <name pos:line="94" pos:column="37">NULL<pos:position pos:line="94" pos:column="41"/></name></expr>;<pos:position pos:line="94" pos:column="42"/></expr_stmt>
			<if pos:line="95" pos:column="25">if <condition pos:line="95" pos:column="28">(<expr><call><name pos:line="95" pos:column="29">chdir<pos:position pos:line="95" pos:column="34"/></name><argument_list pos:line="95" pos:column="34">(<argument><expr><name pos:line="95" pos:column="35">dbuf<pos:position pos:line="95" pos:column="39"/></name></expr></argument>)<pos:position pos:line="95" pos:column="40"/></argument_list></call> <operator pos:line="95" pos:column="41">!=<pos:position pos:line="95" pos:column="43"/></operator> <literal type="number" pos:line="95" pos:column="44">0<pos:position pos:line="95" pos:column="45"/></literal></expr>)<pos:position pos:line="95" pos:column="46"/></condition><then pos:line="95" pos:column="46"> <block pos:line="95" pos:column="47">{
				<expr_stmt><expr><call><name pos:line="96" pos:column="33">fprintf<pos:position pos:line="96" pos:column="40"/></name><argument_list pos:line="96" pos:column="40">(<argument><expr><name pos:line="96" pos:column="41">FERROR<pos:position pos:line="96" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="96" pos:column="48">"chdir %s : %s\n"<pos:position pos:line="96" pos:column="65"/></literal></expr></argument>,
					<argument><expr><name pos:line="97" pos:column="41">dbuf<pos:position pos:line="97" pos:column="45"/></name></expr></argument>,<argument><expr><call><name pos:line="97" pos:column="46">strerror<pos:position pos:line="97" pos:column="54"/></name><argument_list pos:line="97" pos:column="54">(<argument><expr><name pos:line="97" pos:column="55">errno<pos:position pos:line="97" pos:column="60"/></name></expr></argument>)<pos:position pos:line="97" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="97" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="98" pos:column="33">exit_cleanup<pos:position pos:line="98" pos:column="45"/></name><argument_list pos:line="98" pos:column="45">(<argument><expr><literal type="number" pos:line="98" pos:column="46">1<pos:position pos:line="98" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="99" pos:column="26"/></block></then></if>
			<continue pos:line="100" pos:column="25">continue;<pos:position pos:line="100" pos:column="34"/></continue>
		}<pos:position pos:line="101" pos:column="18"/></block></then></if>
		
		<if pos:line="103" pos:column="17">if <condition pos:line="103" pos:column="20">(<expr><name pos:line="103" pos:column="21">one_file_system<pos:position pos:line="103" pos:column="36"/></name></expr>)<pos:position pos:line="103" pos:column="37"/></condition><then pos:line="103" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="25">set_filesystem<pos:position pos:line="104" pos:column="39"/></name><argument_list pos:line="104" pos:column="39">(<argument><expr><name pos:line="104" pos:column="40">fname<pos:position pos:line="104" pos:column="45"/></name></expr></argument>)<pos:position pos:line="104" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">send_file_name<pos:position pos:line="105" pos:column="31"/></name><argument_list pos:line="105" pos:column="31">(<argument><expr><name pos:line="105" pos:column="32">f<pos:position pos:line="105" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="105" pos:column="34">flist<pos:position pos:line="105" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="105" pos:column="40">fname<pos:position pos:line="105" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="105" pos:column="46">recurse<pos:position pos:line="105" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="105" pos:column="54">FLAG_DELETE<pos:position pos:line="105" pos:column="65"/></name></expr></argument>)<pos:position pos:line="105" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="106" pos:column="10"/></block></for>

	<if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">f<pos:position pos:line="108" pos:column="14"/></name> <operator pos:line="108" pos:column="15">!=<pos:position pos:line="108" pos:column="17"/></operator> <operator pos:line="108" pos:column="18">-<pos:position pos:line="108" pos:column="19"/></operator><literal type="number" pos:line="108" pos:column="19">1<pos:position pos:line="108" pos:column="20"/></literal></expr>)<pos:position pos:line="108" pos:column="21"/></condition><then pos:line="108" pos:column="21"> <block pos:line="108" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="109" pos:column="17">send_file_entry<pos:position pos:line="109" pos:column="32"/></name><argument_list pos:line="109" pos:column="32">(<argument><expr><name pos:line="109" pos:column="33">NULL<pos:position pos:line="109" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="109" pos:column="38">f<pos:position pos:line="109" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="109" pos:column="40">0<pos:position pos:line="109" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="110" pos:column="17">write_flush<pos:position pos:line="110" pos:column="28"/></name><argument_list pos:line="110" pos:column="28">(<argument><expr><name pos:line="110" pos:column="29">f<pos:position pos:line="110" pos:column="30"/></name></expr></argument>)<pos:position pos:line="110" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="111" pos:column="10"/></block></then></if>

	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name pos:line="113" pos:column="13">verbose<pos:position pos:line="113" pos:column="20"/></name> <operator pos:line="113" pos:column="21">&amp;&amp;<pos:position pos:line="113" pos:column="31"/></operator> <name pos:line="113" pos:column="24">recurse<pos:position pos:line="113" pos:column="31"/></name> <operator pos:line="113" pos:column="32">&amp;&amp;<pos:position pos:line="113" pos:column="42"/></operator> <operator pos:line="113" pos:column="35">!<pos:position pos:line="113" pos:column="36"/></operator><name pos:line="113" pos:column="36">am_server<pos:position pos:line="113" pos:column="45"/></name> <operator pos:line="113" pos:column="46">&amp;&amp;<pos:position pos:line="113" pos:column="56"/></operator> <name pos:line="113" pos:column="49">f<pos:position pos:line="113" pos:column="50"/></name> <operator pos:line="113" pos:column="51">!=<pos:position pos:line="113" pos:column="53"/></operator> <operator pos:line="113" pos:column="54">-<pos:position pos:line="113" pos:column="55"/></operator><literal type="number" pos:line="113" pos:column="55">1<pos:position pos:line="113" pos:column="56"/></literal></expr>)<pos:position pos:line="113" pos:column="57"/></condition><then pos:line="113" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="17">fprintf<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name pos:line="114" pos:column="25">FINFO<pos:position pos:line="114" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="114" pos:column="31">"done\n"<pos:position pos:line="114" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="41"/></expr_stmt></block></then></if>
	
	<expr_stmt><expr><call><name pos:line="116" pos:column="9">clean_flist<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><name pos:line="116" pos:column="21">flist<pos:position pos:line="116" pos:column="26"/></name></expr></argument>)<pos:position pos:line="116" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="28"/></expr_stmt>
	
	<comment type="block" pos:line="118" pos:column="9">/* now send the uid/gid list. This was introduced in protocol
           version 15 */</comment>
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">f<pos:position pos:line="120" pos:column="14"/></name> <operator pos:line="120" pos:column="15">!=<pos:position pos:line="120" pos:column="17"/></operator> <operator pos:line="120" pos:column="18">-<pos:position pos:line="120" pos:column="19"/></operator><literal type="number" pos:line="120" pos:column="19">1<pos:position pos:line="120" pos:column="20"/></literal> <operator pos:line="120" pos:column="21">&amp;&amp;<pos:position pos:line="120" pos:column="31"/></operator> <name pos:line="120" pos:column="24">remote_version<pos:position pos:line="120" pos:column="38"/></name> <operator pos:line="120" pos:column="39">&gt;=<pos:position pos:line="120" pos:column="44"/></operator> <literal type="number" pos:line="120" pos:column="42">15<pos:position pos:line="120" pos:column="44"/></literal></expr>)<pos:position pos:line="120" pos:column="45"/></condition><then pos:line="120" pos:column="45"> <block pos:line="120" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="121" pos:column="17">send_uid_list<pos:position pos:line="121" pos:column="30"/></name><argument_list pos:line="121" pos:column="30">(<argument><expr><name pos:line="121" pos:column="31">f<pos:position pos:line="121" pos:column="32"/></name></expr></argument>)<pos:position pos:line="121" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="122" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="124" pos:column="9">/* if protocol version is &gt;= 17 then send the io_error flag */</comment>
	<if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><name pos:line="125" pos:column="13">f<pos:position pos:line="125" pos:column="14"/></name> <operator pos:line="125" pos:column="15">!=<pos:position pos:line="125" pos:column="17"/></operator> <operator pos:line="125" pos:column="18">-<pos:position pos:line="125" pos:column="19"/></operator><literal type="number" pos:line="125" pos:column="19">1<pos:position pos:line="125" pos:column="20"/></literal> <operator pos:line="125" pos:column="21">&amp;&amp;<pos:position pos:line="125" pos:column="31"/></operator> <name pos:line="125" pos:column="24">remote_version<pos:position pos:line="125" pos:column="38"/></name> <operator pos:line="125" pos:column="39">&gt;=<pos:position pos:line="125" pos:column="44"/></operator> <literal type="number" pos:line="125" pos:column="42">17<pos:position pos:line="125" pos:column="44"/></literal></expr>)<pos:position pos:line="125" pos:column="45"/></condition><then pos:line="125" pos:column="45"> <block pos:line="125" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="126" pos:column="17">write_int<pos:position pos:line="126" pos:column="26"/></name><argument_list pos:line="126" pos:column="26">(<argument><expr><name pos:line="126" pos:column="27">f<pos:position pos:line="126" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="30">io_error<pos:position pos:line="126" pos:column="38"/></name></expr></argument>)<pos:position pos:line="126" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>

	<if pos:line="129" pos:column="9">if <condition pos:line="129" pos:column="12">(<expr><name pos:line="129" pos:column="13">verbose<pos:position pos:line="129" pos:column="20"/></name> <operator pos:line="129" pos:column="21">&gt;<pos:position pos:line="129" pos:column="25"/></operator> <literal type="number" pos:line="129" pos:column="23">2<pos:position pos:line="129" pos:column="24"/></literal></expr>)<pos:position pos:line="129" pos:column="25"/></condition><then pos:line="129" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="17">fprintf<pos:position pos:line="130" pos:column="24"/></name><argument_list pos:line="130" pos:column="24">(<argument><expr><name pos:line="130" pos:column="25">FINFO<pos:position pos:line="130" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="130" pos:column="31">"send_file_list done\n"<pos:position pos:line="130" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="56"/></expr_stmt></block></then></if>

	<return pos:line="132" pos:column="9">return <expr><name pos:line="132" pos:column="16">flist<pos:position pos:line="132" pos:column="21"/></name></expr>;<pos:position pos:line="132" pos:column="22"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

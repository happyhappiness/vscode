<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_748.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">flist_new<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">with_hlink<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">msg<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">file_list<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">flist<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">flist<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <operator pos:line="5" pos:column="17">new<pos:position pos:line="5" pos:column="20"/></operator><operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator>struct <name pos:line="5" pos:column="28">file_list<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">flist<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">out_of_memory<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">msg<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">flist<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof <argument_list pos:line="9" pos:column="33">(<argument><expr pos:line="9" pos:column="34">struct <name pos:line="9" pos:column="41">file_list<pos:position pos:line="9" pos:column="50"/></name></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name><name pos:line="11" pos:column="15">flist<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">file_pool<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <call><name pos:line="11" pos:column="34">pool_create<pos:position pos:line="11" pos:column="45"/></name><argument_list pos:line="11" pos:column="45">(<argument><expr><name pos:line="11" pos:column="46">FILE_EXTENT<pos:position pos:line="11" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="59">0<pos:position pos:line="11" pos:column="60"/></literal></expr></argument>,
	    <argument><expr><name pos:line="12" pos:column="13">out_of_memory<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">POOL_INTERN<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call><operator pos:line="12" pos:column="40">)<pos:position pos:line="12" pos:column="41"/></operator></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">out_of_memory<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">msg<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt></block></then></if>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">SUPPORT_HARD_LINKS<pos:position pos:line="15" pos:column="23"/></name></expr></cpp:if>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">with_hlink<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&amp;&amp;<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="27">preserve_hard_links<pos:position pos:line="16" pos:column="46"/></name></expr>)<pos:position pos:line="16" pos:column="47"/></condition><then pos:line="16" pos:column="47"> <block pos:line="16" pos:column="48">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name><name pos:line="17" pos:column="23">flist<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">hlink_pool<pos:position pos:line="17" pos:column="40"/></name></name> <operator pos:line="17" pos:column="41">=<pos:position pos:line="17" pos:column="42"/></operator> <call><name pos:line="17" pos:column="43">pool_create<pos:position pos:line="17" pos:column="54"/></name><argument_list pos:line="17" pos:column="54">(<argument><expr><name pos:line="17" pos:column="55">HLINK_EXTENT<pos:position pos:line="17" pos:column="67"/></name></expr></argument>,
		    <argument><expr><sizeof pos:line="18" pos:column="21">sizeof <argument_list pos:line="18" pos:column="28">(<argument><expr pos:line="18" pos:column="29">struct <name pos:line="18" pos:column="36">idev<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">out_of_memory<pos:position pos:line="18" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="58">POOL_INTERN<pos:position pos:line="18" pos:column="69"/></name></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call><operator pos:line="18" pos:column="70">)<pos:position pos:line="18" pos:column="71"/></operator></expr>)<pos:position pos:line="18" pos:column="72"/></condition><then pos:line="18" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">out_of_memory<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">msg<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">flist<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

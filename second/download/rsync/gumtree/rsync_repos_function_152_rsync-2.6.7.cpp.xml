<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_152_rsync-2.6.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">write_stream_flags<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">fd<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">flags<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">Z_DEFAULT_COMPRESSION<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">==<pos:position pos:line="5" pos:column="29"/></operator> <operator pos:line="5" pos:column="30">-<pos:position pos:line="5" pos:column="31"/></operator><literal type="number" pos:line="5" pos:column="31">1<pos:position pos:line="5" pos:column="32"/></literal></expr></cpp:if>
	<expr_stmt><expr><name pos:line="6" pos:column="9">tweaked_compress_level<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">=<pos:position pos:line="6" pos:column="33"/></operator> <ternary><condition><expr><name pos:line="6" pos:column="34">do_compression<pos:position pos:line="6" pos:column="48"/></name></expr> ?<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50"> <expr><name pos:line="6" pos:column="51">def_compress_level<pos:position pos:line="6" pos:column="69"/></name> <operator pos:line="6" pos:column="70">+<pos:position pos:line="6" pos:column="71"/></operator> <literal type="number" pos:line="6" pos:column="72">2<pos:position pos:line="6" pos:column="73"/></literal></expr> <pos:position pos:line="6" pos:column="74"/></then><else pos:line="6" pos:column="74">: <expr><literal type="number" pos:line="6" pos:column="76">0<pos:position pos:line="6" pos:column="77"/></literal></expr></else></ternary></expr>;<pos:position pos:line="6" pos:column="78"/></expr_stmt>
<cpp:else pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">else<pos:position pos:line="7" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">error<pos:position pos:line="8" pos:column="7"/></cpp:directive> internal logic error!  Fix def_compress_level logic above and below too!<pos:position pos:line="8" pos:column="80"/></cpp:error>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="11" pos:column="9">/* Start the batch file with a bitmap of data-stream-affecting
	 * flags. */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">protocol_version<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">&lt;<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="32">29<pos:position pos:line="13" pos:column="34"/></literal></expr>)<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="17">flag_ptr<pos:position pos:line="14" pos:column="25"/></name><index pos:line="14" pos:column="25">[<expr><literal type="number" pos:line="14" pos:column="26">7<pos:position pos:line="14" pos:column="27"/></literal></expr>]<pos:position pos:line="14" pos:column="28"/></index></name> <operator pos:line="14" pos:column="29">=<pos:position pos:line="14" pos:column="30"/></operator> <name pos:line="14" pos:column="31">NULL<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt></block></then></if>
	<for pos:line="15" pos:column="9">for <control pos:line="15" pos:column="13">(<init><expr><name pos:line="15" pos:column="14">i<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr><operator pos:line="15" pos:column="19">,<pos:position pos:line="15" pos:column="20"/></operator> <expr><name pos:line="15" pos:column="21">flags<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr>;<pos:position pos:line="15" pos:column="31"/></init> <condition><expr><name><name pos:line="15" pos:column="32">flag_ptr<pos:position pos:line="15" pos:column="40"/></name><index pos:line="15" pos:column="40">[<expr><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name></expr>]<pos:position pos:line="15" pos:column="43"/></index></name></expr>;<pos:position pos:line="15" pos:column="44"/></condition> <incr><expr><name pos:line="15" pos:column="45">i<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">++<pos:position pos:line="15" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="49"/></control> <block pos:line="15" pos:column="50">{
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">*<pos:position pos:line="16" pos:column="22"/></operator><name><name pos:line="16" pos:column="22">flag_ptr<pos:position pos:line="16" pos:column="30"/></name><index pos:line="16" pos:column="30">[<expr><name pos:line="16" pos:column="31">i<pos:position pos:line="16" pos:column="32"/></name></expr>]<pos:position pos:line="16" pos:column="33"/></index></name></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">flags<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">|=<pos:position pos:line="17" pos:column="33"/></operator> <literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal> <operator pos:line="17" pos:column="36">&lt;&lt;<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="39">i<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">write_int<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">fd<pos:position pos:line="19" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="23">flags<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_309_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">file_struct<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">find_fuzzy<pos:position pos:line="1" pos:column="38"/></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">file_struct<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">file<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="65">struct<pos:position pos:line="1" pos:column="71"/></name> <name pos:line="1" pos:column="72">file_list<pos:position pos:line="1" pos:column="81"/></name></name> <modifier pos:line="1" pos:column="82">*<pos:position pos:line="1" pos:column="83"/></modifier></type><name><name pos:line="1" pos:column="83">dirlist_array<pos:position pos:line="1" pos:column="96"/></name><index pos:line="1" pos:column="96">[]<pos:position pos:line="1" pos:column="98"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="100">uchar<pos:position pos:line="1" pos:column="105"/></name> <modifier pos:line="1" pos:column="106">*<pos:position pos:line="1" pos:column="107"/></modifier></type><name pos:line="1" pos:column="107">fnamecmp_type_ptr<pos:position pos:line="1" pos:column="124"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="125"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fname_len<pos:position pos:line="3" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="24">fname_suf_len<pos:position pos:line="3" pos:column="37"/></name></decl>;<pos:position pos:line="3" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">fname_suf<pos:position pos:line="4" pos:column="30"/></name></decl>, <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="33">fname<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><name><name pos:line="4" pos:column="41">file<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">basename<pos:position pos:line="4" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uint32<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">lowest_dist<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">25<pos:position pos:line="5" pos:column="32"/></literal> <operator pos:line="5" pos:column="33">&lt;&lt;<pos:position pos:line="5" pos:column="41"/></operator> <literal type="number" pos:line="5" pos:column="36">16<pos:position pos:line="5" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt> <comment type="block" pos:line="5" pos:column="40">/* ignore a distance greater than 25 */</comment>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">i<pos:position pos:line="6" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="16">j<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">file_struct<pos:position pos:line="7" pos:column="27"/></name></name> <modifier pos:line="7" pos:column="28">*<pos:position pos:line="7" pos:column="29"/></modifier></type><name pos:line="7" pos:column="29">lowest_fp<pos:position pos:line="7" pos:column="38"/></name> <init pos:line="7" pos:column="39">= <expr><name pos:line="7" pos:column="41">NULL<pos:position pos:line="7" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">fname_len<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <call><name pos:line="9" pos:column="21">strlen<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">fname<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">fname_suf<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">find_filename_suffix<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">fname<pos:position pos:line="10" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">fname_len<pos:position pos:line="10" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="60">&amp;<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="61">fname_suf_len<pos:position pos:line="10" pos:column="74"/></name></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Try to find an exact size+mtime match first. */</comment>
	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="25">fuzzy_basis<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></condition> <incr><expr><name pos:line="13" pos:column="38">i<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">++<pos:position pos:line="13" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="42"/></control> <block pos:line="13" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="14" pos:column="17">struct<pos:position pos:line="14" pos:column="23"/></name> <name pos:line="14" pos:column="24">file_list<pos:position pos:line="14" pos:column="33"/></name></name> <modifier pos:line="14" pos:column="34">*<pos:position pos:line="14" pos:column="35"/></modifier></type><name pos:line="14" pos:column="35">dirlist<pos:position pos:line="14" pos:column="42"/></name> <init pos:line="14" pos:column="43">= <expr><name><name pos:line="14" pos:column="45">dirlist_array<pos:position pos:line="14" pos:column="58"/></name><index pos:line="14" pos:column="58">[<expr><name pos:line="14" pos:column="59">i<pos:position pos:line="14" pos:column="60"/></name></expr>]<pos:position pos:line="14" pos:column="61"/></index></name></expr></init></decl>;<pos:position pos:line="14" pos:column="62"/></decl_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">dirlist<pos:position pos:line="16" pos:column="29"/></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
			<block type="pseudo"><continue pos:line="17" pos:column="25">continue;<pos:position pos:line="17" pos:column="34"/></continue></block></then></if>

		<for pos:line="19" pos:column="17">for <control pos:line="19" pos:column="21">(<init><expr><name pos:line="19" pos:column="22">j<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr>;<pos:position pos:line="19" pos:column="28"/></init> <condition><expr><name pos:line="19" pos:column="29">j<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&lt;<pos:position pos:line="19" pos:column="35"/></operator> <name><name pos:line="19" pos:column="33">dirlist<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">used<pos:position pos:line="19" pos:column="46"/></name></name></expr>;<pos:position pos:line="19" pos:column="47"/></condition> <incr><expr><name pos:line="19" pos:column="48">j<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">++<pos:position pos:line="19" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="52"/></control> <block pos:line="19" pos:column="53">{
			<decl_stmt><decl><type><name><name pos:line="20" pos:column="25">struct<pos:position pos:line="20" pos:column="31"/></name> <name pos:line="20" pos:column="32">file_struct<pos:position pos:line="20" pos:column="43"/></name></name> <modifier pos:line="20" pos:column="44">*<pos:position pos:line="20" pos:column="45"/></modifier></type><name pos:line="20" pos:column="45">fp<pos:position pos:line="20" pos:column="47"/></name> <init pos:line="20" pos:column="48">= <expr><name><name pos:line="20" pos:column="50">dirlist<pos:position pos:line="20" pos:column="57"/></name><operator pos:line="20" pos:column="57">-&gt;<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="59">files<pos:position pos:line="20" pos:column="64"/></name><index pos:line="20" pos:column="64">[<expr><name pos:line="20" pos:column="65">j<pos:position pos:line="20" pos:column="66"/></name></expr>]<pos:position pos:line="20" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="20" pos:column="68"/></decl_stmt>

			<if pos:line="22" pos:column="25">if <condition pos:line="22" pos:column="28">(<expr><operator pos:line="22" pos:column="29">!<pos:position pos:line="22" pos:column="30"/></operator><call><name pos:line="22" pos:column="30">F_IS_ACTIVE<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">fp<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
				<block type="pseudo"><continue pos:line="23" pos:column="33">continue;<pos:position pos:line="23" pos:column="42"/></continue></block></then></if>

			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><call><name pos:line="25" pos:column="30">S_ISREG<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name><name pos:line="25" pos:column="38">fp<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">-&gt;<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="42">mode<pos:position pos:line="25" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call> <operator pos:line="25" pos:column="48">||<pos:position pos:line="25" pos:column="50"/></operator> <operator pos:line="25" pos:column="51">!<pos:position pos:line="25" pos:column="52"/></operator><call><name pos:line="25" pos:column="52">F_LENGTH<pos:position pos:line="25" pos:column="60"/></name><argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">fp<pos:position pos:line="25" pos:column="63"/></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call> <operator pos:line="25" pos:column="65">||<pos:position pos:line="25" pos:column="67"/></operator> <name><name pos:line="25" pos:column="68">fp<pos:position pos:line="25" pos:column="70"/></name><operator pos:line="25" pos:column="70">-&gt;<pos:position pos:line="25" pos:column="75"/></operator><name pos:line="25" pos:column="72">flags<pos:position pos:line="25" pos:column="77"/></name></name> <operator pos:line="25" pos:column="78">&amp;<pos:position pos:line="25" pos:column="83"/></operator> <name pos:line="25" pos:column="80">FLAG_FILE_SENT<pos:position pos:line="25" pos:column="94"/></name></expr>)<pos:position pos:line="25" pos:column="95"/></condition><then pos:line="25" pos:column="95">
				<block type="pseudo"><continue pos:line="26" pos:column="33">continue;<pos:position pos:line="26" pos:column="42"/></continue></block></then></if>

			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><call><name pos:line="28" pos:column="29">F_LENGTH<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">fp<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call> <operator pos:line="28" pos:column="42">==<pos:position pos:line="28" pos:column="44"/></operator> <call><name pos:line="28" pos:column="45">F_LENGTH<pos:position pos:line="28" pos:column="53"/></name><argument_list pos:line="28" pos:column="53">(<argument><expr><name pos:line="28" pos:column="54">file<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call> <operator pos:line="28" pos:column="60">&amp;&amp;<pos:position pos:line="28" pos:column="70"/></operator> <call><name pos:line="28" pos:column="63">cmp_time<pos:position pos:line="28" pos:column="71"/></name><argument_list pos:line="28" pos:column="71">(<argument><expr><name><name pos:line="28" pos:column="72">fp<pos:position pos:line="28" pos:column="74"/></name><operator pos:line="28" pos:column="74">-&gt;<pos:position pos:line="28" pos:column="79"/></operator><name pos:line="28" pos:column="76">modtime<pos:position pos:line="28" pos:column="83"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="85">file<pos:position pos:line="28" pos:column="89"/></name><operator pos:line="28" pos:column="89">-&gt;<pos:position pos:line="28" pos:column="94"/></operator><name pos:line="28" pos:column="91">modtime<pos:position pos:line="28" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="99"/></argument_list></call> <operator pos:line="28" pos:column="100">==<pos:position pos:line="28" pos:column="102"/></operator> <literal type="number" pos:line="28" pos:column="103">0<pos:position pos:line="28" pos:column="104"/></literal></expr>)<pos:position pos:line="28" pos:column="105"/></condition><then pos:line="28" pos:column="105"> <block pos:line="28" pos:column="106">{
				<if pos:line="29" pos:column="33">if <condition pos:line="29" pos:column="36">(<expr><call><name pos:line="29" pos:column="37">DEBUG_GTE<pos:position pos:line="29" pos:column="46"/></name><argument_list pos:line="29" pos:column="46">(<argument><expr><name pos:line="29" pos:column="47">FUZZY<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="54">2<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="57"/></condition><then pos:line="29" pos:column="57">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="41">rprintf<pos:position pos:line="30" pos:column="48"/></name><argument_list pos:line="30" pos:column="48">(<argument><expr><name pos:line="30" pos:column="49">FINFO<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="56">"fuzzy size/modtime match for %s\n"<pos:position pos:line="30" pos:column="91"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="93">f_name<pos:position pos:line="30" pos:column="99"/></name><argument_list pos:line="30" pos:column="99">(<argument><expr><name pos:line="30" pos:column="100">fp<pos:position pos:line="30" pos:column="102"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="104">NULL<pos:position pos:line="30" pos:column="108"/></name></expr></argument>)<pos:position pos:line="30" pos:column="109"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="111"/></expr_stmt></block></then></if>
				<expr_stmt><expr><operator pos:line="31" pos:column="33">*<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">fnamecmp_type_ptr<pos:position pos:line="31" pos:column="51"/></name> <operator pos:line="31" pos:column="52">=<pos:position pos:line="31" pos:column="53"/></operator> <name pos:line="31" pos:column="54">FNAMECMP_FUZZY<pos:position pos:line="31" pos:column="68"/></name> <operator pos:line="31" pos:column="69">+<pos:position pos:line="31" pos:column="70"/></operator> <name pos:line="31" pos:column="71">i<pos:position pos:line="31" pos:column="72"/></name></expr>;<pos:position pos:line="31" pos:column="73"/></expr_stmt>
				<return pos:line="32" pos:column="33">return <expr><name pos:line="32" pos:column="40">fp<pos:position pos:line="32" pos:column="42"/></name></expr>;<pos:position pos:line="32" pos:column="43"/></return>
			}<pos:position pos:line="33" pos:column="26"/></block></then></if>

		}<pos:position pos:line="35" pos:column="18"/></block></for>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="25">fuzzy_basis<pos:position pos:line="38" pos:column="36"/></name></expr>;<pos:position pos:line="38" pos:column="37"/></condition> <incr><expr><name pos:line="38" pos:column="38">i<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">++<pos:position pos:line="38" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="42"/></control> <block pos:line="38" pos:column="43">{
		<decl_stmt><decl><type><name><name pos:line="39" pos:column="17">struct<pos:position pos:line="39" pos:column="23"/></name> <name pos:line="39" pos:column="24">file_list<pos:position pos:line="39" pos:column="33"/></name></name> <modifier pos:line="39" pos:column="34">*<pos:position pos:line="39" pos:column="35"/></modifier></type><name pos:line="39" pos:column="35">dirlist<pos:position pos:line="39" pos:column="42"/></name> <init pos:line="39" pos:column="43">= <expr><name><name pos:line="39" pos:column="45">dirlist_array<pos:position pos:line="39" pos:column="58"/></name><index pos:line="39" pos:column="58">[<expr><name pos:line="39" pos:column="59">i<pos:position pos:line="39" pos:column="60"/></name></expr>]<pos:position pos:line="39" pos:column="61"/></index></name></expr></init></decl>;<pos:position pos:line="39" pos:column="62"/></decl_stmt>

		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">dirlist<pos:position pos:line="41" pos:column="29"/></name></expr>)<pos:position pos:line="41" pos:column="30"/></condition><then pos:line="41" pos:column="30">
			<block type="pseudo"><continue pos:line="42" pos:column="25">continue;<pos:position pos:line="42" pos:column="34"/></continue></block></then></if>

		<for pos:line="44" pos:column="17">for <control pos:line="44" pos:column="21">(<init><expr><name pos:line="44" pos:column="22">j<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <literal type="number" pos:line="44" pos:column="26">0<pos:position pos:line="44" pos:column="27"/></literal></expr>;<pos:position pos:line="44" pos:column="28"/></init> <condition><expr><name pos:line="44" pos:column="29">j<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">&lt;<pos:position pos:line="44" pos:column="35"/></operator> <name><name pos:line="44" pos:column="33">dirlist<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">used<pos:position pos:line="44" pos:column="46"/></name></name></expr>;<pos:position pos:line="44" pos:column="47"/></condition> <incr><expr><name pos:line="44" pos:column="48">j<pos:position pos:line="44" pos:column="49"/></name><operator pos:line="44" pos:column="49">++<pos:position pos:line="44" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="44" pos:column="52"/></control> <block pos:line="44" pos:column="53">{
			<decl_stmt><decl><type><name><name pos:line="45" pos:column="25">struct<pos:position pos:line="45" pos:column="31"/></name> <name pos:line="45" pos:column="32">file_struct<pos:position pos:line="45" pos:column="43"/></name></name> <modifier pos:line="45" pos:column="44">*<pos:position pos:line="45" pos:column="45"/></modifier></type><name pos:line="45" pos:column="45">fp<pos:position pos:line="45" pos:column="47"/></name> <init pos:line="45" pos:column="48">= <expr><name><name pos:line="45" pos:column="50">dirlist<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">-&gt;<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="59">files<pos:position pos:line="45" pos:column="64"/></name><index pos:line="45" pos:column="64">[<expr><name pos:line="45" pos:column="65">j<pos:position pos:line="45" pos:column="66"/></name></expr>]<pos:position pos:line="45" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="45" pos:column="68"/></decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="46" pos:column="25">const<pos:position pos:line="46" pos:column="30"/></specifier> <name pos:line="46" pos:column="31">char<pos:position pos:line="46" pos:column="35"/></name> <modifier pos:line="46" pos:column="36">*<pos:position pos:line="46" pos:column="37"/></modifier></type><name pos:line="46" pos:column="37">suf<pos:position pos:line="46" pos:column="40"/></name></decl>, <modifier pos:line="46" pos:column="42">*<pos:position pos:line="46" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="46" pos:column="43">name<pos:position pos:line="46" pos:column="47"/></name></decl>;<pos:position pos:line="46" pos:column="48"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="47" pos:column="25">int<pos:position pos:line="47" pos:column="28"/></name></type> <name pos:line="47" pos:column="29">len<pos:position pos:line="47" pos:column="32"/></name></decl>, <decl><type ref="prev"/><name pos:line="47" pos:column="34">suf_len<pos:position pos:line="47" pos:column="41"/></name></decl>;<pos:position pos:line="47" pos:column="42"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="48" pos:column="25">uint32<pos:position pos:line="48" pos:column="31"/></name></type> <name pos:line="48" pos:column="32">dist<pos:position pos:line="48" pos:column="36"/></name></decl>;<pos:position pos:line="48" pos:column="37"/></decl_stmt>

			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><call><name pos:line="50" pos:column="30">F_IS_ACTIVE<pos:position pos:line="50" pos:column="41"/></name><argument_list pos:line="50" pos:column="41">(<argument><expr><name pos:line="50" pos:column="42">fp<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="46"/></condition><then pos:line="50" pos:column="46">
				<block type="pseudo"><continue pos:line="51" pos:column="33">continue;<pos:position pos:line="51" pos:column="42"/></continue></block></then></if>

			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">!<pos:position pos:line="53" pos:column="30"/></operator><call><name pos:line="53" pos:column="30">S_ISREG<pos:position pos:line="53" pos:column="37"/></name><argument_list pos:line="53" pos:column="37">(<argument><expr><name><name pos:line="53" pos:column="38">fp<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">-&gt;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="42">mode<pos:position pos:line="53" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call> <operator pos:line="53" pos:column="48">||<pos:position pos:line="53" pos:column="50"/></operator> <operator pos:line="53" pos:column="51">!<pos:position pos:line="53" pos:column="52"/></operator><call><name pos:line="53" pos:column="52">F_LENGTH<pos:position pos:line="53" pos:column="60"/></name><argument_list pos:line="53" pos:column="60">(<argument><expr><name pos:line="53" pos:column="61">fp<pos:position pos:line="53" pos:column="63"/></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call> <operator pos:line="53" pos:column="65">||<pos:position pos:line="53" pos:column="67"/></operator> <name><name pos:line="53" pos:column="68">fp<pos:position pos:line="53" pos:column="70"/></name><operator pos:line="53" pos:column="70">-&gt;<pos:position pos:line="53" pos:column="75"/></operator><name pos:line="53" pos:column="72">flags<pos:position pos:line="53" pos:column="77"/></name></name> <operator pos:line="53" pos:column="78">&amp;<pos:position pos:line="53" pos:column="83"/></operator> <name pos:line="53" pos:column="80">FLAG_FILE_SENT<pos:position pos:line="53" pos:column="94"/></name></expr>)<pos:position pos:line="53" pos:column="95"/></condition><then pos:line="53" pos:column="95">
				<block type="pseudo"><continue pos:line="54" pos:column="33">continue;<pos:position pos:line="54" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="56" pos:column="25">name<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <name><name pos:line="56" pos:column="32">fp<pos:position pos:line="56" pos:column="34"/></name><operator pos:line="56" pos:column="34">-&gt;<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="36">basename<pos:position pos:line="56" pos:column="44"/></name></name></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="57" pos:column="25">len<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">=<pos:position pos:line="57" pos:column="30"/></operator> <call><name pos:line="57" pos:column="31">strlen<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name pos:line="57" pos:column="38">name<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><name pos:line="58" pos:column="25">suf<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <call><name pos:line="58" pos:column="31">find_filename_suffix<pos:position pos:line="58" pos:column="51"/></name><argument_list pos:line="58" pos:column="51">(<argument><expr><name pos:line="58" pos:column="52">name<pos:position pos:line="58" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">len<pos:position pos:line="58" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="63">&amp;<pos:position pos:line="58" pos:column="68"/></operator><name pos:line="58" pos:column="64">suf_len<pos:position pos:line="58" pos:column="71"/></name></expr></argument>)<pos:position pos:line="58" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="73"/></expr_stmt>

			<expr_stmt><expr><name pos:line="60" pos:column="25">dist<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <call><name pos:line="60" pos:column="32">fuzzy_distance<pos:position pos:line="60" pos:column="46"/></name><argument_list pos:line="60" pos:column="46">(<argument><expr><name pos:line="60" pos:column="47">name<pos:position pos:line="60" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="53">len<pos:position pos:line="60" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="58">fname<pos:position pos:line="60" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="65">fname_len<pos:position pos:line="60" pos:column="74"/></name></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="76"/></expr_stmt>
			<comment type="block" pos:line="61" pos:column="25">/* Add some extra weight to how well the suffixes match. */</comment>
			<expr_stmt><expr><name pos:line="62" pos:column="25">dist<pos:position pos:line="62" pos:column="29"/></name> <operator pos:line="62" pos:column="30">+=<pos:position pos:line="62" pos:column="32"/></operator> <call><name pos:line="62" pos:column="33">fuzzy_distance<pos:position pos:line="62" pos:column="47"/></name><argument_list pos:line="62" pos:column="47">(<argument><expr><name pos:line="62" pos:column="48">suf<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="53">suf_len<pos:position pos:line="62" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="62">fname_suf<pos:position pos:line="62" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="73">fname_suf_len<pos:position pos:line="62" pos:column="86"/></name></expr></argument>)<pos:position pos:line="62" pos:column="87"/></argument_list></call> <operator pos:line="62" pos:column="88">*<pos:position pos:line="62" pos:column="89"/></operator> <literal type="number" pos:line="62" pos:column="90">10<pos:position pos:line="62" pos:column="92"/></literal></expr>;<pos:position pos:line="62" pos:column="93"/></expr_stmt>
			<if pos:line="63" pos:column="25">if <condition pos:line="63" pos:column="28">(<expr><call><name pos:line="63" pos:column="29">DEBUG_GTE<pos:position pos:line="63" pos:column="38"/></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">FUZZY<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="46">2<pos:position pos:line="63" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="49"/></condition><then pos:line="63" pos:column="49"> <block pos:line="63" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="64" pos:column="33">rprintf<pos:position pos:line="64" pos:column="40"/></name><argument_list pos:line="64" pos:column="40">(<argument><expr><name pos:line="64" pos:column="41">FINFO<pos:position pos:line="64" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="48">"fuzzy distance for %s = %d.%05d\n"<pos:position pos:line="64" pos:column="83"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="65" pos:column="41">f_name<pos:position pos:line="65" pos:column="47"/></name><argument_list pos:line="65" pos:column="47">(<argument><expr><name pos:line="65" pos:column="48">fp<pos:position pos:line="65" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="52">NULL<pos:position pos:line="65" pos:column="56"/></name></expr></argument>)<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><call pos:line="65" pos:column="59">(<name pos:line="65" pos:column="60">int<pos:position pos:line="65" pos:column="63"/></name>)<argument_list pos:line="65" pos:column="64">(<argument><expr><name pos:line="65" pos:column="65">dist<pos:position pos:line="65" pos:column="69"/></name><operator pos:line="65" pos:column="69">&gt;&gt;<pos:position pos:line="65" pos:column="74"/></operator><literal type="number" pos:line="65" pos:column="71">16<pos:position pos:line="65" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><call pos:line="65" pos:column="76">(<name pos:line="65" pos:column="77">int<pos:position pos:line="65" pos:column="80"/></name>)<argument_list pos:line="65" pos:column="81">(<argument><expr><name pos:line="65" pos:column="82">dist<pos:position pos:line="65" pos:column="86"/></name><operator pos:line="65" pos:column="86">&amp;<pos:position pos:line="65" pos:column="91"/></operator><literal type="number" pos:line="65" pos:column="87">0xFFFF<pos:position pos:line="65" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="96"/></expr_stmt>
			}<pos:position pos:line="66" pos:column="26"/></block></then></if>
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><name pos:line="67" pos:column="29">dist<pos:position pos:line="67" pos:column="33"/></name> <operator pos:line="67" pos:column="34">&lt;=<pos:position pos:line="67" pos:column="39"/></operator> <name pos:line="67" pos:column="37">lowest_dist<pos:position pos:line="67" pos:column="48"/></name></expr>)<pos:position pos:line="67" pos:column="49"/></condition><then pos:line="67" pos:column="49"> <block pos:line="67" pos:column="50">{
				<expr_stmt><expr><name pos:line="68" pos:column="33">lowest_dist<pos:position pos:line="68" pos:column="44"/></name> <operator pos:line="68" pos:column="45">=<pos:position pos:line="68" pos:column="46"/></operator> <name pos:line="68" pos:column="47">dist<pos:position pos:line="68" pos:column="51"/></name></expr>;<pos:position pos:line="68" pos:column="52"/></expr_stmt>
				<expr_stmt><expr><name pos:line="69" pos:column="33">lowest_fp<pos:position pos:line="69" pos:column="42"/></name> <operator pos:line="69" pos:column="43">=<pos:position pos:line="69" pos:column="44"/></operator> <name pos:line="69" pos:column="45">fp<pos:position pos:line="69" pos:column="47"/></name></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="70" pos:column="33">*<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">fnamecmp_type_ptr<pos:position pos:line="70" pos:column="51"/></name> <operator pos:line="70" pos:column="52">=<pos:position pos:line="70" pos:column="53"/></operator> <name pos:line="70" pos:column="54">FNAMECMP_FUZZY<pos:position pos:line="70" pos:column="68"/></name> <operator pos:line="70" pos:column="69">+<pos:position pos:line="70" pos:column="70"/></operator> <name pos:line="70" pos:column="71">i<pos:position pos:line="70" pos:column="72"/></name></expr>;<pos:position pos:line="70" pos:column="73"/></expr_stmt>
			}<pos:position pos:line="71" pos:column="26"/></block></then></if>
		}<pos:position pos:line="72" pos:column="18"/></block></for>
	}<pos:position pos:line="73" pos:column="10"/></block></for>

	<return pos:line="75" pos:column="9">return <expr><name pos:line="75" pos:column="16">lowest_fp<pos:position pos:line="75" pos:column="25"/></name></expr>;<pos:position pos:line="75" pos:column="26"/></return>
}<pos:position pos:line="76" pos:column="2"/></block></function></unit>

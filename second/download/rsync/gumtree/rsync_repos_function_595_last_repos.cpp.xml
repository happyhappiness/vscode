<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_595_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">copy_argv<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name><name pos:line="1" pos:column="28">argv<pos:position pos:line="1" pos:column="32"/></name><index pos:line="1" pos:column="32">[]<pos:position pos:line="1" pos:column="34"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<for pos:line="5" pos:column="9">for <control pos:line="5" pos:column="13">(<init><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">=<pos:position pos:line="5" pos:column="17"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>;<pos:position pos:line="5" pos:column="20"/></init> <condition><expr><name><name pos:line="5" pos:column="21">argv<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><name pos:line="5" pos:column="26">i<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></expr>;<pos:position pos:line="5" pos:column="29"/></condition> <incr><expr><name pos:line="5" pos:column="30">i<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">++<pos:position pos:line="5" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="34"/></control> <block pos:line="5" pos:column="35">{
		<if pos:line="6" pos:column="17">if <condition pos:line="6" pos:column="20">(<expr><operator pos:line="6" pos:column="21">!<pos:position pos:line="6" pos:column="22"/></operator><operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><name><name pos:line="6" pos:column="23">argv<pos:position pos:line="6" pos:column="27"/></name><index pos:line="6" pos:column="27">[<expr><name pos:line="6" pos:column="28">i<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <call><name pos:line="6" pos:column="33">strdup<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name><name pos:line="6" pos:column="40">argv<pos:position pos:line="6" pos:column="44"/></name><index pos:line="6" pos:column="44">[<expr><name pos:line="6" pos:column="45">i<pos:position pos:line="6" pos:column="46"/></name></expr>]<pos:position pos:line="6" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50"> <block pos:line="6" pos:column="51">{
			<expr_stmt><expr><call><name pos:line="7" pos:column="25">rprintf<pos:position pos:line="7" pos:column="32"/></name> <argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">FERROR<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="42">"out of memory at %s(%d)\n"<pos:position pos:line="7" pos:column="69"/></literal></expr></argument>,
				 <argument><expr><name pos:line="8" pos:column="34">__FILE__<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">__LINE__<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
			<return pos:line="9" pos:column="25">return <expr><name pos:line="9" pos:column="32">RERR_MALLOC<pos:position pos:line="9" pos:column="43"/></name></expr>;<pos:position pos:line="9" pos:column="44"/></return>
		}<pos:position pos:line="10" pos:column="18"/></block></then></if>
	}<pos:position pos:line="11" pos:column="10"/></block></for>

	<return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

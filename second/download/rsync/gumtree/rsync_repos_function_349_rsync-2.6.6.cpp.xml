<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_349_rsync-2.6.6.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">recv_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">file_list<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">flist<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">short<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">flags<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int64<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">start_read<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">show_filelist_p<pos:position pos:line="7" pos:column="28"/></name><argument_list pos:line="7" pos:column="28">()<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">start_filelist_progress<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">(<argument><expr><literal type="string" pos:line="8" pos:column="41">"receiving file list"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">start_read<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <name><name pos:line="10" pos:column="22">stats<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">total_read<pos:position pos:line="10" pos:column="38"/></name></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">flist<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">flist_new<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">WITH_HLINK<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">"recv_file_list"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="14" pos:column="9">flist<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">count<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="15" pos:column="9">flist<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">malloced<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">1000<pos:position pos:line="15" pos:column="31"/></literal></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">flist<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">files<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <call><name pos:line="16" pos:column="24">new_array<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr pos:line="16" pos:column="34">struct <name pos:line="16" pos:column="41">file_struct<pos:position pos:line="16" pos:column="52"/></name> <operator pos:line="16" pos:column="53">*<pos:position pos:line="16" pos:column="54"/></operator></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="56">flist<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">-&gt;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="63">malloced<pos:position pos:line="16" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name><name pos:line="17" pos:column="14">flist<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">files<pos:position pos:line="17" pos:column="26"/></name></name></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
		<block type="pseudo"><goto pos:line="18" pos:column="17">goto <name pos:line="18" pos:column="22">oom<pos:position pos:line="18" pos:column="25"/></name>;<pos:position pos:line="18" pos:column="26"/></goto></block></then></if>


	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="17">flags<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <call><name pos:line="21" pos:column="25">read_byte<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">f<pos:position pos:line="21" pos:column="36"/></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call><operator pos:line="21" pos:column="37">)<pos:position pos:line="21" pos:column="38"/></operator> <operator pos:line="21" pos:column="39">!=<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="42">0<pos:position pos:line="21" pos:column="43"/></literal></expr>)<pos:position pos:line="21" pos:column="44"/></condition> <block pos:line="21" pos:column="45">{
		<decl_stmt><decl><type><name><name pos:line="22" pos:column="17">struct<pos:position pos:line="22" pos:column="23"/></name> <name pos:line="22" pos:column="24">file_struct<pos:position pos:line="22" pos:column="35"/></name></name> <modifier pos:line="22" pos:column="36">*<pos:position pos:line="22" pos:column="37"/></modifier></type><name pos:line="22" pos:column="37">file<pos:position pos:line="22" pos:column="41"/></name></decl>;<pos:position pos:line="22" pos:column="42"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="24" pos:column="17">flist_expand<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">flist<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">protocol_version<pos:position pos:line="26" pos:column="37"/></name> <operator pos:line="26" pos:column="38">&gt;=<pos:position pos:line="26" pos:column="43"/></operator> <literal type="number" pos:line="26" pos:column="41">28<pos:position pos:line="26" pos:column="43"/></literal> <operator pos:line="26" pos:column="44">&amp;&amp;<pos:position pos:line="26" pos:column="54"/></operator> <operator pos:line="26" pos:column="47">(<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">flags<pos:position pos:line="26" pos:column="53"/></name> <operator pos:line="26" pos:column="54">&amp;<pos:position pos:line="26" pos:column="59"/></operator> <name pos:line="26" pos:column="56">XMIT_EXTENDED_FLAGS<pos:position pos:line="26" pos:column="75"/></name><operator pos:line="26" pos:column="75">)<pos:position pos:line="26" pos:column="76"/></operator></expr>)<pos:position pos:line="26" pos:column="77"/></condition><then pos:line="26" pos:column="77">
			<block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="25">flags<pos:position pos:line="27" pos:column="30"/></name> <operator pos:line="27" pos:column="31">|=<pos:position pos:line="27" pos:column="33"/></operator> <call><name pos:line="27" pos:column="34">read_byte<pos:position pos:line="27" pos:column="43"/></name><argument_list pos:line="27" pos:column="43">(<argument><expr><name pos:line="27" pos:column="44">f<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call> <operator pos:line="27" pos:column="47">&lt;&lt;<pos:position pos:line="27" pos:column="55"/></operator> <literal type="number" pos:line="27" pos:column="50">8<pos:position pos:line="27" pos:column="51"/></literal></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="28" pos:column="17">file<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <call><name pos:line="28" pos:column="24">receive_file_entry<pos:position pos:line="28" pos:column="42"/></name><argument_list pos:line="28" pos:column="42">(<argument><expr><name pos:line="28" pos:column="43">flist<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">flags<pos:position pos:line="28" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">f<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><call><name pos:line="30" pos:column="21">S_ISREG<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name><name pos:line="30" pos:column="29">file<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">mode<pos:position pos:line="30" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="25">stats<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">.<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">total_size<pos:position pos:line="31" pos:column="41"/></name></name> <operator pos:line="31" pos:column="42">+=<pos:position pos:line="31" pos:column="44"/></operator> <name><name pos:line="31" pos:column="45">file<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">length<pos:position pos:line="31" pos:column="57"/></name></name></expr>;<pos:position pos:line="31" pos:column="58"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="33" pos:column="17">flist<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">files<pos:position pos:line="33" pos:column="29"/></name><index pos:line="33" pos:column="29">[<expr><name><name pos:line="33" pos:column="30">flist<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">count<pos:position pos:line="33" pos:column="42"/></name></name><operator pos:line="33" pos:column="42">++<pos:position pos:line="33" pos:column="44"/></operator></expr>]<pos:position pos:line="33" pos:column="45"/></index></name> <operator pos:line="33" pos:column="46">=<pos:position pos:line="33" pos:column="47"/></operator> <name pos:line="33" pos:column="48">file<pos:position pos:line="33" pos:column="52"/></name></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="35" pos:column="17">maybe_emit_filelist_progress<pos:position pos:line="35" pos:column="45"/></name><argument_list pos:line="35" pos:column="45">(<argument><expr><name><name pos:line="35" pos:column="46">flist<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">count<pos:position pos:line="35" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="60"/></expr_stmt>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">verbose<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">&gt;<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="31">2<pos:position pos:line="37" pos:column="32"/></literal></expr>)<pos:position pos:line="37" pos:column="33"/></condition><then pos:line="37" pos:column="33"> <block pos:line="37" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">rprintf<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">FINFO<pos:position pos:line="38" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="40">"recv_file_name(%s)\n"<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="39" pos:column="33">safe_fname<pos:position pos:line="39" pos:column="43"/></name><argument_list pos:line="39" pos:column="43">(<argument><expr><call><name pos:line="39" pos:column="44">f_name<pos:position pos:line="39" pos:column="50"/></name><argument_list pos:line="39" pos:column="50">(<argument><expr><name pos:line="39" pos:column="51">file<pos:position pos:line="39" pos:column="55"/></name></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
	}<pos:position pos:line="41" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">receive_file_entry<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">NULL<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="34">0<pos:position pos:line="42" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="37">0<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt> <comment type="block" pos:line="42" pos:column="41">/* Signal that we're done. */</comment>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">verbose<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">&gt;<pos:position pos:line="44" pos:column="25"/></operator> <literal type="number" pos:line="44" pos:column="23">2<pos:position pos:line="44" pos:column="24"/></literal></expr>)<pos:position pos:line="44" pos:column="25"/></condition><then pos:line="44" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">rprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">FINFO<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="32">"received %d names\n"<pos:position pos:line="45" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="55">flist<pos:position pos:line="45" pos:column="60"/></name><operator pos:line="45" pos:column="60">-&gt;<pos:position pos:line="45" pos:column="65"/></operator><name pos:line="45" pos:column="62">count<pos:position pos:line="45" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="69"/></expr_stmt></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">show_filelist_p<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">()<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="31"/></condition><then pos:line="47" pos:column="31">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">finish_filelist_progress<pos:position pos:line="48" pos:column="41"/></name><argument_list pos:line="48" pos:column="41">(<argument><expr><name pos:line="48" pos:column="42">flist<pos:position pos:line="48" pos:column="47"/></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">clean_flist<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">flist<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="28">relative_paths<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="44">1<pos:position pos:line="50" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="47"/></expr_stmt>

	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">f<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">&gt;=<pos:position pos:line="52" pos:column="20"/></operator> <literal type="number" pos:line="52" pos:column="18">0<pos:position pos:line="52" pos:column="19"/></literal></expr>)<pos:position pos:line="52" pos:column="20"/></condition><then pos:line="52" pos:column="20"> <block pos:line="52" pos:column="21">{
		<comment type="block" pos:line="53" pos:column="17">/* Now send the uid/gid list. This was introduced in
		 * protocol version 15 */</comment>
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">recv_uid_list<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">f<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="34">flist<pos:position pos:line="55" pos:column="39"/></name></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>

		<comment type="block" pos:line="57" pos:column="17">/* Recv the io_error flag */</comment>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">lp_ignore_errors<pos:position pos:line="58" pos:column="37"/></name><argument_list pos:line="58" pos:column="37">(<argument><expr><name pos:line="58" pos:column="38">module_id<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call> <operator pos:line="58" pos:column="49">||<pos:position pos:line="58" pos:column="51"/></operator> <name pos:line="58" pos:column="52">ignore_errors<pos:position pos:line="58" pos:column="65"/></name></expr>)<pos:position pos:line="58" pos:column="66"/></condition><then pos:line="58" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="25">read_int<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">f<pos:position pos:line="59" pos:column="35"/></name></expr></argument>)<pos:position pos:line="59" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="37"/></expr_stmt></block></then>
		<else pos:line="60" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="25">io_error<pos:position pos:line="61" pos:column="33"/></name> <operator pos:line="61" pos:column="34">|=<pos:position pos:line="61" pos:column="36"/></operator> <call><name pos:line="61" pos:column="37">read_int<pos:position pos:line="61" pos:column="45"/></name><argument_list pos:line="61" pos:column="45">(<argument><expr><name pos:line="61" pos:column="46">f<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt></block></else></if>
	}<pos:position pos:line="62" pos:column="10"/></block></then></if>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">verbose<pos:position pos:line="64" pos:column="20"/></name> <operator pos:line="64" pos:column="21">&gt;<pos:position pos:line="64" pos:column="25"/></operator> <literal type="number" pos:line="64" pos:column="23">3<pos:position pos:line="64" pos:column="24"/></literal></expr>)<pos:position pos:line="64" pos:column="25"/></condition><then pos:line="64" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="65" pos:column="17">output_flist<pos:position pos:line="65" pos:column="29"/></name><argument_list pos:line="65" pos:column="29">(<argument><expr><name pos:line="65" pos:column="30">flist<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt></block></then></if>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">list_only<pos:position pos:line="67" pos:column="22"/></name></expr>)<pos:position pos:line="67" pos:column="23"/></condition><then pos:line="67" pos:column="23"> <block pos:line="67" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="68" pos:column="17">int<pos:position pos:line="68" pos:column="20"/></name></type> <name pos:line="68" pos:column="21">i<pos:position pos:line="68" pos:column="22"/></name></decl>;<pos:position pos:line="68" pos:column="23"/></decl_stmt>
		<for pos:line="69" pos:column="17">for <control pos:line="69" pos:column="21">(<init><expr><name pos:line="69" pos:column="22">i<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <literal type="number" pos:line="69" pos:column="26">0<pos:position pos:line="69" pos:column="27"/></literal></expr>;<pos:position pos:line="69" pos:column="28"/></init> <condition><expr><name pos:line="69" pos:column="29">i<pos:position pos:line="69" pos:column="30"/></name> <operator pos:line="69" pos:column="31">&lt;<pos:position pos:line="69" pos:column="35"/></operator> <name><name pos:line="69" pos:column="33">flist<pos:position pos:line="69" pos:column="38"/></name><operator pos:line="69" pos:column="38">-&gt;<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="40">count<pos:position pos:line="69" pos:column="45"/></name></name></expr>;<pos:position pos:line="69" pos:column="46"/></condition> <incr><expr><name pos:line="69" pos:column="47">i<pos:position pos:line="69" pos:column="48"/></name><operator pos:line="69" pos:column="48">++<pos:position pos:line="69" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="69" pos:column="51"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="25">list_file_entry<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name><name pos:line="70" pos:column="41">flist<pos:position pos:line="70" pos:column="46"/></name><operator pos:line="70" pos:column="46">-&gt;<pos:position pos:line="70" pos:column="51"/></operator><name pos:line="70" pos:column="48">files<pos:position pos:line="70" pos:column="53"/></name><index pos:line="70" pos:column="53">[<expr><name pos:line="70" pos:column="54">i<pos:position pos:line="70" pos:column="55"/></name></expr>]<pos:position pos:line="70" pos:column="56"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="58"/></expr_stmt></block></for>
	}<pos:position pos:line="71" pos:column="10"/></block></then></if>

	<if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">verbose<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">&gt;<pos:position pos:line="73" pos:column="25"/></operator> <literal type="number" pos:line="73" pos:column="23">2<pos:position pos:line="73" pos:column="24"/></literal></expr>)<pos:position pos:line="73" pos:column="25"/></condition><then pos:line="73" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="74" pos:column="17">rprintf<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><name pos:line="74" pos:column="25">FINFO<pos:position pos:line="74" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="32">"recv_file_list done\n"<pos:position pos:line="74" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="57"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="76" pos:column="9">stats<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">.<pos:position pos:line="76" pos:column="15"/></operator><name pos:line="76" pos:column="15">flist_size<pos:position pos:line="76" pos:column="25"/></name></name> <operator pos:line="76" pos:column="26">=<pos:position pos:line="76" pos:column="27"/></operator> <name><name pos:line="76" pos:column="28">stats<pos:position pos:line="76" pos:column="33"/></name><operator pos:line="76" pos:column="33">.<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="34">total_read<pos:position pos:line="76" pos:column="44"/></name></name> <operator pos:line="76" pos:column="45">-<pos:position pos:line="76" pos:column="46"/></operator> <name pos:line="76" pos:column="47">start_read<pos:position pos:line="76" pos:column="57"/></name></expr>;<pos:position pos:line="76" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="77" pos:column="9">stats<pos:position pos:line="77" pos:column="14"/></name><operator pos:line="77" pos:column="14">.<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="15">num_files<pos:position pos:line="77" pos:column="24"/></name></name> <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <name><name pos:line="77" pos:column="27">flist<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">-&gt;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="34">count<pos:position pos:line="77" pos:column="39"/></name></name></expr>;<pos:position pos:line="77" pos:column="40"/></expr_stmt>

	<return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">flist<pos:position pos:line="79" pos:column="21"/></name></expr>;<pos:position pos:line="79" pos:column="22"/></return>

<label><name pos:line="81" pos:column="1">oom<pos:position pos:line="81" pos:column="4"/></name>:<pos:position pos:line="81" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">out_of_memory<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><literal type="string" pos:line="82" pos:column="23">"recv_file_list"<pos:position pos:line="82" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="41"/></expr_stmt>
	<return pos:line="83" pos:column="9">return <expr><name pos:line="83" pos:column="16">NULL<pos:position pos:line="83" pos:column="20"/></name></expr>;<pos:position pos:line="83" pos:column="21"/></return>		<comment type="block" pos:line="83" pos:column="33">/* not reached */</comment>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

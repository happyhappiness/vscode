<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_270_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rsync_xal_get<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">fname<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">item_list<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">xalp<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">ssize_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">list_len<pos:position pos:line="3" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">name_len<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">datum_len<pos:position pos:line="4" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="27">name_offset<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">name<pos:position pos:line="5" pos:column="19"/></name></decl>, <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="22">ptr<pos:position pos:line="5" pos:column="25"/></name></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
<cpp:ifdef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifdef<pos:position pos:line="6" pos:column="7"/></cpp:directive> <name pos:line="6" pos:column="8">HAVE_LINUX_XATTRS<pos:position pos:line="6" pos:column="25"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">user_only<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><ternary><condition><expr><name pos:line="7" pos:column="25">am_sender<pos:position pos:line="7" pos:column="34"/></name></expr> ?<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36"> <expr><literal type="number" pos:line="7" pos:column="37">0<pos:position pos:line="7" pos:column="38"/></literal></expr> <pos:position pos:line="7" pos:column="39"/></then><else pos:line="7" pos:column="39">: <expr><operator pos:line="7" pos:column="41">!<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="42">am_root<pos:position pos:line="7" pos:column="49"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">rsync_xa<pos:position pos:line="9" pos:column="17"/></name> <modifier pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></modifier></type><name pos:line="9" pos:column="19">rxa<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">count<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* This puts the name list into the "namebuf" buffer. */</comment>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">list_len<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <call><name pos:line="13" pos:column="25">get_xattr_names<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">fname<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call><operator pos:line="13" pos:column="47">)<pos:position pos:line="13" pos:column="48"/></operator> <operator pos:line="13" pos:column="49">&lt;<pos:position pos:line="13" pos:column="53"/></operator> <literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator><literal type="number" pos:line="14" pos:column="25">1<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></return></block></then></if>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><expr><name pos:line="16" pos:column="14">name<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">namebuf<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></init> <condition><expr><name pos:line="16" pos:column="30">list_len<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">&gt;<pos:position pos:line="16" pos:column="43"/></operator> <literal type="number" pos:line="16" pos:column="41">0<pos:position pos:line="16" pos:column="42"/></literal></expr>;<pos:position pos:line="16" pos:column="43"/></condition> <incr><expr><name pos:line="16" pos:column="44">name<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">+=<pos:position pos:line="16" pos:column="51"/></operator> <name pos:line="16" pos:column="52">name_len<pos:position pos:line="16" pos:column="60"/></name></expr></incr>)<pos:position pos:line="16" pos:column="61"/></control> <block pos:line="16" pos:column="62">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">name_len<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <call><name pos:line="17" pos:column="28">strlen<pos:position pos:line="17" pos:column="34"/></name><argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">name<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call> <operator pos:line="17" pos:column="41">+<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="43">1<pos:position pos:line="17" pos:column="44"/></literal></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">list_len<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">-=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">name_len<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>

<cpp:ifdef pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">ifdef<pos:position pos:line="20" pos:column="7"/></cpp:directive> <name pos:line="20" pos:column="8">HAVE_LINUX_XATTRS<pos:position pos:line="20" pos:column="25"/></name></cpp:ifdef>
		<comment type="block" pos:line="21" pos:column="17">/* We always ignore the system namespace, and non-root
		 * ignores everything but the user namespace. */</comment>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><ternary><condition><expr><name pos:line="23" pos:column="21">user_only<pos:position pos:line="23" pos:column="30"/></name></expr> ?<pos:position pos:line="23" pos:column="32"/></condition><then pos:line="23" pos:column="32"> <expr><operator pos:line="23" pos:column="33">!<pos:position pos:line="23" pos:column="34"/></operator><call><name pos:line="23" pos:column="34">HAS_PREFIX<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><name pos:line="23" pos:column="45">name<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">USER_PREFIX<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>
			      <pos:position pos:line="24" pos:column="10"/></then><else pos:line="24" pos:column="31">: <expr><call><name pos:line="24" pos:column="33">HAS_PREFIX<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">name<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">SYSTEM_PREFIX<pos:position pos:line="24" pos:column="63"/></name></expr></argument>)<pos:position pos:line="24" pos:column="64"/></argument_list></call></expr></else></ternary></expr>)<pos:position pos:line="24" pos:column="65"/></condition><then pos:line="24" pos:column="65">
			<block type="pseudo"><continue pos:line="25" pos:column="25">continue;<pos:position pos:line="25" pos:column="34"/></continue></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

		<comment type="block" pos:line="28" pos:column="17">/* No rsync.%FOO attributes are copied w/o 2 -X options. */</comment>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">name_len<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">&gt;<pos:position pos:line="29" pos:column="34"/></operator> <name pos:line="29" pos:column="32">RPRE_LEN<pos:position pos:line="29" pos:column="40"/></name> <operator pos:line="29" pos:column="41">&amp;&amp;<pos:position pos:line="29" pos:column="51"/></operator> <name><name pos:line="29" pos:column="44">name<pos:position pos:line="29" pos:column="48"/></name><index pos:line="29" pos:column="48">[<expr><name pos:line="29" pos:column="49">RPRE_LEN<pos:position pos:line="29" pos:column="57"/></name></expr>]<pos:position pos:line="29" pos:column="58"/></index></name> <operator pos:line="29" pos:column="59">==<pos:position pos:line="29" pos:column="61"/></operator> <literal type="char" pos:line="29" pos:column="62">'%'<pos:position pos:line="29" pos:column="65"/></literal>
		 <operator pos:line="30" pos:column="18">&amp;&amp;<pos:position pos:line="30" pos:column="28"/></operator> <call><name pos:line="30" pos:column="21">HAS_PREFIX<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">name<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">RSYNC_PREFIX<pos:position pos:line="30" pos:column="50"/></name></expr></argument>)<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <block pos:line="30" pos:column="53">{
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">(<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="30">am_sender<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">&amp;&amp;<pos:position pos:line="31" pos:column="50"/></operator> <name pos:line="31" pos:column="43">preserve_xattrs<pos:position pos:line="31" pos:column="58"/></name> <operator pos:line="31" pos:column="59">&lt;<pos:position pos:line="31" pos:column="63"/></operator> <literal type="number" pos:line="31" pos:column="61">2<pos:position pos:line="31" pos:column="62"/></literal><operator pos:line="31" pos:column="62">)<pos:position pos:line="31" pos:column="63"/></operator>
			 <operator pos:line="32" pos:column="26">||<pos:position pos:line="32" pos:column="28"/></operator> <operator pos:line="32" pos:column="29">(<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">am_root<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">&lt;<pos:position pos:line="32" pos:column="42"/></operator> <literal type="number" pos:line="32" pos:column="40">0<pos:position pos:line="32" pos:column="41"/></literal>
			  <operator pos:line="33" pos:column="27">&amp;&amp;<pos:position pos:line="33" pos:column="37"/></operator> <operator pos:line="33" pos:column="30">(<pos:position pos:line="33" pos:column="31"/></operator><call><name pos:line="33" pos:column="31">strcmp<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">name<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">+<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">RPRE_LEN<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">+<pos:position pos:line="33" pos:column="52"/></operator><literal type="number" pos:line="33" pos:column="52">1<pos:position pos:line="33" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="55">XSTAT_SUFFIX<pos:position pos:line="33" pos:column="67"/></name></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call> <operator pos:line="33" pos:column="69">==<pos:position pos:line="33" pos:column="71"/></operator> <literal type="number" pos:line="33" pos:column="72">0<pos:position pos:line="33" pos:column="73"/></literal>
			   <operator pos:line="34" pos:column="28">||<pos:position pos:line="34" pos:column="30"/></operator> <call><name pos:line="34" pos:column="31">strcmp<pos:position pos:line="34" pos:column="37"/></name><argument_list pos:line="34" pos:column="37">(<argument><expr><name pos:line="34" pos:column="38">name<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">+<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="43">RPRE_LEN<pos:position pos:line="34" pos:column="51"/></name><operator pos:line="34" pos:column="51">+<pos:position pos:line="34" pos:column="52"/></operator><literal type="number" pos:line="34" pos:column="52">1<pos:position pos:line="34" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">XACC_ACL_SUFFIX<pos:position pos:line="34" pos:column="70"/></name></expr></argument>)<pos:position pos:line="34" pos:column="71"/></argument_list></call> <operator pos:line="34" pos:column="72">==<pos:position pos:line="34" pos:column="74"/></operator> <literal type="number" pos:line="34" pos:column="75">0<pos:position pos:line="34" pos:column="76"/></literal>
			   <operator pos:line="35" pos:column="28">||<pos:position pos:line="35" pos:column="30"/></operator> <call><name pos:line="35" pos:column="31">strcmp<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">name<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">+<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="43">RPRE_LEN<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">+<pos:position pos:line="35" pos:column="52"/></operator><literal type="number" pos:line="35" pos:column="52">1<pos:position pos:line="35" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="55">XDEF_ACL_SUFFIX<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></call> <operator pos:line="35" pos:column="72">==<pos:position pos:line="35" pos:column="74"/></operator> <literal type="number" pos:line="35" pos:column="75">0<pos:position pos:line="35" pos:column="76"/></literal><operator pos:line="35" pos:column="76">)<pos:position pos:line="35" pos:column="77"/></operator><operator pos:line="35" pos:column="77">)<pos:position pos:line="35" pos:column="78"/></operator></expr>)<pos:position pos:line="35" pos:column="79"/></condition><then pos:line="35" pos:column="79">
				<block type="pseudo"><continue pos:line="36" pos:column="33">continue;<pos:position pos:line="36" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="37" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="39" pos:column="17">datum_len<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">name_len<pos:position pos:line="39" pos:column="37"/></name></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt> <comment type="block" pos:line="39" pos:column="39">/* Pass extra size to get_xattr_data() */</comment>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><operator pos:line="40" pos:column="22">(<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">ptr<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <call><name pos:line="40" pos:column="29">get_xattr_data<pos:position pos:line="40" pos:column="43"/></name><argument_list pos:line="40" pos:column="43">(<argument><expr><name pos:line="40" pos:column="44">fname<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="51">name<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="57">&amp;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="58">datum_len<pos:position pos:line="40" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="69">0<pos:position pos:line="40" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call><operator pos:line="40" pos:column="71">)<pos:position pos:line="40" pos:column="72"/></operator></expr>)<pos:position pos:line="40" pos:column="73"/></condition><then pos:line="40" pos:column="73">
			<block type="pseudo"><return pos:line="41" pos:column="25">return <expr><operator pos:line="41" pos:column="32">-<pos:position pos:line="41" pos:column="33"/></operator><literal type="number" pos:line="41" pos:column="33">1<pos:position pos:line="41" pos:column="34"/></literal></expr>;<pos:position pos:line="41" pos:column="35"/></return></block></then></if>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">datum_len<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">&gt;<pos:position pos:line="43" pos:column="35"/></operator> <name pos:line="43" pos:column="33">MAX_FULL_DATUM<pos:position pos:line="43" pos:column="47"/></name></expr>)<pos:position pos:line="43" pos:column="48"/></condition><then pos:line="43" pos:column="48"> <block pos:line="43" pos:column="49">{
			<comment type="block" pos:line="44" pos:column="25">/* For large datums, we store a flag and a checksum. */</comment>
			<expr_stmt><expr><name pos:line="45" pos:column="25">name_offset<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">=<pos:position pos:line="45" pos:column="38"/></operator> <literal type="number" pos:line="45" pos:column="39">1<pos:position pos:line="45" pos:column="40"/></literal> <operator pos:line="45" pos:column="41">+<pos:position pos:line="45" pos:column="42"/></operator> <name pos:line="45" pos:column="43">MAX_DIGEST_LEN<pos:position pos:line="45" pos:column="57"/></name></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="46" pos:column="25">sum_init<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">checksum_seed<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">sum_update<pos:position pos:line="47" pos:column="35"/></name><argument_list pos:line="47" pos:column="35">(<argument><expr><name pos:line="47" pos:column="36">ptr<pos:position pos:line="47" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="41">datum_len<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">free<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">ptr<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">!<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">(<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">ptr<pos:position pos:line="50" pos:column="34"/></name> <operator pos:line="50" pos:column="35">=<pos:position pos:line="50" pos:column="36"/></operator> <call><name pos:line="50" pos:column="37">new_array<pos:position pos:line="50" pos:column="46"/></name><argument_list pos:line="50" pos:column="46">(<argument><expr><name pos:line="50" pos:column="47">char<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="53">name_offset<pos:position pos:line="50" pos:column="64"/></name> <operator pos:line="50" pos:column="65">+<pos:position pos:line="50" pos:column="66"/></operator> <name pos:line="50" pos:column="67">name_len<pos:position pos:line="50" pos:column="75"/></name></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></call><operator pos:line="50" pos:column="76">)<pos:position pos:line="50" pos:column="77"/></operator></expr>)<pos:position pos:line="50" pos:column="78"/></condition><then pos:line="50" pos:column="78">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="33">out_of_memory<pos:position pos:line="51" pos:column="46"/></name><argument_list pos:line="51" pos:column="46">(<argument><expr><literal type="string" pos:line="51" pos:column="47">"rsync_xal_get"<pos:position pos:line="51" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt></block></then></if>
			<expr_stmt><expr><operator pos:line="52" pos:column="25">*<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="26">ptr<pos:position pos:line="52" pos:column="29"/></name> <operator pos:line="52" pos:column="30">=<pos:position pos:line="52" pos:column="31"/></operator> <name pos:line="52" pos:column="32">XSTATE_ABBREV<pos:position pos:line="52" pos:column="45"/></name></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">sum_end<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">ptr<pos:position pos:line="53" pos:column="36"/></name> <operator pos:line="53" pos:column="37">+<pos:position pos:line="53" pos:column="38"/></operator> <literal type="number" pos:line="53" pos:column="39">1<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="54" pos:column="18"/></block></then> <else pos:line="54" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="25">name_offset<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">=<pos:position pos:line="55" pos:column="38"/></operator> <name pos:line="55" pos:column="39">datum_len<pos:position pos:line="55" pos:column="48"/></name></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt></block></else></if>

		<expr_stmt><expr><name pos:line="57" pos:column="17">rxa<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <call><name pos:line="57" pos:column="23">EXPAND_ITEM_LIST<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name pos:line="57" pos:column="40">xalp<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="46">rsync_xa<pos:position pos:line="57" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="56">RSYNC_XAL_INITIAL<pos:position pos:line="57" pos:column="73"/></name></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="58" pos:column="17">rxa<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">name<pos:position pos:line="58" pos:column="26"/></name></name> <operator pos:line="58" pos:column="27">=<pos:position pos:line="58" pos:column="28"/></operator> <name pos:line="58" pos:column="29">ptr<pos:position pos:line="58" pos:column="32"/></name> <operator pos:line="58" pos:column="33">+<pos:position pos:line="58" pos:column="34"/></operator> <name pos:line="58" pos:column="35">name_offset<pos:position pos:line="58" pos:column="46"/></name></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="59" pos:column="17">memcpy<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><name><name pos:line="59" pos:column="24">rxa<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">name<pos:position pos:line="59" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">name<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="41">name_len<pos:position pos:line="59" pos:column="49"/></name></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="60" pos:column="17">rxa<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">datum<pos:position pos:line="60" pos:column="27"/></name></name> <operator pos:line="60" pos:column="28">=<pos:position pos:line="60" pos:column="29"/></operator> <name pos:line="60" pos:column="30">ptr<pos:position pos:line="60" pos:column="33"/></name></expr>;<pos:position pos:line="60" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="61" pos:column="17">rxa<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">name_len<pos:position pos:line="61" pos:column="30"/></name></name> <operator pos:line="61" pos:column="31">=<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="33">name_len<pos:position pos:line="61" pos:column="41"/></name></expr>;<pos:position pos:line="61" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="62" pos:column="17">rxa<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">datum_len<pos:position pos:line="62" pos:column="31"/></name></name> <operator pos:line="62" pos:column="32">=<pos:position pos:line="62" pos:column="33"/></operator> <name pos:line="62" pos:column="34">datum_len<pos:position pos:line="62" pos:column="43"/></name></expr>;<pos:position pos:line="62" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="63" pos:column="10"/></block></for>
	<expr_stmt><expr><name pos:line="64" pos:column="9">count<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name><name pos:line="64" pos:column="17">xalp<pos:position pos:line="64" pos:column="21"/></name><operator pos:line="64" pos:column="21">-&gt;<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="23">count<pos:position pos:line="64" pos:column="28"/></name></name></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name pos:line="65" pos:column="9">rxa<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <name><name pos:line="65" pos:column="15">xalp<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">-&gt;<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="21">items<pos:position pos:line="65" pos:column="26"/></name></name></expr>;<pos:position pos:line="65" pos:column="27"/></expr_stmt>
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">count<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">&gt;<pos:position pos:line="66" pos:column="23"/></operator> <literal type="number" pos:line="66" pos:column="21">1<pos:position pos:line="66" pos:column="22"/></literal></expr>)<pos:position pos:line="66" pos:column="23"/></condition><then pos:line="66" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="17">qsort<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">rxa<pos:position pos:line="67" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="28">count<pos:position pos:line="67" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="67" pos:column="35">sizeof <argument_list pos:line="67" pos:column="42">(<argument><expr><name pos:line="67" pos:column="43">rsync_xa<pos:position pos:line="67" pos:column="51"/></name></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="67" pos:column="54">rsync_xal_compare_names<pos:position pos:line="67" pos:column="77"/></name></expr></argument>)<pos:position pos:line="67" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="79"/></expr_stmt></block></then></if>
	<for pos:line="68" pos:column="9">for <control pos:line="68" pos:column="13">(<init><expr><name pos:line="68" pos:column="14">rxa<pos:position pos:line="68" pos:column="17"/></name> <operator pos:line="68" pos:column="18">+=<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="21">count<pos:position pos:line="68" pos:column="26"/></name><operator pos:line="68" pos:column="26">-<pos:position pos:line="68" pos:column="27"/></operator><literal type="number" pos:line="68" pos:column="27">1<pos:position pos:line="68" pos:column="28"/></literal></expr>;<pos:position pos:line="68" pos:column="29"/></init> <condition><expr><name pos:line="68" pos:column="30">count<pos:position pos:line="68" pos:column="35"/></name></expr>;<pos:position pos:line="68" pos:column="36"/></condition> <incr><expr><name pos:line="68" pos:column="37">count<pos:position pos:line="68" pos:column="42"/></name><operator pos:line="68" pos:column="42">--<pos:position pos:line="68" pos:column="44"/></operator></expr><operator pos:line="68" pos:column="44">,<pos:position pos:line="68" pos:column="45"/></operator> <expr><name pos:line="68" pos:column="46">rxa<pos:position pos:line="68" pos:column="49"/></name><operator pos:line="68" pos:column="49">--<pos:position pos:line="68" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="68" pos:column="52"/></control>
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="17">rxa<pos:position pos:line="69" pos:column="20"/></name><operator pos:line="69" pos:column="20">-&gt;<pos:position pos:line="69" pos:column="25"/></operator><name pos:line="69" pos:column="22">num<pos:position pos:line="69" pos:column="25"/></name></name> <operator pos:line="69" pos:column="26">=<pos:position pos:line="69" pos:column="27"/></operator> <name pos:line="69" pos:column="28">count<pos:position pos:line="69" pos:column="33"/></name></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt></block></for>
	<return pos:line="70" pos:column="9">return <expr><literal type="number" pos:line="70" pos:column="16">0<pos:position pos:line="70" pos:column="17"/></literal></expr>;<pos:position pos:line="70" pos:column="18"/></return>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_87_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">pop_local_filters<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">mem<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">local_filter_state<pos:position pos:line="3" pos:column="34"/></name></name> <modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">pop<pos:position pos:line="3" pos:column="39"/></name> <init pos:line="3" pos:column="40">= <expr><operator pos:line="3" pos:column="42">(<pos:position pos:line="3" pos:column="43"/></operator>struct <name pos:line="3" pos:column="50">local_filter_state<pos:position pos:line="3" pos:column="68"/></name> <operator pos:line="3" pos:column="69">*<pos:position pos:line="3" pos:column="70"/></operator><operator pos:line="3" pos:column="70">)<pos:position pos:line="3" pos:column="71"/></operator><name pos:line="3" pos:column="71">mem<pos:position pos:line="3" pos:column="74"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="75"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">old_mergelist_cnt<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><ternary><condition><expr><name pos:line="5" pos:column="33">pop<pos:position pos:line="5" pos:column="36"/></name></expr> ?<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38"> <expr><name><name pos:line="5" pos:column="39">pop<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">-&gt;<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="44">mergelist_cnt<pos:position pos:line="5" pos:column="57"/></name></name></expr> <pos:position pos:line="5" pos:column="58"/></then><else pos:line="5" pos:column="58">: <expr><literal type="number" pos:line="5" pos:column="60">0<pos:position pos:line="5" pos:column="61"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="62"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">DEBUG_GTE<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">FILTER<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="31">2<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">rprintf<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">FINFO<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"[%s] popping local filters\n"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="64">who_am_i<pos:position pos:line="8" pos:column="72"/></name><argument_list pos:line="8" pos:column="72">()<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt></block></then></if>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">mergelist_cnt<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></init> <condition><expr><name pos:line="10" pos:column="33">i<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">--<pos:position pos:line="10" pos:column="36"/></operator> <operator pos:line="10" pos:column="37">&gt;<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr>;<pos:position pos:line="10" pos:column="41"/></condition> <incr/>)<pos:position pos:line="10" pos:column="43"/></control> <block pos:line="10" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">filter_rule<pos:position pos:line="11" pos:column="28"/></name> <modifier pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></modifier></type><name pos:line="11" pos:column="30">ex<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><name><name pos:line="11" pos:column="35">mergelist_parents<pos:position pos:line="11" pos:column="52"/></name><index pos:line="11" pos:column="52">[<expr><name pos:line="11" pos:column="53">i<pos:position pos:line="11" pos:column="54"/></name></expr>]<pos:position pos:line="11" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">filter_rule_list<pos:position pos:line="12" pos:column="33"/></name> <modifier pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></modifier></type><name pos:line="12" pos:column="35">lp<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">ex<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
			<block type="pseudo"><continue pos:line="14" pos:column="25">continue;<pos:position pos:line="14" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">lp<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <name><name pos:line="15" pos:column="22">ex<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">u<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">mergelist<pos:position pos:line="15" pos:column="37"/></name></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">DEBUG_GTE<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">FILTER<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="39">2<pos:position pos:line="17" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="42"/></condition><then pos:line="17" pos:column="42"> <block pos:line="17" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">rprintf<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">FINFO<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="40">"[%s] popping mergelist #%d%s\n"<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="19" pos:column="33">who_am_i<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">()<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">i<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="48">lp<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">debug_type<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="22" pos:column="17">pop_filter_list<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">lp<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">i<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">&gt;=<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="26">old_mergelist_cnt<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">&amp;&amp;<pos:position pos:line="23" pos:column="54"/></operator> <name><name pos:line="23" pos:column="47">lp<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">head<pos:position pos:line="23" pos:column="55"/></name></name></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56"> <block pos:line="23" pos:column="57">{
			<comment type="block" pos:line="24" pos:column="25">/* This mergelist does not exist in the state to be restored, but it
			 * still has inherited rules.  This can sometimes happen if a per-dir
			 * merge file calls setup_merge_file() in push_local_filters() and that
			 * leaves some inherited rules that aren't in the pushed list state. */</comment>
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><call><name pos:line="28" pos:column="29">DEBUG_GTE<pos:position pos:line="28" pos:column="38"/></name><argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">FILTER<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="47">2<pos:position pos:line="28" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="50"/></condition><then pos:line="28" pos:column="50"> <block pos:line="28" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="29" pos:column="33">rprintf<pos:position pos:line="29" pos:column="40"/></name><argument_list pos:line="29" pos:column="40">(<argument><expr><name pos:line="29" pos:column="41">FINFO<pos:position pos:line="29" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="48">"[%s] freeing parent_dirscan filters of mergelist #%d%s\n"<pos:position pos:line="29" pos:column="106"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="30" pos:column="41">who_am_i<pos:position pos:line="30" pos:column="49"/></name><argument_list pos:line="30" pos:column="49">()<pos:position pos:line="30" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">i<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="56">ex<pos:position pos:line="30" pos:column="58"/></name><operator pos:line="30" pos:column="58">-&gt;<pos:position pos:line="30" pos:column="63"/></operator><name pos:line="30" pos:column="60">u<pos:position pos:line="30" pos:column="61"/></name><operator pos:line="30" pos:column="61">.<pos:position pos:line="30" pos:column="62"/></operator><name pos:line="30" pos:column="62">mergelist<pos:position pos:line="30" pos:column="71"/></name><operator pos:line="30" pos:column="71">-&gt;<pos:position pos:line="30" pos:column="76"/></operator><name pos:line="30" pos:column="73">debug_type<pos:position pos:line="30" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="85"/></expr_stmt>
			}<pos:position pos:line="31" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">pop_filter_list<pos:position pos:line="32" pos:column="40"/></name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">lp<pos:position pos:line="32" pos:column="43"/></name></expr></argument>)<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
	}<pos:position pos:line="34" pos:column="10"/></block></for>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">pop<pos:position pos:line="36" pos:column="17"/></name></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18">
		<block type="pseudo"><return pos:line="37" pos:column="17">return;<pos:position pos:line="37" pos:column="24"/></return></block></then></if> <comment type="block" pos:line="37" pos:column="25">/* No state to restore. */</comment>

	<for pos:line="39" pos:column="9">for <control pos:line="39" pos:column="13">(<init><expr><name pos:line="39" pos:column="14">i<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">0<pos:position pos:line="39" pos:column="19"/></literal></expr>;<pos:position pos:line="39" pos:column="20"/></init> <condition><expr><name pos:line="39" pos:column="21">i<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">&lt;<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="25">old_mergelist_cnt<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></condition> <incr><expr><name pos:line="39" pos:column="44">i<pos:position pos:line="39" pos:column="45"/></name><operator pos:line="39" pos:column="45">++<pos:position pos:line="39" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="48"/></control> <block pos:line="39" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">filter_rule<pos:position pos:line="40" pos:column="28"/></name> <modifier pos:line="40" pos:column="29">*<pos:position pos:line="40" pos:column="30"/></modifier></type><name pos:line="40" pos:column="30">ex<pos:position pos:line="40" pos:column="32"/></name> <init pos:line="40" pos:column="33">= <expr><name><name pos:line="40" pos:column="35">mergelist_parents<pos:position pos:line="40" pos:column="52"/></name><index pos:line="40" pos:column="52">[<expr><name pos:line="40" pos:column="53">i<pos:position pos:line="40" pos:column="54"/></name></expr>]<pos:position pos:line="40" pos:column="55"/></index></name></expr></init></decl>;<pos:position pos:line="40" pos:column="56"/></decl_stmt>
		<if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">!<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">ex<pos:position pos:line="41" pos:column="24"/></name></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25">
			<block type="pseudo"><continue pos:line="42" pos:column="25">continue;<pos:position pos:line="42" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">memcpy<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name><name pos:line="43" pos:column="24">ex<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">u<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">.<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">mergelist<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="41">&amp;<pos:position pos:line="43" pos:column="46"/></operator><name><name pos:line="43" pos:column="42">pop<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">-&gt;<pos:position pos:line="43" pos:column="50"/></operator><name pos:line="43" pos:column="47">mergelists<pos:position pos:line="43" pos:column="57"/></name><index pos:line="43" pos:column="57">[<expr><name pos:line="43" pos:column="58">i<pos:position pos:line="43" pos:column="59"/></name></expr>]<pos:position pos:line="43" pos:column="60"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="62">sizeof <argument_list pos:line="43" pos:column="69">(<argument><expr><name pos:line="43" pos:column="70">filter_rule_list<pos:position pos:line="43" pos:column="86"/></name></expr></argument>)<pos:position pos:line="43" pos:column="87"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="89"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">free<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><name pos:line="46" pos:column="14">pop<pos:position pos:line="46" pos:column="17"/></name></expr></argument>)<pos:position pos:line="46" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="19"/></expr_stmt>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

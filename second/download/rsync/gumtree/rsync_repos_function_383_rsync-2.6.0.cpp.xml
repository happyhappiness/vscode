<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_383_rsync-2.6.0.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">uLong<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">ZEXPORT<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">crc32<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">crc<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">buf<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">len<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">uLong<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">crc<pos:position pos:line="2" pos:column="14"/></name></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">Bytef<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">buf<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uInt<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">len<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">buf<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">Z_NULL<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block type="pseudo"><return pos:line="6" pos:column="24">return <expr><literal type="number" pos:line="6" pos:column="31">0L<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></return></block></then></if>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">DYNAMIC_CRC_TABLE<pos:position pos:line="7" pos:column="25"/></name></cpp:ifdef>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">crc_table_empty<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="7">make_crc_table<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">()<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt></block></then></if>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="11" pos:column="5">crc<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <name pos:line="11" pos:column="11">crc<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">^<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">0xffffffffL<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name pos:line="12" pos:column="12">len<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&gt;=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="number" pos:line="12" pos:column="19">8<pos:position pos:line="12" pos:column="20"/></literal></expr>)<pos:position pos:line="12" pos:column="21"/></condition>
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">DO8<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">buf<pos:position pos:line="14" pos:column="14"/></name></expr></argument>)<pos:position pos:line="14" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><name pos:line="15" pos:column="7">len<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">-=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">8<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">len<pos:position pos:line="17" pos:column="12"/></name></expr>)<pos:position pos:line="17" pos:column="13"/></condition><then pos:line="17" pos:column="13"> <block type="pseudo"><do pos:line="17" pos:column="14">do <block pos:line="17" pos:column="17">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">DO1<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">buf<pos:position pos:line="18" pos:column="14"/></name></expr></argument>)<pos:position pos:line="18" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block> while <condition pos:line="19" pos:column="13">(<expr><operator pos:line="19" pos:column="14">--<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">len<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition>;<pos:position pos:line="19" pos:column="21"/></do></block></then></if>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">crc<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">^<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0xffffffffL<pos:position pos:line="20" pos:column="29"/></literal></expr>;<pos:position pos:line="20" pos:column="30"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function_decl></unit>

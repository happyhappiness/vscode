<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_295_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_delay_line<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">buf<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">flags_p<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">read_pos<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><literal type="number" pos:line="3" pos:column="31">0<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">j<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">len<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">mode<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">bp<pos:position pos:line="5" pos:column="17"/></name></decl>, <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="20">past_space<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>

	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>)<pos:position pos:line="7" pos:column="18"/></condition> <block pos:line="7" pos:column="19">{
		<for pos:line="8" pos:column="17">for <control pos:line="8" pos:column="21">(<init><expr><name pos:line="8" pos:column="22">j<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <name pos:line="8" pos:column="26">read_pos<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></init> <condition><expr><name pos:line="8" pos:column="36">j<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">&lt;<pos:position pos:line="8" pos:column="42"/></operator> <name pos:line="8" pos:column="40">deldelay_cnt<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">&amp;&amp;<pos:position pos:line="8" pos:column="63"/></operator> <name><name pos:line="8" pos:column="56">deldelay_buf<pos:position pos:line="8" pos:column="68"/></name><index pos:line="8" pos:column="68">[<expr><name pos:line="8" pos:column="69">j<pos:position pos:line="8" pos:column="70"/></name></expr>]<pos:position pos:line="8" pos:column="71"/></index></name></expr>;<pos:position pos:line="8" pos:column="72"/></condition> <incr><expr><name pos:line="8" pos:column="73">j<pos:position pos:line="8" pos:column="74"/></name><operator pos:line="8" pos:column="74">++<pos:position pos:line="8" pos:column="76"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="77"/></control> <block pos:line="8" pos:column="78">{}<pos:position pos:line="8" pos:column="80"/></block></for>
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">j<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">deldelay_cnt<pos:position pos:line="9" pos:column="37"/></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
			<block type="pseudo"><break pos:line="10" pos:column="25">break;<pos:position pos:line="10" pos:column="31"/></break></block></then></if>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">deldelay_fd<pos:position pos:line="11" pos:column="32"/></name> <operator pos:line="11" pos:column="33">&lt;<pos:position pos:line="11" pos:column="37"/></operator> <literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">j<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">&gt;<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="33">read_pos<pos:position pos:line="12" pos:column="41"/></name></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
				<block type="pseudo"><goto pos:line="13" pos:column="33">goto <name pos:line="13" pos:column="38">invalid_data<pos:position pos:line="13" pos:column="50"/></name>;<pos:position pos:line="13" pos:column="51"/></goto></block></then></if>
			<return pos:line="14" pos:column="25">return <expr><operator pos:line="14" pos:column="32">-<pos:position pos:line="14" pos:column="33"/></operator><literal type="number" pos:line="14" pos:column="33">1<pos:position pos:line="14" pos:column="34"/></literal></expr>;<pos:position pos:line="14" pos:column="35"/></return>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="16" pos:column="17">deldelay_cnt<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">-=<pos:position pos:line="16" pos:column="32"/></operator> <name pos:line="16" pos:column="33">read_pos<pos:position pos:line="16" pos:column="41"/></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">deldelay_cnt<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">==<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">deldelay_size<pos:position pos:line="17" pos:column="50"/></name></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51">
			<block type="pseudo"><goto pos:line="18" pos:column="25">goto <name pos:line="18" pos:column="30">invalid_data<pos:position pos:line="18" pos:column="42"/></name>;<pos:position pos:line="18" pos:column="43"/></goto></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">deldelay_cnt<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">&amp;&amp;<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="37">read_pos<pos:position pos:line="19" pos:column="45"/></name></expr>)<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46"> <block pos:line="19" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">memmove<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">deldelay_buf<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">deldelay_buf<pos:position pos:line="20" pos:column="59"/></name> <operator pos:line="20" pos:column="60">+<pos:position pos:line="20" pos:column="61"/></operator> <name pos:line="20" pos:column="62">read_pos<pos:position pos:line="20" pos:column="70"/></name></expr></argument>,
				<argument><expr><name pos:line="21" pos:column="33">deldelay_cnt<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="23" pos:column="17">len<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">read<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">deldelay_fd<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">deldelay_buf<pos:position pos:line="23" pos:column="53"/></name> <operator pos:line="23" pos:column="54">+<pos:position pos:line="23" pos:column="55"/></operator> <name pos:line="23" pos:column="56">deldelay_cnt<pos:position pos:line="23" pos:column="68"/></name></expr></argument>,
			   <argument><expr><name pos:line="24" pos:column="28">deldelay_size<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">-<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">deldelay_cnt<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">len<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">==<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">deldelay_cnt<pos:position pos:line="26" pos:column="41"/></name></expr>)<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42"> <block pos:line="26" pos:column="43">{
				<expr_stmt><expr><call><name pos:line="27" pos:column="33">rprintf<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">FERROR<pos:position pos:line="27" pos:column="47"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="28" pos:column="37">"ERROR: unexpected EOF in delete-delay file.\n"<pos:position pos:line="28" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="86"/></expr_stmt>
			}<pos:position pos:line="29" pos:column="26"/></block></then></if>
			<return pos:line="30" pos:column="25">return <expr><operator pos:line="30" pos:column="32">-<pos:position pos:line="30" pos:column="33"/></operator><literal type="number" pos:line="30" pos:column="33">1<pos:position pos:line="30" pos:column="34"/></literal></expr>;<pos:position pos:line="30" pos:column="35"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">len<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">&lt;<pos:position pos:line="32" pos:column="29"/></operator> <literal type="number" pos:line="32" pos:column="27">0<pos:position pos:line="32" pos:column="28"/></literal></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29"> <block pos:line="32" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">rsyserr<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">FERROR<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">errno<pos:position pos:line="33" pos:column="46"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="34" pos:column="33">"reading delete-delay file"<pos:position pos:line="34" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="62"/></expr_stmt>
			<return pos:line="35" pos:column="25">return <expr><operator pos:line="35" pos:column="32">-<pos:position pos:line="35" pos:column="33"/></operator><literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr>;<pos:position pos:line="35" pos:column="35"/></return>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="37" pos:column="17">deldelay_cnt<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">+=<pos:position pos:line="37" pos:column="32"/></operator> <name pos:line="37" pos:column="33">len<pos:position pos:line="37" pos:column="36"/></name></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">read_pos<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <literal type="number" pos:line="38" pos:column="28">0<pos:position pos:line="38" pos:column="29"/></literal></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="41" pos:column="9">bp<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <name pos:line="41" pos:column="14">deldelay_buf<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">+<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">read_pos<pos:position pos:line="41" pos:column="37"/></name></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">*<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">bp<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">==<pos:position pos:line="42" pos:column="19"/></operator> <literal type="char" pos:line="42" pos:column="20">'!'<pos:position pos:line="42" pos:column="23"/></literal></expr>)<pos:position pos:line="42" pos:column="24"/></condition><then pos:line="42" pos:column="24"> <block pos:line="42" pos:column="25">{
		<expr_stmt><expr><name pos:line="43" pos:column="17">bp<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">++<pos:position pos:line="43" pos:column="21"/></operator></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="44" pos:column="17">*<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">flags_p<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <name pos:line="44" pos:column="28">DEL_NO_UID_WRITE<pos:position pos:line="44" pos:column="44"/></name></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then> <else pos:line="45" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><operator pos:line="46" pos:column="17">*<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">flags_p<pos:position pos:line="46" pos:column="25"/></name> <operator pos:line="46" pos:column="26">=<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="28">0<pos:position pos:line="46" pos:column="29"/></literal></expr>;<pos:position pos:line="46" pos:column="30"/></expr_stmt></block></else></if>

	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><call><name pos:line="48" pos:column="13">sscanf<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">bp<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="24">"%x "<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="31">&amp;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="32">mode<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call> <operator pos:line="48" pos:column="38">!=<pos:position pos:line="48" pos:column="40"/></operator> <literal type="number" pos:line="48" pos:column="41">1<pos:position pos:line="48" pos:column="42"/></literal></expr>)<pos:position pos:line="48" pos:column="43"/></condition><then pos:line="48" pos:column="43"> <block pos:line="48" pos:column="44">{
	  <label><name pos:line="49" pos:column="11">invalid_data<pos:position pos:line="49" pos:column="23"/></name>:<pos:position pos:line="49" pos:column="24"/></label>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">rprintf<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><name pos:line="50" pos:column="25">FERROR<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="33">"ERROR: invalid data in delete-delay file.\n"<pos:position pos:line="50" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="80"/></expr_stmt>
		<return pos:line="51" pos:column="17">return <expr><operator pos:line="51" pos:column="24">-<pos:position pos:line="51" pos:column="25"/></operator><literal type="number" pos:line="51" pos:column="25">1<pos:position pos:line="51" pos:column="26"/></literal></expr>;<pos:position pos:line="51" pos:column="27"/></return>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="53" pos:column="9">past_space<pos:position pos:line="53" pos:column="19"/></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <call><name pos:line="53" pos:column="22">strchr<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">bp<pos:position pos:line="53" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="33">' '<pos:position pos:line="53" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="37"/></argument_list></call> <operator pos:line="53" pos:column="38">+<pos:position pos:line="53" pos:column="39"/></operator> <literal type="number" pos:line="53" pos:column="40">1<pos:position pos:line="53" pos:column="41"/></literal></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name pos:line="54" pos:column="9">len<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">j<pos:position pos:line="54" pos:column="16"/></name> <operator pos:line="54" pos:column="17">-<pos:position pos:line="54" pos:column="18"/></operator> <name pos:line="54" pos:column="19">read_pos<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">-<pos:position pos:line="54" pos:column="29"/></operator> <operator pos:line="54" pos:column="30">(<pos:position pos:line="54" pos:column="31"/></operator><name pos:line="54" pos:column="31">past_space<pos:position pos:line="54" pos:column="41"/></name> <operator pos:line="54" pos:column="42">-<pos:position pos:line="54" pos:column="43"/></operator> <name pos:line="54" pos:column="44">bp<pos:position pos:line="54" pos:column="46"/></name><operator pos:line="54" pos:column="46">)<pos:position pos:line="54" pos:column="47"/></operator> <operator pos:line="54" pos:column="48">+<pos:position pos:line="54" pos:column="49"/></operator> <literal type="number" pos:line="54" pos:column="50">1<pos:position pos:line="54" pos:column="51"/></literal></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt> <comment type="block" pos:line="54" pos:column="53">/* count the '\0' */</comment>
	<expr_stmt><expr><name pos:line="55" pos:column="9">read_pos<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">j<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">+<pos:position pos:line="55" pos:column="23"/></operator> <literal type="number" pos:line="55" pos:column="24">1<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></expr_stmt>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">len<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&gt;<pos:position pos:line="57" pos:column="21"/></operator> <name pos:line="57" pos:column="19">MAXPATHLEN<pos:position pos:line="57" pos:column="29"/></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30"> <block pos:line="57" pos:column="31">{
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">rprintf<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">FERROR<pos:position pos:line="58" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="33">"ERROR: filename too long in delete-delay file.\n"<pos:position pos:line="58" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="85"/></expr_stmt>
		<return pos:line="59" pos:column="17">return <expr><operator pos:line="59" pos:column="24">-<pos:position pos:line="59" pos:column="25"/></operator><literal type="number" pos:line="59" pos:column="25">1<pos:position pos:line="59" pos:column="26"/></literal></expr>;<pos:position pos:line="59" pos:column="27"/></return>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="62" pos:column="9">/* The caller needs the name in a MAXPATHLEN buffer, so we copy it
	 * instead of returning a pointer to our buffer. */</comment>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">memcpy<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">buf<pos:position pos:line="64" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="21">past_space<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="33">len<pos:position pos:line="64" pos:column="36"/></name></expr></argument>)<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>

	<return pos:line="66" pos:column="9">return <expr><name pos:line="66" pos:column="16">mode<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_736_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">pid_t<pos:position pos:line="1" pos:column="6"/></name></type> <name pos:line="1" pos:column="7">waitpid<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">pid_t<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">pid<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">statptr<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">options<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">HAVE_WAIT4<pos:position pos:line="3" pos:column="18"/></name></cpp:ifdef>
	<return pos:line="4" pos:column="9">return <expr><call><name pos:line="4" pos:column="16">wait4<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">pid<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="27">statptr<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="36">options<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="45">NULL<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="51"/></return>
<cpp:else pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">else<pos:position pos:line="5" pos:column="6"/></cpp:directive></cpp:else>
	<comment type="block" pos:line="6" pos:column="9">/* If wait4 is also not available, try wait3 for SVR3 variants */</comment>
	<comment type="block" pos:line="7" pos:column="9">/* Less ideal because can't actually request a specific pid */</comment>
	<comment type="block" pos:line="8" pos:column="9">/* At least the WNOHANG option is supported */</comment>
	<comment type="block" pos:line="9" pos:column="9">/* Code borrowed from apache fragment written by dwd@bell-labs.com */</comment>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">tmp_pid<pos:position pos:line="10" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="22">dummystat<pos:position pos:line="10" pos:column="31"/></name></decl>;<pos:position pos:line="10" pos:column="32"/></decl_stmt><empty_stmt pos:line="10" pos:column="32">;<pos:position pos:line="10" pos:column="33"/></empty_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">kill<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><name pos:line="11" pos:column="18">pid<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="23">0<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">-<pos:position pos:line="11" pos:column="30"/></operator><literal type="number" pos:line="11" pos:column="30">1<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">errno<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">ECHILD<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">statptr<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">==<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">statptr<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <operator pos:line="16" pos:column="27">&amp;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="28">dummystat<pos:position pos:line="16" pos:column="37"/></name></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt></block></then></if>
	<while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">tmp_pid<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <call><name pos:line="17" pos:column="28">wait3<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">statptr<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">options<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="52">0<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call><operator pos:line="17" pos:column="54">)<pos:position pos:line="17" pos:column="55"/></operator> <operator pos:line="17" pos:column="56">!=<pos:position pos:line="17" pos:column="58"/></operator> <name pos:line="17" pos:column="59">pid<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">)<pos:position pos:line="17" pos:column="63"/></operator> <operator pos:line="17" pos:column="64">&amp;&amp;<pos:position pos:line="17" pos:column="74"/></operator>
		    <operator pos:line="18" pos:column="21">(<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">tmp_pid<pos:position pos:line="18" pos:column="29"/></name> <operator pos:line="18" pos:column="30">!=<pos:position pos:line="18" pos:column="32"/></operator> <operator pos:line="18" pos:column="33">-<pos:position pos:line="18" pos:column="34"/></operator><literal type="number" pos:line="18" pos:column="34">1<pos:position pos:line="18" pos:column="35"/></literal><operator pos:line="18" pos:column="35">)<pos:position pos:line="18" pos:column="36"/></operator> <operator pos:line="18" pos:column="37">&amp;&amp;<pos:position pos:line="18" pos:column="47"/></operator> <operator pos:line="18" pos:column="40">(<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">tmp_pid<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">!=<pos:position pos:line="18" pos:column="51"/></operator> <literal type="number" pos:line="18" pos:column="52">0<pos:position pos:line="18" pos:column="53"/></literal><operator pos:line="18" pos:column="53">)<pos:position pos:line="18" pos:column="54"/></operator> <operator pos:line="18" pos:column="55">&amp;&amp;<pos:position pos:line="18" pos:column="65"/></operator> <operator pos:line="18" pos:column="58">(<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">pid<pos:position pos:line="18" pos:column="62"/></name> <operator pos:line="18" pos:column="63">!=<pos:position pos:line="18" pos:column="65"/></operator> <operator pos:line="18" pos:column="66">-<pos:position pos:line="18" pos:column="67"/></operator><literal type="number" pos:line="18" pos:column="67">1<pos:position pos:line="18" pos:column="68"/></literal><operator pos:line="18" pos:column="68">)<pos:position pos:line="18" pos:column="69"/></operator></expr>)<pos:position pos:line="18" pos:column="70"/></condition>
	    <block type="pseudo"><empty_stmt pos:line="19" pos:column="13">;<pos:position pos:line="19" pos:column="14"/></empty_stmt></block></while>
	<return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">tmp_pid<pos:position pos:line="20" pos:column="23"/></name></expr>;<pos:position pos:line="20" pos:column="24"/></return>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

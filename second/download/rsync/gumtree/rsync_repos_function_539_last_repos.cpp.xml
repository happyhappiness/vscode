<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_539_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">NORETURN<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">void<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">fatal_unsafe_io_error<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* This (sadly) can only happen when pushing data because
	 * the sender does not know about what kind of delete
	 * is in effect on the receiving side when pulling. */</comment>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">rprintf<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">FERROR_XFER<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="30">"FATAL I/O ERROR: dying to avoid a --delete-%s issue with a pre-3.0.7 receiver.\n"<pos:position pos:line="6" pos:column="112"/></literal></expr></argument>,
		<argument><expr><ternary><condition><expr><name pos:line="7" pos:column="17">delete_during<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="34">2<pos:position pos:line="7" pos:column="35"/></literal></expr> ?<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <expr><literal type="string" pos:line="7" pos:column="38">"delay"<pos:position pos:line="7" pos:column="45"/></literal></expr> <pos:position pos:line="7" pos:column="46"/></then><else pos:line="7" pos:column="46">: <expr><literal type="string" pos:line="7" pos:column="48">"during"<pos:position pos:line="7" pos:column="56"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">exit_cleanup<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">RERR_UNSUPPORTED<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_584.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">recv_files<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f_in<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">file_list<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">flist<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">local_name<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="66">int<pos:position pos:line="1" pos:column="69"/></name></type> <name pos:line="1" pos:column="70">f_gen<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{  
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd1<pos:position pos:line="3" pos:column="10"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="11">fd2<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">fname<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">fnametmp<pos:position pos:line="6" pos:column="16"/></name><index pos:line="6" pos:column="16">[<expr><name pos:line="6" pos:column="17">MAXPATHLEN<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">map_struct<pos:position pos:line="7" pos:column="20"/></name></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">buf<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">i<pos:position pos:line="8" pos:column="8"/></name></decl>;<pos:position pos:line="8" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="9" pos:column="3">struct<pos:position pos:line="9" pos:column="9"/></name> <name pos:line="9" pos:column="10">file_struct<pos:position pos:line="9" pos:column="21"/></name></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">file<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">phase<pos:position pos:line="10" pos:column="12"/></name><init pos:line="10" pos:column="12">=<expr><literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">int<pos:position pos:line="11" pos:column="6"/></name></type> <name pos:line="11" pos:column="7">recv_ok<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">verbose<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&gt;<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="17">2<pos:position pos:line="13" pos:column="18"/></literal></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19"> <block pos:line="13" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">fprintf<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">FINFO<pos:position pos:line="14" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="14" pos:column="19">"recv_files(%d) starting\n"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>,<argument><expr><name><name pos:line="14" pos:column="47">flist<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">count<pos:position pos:line="14" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">recurse<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&amp;&amp;<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="18">delete_mode<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">&amp;&amp;<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="33">!<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">local_name<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">&amp;&amp;<pos:position pos:line="17" pos:column="55"/></operator> <name><name pos:line="17" pos:column="48">flist<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">count<pos:position pos:line="17" pos:column="60"/></name></name><operator pos:line="17" pos:column="60">&gt;<pos:position pos:line="17" pos:column="64"/></operator><literal type="number" pos:line="17" pos:column="61">0<pos:position pos:line="17" pos:column="62"/></literal></expr>)<pos:position pos:line="17" pos:column="63"/></condition><then pos:line="17" pos:column="63"> <block pos:line="17" pos:column="64">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">delete_files<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">flist<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <while pos:line="21" pos:column="3">while <condition pos:line="21" pos:column="9">(<expr><literal type="number" pos:line="21" pos:column="10">1<pos:position pos:line="21" pos:column="11"/></literal></expr>)<pos:position pos:line="21" pos:column="12"/></condition> 
    <block pos:line="22" pos:column="5">{      
      <expr_stmt><expr><name pos:line="23" pos:column="7">i<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">read_int<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">f_in<pos:position pos:line="23" pos:column="24"/></name></expr></argument>)<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
      <if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name pos:line="24" pos:column="11">i<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">==<pos:position pos:line="24" pos:column="15"/></operator> <operator pos:line="24" pos:column="16">-<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">phase<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator><literal type="number" pos:line="25" pos:column="20">0<pos:position pos:line="25" pos:column="21"/></literal> <operator pos:line="25" pos:column="22">&amp;&amp;<pos:position pos:line="25" pos:column="32"/></operator> <name pos:line="25" pos:column="25">remote_version<pos:position pos:line="25" pos:column="39"/></name> <operator pos:line="25" pos:column="40">&gt;=<pos:position pos:line="25" pos:column="45"/></operator> <literal type="number" pos:line="25" pos:column="43">13<pos:position pos:line="25" pos:column="45"/></literal></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46"> <block pos:line="25" pos:column="47">{
	  <expr_stmt><expr><name pos:line="26" pos:column="11">phase<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">++<pos:position pos:line="26" pos:column="18"/></operator></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="27" pos:column="11">csum_length<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">SUM_LENGTH<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
	  <if pos:line="28" pos:column="11">if <condition pos:line="28" pos:column="14">(<expr><name pos:line="28" pos:column="15">verbose<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&gt;<pos:position pos:line="28" pos:column="27"/></operator> <literal type="number" pos:line="28" pos:column="25">2<pos:position pos:line="28" pos:column="26"/></literal></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="13">fprintf<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">FINFO<pos:position pos:line="29" pos:column="26"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="27">"recv_files phase=%d\n"<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="29" pos:column="51">phase<pos:position pos:line="29" pos:column="56"/></name></expr></argument>)<pos:position pos:line="29" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="58"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><call><name pos:line="30" pos:column="11">write_int<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">f_gen<pos:position pos:line="30" pos:column="26"/></name></expr></argument>,<argument><expr><operator pos:line="30" pos:column="27">-<pos:position pos:line="30" pos:column="28"/></operator><literal type="number" pos:line="30" pos:column="28">1<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="31" pos:column="11">write_flush<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">f_gen<pos:position pos:line="31" pos:column="28"/></name></expr></argument>)<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
	  <continue pos:line="32" pos:column="11">continue;<pos:position pos:line="32" pos:column="20"/></continue>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>
	<break pos:line="34" pos:column="9">break;<pos:position pos:line="34" pos:column="15"/></break>
      }<pos:position pos:line="35" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="37" pos:column="7">file<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <name><name pos:line="37" pos:column="14">flist<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">-&gt;<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="21">files<pos:position pos:line="37" pos:column="26"/></name><index pos:line="37" pos:column="26">[<expr><name pos:line="37" pos:column="27">i<pos:position pos:line="37" pos:column="28"/></name></expr>]<pos:position pos:line="37" pos:column="29"/></index></name></expr>;<pos:position pos:line="37" pos:column="30"/></expr_stmt>
      <expr_stmt><expr><name pos:line="38" pos:column="7">fname<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">f_name<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">file<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>

      <if pos:line="40" pos:column="7">if <condition pos:line="40" pos:column="10">(<expr><name pos:line="40" pos:column="11">local_name<pos:position pos:line="40" pos:column="21"/></name></expr>)<pos:position pos:line="40" pos:column="22"/></condition><then pos:line="40" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">fname<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <name pos:line="41" pos:column="17">local_name<pos:position pos:line="41" pos:column="27"/></name></expr>;<pos:position pos:line="41" pos:column="28"/></expr_stmt></block></then></if>

      <if pos:line="43" pos:column="7">if <condition pos:line="43" pos:column="10">(<expr><name pos:line="43" pos:column="11">dry_run<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19"> <block pos:line="43" pos:column="20">{
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">am_server<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">&amp;&amp;<pos:position pos:line="44" pos:column="34"/></operator> <name pos:line="44" pos:column="27">verbose<pos:position pos:line="44" pos:column="34"/></name></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="11">printf<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><literal type="string" pos:line="45" pos:column="18">"%s\n"<pos:position pos:line="45" pos:column="24"/></literal></expr></argument>,<argument><expr><name pos:line="45" pos:column="25">fname<pos:position pos:line="45" pos:column="30"/></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt></block></then></if>
	<continue pos:line="46" pos:column="9">continue;<pos:position pos:line="46" pos:column="18"/></continue>
      }<pos:position pos:line="47" pos:column="8"/></block></then></if>

      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name pos:line="49" pos:column="11">verbose<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">&gt;<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="21">2<pos:position pos:line="49" pos:column="22"/></literal></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">FINFO<pos:position pos:line="50" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="50" pos:column="23">"recv_files(%s)\n"<pos:position pos:line="50" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="50" pos:column="42">fname<pos:position pos:line="50" pos:column="47"/></name></expr></argument>)<pos:position pos:line="50" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="52" pos:column="7">/* open the file */</comment>  
      <expr_stmt><expr><name pos:line="53" pos:column="7">fd1<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <call><name pos:line="53" pos:column="13">open<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><name pos:line="53" pos:column="18">fname<pos:position pos:line="53" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="24">O_RDONLY<pos:position pos:line="53" pos:column="32"/></name></expr></argument>)<pos:position pos:line="53" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>

      <if pos:line="55" pos:column="7">if <condition pos:line="55" pos:column="10">(<expr><name pos:line="55" pos:column="11">fd1<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">!=<pos:position pos:line="55" pos:column="17"/></operator> <operator pos:line="55" pos:column="18">-<pos:position pos:line="55" pos:column="19"/></operator><literal type="number" pos:line="55" pos:column="19">1<pos:position pos:line="55" pos:column="20"/></literal> <operator pos:line="55" pos:column="21">&amp;&amp;<pos:position pos:line="55" pos:column="31"/></operator> <call><name pos:line="55" pos:column="24">fstat<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">fd1<pos:position pos:line="55" pos:column="33"/></name></expr></argument>,<argument><expr><operator pos:line="55" pos:column="34">&amp;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="35">st<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call> <operator pos:line="55" pos:column="39">!=<pos:position pos:line="55" pos:column="41"/></operator> <literal type="number" pos:line="55" pos:column="42">0<pos:position pos:line="55" pos:column="43"/></literal></expr>)<pos:position pos:line="55" pos:column="44"/></condition><then pos:line="55" pos:column="44"> <block pos:line="55" pos:column="45">{
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">fprintf<pos:position pos:line="56" pos:column="16"/></name><argument_list pos:line="56" pos:column="16">(<argument><expr><name pos:line="56" pos:column="17">FERROR<pos:position pos:line="56" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="56" pos:column="24">"fstat %s : %s\n"<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="56" pos:column="42">fname<pos:position pos:line="56" pos:column="47"/></name></expr></argument>,<argument><expr><call><name pos:line="56" pos:column="48">strerror<pos:position pos:line="56" pos:column="56"/></name><argument_list pos:line="56" pos:column="56">(<argument><expr><name pos:line="56" pos:column="57">errno<pos:position pos:line="56" pos:column="62"/></name></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="65"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">receive_data<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">f_in<pos:position pos:line="57" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="27">NULL<pos:position pos:line="57" pos:column="31"/></name></expr></argument>,<argument><expr><operator pos:line="57" pos:column="32">-<pos:position pos:line="57" pos:column="33"/></operator><literal type="number" pos:line="57" pos:column="33">1<pos:position pos:line="57" pos:column="34"/></literal></expr></argument>,<argument><expr><name pos:line="57" pos:column="35">NULL<pos:position pos:line="57" pos:column="39"/></name></expr></argument>)<pos:position pos:line="57" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">close<pos:position pos:line="58" pos:column="14"/></name><argument_list pos:line="58" pos:column="14">(<argument><expr><name pos:line="58" pos:column="15">fd1<pos:position pos:line="58" pos:column="18"/></name></expr></argument>)<pos:position pos:line="58" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
	<continue pos:line="59" pos:column="9">continue;<pos:position pos:line="59" pos:column="18"/></continue>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>

      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><name pos:line="62" pos:column="11">fd1<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">!=<pos:position pos:line="62" pos:column="17"/></operator> <operator pos:line="62" pos:column="18">-<pos:position pos:line="62" pos:column="19"/></operator><literal type="number" pos:line="62" pos:column="19">1<pos:position pos:line="62" pos:column="20"/></literal> <operator pos:line="62" pos:column="21">&amp;&amp;<pos:position pos:line="62" pos:column="31"/></operator> <operator pos:line="62" pos:column="24">!<pos:position pos:line="62" pos:column="25"/></operator><call><name pos:line="62" pos:column="25">S_ISREG<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name><name pos:line="62" pos:column="33">st<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">.<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="36">st_mode<pos:position pos:line="62" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="45"/></condition><then pos:line="62" pos:column="45"> <block pos:line="62" pos:column="46">{
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">fprintf<pos:position pos:line="63" pos:column="16"/></name><argument_list pos:line="63" pos:column="16">(<argument><expr><name pos:line="63" pos:column="17">FERROR<pos:position pos:line="63" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="63" pos:column="24">"%s : not a regular file (recv_files)\n"<pos:position pos:line="63" pos:column="64"/></literal></expr></argument>,<argument><expr><name pos:line="63" pos:column="65">fname<pos:position pos:line="63" pos:column="70"/></name></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">receive_data<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">f_in<pos:position pos:line="64" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="64" pos:column="27">NULL<pos:position pos:line="64" pos:column="31"/></name></expr></argument>,<argument><expr><operator pos:line="64" pos:column="32">-<pos:position pos:line="64" pos:column="33"/></operator><literal type="number" pos:line="64" pos:column="33">1<pos:position pos:line="64" pos:column="34"/></literal></expr></argument>,<argument><expr><name pos:line="64" pos:column="35">NULL<pos:position pos:line="64" pos:column="39"/></name></expr></argument>)<pos:position pos:line="64" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">close<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">(<argument><expr><name pos:line="65" pos:column="15">fd1<pos:position pos:line="65" pos:column="18"/></name></expr></argument>)<pos:position pos:line="65" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="20"/></expr_stmt>
	<continue pos:line="66" pos:column="9">continue;<pos:position pos:line="66" pos:column="18"/></continue>
      }<pos:position pos:line="67" pos:column="8"/></block></then></if>

      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><name pos:line="69" pos:column="11">fd1<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">!=<pos:position pos:line="69" pos:column="17"/></operator> <operator pos:line="69" pos:column="18">-<pos:position pos:line="69" pos:column="19"/></operator><literal type="number" pos:line="69" pos:column="19">1<pos:position pos:line="69" pos:column="20"/></literal> <operator pos:line="69" pos:column="21">&amp;&amp;<pos:position pos:line="69" pos:column="31"/></operator> <name><name pos:line="69" pos:column="24">st<pos:position pos:line="69" pos:column="26"/></name><operator pos:line="69" pos:column="26">.<pos:position pos:line="69" pos:column="27"/></operator><name pos:line="69" pos:column="27">st_size<pos:position pos:line="69" pos:column="34"/></name></name> <operator pos:line="69" pos:column="35">&gt;<pos:position pos:line="69" pos:column="39"/></operator> <literal type="number" pos:line="69" pos:column="37">0<pos:position pos:line="69" pos:column="38"/></literal></expr>)<pos:position pos:line="69" pos:column="39"/></condition><then pos:line="69" pos:column="39"> <block pos:line="69" pos:column="40">{
	<expr_stmt><expr><name pos:line="70" pos:column="9">buf<pos:position pos:line="70" pos:column="12"/></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <call><name pos:line="70" pos:column="15">map_file<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">fd1<pos:position pos:line="70" pos:column="27"/></name></expr></argument>,<argument><expr><name><name pos:line="70" pos:column="28">st<pos:position pos:line="70" pos:column="30"/></name><operator pos:line="70" pos:column="30">.<pos:position pos:line="70" pos:column="31"/></operator><name pos:line="70" pos:column="31">st_size<pos:position pos:line="70" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="40"/></expr_stmt>
	<if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">verbose<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">&gt;<pos:position pos:line="71" pos:column="25"/></operator> <literal type="number" pos:line="71" pos:column="23">2<pos:position pos:line="71" pos:column="24"/></literal></expr>)<pos:position pos:line="71" pos:column="25"/></condition><then pos:line="71" pos:column="25">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="11">fprintf<pos:position pos:line="72" pos:column="18"/></name><argument_list pos:line="72" pos:column="18">(<argument><expr><name pos:line="72" pos:column="19">FINFO<pos:position pos:line="72" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="72" pos:column="25">"recv mapped %s of size %d\n"<pos:position pos:line="72" pos:column="54"/></literal></expr></argument>,<argument><expr><name pos:line="72" pos:column="55">fname<pos:position pos:line="72" pos:column="60"/></name></expr></argument>,<argument><expr><operator pos:line="72" pos:column="61">(<pos:position pos:line="72" pos:column="62"/></operator><name pos:line="72" pos:column="62">int<pos:position pos:line="72" pos:column="65"/></name><operator pos:line="72" pos:column="65">)<pos:position pos:line="72" pos:column="66"/></operator><name><name pos:line="72" pos:column="66">st<pos:position pos:line="72" pos:column="68"/></name><operator pos:line="72" pos:column="68">.<pos:position pos:line="72" pos:column="69"/></operator><name pos:line="72" pos:column="69">st_size<pos:position pos:line="72" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="78"/></expr_stmt></block></then></if>
      }<pos:position pos:line="73" pos:column="8"/></block></then> <else pos:line="73" pos:column="9">else <block pos:line="73" pos:column="14">{
	<expr_stmt><expr><name pos:line="74" pos:column="9">buf<pos:position pos:line="74" pos:column="12"/></name> <operator pos:line="74" pos:column="13">=<pos:position pos:line="74" pos:column="14"/></operator> <name pos:line="74" pos:column="15">NULL<pos:position pos:line="74" pos:column="19"/></name></expr>;<pos:position pos:line="74" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></else></if>

      <comment type="block" pos:line="77" pos:column="7">/* open tmp file */</comment>
      <if pos:line="78" pos:column="7">if <condition pos:line="78" pos:column="10">(<expr><call><name pos:line="78" pos:column="11">strlen<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">(<argument><expr><name pos:line="78" pos:column="18">fname<pos:position pos:line="78" pos:column="23"/></name></expr></argument>)<pos:position pos:line="78" pos:column="24"/></argument_list></call> <operator pos:line="78" pos:column="25">&gt;<pos:position pos:line="78" pos:column="29"/></operator> <operator pos:line="78" pos:column="27">(<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="28">MAXPATHLEN<pos:position pos:line="78" pos:column="38"/></name><operator pos:line="78" pos:column="38">-<pos:position pos:line="78" pos:column="39"/></operator><literal type="number" pos:line="78" pos:column="39">8<pos:position pos:line="78" pos:column="40"/></literal><operator pos:line="78" pos:column="40">)<pos:position pos:line="78" pos:column="41"/></operator></expr>)<pos:position pos:line="78" pos:column="42"/></condition><then pos:line="78" pos:column="42"> <block pos:line="78" pos:column="43">{
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">fprintf<pos:position pos:line="79" pos:column="16"/></name><argument_list pos:line="79" pos:column="16">(<argument><expr><name pos:line="79" pos:column="17">FERROR<pos:position pos:line="79" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="79" pos:column="24">"filename too long\n"<pos:position pos:line="79" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="47"/></expr_stmt>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">buf<pos:position pos:line="80" pos:column="16"/></name></expr>)<pos:position pos:line="80" pos:column="17"/></condition><then pos:line="80" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="18">unmap_file<pos:position pos:line="80" pos:column="28"/></name><argument_list pos:line="80" pos:column="28">(<argument><expr><name pos:line="80" pos:column="29">buf<pos:position pos:line="80" pos:column="32"/></name></expr></argument>)<pos:position pos:line="80" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="34"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="81" pos:column="9">close<pos:position pos:line="81" pos:column="14"/></name><argument_list pos:line="81" pos:column="14">(<argument><expr><name pos:line="81" pos:column="15">fd1<pos:position pos:line="81" pos:column="18"/></name></expr></argument>)<pos:position pos:line="81" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="20"/></expr_stmt>
	<continue pos:line="82" pos:column="9">continue;<pos:position pos:line="82" pos:column="18"/></continue>
      }<pos:position pos:line="83" pos:column="8"/></block></then></if>
      <if pos:line="84" pos:column="7">if <condition pos:line="84" pos:column="10">(<expr><name pos:line="84" pos:column="11">tmpdir<pos:position pos:line="84" pos:column="17"/></name></expr>)<pos:position pos:line="84" pos:column="18"/></condition><then pos:line="84" pos:column="18"> <block pos:line="84" pos:column="19">{
	      <decl_stmt><decl><type><name pos:line="85" pos:column="15">char<pos:position pos:line="85" pos:column="19"/></name> <modifier pos:line="85" pos:column="20">*<pos:position pos:line="85" pos:column="21"/></modifier></type><name pos:line="85" pos:column="21">f<pos:position pos:line="85" pos:column="22"/></name></decl>;<pos:position pos:line="85" pos:column="23"/></decl_stmt>
	      <expr_stmt><expr><name pos:line="86" pos:column="15">f<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">=<pos:position pos:line="86" pos:column="18"/></operator> <call><name pos:line="86" pos:column="19">strrchr<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">(<argument><expr><name pos:line="86" pos:column="27">fname<pos:position pos:line="86" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="86" pos:column="33">'/'<pos:position pos:line="86" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>
	      <if pos:line="87" pos:column="15">if <condition pos:line="87" pos:column="18">(<expr><name pos:line="87" pos:column="19">f<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">==<pos:position pos:line="87" pos:column="23"/></operator> <name pos:line="87" pos:column="24">NULL<pos:position pos:line="87" pos:column="28"/></name></expr>)<pos:position pos:line="87" pos:column="29"/></condition><then pos:line="87" pos:column="29"> 
		      <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="23">f<pos:position pos:line="88" pos:column="24"/></name> <operator pos:line="88" pos:column="25">=<pos:position pos:line="88" pos:column="26"/></operator> <name pos:line="88" pos:column="27">fname<pos:position pos:line="88" pos:column="32"/></name></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt></block></then>
	      <else pos:line="89" pos:column="15">else 
		      <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="23">f<pos:position pos:line="90" pos:column="24"/></name><operator pos:line="90" pos:column="24">++<pos:position pos:line="90" pos:column="26"/></operator></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt></block></else></if>
	      <expr_stmt><expr><call><name pos:line="91" pos:column="15">sprintf<pos:position pos:line="91" pos:column="22"/></name><argument_list pos:line="91" pos:column="22">(<argument><expr><name pos:line="91" pos:column="23">fnametmp<pos:position pos:line="91" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="91" pos:column="32">"%s/%s.XXXXXX"<pos:position pos:line="91" pos:column="46"/></literal></expr></argument>,<argument><expr><name pos:line="91" pos:column="47">tmpdir<pos:position pos:line="91" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="91" pos:column="54">f<pos:position pos:line="91" pos:column="55"/></name></expr></argument>)<pos:position pos:line="91" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="57"/></expr_stmt>
      }<pos:position pos:line="92" pos:column="8"/></block></then> <else pos:line="92" pos:column="9">else <block pos:line="92" pos:column="14">{
	      <expr_stmt><expr><call><name pos:line="93" pos:column="15">sprintf<pos:position pos:line="93" pos:column="22"/></name><argument_list pos:line="93" pos:column="22">(<argument><expr><name pos:line="93" pos:column="23">fnametmp<pos:position pos:line="93" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="93" pos:column="32">"%s.XXXXXX"<pos:position pos:line="93" pos:column="43"/></literal></expr></argument>,<argument><expr><name pos:line="93" pos:column="44">fname<pos:position pos:line="93" pos:column="49"/></name></expr></argument>)<pos:position pos:line="93" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="51"/></expr_stmt>
      }<pos:position pos:line="94" pos:column="8"/></block></else></if>
      <if pos:line="95" pos:column="7">if <condition pos:line="95" pos:column="10">(<expr><name pos:line="95" pos:column="11">NULL<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">==<pos:position pos:line="95" pos:column="18"/></operator> <call><name pos:line="95" pos:column="19">do_mktemp<pos:position pos:line="95" pos:column="28"/></name><argument_list pos:line="95" pos:column="28">(<argument><expr><name pos:line="95" pos:column="29">fnametmp<pos:position pos:line="95" pos:column="37"/></name></expr></argument>)<pos:position pos:line="95" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="39"/></condition><then pos:line="95" pos:column="39"> <block pos:line="95" pos:column="40">{
	<expr_stmt><expr><call><name pos:line="96" pos:column="9">fprintf<pos:position pos:line="96" pos:column="16"/></name><argument_list pos:line="96" pos:column="16">(<argument><expr><name pos:line="96" pos:column="17">FERROR<pos:position pos:line="96" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="96" pos:column="24">"mktemp %s failed\n"<pos:position pos:line="96" pos:column="44"/></literal></expr></argument>,<argument><expr><name pos:line="96" pos:column="45">fnametmp<pos:position pos:line="96" pos:column="53"/></name></expr></argument>)<pos:position pos:line="96" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="97" pos:column="9">receive_data<pos:position pos:line="97" pos:column="21"/></name><argument_list pos:line="97" pos:column="21">(<argument><expr><name pos:line="97" pos:column="22">f_in<pos:position pos:line="97" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="97" pos:column="27">buf<pos:position pos:line="97" pos:column="30"/></name></expr></argument>,<argument><expr><operator pos:line="97" pos:column="31">-<pos:position pos:line="97" pos:column="32"/></operator><literal type="number" pos:line="97" pos:column="32">1<pos:position pos:line="97" pos:column="33"/></literal></expr></argument>,<argument><expr><name pos:line="97" pos:column="34">NULL<pos:position pos:line="97" pos:column="38"/></name></expr></argument>)<pos:position pos:line="97" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="40"/></expr_stmt>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">buf<pos:position pos:line="98" pos:column="16"/></name></expr>)<pos:position pos:line="98" pos:column="17"/></condition><then pos:line="98" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="18">unmap_file<pos:position pos:line="98" pos:column="28"/></name><argument_list pos:line="98" pos:column="28">(<argument><expr><name pos:line="98" pos:column="29">buf<pos:position pos:line="98" pos:column="32"/></name></expr></argument>)<pos:position pos:line="98" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="34"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">close<pos:position pos:line="99" pos:column="14"/></name><argument_list pos:line="99" pos:column="14">(<argument><expr><name pos:line="99" pos:column="15">fd1<pos:position pos:line="99" pos:column="18"/></name></expr></argument>)<pos:position pos:line="99" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="20"/></expr_stmt>
	<continue pos:line="100" pos:column="9">continue;<pos:position pos:line="100" pos:column="18"/></continue>
      }<pos:position pos:line="101" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="102" pos:column="7">fd2<pos:position pos:line="102" pos:column="10"/></name> <operator pos:line="102" pos:column="11">=<pos:position pos:line="102" pos:column="12"/></operator> <call><name pos:line="102" pos:column="13">do_open<pos:position pos:line="102" pos:column="20"/></name><argument_list pos:line="102" pos:column="20">(<argument><expr><name pos:line="102" pos:column="21">fnametmp<pos:position pos:line="102" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="102" pos:column="30">O_WRONLY<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">|<pos:position pos:line="102" pos:column="39"/></operator><name pos:line="102" pos:column="39">O_CREAT<pos:position pos:line="102" pos:column="46"/></name><operator pos:line="102" pos:column="46">|<pos:position pos:line="102" pos:column="47"/></operator><name pos:line="102" pos:column="47">O_EXCL<pos:position pos:line="102" pos:column="53"/></name></expr></argument>,<argument><expr><name><name pos:line="102" pos:column="54">file<pos:position pos:line="102" pos:column="58"/></name><operator pos:line="102" pos:column="58">-&gt;<pos:position pos:line="102" pos:column="63"/></operator><name pos:line="102" pos:column="60">mode<pos:position pos:line="102" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt>
      <if pos:line="103" pos:column="7">if <condition pos:line="103" pos:column="10">(<expr><name pos:line="103" pos:column="11">fd2<pos:position pos:line="103" pos:column="14"/></name> <operator pos:line="103" pos:column="15">==<pos:position pos:line="103" pos:column="17"/></operator> <operator pos:line="103" pos:column="18">-<pos:position pos:line="103" pos:column="19"/></operator><literal type="number" pos:line="103" pos:column="19">1<pos:position pos:line="103" pos:column="20"/></literal> <operator pos:line="103" pos:column="21">&amp;&amp;<pos:position pos:line="103" pos:column="31"/></operator> <name pos:line="103" pos:column="24">relative_paths<pos:position pos:line="103" pos:column="38"/></name> <operator pos:line="103" pos:column="39">&amp;&amp;<pos:position pos:line="103" pos:column="49"/></operator> <name pos:line="103" pos:column="42">errno<pos:position pos:line="103" pos:column="47"/></name> <operator pos:line="103" pos:column="48">==<pos:position pos:line="103" pos:column="50"/></operator> <name pos:line="103" pos:column="51">ENOENT<pos:position pos:line="103" pos:column="57"/></name> <operator pos:line="103" pos:column="58">&amp;&amp;<pos:position pos:line="103" pos:column="68"/></operator> 
	  <call><name pos:line="104" pos:column="11">create_directory_path<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">fnametmp<pos:position pos:line="104" pos:column="41"/></name></expr></argument>)<pos:position pos:line="104" pos:column="42"/></argument_list></call> <operator pos:line="104" pos:column="43">==<pos:position pos:line="104" pos:column="45"/></operator> <literal type="number" pos:line="104" pos:column="46">0<pos:position pos:line="104" pos:column="47"/></literal></expr>)<pos:position pos:line="104" pos:column="48"/></condition><then pos:line="104" pos:column="48"> <block pos:line="104" pos:column="49">{
	      <expr_stmt><expr><name pos:line="105" pos:column="15">fd2<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">=<pos:position pos:line="105" pos:column="20"/></operator> <call><name pos:line="105" pos:column="21">do_open<pos:position pos:line="105" pos:column="28"/></name><argument_list pos:line="105" pos:column="28">(<argument><expr><name pos:line="105" pos:column="29">fnametmp<pos:position pos:line="105" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="105" pos:column="38">O_WRONLY<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">|<pos:position pos:line="105" pos:column="47"/></operator><name pos:line="105" pos:column="47">O_CREAT<pos:position pos:line="105" pos:column="54"/></name><operator pos:line="105" pos:column="54">|<pos:position pos:line="105" pos:column="55"/></operator><name pos:line="105" pos:column="55">O_EXCL<pos:position pos:line="105" pos:column="61"/></name></expr></argument>,<argument><expr><name><name pos:line="105" pos:column="62">file<pos:position pos:line="105" pos:column="66"/></name><operator pos:line="105" pos:column="66">-&gt;<pos:position pos:line="105" pos:column="71"/></operator><name pos:line="105" pos:column="68">mode<pos:position pos:line="105" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="106" pos:column="8"/></block></then></if>
      <if pos:line="107" pos:column="7">if <condition pos:line="107" pos:column="10">(<expr><name pos:line="107" pos:column="11">fd2<pos:position pos:line="107" pos:column="14"/></name> <operator pos:line="107" pos:column="15">==<pos:position pos:line="107" pos:column="17"/></operator> <operator pos:line="107" pos:column="18">-<pos:position pos:line="107" pos:column="19"/></operator><literal type="number" pos:line="107" pos:column="19">1<pos:position pos:line="107" pos:column="20"/></literal></expr>)<pos:position pos:line="107" pos:column="21"/></condition><then pos:line="107" pos:column="21"> <block pos:line="107" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="108" pos:column="9">fprintf<pos:position pos:line="108" pos:column="16"/></name><argument_list pos:line="108" pos:column="16">(<argument><expr><name pos:line="108" pos:column="17">FERROR<pos:position pos:line="108" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="108" pos:column="24">"open %s : %s\n"<pos:position pos:line="108" pos:column="40"/></literal></expr></argument>,<argument><expr><name pos:line="108" pos:column="41">fnametmp<pos:position pos:line="108" pos:column="49"/></name></expr></argument>,<argument><expr><call><name pos:line="108" pos:column="50">strerror<pos:position pos:line="108" pos:column="58"/></name><argument_list pos:line="108" pos:column="58">(<argument><expr><name pos:line="108" pos:column="59">errno<pos:position pos:line="108" pos:column="64"/></name></expr></argument>)<pos:position pos:line="108" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="67"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="109" pos:column="9">receive_data<pos:position pos:line="109" pos:column="21"/></name><argument_list pos:line="109" pos:column="21">(<argument><expr><name pos:line="109" pos:column="22">f_in<pos:position pos:line="109" pos:column="26"/></name></expr></argument>,<argument><expr><name pos:line="109" pos:column="27">buf<pos:position pos:line="109" pos:column="30"/></name></expr></argument>,<argument><expr><operator pos:line="109" pos:column="31">-<pos:position pos:line="109" pos:column="32"/></operator><literal type="number" pos:line="109" pos:column="32">1<pos:position pos:line="109" pos:column="33"/></literal></expr></argument>,<argument><expr><name pos:line="109" pos:column="34">NULL<pos:position pos:line="109" pos:column="38"/></name></expr></argument>)<pos:position pos:line="109" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="40"/></expr_stmt>
	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name pos:line="110" pos:column="13">buf<pos:position pos:line="110" pos:column="16"/></name></expr>)<pos:position pos:line="110" pos:column="17"/></condition><then pos:line="110" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="110" pos:column="18">unmap_file<pos:position pos:line="110" pos:column="28"/></name><argument_list pos:line="110" pos:column="28">(<argument><expr><name pos:line="110" pos:column="29">buf<pos:position pos:line="110" pos:column="32"/></name></expr></argument>)<pos:position pos:line="110" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="34"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="111" pos:column="9">close<pos:position pos:line="111" pos:column="14"/></name><argument_list pos:line="111" pos:column="14">(<argument><expr><name pos:line="111" pos:column="15">fd1<pos:position pos:line="111" pos:column="18"/></name></expr></argument>)<pos:position pos:line="111" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="20"/></expr_stmt>
	<continue pos:line="112" pos:column="9">continue;<pos:position pos:line="112" pos:column="18"/></continue>
      }<pos:position pos:line="113" pos:column="8"/></block></then></if>
      
      <expr_stmt><expr><name pos:line="115" pos:column="7">cleanup_fname<pos:position pos:line="115" pos:column="20"/></name> <operator pos:line="115" pos:column="21">=<pos:position pos:line="115" pos:column="22"/></operator> <name pos:line="115" pos:column="23">fnametmp<pos:position pos:line="115" pos:column="31"/></name></expr>;<pos:position pos:line="115" pos:column="32"/></expr_stmt>

      <if pos:line="117" pos:column="7">if <condition pos:line="117" pos:column="10">(<expr><operator pos:line="117" pos:column="11">!<pos:position pos:line="117" pos:column="12"/></operator><name pos:line="117" pos:column="12">am_server<pos:position pos:line="117" pos:column="21"/></name> <operator pos:line="117" pos:column="22">&amp;&amp;<pos:position pos:line="117" pos:column="32"/></operator> <name pos:line="117" pos:column="25">verbose<pos:position pos:line="117" pos:column="32"/></name></expr>)<pos:position pos:line="117" pos:column="33"/></condition><then pos:line="117" pos:column="33">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="118" pos:column="9">printf<pos:position pos:line="118" pos:column="15"/></name><argument_list pos:line="118" pos:column="15">(<argument><expr><literal type="string" pos:line="118" pos:column="16">"%s\n"<pos:position pos:line="118" pos:column="22"/></literal></expr></argument>,<argument><expr><name pos:line="118" pos:column="23">fname<pos:position pos:line="118" pos:column="28"/></name></expr></argument>)<pos:position pos:line="118" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="30"/></expr_stmt></block></then></if>

      <comment type="block" pos:line="120" pos:column="7">/* recv file data */</comment>
      <expr_stmt><expr><name pos:line="121" pos:column="7">recv_ok<pos:position pos:line="121" pos:column="14"/></name> <operator pos:line="121" pos:column="15">=<pos:position pos:line="121" pos:column="16"/></operator> <call><name pos:line="121" pos:column="17">receive_data<pos:position pos:line="121" pos:column="29"/></name><argument_list pos:line="121" pos:column="29">(<argument><expr><name pos:line="121" pos:column="30">f_in<pos:position pos:line="121" pos:column="34"/></name></expr></argument>,<argument><expr><name pos:line="121" pos:column="35">buf<pos:position pos:line="121" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="121" pos:column="39">fd2<pos:position pos:line="121" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="121" pos:column="43">fname<pos:position pos:line="121" pos:column="48"/></name></expr></argument>)<pos:position pos:line="121" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="50"/></expr_stmt>

      <if pos:line="123" pos:column="7">if <condition pos:line="123" pos:column="10">(<expr><name pos:line="123" pos:column="11">buf<pos:position pos:line="123" pos:column="14"/></name></expr>)<pos:position pos:line="123" pos:column="15"/></condition><then pos:line="123" pos:column="15"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="123" pos:column="16">unmap_file<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">(<argument><expr><name pos:line="123" pos:column="27">buf<pos:position pos:line="123" pos:column="30"/></name></expr></argument>)<pos:position pos:line="123" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="32"/></expr_stmt></block></then></if>
      <if pos:line="124" pos:column="7">if <condition pos:line="124" pos:column="10">(<expr><name pos:line="124" pos:column="11">fd1<pos:position pos:line="124" pos:column="14"/></name> <operator pos:line="124" pos:column="15">!=<pos:position pos:line="124" pos:column="17"/></operator> <operator pos:line="124" pos:column="18">-<pos:position pos:line="124" pos:column="19"/></operator><literal type="number" pos:line="124" pos:column="19">1<pos:position pos:line="124" pos:column="20"/></literal></expr>)<pos:position pos:line="124" pos:column="21"/></condition><then pos:line="124" pos:column="21"> <block pos:line="124" pos:column="22">{
	<expr_stmt><expr><call><name pos:line="125" pos:column="9">close<pos:position pos:line="125" pos:column="14"/></name><argument_list pos:line="125" pos:column="14">(<argument><expr><name pos:line="125" pos:column="15">fd1<pos:position pos:line="125" pos:column="18"/></name></expr></argument>)<pos:position pos:line="125" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="126" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="127" pos:column="7">close<pos:position pos:line="127" pos:column="12"/></name><argument_list pos:line="127" pos:column="12">(<argument><expr><name pos:line="127" pos:column="13">fd2<pos:position pos:line="127" pos:column="16"/></name></expr></argument>)<pos:position pos:line="127" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="18"/></expr_stmt>

      <if pos:line="129" pos:column="7">if <condition pos:line="129" pos:column="10">(<expr><name pos:line="129" pos:column="11">verbose<pos:position pos:line="129" pos:column="18"/></name> <operator pos:line="129" pos:column="19">&gt;<pos:position pos:line="129" pos:column="23"/></operator> <literal type="number" pos:line="129" pos:column="21">2<pos:position pos:line="129" pos:column="22"/></literal></expr>)<pos:position pos:line="129" pos:column="23"/></condition><then pos:line="129" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="130" pos:column="9">fprintf<pos:position pos:line="130" pos:column="16"/></name><argument_list pos:line="130" pos:column="16">(<argument><expr><name pos:line="130" pos:column="17">FINFO<pos:position pos:line="130" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="130" pos:column="23">"renaming %s to %s\n"<pos:position pos:line="130" pos:column="44"/></literal></expr></argument>,<argument><expr><name pos:line="130" pos:column="45">fnametmp<pos:position pos:line="130" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="130" pos:column="54">fname<pos:position pos:line="130" pos:column="59"/></name></expr></argument>)<pos:position pos:line="130" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="61"/></expr_stmt></block></then></if>

      <if pos:line="132" pos:column="7">if <condition pos:line="132" pos:column="10">(<expr><name pos:line="132" pos:column="11">make_backups<pos:position pos:line="132" pos:column="23"/></name></expr>)<pos:position pos:line="132" pos:column="24"/></condition><then pos:line="132" pos:column="24"> <block pos:line="132" pos:column="25">{
	<decl_stmt><decl><type><name pos:line="133" pos:column="9">char<pos:position pos:line="133" pos:column="13"/></name></type> <name><name pos:line="133" pos:column="14">fnamebak<pos:position pos:line="133" pos:column="22"/></name><index pos:line="133" pos:column="22">[<expr><name pos:line="133" pos:column="23">MAXPATHLEN<pos:position pos:line="133" pos:column="33"/></name></expr>]<pos:position pos:line="133" pos:column="34"/></index></name></decl>;<pos:position pos:line="133" pos:column="35"/></decl_stmt>
	<if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><call><name pos:line="134" pos:column="13">strlen<pos:position pos:line="134" pos:column="19"/></name><argument_list pos:line="134" pos:column="19">(<argument><expr><name pos:line="134" pos:column="20">fname<pos:position pos:line="134" pos:column="25"/></name></expr></argument>)<pos:position pos:line="134" pos:column="26"/></argument_list></call> <operator pos:line="134" pos:column="27">+<pos:position pos:line="134" pos:column="28"/></operator> <call><name pos:line="134" pos:column="29">strlen<pos:position pos:line="134" pos:column="35"/></name><argument_list pos:line="134" pos:column="35">(<argument><expr><name pos:line="134" pos:column="36">backup_suffix<pos:position pos:line="134" pos:column="49"/></name></expr></argument>)<pos:position pos:line="134" pos:column="50"/></argument_list></call> <operator pos:line="134" pos:column="51">&gt;<pos:position pos:line="134" pos:column="55"/></operator> <operator pos:line="134" pos:column="53">(<pos:position pos:line="134" pos:column="54"/></operator><name pos:line="134" pos:column="54">MAXPATHLEN<pos:position pos:line="134" pos:column="64"/></name><operator pos:line="134" pos:column="64">-<pos:position pos:line="134" pos:column="65"/></operator><literal type="number" pos:line="134" pos:column="65">1<pos:position pos:line="134" pos:column="66"/></literal><operator pos:line="134" pos:column="66">)<pos:position pos:line="134" pos:column="67"/></operator></expr>)<pos:position pos:line="134" pos:column="68"/></condition><then pos:line="134" pos:column="68"> <block pos:line="134" pos:column="69">{
		<expr_stmt><expr><call><name pos:line="135" pos:column="17">fprintf<pos:position pos:line="135" pos:column="24"/></name><argument_list pos:line="135" pos:column="24">(<argument><expr><name pos:line="135" pos:column="25">FERROR<pos:position pos:line="135" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="135" pos:column="32">"backup filename too long\n"<pos:position pos:line="135" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="62"/></expr_stmt>
		<continue pos:line="136" pos:column="17">continue;<pos:position pos:line="136" pos:column="26"/></continue>
	}<pos:position pos:line="137" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="138" pos:column="9">sprintf<pos:position pos:line="138" pos:column="16"/></name><argument_list pos:line="138" pos:column="16">(<argument><expr><name pos:line="138" pos:column="17">fnamebak<pos:position pos:line="138" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="138" pos:column="26">"%s%s"<pos:position pos:line="138" pos:column="32"/></literal></expr></argument>,<argument><expr><name pos:line="138" pos:column="33">fname<pos:position pos:line="138" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="138" pos:column="39">backup_suffix<pos:position pos:line="138" pos:column="52"/></name></expr></argument>)<pos:position pos:line="138" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="54"/></expr_stmt>
	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><call><name pos:line="139" pos:column="13">do_rename<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><name pos:line="139" pos:column="23">fname<pos:position pos:line="139" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="139" pos:column="29">fnamebak<pos:position pos:line="139" pos:column="37"/></name></expr></argument>)<pos:position pos:line="139" pos:column="38"/></argument_list></call> <operator pos:line="139" pos:column="39">!=<pos:position pos:line="139" pos:column="41"/></operator> <literal type="number" pos:line="139" pos:column="42">0<pos:position pos:line="139" pos:column="43"/></literal> <operator pos:line="139" pos:column="44">&amp;&amp;<pos:position pos:line="139" pos:column="54"/></operator> <name pos:line="139" pos:column="47">errno<pos:position pos:line="139" pos:column="52"/></name> <operator pos:line="139" pos:column="53">!=<pos:position pos:line="139" pos:column="55"/></operator> <name pos:line="139" pos:column="56">ENOENT<pos:position pos:line="139" pos:column="62"/></name></expr>)<pos:position pos:line="139" pos:column="63"/></condition><then pos:line="139" pos:column="63"> <block pos:line="139" pos:column="64">{
	  <expr_stmt><expr><call><name pos:line="140" pos:column="11">fprintf<pos:position pos:line="140" pos:column="18"/></name><argument_list pos:line="140" pos:column="18">(<argument><expr><name pos:line="140" pos:column="19">FERROR<pos:position pos:line="140" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="140" pos:column="26">"rename %s %s : %s\n"<pos:position pos:line="140" pos:column="47"/></literal></expr></argument>,<argument><expr><name pos:line="140" pos:column="48">fname<pos:position pos:line="140" pos:column="53"/></name></expr></argument>,<argument><expr><name pos:line="140" pos:column="54">fnamebak<pos:position pos:line="140" pos:column="62"/></name></expr></argument>,<argument><expr><call><name pos:line="140" pos:column="63">strerror<pos:position pos:line="140" pos:column="71"/></name><argument_list pos:line="140" pos:column="71">(<argument><expr><name pos:line="140" pos:column="72">errno<pos:position pos:line="140" pos:column="77"/></name></expr></argument>)<pos:position pos:line="140" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="140" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="80"/></expr_stmt>
	  <continue pos:line="141" pos:column="11">continue;<pos:position pos:line="141" pos:column="20"/></continue>
	}<pos:position pos:line="142" pos:column="10"/></block></then></if>
      }<pos:position pos:line="143" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="145" pos:column="7">/* move tmp file over real file */</comment>
      <if pos:line="146" pos:column="7">if <condition pos:line="146" pos:column="10">(<expr><call><name pos:line="146" pos:column="11">do_rename<pos:position pos:line="146" pos:column="20"/></name><argument_list pos:line="146" pos:column="20">(<argument><expr><name pos:line="146" pos:column="21">fnametmp<pos:position pos:line="146" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="146" pos:column="30">fname<pos:position pos:line="146" pos:column="35"/></name></expr></argument>)<pos:position pos:line="146" pos:column="36"/></argument_list></call> <operator pos:line="146" pos:column="37">!=<pos:position pos:line="146" pos:column="39"/></operator> <literal type="number" pos:line="146" pos:column="40">0<pos:position pos:line="146" pos:column="41"/></literal></expr>)<pos:position pos:line="146" pos:column="42"/></condition><then pos:line="146" pos:column="42"> <block pos:line="146" pos:column="43">{
	      <if pos:line="147" pos:column="15">if <condition pos:line="147" pos:column="18">(<expr><name pos:line="147" pos:column="19">errno<pos:position pos:line="147" pos:column="24"/></name> <operator pos:line="147" pos:column="25">==<pos:position pos:line="147" pos:column="27"/></operator> <name pos:line="147" pos:column="28">EXDEV<pos:position pos:line="147" pos:column="33"/></name></expr>)<pos:position pos:line="147" pos:column="34"/></condition><then pos:line="147" pos:column="34"> <block pos:line="147" pos:column="35">{
		      <comment type="block" pos:line="148" pos:column="23">/* rename failed on cross-filesystem link.  
			 Copy the file instead. */</comment>
		      <if pos:line="150" pos:column="23">if <condition pos:line="150" pos:column="26">(<expr><call><name pos:line="150" pos:column="27">copy_file<pos:position pos:line="150" pos:column="36"/></name><argument_list pos:line="150" pos:column="36">(<argument><expr><name pos:line="150" pos:column="37">fnametmp<pos:position pos:line="150" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="150" pos:column="46">fname<pos:position pos:line="150" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="53">file<pos:position pos:line="150" pos:column="57"/></name><operator pos:line="150" pos:column="57">-&gt;<pos:position pos:line="150" pos:column="62"/></operator><name pos:line="150" pos:column="59">mode<pos:position pos:line="150" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="65"/></condition><then pos:line="150" pos:column="65"> <block pos:line="150" pos:column="66">{
			      <expr_stmt><expr><call><name pos:line="151" pos:column="31">fprintf<pos:position pos:line="151" pos:column="38"/></name><argument_list pos:line="151" pos:column="38">(<argument><expr><name pos:line="151" pos:column="39">FERROR<pos:position pos:line="151" pos:column="45"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="151" pos:column="46">"copy %s -&gt; %s : %s\n"<pos:position pos:line="151" pos:column="71"/></literal></expr></argument>,
				      <argument><expr><name pos:line="152" pos:column="39">fnametmp<pos:position pos:line="152" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="152" pos:column="48">fname<pos:position pos:line="152" pos:column="53"/></name></expr></argument>,<argument><expr><call><name pos:line="152" pos:column="54">strerror<pos:position pos:line="152" pos:column="62"/></name><argument_list pos:line="152" pos:column="62">(<argument><expr><name pos:line="152" pos:column="63">errno<pos:position pos:line="152" pos:column="68"/></name></expr></argument>)<pos:position pos:line="152" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="152" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="71"/></expr_stmt>
		      }<pos:position pos:line="153" pos:column="24"/></block></then> <else pos:line="153" pos:column="25">else <block pos:line="153" pos:column="30">{
			      <expr_stmt><expr><call><name pos:line="154" pos:column="31">set_perms<pos:position pos:line="154" pos:column="40"/></name><argument_list pos:line="154" pos:column="40">(<argument><expr><name pos:line="154" pos:column="41">fname<pos:position pos:line="154" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="154" pos:column="47">file<pos:position pos:line="154" pos:column="51"/></name></expr></argument>,<argument><expr><name pos:line="154" pos:column="52">NULL<pos:position pos:line="154" pos:column="56"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="154" pos:column="57">0<pos:position pos:line="154" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="60"/></expr_stmt>
		      }<pos:position pos:line="155" pos:column="24"/></block></else></if>
		      <expr_stmt><expr><call><name pos:line="156" pos:column="23">do_unlink<pos:position pos:line="156" pos:column="32"/></name><argument_list pos:line="156" pos:column="32">(<argument><expr><name pos:line="156" pos:column="33">fnametmp<pos:position pos:line="156" pos:column="41"/></name></expr></argument>)<pos:position pos:line="156" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="43"/></expr_stmt>
	      }<pos:position pos:line="157" pos:column="16"/></block></then> <else pos:line="157" pos:column="17">else <block pos:line="157" pos:column="22">{
		      <expr_stmt><expr><call><name pos:line="158" pos:column="23">fprintf<pos:position pos:line="158" pos:column="30"/></name><argument_list pos:line="158" pos:column="30">(<argument><expr><name pos:line="158" pos:column="31">FERROR<pos:position pos:line="158" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="158" pos:column="38">"rename %s -&gt; %s : %s\n"<pos:position pos:line="158" pos:column="65"/></literal></expr></argument>,
			      <argument><expr><name pos:line="159" pos:column="31">fnametmp<pos:position pos:line="159" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="159" pos:column="40">fname<pos:position pos:line="159" pos:column="45"/></name></expr></argument>,<argument><expr><call><name pos:line="159" pos:column="46">strerror<pos:position pos:line="159" pos:column="54"/></name><argument_list pos:line="159" pos:column="54">(<argument><expr><name pos:line="159" pos:column="55">errno<pos:position pos:line="159" pos:column="60"/></name></expr></argument>)<pos:position pos:line="159" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="159" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="63"/></expr_stmt>
		      <expr_stmt><expr><call><name pos:line="160" pos:column="23">do_unlink<pos:position pos:line="160" pos:column="32"/></name><argument_list pos:line="160" pos:column="32">(<argument><expr><name pos:line="160" pos:column="33">fnametmp<pos:position pos:line="160" pos:column="41"/></name></expr></argument>)<pos:position pos:line="160" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="43"/></expr_stmt>
	      }<pos:position pos:line="161" pos:column="16"/></block></else></if>
      }<pos:position pos:line="162" pos:column="8"/></block></then> <else pos:line="162" pos:column="9">else <block pos:line="162" pos:column="14">{
	      <expr_stmt><expr><call><name pos:line="163" pos:column="15">set_perms<pos:position pos:line="163" pos:column="24"/></name><argument_list pos:line="163" pos:column="24">(<argument><expr><name pos:line="163" pos:column="25">fname<pos:position pos:line="163" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="163" pos:column="31">file<pos:position pos:line="163" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="163" pos:column="36">NULL<pos:position pos:line="163" pos:column="40"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="163" pos:column="41">0<pos:position pos:line="163" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="163" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="164" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name pos:line="166" pos:column="7">cleanup_fname<pos:position pos:line="166" pos:column="20"/></name> <operator pos:line="166" pos:column="21">=<pos:position pos:line="166" pos:column="22"/></operator> <name pos:line="166" pos:column="23">NULL<pos:position pos:line="166" pos:column="27"/></name></expr>;<pos:position pos:line="166" pos:column="28"/></expr_stmt>


      <if pos:line="169" pos:column="7">if <condition pos:line="169" pos:column="10">(<expr><operator pos:line="169" pos:column="11">!<pos:position pos:line="169" pos:column="12"/></operator><name pos:line="169" pos:column="12">recv_ok<pos:position pos:line="169" pos:column="19"/></name></expr>)<pos:position pos:line="169" pos:column="20"/></condition><then pos:line="169" pos:column="20"> <block pos:line="169" pos:column="21">{
	      <if pos:line="170" pos:column="15">if <condition pos:line="170" pos:column="18">(<expr><name pos:line="170" pos:column="19">csum_length<pos:position pos:line="170" pos:column="30"/></name> <operator pos:line="170" pos:column="31">==<pos:position pos:line="170" pos:column="33"/></operator> <name pos:line="170" pos:column="34">SUM_LENGTH<pos:position pos:line="170" pos:column="44"/></name></expr>)<pos:position pos:line="170" pos:column="45"/></condition><then pos:line="170" pos:column="45"> <block pos:line="170" pos:column="46">{
		      <expr_stmt><expr><call><name pos:line="171" pos:column="23">fprintf<pos:position pos:line="171" pos:column="30"/></name><argument_list pos:line="171" pos:column="30">(<argument><expr><name pos:line="171" pos:column="31">FERROR<pos:position pos:line="171" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="171" pos:column="38">"ERROR: file corruption in %s. File changed during transfer?\n"<pos:position pos:line="171" pos:column="101"/></literal></expr></argument>,
			      <argument><expr><name pos:line="172" pos:column="31">fname<pos:position pos:line="172" pos:column="36"/></name></expr></argument>)<pos:position pos:line="172" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="38"/></expr_stmt>
	      }<pos:position pos:line="173" pos:column="16"/></block></then> <else pos:line="173" pos:column="17">else <block pos:line="173" pos:column="22">{
		      <if pos:line="174" pos:column="23">if <condition pos:line="174" pos:column="26">(<expr><name pos:line="174" pos:column="27">verbose<pos:position pos:line="174" pos:column="34"/></name> <operator pos:line="174" pos:column="35">&gt;<pos:position pos:line="174" pos:column="39"/></operator> <literal type="number" pos:line="174" pos:column="37">1<pos:position pos:line="174" pos:column="38"/></literal></expr>)<pos:position pos:line="174" pos:column="39"/></condition><then pos:line="174" pos:column="39">
			      <block type="pseudo"><expr_stmt><expr><call><name pos:line="175" pos:column="31">fprintf<pos:position pos:line="175" pos:column="38"/></name><argument_list pos:line="175" pos:column="38">(<argument><expr><name pos:line="175" pos:column="39">FINFO<pos:position pos:line="175" pos:column="44"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="175" pos:column="45">"redoing %s(%d)\n"<pos:position pos:line="175" pos:column="63"/></literal></expr></argument>,<argument><expr><name pos:line="175" pos:column="64">fname<pos:position pos:line="175" pos:column="69"/></name></expr></argument>,<argument><expr><name pos:line="175" pos:column="70">i<pos:position pos:line="175" pos:column="71"/></name></expr></argument>)<pos:position pos:line="175" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="73"/></expr_stmt></block></then></if>
		      <expr_stmt><expr><call><name pos:line="176" pos:column="23">write_int<pos:position pos:line="176" pos:column="32"/></name><argument_list pos:line="176" pos:column="32">(<argument><expr><name pos:line="176" pos:column="33">f_gen<pos:position pos:line="176" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="176" pos:column="39">i<pos:position pos:line="176" pos:column="40"/></name></expr></argument>)<pos:position pos:line="176" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="42"/></expr_stmt>
	      }<pos:position pos:line="177" pos:column="16"/></block></else></if>
      }<pos:position pos:line="178" pos:column="8"/></block></then></if>
    }<pos:position pos:line="179" pos:column="6"/></block></while>

  <if pos:line="181" pos:column="3">if <condition pos:line="181" pos:column="6">(<expr><name pos:line="181" pos:column="7">preserve_hard_links<pos:position pos:line="181" pos:column="26"/></name></expr>)<pos:position pos:line="181" pos:column="27"/></condition><then pos:line="181" pos:column="27">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="182" pos:column="11">do_hard_links<pos:position pos:line="182" pos:column="24"/></name><argument_list pos:line="182" pos:column="24">(<argument><expr><name pos:line="182" pos:column="25">flist<pos:position pos:line="182" pos:column="30"/></name></expr></argument>)<pos:position pos:line="182" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="32"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="184" pos:column="3">/* now we need to fix any directory permissions that were 
     modified during the transfer */</comment>
  <for pos:line="186" pos:column="3">for <control pos:line="186" pos:column="7">(<init><expr><name pos:line="186" pos:column="8">i<pos:position pos:line="186" pos:column="9"/></name> <operator pos:line="186" pos:column="10">=<pos:position pos:line="186" pos:column="11"/></operator> <literal type="number" pos:line="186" pos:column="12">0<pos:position pos:line="186" pos:column="13"/></literal></expr>;<pos:position pos:line="186" pos:column="14"/></init> <condition><expr><name pos:line="186" pos:column="15">i<pos:position pos:line="186" pos:column="16"/></name> <operator pos:line="186" pos:column="17">&lt;<pos:position pos:line="186" pos:column="21"/></operator> <name><name pos:line="186" pos:column="19">flist<pos:position pos:line="186" pos:column="24"/></name><operator pos:line="186" pos:column="24">-&gt;<pos:position pos:line="186" pos:column="29"/></operator><name pos:line="186" pos:column="26">count<pos:position pos:line="186" pos:column="31"/></name></name></expr>;<pos:position pos:line="186" pos:column="32"/></condition> <incr><expr><name pos:line="186" pos:column="33">i<pos:position pos:line="186" pos:column="34"/></name><operator pos:line="186" pos:column="34">++<pos:position pos:line="186" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="186" pos:column="37"/></control> <block pos:line="186" pos:column="38">{
	  <decl_stmt><decl><type><name><name pos:line="187" pos:column="11">struct<pos:position pos:line="187" pos:column="17"/></name> <name pos:line="187" pos:column="18">file_struct<pos:position pos:line="187" pos:column="29"/></name></name> <modifier pos:line="187" pos:column="30">*<pos:position pos:line="187" pos:column="31"/></modifier></type><name pos:line="187" pos:column="31">file<pos:position pos:line="187" pos:column="35"/></name> <init pos:line="187" pos:column="36">= <expr><name><name pos:line="187" pos:column="38">flist<pos:position pos:line="187" pos:column="43"/></name><operator pos:line="187" pos:column="43">-&gt;<pos:position pos:line="187" pos:column="48"/></operator><name pos:line="187" pos:column="45">files<pos:position pos:line="187" pos:column="50"/></name><index pos:line="187" pos:column="50">[<expr><name pos:line="187" pos:column="51">i<pos:position pos:line="187" pos:column="52"/></name></expr>]<pos:position pos:line="187" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="187" pos:column="54"/></decl_stmt>
	  <if pos:line="188" pos:column="11">if <condition pos:line="188" pos:column="14">(<expr><operator pos:line="188" pos:column="15">!<pos:position pos:line="188" pos:column="16"/></operator><name><name pos:line="188" pos:column="16">file<pos:position pos:line="188" pos:column="20"/></name><operator pos:line="188" pos:column="20">-&gt;<pos:position pos:line="188" pos:column="25"/></operator><name pos:line="188" pos:column="22">basename<pos:position pos:line="188" pos:column="30"/></name></name> <operator pos:line="188" pos:column="31">||<pos:position pos:line="188" pos:column="33"/></operator> <operator pos:line="188" pos:column="34">!<pos:position pos:line="188" pos:column="35"/></operator><call><name pos:line="188" pos:column="35">S_ISDIR<pos:position pos:line="188" pos:column="42"/></name><argument_list pos:line="188" pos:column="42">(<argument><expr><name><name pos:line="188" pos:column="43">file<pos:position pos:line="188" pos:column="47"/></name><operator pos:line="188" pos:column="47">-&gt;<pos:position pos:line="188" pos:column="52"/></operator><name pos:line="188" pos:column="49">mode<pos:position pos:line="188" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="188" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="188" pos:column="55"/></condition><then pos:line="188" pos:column="55"> <block type="pseudo"><continue pos:line="188" pos:column="56">continue;<pos:position pos:line="188" pos:column="65"/></continue></block></then></if>
	  <expr_stmt><expr><call><name pos:line="189" pos:column="11">recv_generator<pos:position pos:line="189" pos:column="25"/></name><argument_list pos:line="189" pos:column="25">(<argument><expr><call><name pos:line="189" pos:column="26">f_name<pos:position pos:line="189" pos:column="32"/></name><argument_list pos:line="189" pos:column="32">(<argument><expr><name pos:line="189" pos:column="33">file<pos:position pos:line="189" pos:column="37"/></name></expr></argument>)<pos:position pos:line="189" pos:column="38"/></argument_list></call></expr></argument>,<argument><expr><name pos:line="189" pos:column="39">flist<pos:position pos:line="189" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="189" pos:column="45">i<pos:position pos:line="189" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="189" pos:column="47">-<pos:position pos:line="189" pos:column="48"/></operator><literal type="number" pos:line="189" pos:column="48">1<pos:position pos:line="189" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="189" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="190" pos:column="4"/></block></for>

  <if pos:line="192" pos:column="3">if <condition pos:line="192" pos:column="6">(<expr><name pos:line="192" pos:column="7">verbose<pos:position pos:line="192" pos:column="14"/></name> <operator pos:line="192" pos:column="15">&gt;<pos:position pos:line="192" pos:column="19"/></operator> <literal type="number" pos:line="192" pos:column="17">2<pos:position pos:line="192" pos:column="18"/></literal></expr>)<pos:position pos:line="192" pos:column="19"/></condition><then pos:line="192" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="193" pos:column="5">fprintf<pos:position pos:line="193" pos:column="12"/></name><argument_list pos:line="193" pos:column="12">(<argument><expr><name pos:line="193" pos:column="13">FINFO<pos:position pos:line="193" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="193" pos:column="19">"recv_files finished\n"<pos:position pos:line="193" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="44"/></expr_stmt></block></then></if>
  
  <return pos:line="195" pos:column="3">return <expr><literal type="number" pos:line="195" pos:column="10">0<pos:position pos:line="195" pos:column="11"/></literal></expr>;<pos:position pos:line="195" pos:column="12"/></return>
}<pos:position pos:line="196" pos:column="2"/></block></function></unit>

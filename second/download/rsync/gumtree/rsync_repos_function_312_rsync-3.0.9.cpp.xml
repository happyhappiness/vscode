<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_312_rsync-3.0.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">log_delete<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">fname<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="36">int<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">mode<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<struct><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> struct <block pos:line="3" pos:column="23">{<public type="default" pos:line="3" pos:column="24">
		<decl_stmt><decl><type><name><name pos:line="4" pos:column="17">union<pos:position pos:line="4" pos:column="22"/></name> <name pos:line="4" pos:column="23">file_extras<pos:position pos:line="4" pos:column="34"/></name></name></type> <name><name pos:line="4" pos:column="35">ex<pos:position pos:line="4" pos:column="37"/></name><index pos:line="4" pos:column="37">[<expr><literal type="number" pos:line="4" pos:column="38">4<pos:position pos:line="4" pos:column="39"/></literal></expr>]<pos:position pos:line="4" pos:column="40"/></index></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt> <comment type="block" pos:line="4" pos:column="42">/* just in case... */</comment>
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">file_struct<pos:position pos:line="5" pos:column="35"/></name></name></type> <name pos:line="5" pos:column="36">file<pos:position pos:line="5" pos:column="40"/></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<pos:position pos:line="6" pos:column="2"/></public>}<pos:position pos:line="6" pos:column="10"/></block> <decl><name pos:line="6" pos:column="11">x<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></struct>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">len<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><call><name pos:line="7" pos:column="19">strlen<pos:position pos:line="7" pos:column="25"/></name><argument_list pos:line="7" pos:column="25">(<argument><expr><name pos:line="7" pos:column="26">fname<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">fmt<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="10" pos:column="9">x<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">file<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">.<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">mode<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="23">mode<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">verbose<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&amp;&amp;<pos:position pos:line="12" pos:column="32"/></operator> <operator pos:line="12" pos:column="25">!<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">stdout_format<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
		<block type="pseudo"><empty_stmt pos:line="13" pos:column="17">;<pos:position pos:line="13" pos:column="18"/></empty_stmt></block></then>
	<elseif pos:line="14" pos:column="9">else <if pos:line="14" pos:column="14">if <condition pos:line="14" pos:column="17">(<expr><name pos:line="14" pos:column="18">am_server<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="31">protocol_version<pos:position pos:line="14" pos:column="47"/></name> <operator pos:line="14" pos:column="48">&gt;=<pos:position pos:line="14" pos:column="53"/></operator> <literal type="number" pos:line="14" pos:column="51">29<pos:position pos:line="14" pos:column="53"/></literal> <operator pos:line="14" pos:column="54">&amp;&amp;<pos:position pos:line="14" pos:column="64"/></operator> <name pos:line="14" pos:column="57">len<pos:position pos:line="14" pos:column="60"/></name> <operator pos:line="14" pos:column="61">&lt;<pos:position pos:line="14" pos:column="65"/></operator> <name pos:line="14" pos:column="63">MAXPATHLEN<pos:position pos:line="14" pos:column="73"/></name></expr>)<pos:position pos:line="14" pos:column="74"/></condition><then pos:line="14" pos:column="74"> <block pos:line="14" pos:column="75">{
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><call><name pos:line="15" pos:column="21">S_ISDIR<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><name pos:line="15" pos:column="29">mode<pos:position pos:line="15" pos:column="33"/></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="25">len<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">++<pos:position pos:line="16" pos:column="30"/></operator></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt></block></then></if> <comment type="block" pos:line="16" pos:column="32">/* directories include trailing null */</comment>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">send_msg<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">MSG_DELETED<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">fname<pos:position pos:line="17" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="46">len<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="51">am_generator<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">fmt<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="19" pos:column="23">stdout_format_has_o_or_i<pos:position pos:line="19" pos:column="47"/></name></expr> ?<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <expr><name pos:line="19" pos:column="50">stdout_format<pos:position pos:line="19" pos:column="63"/></name></expr> <pos:position pos:line="19" pos:column="64"/></then><else pos:line="19" pos:column="64">: <expr><literal type="string" pos:line="19" pos:column="66">"deleting %n"<pos:position pos:line="19" pos:column="79"/></literal></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">log_formatted<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">FCLIENT<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">fmt<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="45">"del."<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="53">&amp;<pos:position pos:line="20" pos:column="58"/></operator><name><name pos:line="20" pos:column="54">x<pos:position pos:line="20" pos:column="55"/></name><operator pos:line="20" pos:column="55">.<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="56">file<pos:position pos:line="20" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="62">fname<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="69">&amp;<pos:position pos:line="20" pos:column="74"/></operator><name pos:line="20" pos:column="70">stats<pos:position pos:line="20" pos:column="75"/></name></expr></argument>,
			      <argument><expr><name pos:line="21" pos:column="31">ITEM_DELETED<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">NULL<pos:position pos:line="21" pos:column="49"/></name></expr></argument>)<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></else></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><operator pos:line="24" pos:column="13">!<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">logfile_name<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">||<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">dry_run<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">||<pos:position pos:line="24" pos:column="40"/></operator> <operator pos:line="24" pos:column="41">!<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">logfile_format<pos:position pos:line="24" pos:column="56"/></name></expr>)<pos:position pos:line="24" pos:column="57"/></condition><then pos:line="24" pos:column="57">
		<block type="pseudo"><return pos:line="25" pos:column="17">return;<pos:position pos:line="25" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="27" pos:column="9">fmt<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <ternary><condition><expr><name pos:line="27" pos:column="15">logfile_format_has_o_or_i<pos:position pos:line="27" pos:column="40"/></name></expr> ?<pos:position pos:line="27" pos:column="42"/></condition><then pos:line="27" pos:column="42"> <expr><name pos:line="27" pos:column="43">logfile_format<pos:position pos:line="27" pos:column="57"/></name></expr> <pos:position pos:line="27" pos:column="58"/></then><else pos:line="27" pos:column="58">: <expr><literal type="string" pos:line="27" pos:column="60">"deleting %n"<pos:position pos:line="27" pos:column="73"/></literal></expr></else></ternary></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="28" pos:column="9">log_formatted<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">FLOG<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="29">fmt<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="34">"del."<pos:position pos:line="28" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator><name><name pos:line="28" pos:column="43">x<pos:position pos:line="28" pos:column="44"/></name><operator pos:line="28" pos:column="44">.<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">file<pos:position pos:line="28" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="51">fname<pos:position pos:line="28" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="58">&amp;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="59">stats<pos:position pos:line="28" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">ITEM_DELETED<pos:position pos:line="28" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="80">NULL<pos:position pos:line="28" pos:column="84"/></name></expr></argument>)<pos:position pos:line="28" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="86"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

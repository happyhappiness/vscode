<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_527_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">file_struct<pos:position pos:line="1" pos:column="26"/></name></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">recv_file_entry<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">f<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="51">struct<pos:position pos:line="1" pos:column="57"/></name> <name pos:line="1" pos:column="58">file_list<pos:position pos:line="1" pos:column="67"/></name></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">flist<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">int<pos:position pos:line="1" pos:column="79"/></name></type> <name pos:line="1" pos:column="80">xflags<pos:position pos:line="1" pos:column="86"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="87"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int64<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">modtime<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">mode_t<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">mode<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef<pos:position pos:line="5" pos:column="7"/></cpp:directive> <name pos:line="5" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="5" pos:column="26"/></name></cpp:ifdef>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">static<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int64<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">dev<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">dev_t<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">rdev<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="9" pos:column="9">static<pos:position pos:line="9" pos:column="15"/></specifier> <type><name pos:line="9" pos:column="16">uint32<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">rdev_major<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="10" pos:column="9">static<pos:position pos:line="10" pos:column="15"/></specifier> <type><name pos:line="10" pos:column="16">uid_t<pos:position pos:line="10" pos:column="21"/></name></type> <name pos:line="10" pos:column="22">uid<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">static<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">gid_t<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">gid<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="12" pos:column="9">static<pos:position pos:line="12" pos:column="15"/></specifier> <type><name pos:line="12" pos:column="16">uint16<pos:position pos:line="12" pos:column="22"/></name></type> <name pos:line="12" pos:column="23">gid_flags<pos:position pos:line="12" pos:column="32"/></name></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="13" pos:column="9">static<pos:position pos:line="13" pos:column="15"/></specifier> <type><name pos:line="13" pos:column="16">char<pos:position pos:line="13" pos:column="20"/></name></type> <name><name pos:line="13" pos:column="21">lastname<pos:position pos:line="13" pos:column="29"/></name><index pos:line="13" pos:column="29">[<expr><name pos:line="13" pos:column="30">MAXPATHLEN<pos:position pos:line="13" pos:column="40"/></name></expr>]<pos:position pos:line="13" pos:column="41"/></index></name></decl>, <modifier pos:line="13" pos:column="43">*<pos:position pos:line="13" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="44">lastdir<pos:position pos:line="13" pos:column="51"/></name></decl>;<pos:position pos:line="13" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="14" pos:column="9">static<pos:position pos:line="14" pos:column="15"/></specifier> <type><name pos:line="14" pos:column="16">int<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">lastdir_depth<pos:position pos:line="14" pos:column="33"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="35">lastdir_len<pos:position pos:line="14" pos:column="46"/></name> <init pos:line="14" pos:column="47">= <expr><operator pos:line="14" pos:column="49">-<pos:position pos:line="14" pos:column="50"/></operator><literal type="number" pos:line="14" pos:column="50">1<pos:position pos:line="14" pos:column="51"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="15" pos:column="9">static<pos:position pos:line="15" pos:column="15"/></specifier> <type><name pos:line="15" pos:column="16">unsigned<pos:position pos:line="15" pos:column="24"/></name> <name pos:line="15" pos:column="25">int<pos:position pos:line="15" pos:column="28"/></name></type> <name pos:line="15" pos:column="29">del_hier_name_len<pos:position pos:line="15" pos:column="46"/></name> <init pos:line="15" pos:column="47">= <expr><literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="16" pos:column="9">static<pos:position pos:line="16" pos:column="15"/></specifier> <type><name pos:line="16" pos:column="16">int<pos:position pos:line="16" pos:column="19"/></name></type> <name pos:line="16" pos:column="20">in_del_hier<pos:position pos:line="16" pos:column="31"/></name> <init pos:line="16" pos:column="32">= <expr><literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type> <name><name pos:line="17" pos:column="14">thisname<pos:position pos:line="17" pos:column="22"/></name><index pos:line="17" pos:column="22">[<expr><name pos:line="17" pos:column="23">MAXPATHLEN<pos:position pos:line="17" pos:column="33"/></name></expr>]<pos:position pos:line="17" pos:column="34"/></index></name></decl>;<pos:position pos:line="17" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">unsigned<pos:position pos:line="18" pos:column="17"/></name> <name pos:line="18" pos:column="18">int<pos:position pos:line="18" pos:column="21"/></name></type> <name pos:line="18" pos:column="22">l1<pos:position pos:line="18" pos:column="24"/></name> <init pos:line="18" pos:column="25">= <expr><literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="18" pos:column="30">l2<pos:position pos:line="18" pos:column="32"/></name> <init pos:line="18" pos:column="33">= <expr><literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type> <name pos:line="19" pos:column="13">alloc_len<pos:position pos:line="19" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="24">basename_len<pos:position pos:line="19" pos:column="36"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="38">linkname_len<pos:position pos:line="19" pos:column="50"/></name></decl>;<pos:position pos:line="19" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type> <name pos:line="20" pos:column="13">extra_len<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><name pos:line="20" pos:column="25">file_extra_cnt<pos:position pos:line="20" pos:column="39"/></name> <operator pos:line="20" pos:column="40">*<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="42">EXTRA_LEN<pos:position pos:line="20" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type> <name pos:line="21" pos:column="13">first_hlink_ndx<pos:position pos:line="21" pos:column="28"/></name> <init pos:line="21" pos:column="29">= <expr><operator pos:line="21" pos:column="31">-<pos:position pos:line="21" pos:column="32"/></operator><literal type="number" pos:line="21" pos:column="32">1<pos:position pos:line="21" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int64<pos:position pos:line="22" pos:column="14"/></name></type> <name pos:line="22" pos:column="15">file_length<pos:position pos:line="22" pos:column="26"/></name></decl>;<pos:position pos:line="22" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">uint32<pos:position pos:line="23" pos:column="15"/></name></type> <name pos:line="23" pos:column="16">modtime_nsec<pos:position pos:line="23" pos:column="28"/></name></decl>;<pos:position pos:line="23" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="24" pos:column="9">const<pos:position pos:line="24" pos:column="14"/></specifier> <name pos:line="24" pos:column="15">char<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type><name pos:line="24" pos:column="21">basename<pos:position pos:line="24" pos:column="29"/></name></decl>;<pos:position pos:line="24" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="25" pos:column="9">struct<pos:position pos:line="25" pos:column="15"/></name> <name pos:line="25" pos:column="16">file_struct<pos:position pos:line="25" pos:column="27"/></name></name> <modifier pos:line="25" pos:column="28">*<pos:position pos:line="25" pos:column="29"/></modifier></type><name pos:line="25" pos:column="29">file<pos:position pos:line="25" pos:column="33"/></name></decl>;<pos:position pos:line="25" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="26" pos:column="9">alloc_pool_t<pos:position pos:line="26" pos:column="21"/></name> <modifier pos:line="26" pos:column="22">*<pos:position pos:line="26" pos:column="23"/></modifier></type><name pos:line="26" pos:column="23">pool<pos:position pos:line="26" pos:column="27"/></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name> <modifier pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></modifier></type><name pos:line="27" pos:column="15">bp<pos:position pos:line="27" pos:column="17"/></name></decl>;<pos:position pos:line="27" pos:column="18"/></decl_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">xflags<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">&amp;<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="22">XMIT_SAME_NAME<pos:position pos:line="29" pos:column="36"/></name></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">l1<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">read_byte<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">f<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">xflags<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">&amp;<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="22">XMIT_LONG_NAME<pos:position pos:line="32" pos:column="36"/></name></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">l2<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">read_varint30<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">(<argument><expr><name pos:line="33" pos:column="36">f<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt></block></then>
	<else pos:line="34" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="17">l2<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <call><name pos:line="35" pos:column="22">read_byte<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">f<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt></block></else></if>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">l2<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">&gt;=<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="19">MAXPATHLEN<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">-<pos:position pos:line="37" pos:column="31"/></operator> <name pos:line="37" pos:column="32">l1<pos:position pos:line="37" pos:column="34"/></name></expr>)<pos:position pos:line="37" pos:column="35"/></condition><then pos:line="37" pos:column="35"> <block pos:line="37" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">rprintf<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">FERROR<pos:position pos:line="38" pos:column="31"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="39" pos:column="25">"overflow: xflags=0x%x l1=%d l2=%d lastname=%s [%s]\n"<pos:position pos:line="39" pos:column="79"/></literal></expr></argument>,
			<argument><expr><name pos:line="40" pos:column="25">xflags<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">l1<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">l2<pos:position pos:line="40" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">lastname<pos:position pos:line="40" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="51">who_am_i<pos:position pos:line="40" pos:column="59"/></name><argument_list pos:line="40" pos:column="59">()<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">overflow_exit<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><literal type="string" pos:line="41" pos:column="31">"recv_file_entry"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="44" pos:column="9">strlcpy<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">thisname<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="27">lastname<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">l1<pos:position pos:line="44" pos:column="39"/></name> <operator pos:line="44" pos:column="40">+<pos:position pos:line="44" pos:column="41"/></operator> <literal type="number" pos:line="44" pos:column="42">1<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">read_sbuf<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name pos:line="45" pos:column="19">f<pos:position pos:line="45" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="22">&amp;<pos:position pos:line="45" pos:column="27"/></operator><name><name pos:line="45" pos:column="23">thisname<pos:position pos:line="45" pos:column="31"/></name><index pos:line="45" pos:column="31">[<expr><name pos:line="45" pos:column="32">l1<pos:position pos:line="45" pos:column="34"/></name></expr>]<pos:position pos:line="45" pos:column="35"/></index></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="37">l2<pos:position pos:line="45" pos:column="39"/></name></expr></argument>)<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">thisname<pos:position pos:line="46" pos:column="17"/></name><index pos:line="46" pos:column="17">[<expr><name pos:line="46" pos:column="18">l1<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">+<pos:position pos:line="46" pos:column="22"/></operator> <name pos:line="46" pos:column="23">l2<pos:position pos:line="46" pos:column="25"/></name></expr>]<pos:position pos:line="46" pos:column="26"/></index></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <literal type="number" pos:line="46" pos:column="29">0<pos:position pos:line="46" pos:column="30"/></literal></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt>

	<comment type="block" pos:line="48" pos:column="9">/* Abuse basename_len for a moment... */</comment>
	<expr_stmt><expr><name pos:line="49" pos:column="9">basename_len<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <call><name pos:line="49" pos:column="24">strlcpy<pos:position pos:line="49" pos:column="31"/></name><argument_list pos:line="49" pos:column="31">(<argument><expr><name pos:line="49" pos:column="32">lastname<pos:position pos:line="49" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">thisname<pos:position pos:line="49" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="52">MAXPATHLEN<pos:position pos:line="49" pos:column="62"/></name></expr></argument>)<pos:position pos:line="49" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="64"/></expr_stmt>

<cpp:ifdef pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">ifdef<pos:position pos:line="51" pos:column="7"/></cpp:directive> <name pos:line="51" pos:column="8">ICONV_OPTION<pos:position pos:line="51" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><name pos:line="52" pos:column="13">ic_recv<pos:position pos:line="52" pos:column="20"/></name> <operator pos:line="52" pos:column="21">!=<pos:position pos:line="52" pos:column="23"/></operator> <operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">iconv_t<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">)<pos:position pos:line="52" pos:column="33"/></operator><operator pos:line="52" pos:column="33">-<pos:position pos:line="52" pos:column="34"/></operator><literal type="number" pos:line="52" pos:column="34">1<pos:position pos:line="52" pos:column="35"/></literal></expr>)<pos:position pos:line="52" pos:column="36"/></condition><then pos:line="52" pos:column="36"> <block pos:line="52" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="53" pos:column="17">xbuf<pos:position pos:line="53" pos:column="21"/></name></type> <name pos:line="53" pos:column="22">outbuf<pos:position pos:line="53" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="53" pos:column="30">inbuf<pos:position pos:line="53" pos:column="35"/></name></decl>;<pos:position pos:line="53" pos:column="36"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="55" pos:column="17">INIT_CONST_XBUF<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">outbuf<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">thisname<pos:position pos:line="55" pos:column="49"/></name></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">INIT_XBUF<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">inbuf<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="34">lastname<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="44">basename_len<pos:position pos:line="56" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="58">(<pos:position pos:line="56" pos:column="59"/></operator><name pos:line="56" pos:column="59">size_t<pos:position pos:line="56" pos:column="65"/></name><operator pos:line="56" pos:column="65">)<pos:position pos:line="56" pos:column="66"/></operator><operator pos:line="56" pos:column="66">-<pos:position pos:line="56" pos:column="67"/></operator><literal type="number" pos:line="56" pos:column="67">1<pos:position pos:line="56" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="70"/></expr_stmt>

		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">iconvbufs<pos:position pos:line="58" pos:column="30"/></name><argument_list pos:line="58" pos:column="30">(<argument><expr><name pos:line="58" pos:column="31">ic_recv<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="40">&amp;<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="41">inbuf<pos:position pos:line="58" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="48">&amp;<pos:position pos:line="58" pos:column="53"/></operator><name pos:line="58" pos:column="49">outbuf<pos:position pos:line="58" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="57">ICB_INIT<pos:position pos:line="58" pos:column="65"/></name></expr></argument>)<pos:position pos:line="58" pos:column="66"/></argument_list></call> <operator pos:line="58" pos:column="67">&lt;<pos:position pos:line="58" pos:column="71"/></operator> <literal type="number" pos:line="58" pos:column="69">0<pos:position pos:line="58" pos:column="70"/></literal></expr>)<pos:position pos:line="58" pos:column="71"/></condition><then pos:line="58" pos:column="71"> <block pos:line="58" pos:column="72">{
			<expr_stmt><expr><name pos:line="59" pos:column="25">io_error<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">|=<pos:position pos:line="59" pos:column="36"/></operator> <name pos:line="59" pos:column="37">IOERR_GENERAL<pos:position pos:line="59" pos:column="50"/></name></expr>;<pos:position pos:line="59" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">rprintf<pos:position pos:line="60" pos:column="32"/></name><argument_list pos:line="60" pos:column="32">(<argument><expr><name pos:line="60" pos:column="33">FERROR_UTF8<pos:position pos:line="60" pos:column="44"/></name></expr></argument>,
			    <argument><expr><literal type="string" pos:line="61" pos:column="29">"[%s] cannot convert filename: %s (%s)\n"<pos:position pos:line="61" pos:column="70"/></literal></expr></argument>,
			    <argument><expr><call><name pos:line="62" pos:column="29">who_am_i<pos:position pos:line="62" pos:column="37"/></name><argument_list pos:line="62" pos:column="37">()<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="62" pos:column="41">lastname<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="62" pos:column="51">strerror<pos:position pos:line="62" pos:column="59"/></name><argument_list pos:line="62" pos:column="59">(<argument><expr><name pos:line="62" pos:column="60">errno<pos:position pos:line="62" pos:column="65"/></name></expr></argument>)<pos:position pos:line="62" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="63" pos:column="25">outbuf<pos:position pos:line="63" pos:column="31"/></name><operator pos:line="63" pos:column="31">.<pos:position pos:line="63" pos:column="32"/></operator><name pos:line="63" pos:column="32">len<pos:position pos:line="63" pos:column="35"/></name></name> <operator pos:line="63" pos:column="36">=<pos:position pos:line="63" pos:column="37"/></operator> <literal type="number" pos:line="63" pos:column="38">0<pos:position pos:line="63" pos:column="39"/></literal></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="65" pos:column="17">thisname<pos:position pos:line="65" pos:column="25"/></name><index pos:line="65" pos:column="25">[<expr><name><name pos:line="65" pos:column="26">outbuf<pos:position pos:line="65" pos:column="32"/></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">len<pos:position pos:line="65" pos:column="36"/></name></name></expr>]<pos:position pos:line="65" pos:column="37"/></index></name> <operator pos:line="65" pos:column="38">=<pos:position pos:line="65" pos:column="39"/></operator> <literal type="char" pos:line="65" pos:column="40">'\0'<pos:position pos:line="65" pos:column="44"/></literal></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">*<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">thisname<pos:position pos:line="69" pos:column="22"/></name>
	 <operator pos:line="70" pos:column="10">&amp;&amp;<pos:position pos:line="70" pos:column="20"/></operator> <operator pos:line="70" pos:column="13">(<pos:position pos:line="70" pos:column="14"/></operator><call><name pos:line="70" pos:column="14">clean_fname<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">thisname<pos:position pos:line="70" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="36">CFN_REFUSE_DOT_DOT_DIRS<pos:position pos:line="70" pos:column="59"/></name></expr></argument>)<pos:position pos:line="70" pos:column="60"/></argument_list></call> <operator pos:line="70" pos:column="61">&lt;<pos:position pos:line="70" pos:column="65"/></operator> <literal type="number" pos:line="70" pos:column="63">0<pos:position pos:line="70" pos:column="64"/></literal> <operator pos:line="70" pos:column="65">||<pos:position pos:line="70" pos:column="67"/></operator> <operator pos:line="70" pos:column="68">(<pos:position pos:line="70" pos:column="69"/></operator><operator pos:line="70" pos:column="69">!<pos:position pos:line="70" pos:column="70"/></operator><name pos:line="70" pos:column="70">relative_paths<pos:position pos:line="70" pos:column="84"/></name> <operator pos:line="70" pos:column="85">&amp;&amp;<pos:position pos:line="70" pos:column="95"/></operator> <operator pos:line="70" pos:column="88">*<pos:position pos:line="70" pos:column="89"/></operator><name pos:line="70" pos:column="89">thisname<pos:position pos:line="70" pos:column="97"/></name> <operator pos:line="70" pos:column="98">==<pos:position pos:line="70" pos:column="100"/></operator> <literal type="char" pos:line="70" pos:column="101">'/'<pos:position pos:line="70" pos:column="104"/></literal><operator pos:line="70" pos:column="104">)<pos:position pos:line="70" pos:column="105"/></operator><operator pos:line="70" pos:column="105">)<pos:position pos:line="70" pos:column="106"/></operator></expr>)<pos:position pos:line="70" pos:column="107"/></condition><then pos:line="70" pos:column="107"> <block pos:line="70" pos:column="108">{
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">rprintf<pos:position pos:line="71" pos:column="24"/></name><argument_list pos:line="71" pos:column="24">(<argument><expr><name pos:line="71" pos:column="25">FERROR<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="33">"ABORTING due to unsafe pathname from sender: %s\n"<pos:position pos:line="71" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="86">thisname<pos:position pos:line="71" pos:column="94"/></name></expr></argument>)<pos:position pos:line="71" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="96"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="72" pos:column="17">exit_cleanup<pos:position pos:line="72" pos:column="29"/></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">RERR_PROTOCOL<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>

	<if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">sanitize_paths<pos:position pos:line="75" pos:column="27"/></name></expr>)<pos:position pos:line="75" pos:column="28"/></condition><then pos:line="75" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="17">sanitize_path<pos:position pos:line="76" pos:column="30"/></name><argument_list pos:line="76" pos:column="30">(<argument><expr><name pos:line="76" pos:column="31">thisname<pos:position pos:line="76" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="41">thisname<pos:position pos:line="76" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="51">""<pos:position pos:line="76" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="55">0<pos:position pos:line="76" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="58">SP_DEFAULT<pos:position pos:line="76" pos:column="68"/></name></expr></argument>)<pos:position pos:line="76" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="70"/></expr_stmt></block></then></if>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">(<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="14">basename<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <call><name pos:line="78" pos:column="25">strrchr<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">thisname<pos:position pos:line="78" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="78" pos:column="43">'/'<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call><operator pos:line="78" pos:column="47">)<pos:position pos:line="78" pos:column="48"/></operator> <operator pos:line="78" pos:column="49">!=<pos:position pos:line="78" pos:column="51"/></operator> <name pos:line="78" pos:column="52">NULL<pos:position pos:line="78" pos:column="56"/></name></expr>)<pos:position pos:line="78" pos:column="57"/></condition><then pos:line="78" pos:column="57"> <block pos:line="78" pos:column="58">{
		<decl_stmt><decl><type><name pos:line="79" pos:column="17">int<pos:position pos:line="79" pos:column="20"/></name></type> <name pos:line="79" pos:column="21">len<pos:position pos:line="79" pos:column="24"/></name> <init pos:line="79" pos:column="25">= <expr><name pos:line="79" pos:column="27">basename<pos:position pos:line="79" pos:column="35"/></name><operator pos:line="79" pos:column="35">++<pos:position pos:line="79" pos:column="37"/></operator> <operator pos:line="79" pos:column="38">-<pos:position pos:line="79" pos:column="39"/></operator> <name pos:line="79" pos:column="40">thisname<pos:position pos:line="79" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="79" pos:column="49"/></decl_stmt>
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">len<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">!=<pos:position pos:line="80" pos:column="27"/></operator> <name pos:line="80" pos:column="28">lastdir_len<pos:position pos:line="80" pos:column="39"/></name> <operator pos:line="80" pos:column="40">||<pos:position pos:line="80" pos:column="42"/></operator> <call><name pos:line="80" pos:column="43">memcmp<pos:position pos:line="80" pos:column="49"/></name><argument_list pos:line="80" pos:column="49">(<argument><expr><name pos:line="80" pos:column="50">thisname<pos:position pos:line="80" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="60">lastdir<pos:position pos:line="80" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="69">len<pos:position pos:line="80" pos:column="72"/></name></expr></argument>)<pos:position pos:line="80" pos:column="73"/></argument_list></call> <operator pos:line="80" pos:column="74">!=<pos:position pos:line="80" pos:column="76"/></operator> <literal type="number" pos:line="80" pos:column="77">0<pos:position pos:line="80" pos:column="78"/></literal></expr>)<pos:position pos:line="80" pos:column="79"/></condition><then pos:line="80" pos:column="79"> <block pos:line="80" pos:column="80">{
			<expr_stmt><expr><name pos:line="81" pos:column="25">lastdir<pos:position pos:line="81" pos:column="32"/></name> <operator pos:line="81" pos:column="33">=<pos:position pos:line="81" pos:column="34"/></operator> <call><name pos:line="81" pos:column="35">new_array<pos:position pos:line="81" pos:column="44"/></name><argument_list pos:line="81" pos:column="44">(<argument><expr><name pos:line="81" pos:column="45">char<pos:position pos:line="81" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="51">len<pos:position pos:line="81" pos:column="54"/></name> <operator pos:line="81" pos:column="55">+<pos:position pos:line="81" pos:column="56"/></operator> <literal type="number" pos:line="81" pos:column="57">1<pos:position pos:line="81" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="82" pos:column="25">memcpy<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name pos:line="82" pos:column="32">lastdir<pos:position pos:line="82" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="41">thisname<pos:position pos:line="82" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="51">len<pos:position pos:line="82" pos:column="54"/></name></expr></argument>)<pos:position pos:line="82" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="83" pos:column="25">lastdir<pos:position pos:line="83" pos:column="32"/></name><index pos:line="83" pos:column="32">[<expr><name pos:line="83" pos:column="33">len<pos:position pos:line="83" pos:column="36"/></name></expr>]<pos:position pos:line="83" pos:column="37"/></index></name> <operator pos:line="83" pos:column="38">=<pos:position pos:line="83" pos:column="39"/></operator> <literal type="char" pos:line="83" pos:column="40">'\0'<pos:position pos:line="83" pos:column="44"/></literal></expr>;<pos:position pos:line="83" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name pos:line="84" pos:column="25">lastdir_len<pos:position pos:line="84" pos:column="36"/></name> <operator pos:line="84" pos:column="37">=<pos:position pos:line="84" pos:column="38"/></operator> <name pos:line="84" pos:column="39">len<pos:position pos:line="84" pos:column="42"/></name></expr>;<pos:position pos:line="84" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="85" pos:column="25">lastdir_depth<pos:position pos:line="85" pos:column="38"/></name> <operator pos:line="85" pos:column="39">=<pos:position pos:line="85" pos:column="40"/></operator> <call><name pos:line="85" pos:column="41">count_dir_elements<pos:position pos:line="85" pos:column="59"/></name><argument_list pos:line="85" pos:column="59">(<argument><expr><name pos:line="85" pos:column="60">lastdir<pos:position pos:line="85" pos:column="67"/></name></expr></argument>)<pos:position pos:line="85" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="86" pos:column="18"/></block></then></if>
	}<pos:position pos:line="87" pos:column="10"/></block></then> <else pos:line="87" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="17">basename<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <name pos:line="88" pos:column="28">thisname<pos:position pos:line="88" pos:column="36"/></name></expr>;<pos:position pos:line="88" pos:column="37"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="89" pos:column="9">basename_len<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">=<pos:position pos:line="89" pos:column="23"/></operator> <call><name pos:line="89" pos:column="24">strlen<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><name pos:line="89" pos:column="31">basename<pos:position pos:line="89" pos:column="39"/></name></expr></argument>)<pos:position pos:line="89" pos:column="40"/></argument_list></call> <operator pos:line="89" pos:column="41">+<pos:position pos:line="89" pos:column="42"/></operator> <literal type="number" pos:line="89" pos:column="43">1<pos:position pos:line="89" pos:column="44"/></literal></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt> <comment type="block" pos:line="89" pos:column="46">/* count the '\0' */</comment>

<cpp:ifdef pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">ifdef<pos:position pos:line="91" pos:column="7"/></cpp:directive> <name pos:line="91" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="91" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">protocol_version<pos:position pos:line="92" pos:column="29"/></name> <operator pos:line="92" pos:column="30">&gt;=<pos:position pos:line="92" pos:column="35"/></operator> <literal type="number" pos:line="92" pos:column="33">30<pos:position pos:line="92" pos:column="35"/></literal>
	 <operator pos:line="93" pos:column="10">&amp;&amp;<pos:position pos:line="93" pos:column="20"/></operator> <call><name pos:line="93" pos:column="13">BITS_SETnUNSET<pos:position pos:line="93" pos:column="27"/></name><argument_list pos:line="93" pos:column="27">(<argument><expr><name pos:line="93" pos:column="28">xflags<pos:position pos:line="93" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="36">XMIT_HLINKED<pos:position pos:line="93" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="50">XMIT_HLINK_FIRST<pos:position pos:line="93" pos:column="66"/></name></expr></argument>)<pos:position pos:line="93" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="68"/></condition><then pos:line="93" pos:column="68"> <block pos:line="93" pos:column="69">{
		<expr_stmt><expr><name pos:line="94" pos:column="17">first_hlink_ndx<pos:position pos:line="94" pos:column="32"/></name> <operator pos:line="94" pos:column="33">=<pos:position pos:line="94" pos:column="34"/></operator> <call><name pos:line="94" pos:column="35">read_varint<pos:position pos:line="94" pos:column="46"/></name><argument_list pos:line="94" pos:column="46">(<argument><expr><name pos:line="94" pos:column="47">f<pos:position pos:line="94" pos:column="48"/></name></expr></argument>)<pos:position pos:line="94" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="50"/></expr_stmt>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">first_hlink_ndx<pos:position pos:line="95" pos:column="36"/></name> <operator pos:line="95" pos:column="37">&lt;<pos:position pos:line="95" pos:column="41"/></operator> <literal type="number" pos:line="95" pos:column="39">0<pos:position pos:line="95" pos:column="40"/></literal> <operator pos:line="95" pos:column="41">||<pos:position pos:line="95" pos:column="43"/></operator> <name pos:line="95" pos:column="44">first_hlink_ndx<pos:position pos:line="95" pos:column="59"/></name> <operator pos:line="95" pos:column="60">&gt;=<pos:position pos:line="95" pos:column="65"/></operator> <name><name pos:line="95" pos:column="63">flist<pos:position pos:line="95" pos:column="68"/></name><operator pos:line="95" pos:column="68">-&gt;<pos:position pos:line="95" pos:column="73"/></operator><name pos:line="95" pos:column="70">ndx_start<pos:position pos:line="95" pos:column="79"/></name></name> <operator pos:line="95" pos:column="80">+<pos:position pos:line="95" pos:column="81"/></operator> <name><name pos:line="95" pos:column="82">flist<pos:position pos:line="95" pos:column="87"/></name><operator pos:line="95" pos:column="87">-&gt;<pos:position pos:line="95" pos:column="92"/></operator><name pos:line="95" pos:column="89">used<pos:position pos:line="95" pos:column="93"/></name></name></expr>)<pos:position pos:line="95" pos:column="94"/></condition><then pos:line="95" pos:column="94"> <block pos:line="95" pos:column="95">{
			<expr_stmt><expr><call><name pos:line="96" pos:column="25">rprintf<pos:position pos:line="96" pos:column="32"/></name><argument_list pos:line="96" pos:column="32">(<argument><expr><name pos:line="96" pos:column="33">FERROR<pos:position pos:line="96" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="97" pos:column="33">"hard-link reference out of range: %d (%d)\n"<pos:position pos:line="97" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name pos:line="98" pos:column="33">first_hlink_ndx<pos:position pos:line="98" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="50">flist<pos:position pos:line="98" pos:column="55"/></name><operator pos:line="98" pos:column="55">-&gt;<pos:position pos:line="98" pos:column="60"/></operator><name pos:line="98" pos:column="57">ndx_start<pos:position pos:line="98" pos:column="66"/></name></name> <operator pos:line="98" pos:column="67">+<pos:position pos:line="98" pos:column="68"/></operator> <name><name pos:line="98" pos:column="69">flist<pos:position pos:line="98" pos:column="74"/></name><operator pos:line="98" pos:column="74">-&gt;<pos:position pos:line="98" pos:column="79"/></operator><name pos:line="98" pos:column="76">used<pos:position pos:line="98" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="82"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="99" pos:column="25">exit_cleanup<pos:position pos:line="99" pos:column="37"/></name><argument_list pos:line="99" pos:column="37">(<argument><expr><name pos:line="99" pos:column="38">RERR_PROTOCOL<pos:position pos:line="99" pos:column="51"/></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="100" pos:column="18"/></block></then></if>
		<if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><call><name pos:line="101" pos:column="21">DEBUG_GTE<pos:position pos:line="101" pos:column="30"/></name><argument_list pos:line="101" pos:column="30">(<argument><expr><name pos:line="101" pos:column="31">HLINK<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="38">1<pos:position pos:line="101" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41"> <block pos:line="101" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="102" pos:column="25">rprintf<pos:position pos:line="102" pos:column="32"/></name><argument_list pos:line="102" pos:column="32">(<argument><expr><name pos:line="102" pos:column="33">FINFO<pos:position pos:line="102" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="40">"[%s] #%d hard-links #%d (%sabbrev)\n"<pos:position pos:line="102" pos:column="78"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="103" pos:column="33">who_am_i<pos:position pos:line="103" pos:column="41"/></name><argument_list pos:line="103" pos:column="41">()<pos:position pos:line="103" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="45">flist<pos:position pos:line="103" pos:column="50"/></name><operator pos:line="103" pos:column="50">-&gt;<pos:position pos:line="103" pos:column="55"/></operator><name pos:line="103" pos:column="52">used<pos:position pos:line="103" pos:column="56"/></name></name><operator pos:line="103" pos:column="56">+<pos:position pos:line="103" pos:column="57"/></operator><name><name pos:line="103" pos:column="57">flist<pos:position pos:line="103" pos:column="62"/></name><operator pos:line="103" pos:column="62">-&gt;<pos:position pos:line="103" pos:column="67"/></operator><name pos:line="103" pos:column="64">ndx_start<pos:position pos:line="103" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="75">first_hlink_ndx<pos:position pos:line="103" pos:column="90"/></name></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="104" pos:column="33">first_hlink_ndx<pos:position pos:line="104" pos:column="48"/></name> <operator pos:line="104" pos:column="49">&gt;=<pos:position pos:line="104" pos:column="54"/></operator> <name><name pos:line="104" pos:column="52">flist<pos:position pos:line="104" pos:column="57"/></name><operator pos:line="104" pos:column="57">-&gt;<pos:position pos:line="104" pos:column="62"/></operator><name pos:line="104" pos:column="59">ndx_start<pos:position pos:line="104" pos:column="68"/></name></name></expr> ?<pos:position pos:line="104" pos:column="70"/></condition><then pos:line="104" pos:column="70"> <expr><literal type="string" pos:line="104" pos:column="71">""<pos:position pos:line="104" pos:column="73"/></literal></expr> <pos:position pos:line="104" pos:column="74"/></then><else pos:line="104" pos:column="74">: <expr><literal type="string" pos:line="104" pos:column="76">"un"<pos:position pos:line="104" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="104" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="82"/></expr_stmt>
		}<pos:position pos:line="105" pos:column="18"/></block></then></if>
		<if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><name pos:line="106" pos:column="21">first_hlink_ndx<pos:position pos:line="106" pos:column="36"/></name> <operator pos:line="106" pos:column="37">&gt;=<pos:position pos:line="106" pos:column="42"/></operator> <name><name pos:line="106" pos:column="40">flist<pos:position pos:line="106" pos:column="45"/></name><operator pos:line="106" pos:column="45">-&gt;<pos:position pos:line="106" pos:column="50"/></operator><name pos:line="106" pos:column="47">ndx_start<pos:position pos:line="106" pos:column="56"/></name></name></expr>)<pos:position pos:line="106" pos:column="57"/></condition><then pos:line="106" pos:column="57"> <block pos:line="106" pos:column="58">{
			<decl_stmt><decl><type><name><name pos:line="107" pos:column="25">struct<pos:position pos:line="107" pos:column="31"/></name> <name pos:line="107" pos:column="32">file_struct<pos:position pos:line="107" pos:column="43"/></name></name> <modifier pos:line="107" pos:column="44">*<pos:position pos:line="107" pos:column="45"/></modifier></type><name pos:line="107" pos:column="45">first<pos:position pos:line="107" pos:column="50"/></name> <init pos:line="107" pos:column="51">= <expr><name><name pos:line="107" pos:column="53">flist<pos:position pos:line="107" pos:column="58"/></name><operator pos:line="107" pos:column="58">-&gt;<pos:position pos:line="107" pos:column="63"/></operator><name pos:line="107" pos:column="60">files<pos:position pos:line="107" pos:column="65"/></name><index pos:line="107" pos:column="65">[<expr><name pos:line="107" pos:column="66">first_hlink_ndx<pos:position pos:line="107" pos:column="81"/></name> <operator pos:line="107" pos:column="82">-<pos:position pos:line="107" pos:column="83"/></operator> <name><name pos:line="107" pos:column="84">flist<pos:position pos:line="107" pos:column="89"/></name><operator pos:line="107" pos:column="89">-&gt;<pos:position pos:line="107" pos:column="94"/></operator><name pos:line="107" pos:column="91">ndx_start<pos:position pos:line="107" pos:column="100"/></name></name></expr>]<pos:position pos:line="107" pos:column="101"/></index></name></expr></init></decl>;<pos:position pos:line="107" pos:column="102"/></decl_stmt>
			<expr_stmt><expr><name pos:line="108" pos:column="25">file_length<pos:position pos:line="108" pos:column="36"/></name> <operator pos:line="108" pos:column="37">=<pos:position pos:line="108" pos:column="38"/></operator> <call><name pos:line="108" pos:column="39">F_LENGTH<pos:position pos:line="108" pos:column="47"/></name><argument_list pos:line="108" pos:column="47">(<argument><expr><name pos:line="108" pos:column="48">first<pos:position pos:line="108" pos:column="53"/></name></expr></argument>)<pos:position pos:line="108" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><name pos:line="109" pos:column="25">modtime<pos:position pos:line="109" pos:column="32"/></name> <operator pos:line="109" pos:column="33">=<pos:position pos:line="109" pos:column="34"/></operator> <name><name pos:line="109" pos:column="35">first<pos:position pos:line="109" pos:column="40"/></name><operator pos:line="109" pos:column="40">-&gt;<pos:position pos:line="109" pos:column="45"/></operator><name pos:line="109" pos:column="42">modtime<pos:position pos:line="109" pos:column="49"/></name></name></expr>;<pos:position pos:line="109" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="110" pos:column="25">modtime_nsec<pos:position pos:line="110" pos:column="37"/></name> <operator pos:line="110" pos:column="38">=<pos:position pos:line="110" pos:column="39"/></operator> <call><name pos:line="110" pos:column="40">F_MOD_NSEC<pos:position pos:line="110" pos:column="50"/></name><argument_list pos:line="110" pos:column="50">(<argument><expr><name pos:line="110" pos:column="51">first<pos:position pos:line="110" pos:column="56"/></name></expr></argument>)<pos:position pos:line="110" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="111" pos:column="25">mode<pos:position pos:line="111" pos:column="29"/></name> <operator pos:line="111" pos:column="30">=<pos:position pos:line="111" pos:column="31"/></operator> <name><name pos:line="111" pos:column="32">first<pos:position pos:line="111" pos:column="37"/></name><operator pos:line="111" pos:column="37">-&gt;<pos:position pos:line="111" pos:column="42"/></operator><name pos:line="111" pos:column="39">mode<pos:position pos:line="111" pos:column="43"/></name></name></expr>;<pos:position pos:line="111" pos:column="44"/></expr_stmt>
			<if pos:line="112" pos:column="25">if <condition pos:line="112" pos:column="28">(<expr><name pos:line="112" pos:column="29">preserve_uid<pos:position pos:line="112" pos:column="41"/></name></expr>)<pos:position pos:line="112" pos:column="42"/></condition><then pos:line="112" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><name pos:line="113" pos:column="33">uid<pos:position pos:line="113" pos:column="36"/></name> <operator pos:line="113" pos:column="37">=<pos:position pos:line="113" pos:column="38"/></operator> <call><name pos:line="113" pos:column="39">F_OWNER<pos:position pos:line="113" pos:column="46"/></name><argument_list pos:line="113" pos:column="46">(<argument><expr><name pos:line="113" pos:column="47">first<pos:position pos:line="113" pos:column="52"/></name></expr></argument>)<pos:position pos:line="113" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="54"/></expr_stmt></block></then></if>
			<if pos:line="114" pos:column="25">if <condition pos:line="114" pos:column="28">(<expr><name pos:line="114" pos:column="29">preserve_gid<pos:position pos:line="114" pos:column="41"/></name></expr>)<pos:position pos:line="114" pos:column="42"/></condition><then pos:line="114" pos:column="42">
				<block type="pseudo"><expr_stmt><expr><name pos:line="115" pos:column="33">gid<pos:position pos:line="115" pos:column="36"/></name> <operator pos:line="115" pos:column="37">=<pos:position pos:line="115" pos:column="38"/></operator> <call><name pos:line="115" pos:column="39">F_GROUP<pos:position pos:line="115" pos:column="46"/></name><argument_list pos:line="115" pos:column="46">(<argument><expr><name pos:line="115" pos:column="47">first<pos:position pos:line="115" pos:column="52"/></name></expr></argument>)<pos:position pos:line="115" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt></block></then></if>
			<if pos:line="116" pos:column="25">if <condition pos:line="116" pos:column="28">(<expr><name pos:line="116" pos:column="29">preserve_devices<pos:position pos:line="116" pos:column="45"/></name> <operator pos:line="116" pos:column="46">&amp;&amp;<pos:position pos:line="116" pos:column="56"/></operator> <call><name pos:line="116" pos:column="49">IS_DEVICE<pos:position pos:line="116" pos:column="58"/></name><argument_list pos:line="116" pos:column="58">(<argument><expr><name pos:line="116" pos:column="59">mode<pos:position pos:line="116" pos:column="63"/></name></expr></argument>)<pos:position pos:line="116" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="65"/></condition><then pos:line="116" pos:column="65"> <block pos:line="116" pos:column="66">{
				<decl_stmt><decl><type><name pos:line="117" pos:column="33">uint32<pos:position pos:line="117" pos:column="39"/></name> <modifier pos:line="117" pos:column="40">*<pos:position pos:line="117" pos:column="41"/></modifier></type><name pos:line="117" pos:column="41">devp<pos:position pos:line="117" pos:column="45"/></name> <init pos:line="117" pos:column="46">= <expr><call><name pos:line="117" pos:column="48">F_RDEV_P<pos:position pos:line="117" pos:column="56"/></name><argument_list pos:line="117" pos:column="56">(<argument><expr><name pos:line="117" pos:column="57">first<pos:position pos:line="117" pos:column="62"/></name></expr></argument>)<pos:position pos:line="117" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="117" pos:column="64"/></decl_stmt>
				<expr_stmt><expr><name pos:line="118" pos:column="33">rdev<pos:position pos:line="118" pos:column="37"/></name> <operator pos:line="118" pos:column="38">=<pos:position pos:line="118" pos:column="39"/></operator> <call><name pos:line="118" pos:column="40">MAKEDEV<pos:position pos:line="118" pos:column="47"/></name><argument_list pos:line="118" pos:column="47">(<argument><expr><call><name pos:line="118" pos:column="48">DEV_MAJOR<pos:position pos:line="118" pos:column="57"/></name><argument_list pos:line="118" pos:column="57">(<argument><expr><name pos:line="118" pos:column="58">devp<pos:position pos:line="118" pos:column="62"/></name></expr></argument>)<pos:position pos:line="118" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="65">DEV_MINOR<pos:position pos:line="118" pos:column="74"/></name><argument_list pos:line="118" pos:column="74">(<argument><expr><name pos:line="118" pos:column="75">devp<pos:position pos:line="118" pos:column="79"/></name></expr></argument>)<pos:position pos:line="118" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="82"/></expr_stmt>
				<expr_stmt><expr><name pos:line="119" pos:column="33">extra_len<pos:position pos:line="119" pos:column="42"/></name> <operator pos:line="119" pos:column="43">+=<pos:position pos:line="119" pos:column="45"/></operator> <name pos:line="119" pos:column="46">DEV_EXTRA_CNT<pos:position pos:line="119" pos:column="59"/></name> <operator pos:line="119" pos:column="60">*<pos:position pos:line="119" pos:column="61"/></operator> <name pos:line="119" pos:column="62">EXTRA_LEN<pos:position pos:line="119" pos:column="71"/></name></expr>;<pos:position pos:line="119" pos:column="72"/></expr_stmt>
			}<pos:position pos:line="120" pos:column="26"/></block></then></if>
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><name pos:line="121" pos:column="29">preserve_links<pos:position pos:line="121" pos:column="43"/></name> <operator pos:line="121" pos:column="44">&amp;&amp;<pos:position pos:line="121" pos:column="54"/></operator> <call><name pos:line="121" pos:column="47">S_ISLNK<pos:position pos:line="121" pos:column="54"/></name><argument_list pos:line="121" pos:column="54">(<argument><expr><name pos:line="121" pos:column="55">mode<pos:position pos:line="121" pos:column="59"/></name></expr></argument>)<pos:position pos:line="121" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="61"/></condition><then pos:line="121" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="33">linkname_len<pos:position pos:line="122" pos:column="45"/></name> <operator pos:line="122" pos:column="46">=<pos:position pos:line="122" pos:column="47"/></operator> <call><name pos:line="122" pos:column="48">strlen<pos:position pos:line="122" pos:column="54"/></name><argument_list pos:line="122" pos:column="54">(<argument><expr><call><name pos:line="122" pos:column="55">F_SYMLINK<pos:position pos:line="122" pos:column="64"/></name><argument_list pos:line="122" pos:column="64">(<argument><expr><name pos:line="122" pos:column="65">first<pos:position pos:line="122" pos:column="70"/></name></expr></argument>)<pos:position pos:line="122" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="122" pos:column="72"/></argument_list></call> <operator pos:line="122" pos:column="73">+<pos:position pos:line="122" pos:column="74"/></operator> <literal type="number" pos:line="122" pos:column="75">1<pos:position pos:line="122" pos:column="76"/></literal></expr>;<pos:position pos:line="122" pos:column="77"/></expr_stmt></block></then>
			<else pos:line="123" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="124" pos:column="33">linkname_len<pos:position pos:line="124" pos:column="45"/></name> <operator pos:line="124" pos:column="46">=<pos:position pos:line="124" pos:column="47"/></operator> <literal type="number" pos:line="124" pos:column="48">0<pos:position pos:line="124" pos:column="49"/></literal></expr>;<pos:position pos:line="124" pos:column="50"/></expr_stmt></block></else></if>
			<goto pos:line="125" pos:column="25">goto <name pos:line="125" pos:column="30">create_object<pos:position pos:line="125" pos:column="43"/></name>;<pos:position pos:line="125" pos:column="44"/></goto>
		}<pos:position pos:line="126" pos:column="18"/></block></then></if>
	}<pos:position pos:line="127" pos:column="10"/></block></then></if>
<cpp:endif pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">endif<pos:position pos:line="128" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="130" pos:column="9">file_length<pos:position pos:line="130" pos:column="20"/></name> <operator pos:line="130" pos:column="21">=<pos:position pos:line="130" pos:column="22"/></operator> <call><name pos:line="130" pos:column="23">read_varlong30<pos:position pos:line="130" pos:column="37"/></name><argument_list pos:line="130" pos:column="37">(<argument><expr><name pos:line="130" pos:column="38">f<pos:position pos:line="130" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="41">3<pos:position pos:line="130" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="44"/></expr_stmt>
	<if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><operator pos:line="131" pos:column="13">!<pos:position pos:line="131" pos:column="14"/></operator><operator pos:line="131" pos:column="14">(<pos:position pos:line="131" pos:column="15"/></operator><name pos:line="131" pos:column="15">xflags<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">&amp;<pos:position pos:line="131" pos:column="27"/></operator> <name pos:line="131" pos:column="24">XMIT_SAME_TIME<pos:position pos:line="131" pos:column="38"/></name><operator pos:line="131" pos:column="38">)<pos:position pos:line="131" pos:column="39"/></operator></expr>)<pos:position pos:line="131" pos:column="40"/></condition><then pos:line="131" pos:column="40"> <block pos:line="131" pos:column="41">{
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><name pos:line="132" pos:column="21">protocol_version<pos:position pos:line="132" pos:column="37"/></name> <operator pos:line="132" pos:column="38">&gt;=<pos:position pos:line="132" pos:column="43"/></operator> <literal type="number" pos:line="132" pos:column="41">30<pos:position pos:line="132" pos:column="43"/></literal></expr>)<pos:position pos:line="132" pos:column="44"/></condition><then pos:line="132" pos:column="44"> <block pos:line="132" pos:column="45">{
			<expr_stmt><expr><name pos:line="133" pos:column="25">modtime<pos:position pos:line="133" pos:column="32"/></name> <operator pos:line="133" pos:column="33">=<pos:position pos:line="133" pos:column="34"/></operator> <call><name pos:line="133" pos:column="35">read_varlong<pos:position pos:line="133" pos:column="47"/></name><argument_list pos:line="133" pos:column="47">(<argument><expr><name pos:line="133" pos:column="48">f<pos:position pos:line="133" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="51">4<pos:position pos:line="133" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="54"/></expr_stmt>
<cpp:if pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">if<pos:position pos:line="134" pos:column="4"/></cpp:directive> <expr><name pos:line="134" pos:column="5">SIZEOF_TIME_T<pos:position pos:line="134" pos:column="18"/></name> <operator pos:line="134" pos:column="19">&lt;<pos:position pos:line="134" pos:column="23"/></operator> <name pos:line="134" pos:column="21">SIZEOF_INT64<pos:position pos:line="134" pos:column="33"/></name></expr></cpp:if>
			<if pos:line="135" pos:column="25">if <condition pos:line="135" pos:column="28">(<expr><operator pos:line="135" pos:column="29">!<pos:position pos:line="135" pos:column="30"/></operator><name pos:line="135" pos:column="30">am_generator<pos:position pos:line="135" pos:column="42"/></name> <operator pos:line="135" pos:column="43">&amp;&amp;<pos:position pos:line="135" pos:column="53"/></operator> <operator pos:line="135" pos:column="46">(<pos:position pos:line="135" pos:column="47"/></operator><name pos:line="135" pos:column="47">int64<pos:position pos:line="135" pos:column="52"/></name><operator pos:line="135" pos:column="52">)<pos:position pos:line="135" pos:column="53"/></operator><operator pos:line="135" pos:column="53">(<pos:position pos:line="135" pos:column="54"/></operator><name pos:line="135" pos:column="54">time_t<pos:position pos:line="135" pos:column="60"/></name><operator pos:line="135" pos:column="60">)<pos:position pos:line="135" pos:column="61"/></operator><name pos:line="135" pos:column="61">modtime<pos:position pos:line="135" pos:column="68"/></name> <operator pos:line="135" pos:column="69">!=<pos:position pos:line="135" pos:column="71"/></operator> <name pos:line="135" pos:column="72">modtime<pos:position pos:line="135" pos:column="79"/></name></expr>)<pos:position pos:line="135" pos:column="80"/></condition><then pos:line="135" pos:column="80"> <block pos:line="135" pos:column="81">{
				<expr_stmt><expr><call><name pos:line="136" pos:column="33">rprintf<pos:position pos:line="136" pos:column="40"/></name><argument_list pos:line="136" pos:column="40">(<argument><expr><name pos:line="136" pos:column="41">FERROR_XFER<pos:position pos:line="136" pos:column="52"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="137" pos:column="37">"Time value of %s truncated on receiver.\n"<pos:position pos:line="137" pos:column="80"/></literal></expr></argument>,
				    <argument><expr><name pos:line="138" pos:column="37">lastname<pos:position pos:line="138" pos:column="45"/></name></expr></argument>)<pos:position pos:line="138" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="139" pos:column="26"/></block></then></if>
<cpp:endif pos:line="140" pos:column="1">#<cpp:directive pos:line="140" pos:column="2">endif<pos:position pos:line="140" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="141" pos:column="18"/></block></then> <else pos:line="141" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="25">modtime<pos:position pos:line="142" pos:column="32"/></name> <operator pos:line="142" pos:column="33">=<pos:position pos:line="142" pos:column="34"/></operator> <call><name pos:line="142" pos:column="35">read_int<pos:position pos:line="142" pos:column="43"/></name><argument_list pos:line="142" pos:column="43">(<argument><expr><name pos:line="142" pos:column="44">f<pos:position pos:line="142" pos:column="45"/></name></expr></argument>)<pos:position pos:line="142" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="47"/></expr_stmt></block></else></if>
	}<pos:position pos:line="143" pos:column="10"/></block></then></if>
	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">xflags<pos:position pos:line="144" pos:column="19"/></name> <operator pos:line="144" pos:column="20">&amp;<pos:position pos:line="144" pos:column="25"/></operator> <name pos:line="144" pos:column="22">XMIT_MOD_NSEC<pos:position pos:line="144" pos:column="35"/></name></expr>)<pos:position pos:line="144" pos:column="36"/></condition><then pos:line="144" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="17">modtime_nsec<pos:position pos:line="145" pos:column="29"/></name> <operator pos:line="145" pos:column="30">=<pos:position pos:line="145" pos:column="31"/></operator> <call><name pos:line="145" pos:column="32">read_varint<pos:position pos:line="145" pos:column="43"/></name><argument_list pos:line="145" pos:column="43">(<argument><expr><name pos:line="145" pos:column="44">f<pos:position pos:line="145" pos:column="45"/></name></expr></argument>)<pos:position pos:line="145" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="47"/></expr_stmt></block></then>
	<else pos:line="146" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="17">modtime_nsec<pos:position pos:line="147" pos:column="29"/></name> <operator pos:line="147" pos:column="30">=<pos:position pos:line="147" pos:column="31"/></operator> <literal type="number" pos:line="147" pos:column="32">0<pos:position pos:line="147" pos:column="33"/></literal></expr>;<pos:position pos:line="147" pos:column="34"/></expr_stmt></block></else></if>
	<if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><operator pos:line="148" pos:column="13">!<pos:position pos:line="148" pos:column="14"/></operator><operator pos:line="148" pos:column="14">(<pos:position pos:line="148" pos:column="15"/></operator><name pos:line="148" pos:column="15">xflags<pos:position pos:line="148" pos:column="21"/></name> <operator pos:line="148" pos:column="22">&amp;<pos:position pos:line="148" pos:column="27"/></operator> <name pos:line="148" pos:column="24">XMIT_SAME_MODE<pos:position pos:line="148" pos:column="38"/></name><operator pos:line="148" pos:column="38">)<pos:position pos:line="148" pos:column="39"/></operator></expr>)<pos:position pos:line="148" pos:column="40"/></condition><then pos:line="148" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><name pos:line="149" pos:column="17">mode<pos:position pos:line="149" pos:column="21"/></name> <operator pos:line="149" pos:column="22">=<pos:position pos:line="149" pos:column="23"/></operator> <call><name pos:line="149" pos:column="24">from_wire_mode<pos:position pos:line="149" pos:column="38"/></name><argument_list pos:line="149" pos:column="38">(<argument><expr><call><name pos:line="149" pos:column="39">read_int<pos:position pos:line="149" pos:column="47"/></name><argument_list pos:line="149" pos:column="47">(<argument><expr><name pos:line="149" pos:column="48">f<pos:position pos:line="149" pos:column="49"/></name></expr></argument>)<pos:position pos:line="149" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><name pos:line="151" pos:column="13">chmod_modes<pos:position pos:line="151" pos:column="24"/></name> <operator pos:line="151" pos:column="25">&amp;&amp;<pos:position pos:line="151" pos:column="35"/></operator> <operator pos:line="151" pos:column="28">!<pos:position pos:line="151" pos:column="29"/></operator><call><name pos:line="151" pos:column="29">S_ISLNK<pos:position pos:line="151" pos:column="36"/></name><argument_list pos:line="151" pos:column="36">(<argument><expr><name pos:line="151" pos:column="37">mode<pos:position pos:line="151" pos:column="41"/></name></expr></argument>)<pos:position pos:line="151" pos:column="42"/></argument_list></call> <operator pos:line="151" pos:column="43">&amp;&amp;<pos:position pos:line="151" pos:column="53"/></operator> <name pos:line="151" pos:column="46">mode<pos:position pos:line="151" pos:column="50"/></name></expr>)<pos:position pos:line="151" pos:column="51"/></condition><then pos:line="151" pos:column="51">
		<block type="pseudo"><expr_stmt><expr><name pos:line="152" pos:column="17">mode<pos:position pos:line="152" pos:column="21"/></name> <operator pos:line="152" pos:column="22">=<pos:position pos:line="152" pos:column="23"/></operator> <call><name pos:line="152" pos:column="24">tweak_mode<pos:position pos:line="152" pos:column="34"/></name><argument_list pos:line="152" pos:column="34">(<argument><expr><name pos:line="152" pos:column="35">mode<pos:position pos:line="152" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="152" pos:column="41">chmod_modes<pos:position pos:line="152" pos:column="52"/></name></expr></argument>)<pos:position pos:line="152" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="54"/></expr_stmt></block></then></if>

	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">preserve_uid<pos:position pos:line="154" pos:column="25"/></name> <operator pos:line="154" pos:column="26">&amp;&amp;<pos:position pos:line="154" pos:column="36"/></operator> <operator pos:line="154" pos:column="29">!<pos:position pos:line="154" pos:column="30"/></operator><operator pos:line="154" pos:column="30">(<pos:position pos:line="154" pos:column="31"/></operator><name pos:line="154" pos:column="31">xflags<pos:position pos:line="154" pos:column="37"/></name> <operator pos:line="154" pos:column="38">&amp;<pos:position pos:line="154" pos:column="43"/></operator> <name pos:line="154" pos:column="40">XMIT_SAME_UID<pos:position pos:line="154" pos:column="53"/></name><operator pos:line="154" pos:column="53">)<pos:position pos:line="154" pos:column="54"/></operator></expr>)<pos:position pos:line="154" pos:column="55"/></condition><then pos:line="154" pos:column="55"> <block pos:line="154" pos:column="56">{
		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><name pos:line="155" pos:column="21">protocol_version<pos:position pos:line="155" pos:column="37"/></name> <operator pos:line="155" pos:column="38">&lt;<pos:position pos:line="155" pos:column="42"/></operator> <literal type="number" pos:line="155" pos:column="40">30<pos:position pos:line="155" pos:column="42"/></literal></expr>)<pos:position pos:line="155" pos:column="43"/></condition><then pos:line="155" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="156" pos:column="25">uid<pos:position pos:line="156" pos:column="28"/></name> <operator pos:line="156" pos:column="29">=<pos:position pos:line="156" pos:column="30"/></operator> <operator pos:line="156" pos:column="31">(<pos:position pos:line="156" pos:column="32"/></operator><name pos:line="156" pos:column="32">uid_t<pos:position pos:line="156" pos:column="37"/></name><operator pos:line="156" pos:column="37">)<pos:position pos:line="156" pos:column="38"/></operator><call><name pos:line="156" pos:column="38">read_int<pos:position pos:line="156" pos:column="46"/></name><argument_list pos:line="156" pos:column="46">(<argument><expr><name pos:line="156" pos:column="47">f<pos:position pos:line="156" pos:column="48"/></name></expr></argument>)<pos:position pos:line="156" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="50"/></expr_stmt></block></then>
		<else pos:line="157" pos:column="17">else <block pos:line="157" pos:column="22">{
			<expr_stmt><expr><name pos:line="158" pos:column="25">uid<pos:position pos:line="158" pos:column="28"/></name> <operator pos:line="158" pos:column="29">=<pos:position pos:line="158" pos:column="30"/></operator> <operator pos:line="158" pos:column="31">(<pos:position pos:line="158" pos:column="32"/></operator><name pos:line="158" pos:column="32">uid_t<pos:position pos:line="158" pos:column="37"/></name><operator pos:line="158" pos:column="37">)<pos:position pos:line="158" pos:column="38"/></operator><call><name pos:line="158" pos:column="38">read_varint<pos:position pos:line="158" pos:column="49"/></name><argument_list pos:line="158" pos:column="49">(<argument><expr><name pos:line="158" pos:column="50">f<pos:position pos:line="158" pos:column="51"/></name></expr></argument>)<pos:position pos:line="158" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="53"/></expr_stmt>
			<if pos:line="159" pos:column="25">if <condition pos:line="159" pos:column="28">(<expr><name pos:line="159" pos:column="29">xflags<pos:position pos:line="159" pos:column="35"/></name> <operator pos:line="159" pos:column="36">&amp;<pos:position pos:line="159" pos:column="41"/></operator> <name pos:line="159" pos:column="38">XMIT_USER_NAME_FOLLOWS<pos:position pos:line="159" pos:column="60"/></name></expr>)<pos:position pos:line="159" pos:column="61"/></condition><then pos:line="159" pos:column="61">
				<block type="pseudo"><expr_stmt><expr><name pos:line="160" pos:column="33">uid<pos:position pos:line="160" pos:column="36"/></name> <operator pos:line="160" pos:column="37">=<pos:position pos:line="160" pos:column="38"/></operator> <call><name pos:line="160" pos:column="39">recv_user_name<pos:position pos:line="160" pos:column="53"/></name><argument_list pos:line="160" pos:column="53">(<argument><expr><name pos:line="160" pos:column="54">f<pos:position pos:line="160" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="160" pos:column="57">uid<pos:position pos:line="160" pos:column="60"/></name></expr></argument>)<pos:position pos:line="160" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="62"/></expr_stmt></block></then>
			<elseif pos:line="161" pos:column="25">else <if pos:line="161" pos:column="30">if <condition pos:line="161" pos:column="33">(<expr><name pos:line="161" pos:column="34">inc_recurse<pos:position pos:line="161" pos:column="45"/></name> <operator pos:line="161" pos:column="46">&amp;&amp;<pos:position pos:line="161" pos:column="56"/></operator> <name pos:line="161" pos:column="49">am_root<pos:position pos:line="161" pos:column="56"/></name> <operator pos:line="161" pos:column="57">&amp;&amp;<pos:position pos:line="161" pos:column="67"/></operator> <operator pos:line="161" pos:column="60">(<pos:position pos:line="161" pos:column="61"/></operator><operator pos:line="161" pos:column="61">!<pos:position pos:line="161" pos:column="62"/></operator><name pos:line="161" pos:column="62">numeric_ids<pos:position pos:line="161" pos:column="73"/></name> <operator pos:line="161" pos:column="74">||<pos:position pos:line="161" pos:column="76"/></operator> <name pos:line="161" pos:column="77">usermap<pos:position pos:line="161" pos:column="84"/></name><operator pos:line="161" pos:column="84">)<pos:position pos:line="161" pos:column="85"/></operator></expr>)<pos:position pos:line="161" pos:column="86"/></condition><then pos:line="161" pos:column="86">
				<block type="pseudo"><expr_stmt><expr><name pos:line="162" pos:column="33">uid<pos:position pos:line="162" pos:column="36"/></name> <operator pos:line="162" pos:column="37">=<pos:position pos:line="162" pos:column="38"/></operator> <call><name pos:line="162" pos:column="39">match_uid<pos:position pos:line="162" pos:column="48"/></name><argument_list pos:line="162" pos:column="48">(<argument><expr><name pos:line="162" pos:column="49">uid<pos:position pos:line="162" pos:column="52"/></name></expr></argument>)<pos:position pos:line="162" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="54"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="163" pos:column="18"/></block></else></if>
	}<pos:position pos:line="164" pos:column="10"/></block></then></if>
	<if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name pos:line="165" pos:column="13">preserve_gid<pos:position pos:line="165" pos:column="25"/></name> <operator pos:line="165" pos:column="26">&amp;&amp;<pos:position pos:line="165" pos:column="36"/></operator> <operator pos:line="165" pos:column="29">!<pos:position pos:line="165" pos:column="30"/></operator><operator pos:line="165" pos:column="30">(<pos:position pos:line="165" pos:column="31"/></operator><name pos:line="165" pos:column="31">xflags<pos:position pos:line="165" pos:column="37"/></name> <operator pos:line="165" pos:column="38">&amp;<pos:position pos:line="165" pos:column="43"/></operator> <name pos:line="165" pos:column="40">XMIT_SAME_GID<pos:position pos:line="165" pos:column="53"/></name><operator pos:line="165" pos:column="53">)<pos:position pos:line="165" pos:column="54"/></operator></expr>)<pos:position pos:line="165" pos:column="55"/></condition><then pos:line="165" pos:column="55"> <block pos:line="165" pos:column="56">{
		<if pos:line="166" pos:column="17">if <condition pos:line="166" pos:column="20">(<expr><name pos:line="166" pos:column="21">protocol_version<pos:position pos:line="166" pos:column="37"/></name> <operator pos:line="166" pos:column="38">&lt;<pos:position pos:line="166" pos:column="42"/></operator> <literal type="number" pos:line="166" pos:column="40">30<pos:position pos:line="166" pos:column="42"/></literal></expr>)<pos:position pos:line="166" pos:column="43"/></condition><then pos:line="166" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="167" pos:column="25">gid<pos:position pos:line="167" pos:column="28"/></name> <operator pos:line="167" pos:column="29">=<pos:position pos:line="167" pos:column="30"/></operator> <operator pos:line="167" pos:column="31">(<pos:position pos:line="167" pos:column="32"/></operator><name pos:line="167" pos:column="32">gid_t<pos:position pos:line="167" pos:column="37"/></name><operator pos:line="167" pos:column="37">)<pos:position pos:line="167" pos:column="38"/></operator><call><name pos:line="167" pos:column="38">read_int<pos:position pos:line="167" pos:column="46"/></name><argument_list pos:line="167" pos:column="46">(<argument><expr><name pos:line="167" pos:column="47">f<pos:position pos:line="167" pos:column="48"/></name></expr></argument>)<pos:position pos:line="167" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="50"/></expr_stmt></block></then>
		<else pos:line="168" pos:column="17">else <block pos:line="168" pos:column="22">{
			<expr_stmt><expr><name pos:line="169" pos:column="25">gid<pos:position pos:line="169" pos:column="28"/></name> <operator pos:line="169" pos:column="29">=<pos:position pos:line="169" pos:column="30"/></operator> <operator pos:line="169" pos:column="31">(<pos:position pos:line="169" pos:column="32"/></operator><name pos:line="169" pos:column="32">gid_t<pos:position pos:line="169" pos:column="37"/></name><operator pos:line="169" pos:column="37">)<pos:position pos:line="169" pos:column="38"/></operator><call><name pos:line="169" pos:column="38">read_varint<pos:position pos:line="169" pos:column="49"/></name><argument_list pos:line="169" pos:column="49">(<argument><expr><name pos:line="169" pos:column="50">f<pos:position pos:line="169" pos:column="51"/></name></expr></argument>)<pos:position pos:line="169" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="170" pos:column="25">gid_flags<pos:position pos:line="170" pos:column="34"/></name> <operator pos:line="170" pos:column="35">=<pos:position pos:line="170" pos:column="36"/></operator> <literal type="number" pos:line="170" pos:column="37">0<pos:position pos:line="170" pos:column="38"/></literal></expr>;<pos:position pos:line="170" pos:column="39"/></expr_stmt>
			<if pos:line="171" pos:column="25">if <condition pos:line="171" pos:column="28">(<expr><name pos:line="171" pos:column="29">xflags<pos:position pos:line="171" pos:column="35"/></name> <operator pos:line="171" pos:column="36">&amp;<pos:position pos:line="171" pos:column="41"/></operator> <name pos:line="171" pos:column="38">XMIT_GROUP_NAME_FOLLOWS<pos:position pos:line="171" pos:column="61"/></name></expr>)<pos:position pos:line="171" pos:column="62"/></condition><then pos:line="171" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="33">gid<pos:position pos:line="172" pos:column="36"/></name> <operator pos:line="172" pos:column="37">=<pos:position pos:line="172" pos:column="38"/></operator> <call><name pos:line="172" pos:column="39">recv_group_name<pos:position pos:line="172" pos:column="54"/></name><argument_list pos:line="172" pos:column="54">(<argument><expr><name pos:line="172" pos:column="55">f<pos:position pos:line="172" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="58">gid<pos:position pos:line="172" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="172" pos:column="63">&amp;<pos:position pos:line="172" pos:column="68"/></operator><name pos:line="172" pos:column="64">gid_flags<pos:position pos:line="172" pos:column="73"/></name></expr></argument>)<pos:position pos:line="172" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="75"/></expr_stmt></block></then>
			<elseif pos:line="173" pos:column="25">else <if pos:line="173" pos:column="30">if <condition pos:line="173" pos:column="33">(<expr><name pos:line="173" pos:column="34">inc_recurse<pos:position pos:line="173" pos:column="45"/></name> <operator pos:line="173" pos:column="46">&amp;&amp;<pos:position pos:line="173" pos:column="56"/></operator> <operator pos:line="173" pos:column="49">(<pos:position pos:line="173" pos:column="50"/></operator><operator pos:line="173" pos:column="50">!<pos:position pos:line="173" pos:column="51"/></operator><name pos:line="173" pos:column="51">am_root<pos:position pos:line="173" pos:column="58"/></name> <operator pos:line="173" pos:column="59">||<pos:position pos:line="173" pos:column="61"/></operator> <operator pos:line="173" pos:column="62">!<pos:position pos:line="173" pos:column="63"/></operator><name pos:line="173" pos:column="63">numeric_ids<pos:position pos:line="173" pos:column="74"/></name> <operator pos:line="173" pos:column="75">||<pos:position pos:line="173" pos:column="77"/></operator> <name pos:line="173" pos:column="78">groupmap<pos:position pos:line="173" pos:column="86"/></name><operator pos:line="173" pos:column="86">)<pos:position pos:line="173" pos:column="87"/></operator></expr>)<pos:position pos:line="173" pos:column="88"/></condition><then pos:line="173" pos:column="88">
				<block type="pseudo"><expr_stmt><expr><name pos:line="174" pos:column="33">gid<pos:position pos:line="174" pos:column="36"/></name> <operator pos:line="174" pos:column="37">=<pos:position pos:line="174" pos:column="38"/></operator> <call><name pos:line="174" pos:column="39">match_gid<pos:position pos:line="174" pos:column="48"/></name><argument_list pos:line="174" pos:column="48">(<argument><expr><name pos:line="174" pos:column="49">gid<pos:position pos:line="174" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="174" pos:column="54">&amp;<pos:position pos:line="174" pos:column="59"/></operator><name pos:line="174" pos:column="55">gid_flags<pos:position pos:line="174" pos:column="64"/></name></expr></argument>)<pos:position pos:line="174" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="66"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="175" pos:column="18"/></block></else></if>
	}<pos:position pos:line="176" pos:column="10"/></block></then></if>

	<if pos:line="178" pos:column="9">if <condition pos:line="178" pos:column="12">(<expr><operator pos:line="178" pos:column="13">(<pos:position pos:line="178" pos:column="14"/></operator><name pos:line="178" pos:column="14">preserve_devices<pos:position pos:line="178" pos:column="30"/></name> <operator pos:line="178" pos:column="31">&amp;&amp;<pos:position pos:line="178" pos:column="41"/></operator> <call><name pos:line="178" pos:column="34">IS_DEVICE<pos:position pos:line="178" pos:column="43"/></name><argument_list pos:line="178" pos:column="43">(<argument><expr><name pos:line="178" pos:column="44">mode<pos:position pos:line="178" pos:column="48"/></name></expr></argument>)<pos:position pos:line="178" pos:column="49"/></argument_list></call><operator pos:line="178" pos:column="49">)<pos:position pos:line="178" pos:column="50"/></operator>
	 <operator pos:line="179" pos:column="10">||<pos:position pos:line="179" pos:column="12"/></operator> <operator pos:line="179" pos:column="13">(<pos:position pos:line="179" pos:column="14"/></operator><name pos:line="179" pos:column="14">preserve_specials<pos:position pos:line="179" pos:column="31"/></name> <operator pos:line="179" pos:column="32">&amp;&amp;<pos:position pos:line="179" pos:column="42"/></operator> <call><name pos:line="179" pos:column="35">IS_SPECIAL<pos:position pos:line="179" pos:column="45"/></name><argument_list pos:line="179" pos:column="45">(<argument><expr><name pos:line="179" pos:column="46">mode<pos:position pos:line="179" pos:column="50"/></name></expr></argument>)<pos:position pos:line="179" pos:column="51"/></argument_list></call> <operator pos:line="179" pos:column="52">&amp;&amp;<pos:position pos:line="179" pos:column="62"/></operator> <name pos:line="179" pos:column="55">protocol_version<pos:position pos:line="179" pos:column="71"/></name> <operator pos:line="179" pos:column="72">&lt;<pos:position pos:line="179" pos:column="76"/></operator> <literal type="number" pos:line="179" pos:column="74">31<pos:position pos:line="179" pos:column="76"/></literal><operator pos:line="179" pos:column="76">)<pos:position pos:line="179" pos:column="77"/></operator></expr>)<pos:position pos:line="179" pos:column="78"/></condition><then pos:line="179" pos:column="78"> <block pos:line="179" pos:column="79">{
		<if pos:line="180" pos:column="17">if <condition pos:line="180" pos:column="20">(<expr><name pos:line="180" pos:column="21">protocol_version<pos:position pos:line="180" pos:column="37"/></name> <operator pos:line="180" pos:column="38">&lt;<pos:position pos:line="180" pos:column="42"/></operator> <literal type="number" pos:line="180" pos:column="40">28<pos:position pos:line="180" pos:column="42"/></literal></expr>)<pos:position pos:line="180" pos:column="43"/></condition><then pos:line="180" pos:column="43"> <block pos:line="180" pos:column="44">{
			<if pos:line="181" pos:column="25">if <condition pos:line="181" pos:column="28">(<expr><operator pos:line="181" pos:column="29">!<pos:position pos:line="181" pos:column="30"/></operator><operator pos:line="181" pos:column="30">(<pos:position pos:line="181" pos:column="31"/></operator><name pos:line="181" pos:column="31">xflags<pos:position pos:line="181" pos:column="37"/></name> <operator pos:line="181" pos:column="38">&amp;<pos:position pos:line="181" pos:column="43"/></operator> <name pos:line="181" pos:column="40">XMIT_SAME_RDEV_pre28<pos:position pos:line="181" pos:column="60"/></name><operator pos:line="181" pos:column="60">)<pos:position pos:line="181" pos:column="61"/></operator></expr>)<pos:position pos:line="181" pos:column="62"/></condition><then pos:line="181" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="182" pos:column="33">rdev<pos:position pos:line="182" pos:column="37"/></name> <operator pos:line="182" pos:column="38">=<pos:position pos:line="182" pos:column="39"/></operator> <operator pos:line="182" pos:column="40">(<pos:position pos:line="182" pos:column="41"/></operator><name pos:line="182" pos:column="41">dev_t<pos:position pos:line="182" pos:column="46"/></name><operator pos:line="182" pos:column="46">)<pos:position pos:line="182" pos:column="47"/></operator><call><name pos:line="182" pos:column="47">read_int<pos:position pos:line="182" pos:column="55"/></name><argument_list pos:line="182" pos:column="55">(<argument><expr><name pos:line="182" pos:column="56">f<pos:position pos:line="182" pos:column="57"/></name></expr></argument>)<pos:position pos:line="182" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="59"/></expr_stmt></block></then></if>
		}<pos:position pos:line="183" pos:column="18"/></block></then> <else pos:line="183" pos:column="19">else <block pos:line="183" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="184" pos:column="25">uint32<pos:position pos:line="184" pos:column="31"/></name></type> <name pos:line="184" pos:column="32">rdev_minor<pos:position pos:line="184" pos:column="42"/></name></decl>;<pos:position pos:line="184" pos:column="43"/></decl_stmt>
			<if pos:line="185" pos:column="25">if <condition pos:line="185" pos:column="28">(<expr><operator pos:line="185" pos:column="29">!<pos:position pos:line="185" pos:column="30"/></operator><operator pos:line="185" pos:column="30">(<pos:position pos:line="185" pos:column="31"/></operator><name pos:line="185" pos:column="31">xflags<pos:position pos:line="185" pos:column="37"/></name> <operator pos:line="185" pos:column="38">&amp;<pos:position pos:line="185" pos:column="43"/></operator> <name pos:line="185" pos:column="40">XMIT_SAME_RDEV_MAJOR<pos:position pos:line="185" pos:column="60"/></name><operator pos:line="185" pos:column="60">)<pos:position pos:line="185" pos:column="61"/></operator></expr>)<pos:position pos:line="185" pos:column="62"/></condition><then pos:line="185" pos:column="62">
				<block type="pseudo"><expr_stmt><expr><name pos:line="186" pos:column="33">rdev_major<pos:position pos:line="186" pos:column="43"/></name> <operator pos:line="186" pos:column="44">=<pos:position pos:line="186" pos:column="45"/></operator> <call><name pos:line="186" pos:column="46">read_varint30<pos:position pos:line="186" pos:column="59"/></name><argument_list pos:line="186" pos:column="59">(<argument><expr><name pos:line="186" pos:column="60">f<pos:position pos:line="186" pos:column="61"/></name></expr></argument>)<pos:position pos:line="186" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="63"/></expr_stmt></block></then></if>
			<if pos:line="187" pos:column="25">if <condition pos:line="187" pos:column="28">(<expr><name pos:line="187" pos:column="29">protocol_version<pos:position pos:line="187" pos:column="45"/></name> <operator pos:line="187" pos:column="46">&gt;=<pos:position pos:line="187" pos:column="51"/></operator> <literal type="number" pos:line="187" pos:column="49">30<pos:position pos:line="187" pos:column="51"/></literal></expr>)<pos:position pos:line="187" pos:column="52"/></condition><then pos:line="187" pos:column="52">
				<block type="pseudo"><expr_stmt><expr><name pos:line="188" pos:column="33">rdev_minor<pos:position pos:line="188" pos:column="43"/></name> <operator pos:line="188" pos:column="44">=<pos:position pos:line="188" pos:column="45"/></operator> <call><name pos:line="188" pos:column="46">read_varint<pos:position pos:line="188" pos:column="57"/></name><argument_list pos:line="188" pos:column="57">(<argument><expr><name pos:line="188" pos:column="58">f<pos:position pos:line="188" pos:column="59"/></name></expr></argument>)<pos:position pos:line="188" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="61"/></expr_stmt></block></then>
			<elseif pos:line="189" pos:column="25">else <if pos:line="189" pos:column="30">if <condition pos:line="189" pos:column="33">(<expr><name pos:line="189" pos:column="34">xflags<pos:position pos:line="189" pos:column="40"/></name> <operator pos:line="189" pos:column="41">&amp;<pos:position pos:line="189" pos:column="46"/></operator> <name pos:line="189" pos:column="43">XMIT_RDEV_MINOR_8_pre30<pos:position pos:line="189" pos:column="66"/></name></expr>)<pos:position pos:line="189" pos:column="67"/></condition><then pos:line="189" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="190" pos:column="33">rdev_minor<pos:position pos:line="190" pos:column="43"/></name> <operator pos:line="190" pos:column="44">=<pos:position pos:line="190" pos:column="45"/></operator> <call><name pos:line="190" pos:column="46">read_byte<pos:position pos:line="190" pos:column="55"/></name><argument_list pos:line="190" pos:column="55">(<argument><expr><name pos:line="190" pos:column="56">f<pos:position pos:line="190" pos:column="57"/></name></expr></argument>)<pos:position pos:line="190" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="190" pos:column="59"/></expr_stmt></block></then></if></elseif>
			<else pos:line="191" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="192" pos:column="33">rdev_minor<pos:position pos:line="192" pos:column="43"/></name> <operator pos:line="192" pos:column="44">=<pos:position pos:line="192" pos:column="45"/></operator> <call><name pos:line="192" pos:column="46">read_int<pos:position pos:line="192" pos:column="54"/></name><argument_list pos:line="192" pos:column="54">(<argument><expr><name pos:line="192" pos:column="55">f<pos:position pos:line="192" pos:column="56"/></name></expr></argument>)<pos:position pos:line="192" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="58"/></expr_stmt></block></else></if>
			<expr_stmt><expr><name pos:line="193" pos:column="25">rdev<pos:position pos:line="193" pos:column="29"/></name> <operator pos:line="193" pos:column="30">=<pos:position pos:line="193" pos:column="31"/></operator> <call><name pos:line="193" pos:column="32">MAKEDEV<pos:position pos:line="193" pos:column="39"/></name><argument_list pos:line="193" pos:column="39">(<argument><expr><name pos:line="193" pos:column="40">rdev_major<pos:position pos:line="193" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="52">rdev_minor<pos:position pos:line="193" pos:column="62"/></name></expr></argument>)<pos:position pos:line="193" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="194" pos:column="18"/></block></else></if>
		<if pos:line="195" pos:column="17">if <condition pos:line="195" pos:column="20">(<expr><call><name pos:line="195" pos:column="21">IS_DEVICE<pos:position pos:line="195" pos:column="30"/></name><argument_list pos:line="195" pos:column="30">(<argument><expr><name pos:line="195" pos:column="31">mode<pos:position pos:line="195" pos:column="35"/></name></expr></argument>)<pos:position pos:line="195" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="195" pos:column="37"/></condition><then pos:line="195" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="196" pos:column="25">extra_len<pos:position pos:line="196" pos:column="34"/></name> <operator pos:line="196" pos:column="35">+=<pos:position pos:line="196" pos:column="37"/></operator> <name pos:line="196" pos:column="38">DEV_EXTRA_CNT<pos:position pos:line="196" pos:column="51"/></name> <operator pos:line="196" pos:column="52">*<pos:position pos:line="196" pos:column="53"/></operator> <name pos:line="196" pos:column="54">EXTRA_LEN<pos:position pos:line="196" pos:column="63"/></name></expr>;<pos:position pos:line="196" pos:column="64"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="197" pos:column="17">file_length<pos:position pos:line="197" pos:column="28"/></name> <operator pos:line="197" pos:column="29">=<pos:position pos:line="197" pos:column="30"/></operator> <literal type="number" pos:line="197" pos:column="31">0<pos:position pos:line="197" pos:column="32"/></literal></expr>;<pos:position pos:line="197" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="198" pos:column="10"/></block></then> <elseif pos:line="198" pos:column="11">else <if pos:line="198" pos:column="16">if <condition pos:line="198" pos:column="19">(<expr><name pos:line="198" pos:column="20">protocol_version<pos:position pos:line="198" pos:column="36"/></name> <operator pos:line="198" pos:column="37">&lt;<pos:position pos:line="198" pos:column="41"/></operator> <literal type="number" pos:line="198" pos:column="39">28<pos:position pos:line="198" pos:column="41"/></literal></expr>)<pos:position pos:line="198" pos:column="42"/></condition><then pos:line="198" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><name pos:line="199" pos:column="17">rdev<pos:position pos:line="199" pos:column="21"/></name> <operator pos:line="199" pos:column="22">=<pos:position pos:line="199" pos:column="23"/></operator> <call><name pos:line="199" pos:column="24">MAKEDEV<pos:position pos:line="199" pos:column="31"/></name><argument_list pos:line="199" pos:column="31">(<argument><expr><literal type="number" pos:line="199" pos:column="32">0<pos:position pos:line="199" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="199" pos:column="35">0<pos:position pos:line="199" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="38"/></expr_stmt></block></then></if></elseif></if>

<cpp:ifdef pos:line="201" pos:column="1">#<cpp:directive pos:line="201" pos:column="2">ifdef<pos:position pos:line="201" pos:column="7"/></cpp:directive> <name pos:line="201" pos:column="8">SUPPORT_LINKS<pos:position pos:line="201" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="202" pos:column="9">if <condition pos:line="202" pos:column="12">(<expr><name pos:line="202" pos:column="13">preserve_links<pos:position pos:line="202" pos:column="27"/></name> <operator pos:line="202" pos:column="28">&amp;&amp;<pos:position pos:line="202" pos:column="38"/></operator> <call><name pos:line="202" pos:column="31">S_ISLNK<pos:position pos:line="202" pos:column="38"/></name><argument_list pos:line="202" pos:column="38">(<argument><expr><name pos:line="202" pos:column="39">mode<pos:position pos:line="202" pos:column="43"/></name></expr></argument>)<pos:position pos:line="202" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="202" pos:column="45"/></condition><then pos:line="202" pos:column="45"> <block pos:line="202" pos:column="46">{
		<expr_stmt><expr><name pos:line="203" pos:column="17">linkname_len<pos:position pos:line="203" pos:column="29"/></name> <operator pos:line="203" pos:column="30">=<pos:position pos:line="203" pos:column="31"/></operator> <call><name pos:line="203" pos:column="32">read_varint30<pos:position pos:line="203" pos:column="45"/></name><argument_list pos:line="203" pos:column="45">(<argument><expr><name pos:line="203" pos:column="46">f<pos:position pos:line="203" pos:column="47"/></name></expr></argument>)<pos:position pos:line="203" pos:column="48"/></argument_list></call> <operator pos:line="203" pos:column="49">+<pos:position pos:line="203" pos:column="50"/></operator> <literal type="number" pos:line="203" pos:column="51">1<pos:position pos:line="203" pos:column="52"/></literal></expr>;<pos:position pos:line="203" pos:column="53"/></expr_stmt> <comment type="block" pos:line="203" pos:column="54">/* count the '\0' */</comment>
		<if pos:line="204" pos:column="17">if <condition pos:line="204" pos:column="20">(<expr><name pos:line="204" pos:column="21">linkname_len<pos:position pos:line="204" pos:column="33"/></name> <operator pos:line="204" pos:column="34">&lt;=<pos:position pos:line="204" pos:column="39"/></operator> <literal type="number" pos:line="204" pos:column="37">0<pos:position pos:line="204" pos:column="38"/></literal> <operator pos:line="204" pos:column="39">||<pos:position pos:line="204" pos:column="41"/></operator> <name pos:line="204" pos:column="42">linkname_len<pos:position pos:line="204" pos:column="54"/></name> <operator pos:line="204" pos:column="55">&gt;<pos:position pos:line="204" pos:column="59"/></operator> <name pos:line="204" pos:column="57">MAXPATHLEN<pos:position pos:line="204" pos:column="67"/></name></expr>)<pos:position pos:line="204" pos:column="68"/></condition><then pos:line="204" pos:column="68"> <block pos:line="204" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="205" pos:column="25">rprintf<pos:position pos:line="205" pos:column="32"/></name><argument_list pos:line="205" pos:column="32">(<argument><expr><name pos:line="205" pos:column="33">FERROR<pos:position pos:line="205" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="41">"overflow: linkname_len=%d\n"<pos:position pos:line="205" pos:column="70"/></literal></expr></argument>,
				<argument><expr><name pos:line="206" pos:column="33">linkname_len<pos:position pos:line="206" pos:column="45"/></name> <operator pos:line="206" pos:column="46">-<pos:position pos:line="206" pos:column="47"/></operator> <literal type="number" pos:line="206" pos:column="48">1<pos:position pos:line="206" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="207" pos:column="25">overflow_exit<pos:position pos:line="207" pos:column="38"/></name><argument_list pos:line="207" pos:column="38">(<argument><expr><literal type="string" pos:line="207" pos:column="39">"recv_file_entry"<pos:position pos:line="207" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="58"/></expr_stmt>
		}<pos:position pos:line="208" pos:column="18"/></block></then></if>
<cpp:ifdef pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">ifdef<pos:position pos:line="209" pos:column="7"/></cpp:directive> <name pos:line="209" pos:column="8">ICONV_OPTION<pos:position pos:line="209" pos:column="20"/></name></cpp:ifdef>
		<comment type="block" pos:line="210" pos:column="17">/* We don't know how much extra room we need to convert
		 * the as-yet-unread symlink data, so let's hope that a
		 * double-size buffer is plenty. */</comment>
		<if pos:line="213" pos:column="17">if <condition pos:line="213" pos:column="20">(<expr><name pos:line="213" pos:column="21">sender_symlink_iconv<pos:position pos:line="213" pos:column="41"/></name></expr>)<pos:position pos:line="213" pos:column="42"/></condition><then pos:line="213" pos:column="42">
			<block type="pseudo"><expr_stmt><expr><name pos:line="214" pos:column="25">linkname_len<pos:position pos:line="214" pos:column="37"/></name> <operator pos:line="214" pos:column="38">*=<pos:position pos:line="214" pos:column="40"/></operator> <literal type="number" pos:line="214" pos:column="41">2<pos:position pos:line="214" pos:column="42"/></literal></expr>;<pos:position pos:line="214" pos:column="43"/></expr_stmt></block></then></if>
<cpp:endif pos:line="215" pos:column="1">#<cpp:directive pos:line="215" pos:column="2">endif<pos:position pos:line="215" pos:column="7"/></cpp:directive></cpp:endif>
		<if pos:line="216" pos:column="17">if <condition pos:line="216" pos:column="20">(<expr><name pos:line="216" pos:column="21">munge_symlinks<pos:position pos:line="216" pos:column="35"/></name></expr>)<pos:position pos:line="216" pos:column="36"/></condition><then pos:line="216" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="217" pos:column="25">linkname_len<pos:position pos:line="217" pos:column="37"/></name> <operator pos:line="217" pos:column="38">+=<pos:position pos:line="217" pos:column="40"/></operator> <name pos:line="217" pos:column="41">SYMLINK_PREFIX_LEN<pos:position pos:line="217" pos:column="59"/></name></expr>;<pos:position pos:line="217" pos:column="60"/></expr_stmt></block></then></if>
	}<pos:position pos:line="218" pos:column="10"/></block></then>
	<else pos:line="219" pos:column="9">else
<cpp:endif pos:line="220" pos:column="1">#<cpp:directive pos:line="220" pos:column="2">endif<pos:position pos:line="220" pos:column="7"/></cpp:directive></cpp:endif>
		<block type="pseudo"><expr_stmt><expr><name pos:line="221" pos:column="17">linkname_len<pos:position pos:line="221" pos:column="29"/></name> <operator pos:line="221" pos:column="30">=<pos:position pos:line="221" pos:column="31"/></operator> <literal type="number" pos:line="221" pos:column="32">0<pos:position pos:line="221" pos:column="33"/></literal></expr>;<pos:position pos:line="221" pos:column="34"/></expr_stmt></block></else></if>

<cpp:ifdef pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">ifdef<pos:position pos:line="223" pos:column="7"/></cpp:directive> <name pos:line="223" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="223" pos:column="26"/></name></cpp:ifdef>
  <label><name pos:line="224" pos:column="3">create_object<pos:position pos:line="224" pos:column="16"/></name>:<pos:position pos:line="224" pos:column="17"/></label>
	<if pos:line="225" pos:column="9">if <condition pos:line="225" pos:column="12">(<expr><name pos:line="225" pos:column="13">preserve_hard_links<pos:position pos:line="225" pos:column="32"/></name></expr>)<pos:position pos:line="225" pos:column="33"/></condition><then pos:line="225" pos:column="33"> <block pos:line="225" pos:column="34">{
		<if pos:line="226" pos:column="17">if <condition pos:line="226" pos:column="20">(<expr><name pos:line="226" pos:column="21">protocol_version<pos:position pos:line="226" pos:column="37"/></name> <operator pos:line="226" pos:column="38">&lt;<pos:position pos:line="226" pos:column="42"/></operator> <literal type="number" pos:line="226" pos:column="40">28<pos:position pos:line="226" pos:column="42"/></literal> <operator pos:line="226" pos:column="43">&amp;&amp;<pos:position pos:line="226" pos:column="53"/></operator> <call><name pos:line="226" pos:column="46">S_ISREG<pos:position pos:line="226" pos:column="53"/></name><argument_list pos:line="226" pos:column="53">(<argument><expr><name pos:line="226" pos:column="54">mode<pos:position pos:line="226" pos:column="58"/></name></expr></argument>)<pos:position pos:line="226" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="226" pos:column="60"/></condition><then pos:line="226" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name pos:line="227" pos:column="25">xflags<pos:position pos:line="227" pos:column="31"/></name> <operator pos:line="227" pos:column="32">|=<pos:position pos:line="227" pos:column="34"/></operator> <name pos:line="227" pos:column="35">XMIT_HLINKED<pos:position pos:line="227" pos:column="47"/></name></expr>;<pos:position pos:line="227" pos:column="48"/></expr_stmt></block></then></if>
		<if pos:line="228" pos:column="17">if <condition pos:line="228" pos:column="20">(<expr><name pos:line="228" pos:column="21">xflags<pos:position pos:line="228" pos:column="27"/></name> <operator pos:line="228" pos:column="28">&amp;<pos:position pos:line="228" pos:column="33"/></operator> <name pos:line="228" pos:column="30">XMIT_HLINKED<pos:position pos:line="228" pos:column="42"/></name></expr>)<pos:position pos:line="228" pos:column="43"/></condition><then pos:line="228" pos:column="43">
			<block type="pseudo"><expr_stmt><expr><name pos:line="229" pos:column="25">extra_len<pos:position pos:line="229" pos:column="34"/></name> <operator pos:line="229" pos:column="35">+=<pos:position pos:line="229" pos:column="37"/></operator> <operator pos:line="229" pos:column="38">(<pos:position pos:line="229" pos:column="39"/></operator><name pos:line="229" pos:column="39">inc_recurse<pos:position pos:line="229" pos:column="50"/></name><operator pos:line="229" pos:column="50">+<pos:position pos:line="229" pos:column="51"/></operator><literal type="number" pos:line="229" pos:column="51">1<pos:position pos:line="229" pos:column="52"/></literal><operator pos:line="229" pos:column="52">)<pos:position pos:line="229" pos:column="53"/></operator> <operator pos:line="229" pos:column="54">*<pos:position pos:line="229" pos:column="55"/></operator> <name pos:line="229" pos:column="56">EXTRA_LEN<pos:position pos:line="229" pos:column="65"/></name></expr>;<pos:position pos:line="229" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="230" pos:column="10"/></block></then></if>
<cpp:endif pos:line="231" pos:column="1">#<cpp:directive pos:line="231" pos:column="2">endif<pos:position pos:line="231" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">ifdef<pos:position pos:line="233" pos:column="7"/></cpp:directive> <name pos:line="233" pos:column="8">SUPPORT_ACLS<pos:position pos:line="233" pos:column="20"/></name></cpp:ifdef>
	<comment type="block" pos:line="234" pos:column="9">/* Directories need an extra int32 for the default ACL. */</comment>
	<if pos:line="235" pos:column="9">if <condition pos:line="235" pos:column="12">(<expr><name pos:line="235" pos:column="13">preserve_acls<pos:position pos:line="235" pos:column="26"/></name> <operator pos:line="235" pos:column="27">&amp;&amp;<pos:position pos:line="235" pos:column="37"/></operator> <call><name pos:line="235" pos:column="30">S_ISDIR<pos:position pos:line="235" pos:column="37"/></name><argument_list pos:line="235" pos:column="37">(<argument><expr><name pos:line="235" pos:column="38">mode<pos:position pos:line="235" pos:column="42"/></name></expr></argument>)<pos:position pos:line="235" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="235" pos:column="44"/></condition><then pos:line="235" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="236" pos:column="17">extra_len<pos:position pos:line="236" pos:column="26"/></name> <operator pos:line="236" pos:column="27">+=<pos:position pos:line="236" pos:column="29"/></operator> <name pos:line="236" pos:column="30">EXTRA_LEN<pos:position pos:line="236" pos:column="39"/></name></expr>;<pos:position pos:line="236" pos:column="40"/></expr_stmt></block></then></if>
<cpp:endif pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">endif<pos:position pos:line="237" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="239" pos:column="9">if <condition pos:line="239" pos:column="12">(<expr><name pos:line="239" pos:column="13">always_checksum<pos:position pos:line="239" pos:column="28"/></name> <operator pos:line="239" pos:column="29">&amp;&amp;<pos:position pos:line="239" pos:column="39"/></operator> <call><name pos:line="239" pos:column="32">S_ISREG<pos:position pos:line="239" pos:column="39"/></name><argument_list pos:line="239" pos:column="39">(<argument><expr><name pos:line="239" pos:column="40">mode<pos:position pos:line="239" pos:column="44"/></name></expr></argument>)<pos:position pos:line="239" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="239" pos:column="46"/></condition><then pos:line="239" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="240" pos:column="17">extra_len<pos:position pos:line="240" pos:column="26"/></name> <operator pos:line="240" pos:column="27">+=<pos:position pos:line="240" pos:column="29"/></operator> <name pos:line="240" pos:column="30">SUM_EXTRA_CNT<pos:position pos:line="240" pos:column="43"/></name> <operator pos:line="240" pos:column="44">*<pos:position pos:line="240" pos:column="45"/></operator> <name pos:line="240" pos:column="46">EXTRA_LEN<pos:position pos:line="240" pos:column="55"/></name></expr>;<pos:position pos:line="240" pos:column="56"/></expr_stmt></block></then></if>

<cpp:if pos:line="242" pos:column="1">#<cpp:directive pos:line="242" pos:column="2">if<pos:position pos:line="242" pos:column="4"/></cpp:directive> <expr><name pos:line="242" pos:column="5">SIZEOF_INT64<pos:position pos:line="242" pos:column="17"/></name> <operator pos:line="242" pos:column="18">&gt;=<pos:position pos:line="242" pos:column="23"/></operator> <literal type="number" pos:line="242" pos:column="21">8<pos:position pos:line="242" pos:column="22"/></literal></expr></cpp:if>
	<if pos:line="243" pos:column="9">if <condition pos:line="243" pos:column="12">(<expr><name pos:line="243" pos:column="13">file_length<pos:position pos:line="243" pos:column="24"/></name> <operator pos:line="243" pos:column="25">&gt;<pos:position pos:line="243" pos:column="29"/></operator> <literal type="number" pos:line="243" pos:column="27">0xFFFFFFFFu<pos:position pos:line="243" pos:column="38"/></literal> <operator pos:line="243" pos:column="39">&amp;&amp;<pos:position pos:line="243" pos:column="49"/></operator> <call><name pos:line="243" pos:column="42">S_ISREG<pos:position pos:line="243" pos:column="49"/></name><argument_list pos:line="243" pos:column="49">(<argument><expr><name pos:line="243" pos:column="50">mode<pos:position pos:line="243" pos:column="54"/></name></expr></argument>)<pos:position pos:line="243" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="243" pos:column="56"/></condition><then pos:line="243" pos:column="56">
		<block type="pseudo"><expr_stmt><expr><name pos:line="244" pos:column="17">extra_len<pos:position pos:line="244" pos:column="26"/></name> <operator pos:line="244" pos:column="27">+=<pos:position pos:line="244" pos:column="29"/></operator> <name pos:line="244" pos:column="30">EXTRA_LEN<pos:position pos:line="244" pos:column="39"/></name></expr>;<pos:position pos:line="244" pos:column="40"/></expr_stmt></block></then></if>
<cpp:endif pos:line="245" pos:column="1">#<cpp:directive pos:line="245" pos:column="2">endif<pos:position pos:line="245" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">ifdef<pos:position pos:line="246" pos:column="7"/></cpp:directive> <name pos:line="246" pos:column="8">HAVE_UTIMENSAT<pos:position pos:line="246" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="247" pos:column="9">if <condition pos:line="247" pos:column="12">(<expr><name pos:line="247" pos:column="13">modtime_nsec<pos:position pos:line="247" pos:column="25"/></name></expr>)<pos:position pos:line="247" pos:column="26"/></condition><then pos:line="247" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="248" pos:column="17">extra_len<pos:position pos:line="248" pos:column="26"/></name> <operator pos:line="248" pos:column="27">+=<pos:position pos:line="248" pos:column="29"/></operator> <name pos:line="248" pos:column="30">EXTRA_LEN<pos:position pos:line="248" pos:column="39"/></name></expr>;<pos:position pos:line="248" pos:column="40"/></expr_stmt></block></then></if>
<cpp:endif pos:line="249" pos:column="1">#<cpp:directive pos:line="249" pos:column="2">endif<pos:position pos:line="249" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name pos:line="250" pos:column="13">file_length<pos:position pos:line="250" pos:column="24"/></name> <operator pos:line="250" pos:column="25">&lt;<pos:position pos:line="250" pos:column="29"/></operator> <literal type="number" pos:line="250" pos:column="27">0<pos:position pos:line="250" pos:column="28"/></literal></expr>)<pos:position pos:line="250" pos:column="29"/></condition><then pos:line="250" pos:column="29"> <block pos:line="250" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="251" pos:column="17">rprintf<pos:position pos:line="251" pos:column="24"/></name><argument_list pos:line="251" pos:column="24">(<argument><expr><name pos:line="251" pos:column="25">FERROR<pos:position pos:line="251" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="33">"Offset underflow: file-length is negative\n"<pos:position pos:line="251" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="80"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="252" pos:column="17">exit_cleanup<pos:position pos:line="252" pos:column="29"/></name><argument_list pos:line="252" pos:column="29">(<argument><expr><name pos:line="252" pos:column="30">RERR_UNSUPPORTED<pos:position pos:line="252" pos:column="46"/></name></expr></argument>)<pos:position pos:line="252" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="253" pos:column="10"/></block></then></if>

	<if pos:line="255" pos:column="9">if <condition pos:line="255" pos:column="12">(<expr><name pos:line="255" pos:column="13">inc_recurse<pos:position pos:line="255" pos:column="24"/></name> <operator pos:line="255" pos:column="25">&amp;&amp;<pos:position pos:line="255" pos:column="35"/></operator> <call><name pos:line="255" pos:column="28">S_ISDIR<pos:position pos:line="255" pos:column="35"/></name><argument_list pos:line="255" pos:column="35">(<argument><expr><name pos:line="255" pos:column="36">mode<pos:position pos:line="255" pos:column="40"/></name></expr></argument>)<pos:position pos:line="255" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="255" pos:column="42"/></condition><then pos:line="255" pos:column="42"> <block pos:line="255" pos:column="43">{
		<if pos:line="256" pos:column="17">if <condition pos:line="256" pos:column="20">(<expr><name pos:line="256" pos:column="21">one_file_system<pos:position pos:line="256" pos:column="36"/></name></expr>)<pos:position pos:line="256" pos:column="37"/></condition><then pos:line="256" pos:column="37"> <block pos:line="256" pos:column="38">{
			<comment type="block" pos:line="257" pos:column="25">/* Room to save the dir's device for -x */</comment>
			<expr_stmt><expr><name pos:line="258" pos:column="25">extra_len<pos:position pos:line="258" pos:column="34"/></name> <operator pos:line="258" pos:column="35">+=<pos:position pos:line="258" pos:column="37"/></operator> <name pos:line="258" pos:column="38">DEV_EXTRA_CNT<pos:position pos:line="258" pos:column="51"/></name> <operator pos:line="258" pos:column="52">*<pos:position pos:line="258" pos:column="53"/></operator> <name pos:line="258" pos:column="54">EXTRA_LEN<pos:position pos:line="258" pos:column="63"/></name></expr>;<pos:position pos:line="258" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="259" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="260" pos:column="17">pool<pos:position pos:line="260" pos:column="21"/></name> <operator pos:line="260" pos:column="22">=<pos:position pos:line="260" pos:column="23"/></operator> <name><name pos:line="260" pos:column="24">dir_flist<pos:position pos:line="260" pos:column="33"/></name><operator pos:line="260" pos:column="33">-&gt;<pos:position pos:line="260" pos:column="38"/></operator><name pos:line="260" pos:column="35">file_pool<pos:position pos:line="260" pos:column="44"/></name></name></expr>;<pos:position pos:line="260" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="261" pos:column="10"/></block></then> <else pos:line="261" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="262" pos:column="17">pool<pos:position pos:line="262" pos:column="21"/></name> <operator pos:line="262" pos:column="22">=<pos:position pos:line="262" pos:column="23"/></operator> <name><name pos:line="262" pos:column="24">flist<pos:position pos:line="262" pos:column="29"/></name><operator pos:line="262" pos:column="29">-&gt;<pos:position pos:line="262" pos:column="34"/></operator><name pos:line="262" pos:column="31">file_pool<pos:position pos:line="262" pos:column="40"/></name></name></expr>;<pos:position pos:line="262" pos:column="41"/></expr_stmt></block></else></if>

<cpp:if pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">if<pos:position pos:line="264" pos:column="4"/></cpp:directive> <expr><name pos:line="264" pos:column="5">EXTRA_ROUNDING<pos:position pos:line="264" pos:column="19"/></name> <operator pos:line="264" pos:column="20">&gt;<pos:position pos:line="264" pos:column="24"/></operator> <literal type="number" pos:line="264" pos:column="22">0<pos:position pos:line="264" pos:column="23"/></literal></expr></cpp:if>
	<if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><name pos:line="265" pos:column="13">extra_len<pos:position pos:line="265" pos:column="22"/></name> <operator pos:line="265" pos:column="23">&amp;<pos:position pos:line="265" pos:column="28"/></operator> <operator pos:line="265" pos:column="25">(<pos:position pos:line="265" pos:column="26"/></operator><name pos:line="265" pos:column="26">EXTRA_ROUNDING<pos:position pos:line="265" pos:column="40"/></name> <operator pos:line="265" pos:column="41">*<pos:position pos:line="265" pos:column="42"/></operator> <name pos:line="265" pos:column="43">EXTRA_LEN<pos:position pos:line="265" pos:column="52"/></name><operator pos:line="265" pos:column="52">)<pos:position pos:line="265" pos:column="53"/></operator></expr>)<pos:position pos:line="265" pos:column="54"/></condition><then pos:line="265" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><name pos:line="266" pos:column="17">extra_len<pos:position pos:line="266" pos:column="26"/></name> <operator pos:line="266" pos:column="27">=<pos:position pos:line="266" pos:column="28"/></operator> <operator pos:line="266" pos:column="29">(<pos:position pos:line="266" pos:column="30"/></operator><name pos:line="266" pos:column="30">extra_len<pos:position pos:line="266" pos:column="39"/></name> <operator pos:line="266" pos:column="40">|<pos:position pos:line="266" pos:column="41"/></operator> <operator pos:line="266" pos:column="42">(<pos:position pos:line="266" pos:column="43"/></operator><name pos:line="266" pos:column="43">EXTRA_ROUNDING<pos:position pos:line="266" pos:column="57"/></name> <operator pos:line="266" pos:column="58">*<pos:position pos:line="266" pos:column="59"/></operator> <name pos:line="266" pos:column="60">EXTRA_LEN<pos:position pos:line="266" pos:column="69"/></name><operator pos:line="266" pos:column="69">)<pos:position pos:line="266" pos:column="70"/></operator><operator pos:line="266" pos:column="70">)<pos:position pos:line="266" pos:column="71"/></operator> <operator pos:line="266" pos:column="72">+<pos:position pos:line="266" pos:column="73"/></operator> <name pos:line="266" pos:column="74">EXTRA_LEN<pos:position pos:line="266" pos:column="83"/></name></expr>;<pos:position pos:line="266" pos:column="84"/></expr_stmt></block></then></if>
<cpp:endif pos:line="267" pos:column="1">#<cpp:directive pos:line="267" pos:column="2">endif<pos:position pos:line="267" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="269" pos:column="9">alloc_len<pos:position pos:line="269" pos:column="18"/></name> <operator pos:line="269" pos:column="19">=<pos:position pos:line="269" pos:column="20"/></operator> <name pos:line="269" pos:column="21">FILE_STRUCT_LEN<pos:position pos:line="269" pos:column="36"/></name> <operator pos:line="269" pos:column="37">+<pos:position pos:line="269" pos:column="38"/></operator> <name pos:line="269" pos:column="39">extra_len<pos:position pos:line="269" pos:column="48"/></name> <operator pos:line="269" pos:column="49">+<pos:position pos:line="269" pos:column="50"/></operator> <name pos:line="269" pos:column="51">basename_len<pos:position pos:line="269" pos:column="63"/></name>
		  <operator pos:line="270" pos:column="19">+<pos:position pos:line="270" pos:column="20"/></operator> <name pos:line="270" pos:column="21">linkname_len<pos:position pos:line="270" pos:column="33"/></name></expr>;<pos:position pos:line="270" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="271" pos:column="9">bp<pos:position pos:line="271" pos:column="11"/></name> <operator pos:line="271" pos:column="12">=<pos:position pos:line="271" pos:column="13"/></operator> <call><name pos:line="271" pos:column="14">pool_alloc<pos:position pos:line="271" pos:column="24"/></name><argument_list pos:line="271" pos:column="24">(<argument><expr><name pos:line="271" pos:column="25">pool<pos:position pos:line="271" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="271" pos:column="31">alloc_len<pos:position pos:line="271" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="42">"recv_file_entry"<pos:position pos:line="271" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="273" pos:column="9">memset<pos:position pos:line="273" pos:column="15"/></name><argument_list pos:line="273" pos:column="15">(<argument><expr><name pos:line="273" pos:column="16">bp<pos:position pos:line="273" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="273" pos:column="20">0<pos:position pos:line="273" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="273" pos:column="23">extra_len<pos:position pos:line="273" pos:column="32"/></name> <operator pos:line="273" pos:column="33">+<pos:position pos:line="273" pos:column="34"/></operator> <name pos:line="273" pos:column="35">FILE_STRUCT_LEN<pos:position pos:line="273" pos:column="50"/></name></expr></argument>)<pos:position pos:line="273" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="274" pos:column="9">bp<pos:position pos:line="274" pos:column="11"/></name> <operator pos:line="274" pos:column="12">+=<pos:position pos:line="274" pos:column="14"/></operator> <name pos:line="274" pos:column="15">extra_len<pos:position pos:line="274" pos:column="24"/></name></expr>;<pos:position pos:line="274" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><name pos:line="275" pos:column="9">file<pos:position pos:line="275" pos:column="13"/></name> <operator pos:line="275" pos:column="14">=<pos:position pos:line="275" pos:column="15"/></operator> <operator pos:line="275" pos:column="16">(<pos:position pos:line="275" pos:column="17"/></operator>struct <name pos:line="275" pos:column="24">file_struct<pos:position pos:line="275" pos:column="35"/></name> <operator pos:line="275" pos:column="36">*<pos:position pos:line="275" pos:column="37"/></operator><operator pos:line="275" pos:column="37">)<pos:position pos:line="275" pos:column="38"/></operator><name pos:line="275" pos:column="38">bp<pos:position pos:line="275" pos:column="40"/></name></expr>;<pos:position pos:line="275" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="276" pos:column="9">bp<pos:position pos:line="276" pos:column="11"/></name> <operator pos:line="276" pos:column="12">+=<pos:position pos:line="276" pos:column="14"/></operator> <name pos:line="276" pos:column="15">FILE_STRUCT_LEN<pos:position pos:line="276" pos:column="30"/></name></expr>;<pos:position pos:line="276" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="278" pos:column="9">memcpy<pos:position pos:line="278" pos:column="15"/></name><argument_list pos:line="278" pos:column="15">(<argument><expr><name pos:line="278" pos:column="16">bp<pos:position pos:line="278" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="20">basename<pos:position pos:line="278" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="30">basename_len<pos:position pos:line="278" pos:column="42"/></name></expr></argument>)<pos:position pos:line="278" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="44"/></expr_stmt>

<cpp:ifdef pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">ifdef<pos:position pos:line="280" pos:column="7"/></cpp:directive> <name pos:line="280" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="280" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><name pos:line="281" pos:column="13">xflags<pos:position pos:line="281" pos:column="19"/></name> <operator pos:line="281" pos:column="20">&amp;<pos:position pos:line="281" pos:column="25"/></operator> <name pos:line="281" pos:column="22">XMIT_HLINKED<pos:position pos:line="281" pos:column="34"/></name>
<cpp:ifndef pos:line="282" pos:column="1">#<cpp:directive pos:line="282" pos:column="2">ifndef<pos:position pos:line="282" pos:column="8"/></cpp:directive> <name pos:line="282" pos:column="9">CAN_HARDLINK_SYMLINK<pos:position pos:line="282" pos:column="29"/></name></cpp:ifndef>
	 <operator pos:line="283" pos:column="10">&amp;&amp;<pos:position pos:line="283" pos:column="20"/></operator> <operator pos:line="283" pos:column="13">!<pos:position pos:line="283" pos:column="14"/></operator><call><name pos:line="283" pos:column="14">S_ISLNK<pos:position pos:line="283" pos:column="21"/></name><argument_list pos:line="283" pos:column="21">(<argument><expr><name pos:line="283" pos:column="22">mode<pos:position pos:line="283" pos:column="26"/></name></expr></argument>)<pos:position pos:line="283" pos:column="27"/></argument_list></call>
<cpp:endif pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">endif<pos:position pos:line="284" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="285" pos:column="1">#<cpp:directive pos:line="285" pos:column="2">ifndef<pos:position pos:line="285" pos:column="8"/></cpp:directive> <name pos:line="285" pos:column="9">CAN_HARDLINK_SPECIAL<pos:position pos:line="285" pos:column="29"/></name></cpp:ifndef>
	 <operator pos:line="286" pos:column="10">&amp;&amp;<pos:position pos:line="286" pos:column="20"/></operator> <operator pos:line="286" pos:column="13">!<pos:position pos:line="286" pos:column="14"/></operator><call><name pos:line="286" pos:column="14">IS_SPECIAL<pos:position pos:line="286" pos:column="24"/></name><argument_list pos:line="286" pos:column="24">(<argument><expr><name pos:line="286" pos:column="25">mode<pos:position pos:line="286" pos:column="29"/></name></expr></argument>)<pos:position pos:line="286" pos:column="30"/></argument_list></call> <operator pos:line="286" pos:column="31">&amp;&amp;<pos:position pos:line="286" pos:column="41"/></operator> <operator pos:line="286" pos:column="34">!<pos:position pos:line="286" pos:column="35"/></operator><call><name pos:line="286" pos:column="35">IS_DEVICE<pos:position pos:line="286" pos:column="44"/></name><argument_list pos:line="286" pos:column="44">(<argument><expr><name pos:line="286" pos:column="45">mode<pos:position pos:line="286" pos:column="49"/></name></expr></argument>)<pos:position pos:line="286" pos:column="50"/></argument_list></call></expr>
<cpp:endif pos:line="287" pos:column="1">#<cpp:directive pos:line="287" pos:column="2">endif<pos:position pos:line="287" pos:column="7"/></cpp:directive></cpp:endif>
	)<pos:position pos:line="288" pos:column="10"/></condition><then pos:line="288" pos:column="10">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="289" pos:column="17">file<pos:position pos:line="289" pos:column="21"/></name><operator pos:line="289" pos:column="21">-&gt;<pos:position pos:line="289" pos:column="26"/></operator><name pos:line="289" pos:column="23">flags<pos:position pos:line="289" pos:column="28"/></name></name> <operator pos:line="289" pos:column="29">|=<pos:position pos:line="289" pos:column="31"/></operator> <name pos:line="289" pos:column="32">FLAG_HLINKED<pos:position pos:line="289" pos:column="44"/></name></expr>;<pos:position pos:line="289" pos:column="45"/></expr_stmt></block></then></if>
<cpp:endif pos:line="290" pos:column="1">#<cpp:directive pos:line="290" pos:column="2">endif<pos:position pos:line="290" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="291" pos:column="9">file<pos:position pos:line="291" pos:column="13"/></name><operator pos:line="291" pos:column="13">-&gt;<pos:position pos:line="291" pos:column="18"/></operator><name pos:line="291" pos:column="15">modtime<pos:position pos:line="291" pos:column="22"/></name></name> <operator pos:line="291" pos:column="23">=<pos:position pos:line="291" pos:column="24"/></operator> <operator pos:line="291" pos:column="25">(<pos:position pos:line="291" pos:column="26"/></operator><name pos:line="291" pos:column="26">time_t<pos:position pos:line="291" pos:column="32"/></name><operator pos:line="291" pos:column="32">)<pos:position pos:line="291" pos:column="33"/></operator><name pos:line="291" pos:column="33">modtime<pos:position pos:line="291" pos:column="40"/></name></expr>;<pos:position pos:line="291" pos:column="41"/></expr_stmt>
<cpp:ifdef pos:line="292" pos:column="1">#<cpp:directive pos:line="292" pos:column="2">ifdef<pos:position pos:line="292" pos:column="7"/></cpp:directive> <name pos:line="292" pos:column="8">HAVE_UTIMENSAT<pos:position pos:line="292" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="293" pos:column="9">if <condition pos:line="293" pos:column="12">(<expr><name pos:line="293" pos:column="13">modtime_nsec<pos:position pos:line="293" pos:column="25"/></name></expr>)<pos:position pos:line="293" pos:column="26"/></condition><then pos:line="293" pos:column="26"> <block pos:line="293" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="294" pos:column="17">file<pos:position pos:line="294" pos:column="21"/></name><operator pos:line="294" pos:column="21">-&gt;<pos:position pos:line="294" pos:column="26"/></operator><name pos:line="294" pos:column="23">flags<pos:position pos:line="294" pos:column="28"/></name></name> <operator pos:line="294" pos:column="29">|=<pos:position pos:line="294" pos:column="31"/></operator> <name pos:line="294" pos:column="32">FLAG_MOD_NSEC<pos:position pos:line="294" pos:column="45"/></name></expr>;<pos:position pos:line="294" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="295" pos:column="17">OPT_EXTRA<pos:position pos:line="295" pos:column="26"/></name><argument_list pos:line="295" pos:column="26">(<argument><expr><name pos:line="295" pos:column="27">file<pos:position pos:line="295" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="295" pos:column="33">0<pos:position pos:line="295" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="295" pos:column="35"/></argument_list></call><operator pos:line="295" pos:column="35">-&gt;<pos:position pos:line="295" pos:column="40"/></operator><name pos:line="295" pos:column="37">unum<pos:position pos:line="295" pos:column="41"/></name> <operator pos:line="295" pos:column="42">=<pos:position pos:line="295" pos:column="43"/></operator> <name pos:line="295" pos:column="44">modtime_nsec<pos:position pos:line="295" pos:column="56"/></name></expr>;<pos:position pos:line="295" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="296" pos:column="10"/></block></then></if>
<cpp:endif pos:line="297" pos:column="1">#<cpp:directive pos:line="297" pos:column="2">endif<pos:position pos:line="297" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="298" pos:column="9">file<pos:position pos:line="298" pos:column="13"/></name><operator pos:line="298" pos:column="13">-&gt;<pos:position pos:line="298" pos:column="18"/></operator><name pos:line="298" pos:column="15">len32<pos:position pos:line="298" pos:column="20"/></name></name> <operator pos:line="298" pos:column="21">=<pos:position pos:line="298" pos:column="22"/></operator> <operator pos:line="298" pos:column="23">(<pos:position pos:line="298" pos:column="24"/></operator><name pos:line="298" pos:column="24">uint32<pos:position pos:line="298" pos:column="30"/></name><operator pos:line="298" pos:column="30">)<pos:position pos:line="298" pos:column="31"/></operator><name pos:line="298" pos:column="31">file_length<pos:position pos:line="298" pos:column="42"/></name></expr>;<pos:position pos:line="298" pos:column="43"/></expr_stmt>
<cpp:if pos:line="299" pos:column="1">#<cpp:directive pos:line="299" pos:column="2">if<pos:position pos:line="299" pos:column="4"/></cpp:directive> <expr><name pos:line="299" pos:column="5">SIZEOF_INT64<pos:position pos:line="299" pos:column="17"/></name> <operator pos:line="299" pos:column="18">&gt;=<pos:position pos:line="299" pos:column="23"/></operator> <literal type="number" pos:line="299" pos:column="21">8<pos:position pos:line="299" pos:column="22"/></literal></expr></cpp:if>
	<if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><name pos:line="300" pos:column="13">file_length<pos:position pos:line="300" pos:column="24"/></name> <operator pos:line="300" pos:column="25">&gt;<pos:position pos:line="300" pos:column="29"/></operator> <literal type="number" pos:line="300" pos:column="27">0xFFFFFFFFu<pos:position pos:line="300" pos:column="38"/></literal> <operator pos:line="300" pos:column="39">&amp;&amp;<pos:position pos:line="300" pos:column="49"/></operator> <call><name pos:line="300" pos:column="42">S_ISREG<pos:position pos:line="300" pos:column="49"/></name><argument_list pos:line="300" pos:column="49">(<argument><expr><name pos:line="300" pos:column="50">mode<pos:position pos:line="300" pos:column="54"/></name></expr></argument>)<pos:position pos:line="300" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="300" pos:column="56"/></condition><then pos:line="300" pos:column="56"> <block pos:line="300" pos:column="57">{
<cpp:if pos:line="301" pos:column="1">#<cpp:directive pos:line="301" pos:column="2">if<pos:position pos:line="301" pos:column="4"/></cpp:directive> <expr><name pos:line="301" pos:column="5">SIZEOF_CAPITAL_OFF_T<pos:position pos:line="301" pos:column="25"/></name> <operator pos:line="301" pos:column="26">&lt;<pos:position pos:line="301" pos:column="30"/></operator> <literal type="number" pos:line="301" pos:column="28">8<pos:position pos:line="301" pos:column="29"/></literal></expr></cpp:if>
		<expr_stmt><expr><call><name pos:line="302" pos:column="17">rprintf<pos:position pos:line="302" pos:column="24"/></name><argument_list pos:line="302" pos:column="24">(<argument><expr><name pos:line="302" pos:column="25">FERROR<pos:position pos:line="302" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="302" pos:column="33">"Offset overflow: attempted 64-bit file-length\n"<pos:position pos:line="302" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="302" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="303" pos:column="17">exit_cleanup<pos:position pos:line="303" pos:column="29"/></name><argument_list pos:line="303" pos:column="29">(<argument><expr><name pos:line="303" pos:column="30">RERR_UNSUPPORTED<pos:position pos:line="303" pos:column="46"/></name></expr></argument>)<pos:position pos:line="303" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="48"/></expr_stmt>
<cpp:else pos:line="304" pos:column="1">#<cpp:directive pos:line="304" pos:column="2">else<pos:position pos:line="304" pos:column="6"/></cpp:directive></cpp:else>
		<expr_stmt><expr><name><name pos:line="305" pos:column="17">file<pos:position pos:line="305" pos:column="21"/></name><operator pos:line="305" pos:column="21">-&gt;<pos:position pos:line="305" pos:column="26"/></operator><name pos:line="305" pos:column="23">flags<pos:position pos:line="305" pos:column="28"/></name></name> <operator pos:line="305" pos:column="29">|=<pos:position pos:line="305" pos:column="31"/></operator> <name pos:line="305" pos:column="32">FLAG_LENGTH64<pos:position pos:line="305" pos:column="45"/></name></expr>;<pos:position pos:line="305" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="306" pos:column="17">OPT_EXTRA<pos:position pos:line="306" pos:column="26"/></name><argument_list pos:line="306" pos:column="26">(<argument><expr><name pos:line="306" pos:column="27">file<pos:position pos:line="306" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="306" pos:column="33">NSEC_BUMP<pos:position pos:line="306" pos:column="42"/></name><argument_list pos:line="306" pos:column="42">(<argument><expr><name pos:line="306" pos:column="43">file<pos:position pos:line="306" pos:column="47"/></name></expr></argument>)<pos:position pos:line="306" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="306" pos:column="49"/></argument_list></call><operator pos:line="306" pos:column="49">-&gt;<pos:position pos:line="306" pos:column="54"/></operator><name pos:line="306" pos:column="51">unum<pos:position pos:line="306" pos:column="55"/></name> <operator pos:line="306" pos:column="56">=<pos:position pos:line="306" pos:column="57"/></operator> <call pos:line="306" pos:column="58">(<name pos:line="306" pos:column="59">uint32<pos:position pos:line="306" pos:column="65"/></name>)<argument_list pos:line="306" pos:column="66">(<argument><expr><name pos:line="306" pos:column="67">file_length<pos:position pos:line="306" pos:column="78"/></name> <operator pos:line="306" pos:column="79">&gt;&gt;<pos:position pos:line="306" pos:column="84"/></operator> <literal type="number" pos:line="306" pos:column="82">32<pos:position pos:line="306" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="86"/></expr_stmt>
<cpp:endif pos:line="307" pos:column="1">#<cpp:directive pos:line="307" pos:column="2">endif<pos:position pos:line="307" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="308" pos:column="10"/></block></then></if>
<cpp:endif pos:line="309" pos:column="1">#<cpp:directive pos:line="309" pos:column="2">endif<pos:position pos:line="309" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="310" pos:column="9">file<pos:position pos:line="310" pos:column="13"/></name><operator pos:line="310" pos:column="13">-&gt;<pos:position pos:line="310" pos:column="18"/></operator><name pos:line="310" pos:column="15">mode<pos:position pos:line="310" pos:column="19"/></name></name> <operator pos:line="310" pos:column="20">=<pos:position pos:line="310" pos:column="21"/></operator> <name pos:line="310" pos:column="22">mode<pos:position pos:line="310" pos:column="26"/></name></expr>;<pos:position pos:line="310" pos:column="27"/></expr_stmt>
	<if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><name pos:line="311" pos:column="13">preserve_uid<pos:position pos:line="311" pos:column="25"/></name></expr>)<pos:position pos:line="311" pos:column="26"/></condition><then pos:line="311" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="312" pos:column="17">F_OWNER<pos:position pos:line="312" pos:column="24"/></name><argument_list pos:line="312" pos:column="24">(<argument><expr><name pos:line="312" pos:column="25">file<pos:position pos:line="312" pos:column="29"/></name></expr></argument>)<pos:position pos:line="312" pos:column="30"/></argument_list></call> <operator pos:line="312" pos:column="31">=<pos:position pos:line="312" pos:column="32"/></operator> <name pos:line="312" pos:column="33">uid<pos:position pos:line="312" pos:column="36"/></name></expr>;<pos:position pos:line="312" pos:column="37"/></expr_stmt></block></then></if>
	<if pos:line="313" pos:column="9">if <condition pos:line="313" pos:column="12">(<expr><name pos:line="313" pos:column="13">preserve_gid<pos:position pos:line="313" pos:column="25"/></name></expr>)<pos:position pos:line="313" pos:column="26"/></condition><then pos:line="313" pos:column="26"> <block pos:line="313" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="314" pos:column="17">F_GROUP<pos:position pos:line="314" pos:column="24"/></name><argument_list pos:line="314" pos:column="24">(<argument><expr><name pos:line="314" pos:column="25">file<pos:position pos:line="314" pos:column="29"/></name></expr></argument>)<pos:position pos:line="314" pos:column="30"/></argument_list></call> <operator pos:line="314" pos:column="31">=<pos:position pos:line="314" pos:column="32"/></operator> <name pos:line="314" pos:column="33">gid<pos:position pos:line="314" pos:column="36"/></name></expr>;<pos:position pos:line="314" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="315" pos:column="17">file<pos:position pos:line="315" pos:column="21"/></name><operator pos:line="315" pos:column="21">-&gt;<pos:position pos:line="315" pos:column="26"/></operator><name pos:line="315" pos:column="23">flags<pos:position pos:line="315" pos:column="28"/></name></name> <operator pos:line="315" pos:column="29">|=<pos:position pos:line="315" pos:column="31"/></operator> <name pos:line="315" pos:column="32">gid_flags<pos:position pos:line="315" pos:column="41"/></name></expr>;<pos:position pos:line="315" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="316" pos:column="10"/></block></then></if>
	<if pos:line="317" pos:column="9">if <condition pos:line="317" pos:column="12">(<expr><name pos:line="317" pos:column="13">unsort_ndx<pos:position pos:line="317" pos:column="23"/></name></expr>)<pos:position pos:line="317" pos:column="24"/></condition><then pos:line="317" pos:column="24">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="318" pos:column="17">F_NDX<pos:position pos:line="318" pos:column="22"/></name><argument_list pos:line="318" pos:column="22">(<argument><expr><name pos:line="318" pos:column="23">file<pos:position pos:line="318" pos:column="27"/></name></expr></argument>)<pos:position pos:line="318" pos:column="28"/></argument_list></call> <operator pos:line="318" pos:column="29">=<pos:position pos:line="318" pos:column="30"/></operator> <name><name pos:line="318" pos:column="31">flist<pos:position pos:line="318" pos:column="36"/></name><operator pos:line="318" pos:column="36">-&gt;<pos:position pos:line="318" pos:column="41"/></operator><name pos:line="318" pos:column="38">used<pos:position pos:line="318" pos:column="42"/></name></name> <operator pos:line="318" pos:column="43">+<pos:position pos:line="318" pos:column="44"/></operator> <name><name pos:line="318" pos:column="45">flist<pos:position pos:line="318" pos:column="50"/></name><operator pos:line="318" pos:column="50">-&gt;<pos:position pos:line="318" pos:column="55"/></operator><name pos:line="318" pos:column="52">ndx_start<pos:position pos:line="318" pos:column="61"/></name></name></expr>;<pos:position pos:line="318" pos:column="62"/></expr_stmt></block></then></if>

	<if pos:line="320" pos:column="9">if <condition pos:line="320" pos:column="12">(<expr><name pos:line="320" pos:column="13">basename<pos:position pos:line="320" pos:column="21"/></name> <operator pos:line="320" pos:column="22">!=<pos:position pos:line="320" pos:column="24"/></operator> <name pos:line="320" pos:column="25">thisname<pos:position pos:line="320" pos:column="33"/></name></expr>)<pos:position pos:line="320" pos:column="34"/></condition><then pos:line="320" pos:column="34"> <block pos:line="320" pos:column="35">{
		<expr_stmt><expr><name><name pos:line="321" pos:column="17">file<pos:position pos:line="321" pos:column="21"/></name><operator pos:line="321" pos:column="21">-&gt;<pos:position pos:line="321" pos:column="26"/></operator><name pos:line="321" pos:column="23">dirname<pos:position pos:line="321" pos:column="30"/></name></name> <operator pos:line="321" pos:column="31">=<pos:position pos:line="321" pos:column="32"/></operator> <name pos:line="321" pos:column="33">lastdir<pos:position pos:line="321" pos:column="40"/></name></expr>;<pos:position pos:line="321" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="322" pos:column="17">F_DEPTH<pos:position pos:line="322" pos:column="24"/></name><argument_list pos:line="322" pos:column="24">(<argument><expr><name pos:line="322" pos:column="25">file<pos:position pos:line="322" pos:column="29"/></name></expr></argument>)<pos:position pos:line="322" pos:column="30"/></argument_list></call> <operator pos:line="322" pos:column="31">=<pos:position pos:line="322" pos:column="32"/></operator> <name pos:line="322" pos:column="33">lastdir_depth<pos:position pos:line="322" pos:column="46"/></name> <operator pos:line="322" pos:column="47">+<pos:position pos:line="322" pos:column="48"/></operator> <literal type="number" pos:line="322" pos:column="49">1<pos:position pos:line="322" pos:column="50"/></literal></expr>;<pos:position pos:line="322" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="323" pos:column="10"/></block></then> <else pos:line="323" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="324" pos:column="17">F_DEPTH<pos:position pos:line="324" pos:column="24"/></name><argument_list pos:line="324" pos:column="24">(<argument><expr><name pos:line="324" pos:column="25">file<pos:position pos:line="324" pos:column="29"/></name></expr></argument>)<pos:position pos:line="324" pos:column="30"/></argument_list></call> <operator pos:line="324" pos:column="31">=<pos:position pos:line="324" pos:column="32"/></operator> <literal type="number" pos:line="324" pos:column="33">1<pos:position pos:line="324" pos:column="34"/></literal></expr>;<pos:position pos:line="324" pos:column="35"/></expr_stmt></block></else></if>

	<if pos:line="326" pos:column="9">if <condition pos:line="326" pos:column="12">(<expr><call><name pos:line="326" pos:column="13">S_ISDIR<pos:position pos:line="326" pos:column="20"/></name><argument_list pos:line="326" pos:column="20">(<argument><expr><name pos:line="326" pos:column="21">mode<pos:position pos:line="326" pos:column="25"/></name></expr></argument>)<pos:position pos:line="326" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="326" pos:column="27"/></condition><then pos:line="326" pos:column="27"> <block pos:line="326" pos:column="28">{
		<if pos:line="327" pos:column="17">if <condition pos:line="327" pos:column="20">(<expr><name pos:line="327" pos:column="21">basename_len<pos:position pos:line="327" pos:column="33"/></name> <operator pos:line="327" pos:column="34">==<pos:position pos:line="327" pos:column="36"/></operator> <literal type="number" pos:line="327" pos:column="37">1<pos:position pos:line="327" pos:column="38"/></literal><operator pos:line="327" pos:column="38">+<pos:position pos:line="327" pos:column="39"/></operator><literal type="number" pos:line="327" pos:column="39">1<pos:position pos:line="327" pos:column="40"/></literal> <operator pos:line="327" pos:column="41">&amp;&amp;<pos:position pos:line="327" pos:column="51"/></operator> <operator pos:line="327" pos:column="44">*<pos:position pos:line="327" pos:column="45"/></operator><name pos:line="327" pos:column="45">basename<pos:position pos:line="327" pos:column="53"/></name> <operator pos:line="327" pos:column="54">==<pos:position pos:line="327" pos:column="56"/></operator> <literal type="char" pos:line="327" pos:column="57">'.'<pos:position pos:line="327" pos:column="60"/></literal></expr>)<pos:position pos:line="327" pos:column="61"/></condition><then pos:line="327" pos:column="61"> <comment type="block" pos:line="327" pos:column="62">/* +1 for '\0' */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="328" pos:column="25">F_DEPTH<pos:position pos:line="328" pos:column="32"/></name><argument_list pos:line="328" pos:column="32">(<argument><expr><name pos:line="328" pos:column="33">file<pos:position pos:line="328" pos:column="37"/></name></expr></argument>)<pos:position pos:line="328" pos:column="38"/></argument_list></call><operator pos:line="328" pos:column="38">--<pos:position pos:line="328" pos:column="40"/></operator></expr>;<pos:position pos:line="328" pos:column="41"/></expr_stmt></block></then></if>
		<if pos:line="329" pos:column="17">if <condition pos:line="329" pos:column="20">(<expr><name pos:line="329" pos:column="21">protocol_version<pos:position pos:line="329" pos:column="37"/></name> <operator pos:line="329" pos:column="38">&gt;=<pos:position pos:line="329" pos:column="43"/></operator> <literal type="number" pos:line="329" pos:column="41">30<pos:position pos:line="329" pos:column="43"/></literal></expr>)<pos:position pos:line="329" pos:column="44"/></condition><then pos:line="329" pos:column="44"> <block pos:line="329" pos:column="45">{
			<if pos:line="330" pos:column="25">if <condition pos:line="330" pos:column="28">(<expr><operator pos:line="330" pos:column="29">!<pos:position pos:line="330" pos:column="30"/></operator><operator pos:line="330" pos:column="30">(<pos:position pos:line="330" pos:column="31"/></operator><name pos:line="330" pos:column="31">xflags<pos:position pos:line="330" pos:column="37"/></name> <operator pos:line="330" pos:column="38">&amp;<pos:position pos:line="330" pos:column="43"/></operator> <name pos:line="330" pos:column="40">XMIT_NO_CONTENT_DIR<pos:position pos:line="330" pos:column="59"/></name><operator pos:line="330" pos:column="59">)<pos:position pos:line="330" pos:column="60"/></operator></expr>)<pos:position pos:line="330" pos:column="61"/></condition><then pos:line="330" pos:column="61"> <block pos:line="330" pos:column="62">{
				<if pos:line="331" pos:column="33">if <condition pos:line="331" pos:column="36">(<expr><name pos:line="331" pos:column="37">xflags<pos:position pos:line="331" pos:column="43"/></name> <operator pos:line="331" pos:column="44">&amp;<pos:position pos:line="331" pos:column="49"/></operator> <name pos:line="331" pos:column="46">XMIT_TOP_DIR<pos:position pos:line="331" pos:column="58"/></name></expr>)<pos:position pos:line="331" pos:column="59"/></condition><then pos:line="331" pos:column="59">
					<block type="pseudo"><expr_stmt><expr><name><name pos:line="332" pos:column="41">file<pos:position pos:line="332" pos:column="45"/></name><operator pos:line="332" pos:column="45">-&gt;<pos:position pos:line="332" pos:column="50"/></operator><name pos:line="332" pos:column="47">flags<pos:position pos:line="332" pos:column="52"/></name></name> <operator pos:line="332" pos:column="53">|=<pos:position pos:line="332" pos:column="55"/></operator> <name pos:line="332" pos:column="56">FLAG_TOP_DIR<pos:position pos:line="332" pos:column="68"/></name></expr>;<pos:position pos:line="332" pos:column="69"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name><name pos:line="333" pos:column="33">file<pos:position pos:line="333" pos:column="37"/></name><operator pos:line="333" pos:column="37">-&gt;<pos:position pos:line="333" pos:column="42"/></operator><name pos:line="333" pos:column="39">flags<pos:position pos:line="333" pos:column="44"/></name></name> <operator pos:line="333" pos:column="45">|=<pos:position pos:line="333" pos:column="47"/></operator> <name pos:line="333" pos:column="48">FLAG_CONTENT_DIR<pos:position pos:line="333" pos:column="64"/></name></expr>;<pos:position pos:line="333" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="334" pos:column="26"/></block></then> <elseif pos:line="334" pos:column="27">else <if pos:line="334" pos:column="32">if <condition pos:line="334" pos:column="35">(<expr><name pos:line="334" pos:column="36">xflags<pos:position pos:line="334" pos:column="42"/></name> <operator pos:line="334" pos:column="43">&amp;<pos:position pos:line="334" pos:column="48"/></operator> <name pos:line="334" pos:column="45">XMIT_TOP_DIR<pos:position pos:line="334" pos:column="57"/></name></expr>)<pos:position pos:line="334" pos:column="58"/></condition><then pos:line="334" pos:column="58">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="335" pos:column="33">file<pos:position pos:line="335" pos:column="37"/></name><operator pos:line="335" pos:column="37">-&gt;<pos:position pos:line="335" pos:column="42"/></operator><name pos:line="335" pos:column="39">flags<pos:position pos:line="335" pos:column="44"/></name></name> <operator pos:line="335" pos:column="45">|=<pos:position pos:line="335" pos:column="47"/></operator> <name pos:line="335" pos:column="48">FLAG_IMPLIED_DIR<pos:position pos:line="335" pos:column="64"/></name></expr>;<pos:position pos:line="335" pos:column="65"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="336" pos:column="18"/></block></then> <elseif pos:line="336" pos:column="19">else <if pos:line="336" pos:column="24">if <condition pos:line="336" pos:column="27">(<expr><name pos:line="336" pos:column="28">xflags<pos:position pos:line="336" pos:column="34"/></name> <operator pos:line="336" pos:column="35">&amp;<pos:position pos:line="336" pos:column="40"/></operator> <name pos:line="336" pos:column="37">XMIT_TOP_DIR<pos:position pos:line="336" pos:column="49"/></name></expr>)<pos:position pos:line="336" pos:column="50"/></condition><then pos:line="336" pos:column="50"> <block pos:line="336" pos:column="51">{
			<expr_stmt><expr><name pos:line="337" pos:column="25">in_del_hier<pos:position pos:line="337" pos:column="36"/></name> <operator pos:line="337" pos:column="37">=<pos:position pos:line="337" pos:column="38"/></operator> <name pos:line="337" pos:column="39">recurse<pos:position pos:line="337" pos:column="46"/></name></expr>;<pos:position pos:line="337" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><name pos:line="338" pos:column="25">del_hier_name_len<pos:position pos:line="338" pos:column="42"/></name> <operator pos:line="338" pos:column="43">=<pos:position pos:line="338" pos:column="44"/></operator> <ternary><condition><expr><call><name pos:line="338" pos:column="45">F_DEPTH<pos:position pos:line="338" pos:column="52"/></name><argument_list pos:line="338" pos:column="52">(<argument><expr><name pos:line="338" pos:column="53">file<pos:position pos:line="338" pos:column="57"/></name></expr></argument>)<pos:position pos:line="338" pos:column="58"/></argument_list></call> <operator pos:line="338" pos:column="59">==<pos:position pos:line="338" pos:column="61"/></operator> <literal type="number" pos:line="338" pos:column="62">0<pos:position pos:line="338" pos:column="63"/></literal></expr> ?<pos:position pos:line="338" pos:column="65"/></condition><then pos:line="338" pos:column="65"> <expr><literal type="number" pos:line="338" pos:column="66">0<pos:position pos:line="338" pos:column="67"/></literal></expr> <pos:position pos:line="338" pos:column="68"/></then><else pos:line="338" pos:column="68">: <expr><name pos:line="338" pos:column="70">l1<pos:position pos:line="338" pos:column="72"/></name> <operator pos:line="338" pos:column="73">+<pos:position pos:line="338" pos:column="74"/></operator> <name pos:line="338" pos:column="75">l2<pos:position pos:line="338" pos:column="77"/></name></expr></else></ternary></expr>;<pos:position pos:line="338" pos:column="78"/></expr_stmt>
			<if pos:line="339" pos:column="25">if <condition pos:line="339" pos:column="28">(<expr><name pos:line="339" pos:column="29">relative_paths<pos:position pos:line="339" pos:column="43"/></name> <operator pos:line="339" pos:column="44">&amp;&amp;<pos:position pos:line="339" pos:column="54"/></operator> <name pos:line="339" pos:column="47">del_hier_name_len<pos:position pos:line="339" pos:column="64"/></name> <operator pos:line="339" pos:column="65">&gt;<pos:position pos:line="339" pos:column="69"/></operator> <literal type="number" pos:line="339" pos:column="67">2<pos:position pos:line="339" pos:column="68"/></literal>
			    <operator pos:line="340" pos:column="29">&amp;&amp;<pos:position pos:line="340" pos:column="39"/></operator> <name><name pos:line="340" pos:column="32">lastname<pos:position pos:line="340" pos:column="40"/></name><index pos:line="340" pos:column="40">[<expr><name pos:line="340" pos:column="41">del_hier_name_len<pos:position pos:line="340" pos:column="58"/></name><operator pos:line="340" pos:column="58">-<pos:position pos:line="340" pos:column="59"/></operator><literal type="number" pos:line="340" pos:column="59">1<pos:position pos:line="340" pos:column="60"/></literal></expr>]<pos:position pos:line="340" pos:column="61"/></index></name> <operator pos:line="340" pos:column="62">==<pos:position pos:line="340" pos:column="64"/></operator> <literal type="char" pos:line="340" pos:column="65">'.'<pos:position pos:line="340" pos:column="68"/></literal>
			    <operator pos:line="341" pos:column="29">&amp;&amp;<pos:position pos:line="341" pos:column="39"/></operator> <name><name pos:line="341" pos:column="32">lastname<pos:position pos:line="341" pos:column="40"/></name><index pos:line="341" pos:column="40">[<expr><name pos:line="341" pos:column="41">del_hier_name_len<pos:position pos:line="341" pos:column="58"/></name><operator pos:line="341" pos:column="58">-<pos:position pos:line="341" pos:column="59"/></operator><literal type="number" pos:line="341" pos:column="59">2<pos:position pos:line="341" pos:column="60"/></literal></expr>]<pos:position pos:line="341" pos:column="61"/></index></name> <operator pos:line="341" pos:column="62">==<pos:position pos:line="341" pos:column="64"/></operator> <literal type="char" pos:line="341" pos:column="65">'/'<pos:position pos:line="341" pos:column="68"/></literal></expr>)<pos:position pos:line="341" pos:column="69"/></condition><then pos:line="341" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="342" pos:column="33">del_hier_name_len<pos:position pos:line="342" pos:column="50"/></name> <operator pos:line="342" pos:column="51">-=<pos:position pos:line="342" pos:column="53"/></operator> <literal type="number" pos:line="342" pos:column="54">2<pos:position pos:line="342" pos:column="55"/></literal></expr>;<pos:position pos:line="342" pos:column="56"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name><name pos:line="343" pos:column="25">file<pos:position pos:line="343" pos:column="29"/></name><operator pos:line="343" pos:column="29">-&gt;<pos:position pos:line="343" pos:column="34"/></operator><name pos:line="343" pos:column="31">flags<pos:position pos:line="343" pos:column="36"/></name></name> <operator pos:line="343" pos:column="37">|=<pos:position pos:line="343" pos:column="39"/></operator> <name pos:line="343" pos:column="40">FLAG_TOP_DIR<pos:position pos:line="343" pos:column="52"/></name> <operator pos:line="343" pos:column="53">|<pos:position pos:line="343" pos:column="54"/></operator> <name pos:line="343" pos:column="55">FLAG_CONTENT_DIR<pos:position pos:line="343" pos:column="71"/></name></expr>;<pos:position pos:line="343" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="344" pos:column="18"/></block></then></if></elseif> <elseif pos:line="344" pos:column="19">else <if pos:line="344" pos:column="24">if <condition pos:line="344" pos:column="27">(<expr><name pos:line="344" pos:column="28">in_del_hier<pos:position pos:line="344" pos:column="39"/></name></expr>)<pos:position pos:line="344" pos:column="40"/></condition><then pos:line="344" pos:column="40"> <block pos:line="344" pos:column="41">{
			<if pos:line="345" pos:column="25">if <condition pos:line="345" pos:column="28">(<expr><operator pos:line="345" pos:column="29">!<pos:position pos:line="345" pos:column="30"/></operator><name pos:line="345" pos:column="30">relative_paths<pos:position pos:line="345" pos:column="44"/></name> <operator pos:line="345" pos:column="45">||<pos:position pos:line="345" pos:column="47"/></operator> <operator pos:line="345" pos:column="48">!<pos:position pos:line="345" pos:column="49"/></operator><name pos:line="345" pos:column="49">del_hier_name_len<pos:position pos:line="345" pos:column="66"/></name>
			 <operator pos:line="346" pos:column="26">||<pos:position pos:line="346" pos:column="28"/></operator> <operator pos:line="346" pos:column="29">(<pos:position pos:line="346" pos:column="30"/></operator><name pos:line="346" pos:column="30">l1<pos:position pos:line="346" pos:column="32"/></name> <operator pos:line="346" pos:column="33">&gt;=<pos:position pos:line="346" pos:column="38"/></operator> <name pos:line="346" pos:column="36">del_hier_name_len<pos:position pos:line="346" pos:column="53"/></name>
			  <operator pos:line="347" pos:column="27">&amp;&amp;<pos:position pos:line="347" pos:column="37"/></operator> <name><name pos:line="347" pos:column="30">lastname<pos:position pos:line="347" pos:column="38"/></name><index pos:line="347" pos:column="38">[<expr><name pos:line="347" pos:column="39">del_hier_name_len<pos:position pos:line="347" pos:column="56"/></name></expr>]<pos:position pos:line="347" pos:column="57"/></index></name> <operator pos:line="347" pos:column="58">==<pos:position pos:line="347" pos:column="60"/></operator> <literal type="char" pos:line="347" pos:column="61">'/'<pos:position pos:line="347" pos:column="64"/></literal><operator pos:line="347" pos:column="64">)<pos:position pos:line="347" pos:column="65"/></operator></expr>)<pos:position pos:line="347" pos:column="66"/></condition><then pos:line="347" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="348" pos:column="33">file<pos:position pos:line="348" pos:column="37"/></name><operator pos:line="348" pos:column="37">-&gt;<pos:position pos:line="348" pos:column="42"/></operator><name pos:line="348" pos:column="39">flags<pos:position pos:line="348" pos:column="44"/></name></name> <operator pos:line="348" pos:column="45">|=<pos:position pos:line="348" pos:column="47"/></operator> <name pos:line="348" pos:column="48">FLAG_CONTENT_DIR<pos:position pos:line="348" pos:column="64"/></name></expr>;<pos:position pos:line="348" pos:column="65"/></expr_stmt></block></then>
			<else pos:line="349" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="350" pos:column="33">in_del_hier<pos:position pos:line="350" pos:column="44"/></name> <operator pos:line="350" pos:column="45">=<pos:position pos:line="350" pos:column="46"/></operator> <literal type="number" pos:line="350" pos:column="47">0<pos:position pos:line="350" pos:column="48"/></literal></expr>;<pos:position pos:line="350" pos:column="49"/></expr_stmt></block></else></if>
		}<pos:position pos:line="351" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="352" pos:column="10"/></block></then></if>

	<if pos:line="354" pos:column="9">if <condition pos:line="354" pos:column="12">(<expr><name pos:line="354" pos:column="13">preserve_devices<pos:position pos:line="354" pos:column="29"/></name> <operator pos:line="354" pos:column="30">&amp;&amp;<pos:position pos:line="354" pos:column="40"/></operator> <call><name pos:line="354" pos:column="33">IS_DEVICE<pos:position pos:line="354" pos:column="42"/></name><argument_list pos:line="354" pos:column="42">(<argument><expr><name pos:line="354" pos:column="43">mode<pos:position pos:line="354" pos:column="47"/></name></expr></argument>)<pos:position pos:line="354" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="354" pos:column="49"/></condition><then pos:line="354" pos:column="49"> <block pos:line="354" pos:column="50">{
		<decl_stmt><decl><type><name pos:line="355" pos:column="17">uint32<pos:position pos:line="355" pos:column="23"/></name> <modifier pos:line="355" pos:column="24">*<pos:position pos:line="355" pos:column="25"/></modifier></type><name pos:line="355" pos:column="25">devp<pos:position pos:line="355" pos:column="29"/></name> <init pos:line="355" pos:column="30">= <expr><call><name pos:line="355" pos:column="32">F_RDEV_P<pos:position pos:line="355" pos:column="40"/></name><argument_list pos:line="355" pos:column="40">(<argument><expr><name pos:line="355" pos:column="41">file<pos:position pos:line="355" pos:column="45"/></name></expr></argument>)<pos:position pos:line="355" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="355" pos:column="47"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="356" pos:column="17">DEV_MAJOR<pos:position pos:line="356" pos:column="26"/></name><argument_list pos:line="356" pos:column="26">(<argument><expr><name pos:line="356" pos:column="27">devp<pos:position pos:line="356" pos:column="31"/></name></expr></argument>)<pos:position pos:line="356" pos:column="32"/></argument_list></call> <operator pos:line="356" pos:column="33">=<pos:position pos:line="356" pos:column="34"/></operator> <call><name pos:line="356" pos:column="35">major<pos:position pos:line="356" pos:column="40"/></name><argument_list pos:line="356" pos:column="40">(<argument><expr><name pos:line="356" pos:column="41">rdev<pos:position pos:line="356" pos:column="45"/></name></expr></argument>)<pos:position pos:line="356" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="357" pos:column="17">DEV_MINOR<pos:position pos:line="357" pos:column="26"/></name><argument_list pos:line="357" pos:column="26">(<argument><expr><name pos:line="357" pos:column="27">devp<pos:position pos:line="357" pos:column="31"/></name></expr></argument>)<pos:position pos:line="357" pos:column="32"/></argument_list></call> <operator pos:line="357" pos:column="33">=<pos:position pos:line="357" pos:column="34"/></operator> <call><name pos:line="357" pos:column="35">minor<pos:position pos:line="357" pos:column="40"/></name><argument_list pos:line="357" pos:column="40">(<argument><expr><name pos:line="357" pos:column="41">rdev<pos:position pos:line="357" pos:column="45"/></name></expr></argument>)<pos:position pos:line="357" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="358" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">ifdef<pos:position pos:line="360" pos:column="7"/></cpp:directive> <name pos:line="360" pos:column="8">SUPPORT_LINKS<pos:position pos:line="360" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="361" pos:column="9">if <condition pos:line="361" pos:column="12">(<expr><name pos:line="361" pos:column="13">linkname_len<pos:position pos:line="361" pos:column="25"/></name></expr>)<pos:position pos:line="361" pos:column="26"/></condition><then pos:line="361" pos:column="26"> <block pos:line="361" pos:column="27">{
		<expr_stmt><expr><name pos:line="362" pos:column="17">bp<pos:position pos:line="362" pos:column="19"/></name> <operator pos:line="362" pos:column="20">+=<pos:position pos:line="362" pos:column="22"/></operator> <name pos:line="362" pos:column="23">basename_len<pos:position pos:line="362" pos:column="35"/></name></expr>;<pos:position pos:line="362" pos:column="36"/></expr_stmt>
		<if pos:line="363" pos:column="17">if <condition pos:line="363" pos:column="20">(<expr><name pos:line="363" pos:column="21">first_hlink_ndx<pos:position pos:line="363" pos:column="36"/></name> <operator pos:line="363" pos:column="37">&gt;=<pos:position pos:line="363" pos:column="42"/></operator> <name><name pos:line="363" pos:column="40">flist<pos:position pos:line="363" pos:column="45"/></name><operator pos:line="363" pos:column="45">-&gt;<pos:position pos:line="363" pos:column="50"/></operator><name pos:line="363" pos:column="47">ndx_start<pos:position pos:line="363" pos:column="56"/></name></name></expr>)<pos:position pos:line="363" pos:column="57"/></condition><then pos:line="363" pos:column="57"> <block pos:line="363" pos:column="58">{
			<decl_stmt><decl><type><name><name pos:line="364" pos:column="25">struct<pos:position pos:line="364" pos:column="31"/></name> <name pos:line="364" pos:column="32">file_struct<pos:position pos:line="364" pos:column="43"/></name></name> <modifier pos:line="364" pos:column="44">*<pos:position pos:line="364" pos:column="45"/></modifier></type><name pos:line="364" pos:column="45">first<pos:position pos:line="364" pos:column="50"/></name> <init pos:line="364" pos:column="51">= <expr><name><name pos:line="364" pos:column="53">flist<pos:position pos:line="364" pos:column="58"/></name><operator pos:line="364" pos:column="58">-&gt;<pos:position pos:line="364" pos:column="63"/></operator><name pos:line="364" pos:column="60">files<pos:position pos:line="364" pos:column="65"/></name><index pos:line="364" pos:column="65">[<expr><name pos:line="364" pos:column="66">first_hlink_ndx<pos:position pos:line="364" pos:column="81"/></name> <operator pos:line="364" pos:column="82">-<pos:position pos:line="364" pos:column="83"/></operator> <name><name pos:line="364" pos:column="84">flist<pos:position pos:line="364" pos:column="89"/></name><operator pos:line="364" pos:column="89">-&gt;<pos:position pos:line="364" pos:column="94"/></operator><name pos:line="364" pos:column="91">ndx_start<pos:position pos:line="364" pos:column="100"/></name></name></expr>]<pos:position pos:line="364" pos:column="101"/></index></name></expr></init></decl>;<pos:position pos:line="364" pos:column="102"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="365" pos:column="25">memcpy<pos:position pos:line="365" pos:column="31"/></name><argument_list pos:line="365" pos:column="31">(<argument><expr><name pos:line="365" pos:column="32">bp<pos:position pos:line="365" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="365" pos:column="36">F_SYMLINK<pos:position pos:line="365" pos:column="45"/></name><argument_list pos:line="365" pos:column="45">(<argument><expr><name pos:line="365" pos:column="46">first<pos:position pos:line="365" pos:column="51"/></name></expr></argument>)<pos:position pos:line="365" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="365" pos:column="54">linkname_len<pos:position pos:line="365" pos:column="66"/></name></expr></argument>)<pos:position pos:line="365" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="365" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="366" pos:column="18"/></block></then> <else pos:line="366" pos:column="19">else <block pos:line="366" pos:column="24">{
			<if pos:line="367" pos:column="25">if <condition pos:line="367" pos:column="28">(<expr><name pos:line="367" pos:column="29">munge_symlinks<pos:position pos:line="367" pos:column="43"/></name></expr>)<pos:position pos:line="367" pos:column="44"/></condition><then pos:line="367" pos:column="44"> <block pos:line="367" pos:column="45">{
				<expr_stmt><expr><call><name pos:line="368" pos:column="33">strlcpy<pos:position pos:line="368" pos:column="40"/></name><argument_list pos:line="368" pos:column="40">(<argument><expr><name pos:line="368" pos:column="41">bp<pos:position pos:line="368" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="45">SYMLINK_PREFIX<pos:position pos:line="368" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="368" pos:column="61">linkname_len<pos:position pos:line="368" pos:column="73"/></name></expr></argument>)<pos:position pos:line="368" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="368" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><name pos:line="369" pos:column="33">bp<pos:position pos:line="369" pos:column="35"/></name> <operator pos:line="369" pos:column="36">+=<pos:position pos:line="369" pos:column="38"/></operator> <name pos:line="369" pos:column="39">SYMLINK_PREFIX_LEN<pos:position pos:line="369" pos:column="57"/></name></expr>;<pos:position pos:line="369" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="370" pos:column="33">linkname_len<pos:position pos:line="370" pos:column="45"/></name> <operator pos:line="370" pos:column="46">-=<pos:position pos:line="370" pos:column="48"/></operator> <name pos:line="370" pos:column="49">SYMLINK_PREFIX_LEN<pos:position pos:line="370" pos:column="67"/></name></expr>;<pos:position pos:line="370" pos:column="68"/></expr_stmt>
			}<pos:position pos:line="371" pos:column="26"/></block></then></if>
<cpp:ifdef pos:line="372" pos:column="1">#<cpp:directive pos:line="372" pos:column="2">ifdef<pos:position pos:line="372" pos:column="7"/></cpp:directive> <name pos:line="372" pos:column="8">ICONV_OPTION<pos:position pos:line="372" pos:column="20"/></name></cpp:ifdef>
			<if pos:line="373" pos:column="25">if <condition pos:line="373" pos:column="28">(<expr><name pos:line="373" pos:column="29">sender_symlink_iconv<pos:position pos:line="373" pos:column="49"/></name></expr>)<pos:position pos:line="373" pos:column="50"/></condition><then pos:line="373" pos:column="50"> <block pos:line="373" pos:column="51">{
				<decl_stmt><decl><type><name pos:line="374" pos:column="33">xbuf<pos:position pos:line="374" pos:column="37"/></name></type> <name pos:line="374" pos:column="38">outbuf<pos:position pos:line="374" pos:column="44"/></name></decl>, <decl><type ref="prev"/><name pos:line="374" pos:column="46">inbuf<pos:position pos:line="374" pos:column="51"/></name></decl>;<pos:position pos:line="374" pos:column="52"/></decl_stmt>

				<expr_stmt><expr><name pos:line="376" pos:column="33">alloc_len<pos:position pos:line="376" pos:column="42"/></name> <operator pos:line="376" pos:column="43">=<pos:position pos:line="376" pos:column="44"/></operator> <name pos:line="376" pos:column="45">linkname_len<pos:position pos:line="376" pos:column="57"/></name></expr>;<pos:position pos:line="376" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name pos:line="377" pos:column="33">linkname_len<pos:position pos:line="377" pos:column="45"/></name> <operator pos:line="377" pos:column="46">/=<pos:position pos:line="377" pos:column="48"/></operator> <literal type="number" pos:line="377" pos:column="49">2<pos:position pos:line="377" pos:column="50"/></literal></expr>;<pos:position pos:line="377" pos:column="51"/></expr_stmt>

				<comment type="block" pos:line="379" pos:column="33">/* Read the symlink data into the end of our double-sized
				 * buffer and then convert it into the right spot. */</comment>
				<expr_stmt><expr><call><name pos:line="381" pos:column="33">INIT_XBUF<pos:position pos:line="381" pos:column="42"/></name><argument_list pos:line="381" pos:column="42">(<argument><expr><name pos:line="381" pos:column="43">inbuf<pos:position pos:line="381" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="381" pos:column="50">bp<pos:position pos:line="381" pos:column="52"/></name> <operator pos:line="381" pos:column="53">+<pos:position pos:line="381" pos:column="54"/></operator> <name pos:line="381" pos:column="55">alloc_len<pos:position pos:line="381" pos:column="64"/></name> <operator pos:line="381" pos:column="65">-<pos:position pos:line="381" pos:column="66"/></operator> <name pos:line="381" pos:column="67">linkname_len<pos:position pos:line="381" pos:column="79"/></name></expr></argument>,
					  <argument><expr><name pos:line="382" pos:column="43">linkname_len<pos:position pos:line="382" pos:column="55"/></name> <operator pos:line="382" pos:column="56">-<pos:position pos:line="382" pos:column="57"/></operator> <literal type="number" pos:line="382" pos:column="58">1<pos:position pos:line="382" pos:column="59"/></literal></expr></argument>, <argument><expr><operator pos:line="382" pos:column="61">(<pos:position pos:line="382" pos:column="62"/></operator><name pos:line="382" pos:column="62">size_t<pos:position pos:line="382" pos:column="68"/></name><operator pos:line="382" pos:column="68">)<pos:position pos:line="382" pos:column="69"/></operator><operator pos:line="382" pos:column="69">-<pos:position pos:line="382" pos:column="70"/></operator><literal type="number" pos:line="382" pos:column="70">1<pos:position pos:line="382" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="382" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="73"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="383" pos:column="33">read_sbuf<pos:position pos:line="383" pos:column="42"/></name><argument_list pos:line="383" pos:column="42">(<argument><expr><name pos:line="383" pos:column="43">f<pos:position pos:line="383" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="383" pos:column="46">inbuf<pos:position pos:line="383" pos:column="51"/></name><operator pos:line="383" pos:column="51">.<pos:position pos:line="383" pos:column="52"/></operator><name pos:line="383" pos:column="52">buf<pos:position pos:line="383" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="383" pos:column="57">inbuf<pos:position pos:line="383" pos:column="62"/></name><operator pos:line="383" pos:column="62">.<pos:position pos:line="383" pos:column="63"/></operator><name pos:line="383" pos:column="63">len<pos:position pos:line="383" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="383" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="384" pos:column="33">INIT_XBUF<pos:position pos:line="384" pos:column="42"/></name><argument_list pos:line="384" pos:column="42">(<argument><expr><name pos:line="384" pos:column="43">outbuf<pos:position pos:line="384" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="51">bp<pos:position pos:line="384" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="384" pos:column="55">0<pos:position pos:line="384" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="384" pos:column="58">alloc_len<pos:position pos:line="384" pos:column="67"/></name></expr></argument>)<pos:position pos:line="384" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="69"/></expr_stmt>

				<if pos:line="386" pos:column="33">if <condition pos:line="386" pos:column="36">(<expr><call><name pos:line="386" pos:column="37">iconvbufs<pos:position pos:line="386" pos:column="46"/></name><argument_list pos:line="386" pos:column="46">(<argument><expr><name pos:line="386" pos:column="47">ic_recv<pos:position pos:line="386" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="386" pos:column="56">&amp;<pos:position pos:line="386" pos:column="61"/></operator><name pos:line="386" pos:column="57">inbuf<pos:position pos:line="386" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="386" pos:column="64">&amp;<pos:position pos:line="386" pos:column="69"/></operator><name pos:line="386" pos:column="65">outbuf<pos:position pos:line="386" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="386" pos:column="73">ICB_INIT<pos:position pos:line="386" pos:column="81"/></name></expr></argument>)<pos:position pos:line="386" pos:column="82"/></argument_list></call> <operator pos:line="386" pos:column="83">&lt;<pos:position pos:line="386" pos:column="87"/></operator> <literal type="number" pos:line="386" pos:column="85">0<pos:position pos:line="386" pos:column="86"/></literal></expr>)<pos:position pos:line="386" pos:column="87"/></condition><then pos:line="386" pos:column="87"> <block pos:line="386" pos:column="88">{
					<expr_stmt><expr><name pos:line="387" pos:column="41">io_error<pos:position pos:line="387" pos:column="49"/></name> <operator pos:line="387" pos:column="50">|=<pos:position pos:line="387" pos:column="52"/></operator> <name pos:line="387" pos:column="53">IOERR_GENERAL<pos:position pos:line="387" pos:column="66"/></name></expr>;<pos:position pos:line="387" pos:column="67"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="388" pos:column="41">rprintf<pos:position pos:line="388" pos:column="48"/></name><argument_list pos:line="388" pos:column="48">(<argument><expr><name pos:line="388" pos:column="49">FERROR_XFER<pos:position pos:line="388" pos:column="60"/></name></expr></argument>,
					    <argument><expr><literal type="string" pos:line="389" pos:column="45">"[%s] cannot convert symlink data for: %s (%s)\n"<pos:position pos:line="389" pos:column="94"/></literal></expr></argument>,
					    <argument><expr><call><name pos:line="390" pos:column="45">who_am_i<pos:position pos:line="390" pos:column="53"/></name><argument_list pos:line="390" pos:column="53">()<pos:position pos:line="390" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="390" pos:column="57">full_fname<pos:position pos:line="390" pos:column="67"/></name><argument_list pos:line="390" pos:column="67">(<argument><expr><name pos:line="390" pos:column="68">thisname<pos:position pos:line="390" pos:column="76"/></name></expr></argument>)<pos:position pos:line="390" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="390" pos:column="79">strerror<pos:position pos:line="390" pos:column="87"/></name><argument_list pos:line="390" pos:column="87">(<argument><expr><name pos:line="390" pos:column="88">errno<pos:position pos:line="390" pos:column="93"/></name></expr></argument>)<pos:position pos:line="390" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="390" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="96"/></expr_stmt>
					<expr_stmt><expr><name pos:line="391" pos:column="41">bp<pos:position pos:line="391" pos:column="43"/></name> <operator pos:line="391" pos:column="44">=<pos:position pos:line="391" pos:column="45"/></operator> <operator pos:line="391" pos:column="46">(<pos:position pos:line="391" pos:column="47"/></operator><name pos:line="391" pos:column="47">char<pos:position pos:line="391" pos:column="51"/></name><operator pos:line="391" pos:column="51">*<pos:position pos:line="391" pos:column="52"/></operator><operator pos:line="391" pos:column="52">)<pos:position pos:line="391" pos:column="53"/></operator><name><name pos:line="391" pos:column="53">file<pos:position pos:line="391" pos:column="57"/></name><operator pos:line="391" pos:column="57">-&gt;<pos:position pos:line="391" pos:column="62"/></operator><name pos:line="391" pos:column="59">basename<pos:position pos:line="391" pos:column="67"/></name></name></expr>;<pos:position pos:line="391" pos:column="68"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="392" pos:column="41">*<pos:position pos:line="392" pos:column="42"/></operator><name pos:line="392" pos:column="42">bp<pos:position pos:line="392" pos:column="44"/></name><operator pos:line="392" pos:column="44">++<pos:position pos:line="392" pos:column="46"/></operator> <operator pos:line="392" pos:column="47">=<pos:position pos:line="392" pos:column="48"/></operator> <literal type="char" pos:line="392" pos:column="49">'\0'<pos:position pos:line="392" pos:column="53"/></literal></expr>;<pos:position pos:line="392" pos:column="54"/></expr_stmt>
					<expr_stmt><expr><name><name pos:line="393" pos:column="41">outbuf<pos:position pos:line="393" pos:column="47"/></name><operator pos:line="393" pos:column="47">.<pos:position pos:line="393" pos:column="48"/></operator><name pos:line="393" pos:column="48">len<pos:position pos:line="393" pos:column="51"/></name></name> <operator pos:line="393" pos:column="52">=<pos:position pos:line="393" pos:column="53"/></operator> <literal type="number" pos:line="393" pos:column="54">0<pos:position pos:line="393" pos:column="55"/></literal></expr>;<pos:position pos:line="393" pos:column="56"/></expr_stmt>
				}<pos:position pos:line="394" pos:column="34"/></block></then></if>
				<expr_stmt><expr><name><name pos:line="395" pos:column="33">bp<pos:position pos:line="395" pos:column="35"/></name><index pos:line="395" pos:column="35">[<expr><name><name pos:line="395" pos:column="36">outbuf<pos:position pos:line="395" pos:column="42"/></name><operator pos:line="395" pos:column="42">.<pos:position pos:line="395" pos:column="43"/></operator><name pos:line="395" pos:column="43">len<pos:position pos:line="395" pos:column="46"/></name></name></expr>]<pos:position pos:line="395" pos:column="47"/></index></name> <operator pos:line="395" pos:column="48">=<pos:position pos:line="395" pos:column="49"/></operator> <literal type="char" pos:line="395" pos:column="50">'\0'<pos:position pos:line="395" pos:column="54"/></literal></expr>;<pos:position pos:line="395" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="396" pos:column="26"/></block></then> <else pos:line="396" pos:column="27">else
<cpp:endif pos:line="397" pos:column="1">#<cpp:directive pos:line="397" pos:column="2">endif<pos:position pos:line="397" pos:column="7"/></cpp:directive></cpp:endif>
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="398" pos:column="33">read_sbuf<pos:position pos:line="398" pos:column="42"/></name><argument_list pos:line="398" pos:column="42">(<argument><expr><name pos:line="398" pos:column="43">f<pos:position pos:line="398" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="398" pos:column="46">bp<pos:position pos:line="398" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="398" pos:column="50">linkname_len<pos:position pos:line="398" pos:column="62"/></name> <operator pos:line="398" pos:column="63">-<pos:position pos:line="398" pos:column="64"/></operator> <literal type="number" pos:line="398" pos:column="65">1<pos:position pos:line="398" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="398" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="68"/></expr_stmt></block></else></if>
			<if pos:line="399" pos:column="25">if <condition pos:line="399" pos:column="28">(<expr><name pos:line="399" pos:column="29">sanitize_paths<pos:position pos:line="399" pos:column="43"/></name> <operator pos:line="399" pos:column="44">&amp;&amp;<pos:position pos:line="399" pos:column="54"/></operator> <operator pos:line="399" pos:column="47">!<pos:position pos:line="399" pos:column="48"/></operator><name pos:line="399" pos:column="48">munge_symlinks<pos:position pos:line="399" pos:column="62"/></name> <operator pos:line="399" pos:column="63">&amp;&amp;<pos:position pos:line="399" pos:column="73"/></operator> <operator pos:line="399" pos:column="66">*<pos:position pos:line="399" pos:column="67"/></operator><name pos:line="399" pos:column="67">bp<pos:position pos:line="399" pos:column="69"/></name></expr>)<pos:position pos:line="399" pos:column="70"/></condition><then pos:line="399" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="400" pos:column="33">sanitize_path<pos:position pos:line="400" pos:column="46"/></name><argument_list pos:line="400" pos:column="46">(<argument><expr><name pos:line="400" pos:column="47">bp<pos:position pos:line="400" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="51">bp<pos:position pos:line="400" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="400" pos:column="55">""<pos:position pos:line="400" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="400" pos:column="59">lastdir_depth<pos:position pos:line="400" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="400" pos:column="74">SP_DEFAULT<pos:position pos:line="400" pos:column="84"/></name></expr></argument>)<pos:position pos:line="400" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="86"/></expr_stmt></block></then></if>
		}<pos:position pos:line="401" pos:column="18"/></block></else></if>
	}<pos:position pos:line="402" pos:column="10"/></block></then></if>
<cpp:endif pos:line="403" pos:column="1">#<cpp:directive pos:line="403" pos:column="2">endif<pos:position pos:line="403" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="405" pos:column="1">#<cpp:directive pos:line="405" pos:column="2">ifdef<pos:position pos:line="405" pos:column="7"/></cpp:directive> <name pos:line="405" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="405" pos:column="26"/></name></cpp:ifdef>
	<if pos:line="406" pos:column="9">if <condition pos:line="406" pos:column="12">(<expr><name pos:line="406" pos:column="13">preserve_hard_links<pos:position pos:line="406" pos:column="32"/></name> <operator pos:line="406" pos:column="33">&amp;&amp;<pos:position pos:line="406" pos:column="43"/></operator> <name pos:line="406" pos:column="36">xflags<pos:position pos:line="406" pos:column="42"/></name> <operator pos:line="406" pos:column="43">&amp;<pos:position pos:line="406" pos:column="48"/></operator> <name pos:line="406" pos:column="45">XMIT_HLINKED<pos:position pos:line="406" pos:column="57"/></name></expr>)<pos:position pos:line="406" pos:column="58"/></condition><then pos:line="406" pos:column="58"> <block pos:line="406" pos:column="59">{
		<if pos:line="407" pos:column="17">if <condition pos:line="407" pos:column="20">(<expr><name pos:line="407" pos:column="21">protocol_version<pos:position pos:line="407" pos:column="37"/></name> <operator pos:line="407" pos:column="38">&gt;=<pos:position pos:line="407" pos:column="43"/></operator> <literal type="number" pos:line="407" pos:column="41">30<pos:position pos:line="407" pos:column="43"/></literal></expr>)<pos:position pos:line="407" pos:column="44"/></condition><then pos:line="407" pos:column="44"> <block pos:line="407" pos:column="45">{
			<if pos:line="408" pos:column="25">if <condition pos:line="408" pos:column="28">(<expr><name pos:line="408" pos:column="29">xflags<pos:position pos:line="408" pos:column="35"/></name> <operator pos:line="408" pos:column="36">&amp;<pos:position pos:line="408" pos:column="41"/></operator> <name pos:line="408" pos:column="38">XMIT_HLINK_FIRST<pos:position pos:line="408" pos:column="54"/></name></expr>)<pos:position pos:line="408" pos:column="55"/></condition><then pos:line="408" pos:column="55"> <block pos:line="408" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="409" pos:column="33">F_HL_GNUM<pos:position pos:line="409" pos:column="42"/></name><argument_list pos:line="409" pos:column="42">(<argument><expr><name pos:line="409" pos:column="43">file<pos:position pos:line="409" pos:column="47"/></name></expr></argument>)<pos:position pos:line="409" pos:column="48"/></argument_list></call> <operator pos:line="409" pos:column="49">=<pos:position pos:line="409" pos:column="50"/></operator> <name><name pos:line="409" pos:column="51">flist<pos:position pos:line="409" pos:column="56"/></name><operator pos:line="409" pos:column="56">-&gt;<pos:position pos:line="409" pos:column="61"/></operator><name pos:line="409" pos:column="58">ndx_start<pos:position pos:line="409" pos:column="67"/></name></name> <operator pos:line="409" pos:column="68">+<pos:position pos:line="409" pos:column="69"/></operator> <name><name pos:line="409" pos:column="70">flist<pos:position pos:line="409" pos:column="75"/></name><operator pos:line="409" pos:column="75">-&gt;<pos:position pos:line="409" pos:column="80"/></operator><name pos:line="409" pos:column="77">used<pos:position pos:line="409" pos:column="81"/></name></name></expr>;<pos:position pos:line="409" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="410" pos:column="26"/></block></then> <else pos:line="410" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="411" pos:column="33">F_HL_GNUM<pos:position pos:line="411" pos:column="42"/></name><argument_list pos:line="411" pos:column="42">(<argument><expr><name pos:line="411" pos:column="43">file<pos:position pos:line="411" pos:column="47"/></name></expr></argument>)<pos:position pos:line="411" pos:column="48"/></argument_list></call> <operator pos:line="411" pos:column="49">=<pos:position pos:line="411" pos:column="50"/></operator> <name pos:line="411" pos:column="51">first_hlink_ndx<pos:position pos:line="411" pos:column="66"/></name></expr>;<pos:position pos:line="411" pos:column="67"/></expr_stmt></block></else></if>
		}<pos:position pos:line="412" pos:column="18"/></block></then> <else pos:line="412" pos:column="19">else <block pos:line="412" pos:column="24">{
			<decl_stmt><decl><specifier pos:line="413" pos:column="25">static<pos:position pos:line="413" pos:column="31"/></specifier> <type><name pos:line="413" pos:column="32">int32<pos:position pos:line="413" pos:column="37"/></name></type> <name pos:line="413" pos:column="38">cnt<pos:position pos:line="413" pos:column="41"/></name> <init pos:line="413" pos:column="42">= <expr><literal type="number" pos:line="413" pos:column="44">0<pos:position pos:line="413" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="413" pos:column="46"/></decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="414" pos:column="25">struct<pos:position pos:line="414" pos:column="31"/></name> <name pos:line="414" pos:column="32">ht_int64_node<pos:position pos:line="414" pos:column="45"/></name></name> <modifier pos:line="414" pos:column="46">*<pos:position pos:line="414" pos:column="47"/></modifier></type><name pos:line="414" pos:column="47">np<pos:position pos:line="414" pos:column="49"/></name></decl>;<pos:position pos:line="414" pos:column="50"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="415" pos:column="25">int64<pos:position pos:line="415" pos:column="30"/></name></type> <name pos:line="415" pos:column="31">ino<pos:position pos:line="415" pos:column="34"/></name></decl>;<pos:position pos:line="415" pos:column="35"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="416" pos:column="25">int32<pos:position pos:line="416" pos:column="30"/></name></type> <name pos:line="416" pos:column="31">ndx<pos:position pos:line="416" pos:column="34"/></name></decl>;<pos:position pos:line="416" pos:column="35"/></decl_stmt>
			<if pos:line="417" pos:column="25">if <condition pos:line="417" pos:column="28">(<expr><name pos:line="417" pos:column="29">protocol_version<pos:position pos:line="417" pos:column="45"/></name> <operator pos:line="417" pos:column="46">&lt;<pos:position pos:line="417" pos:column="50"/></operator> <literal type="number" pos:line="417" pos:column="48">26<pos:position pos:line="417" pos:column="50"/></literal></expr>)<pos:position pos:line="417" pos:column="51"/></condition><then pos:line="417" pos:column="51"> <block pos:line="417" pos:column="52">{
				<expr_stmt><expr><name pos:line="418" pos:column="33">dev<pos:position pos:line="418" pos:column="36"/></name> <operator pos:line="418" pos:column="37">=<pos:position pos:line="418" pos:column="38"/></operator> <call><name pos:line="418" pos:column="39">read_int<pos:position pos:line="418" pos:column="47"/></name><argument_list pos:line="418" pos:column="47">(<argument><expr><name pos:line="418" pos:column="48">f<pos:position pos:line="418" pos:column="49"/></name></expr></argument>)<pos:position pos:line="418" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="418" pos:column="51"/></expr_stmt>
				<expr_stmt><expr><name pos:line="419" pos:column="33">ino<pos:position pos:line="419" pos:column="36"/></name> <operator pos:line="419" pos:column="37">=<pos:position pos:line="419" pos:column="38"/></operator> <call><name pos:line="419" pos:column="39">read_int<pos:position pos:line="419" pos:column="47"/></name><argument_list pos:line="419" pos:column="47">(<argument><expr><name pos:line="419" pos:column="48">f<pos:position pos:line="419" pos:column="49"/></name></expr></argument>)<pos:position pos:line="419" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="419" pos:column="51"/></expr_stmt>
			}<pos:position pos:line="420" pos:column="26"/></block></then> <else pos:line="420" pos:column="27">else <block pos:line="420" pos:column="32">{
				<if pos:line="421" pos:column="33">if <condition pos:line="421" pos:column="36">(<expr><operator pos:line="421" pos:column="37">!<pos:position pos:line="421" pos:column="38"/></operator><operator pos:line="421" pos:column="38">(<pos:position pos:line="421" pos:column="39"/></operator><name pos:line="421" pos:column="39">xflags<pos:position pos:line="421" pos:column="45"/></name> <operator pos:line="421" pos:column="46">&amp;<pos:position pos:line="421" pos:column="51"/></operator> <name pos:line="421" pos:column="48">XMIT_SAME_DEV_pre30<pos:position pos:line="421" pos:column="67"/></name><operator pos:line="421" pos:column="67">)<pos:position pos:line="421" pos:column="68"/></operator></expr>)<pos:position pos:line="421" pos:column="69"/></condition><then pos:line="421" pos:column="69">
					<block type="pseudo"><expr_stmt><expr><name pos:line="422" pos:column="41">dev<pos:position pos:line="422" pos:column="44"/></name> <operator pos:line="422" pos:column="45">=<pos:position pos:line="422" pos:column="46"/></operator> <call><name pos:line="422" pos:column="47">read_longint<pos:position pos:line="422" pos:column="59"/></name><argument_list pos:line="422" pos:column="59">(<argument><expr><name pos:line="422" pos:column="60">f<pos:position pos:line="422" pos:column="61"/></name></expr></argument>)<pos:position pos:line="422" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="422" pos:column="63"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="423" pos:column="33">ino<pos:position pos:line="423" pos:column="36"/></name> <operator pos:line="423" pos:column="37">=<pos:position pos:line="423" pos:column="38"/></operator> <call><name pos:line="423" pos:column="39">read_longint<pos:position pos:line="423" pos:column="51"/></name><argument_list pos:line="423" pos:column="51">(<argument><expr><name pos:line="423" pos:column="52">f<pos:position pos:line="423" pos:column="53"/></name></expr></argument>)<pos:position pos:line="423" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="55"/></expr_stmt>
			}<pos:position pos:line="424" pos:column="26"/></block></else></if>
			<expr_stmt><expr><name pos:line="425" pos:column="25">np<pos:position pos:line="425" pos:column="27"/></name> <operator pos:line="425" pos:column="28">=<pos:position pos:line="425" pos:column="29"/></operator> <call><name pos:line="425" pos:column="30">idev_find<pos:position pos:line="425" pos:column="39"/></name><argument_list pos:line="425" pos:column="39">(<argument><expr><name pos:line="425" pos:column="40">dev<pos:position pos:line="425" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="425" pos:column="45">ino<pos:position pos:line="425" pos:column="48"/></name></expr></argument>)<pos:position pos:line="425" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="426" pos:column="25">ndx<pos:position pos:line="426" pos:column="28"/></name> <operator pos:line="426" pos:column="29">=<pos:position pos:line="426" pos:column="30"/></operator> <operator pos:line="426" pos:column="31">(<pos:position pos:line="426" pos:column="32"/></operator><name pos:line="426" pos:column="32">int32<pos:position pos:line="426" pos:column="37"/></name><operator pos:line="426" pos:column="37">)<pos:position pos:line="426" pos:column="38"/></operator><operator pos:line="426" pos:column="38">(<pos:position pos:line="426" pos:column="39"/></operator><name pos:line="426" pos:column="39">long<pos:position pos:line="426" pos:column="43"/></name><operator pos:line="426" pos:column="43">)<pos:position pos:line="426" pos:column="44"/></operator><name><name pos:line="426" pos:column="44">np<pos:position pos:line="426" pos:column="46"/></name><operator pos:line="426" pos:column="46">-&gt;<pos:position pos:line="426" pos:column="51"/></operator><name pos:line="426" pos:column="48">data<pos:position pos:line="426" pos:column="52"/></name></name> <operator pos:line="426" pos:column="53">-<pos:position pos:line="426" pos:column="54"/></operator> <literal type="number" pos:line="426" pos:column="55">1<pos:position pos:line="426" pos:column="56"/></literal></expr>;<pos:position pos:line="426" pos:column="57"/></expr_stmt>
			<if pos:line="427" pos:column="25">if <condition pos:line="427" pos:column="28">(<expr><name pos:line="427" pos:column="29">ndx<pos:position pos:line="427" pos:column="32"/></name> <operator pos:line="427" pos:column="33">&lt;<pos:position pos:line="427" pos:column="37"/></operator> <literal type="number" pos:line="427" pos:column="35">0<pos:position pos:line="427" pos:column="36"/></literal></expr>)<pos:position pos:line="427" pos:column="37"/></condition><then pos:line="427" pos:column="37"> <block pos:line="427" pos:column="38">{
				<expr_stmt><expr><name pos:line="428" pos:column="33">ndx<pos:position pos:line="428" pos:column="36"/></name> <operator pos:line="428" pos:column="37">=<pos:position pos:line="428" pos:column="38"/></operator> <name pos:line="428" pos:column="39">cnt<pos:position pos:line="428" pos:column="42"/></name><operator pos:line="428" pos:column="42">++<pos:position pos:line="428" pos:column="44"/></operator></expr>;<pos:position pos:line="428" pos:column="45"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="429" pos:column="33">np<pos:position pos:line="429" pos:column="35"/></name><operator pos:line="429" pos:column="35">-&gt;<pos:position pos:line="429" pos:column="40"/></operator><name pos:line="429" pos:column="37">data<pos:position pos:line="429" pos:column="41"/></name></name> <operator pos:line="429" pos:column="42">=<pos:position pos:line="429" pos:column="43"/></operator> <operator pos:line="429" pos:column="44">(<pos:position pos:line="429" pos:column="45"/></operator><name pos:line="429" pos:column="45">void<pos:position pos:line="429" pos:column="49"/></name><operator pos:line="429" pos:column="49">*<pos:position pos:line="429" pos:column="50"/></operator><operator pos:line="429" pos:column="50">)<pos:position pos:line="429" pos:column="51"/></operator><operator pos:line="429" pos:column="51">(<pos:position pos:line="429" pos:column="52"/></operator><name pos:line="429" pos:column="52">long<pos:position pos:line="429" pos:column="56"/></name><operator pos:line="429" pos:column="56">)<pos:position pos:line="429" pos:column="57"/></operator><name pos:line="429" pos:column="57">cnt<pos:position pos:line="429" pos:column="60"/></name></expr>;<pos:position pos:line="429" pos:column="61"/></expr_stmt>
			}<pos:position pos:line="430" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="431" pos:column="25">F_HL_GNUM<pos:position pos:line="431" pos:column="34"/></name><argument_list pos:line="431" pos:column="34">(<argument><expr><name pos:line="431" pos:column="35">file<pos:position pos:line="431" pos:column="39"/></name></expr></argument>)<pos:position pos:line="431" pos:column="40"/></argument_list></call> <operator pos:line="431" pos:column="41">=<pos:position pos:line="431" pos:column="42"/></operator> <name pos:line="431" pos:column="43">ndx<pos:position pos:line="431" pos:column="46"/></name></expr>;<pos:position pos:line="431" pos:column="47"/></expr_stmt>
		}<pos:position pos:line="432" pos:column="18"/></block></else></if>
	}<pos:position pos:line="433" pos:column="10"/></block></then></if>
<cpp:endif pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">endif<pos:position pos:line="434" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="436" pos:column="9">if <condition pos:line="436" pos:column="12">(<expr><name pos:line="436" pos:column="13">always_checksum<pos:position pos:line="436" pos:column="28"/></name> <operator pos:line="436" pos:column="29">&amp;&amp;<pos:position pos:line="436" pos:column="39"/></operator> <operator pos:line="436" pos:column="32">(<pos:position pos:line="436" pos:column="33"/></operator><call><name pos:line="436" pos:column="33">S_ISREG<pos:position pos:line="436" pos:column="40"/></name><argument_list pos:line="436" pos:column="40">(<argument><expr><name pos:line="436" pos:column="41">mode<pos:position pos:line="436" pos:column="45"/></name></expr></argument>)<pos:position pos:line="436" pos:column="46"/></argument_list></call> <operator pos:line="436" pos:column="47">||<pos:position pos:line="436" pos:column="49"/></operator> <name pos:line="436" pos:column="50">protocol_version<pos:position pos:line="436" pos:column="66"/></name> <operator pos:line="436" pos:column="67">&lt;<pos:position pos:line="436" pos:column="71"/></operator> <literal type="number" pos:line="436" pos:column="69">28<pos:position pos:line="436" pos:column="71"/></literal><operator pos:line="436" pos:column="71">)<pos:position pos:line="436" pos:column="72"/></operator></expr>)<pos:position pos:line="436" pos:column="73"/></condition><then pos:line="436" pos:column="73"> <block pos:line="436" pos:column="74">{
		<if pos:line="437" pos:column="17">if <condition pos:line="437" pos:column="20">(<expr><call><name pos:line="437" pos:column="21">S_ISREG<pos:position pos:line="437" pos:column="28"/></name><argument_list pos:line="437" pos:column="28">(<argument><expr><name pos:line="437" pos:column="29">mode<pos:position pos:line="437" pos:column="33"/></name></expr></argument>)<pos:position pos:line="437" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="437" pos:column="35"/></condition><then pos:line="437" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="438" pos:column="25">bp<pos:position pos:line="438" pos:column="27"/></name> <operator pos:line="438" pos:column="28">=<pos:position pos:line="438" pos:column="29"/></operator> <call><name pos:line="438" pos:column="30">F_SUM<pos:position pos:line="438" pos:column="35"/></name><argument_list pos:line="438" pos:column="35">(<argument><expr><name pos:line="438" pos:column="36">file<pos:position pos:line="438" pos:column="40"/></name></expr></argument>)<pos:position pos:line="438" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="42"/></expr_stmt></block></then>
		<else pos:line="439" pos:column="17">else <block pos:line="439" pos:column="22">{
			<comment type="block" pos:line="440" pos:column="25">/* Prior to 28, we get a useless set of nulls. */</comment>
			<expr_stmt><expr><name pos:line="441" pos:column="25">bp<pos:position pos:line="441" pos:column="27"/></name> <operator pos:line="441" pos:column="28">=<pos:position pos:line="441" pos:column="29"/></operator> <name pos:line="441" pos:column="30">tmp_sum<pos:position pos:line="441" pos:column="37"/></name></expr>;<pos:position pos:line="441" pos:column="38"/></expr_stmt>
		}<pos:position pos:line="442" pos:column="18"/></block></else></if>
		<if pos:line="443" pos:column="17">if <condition pos:line="443" pos:column="20">(<expr><name pos:line="443" pos:column="21">first_hlink_ndx<pos:position pos:line="443" pos:column="36"/></name> <operator pos:line="443" pos:column="37">&gt;=<pos:position pos:line="443" pos:column="42"/></operator> <name><name pos:line="443" pos:column="40">flist<pos:position pos:line="443" pos:column="45"/></name><operator pos:line="443" pos:column="45">-&gt;<pos:position pos:line="443" pos:column="50"/></operator><name pos:line="443" pos:column="47">ndx_start<pos:position pos:line="443" pos:column="56"/></name></name></expr>)<pos:position pos:line="443" pos:column="57"/></condition><then pos:line="443" pos:column="57"> <block pos:line="443" pos:column="58">{
			<decl_stmt><decl><type><name><name pos:line="444" pos:column="25">struct<pos:position pos:line="444" pos:column="31"/></name> <name pos:line="444" pos:column="32">file_struct<pos:position pos:line="444" pos:column="43"/></name></name> <modifier pos:line="444" pos:column="44">*<pos:position pos:line="444" pos:column="45"/></modifier></type><name pos:line="444" pos:column="45">first<pos:position pos:line="444" pos:column="50"/></name> <init pos:line="444" pos:column="51">= <expr><name><name pos:line="444" pos:column="53">flist<pos:position pos:line="444" pos:column="58"/></name><operator pos:line="444" pos:column="58">-&gt;<pos:position pos:line="444" pos:column="63"/></operator><name pos:line="444" pos:column="60">files<pos:position pos:line="444" pos:column="65"/></name><index pos:line="444" pos:column="65">[<expr><name pos:line="444" pos:column="66">first_hlink_ndx<pos:position pos:line="444" pos:column="81"/></name> <operator pos:line="444" pos:column="82">-<pos:position pos:line="444" pos:column="83"/></operator> <name><name pos:line="444" pos:column="84">flist<pos:position pos:line="444" pos:column="89"/></name><operator pos:line="444" pos:column="89">-&gt;<pos:position pos:line="444" pos:column="94"/></operator><name pos:line="444" pos:column="91">ndx_start<pos:position pos:line="444" pos:column="100"/></name></name></expr>]<pos:position pos:line="444" pos:column="101"/></index></name></expr></init></decl>;<pos:position pos:line="444" pos:column="102"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="445" pos:column="25">memcpy<pos:position pos:line="445" pos:column="31"/></name><argument_list pos:line="445" pos:column="31">(<argument><expr><name pos:line="445" pos:column="32">bp<pos:position pos:line="445" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="445" pos:column="36">F_SUM<pos:position pos:line="445" pos:column="41"/></name><argument_list pos:line="445" pos:column="41">(<argument><expr><name pos:line="445" pos:column="42">first<pos:position pos:line="445" pos:column="47"/></name></expr></argument>)<pos:position pos:line="445" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="445" pos:column="50">checksum_len<pos:position pos:line="445" pos:column="62"/></name></expr></argument>)<pos:position pos:line="445" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="445" pos:column="64"/></expr_stmt>
		}<pos:position pos:line="446" pos:column="18"/></block></then> <else pos:line="446" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="447" pos:column="25">read_buf<pos:position pos:line="447" pos:column="33"/></name><argument_list pos:line="447" pos:column="33">(<argument><expr><name pos:line="447" pos:column="34">f<pos:position pos:line="447" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="447" pos:column="37">bp<pos:position pos:line="447" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="447" pos:column="41">checksum_len<pos:position pos:line="447" pos:column="53"/></name></expr></argument>)<pos:position pos:line="447" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="55"/></expr_stmt></block></else></if>
	}<pos:position pos:line="448" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="450" pos:column="1">#<cpp:directive pos:line="450" pos:column="2">ifdef<pos:position pos:line="450" pos:column="7"/></cpp:directive> <name pos:line="450" pos:column="8">SUPPORT_ACLS<pos:position pos:line="450" pos:column="20"/></name></cpp:ifdef>
	<if pos:line="451" pos:column="9">if <condition pos:line="451" pos:column="12">(<expr><name pos:line="451" pos:column="13">preserve_acls<pos:position pos:line="451" pos:column="26"/></name> <operator pos:line="451" pos:column="27">&amp;&amp;<pos:position pos:line="451" pos:column="37"/></operator> <operator pos:line="451" pos:column="30">!<pos:position pos:line="451" pos:column="31"/></operator><call><name pos:line="451" pos:column="31">S_ISLNK<pos:position pos:line="451" pos:column="38"/></name><argument_list pos:line="451" pos:column="38">(<argument><expr><name pos:line="451" pos:column="39">mode<pos:position pos:line="451" pos:column="43"/></name></expr></argument>)<pos:position pos:line="451" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="451" pos:column="45"/></condition><then pos:line="451" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="452" pos:column="17">receive_acl<pos:position pos:line="452" pos:column="28"/></name><argument_list pos:line="452" pos:column="28">(<argument><expr><name pos:line="452" pos:column="29">f<pos:position pos:line="452" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="452" pos:column="32">file<pos:position pos:line="452" pos:column="36"/></name></expr></argument>)<pos:position pos:line="452" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="38"/></expr_stmt></block></then></if>
<cpp:endif pos:line="453" pos:column="1">#<cpp:directive pos:line="453" pos:column="2">endif<pos:position pos:line="453" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="454" pos:column="1">#<cpp:directive pos:line="454" pos:column="2">ifdef<pos:position pos:line="454" pos:column="7"/></cpp:directive> <name pos:line="454" pos:column="8">SUPPORT_XATTRS<pos:position pos:line="454" pos:column="22"/></name></cpp:ifdef>
	<if pos:line="455" pos:column="9">if <condition pos:line="455" pos:column="12">(<expr><name pos:line="455" pos:column="13">preserve_xattrs<pos:position pos:line="455" pos:column="28"/></name></expr>)<pos:position pos:line="455" pos:column="29"/></condition><then pos:line="455" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="456" pos:column="17">receive_xattr<pos:position pos:line="456" pos:column="30"/></name><argument_list pos:line="456" pos:column="30">(<argument><expr><name pos:line="456" pos:column="31">f<pos:position pos:line="456" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="34">file<pos:position pos:line="456" pos:column="38"/></name></expr></argument>)<pos:position pos:line="456" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="40"/></expr_stmt></block></then></if>
<cpp:endif pos:line="457" pos:column="1">#<cpp:directive pos:line="457" pos:column="2">endif<pos:position pos:line="457" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="459" pos:column="9">if <condition pos:line="459" pos:column="12">(<expr><call><name pos:line="459" pos:column="13">S_ISREG<pos:position pos:line="459" pos:column="20"/></name><argument_list pos:line="459" pos:column="20">(<argument><expr><name pos:line="459" pos:column="21">mode<pos:position pos:line="459" pos:column="25"/></name></expr></argument>)<pos:position pos:line="459" pos:column="26"/></argument_list></call> <operator pos:line="459" pos:column="27">||<pos:position pos:line="459" pos:column="29"/></operator> <call><name pos:line="459" pos:column="30">S_ISLNK<pos:position pos:line="459" pos:column="37"/></name><argument_list pos:line="459" pos:column="37">(<argument><expr><name pos:line="459" pos:column="38">mode<pos:position pos:line="459" pos:column="42"/></name></expr></argument>)<pos:position pos:line="459" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="459" pos:column="44"/></condition><then pos:line="459" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="460" pos:column="17">stats<pos:position pos:line="460" pos:column="22"/></name><operator pos:line="460" pos:column="22">.<pos:position pos:line="460" pos:column="23"/></operator><name pos:line="460" pos:column="23">total_size<pos:position pos:line="460" pos:column="33"/></name></name> <operator pos:line="460" pos:column="34">+=<pos:position pos:line="460" pos:column="36"/></operator> <name pos:line="460" pos:column="37">file_length<pos:position pos:line="460" pos:column="48"/></name></expr>;<pos:position pos:line="460" pos:column="49"/></expr_stmt></block></then></if>

	<return pos:line="462" pos:column="9">return <expr><name pos:line="462" pos:column="16">file<pos:position pos:line="462" pos:column="20"/></name></expr>;<pos:position pos:line="462" pos:column="21"/></return>
}<pos:position pos:line="463" pos:column="2"/></block></function></unit>

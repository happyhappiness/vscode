<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_379_rsync-2.5.5.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">inflate_blocks_free<pos:position pos:line="1" pos:column="24"/></name><argument_list pos:line="1" pos:column="24">(<argument><expr><name pos:line="1" pos:column="25">s<pos:position pos:line="1" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="28">z<pos:position pos:line="1" pos:column="29"/></name></expr></argument>)<pos:position pos:line="1" pos:column="30"/></argument_list>
<name pos:line="2" pos:column="1">inflate_blocks_statef<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier><name pos:line="2" pos:column="24">s<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">z_streamp<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">z<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">inflate_blocks_reset<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">s<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">z<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">Z_NULL<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">ZFREE<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><name pos:line="6" pos:column="9">z<pos:position pos:line="6" pos:column="10"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="12">s<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">window<pos:position pos:line="6" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">ZFREE<pos:position pos:line="7" pos:column="8"/></name><argument_list pos:line="7" pos:column="8">(<argument><expr><name pos:line="7" pos:column="9">z<pos:position pos:line="7" pos:column="10"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="12">s<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">hufts<pos:position pos:line="7" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">ZFREE<pos:position pos:line="8" pos:column="8"/></name><argument_list pos:line="8" pos:column="8">(<argument><expr><name pos:line="8" pos:column="9">z<pos:position pos:line="8" pos:column="10"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="12">s<pos:position pos:line="8" pos:column="13"/></name></expr></argument>)<pos:position pos:line="8" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">Tracev<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">stderr<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">,<pos:position pos:line="9" pos:column="18"/></operator> <literal type="string" pos:line="9" pos:column="19">"inflate:   blocks freed\n"<pos:position pos:line="9" pos:column="46"/></literal><operator pos:line="9" pos:column="46">)<pos:position pos:line="9" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
  <return pos:line="10" pos:column="3">return <expr><name pos:line="10" pos:column="10">Z_OK<pos:position pos:line="10" pos:column="14"/></name></expr>;<pos:position pos:line="10" pos:column="15"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></unit>

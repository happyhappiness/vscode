<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_68_rsync-3.0.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_cvs_excludes<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">uint32<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">mflags<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">initialized<pos:position pos:line="3" pos:column="31"/></name> <init pos:line="3" pos:column="32">= <expr><literal type="number" pos:line="3" pos:column="34">0<pos:position pos:line="3" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="18">fname<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><name pos:line="4" pos:column="24">MAXPATHLEN<pos:position pos:line="4" pos:column="34"/></name></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">initialized<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="8" pos:column="9">initialized<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="23">1<pos:position pos:line="8" pos:column="24"/></literal></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">parse_rule<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><operator pos:line="10" pos:column="20">&amp;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="21">cvs_filter_list<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="38">default_cvsignore<pos:position pos:line="10" pos:column="55"/></name></expr></argument>,
		   <argument><expr><name pos:line="11" pos:column="20">mflags<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">|<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">(<pos:position pos:line="11" pos:column="30"/></operator><ternary><condition><expr><name pos:line="11" pos:column="30">protocol_version<pos:position pos:line="11" pos:column="46"/></name> <operator pos:line="11" pos:column="47">&gt;=<pos:position pos:line="11" pos:column="52"/></operator> <literal type="number" pos:line="11" pos:column="50">30<pos:position pos:line="11" pos:column="52"/></literal></expr> ?<pos:position pos:line="11" pos:column="54"/></condition><then pos:line="11" pos:column="54"> <expr><name pos:line="11" pos:column="55">MATCHFLG_PERISHABLE<pos:position pos:line="11" pos:column="74"/></name></expr> <pos:position pos:line="11" pos:column="75"/></then><else pos:line="11" pos:column="75">: <expr><literal type="number" pos:line="11" pos:column="77">0<pos:position pos:line="11" pos:column="78"/></literal></expr></else></ternary><operator pos:line="11" pos:column="78">)<pos:position pos:line="11" pos:column="79"/></operator></expr></argument>,
		   <argument><expr><literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="14" pos:column="13">module_id<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">&gt;=<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="26">0<pos:position pos:line="14" pos:column="27"/></literal> <operator pos:line="14" pos:column="28">&amp;&amp;<pos:position pos:line="14" pos:column="38"/></operator> <call><name pos:line="14" pos:column="31">lp_use_chroot<pos:position pos:line="14" pos:column="44"/></name><argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">module_id<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr> ?<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57"> <expr><literal type="string" pos:line="14" pos:column="58">"/"<pos:position pos:line="14" pos:column="61"/></literal></expr> <pos:position pos:line="14" pos:column="62"/></then><else pos:line="14" pos:column="62">: <expr><call><name pos:line="14" pos:column="64">getenv<pos:position pos:line="14" pos:column="70"/></name><argument_list pos:line="14" pos:column="70">(<argument><expr><literal type="string" pos:line="14" pos:column="71">"HOME"<pos:position pos:line="14" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="14" pos:column="79"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">p<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">&amp;&amp;<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="18">pathjoin<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">fname<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">MAXPATHLEN<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">p<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="49">".cvsignore"<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call> <operator pos:line="15" pos:column="63">&lt;<pos:position pos:line="15" pos:column="67"/></operator> <name pos:line="15" pos:column="65">MAXPATHLEN<pos:position pos:line="15" pos:column="75"/></name></expr>)<pos:position pos:line="15" pos:column="76"/></condition><then pos:line="15" pos:column="76">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="17">parse_filter_file<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><operator pos:line="16" pos:column="35">&amp;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="36">cvs_filter_list<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">fname<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">mflags<pos:position pos:line="16" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="68">0<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">parse_rule<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><operator pos:line="18" pos:column="20">&amp;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="21">cvs_filter_list<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="38">getenv<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><literal type="string" pos:line="18" pos:column="45">"CVSIGNORE"<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">mflags<pos:position pos:line="18" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="67">0<pos:position pos:line="18" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

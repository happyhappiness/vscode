<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_34_rsync-3.0.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sparse_end<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="22"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">sparse_seek<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">do_lseek<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">f<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="21">sparse_seek<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">-<pos:position pos:line="8" pos:column="33"/></operator><literal type="number" pos:line="8" pos:column="33">1<pos:position pos:line="8" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="36">SEEK_CUR<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">sparse_seek<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

	<do pos:line="11" pos:column="9">do <block pos:line="11" pos:column="12">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">ret<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">write<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">f<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">""<pos:position pos:line="12" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="36">1<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block> while <condition pos:line="13" pos:column="17">(<expr><name pos:line="13" pos:column="18">ret<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&lt;<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal> <operator pos:line="13" pos:column="26">&amp;&amp;<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="29">errno<pos:position pos:line="13" pos:column="34"/></name> <operator pos:line="13" pos:column="35">==<pos:position pos:line="13" pos:column="37"/></operator> <name pos:line="13" pos:column="38">EINTR<pos:position pos:line="13" pos:column="43"/></name></expr>)<pos:position pos:line="13" pos:column="44"/></condition>;<pos:position pos:line="13" pos:column="45"/></do>

	<return pos:line="15" pos:column="9">return <expr><ternary><condition><expr><name pos:line="15" pos:column="16">ret<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">&lt;=<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr> ?<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <expr><operator pos:line="15" pos:column="27">-<pos:position pos:line="15" pos:column="28"/></operator><literal type="number" pos:line="15" pos:column="28">1<pos:position pos:line="15" pos:column="29"/></literal></expr> <pos:position pos:line="15" pos:column="30"/></then><else pos:line="15" pos:column="30">: <expr><literal type="number" pos:line="15" pos:column="32">0<pos:position pos:line="15" pos:column="33"/></literal></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="34"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

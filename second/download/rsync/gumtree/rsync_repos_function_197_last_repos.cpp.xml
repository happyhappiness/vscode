<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_197_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">get_backup_name<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">fname<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">backup_dir<pos:position pos:line="3" pos:column="23"/></name></expr>)<pos:position pos:line="3" pos:column="24"/></condition><then pos:line="3" pos:column="24"> <block pos:line="3" pos:column="25">{
		<decl_stmt><decl><specifier pos:line="4" pos:column="17">static<pos:position pos:line="4" pos:column="23"/></specifier> <type><name pos:line="4" pos:column="24">int<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">initialized<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><literal type="number" pos:line="4" pos:column="42">0<pos:position pos:line="4" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><operator pos:line="5" pos:column="21">!<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">initialized<pos:position pos:line="5" pos:column="33"/></name></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <block pos:line="5" pos:column="35">{
			<decl_stmt><decl><type><name pos:line="6" pos:column="25">int<pos:position pos:line="6" pos:column="28"/></name></type> <name pos:line="6" pos:column="29">ret<pos:position pos:line="6" pos:column="32"/></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt>
			<if pos:line="7" pos:column="25">if <condition pos:line="7" pos:column="28">(<expr><name pos:line="7" pos:column="29">backup_dir_len<pos:position pos:line="7" pos:column="43"/></name> <operator pos:line="7" pos:column="44">&gt;<pos:position pos:line="7" pos:column="48"/></operator> <literal type="number" pos:line="7" pos:column="46">1<pos:position pos:line="7" pos:column="47"/></literal></expr>)<pos:position pos:line="7" pos:column="48"/></condition><then pos:line="7" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="33">backup_dir_buf<pos:position pos:line="8" pos:column="47"/></name><index pos:line="8" pos:column="47">[<expr><name pos:line="8" pos:column="48">backup_dir_len<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">-<pos:position pos:line="8" pos:column="63"/></operator><literal type="number" pos:line="8" pos:column="63">1<pos:position pos:line="8" pos:column="64"/></literal></expr>]<pos:position pos:line="8" pos:column="65"/></index></name> <operator pos:line="8" pos:column="66">=<pos:position pos:line="8" pos:column="67"/></operator> <literal type="char" pos:line="8" pos:column="68">'\0'<pos:position pos:line="8" pos:column="72"/></literal></expr>;<pos:position pos:line="8" pos:column="73"/></expr_stmt></block></then></if>
			<expr_stmt><expr><name pos:line="9" pos:column="25">ret<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">make_path<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">backup_dir_buf<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="57">0<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="60"/></expr_stmt>
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">backup_dir_len<pos:position pos:line="10" pos:column="43"/></name> <operator pos:line="10" pos:column="44">&gt;<pos:position pos:line="10" pos:column="48"/></operator> <literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="33">backup_dir_buf<pos:position pos:line="11" pos:column="47"/></name><index pos:line="11" pos:column="47">[<expr><name pos:line="11" pos:column="48">backup_dir_len<pos:position pos:line="11" pos:column="62"/></name><operator pos:line="11" pos:column="62">-<pos:position pos:line="11" pos:column="63"/></operator><literal type="number" pos:line="11" pos:column="63">1<pos:position pos:line="11" pos:column="64"/></literal></expr>]<pos:position pos:line="11" pos:column="65"/></index></name> <operator pos:line="11" pos:column="66">=<pos:position pos:line="11" pos:column="67"/></operator> <literal type="char" pos:line="11" pos:column="68">'/'<pos:position pos:line="11" pos:column="71"/></literal></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt></block></then></if>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><name pos:line="12" pos:column="29">ret<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">&lt;<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr>)<pos:position pos:line="12" pos:column="37"/></condition><then pos:line="12" pos:column="37">
				<block type="pseudo"><return pos:line="13" pos:column="33">return <expr><name pos:line="13" pos:column="40">NULL<pos:position pos:line="13" pos:column="44"/></name></expr>;<pos:position pos:line="13" pos:column="45"/></return></block></then></if>
			<expr_stmt><expr><name pos:line="14" pos:column="25">initialized<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <literal type="number" pos:line="14" pos:column="39">1<pos:position pos:line="14" pos:column="40"/></literal></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="15" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="16" pos:column="17">/* copy fname into backup_dir_buf while validating the dirs. */</comment>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><call><name pos:line="17" pos:column="21">copy_valid_path<pos:position pos:line="17" pos:column="36"/></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">fname<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="44"/></condition><then pos:line="17" pos:column="44">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><name pos:line="18" pos:column="32">backup_dir_buf<pos:position pos:line="18" pos:column="46"/></name></expr>;<pos:position pos:line="18" pos:column="47"/></return></block></then></if>
		<comment type="block" pos:line="19" pos:column="17">/* copy_valid_path() has printed an error message. */</comment>
		<return pos:line="20" pos:column="17">return <expr><name pos:line="20" pos:column="24">NULL<pos:position pos:line="20" pos:column="28"/></name></expr>;<pos:position pos:line="20" pos:column="29"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">stringjoin<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">backup_dir_buf<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">MAXPATHLEN<pos:position pos:line="23" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="52">fname<pos:position pos:line="23" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="59">backup_suffix<pos:position pos:line="23" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="74">NULL<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call> <operator pos:line="23" pos:column="80">&lt;<pos:position pos:line="23" pos:column="84"/></operator> <name pos:line="23" pos:column="82">MAXPATHLEN<pos:position pos:line="23" pos:column="92"/></name></expr>)<pos:position pos:line="23" pos:column="93"/></condition><then pos:line="23" pos:column="93">
		<block type="pseudo"><return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">backup_dir_buf<pos:position pos:line="24" pos:column="38"/></name></expr>;<pos:position pos:line="24" pos:column="39"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">rprintf<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">FERROR<pos:position pos:line="26" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"backup filename too long\n"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt>
	<return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

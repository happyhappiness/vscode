<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_426_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">EatComment<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">( <parameter><decl><type><name pos:line="1" pos:column="24">FILE<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">InFile<pos:position pos:line="1" pos:column="36"/></name></decl></parameter> )<pos:position pos:line="1" pos:column="38"/></parameter_list>
  <comment type="block" pos:line="2" pos:column="3">/* ------------------------------------------------------------------------ **
   * Scan to the end of a comment.
   *
   *  Input:  InFile  - Input source.
   *
   *  Output: The character that marks the end of the comment.  Normally,
   *          this will be a newline, but it *might* be an EOF.
   *
   *  Notes:  Because the config files use a line-oriented grammar, we
   *          explicitly exclude the newline character from the list of
   *          whitespace characters.
   *        - Note that both EOF (-1) and the nul character ('\0') are
   *          considered end-of-file markers.
   *
   * ------------------------------------------------------------------------ **
   */</comment>
  <block pos:line="18" pos:column="3">{
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">c<pos:position pos:line="19" pos:column="8"/></name></decl>;<pos:position pos:line="19" pos:column="9"/></decl_stmt>

  <for pos:line="21" pos:column="3">for<control pos:line="21" pos:column="6">( <init><expr><name pos:line="21" pos:column="8">c<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">getc<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">( <argument><expr><name pos:line="21" pos:column="18">InFile<pos:position pos:line="21" pos:column="24"/></name></expr></argument> )<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="27"/></init> <condition><expr><operator pos:line="21" pos:column="28">(<pos:position pos:line="21" pos:column="29"/></operator><literal type="char" pos:line="21" pos:column="29">'\n'<pos:position pos:line="21" pos:column="33"/></literal><operator pos:line="21" pos:column="33">!=<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">c<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">)<pos:position pos:line="21" pos:column="37"/></operator> <operator pos:line="21" pos:column="38">&amp;&amp;<pos:position pos:line="21" pos:column="48"/></operator> <operator pos:line="21" pos:column="41">(<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">EOF<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">!=<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="47">c<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">)<pos:position pos:line="21" pos:column="49"/></operator> <operator pos:line="21" pos:column="50">&amp;&amp;<pos:position pos:line="21" pos:column="60"/></operator> <operator pos:line="21" pos:column="53">(<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">c<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">&gt;<pos:position pos:line="21" pos:column="59"/></operator><literal type="number" pos:line="21" pos:column="56">0<pos:position pos:line="21" pos:column="57"/></literal><operator pos:line="21" pos:column="57">)<pos:position pos:line="21" pos:column="58"/></operator></expr>;<pos:position pos:line="21" pos:column="59"/></condition> <incr><expr><name pos:line="21" pos:column="60">c<pos:position pos:line="21" pos:column="61"/></name> <operator pos:line="21" pos:column="62">=<pos:position pos:line="21" pos:column="63"/></operator> <call><name pos:line="21" pos:column="64">getc<pos:position pos:line="21" pos:column="68"/></name><argument_list pos:line="21" pos:column="68">( <argument><expr><name pos:line="21" pos:column="70">InFile<pos:position pos:line="21" pos:column="76"/></name></expr></argument> )<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr></incr> )<pos:position pos:line="21" pos:column="80"/></control>
    <block type="pseudo"><empty_stmt pos:line="22" pos:column="5">;<pos:position pos:line="22" pos:column="6"/></empty_stmt></block></for>
  <return pos:line="23" pos:column="3">return<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator> <name pos:line="23" pos:column="11">c<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">)<pos:position pos:line="23" pos:column="14"/></operator></expr>;<pos:position pos:line="23" pos:column="15"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></function></unit>

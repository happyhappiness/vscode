<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_709_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fmtstr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">buffer<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">size_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">currlen<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">size_t<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">maxlen<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">value<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">flags<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">min<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">int<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">max<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">padlen<pos:position pos:line="4" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="21">strln<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>     <comment type="block" pos:line="4" pos:column="32">/* amount to pad */</comment>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">cnt<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">DEBUG_SNPRINTF<pos:position pos:line="7" pos:column="22"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">printf<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="string" pos:line="8" pos:column="16">"fmtstr min=%d max=%d s=[%s]\n"<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="49">min<pos:position pos:line="8" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="54">max<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">value<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">value<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">value<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <literal type="string" pos:line="11" pos:column="25">"&lt;NULL&gt;"<pos:position pos:line="11" pos:column="39"/></literal></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<for pos:line="14" pos:column="9">for <control pos:line="14" pos:column="13">(<init><expr><name pos:line="14" pos:column="14">strln<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></init> <condition><expr><name pos:line="14" pos:column="25">strln<pos:position pos:line="14" pos:column="30"/></name> <operator pos:line="14" pos:column="31">&lt;<pos:position pos:line="14" pos:column="35"/></operator> <name pos:line="14" pos:column="33">max<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">&amp;&amp;<pos:position pos:line="14" pos:column="47"/></operator> <name><name pos:line="14" pos:column="40">value<pos:position pos:line="14" pos:column="45"/></name><index pos:line="14" pos:column="45">[<expr><name pos:line="14" pos:column="46">strln<pos:position pos:line="14" pos:column="51"/></name></expr>]<pos:position pos:line="14" pos:column="52"/></index></name></expr>;<pos:position pos:line="14" pos:column="53"/></condition> <incr><expr><operator pos:line="14" pos:column="54">++<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">strln<pos:position pos:line="14" pos:column="61"/></name></expr></incr>)<pos:position pos:line="14" pos:column="62"/></control><block type="pseudo"><empty_stmt pos:line="14" pos:column="62">;<pos:position pos:line="14" pos:column="63"/></empty_stmt></block></for> <comment type="block" pos:line="14" pos:column="64">/* strlen */</comment>
	<expr_stmt><expr><name pos:line="15" pos:column="9">padlen<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <name pos:line="15" pos:column="18">min<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">-<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">strln<pos:position pos:line="15" pos:column="29"/></name></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">padlen<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&lt;<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24"> 
		<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="17">padlen<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <literal type="number" pos:line="17" pos:column="26">0<pos:position pos:line="17" pos:column="27"/></literal></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt></block></then></if>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">flags<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">&amp;<pos:position pos:line="18" pos:column="24"/></operator> <name pos:line="18" pos:column="21">DP_F_MINUS<pos:position pos:line="18" pos:column="31"/></name></expr>)<pos:position pos:line="18" pos:column="32"/></condition><then pos:line="18" pos:column="32"> 
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">padlen<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <operator pos:line="19" pos:column="26">-<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">padlen<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt></block></then></if> <comment type="block" pos:line="19" pos:column="35">/* Left Justify */</comment>
	
	<while pos:line="21" pos:column="9">while <condition pos:line="21" pos:column="15">(<expr><name pos:line="21" pos:column="16">padlen<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&gt;<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr>)<pos:position pos:line="21" pos:column="27"/></condition> <block pos:line="21" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">dopr_outch<pos:position pos:line="22" pos:column="27"/></name> <argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">buffer<pos:position pos:line="22" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="37">currlen<pos:position pos:line="22" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">maxlen<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="54">' '<pos:position pos:line="22" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="23" pos:column="17">--<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">padlen<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></while>
	<while pos:line="25" pos:column="9">while <condition pos:line="25" pos:column="15">(<expr><operator pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">value<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&amp;&amp;<pos:position pos:line="25" pos:column="33"/></operator> <operator pos:line="25" pos:column="26">(<pos:position pos:line="25" pos:column="27"/></operator><name pos:line="25" pos:column="27">cnt<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">&lt;<pos:position pos:line="25" pos:column="35"/></operator> <name pos:line="25" pos:column="33">max<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">)<pos:position pos:line="25" pos:column="37"/></operator></expr>)<pos:position pos:line="25" pos:column="38"/></condition> <block pos:line="25" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">dopr_outch<pos:position pos:line="26" pos:column="27"/></name> <argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">buffer<pos:position pos:line="26" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="37">currlen<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">maxlen<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="54">*<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">value<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">++<pos:position pos:line="26" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="27" pos:column="17">++<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">cnt<pos:position pos:line="27" pos:column="22"/></name></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></while>
	<while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><name pos:line="29" pos:column="16">padlen<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">&lt;<pos:position pos:line="29" pos:column="27"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr>)<pos:position pos:line="29" pos:column="27"/></condition> <block pos:line="29" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">dopr_outch<pos:position pos:line="30" pos:column="27"/></name> <argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">buffer<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">currlen<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">maxlen<pos:position pos:line="30" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="30" pos:column="54">' '<pos:position pos:line="30" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="31" pos:column="17">++<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">padlen<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></while>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

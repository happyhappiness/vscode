<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_251_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">is_a_socket<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">int<pos:position pos:line="1" pos:column="20"/></name></type> <name pos:line="1" pos:column="21">fd<pos:position pos:line="1" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">v<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">socklen_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">l<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><sizeof pos:line="4" pos:column="23">sizeof <argument_list pos:line="4" pos:column="30">(<argument><expr><name pos:line="4" pos:column="31">int<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Parameters to getsockopt, setsockopt etc are very
	 * unstandardized across platforms, so don't be surprised if
	 * there are compiler warnings on e.g. SCO OpenSwerver or AIX.
	 * It seems they all eventually get the right idea.
	 *
	 * Debian says: ``The fifth argument of getsockopt and
	 * setsockopt is in reality an int [*] (and this is what BSD
	 * 4.* and libc4 and libc5 have).  Some POSIX confusion
	 * resulted in the present socklen_t.  The draft standard has
	 * not been adopted yet, but glibc2 already follows it and
	 * also has socklen_t [*]. See also accept(2).''
	 *
	 * We now return to your regularly scheduled programming.  */</comment>
	<return pos:line="19" pos:column="9">return <expr><call><name pos:line="19" pos:column="16">getsockopt<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">fd<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="31">SOL_SOCKET<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">SO_TYPE<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="52">(<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">char<pos:position pos:line="19" pos:column="57"/></name> <operator pos:line="19" pos:column="58">*<pos:position pos:line="19" pos:column="59"/></operator><operator pos:line="19" pos:column="59">)<pos:position pos:line="19" pos:column="60"/></operator><operator pos:line="19" pos:column="60">&amp;<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="61">v<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="64">&amp;<pos:position pos:line="19" pos:column="69"/></operator><name pos:line="19" pos:column="65">l<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call> <operator pos:line="19" pos:column="68">==<pos:position pos:line="19" pos:column="70"/></operator> <literal type="number" pos:line="19" pos:column="71">0<pos:position pos:line="19" pos:column="72"/></literal></expr>;<pos:position pos:line="19" pos:column="73"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

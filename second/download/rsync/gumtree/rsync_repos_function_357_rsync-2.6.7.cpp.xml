<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_357_rsync-2.6.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_directory<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">f<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">file_list<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">flist<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>,
			   <parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">fbuf<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">len<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">dirent<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">di<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">remainder<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">p<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">DIR<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">d<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">start<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><name><name pos:line="8" pos:column="21">flist<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">-&gt;<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="28">count<pos:position pos:line="8" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">d<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">opendir<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">fbuf<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call><operator pos:line="10" pos:column="32">)<pos:position pos:line="10" pos:column="33"/></operator></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">io_error<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">|=<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">IOERR_GENERAL<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rsyserr<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FERROR<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="33">errno<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="40">"opendir %s failed"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="61">full_fname<pos:position pos:line="12" pos:column="71"/></name><argument_list pos:line="12" pos:column="71">(<argument><expr><name pos:line="12" pos:column="72">fbuf<pos:position pos:line="12" pos:column="76"/></name></expr></argument>)<pos:position pos:line="12" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>
		<return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">p<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <name pos:line="16" pos:column="13">fbuf<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">+<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">len<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">!=<pos:position pos:line="17" pos:column="19"/></operator> <literal type="number" pos:line="17" pos:column="20">1<pos:position pos:line="17" pos:column="21"/></literal> <operator pos:line="17" pos:column="22">||<pos:position pos:line="17" pos:column="24"/></operator> <operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">fbuf<pos:position pos:line="17" pos:column="30"/></name> <operator pos:line="17" pos:column="31">!=<pos:position pos:line="17" pos:column="33"/></operator> <literal type="char" pos:line="17" pos:column="34">'/'<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">p<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">++<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="char" pos:line="18" pos:column="24">'/'<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">p<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="char" pos:line="19" pos:column="14">'\0'<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="20" pos:column="9">remainder<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">MAXPATHLEN<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">-<pos:position pos:line="20" pos:column="33"/></operator> <operator pos:line="20" pos:column="34">(<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="35">p<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">-<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">fbuf<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">)<pos:position pos:line="20" pos:column="44"/></operator></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>

	<for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">errno<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="22">0<pos:position pos:line="22" pos:column="23"/></literal></expr><operator pos:line="22" pos:column="23">,<pos:position pos:line="22" pos:column="24"/></operator> <expr><name pos:line="22" pos:column="25">di<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <call><name pos:line="22" pos:column="30">readdir<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">d<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></init> <condition><expr><name pos:line="22" pos:column="42">di<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></condition> <incr><expr><name pos:line="22" pos:column="46">errno<pos:position pos:line="22" pos:column="51"/></name> <operator pos:line="22" pos:column="52">=<pos:position pos:line="22" pos:column="53"/></operator> <literal type="number" pos:line="22" pos:column="54">0<pos:position pos:line="22" pos:column="55"/></literal></expr><operator pos:line="22" pos:column="55">,<pos:position pos:line="22" pos:column="56"/></operator> <expr><name pos:line="22" pos:column="57">di<pos:position pos:line="22" pos:column="59"/></name> <operator pos:line="22" pos:column="60">=<pos:position pos:line="22" pos:column="61"/></operator> <call><name pos:line="22" pos:column="62">readdir<pos:position pos:line="22" pos:column="69"/></name><argument_list pos:line="22" pos:column="69">(<argument><expr><name pos:line="22" pos:column="70">d<pos:position pos:line="22" pos:column="71"/></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr></incr>)<pos:position pos:line="22" pos:column="73"/></control> <block pos:line="22" pos:column="74">{
		<decl_stmt><decl><type><name pos:line="23" pos:column="17">char<pos:position pos:line="23" pos:column="21"/></name> <modifier pos:line="23" pos:column="22">*<pos:position pos:line="23" pos:column="23"/></modifier></type><name pos:line="23" pos:column="23">dname<pos:position pos:line="23" pos:column="28"/></name> <init pos:line="23" pos:column="29">= <expr><call><name pos:line="23" pos:column="31">d_name<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">di<pos:position pos:line="23" pos:column="40"/></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="42"/></decl_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name><name pos:line="24" pos:column="21">dname<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[<expr><literal type="number" pos:line="24" pos:column="27">0<pos:position pos:line="24" pos:column="28"/></literal></expr>]<pos:position pos:line="24" pos:column="29"/></index></name> <operator pos:line="24" pos:column="30">==<pos:position pos:line="24" pos:column="32"/></operator> <literal type="char" pos:line="24" pos:column="33">'.'<pos:position pos:line="24" pos:column="36"/></literal> <operator pos:line="24" pos:column="37">&amp;&amp;<pos:position pos:line="24" pos:column="47"/></operator> <operator pos:line="24" pos:column="40">(<pos:position pos:line="24" pos:column="41"/></operator><name><name pos:line="24" pos:column="41">dname<pos:position pos:line="24" pos:column="46"/></name><index pos:line="24" pos:column="46">[<expr><literal type="number" pos:line="24" pos:column="47">1<pos:position pos:line="24" pos:column="48"/></literal></expr>]<pos:position pos:line="24" pos:column="49"/></index></name> <operator pos:line="24" pos:column="50">==<pos:position pos:line="24" pos:column="52"/></operator> <literal type="char" pos:line="24" pos:column="53">'\0'<pos:position pos:line="24" pos:column="57"/></literal>
		    <operator pos:line="25" pos:column="21">||<pos:position pos:line="25" pos:column="23"/></operator> <operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><name><name pos:line="25" pos:column="25">dname<pos:position pos:line="25" pos:column="30"/></name><index pos:line="25" pos:column="30">[<expr><literal type="number" pos:line="25" pos:column="31">1<pos:position pos:line="25" pos:column="32"/></literal></expr>]<pos:position pos:line="25" pos:column="33"/></index></name> <operator pos:line="25" pos:column="34">==<pos:position pos:line="25" pos:column="36"/></operator> <literal type="char" pos:line="25" pos:column="37">'.'<pos:position pos:line="25" pos:column="40"/></literal> <operator pos:line="25" pos:column="41">&amp;&amp;<pos:position pos:line="25" pos:column="51"/></operator> <name><name pos:line="25" pos:column="44">dname<pos:position pos:line="25" pos:column="49"/></name><index pos:line="25" pos:column="49">[<expr><literal type="number" pos:line="25" pos:column="50">2<pos:position pos:line="25" pos:column="51"/></literal></expr>]<pos:position pos:line="25" pos:column="52"/></index></name> <operator pos:line="25" pos:column="53">==<pos:position pos:line="25" pos:column="55"/></operator> <literal type="char" pos:line="25" pos:column="56">'\0'<pos:position pos:line="25" pos:column="60"/></literal><operator pos:line="25" pos:column="60">)<pos:position pos:line="25" pos:column="61"/></operator><operator pos:line="25" pos:column="61">)<pos:position pos:line="25" pos:column="62"/></operator></expr>)<pos:position pos:line="25" pos:column="63"/></condition><then pos:line="25" pos:column="63">
			<block type="pseudo"><continue pos:line="26" pos:column="25">continue;<pos:position pos:line="26" pos:column="34"/></continue></block></then></if>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><call><name pos:line="27" pos:column="21">strlcpy<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">p<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="32">dname<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="39">remainder<pos:position pos:line="27" pos:column="48"/></name></expr></argument>)<pos:position pos:line="27" pos:column="49"/></argument_list></call> <operator pos:line="27" pos:column="50">&gt;=<pos:position pos:line="27" pos:column="55"/></operator> <name pos:line="27" pos:column="53">remainder<pos:position pos:line="27" pos:column="62"/></name></expr>)<pos:position pos:line="27" pos:column="63"/></condition><then pos:line="27" pos:column="63"> <block pos:line="27" pos:column="64">{
			<expr_stmt><expr><name pos:line="28" pos:column="25">io_error<pos:position pos:line="28" pos:column="33"/></name> <operator pos:line="28" pos:column="34">|=<pos:position pos:line="28" pos:column="36"/></operator> <name pos:line="28" pos:column="37">IOERR_GENERAL<pos:position pos:line="28" pos:column="50"/></name></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">rprintf<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">FINFO<pos:position pos:line="29" pos:column="38"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="30" pos:column="33">"cannot send long-named file %s\n"<pos:position pos:line="30" pos:column="67"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="31" pos:column="33">full_fname<pos:position pos:line="31" pos:column="43"/></name><argument_list pos:line="31" pos:column="43">(<argument><expr><name pos:line="31" pos:column="44">fbuf<pos:position pos:line="31" pos:column="48"/></name></expr></argument>)<pos:position pos:line="31" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
			<continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="35" pos:column="17">send_file_name<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">f<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="35">flist<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">fbuf<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">NULL<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="54">0<pos:position pos:line="35" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="38" pos:column="9">fbuf<pos:position pos:line="38" pos:column="13"/></name><index pos:line="38" pos:column="13">[<expr><name pos:line="38" pos:column="14">len<pos:position pos:line="38" pos:column="17"/></name></expr>]<pos:position pos:line="38" pos:column="18"/></index></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <literal type="char" pos:line="38" pos:column="21">'\0'<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">errno<pos:position pos:line="40" pos:column="18"/></name></expr>)<pos:position pos:line="40" pos:column="19"/></condition><then pos:line="40" pos:column="19"> <block pos:line="40" pos:column="20">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">io_error<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">|=<pos:position pos:line="41" pos:column="28"/></operator> <name pos:line="41" pos:column="29">IOERR_GENERAL<pos:position pos:line="41" pos:column="42"/></name></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">rsyserr<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">FERROR<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">errno<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="40">"readdir(%s)"<pos:position pos:line="42" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="55">full_fname<pos:position pos:line="42" pos:column="65"/></name><argument_list pos:line="42" pos:column="65">(<argument><expr><name pos:line="42" pos:column="66">fbuf<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="45" pos:column="9">closedir<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">d<pos:position pos:line="45" pos:column="19"/></name></expr></argument>)<pos:position pos:line="45" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="21"/></expr_stmt>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">recurse<pos:position pos:line="47" pos:column="20"/></name></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21"> <block pos:line="47" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">int<pos:position pos:line="48" pos:column="20"/></name></type> <name pos:line="48" pos:column="21">i<pos:position pos:line="48" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="48" pos:column="24">end<pos:position pos:line="48" pos:column="27"/></name> <init pos:line="48" pos:column="28">= <expr><name><name pos:line="48" pos:column="30">flist<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">count<pos:position pos:line="48" pos:column="42"/></name></name> <operator pos:line="48" pos:column="43">-<pos:position pos:line="48" pos:column="44"/></operator> <literal type="number" pos:line="48" pos:column="45">1<pos:position pos:line="48" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="48" pos:column="47"/></decl_stmt>
		<for pos:line="49" pos:column="17">for <control pos:line="49" pos:column="21">(<init><expr><name pos:line="49" pos:column="22">i<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">=<pos:position pos:line="49" pos:column="25"/></operator> <name pos:line="49" pos:column="26">start<pos:position pos:line="49" pos:column="31"/></name></expr>;<pos:position pos:line="49" pos:column="32"/></init> <condition><expr><name pos:line="49" pos:column="33">i<pos:position pos:line="49" pos:column="34"/></name> <operator pos:line="49" pos:column="35">&lt;=<pos:position pos:line="49" pos:column="40"/></operator> <name pos:line="49" pos:column="38">end<pos:position pos:line="49" pos:column="41"/></name></expr>;<pos:position pos:line="49" pos:column="42"/></condition> <incr><expr><name pos:line="49" pos:column="43">i<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">++<pos:position pos:line="49" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="47"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">send_if_directory<pos:position pos:line="50" pos:column="42"/></name><argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">f<pos:position pos:line="50" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="46">flist<pos:position pos:line="50" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="53">flist<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">-&gt;<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="60">files<pos:position pos:line="50" pos:column="65"/></name><index pos:line="50" pos:column="65">[<expr><name pos:line="50" pos:column="66">i<pos:position pos:line="50" pos:column="67"/></name></expr>]<pos:position pos:line="50" pos:column="68"/></index></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="70">fbuf<pos:position pos:line="50" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="76">len<pos:position pos:line="50" pos:column="79"/></name></expr></argument>)<pos:position pos:line="50" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="81"/></expr_stmt></block></for>
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

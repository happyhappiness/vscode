<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_115_rsync-2.6.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">io_flush<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">flush_it_all<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">msg2genr_flush<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">flush_it_all<pos:position pos:line="3" pos:column="36"/></name></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="4" pos:column="9">msg2sndr_flush<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">iobuf_out_cnt<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">||<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">no_flush<pos:position pos:line="6" pos:column="39"/></name></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">io_multiplexing_out<pos:position pos:line="9" pos:column="32"/></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="17">mplex_write<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">MSG_DATA<pos:position pos:line="10" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">iobuf_out<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">iobuf_out_cnt<pos:position pos:line="10" pos:column="63"/></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt></block></then>
	<else pos:line="11" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">writefd_unbuffered<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><name pos:line="12" pos:column="36">sock_f_out<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">iobuf_out<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="59">iobuf_out_cnt<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="74"/></expr_stmt></block></else></if>
	<expr_stmt><expr><name pos:line="13" pos:column="9">iobuf_out_cnt<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <literal type="number" pos:line="13" pos:column="25">0<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

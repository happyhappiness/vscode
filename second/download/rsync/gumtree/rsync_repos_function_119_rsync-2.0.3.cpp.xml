<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_119_rsync-2.0.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">set_blocking<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">fd<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">int<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">set<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">val<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">O_NONBLOCK<pos:position pos:line="4" pos:column="18"/></name></cpp:ifdef>
<cpp:define pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">define<pos:position pos:line="5" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="5" pos:column="9">FLAG_TO_SET<pos:position pos:line="5" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="5" pos:column="21">O_NONBLOCK<pos:position pos:line="5" pos:column="31"/></cpp:value></cpp:define>
<cpp:else pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">else<pos:position pos:line="6" pos:column="6"/></cpp:directive></cpp:else>
<cpp:ifdef pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">ifdef<pos:position pos:line="7" pos:column="7"/></cpp:directive> <name pos:line="7" pos:column="8">SYSV<pos:position pos:line="7" pos:column="12"/></name></cpp:ifdef>
<cpp:define pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">define<pos:position pos:line="8" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="8" pos:column="9">FLAG_TO_SET<pos:position pos:line="8" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="8" pos:column="21">O_NDELAY<pos:position pos:line="8" pos:column="29"/></cpp:value></cpp:define>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="9" pos:column="7">/* BSD */</comment>
<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">FLAG_TO_SET<pos:position pos:line="10" pos:column="20"/></name></cpp:macro> <cpp:value pos:line="10" pos:column="21">FNDELAY<pos:position pos:line="10" pos:column="28"/></cpp:value></cpp:define>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="14" pos:column="3">if<condition pos:line="14" pos:column="5">(<expr><operator pos:line="14" pos:column="6">(<pos:position pos:line="14" pos:column="7"/></operator><name pos:line="14" pos:column="7">val<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <call><name pos:line="14" pos:column="13">fcntl<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name pos:line="14" pos:column="19">fd<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="23">F_GETFL<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="32">0<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></call><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator> <operator pos:line="14" pos:column="36">==<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="39">-<pos:position pos:line="14" pos:column="40"/></operator><literal type="number" pos:line="14" pos:column="40">1<pos:position pos:line="14" pos:column="41"/></literal></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42">
	<block type="pseudo"><return pos:line="15" pos:column="9">return <expr><operator pos:line="15" pos:column="16">-<pos:position pos:line="15" pos:column="17"/></operator><literal type="number" pos:line="15" pos:column="17">1<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></return></block></then></if>
  <if pos:line="16" pos:column="3">if<condition pos:line="16" pos:column="5">(<expr><name pos:line="16" pos:column="6">set<pos:position pos:line="16" pos:column="9"/></name></expr>)<pos:position pos:line="16" pos:column="10"/></condition><then pos:line="16" pos:column="10"> <comment type="block" pos:line="16" pos:column="11">/* Turn blocking on - ie. clear nonblock flag */</comment>
	<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">val<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">&amp;=<pos:position pos:line="17" pos:column="19"/></operator> <operator pos:line="17" pos:column="16">~<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">FLAG_TO_SET<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt></block></then>
  <else pos:line="18" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">val<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">|=<pos:position pos:line="19" pos:column="11"/></operator> <name pos:line="19" pos:column="12">FLAG_TO_SET<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt></block></else></if>
  <return pos:line="20" pos:column="3">return <expr><call><name pos:line="20" pos:column="10">fcntl<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">( <argument><expr><name pos:line="20" pos:column="17">fd<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="21">F_SETFL<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="30">val<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></return>
<cpp:undef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">undef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">FLAG_TO_SET<pos:position pos:line="21" pos:column="19"/></name></cpp:undef>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

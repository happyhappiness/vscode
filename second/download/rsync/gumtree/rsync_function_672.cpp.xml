<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_672.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sock_exec<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">prog<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name><name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name><index pos:line="3" pos:column="15">[<expr><literal type="number" pos:line="3" pos:column="16">2<pos:position pos:line="3" pos:column="17"/></literal></expr>]<pos:position pos:line="3" pos:column="18"/></index></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">socketpair_tcp<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">fd<pos:position pos:line="4" pos:column="30"/></name></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call> <operator pos:line="4" pos:column="32">!=<pos:position pos:line="4" pos:column="34"/></operator> <literal type="number" pos:line="4" pos:column="35">0<pos:position pos:line="4" pos:column="36"/></literal></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37"> <block pos:line="4" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="5" pos:column="17">rprintf<pos:position pos:line="5" pos:column="24"/></name> <argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">FERROR<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">RSYNC_NAME<pos:position pos:line="5" pos:column="44"/></name>
			 <literal type="string" pos:line="6" pos:column="26">": socketpair_tcp failed (%s)\n"<pos:position pos:line="6" pos:column="58"/></literal></expr></argument>,
			 <argument><expr><call><name pos:line="7" pos:column="26">strerror<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">errno<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
		<return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">-<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal></expr>;<pos:position pos:line="8" pos:column="27"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">fork<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call> <operator pos:line="10" pos:column="20">==<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">close<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name><name pos:line="11" pos:column="23">fd<pos:position pos:line="11" pos:column="25"/></name><index pos:line="11" pos:column="25">[<expr><literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>]<pos:position pos:line="11" pos:column="28"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">close<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">close<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">dup<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name><name pos:line="14" pos:column="21">fd<pos:position pos:line="14" pos:column="23"/></name><index pos:line="14" pos:column="23">[<expr><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>]<pos:position pos:line="14" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">dup<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name><name pos:line="15" pos:column="21">fd<pos:position pos:line="15" pos:column="23"/></name><index pos:line="15" pos:column="23">[<expr><literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>]<pos:position pos:line="15" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">verbose<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">&gt;<pos:position pos:line="16" pos:column="33"/></operator> <literal type="number" pos:line="16" pos:column="31">3<pos:position pos:line="16" pos:column="32"/></literal></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">fprintf<pos:position pos:line="17" pos:column="32"/></name> <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">stderr<pos:position pos:line="17" pos:column="40"/></name></expr></argument>,
				 <argument><expr><name pos:line="18" pos:column="34">RSYNC_NAME<pos:position pos:line="18" pos:column="44"/></name> <literal type="string" pos:line="18" pos:column="45">": execute socket program \"%s\"\n"<pos:position pos:line="18" pos:column="80"/></literal></expr></argument>,
				 <argument><expr><name pos:line="19" pos:column="34">prog<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">exit<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><call><name pos:line="20" pos:column="23">system<pos:position pos:line="20" pos:column="29"/></name> <argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">prog<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">close<pos:position pos:line="22" pos:column="14"/></name> <argument_list pos:line="22" pos:column="15">(<argument><expr><name><name pos:line="22" pos:column="16">fd<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><literal type="number" pos:line="22" pos:column="19">1<pos:position pos:line="22" pos:column="20"/></literal></expr>]<pos:position pos:line="22" pos:column="21"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
	<return pos:line="23" pos:column="9">return <expr><name><name pos:line="23" pos:column="16">fd<pos:position pos:line="23" pos:column="18"/></name><index pos:line="23" pos:column="18">[<expr><literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>]<pos:position pos:line="23" pos:column="21"/></index></name></expr>;<pos:position pos:line="23" pos:column="22"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

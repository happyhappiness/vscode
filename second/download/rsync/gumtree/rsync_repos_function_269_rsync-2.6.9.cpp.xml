<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_269_rsync-2.6.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">human_dnum<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">double<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">dnum<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">decimal_digits<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><call><name pos:line="3" pos:column="21">human_num<pos:position pos:line="3" pos:column="30"/></name><argument_list pos:line="3" pos:column="30">(<argument><expr><name pos:line="3" pos:column="31">dnum<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">strlen<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name pos:line="4" pos:column="26">buf<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">isdigit<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><operator pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></operator><operator pos:line="5" pos:column="22">(<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="23">uchar<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><operator pos:line="5" pos:column="29">)<pos:position pos:line="5" pos:column="30"/></operator><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">buf<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">+<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">len<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-<pos:position pos:line="5" pos:column="39"/></operator><literal type="number" pos:line="5" pos:column="39">1<pos:position pos:line="5" pos:column="40"/></literal><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43"> <block pos:line="5" pos:column="44">{
		<comment type="block" pos:line="6" pos:column="17">/* There's extra room in buf prior to the start of the num. */</comment>
		<expr_stmt><expr><name pos:line="7" pos:column="17">buf<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">-=<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">decimal_digits<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">+<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">1<pos:position pos:line="7" pos:column="42"/></literal></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="8" pos:column="17">snprintf<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">buf<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">len<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">+<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">decimal_digits<pos:position pos:line="8" pos:column="51"/></name> <operator pos:line="8" pos:column="52">+<pos:position pos:line="8" pos:column="53"/></operator> <literal type="number" pos:line="8" pos:column="54">2<pos:position pos:line="8" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="57">"%.*f"<pos:position pos:line="8" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="65">decimal_digits<pos:position pos:line="8" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="81">dnum<pos:position pos:line="8" pos:column="85"/></name></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="87"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>
	<return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">buf<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

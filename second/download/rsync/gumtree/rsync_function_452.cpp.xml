<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_452.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">do_cmd<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">char<pos:position pos:line="1" pos:column="23"/></name> <modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">cmd<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">machine<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">user<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="54">char<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">path<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">f_in<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="75">int<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">f_out<pos:position pos:line="1" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="86"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name><name pos:line="3" pos:column="15">args<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[<expr><literal type="number" pos:line="3" pos:column="20">100<pos:position pos:line="3" pos:column="23"/></literal></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="15">argc<pos:position pos:line="4" pos:column="19"/></name><init pos:line="4" pos:column="19">=<expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">ret<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">tok<pos:position pos:line="5" pos:column="18"/></name></decl>,<modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="20">dir<pos:position pos:line="5" pos:column="23"/></name><init pos:line="5" pos:column="23">=<expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">local_server<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">cmd<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">cmd<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">getenv<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><name pos:line="9" pos:column="38">RSYNC_RSH_ENV<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt></block></then></if>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">cmd<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">cmd<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <name pos:line="11" pos:column="31">RSYNC_RSH<pos:position pos:line="11" pos:column="40"/></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">cmd<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <call><name pos:line="12" pos:column="23">strdup<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">cmd<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">!<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">cmd<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> 
			<block type="pseudo"><goto pos:line="14" pos:column="25">goto <name pos:line="14" pos:column="30">oom<pos:position pos:line="14" pos:column="33"/></name>;<pos:position pos:line="14" pos:column="34"/></goto></block></then></if>

		<for pos:line="16" pos:column="17">for <control pos:line="16" pos:column="21">(<init><expr><name pos:line="16" pos:column="22">tok<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator><call><name pos:line="16" pos:column="26">strtok<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">cmd<pos:position pos:line="16" pos:column="36"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="37">" "<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></init><condition><expr><name pos:line="16" pos:column="42">tok<pos:position pos:line="16" pos:column="45"/></name></expr>;<pos:position pos:line="16" pos:column="46"/></condition><incr><expr><name pos:line="16" pos:column="46">tok<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">=<pos:position pos:line="16" pos:column="50"/></operator><call><name pos:line="16" pos:column="50">strtok<pos:position pos:line="16" pos:column="56"/></name><argument_list pos:line="16" pos:column="56">(<argument><expr><name pos:line="16" pos:column="57">NULL<pos:position pos:line="16" pos:column="61"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="62">" "<pos:position pos:line="16" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr></incr>)<pos:position pos:line="16" pos:column="67"/></control> <block pos:line="16" pos:column="68">{
			<expr_stmt><expr><name><name pos:line="17" pos:column="25">args<pos:position pos:line="17" pos:column="29"/></name><index pos:line="17" pos:column="29">[<expr><name pos:line="17" pos:column="30">argc<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">++<pos:position pos:line="17" pos:column="36"/></operator></expr>]<pos:position pos:line="17" pos:column="37"/></index></name> <operator pos:line="17" pos:column="38">=<pos:position pos:line="17" pos:column="39"/></operator> <name pos:line="17" pos:column="40">tok<pos:position pos:line="17" pos:column="43"/></name></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></for>

<cpp:if pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">if<pos:position pos:line="20" pos:column="4"/></cpp:directive> <expr><name pos:line="20" pos:column="5">HAVE_REMSH<pos:position pos:line="20" pos:column="15"/></name></expr></cpp:if>
		<comment type="block" pos:line="21" pos:column="17">/* remsh (on HPUX) takes the arguments the other way around */</comment>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">args<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><name pos:line="22" pos:column="22">argc<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">++<pos:position pos:line="22" pos:column="28"/></operator></expr>]<pos:position pos:line="22" pos:column="29"/></index></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">machine<pos:position pos:line="22" pos:column="39"/></name></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><name pos:line="23" pos:column="21">user<pos:position pos:line="23" pos:column="25"/></name></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26"> <block pos:line="23" pos:column="27">{
			<expr_stmt><expr><name><name pos:line="24" pos:column="25">args<pos:position pos:line="24" pos:column="29"/></name><index pos:line="24" pos:column="29">[<expr><name pos:line="24" pos:column="30">argc<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">++<pos:position pos:line="24" pos:column="36"/></operator></expr>]<pos:position pos:line="24" pos:column="37"/></index></name> <operator pos:line="24" pos:column="38">=<pos:position pos:line="24" pos:column="39"/></operator> <literal type="string" pos:line="24" pos:column="40">"-l"<pos:position pos:line="24" pos:column="44"/></literal></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="25" pos:column="25">args<pos:position pos:line="25" pos:column="29"/></name><index pos:line="25" pos:column="29">[<expr><name pos:line="25" pos:column="30">argc<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">++<pos:position pos:line="25" pos:column="36"/></operator></expr>]<pos:position pos:line="25" pos:column="37"/></index></name> <operator pos:line="25" pos:column="38">=<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="40">user<pos:position pos:line="25" pos:column="44"/></name></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">user<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
			<expr_stmt><expr><name><name pos:line="29" pos:column="25">args<pos:position pos:line="29" pos:column="29"/></name><index pos:line="29" pos:column="29">[<expr><name pos:line="29" pos:column="30">argc<pos:position pos:line="29" pos:column="34"/></name><operator pos:line="29" pos:column="34">++<pos:position pos:line="29" pos:column="36"/></operator></expr>]<pos:position pos:line="29" pos:column="37"/></index></name> <operator pos:line="29" pos:column="38">=<pos:position pos:line="29" pos:column="39"/></operator> <literal type="string" pos:line="29" pos:column="40">"-l"<pos:position pos:line="29" pos:column="44"/></literal></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="30" pos:column="25">args<pos:position pos:line="30" pos:column="29"/></name><index pos:line="30" pos:column="29">[<expr><name pos:line="30" pos:column="30">argc<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">++<pos:position pos:line="30" pos:column="36"/></operator></expr>]<pos:position pos:line="30" pos:column="37"/></index></name> <operator pos:line="30" pos:column="38">=<pos:position pos:line="30" pos:column="39"/></operator> <name pos:line="30" pos:column="40">user<pos:position pos:line="30" pos:column="44"/></name></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">args<pos:position pos:line="32" pos:column="21"/></name><index pos:line="32" pos:column="21">[<expr><name pos:line="32" pos:column="22">argc<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">++<pos:position pos:line="32" pos:column="28"/></operator></expr>]<pos:position pos:line="32" pos:column="29"/></index></name> <operator pos:line="32" pos:column="30">=<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">machine<pos:position pos:line="32" pos:column="39"/></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

		<expr_stmt><expr><name><name pos:line="35" pos:column="17">args<pos:position pos:line="35" pos:column="21"/></name><index pos:line="35" pos:column="21">[<expr><name pos:line="35" pos:column="22">argc<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">++<pos:position pos:line="35" pos:column="28"/></operator></expr>]<pos:position pos:line="35" pos:column="29"/></index></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="32">rsync_path<pos:position pos:line="35" pos:column="42"/></name></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="37" pos:column="17">server_options<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">args<pos:position pos:line="37" pos:column="36"/></name></expr></argument>,<argument><expr><operator pos:line="37" pos:column="37">&amp;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="38">argc<pos:position pos:line="37" pos:column="42"/></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="40" pos:column="9">args<pos:position pos:line="40" pos:column="13"/></name><index pos:line="40" pos:column="13">[<expr><name pos:line="40" pos:column="14">argc<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">++<pos:position pos:line="40" pos:column="20"/></operator></expr>]<pos:position pos:line="40" pos:column="21"/></index></name> <operator pos:line="40" pos:column="22">=<pos:position pos:line="40" pos:column="23"/></operator> <literal type="string" pos:line="40" pos:column="24">"."<pos:position pos:line="40" pos:column="27"/></literal></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">path<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">&amp;&amp;<pos:position pos:line="42" pos:column="28"/></operator> <operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">path<pos:position pos:line="42" pos:column="26"/></name></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> 
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="17">args<pos:position pos:line="43" pos:column="21"/></name><index pos:line="43" pos:column="21">[<expr><name pos:line="43" pos:column="22">argc<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">++<pos:position pos:line="43" pos:column="28"/></operator></expr>]<pos:position pos:line="43" pos:column="29"/></index></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">path<pos:position pos:line="43" pos:column="36"/></name></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name><name pos:line="45" pos:column="9">args<pos:position pos:line="45" pos:column="13"/></name><index pos:line="45" pos:column="13">[<expr><name pos:line="45" pos:column="14">argc<pos:position pos:line="45" pos:column="18"/></name></expr>]<pos:position pos:line="45" pos:column="19"/></index></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">NULL<pos:position pos:line="45" pos:column="26"/></name></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">verbose<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">&gt;<pos:position pos:line="47" pos:column="25"/></operator> <literal type="number" pos:line="47" pos:column="23">3<pos:position pos:line="47" pos:column="24"/></literal></expr>)<pos:position pos:line="47" pos:column="25"/></condition><then pos:line="47" pos:column="25"> <block pos:line="47" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">fprintf<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">FINFO<pos:position pos:line="48" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="48" pos:column="31">"cmd="<pos:position pos:line="48" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
		<for pos:line="49" pos:column="17">for <control pos:line="49" pos:column="21">(<init><expr><name pos:line="49" pos:column="22">i<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">=<pos:position pos:line="49" pos:column="24"/></operator><literal type="number" pos:line="49" pos:column="24">0<pos:position pos:line="49" pos:column="25"/></literal></expr>;<pos:position pos:line="49" pos:column="26"/></init><condition><expr><name pos:line="49" pos:column="26">i<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">&lt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">argc<pos:position pos:line="49" pos:column="32"/></name></expr>;<pos:position pos:line="49" pos:column="33"/></condition><incr><expr><name pos:line="49" pos:column="33">i<pos:position pos:line="49" pos:column="34"/></name><operator pos:line="49" pos:column="34">++<pos:position pos:line="49" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="37"/></control>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="25">fprintf<pos:position pos:line="50" pos:column="32"/></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">FINFO<pos:position pos:line="50" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="50" pos:column="39">"%s "<pos:position pos:line="50" pos:column="44"/></literal></expr></argument>,<argument><expr><name><name pos:line="50" pos:column="45">args<pos:position pos:line="50" pos:column="49"/></name><index pos:line="50" pos:column="49">[<expr><name pos:line="50" pos:column="50">i<pos:position pos:line="50" pos:column="51"/></name></expr>]<pos:position pos:line="50" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt></block></for>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">fprintf<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">FINFO<pos:position pos:line="51" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="51" pos:column="31">"\n"<pos:position pos:line="51" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">local_server<pos:position pos:line="54" pos:column="25"/></name></expr>)<pos:position pos:line="54" pos:column="26"/></condition><then pos:line="54" pos:column="26"> <block pos:line="54" pos:column="27">{
		<expr_stmt><expr><name pos:line="55" pos:column="17">ret<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name pos:line="55" pos:column="23">local_child<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">argc<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">args<pos:position pos:line="55" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">f_in<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="53">f_out<pos:position pos:line="55" pos:column="58"/></name></expr></argument>)<pos:position pos:line="55" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="56" pos:column="10"/></block></then> <else pos:line="56" pos:column="11">else <block pos:line="56" pos:column="16">{
		<expr_stmt><expr><name pos:line="57" pos:column="17">ret<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <call><name pos:line="57" pos:column="23">piped_child<pos:position pos:line="57" pos:column="34"/></name><argument_list pos:line="57" pos:column="34">(<argument><expr><name pos:line="57" pos:column="35">args<pos:position pos:line="57" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="40">f_in<pos:position pos:line="57" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="45">f_out<pos:position pos:line="57" pos:column="50"/></name></expr></argument>)<pos:position pos:line="57" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></else></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">dir<pos:position pos:line="60" pos:column="16"/></name></expr>)<pos:position pos:line="60" pos:column="17"/></condition><then pos:line="60" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="18">free<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">dir<pos:position pos:line="60" pos:column="26"/></name></expr></argument>)<pos:position pos:line="60" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt></block></then></if>

	<return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">ret<pos:position pos:line="62" pos:column="19"/></name></expr>;<pos:position pos:line="62" pos:column="20"/></return>

<label><name pos:line="64" pos:column="1">oom<pos:position pos:line="64" pos:column="4"/></name>:<pos:position pos:line="64" pos:column="5"/></label>
	<expr_stmt><expr><call><name pos:line="65" pos:column="9">out_of_memory<pos:position pos:line="65" pos:column="22"/></name><argument_list pos:line="65" pos:column="22">(<argument><expr><literal type="string" pos:line="65" pos:column="23">"do_cmd"<pos:position pos:line="65" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
	<return pos:line="66" pos:column="9">return <expr><literal type="number" pos:line="66" pos:column="16">0<pos:position pos:line="66" pos:column="17"/></literal></expr>;<pos:position pos:line="66" pos:column="18"/></return> <comment type="block" pos:line="66" pos:column="19">/* not reached */</comment>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

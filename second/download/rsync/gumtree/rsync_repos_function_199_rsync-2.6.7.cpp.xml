<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_199_rsync-2.6.7.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unchanged_file<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">fn<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">file_struct<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">file<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">STRUCT_STAT<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">st<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">st<pos:position pos:line="3" pos:column="15"/></name><operator pos:line="3" pos:column="15">-&gt;<pos:position pos:line="3" pos:column="20"/></operator><name pos:line="3" pos:column="17">st_size<pos:position pos:line="3" pos:column="24"/></name></name> <operator pos:line="3" pos:column="25">!=<pos:position pos:line="3" pos:column="27"/></operator> <name><name pos:line="3" pos:column="28">file<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">length<pos:position pos:line="3" pos:column="40"/></name></name></expr>)<pos:position pos:line="3" pos:column="41"/></condition><then pos:line="3" pos:column="41">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>;<pos:position pos:line="4" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="6" pos:column="9">/* if always checksum is set then we use the checksum instead
	   of the file time to determine whether to sync */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">always_checksum<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">&amp;&amp;<pos:position pos:line="8" pos:column="39"/></operator> <call><name pos:line="8" pos:column="32">S_ISREG<pos:position pos:line="8" pos:column="39"/></name><argument_list pos:line="8" pos:column="39">(<argument><expr><name><name pos:line="8" pos:column="40">st<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">st_mode<pos:position pos:line="8" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53"> <block pos:line="8" pos:column="54">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">char<pos:position pos:line="9" pos:column="21"/></name></type> <name><name pos:line="9" pos:column="22">sum<pos:position pos:line="9" pos:column="25"/></name><index pos:line="9" pos:column="25">[<expr><name pos:line="9" pos:column="26">MD4_SUM_LENGTH<pos:position pos:line="9" pos:column="40"/></name></expr>]<pos:position pos:line="9" pos:column="41"/></index></name></decl>;<pos:position pos:line="9" pos:column="42"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">file_checksum<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">fn<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">sum<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="40">st<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">st_size<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><call><name pos:line="11" pos:column="24">memcmp<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">sum<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="36">file<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">u<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">.<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">sum<pos:position pos:line="11" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">checksum_len<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call> <operator pos:line="11" pos:column="63">==<pos:position pos:line="11" pos:column="65"/></operator> <literal type="number" pos:line="11" pos:column="66">0<pos:position pos:line="11" pos:column="67"/></literal></expr>;<pos:position pos:line="11" pos:column="68"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">size_only<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">ignore_times<pos:position pos:line="17" pos:column="25"/></name></expr>)<pos:position pos:line="17" pos:column="26"/></condition><then pos:line="17" pos:column="26">
		<block type="pseudo"><return pos:line="18" pos:column="17">return <expr><literal type="number" pos:line="18" pos:column="24">0<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>

	<return pos:line="20" pos:column="9">return <expr><call><name pos:line="20" pos:column="16">cmp_time<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name><name pos:line="20" pos:column="25">st<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">st_mtime<pos:position pos:line="20" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="20" pos:column="39">file<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">modtime<pos:position pos:line="20" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call> <operator pos:line="20" pos:column="54">==<pos:position pos:line="20" pos:column="56"/></operator> <literal type="number" pos:line="20" pos:column="57">0<pos:position pos:line="20" pos:column="58"/></literal></expr>;<pos:position pos:line="20" pos:column="59"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

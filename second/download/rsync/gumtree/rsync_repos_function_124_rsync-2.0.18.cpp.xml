<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_124_rsync-2.0.18.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">create_directory_path<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">fname<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">extern<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">orig_umask<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">fname<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">==<pos:position pos:line="6" pos:column="25"/></operator> <literal type="char" pos:line="6" pos:column="26">'/'<pos:position pos:line="6" pos:column="29"/></literal></expr>)<pos:position pos:line="6" pos:column="30"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="31">fname<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">++<pos:position pos:line="6" pos:column="38"/></operator></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt></block></while>
	<while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><call><name pos:line="7" pos:column="16">strncmp<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">fname<pos:position pos:line="7" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="30">"./"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="35">2<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call><operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator><literal type="number" pos:line="7" pos:column="39">0<pos:position pos:line="7" pos:column="40"/></literal></expr>)<pos:position pos:line="7" pos:column="41"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="42">fname<pos:position pos:line="7" pos:column="47"/></name> <operator pos:line="7" pos:column="48">+=<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">2<pos:position pos:line="7" pos:column="52"/></literal></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt></block></while>

	<expr_stmt><expr><name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">fname<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">p<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator><call><name pos:line="10" pos:column="19">strchr<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">p<pos:position pos:line="10" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="10" pos:column="28">'/'<pos:position pos:line="10" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call><operator pos:line="10" pos:column="32">)<pos:position pos:line="10" pos:column="33"/></operator></expr>)<pos:position pos:line="10" pos:column="34"/></condition> <block pos:line="10" pos:column="35">{
		<expr_stmt><expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">p<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">do_mkdir<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">fname<pos:position pos:line="12" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="32">0777<pos:position pos:line="12" pos:column="36"/></literal> <operator pos:line="12" pos:column="37">&amp;<pos:position pos:line="12" pos:column="42"/></operator> <operator pos:line="12" pos:column="39">~<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">orig_umask<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt> 
		<expr_stmt><expr><operator pos:line="13" pos:column="17">*<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">p<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <literal type="char" pos:line="13" pos:column="22">'/'<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">p<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">++<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></while>
	<return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

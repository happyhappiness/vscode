<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_2_rsync-1.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">matched<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">f<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">sum_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">s<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">buf<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="58">off_t<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">len<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">offset<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="79">int<pos:position pos:line="1" pos:column="82"/></name></type> <name pos:line="1" pos:column="83">i<pos:position pos:line="1" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="85"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">n<pos:position pos:line="3" pos:column="8"/></name> <init pos:line="3" pos:column="9">= <expr><name pos:line="3" pos:column="11">offset<pos:position pos:line="3" pos:column="17"/></name> <operator pos:line="3" pos:column="18">-<pos:position pos:line="3" pos:column="19"/></operator> <name pos:line="3" pos:column="20">last_match<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">verbose<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&gt;<pos:position pos:line="5" pos:column="19"/></operator> <literal type="number" pos:line="5" pos:column="17">2<pos:position pos:line="5" pos:column="18"/></literal></expr>)<pos:position pos:line="5" pos:column="19"/></condition><then pos:line="5" pos:column="19">
    <block type="pseudo"><if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">!=<pos:position pos:line="6" pos:column="13"/></operator> <operator pos:line="6" pos:column="14">-<pos:position pos:line="6" pos:column="15"/></operator><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="7">fprintf<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">stderr<pos:position pos:line="7" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="22">"match at %d last_match=%d j=%d len=%d n=%d\n"<pos:position pos:line="7" pos:column="68"/></literal></expr></argument>,
	      <argument><expr><operator pos:line="8" pos:column="15">(<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">int<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">offset<pos:position pos:line="8" pos:column="26"/></name></expr></argument>,<argument><expr><operator pos:line="8" pos:column="27">(<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">int<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">)<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">last_match<pos:position pos:line="8" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="43">i<pos:position pos:line="8" pos:column="44"/></name></expr></argument>,<argument><expr><operator pos:line="8" pos:column="45">(<pos:position pos:line="8" pos:column="46"/></operator><name pos:line="8" pos:column="46">int<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator><name><name pos:line="8" pos:column="50">s<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">sums<pos:position pos:line="8" pos:column="57"/></name><index pos:line="8" pos:column="57">[<expr><name pos:line="8" pos:column="58">i<pos:position pos:line="8" pos:column="59"/></name></expr>]<pos:position pos:line="8" pos:column="60"/></index></name><operator pos:line="8" pos:column="60">.<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="61">len<pos:position pos:line="8" pos:column="64"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="65">n<pos:position pos:line="8" pos:column="66"/></name></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="68"/></expr_stmt></block></then></if></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">n<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">&gt;<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="11">0<pos:position pos:line="10" pos:column="12"/></literal></expr>)<pos:position pos:line="10" pos:column="13"/></condition><then pos:line="10" pos:column="13"> <block pos:line="10" pos:column="14">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">write_int<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">f<pos:position pos:line="11" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="17">n<pos:position pos:line="11" pos:column="18"/></name></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">write_buf<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">f<pos:position pos:line="12" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="17">buf<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">+<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">last_match<pos:position pos:line="12" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="32">n<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">data_transfer<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">+=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">n<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">write_int<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">f<pos:position pos:line="15" pos:column="14"/></name></expr></argument>,<argument><expr><operator pos:line="15" pos:column="15">-<pos:position pos:line="15" pos:column="16"/></operator><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">i<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">+<pos:position pos:line="15" pos:column="19"/></operator><literal type="number" pos:line="15" pos:column="19">1<pos:position pos:line="15" pos:column="20"/></literal><operator pos:line="15" pos:column="20">)<pos:position pos:line="15" pos:column="21"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">i<pos:position pos:line="16" pos:column="8"/></name> <operator pos:line="16" pos:column="9">!=<pos:position pos:line="16" pos:column="11"/></operator> <operator pos:line="16" pos:column="12">-<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">1<pos:position pos:line="16" pos:column="14"/></literal></expr>)<pos:position pos:line="16" pos:column="15"/></condition><then pos:line="16" pos:column="15">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">last_match<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">offset<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">+<pos:position pos:line="17" pos:column="26"/></operator> <name><name pos:line="17" pos:column="27">s<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">sums<pos:position pos:line="17" pos:column="34"/></name><index pos:line="17" pos:column="34">[<expr><name pos:line="17" pos:column="35">i<pos:position pos:line="17" pos:column="36"/></name></expr>]<pos:position pos:line="17" pos:column="37"/></index></name><operator pos:line="17" pos:column="37">.<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">len<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt></block></then></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">n<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">&gt;<pos:position pos:line="18" pos:column="13"/></operator> <literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>)<pos:position pos:line="18" pos:column="13"/></condition><then pos:line="18" pos:column="13">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">write_flush<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">f<pos:position pos:line="19" pos:column="18"/></name></expr></argument>)<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt></block></then></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

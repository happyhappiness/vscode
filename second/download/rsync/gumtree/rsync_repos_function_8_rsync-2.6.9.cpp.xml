<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_8_rsync-2.6.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_arg_from_pipe<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">fd<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buf<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">limit<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">bp<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><name pos:line="3" pos:column="20">buf<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="25">*<pos:position pos:line="3" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="26">eob<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><name pos:line="3" pos:column="32">buf<pos:position pos:line="3" pos:column="35"/></name> <operator pos:line="3" pos:column="36">+<pos:position pos:line="3" pos:column="37"/></operator> <name pos:line="3" pos:column="38">limit<pos:position pos:line="3" pos:column="43"/></name> <operator pos:line="3" pos:column="44">-<pos:position pos:line="3" pos:column="45"/></operator> <literal type="number" pos:line="3" pos:column="46">1<pos:position pos:line="3" pos:column="47"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>

	<while pos:line="5" pos:column="9">while <condition pos:line="5" pos:column="15">(<expr><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal></expr>)<pos:position pos:line="5" pos:column="18"/></condition> <block pos:line="5" pos:column="19">{
	    <if pos:line="6" pos:column="13">if <condition pos:line="6" pos:column="16">(<expr><call><name pos:line="6" pos:column="17">read<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">fd<pos:position pos:line="6" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="26">bp<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="30">1<pos:position pos:line="6" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call> <operator pos:line="6" pos:column="33">!=<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="36">1<pos:position pos:line="6" pos:column="37"/></literal></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>
	    <if pos:line="8" pos:column="13">if <condition pos:line="8" pos:column="16">(<expr><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">bp<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">==<pos:position pos:line="8" pos:column="23"/></operator> <literal type="char" pos:line="8" pos:column="24">'\0'<pos:position pos:line="8" pos:column="28"/></literal></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29">
		<block type="pseudo"><break pos:line="9" pos:column="17">break;<pos:position pos:line="9" pos:column="23"/></break></block></then></if>
	    <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><name pos:line="10" pos:column="17">bp<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">&lt;<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="22">eob<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">bp<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">++<pos:position pos:line="11" pos:column="21"/></operator></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt></block></then></if>
	}<pos:position pos:line="12" pos:column="10"/></block></while>
	<expr_stmt><expr><operator pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">bp<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <literal type="char" pos:line="13" pos:column="15">'\0'<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></expr_stmt>

	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">bp<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">-<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">buf<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

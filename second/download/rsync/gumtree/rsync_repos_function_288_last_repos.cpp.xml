<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_288_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">set_stat_xattr<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">fname<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="39">struct<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">file_struct<pos:position pos:line="1" pos:column="57"/></name></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">file<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">mode_t<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">new_mode<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">STRUCT_STAT<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">fst<pos:position pos:line="3" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="26">xst<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">dev_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">rdev<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">mode_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">mode<pos:position pos:line="5" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="22">fmode<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">dry_run<pos:position pos:line="7" pos:column="20"/></name></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">read_only<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">||<pos:position pos:line="10" pos:column="25"/></operator> <name pos:line="10" pos:column="26">list_only<pos:position pos:line="10" pos:column="35"/></name></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block pos:line="10" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">rsyserr<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><name pos:line="11" pos:column="25">FERROR_XFER<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">EROFS<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="45">"failed to write xattr %s for %s"<pos:position pos:line="11" pos:column="78"/></literal></expr></argument>,
			<argument><expr><name pos:line="12" pos:column="25">XSTAT_ATTR<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="37">full_fname<pos:position pos:line="12" pos:column="47"/></name><argument_list pos:line="12" pos:column="47">(<argument><expr><name pos:line="12" pos:column="48">fname<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
		<return pos:line="13" pos:column="17">return <expr><operator pos:line="13" pos:column="24">-<pos:position pos:line="13" pos:column="25"/></operator><literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>;<pos:position pos:line="13" pos:column="27"/></return>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">x_lstat<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">fname<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="28">&amp;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="29">fst<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="35">xst<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call> <operator pos:line="16" pos:column="40">&lt;<pos:position pos:line="16" pos:column="44"/></operator> <literal type="number" pos:line="16" pos:column="42">0<pos:position pos:line="16" pos:column="43"/></literal></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44"> <block pos:line="16" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">rsyserr<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">FERROR_XFER<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">errno<pos:position pos:line="17" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="45">"failed to re-stat %s"<pos:position pos:line="17" pos:column="67"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="18" pos:column="25">full_fname<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name pos:line="18" pos:column="36">fname<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="22" pos:column="9">fst<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">st_mode<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">&amp;=<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">_S_IFMT<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">|<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="35">CHMOD_BITS<pos:position pos:line="22" pos:column="45"/></name><operator pos:line="22" pos:column="45">)<pos:position pos:line="22" pos:column="46"/></operator></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><name pos:line="23" pos:column="9">fmode<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">new_mode<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">&amp;<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="28">(<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">_S_IFMT<pos:position pos:line="23" pos:column="36"/></name> <operator pos:line="23" pos:column="37">|<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="39">CHMOD_BITS<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">)<pos:position pos:line="23" pos:column="50"/></operator></expr>;<pos:position pos:line="23" pos:column="51"/></expr_stmt>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name pos:line="25" pos:column="13">IS_DEVICE<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">fmode<pos:position pos:line="25" pos:column="28"/></name></expr></argument>)<pos:position pos:line="25" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30"> <block pos:line="25" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">uint32<pos:position pos:line="26" pos:column="23"/></name> <modifier pos:line="26" pos:column="24">*<pos:position pos:line="26" pos:column="25"/></modifier></type><name pos:line="26" pos:column="25">devp<pos:position pos:line="26" pos:column="29"/></name> <init pos:line="26" pos:column="30">= <expr><call><name pos:line="26" pos:column="32">F_RDEV_P<pos:position pos:line="26" pos:column="40"/></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">file<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="47"/></decl_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">rdev<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">MAKEDEV<pos:position pos:line="27" pos:column="31"/></name><argument_list pos:line="27" pos:column="31">(<argument><expr><call><name pos:line="27" pos:column="32">DEV_MAJOR<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><name pos:line="27" pos:column="42">devp<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="49">DEV_MINOR<pos:position pos:line="27" pos:column="58"/></name><argument_list pos:line="27" pos:column="58">(<argument><expr><name pos:line="27" pos:column="59">devp<pos:position pos:line="27" pos:column="63"/></name></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">rdev<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="31" pos:column="9">/* Dump the special permissions and enable full owner access. */</comment>
	<expr_stmt><expr><name pos:line="32" pos:column="9">mode<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name><name pos:line="32" pos:column="17">fst<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">st_mode<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">&amp;<pos:position pos:line="32" pos:column="34"/></operator> <name pos:line="32" pos:column="31">_S_IFMT<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">)<pos:position pos:line="32" pos:column="39"/></operator> <operator pos:line="32" pos:column="40">|<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="42">(<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="43">fmode<pos:position pos:line="32" pos:column="48"/></name> <operator pos:line="32" pos:column="49">&amp;<pos:position pos:line="32" pos:column="54"/></operator> <name pos:line="32" pos:column="51">ACCESSPERMS<pos:position pos:line="32" pos:column="62"/></name><operator pos:line="32" pos:column="62">)<pos:position pos:line="32" pos:column="63"/></operator>
	     <operator pos:line="33" pos:column="14">|<pos:position pos:line="33" pos:column="15"/></operator> <operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><ternary><condition><expr><call><name pos:line="33" pos:column="17">S_ISDIR<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><name><name pos:line="33" pos:column="25">fst<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">.<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="29">st_mode<pos:position pos:line="33" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr> ?<pos:position pos:line="33" pos:column="39"/></condition><then pos:line="33" pos:column="39"> <expr><literal type="number" pos:line="33" pos:column="40">0700<pos:position pos:line="33" pos:column="44"/></literal></expr> <pos:position pos:line="33" pos:column="45"/></then><else pos:line="33" pos:column="45">: <expr><literal type="number" pos:line="33" pos:column="47">0600<pos:position pos:line="33" pos:column="51"/></literal></expr></else></ternary><operator pos:line="33" pos:column="51">)<pos:position pos:line="33" pos:column="52"/></operator></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">fst<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">.<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">st_mode<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">!=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">mode<pos:position pos:line="34" pos:column="32"/></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition><then pos:line="34" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">do_chmod<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">fname<pos:position pos:line="35" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">mode<pos:position pos:line="35" pos:column="37"/></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">IS_DEVICE<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name><name pos:line="36" pos:column="24">fst<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">.<pos:position pos:line="36" pos:column="28"/></operator><name pos:line="36" pos:column="28">st_mode<pos:position pos:line="36" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">fst<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">st_rdev<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <literal type="number" pos:line="37" pos:column="31">0<pos:position pos:line="37" pos:column="32"/></literal></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt></block></then></if> <comment type="block" pos:line="37" pos:column="34">/* just in case */</comment>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">mode<pos:position pos:line="39" pos:column="17"/></name> <operator pos:line="39" pos:column="18">==<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">fmode<pos:position pos:line="39" pos:column="26"/></name> <operator pos:line="39" pos:column="27">&amp;&amp;<pos:position pos:line="39" pos:column="37"/></operator> <name><name pos:line="39" pos:column="30">fst<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">.<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">st_rdev<pos:position pos:line="39" pos:column="41"/></name></name> <operator pos:line="39" pos:column="42">==<pos:position pos:line="39" pos:column="44"/></operator> <name pos:line="39" pos:column="45">rdev<pos:position pos:line="39" pos:column="49"/></name>
	 <operator pos:line="40" pos:column="10">&amp;&amp;<pos:position pos:line="40" pos:column="20"/></operator> <name><name pos:line="40" pos:column="13">fst<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">.<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">st_uid<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">==<pos:position pos:line="40" pos:column="26"/></operator> <call><name pos:line="40" pos:column="27">F_OWNER<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">file<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call> <operator pos:line="40" pos:column="41">&amp;&amp;<pos:position pos:line="40" pos:column="51"/></operator> <name><name pos:line="40" pos:column="44">fst<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">.<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="48">st_gid<pos:position pos:line="40" pos:column="54"/></name></name> <operator pos:line="40" pos:column="55">==<pos:position pos:line="40" pos:column="57"/></operator> <call><name pos:line="40" pos:column="58">F_GROUP<pos:position pos:line="40" pos:column="65"/></name><argument_list pos:line="40" pos:column="65">(<argument><expr><name pos:line="40" pos:column="66">file<pos:position pos:line="40" pos:column="70"/></name></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="72"/></condition><then pos:line="40" pos:column="72"> <block pos:line="40" pos:column="73">{
		<comment type="block" pos:line="41" pos:column="17">/* xst.st_mode will be 0 if there's no current stat xattr */</comment>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name><name pos:line="42" pos:column="21">xst<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">.<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">st_mode<pos:position pos:line="42" pos:column="32"/></name></name> <operator pos:line="42" pos:column="33">&amp;&amp;<pos:position pos:line="42" pos:column="43"/></operator> <call><name pos:line="42" pos:column="36">sys_lremovexattr<pos:position pos:line="42" pos:column="52"/></name><argument_list pos:line="42" pos:column="52">(<argument><expr><name pos:line="42" pos:column="53">fname<pos:position pos:line="42" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="60">XSTAT_ATTR<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call> <operator pos:line="42" pos:column="72">&lt;<pos:position pos:line="42" pos:column="76"/></operator> <literal type="number" pos:line="42" pos:column="74">0<pos:position pos:line="42" pos:column="75"/></literal></expr>)<pos:position pos:line="42" pos:column="76"/></condition><then pos:line="42" pos:column="76"> <block pos:line="42" pos:column="77">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">rsyserr<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><name pos:line="43" pos:column="33">FERROR_XFER<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="46">errno<pos:position pos:line="43" pos:column="51"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="44" pos:column="33">"delete of stat xattr failed for %s"<pos:position pos:line="44" pos:column="69"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="45" pos:column="33">full_fname<pos:position pos:line="45" pos:column="43"/></name><argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">fname<pos:position pos:line="45" pos:column="49"/></name></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt>
			<return pos:line="46" pos:column="25">return <expr><operator pos:line="46" pos:column="32">-<pos:position pos:line="46" pos:column="33"/></operator><literal type="number" pos:line="46" pos:column="33">1<pos:position pos:line="46" pos:column="34"/></literal></expr>;<pos:position pos:line="46" pos:column="35"/></return>
		}<pos:position pos:line="47" pos:column="18"/></block></then></if>
		<return pos:line="48" pos:column="17">return <expr><literal type="number" pos:line="48" pos:column="24">0<pos:position pos:line="48" pos:column="25"/></literal></expr>;<pos:position pos:line="48" pos:column="26"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">xst<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">st_mode<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">!=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">fmode<pos:position pos:line="51" pos:column="33"/></name> <operator pos:line="51" pos:column="34">||<pos:position pos:line="51" pos:column="36"/></operator> <name><name pos:line="51" pos:column="37">xst<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">.<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">st_rdev<pos:position pos:line="51" pos:column="48"/></name></name> <operator pos:line="51" pos:column="49">!=<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="52">rdev<pos:position pos:line="51" pos:column="56"/></name>
	 <operator pos:line="52" pos:column="10">||<pos:position pos:line="52" pos:column="12"/></operator> <name><name pos:line="52" pos:column="13">xst<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">.<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">st_uid<pos:position pos:line="52" pos:column="23"/></name></name> <operator pos:line="52" pos:column="24">!=<pos:position pos:line="52" pos:column="26"/></operator> <call><name pos:line="52" pos:column="27">F_OWNER<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">file<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call> <operator pos:line="52" pos:column="41">||<pos:position pos:line="52" pos:column="43"/></operator> <name><name pos:line="52" pos:column="44">xst<pos:position pos:line="52" pos:column="47"/></name><operator pos:line="52" pos:column="47">.<pos:position pos:line="52" pos:column="48"/></operator><name pos:line="52" pos:column="48">st_gid<pos:position pos:line="52" pos:column="54"/></name></name> <operator pos:line="52" pos:column="55">!=<pos:position pos:line="52" pos:column="57"/></operator> <call><name pos:line="52" pos:column="58">F_GROUP<pos:position pos:line="52" pos:column="65"/></name><argument_list pos:line="52" pos:column="65">(<argument><expr><name pos:line="52" pos:column="66">file<pos:position pos:line="52" pos:column="70"/></name></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="72"/></condition><then pos:line="52" pos:column="72"> <block pos:line="52" pos:column="73">{
		<decl_stmt><decl><type><name pos:line="53" pos:column="17">char<pos:position pos:line="53" pos:column="21"/></name></type> <name><name pos:line="53" pos:column="22">buf<pos:position pos:line="53" pos:column="25"/></name><index pos:line="53" pos:column="25">[<expr><literal type="number" pos:line="53" pos:column="26">256<pos:position pos:line="53" pos:column="29"/></literal></expr>]<pos:position pos:line="53" pos:column="30"/></index></name></decl>;<pos:position pos:line="53" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="54" pos:column="17">int<pos:position pos:line="54" pos:column="20"/></name></type> <name pos:line="54" pos:column="21">len<pos:position pos:line="54" pos:column="24"/></name> <init pos:line="54" pos:column="25">= <expr><call><name pos:line="54" pos:column="27">snprintf<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">buf<pos:position pos:line="54" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="41">sizeof <name pos:line="54" pos:column="48">buf<pos:position pos:line="54" pos:column="51"/></name></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="53">"%o %u,%u %u:%u"<pos:position pos:line="54" pos:column="69"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="55" pos:column="25">to_wire_mode<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">fmode<pos:position pos:line="55" pos:column="43"/></name></expr></argument>)<pos:position pos:line="55" pos:column="44"/></argument_list></call></expr></argument>,
			<argument><expr><operator pos:line="56" pos:column="25">(<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="26">int<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">)<pos:position pos:line="56" pos:column="30"/></operator><call><name pos:line="56" pos:column="30">major<pos:position pos:line="56" pos:column="35"/></name><argument_list pos:line="56" pos:column="35">(<argument><expr><name pos:line="56" pos:column="36">rdev<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="56" pos:column="43">(<pos:position pos:line="56" pos:column="44"/></operator><name pos:line="56" pos:column="44">int<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">)<pos:position pos:line="56" pos:column="48"/></operator><call><name pos:line="56" pos:column="48">minor<pos:position pos:line="56" pos:column="53"/></name><argument_list pos:line="56" pos:column="53">(<argument><expr><name pos:line="56" pos:column="54">rdev<pos:position pos:line="56" pos:column="58"/></name></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="57" pos:column="25">F_OWNER<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">file<pos:position pos:line="57" pos:column="37"/></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="40">F_GROUP<pos:position pos:line="57" pos:column="47"/></name><argument_list pos:line="57" pos:column="47">(<argument><expr><name pos:line="57" pos:column="48">file<pos:position pos:line="57" pos:column="52"/></name></expr></argument>)<pos:position pos:line="57" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="57" pos:column="55"/></decl_stmt>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">sys_lsetxattr<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">fname<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="42">XSTAT_ATTR<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="54">buf<pos:position pos:line="58" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="59">len<pos:position pos:line="58" pos:column="62"/></name></expr></argument>)<pos:position pos:line="58" pos:column="63"/></argument_list></call> <operator pos:line="58" pos:column="64">&lt;<pos:position pos:line="58" pos:column="68"/></operator> <literal type="number" pos:line="58" pos:column="66">0<pos:position pos:line="58" pos:column="67"/></literal></expr>)<pos:position pos:line="58" pos:column="68"/></condition><then pos:line="58" pos:column="68"> <block pos:line="58" pos:column="69">{
			<if pos:line="59" pos:column="25">if <condition pos:line="59" pos:column="28">(<expr><name pos:line="59" pos:column="29">errno<pos:position pos:line="59" pos:column="34"/></name> <operator pos:line="59" pos:column="35">==<pos:position pos:line="59" pos:column="37"/></operator> <name pos:line="59" pos:column="38">EPERM<pos:position pos:line="59" pos:column="43"/></name> <operator pos:line="59" pos:column="44">&amp;&amp;<pos:position pos:line="59" pos:column="54"/></operator> <call><name pos:line="59" pos:column="47">S_ISLNK<pos:position pos:line="59" pos:column="54"/></name><argument_list pos:line="59" pos:column="54">(<argument><expr><name><name pos:line="59" pos:column="55">fst<pos:position pos:line="59" pos:column="58"/></name><operator pos:line="59" pos:column="58">.<pos:position pos:line="59" pos:column="59"/></operator><name pos:line="59" pos:column="59">st_mode<pos:position pos:line="59" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="68"/></condition><then pos:line="59" pos:column="68">
				<block type="pseudo"><return pos:line="60" pos:column="33">return <expr><literal type="number" pos:line="60" pos:column="40">0<pos:position pos:line="60" pos:column="41"/></literal></expr>;<pos:position pos:line="60" pos:column="42"/></return></block></then></if>
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">rsyserr<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">FERROR_XFER<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="46">errno<pos:position pos:line="61" pos:column="51"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="62" pos:column="33">"failed to write xattr %s for %s"<pos:position pos:line="62" pos:column="66"/></literal></expr></argument>,
				<argument><expr><name pos:line="63" pos:column="33">XSTAT_ATTR<pos:position pos:line="63" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="45">full_fname<pos:position pos:line="63" pos:column="55"/></name><argument_list pos:line="63" pos:column="55">(<argument><expr><name pos:line="63" pos:column="56">fname<pos:position pos:line="63" pos:column="61"/></name></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="64"/></expr_stmt>
			<return pos:line="64" pos:column="25">return <expr><operator pos:line="64" pos:column="32">-<pos:position pos:line="64" pos:column="33"/></operator><literal type="number" pos:line="64" pos:column="33">1<pos:position pos:line="64" pos:column="34"/></literal></expr>;<pos:position pos:line="64" pos:column="35"/></return>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<return pos:line="68" pos:column="9">return <expr><literal type="number" pos:line="68" pos:column="16">0<pos:position pos:line="68" pos:column="17"/></literal></expr>;<pos:position pos:line="68" pos:column="18"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

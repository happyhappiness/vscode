<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_37.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">do_server_recv<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">argc<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name><name pos:line="1" pos:column="36">argv<pos:position pos:line="1" pos:column="40"/></name><index pos:line="1" pos:column="40">[]<pos:position pos:line="1" pos:column="42"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">pid<pos:position pos:line="3" pos:column="10"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="11">i<pos:position pos:line="3" pos:column="12"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">dir<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">file_list<pos:position pos:line="5" pos:column="19"/></name></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">flist<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">fname<pos:position pos:line="6" pos:column="14"/></name><init pos:line="6" pos:column="14">=<expr><name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="7" pos:column="3">struct<pos:position pos:line="7" pos:column="9"/></name> <name pos:line="7" pos:column="10">stat<pos:position pos:line="7" pos:column="14"/></name></name></type> <name pos:line="7" pos:column="15">st<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
  
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">verbose<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&gt;<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="17">2<pos:position pos:line="9" pos:column="18"/></literal></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">fprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">stderr<pos:position pos:line="10" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="20">"server_recv(%d) starting pid=%d\n"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>,<argument><expr><name pos:line="10" pos:column="56">argc<pos:position pos:line="10" pos:column="60"/></name></expr></argument>,<argument><expr><operator pos:line="10" pos:column="61">(<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="62">int<pos:position pos:line="10" pos:column="65"/></name><operator pos:line="10" pos:column="65">)<pos:position pos:line="10" pos:column="66"/></operator><call><name pos:line="10" pos:column="66">getpid<pos:position pos:line="10" pos:column="72"/></name><argument_list pos:line="10" pos:column="72">()<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">argc<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">&gt;<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <block pos:line="12" pos:column="17">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">dir<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <name><name pos:line="13" pos:column="11">argv<pos:position pos:line="13" pos:column="15"/></name><index pos:line="13" pos:column="15">[<expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>]<pos:position pos:line="13" pos:column="18"/></index></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">argc<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">--<pos:position pos:line="14" pos:column="11"/></operator></expr>;<pos:position pos:line="14" pos:column="12"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">argv<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator></expr>;<pos:position pos:line="15" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">argc<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">&gt;<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
    <expr_stmt><expr><name pos:line="19" pos:column="5">fname<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <name><name pos:line="19" pos:column="13">argv<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr>]<pos:position pos:line="19" pos:column="20"/></index></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">dir<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <name pos:line="20" pos:column="11">NULL<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">stat<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">fname<pos:position pos:line="22" pos:column="19"/></name></expr></argument>,<argument><expr><operator pos:line="22" pos:column="20">&amp;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="21">st<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call> <operator pos:line="22" pos:column="25">!=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>)<pos:position pos:line="22" pos:column="30"/></condition><then pos:line="22" pos:column="30"> <block pos:line="22" pos:column="31">{
      <if pos:line="23" pos:column="7">if <condition pos:line="23" pos:column="10">(<expr><operator pos:line="23" pos:column="11">!<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">recurse<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">||<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">mkdir<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">fname<pos:position pos:line="23" pos:column="34"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="23" pos:column="35">0777<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></call> <operator pos:line="23" pos:column="41">!=<pos:position pos:line="23" pos:column="43"/></operator> <literal type="number" pos:line="23" pos:column="44">0<pos:position pos:line="23" pos:column="45"/></literal></expr>)<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <block pos:line="23" pos:column="47">{
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">fprintf<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">stderr<pos:position pos:line="24" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="24" pos:column="24">"stat %s : %s\n"<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>,<argument><expr><name pos:line="24" pos:column="41">fname<pos:position pos:line="24" pos:column="46"/></name></expr></argument>,<argument><expr><call><name pos:line="24" pos:column="47">strerror<pos:position pos:line="24" pos:column="55"/></name><argument_list pos:line="24" pos:column="55">(<argument><expr><name pos:line="24" pos:column="56">errno<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">exit<pos:position pos:line="25" pos:column="13"/></name><argument_list pos:line="25" pos:column="13">(<argument><expr><literal type="number" pos:line="25" pos:column="14">1<pos:position pos:line="25" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="26" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">stat<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">fname<pos:position pos:line="27" pos:column="17"/></name></expr></argument>,<argument><expr><operator pos:line="27" pos:column="18">&amp;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="19">st<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">S_ISDIR<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name><name pos:line="30" pos:column="17">st<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">.<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">st_mode<pos:position pos:line="30" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29"> <block pos:line="30" pos:column="30">{
      <expr_stmt><expr><name pos:line="31" pos:column="7">dir<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">=<pos:position pos:line="31" pos:column="12"/></operator> <name pos:line="31" pos:column="13">fname<pos:position pos:line="31" pos:column="18"/></name></expr>;<pos:position pos:line="31" pos:column="19"/></expr_stmt>
      <expr_stmt><expr><name pos:line="32" pos:column="7">fname<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">NULL<pos:position pos:line="32" pos:column="19"/></name></expr>;<pos:position pos:line="32" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">dir<pos:position pos:line="36" pos:column="10"/></name></expr>)<pos:position pos:line="36" pos:column="11"/></condition><then pos:line="36" pos:column="11"> <block pos:line="36" pos:column="12">{
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">chdir<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><name pos:line="37" pos:column="15">dir<pos:position pos:line="37" pos:column="18"/></name></expr></argument>)<pos:position pos:line="37" pos:column="19"/></argument_list></call> <operator pos:line="37" pos:column="20">!=<pos:position pos:line="37" pos:column="22"/></operator> <literal type="number" pos:line="37" pos:column="23">0<pos:position pos:line="37" pos:column="24"/></literal></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25"> <block pos:line="37" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="38" pos:column="7">fprintf<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><name pos:line="38" pos:column="15">stderr<pos:position pos:line="38" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="38" pos:column="22">"chdir %s : %s\n"<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>,<argument><expr><name pos:line="38" pos:column="40">dir<pos:position pos:line="38" pos:column="43"/></name></expr></argument>,<argument><expr><call><name pos:line="38" pos:column="44">strerror<pos:position pos:line="38" pos:column="52"/></name><argument_list pos:line="38" pos:column="52">(<argument><expr><name pos:line="38" pos:column="53">errno<pos:position pos:line="38" pos:column="58"/></name></expr></argument>)<pos:position pos:line="38" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="61"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">exit<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="number" pos:line="39" pos:column="12">1<pos:position pos:line="39" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then> <else pos:line="40" pos:column="7">else <block pos:line="40" pos:column="12">{
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">verbose<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">&gt;<pos:position pos:line="41" pos:column="23"/></operator> <literal type="number" pos:line="41" pos:column="21">2<pos:position pos:line="41" pos:column="22"/></literal></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23"> <block pos:line="41" pos:column="24">{
	<expr_stmt><expr><call><name pos:line="42" pos:column="9">fprintf<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">stderr<pos:position pos:line="42" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="42" pos:column="24">"server changed to directory %s\n"<pos:position pos:line="42" pos:column="58"/></literal></expr></argument>,<argument><expr><name pos:line="42" pos:column="59">dir<pos:position pos:line="42" pos:column="62"/></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></else></if>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="47" pos:column="3">flist<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <call><name pos:line="47" pos:column="11">recv_file_list<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">STDIN_FILENO<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><operator pos:line="48" pos:column="7">!<pos:position pos:line="48" pos:column="8"/></operator><name pos:line="48" pos:column="8">flist<pos:position pos:line="48" pos:column="13"/></name></expr>)<pos:position pos:line="48" pos:column="14"/></condition><then pos:line="48" pos:column="14"> <block pos:line="48" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">fprintf<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name pos:line="49" pos:column="13">stderr<pos:position pos:line="49" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="49" pos:column="20">"nothing to do\n"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">exit<pos:position pos:line="50" pos:column="9"/></name><argument_list pos:line="50" pos:column="9">(<argument><expr><literal type="number" pos:line="50" pos:column="10">1<pos:position pos:line="50" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><operator pos:line="53" pos:column="7">(<pos:position pos:line="53" pos:column="8"/></operator><name pos:line="53" pos:column="8">pid<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator><call><name pos:line="53" pos:column="12">fork<pos:position pos:line="53" pos:column="16"/></name><argument_list pos:line="53" pos:column="16">()<pos:position pos:line="53" pos:column="18"/></argument_list></call><operator pos:line="53" pos:column="18">)<pos:position pos:line="53" pos:column="19"/></operator> <operator pos:line="53" pos:column="20">==<pos:position pos:line="53" pos:column="22"/></operator> <literal type="number" pos:line="53" pos:column="23">0<pos:position pos:line="53" pos:column="24"/></literal></expr>)<pos:position pos:line="53" pos:column="25"/></condition><then pos:line="53" pos:column="25"> <block pos:line="53" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">recv_files<pos:position pos:line="54" pos:column="15"/></name><argument_list pos:line="54" pos:column="15">(<argument><expr><name pos:line="54" pos:column="16">STDIN_FILENO<pos:position pos:line="54" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="54" pos:column="29">flist<pos:position pos:line="54" pos:column="34"/></name></expr></argument>,<argument><expr><name pos:line="54" pos:column="35">fname<pos:position pos:line="54" pos:column="40"/></name></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">verbose<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">&gt;<pos:position pos:line="55" pos:column="21"/></operator> <literal type="number" pos:line="55" pos:column="19">1<pos:position pos:line="55" pos:column="20"/></literal></expr>)<pos:position pos:line="55" pos:column="21"/></condition><then pos:line="55" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="56" pos:column="7">fprintf<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><name pos:line="56" pos:column="15">stderr<pos:position pos:line="56" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="56" pos:column="22">"receiver read %d\n"<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>,<argument><expr><call><name pos:line="56" pos:column="43">read_total<pos:position pos:line="56" pos:column="53"/></name><argument_list pos:line="56" pos:column="53">()<pos:position pos:line="56" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">exit<pos:position pos:line="57" pos:column="9"/></name><argument_list pos:line="57" pos:column="9">(<argument><expr><literal type="number" pos:line="57" pos:column="10">0<pos:position pos:line="57" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="13"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">verbose<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">&gt;<pos:position pos:line="60" pos:column="19"/></operator> <literal type="number" pos:line="60" pos:column="17">2<pos:position pos:line="60" pos:column="18"/></literal></expr>)<pos:position pos:line="60" pos:column="19"/></condition><then pos:line="60" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="5">fprintf<pos:position pos:line="61" pos:column="12"/></name><argument_list pos:line="61" pos:column="12">(<argument><expr><name pos:line="61" pos:column="13">stderr<pos:position pos:line="61" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="61" pos:column="20">"generator starting pid=%d count=%d\n"<pos:position pos:line="61" pos:column="58"/></literal></expr></argument>,
	    <argument><expr><operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">int<pos:position pos:line="62" pos:column="17"/></name><operator pos:line="62" pos:column="17">)<pos:position pos:line="62" pos:column="18"/></operator><call><name pos:line="62" pos:column="18">getpid<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">()<pos:position pos:line="62" pos:column="26"/></argument_list></call></expr></argument>,<argument><expr><name><name pos:line="62" pos:column="27">flist<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">-&gt;<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="34">count<pos:position pos:line="62" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="41"/></expr_stmt></block></then></if>

  <for pos:line="64" pos:column="3">for <control pos:line="64" pos:column="7">(<init><expr><name pos:line="64" pos:column="8">i<pos:position pos:line="64" pos:column="9"/></name> <operator pos:line="64" pos:column="10">=<pos:position pos:line="64" pos:column="11"/></operator> <literal type="number" pos:line="64" pos:column="12">0<pos:position pos:line="64" pos:column="13"/></literal></expr>;<pos:position pos:line="64" pos:column="14"/></init> <condition><expr><name pos:line="64" pos:column="15">i<pos:position pos:line="64" pos:column="16"/></name> <operator pos:line="64" pos:column="17">&lt;<pos:position pos:line="64" pos:column="21"/></operator> <name><name pos:line="64" pos:column="19">flist<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">-&gt;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="26">count<pos:position pos:line="64" pos:column="31"/></name></name></expr>;<pos:position pos:line="64" pos:column="32"/></condition> <incr><expr><name pos:line="64" pos:column="33">i<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">++<pos:position pos:line="64" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="64" pos:column="37"/></control> <block pos:line="64" pos:column="38">{
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><call><name pos:line="65" pos:column="9">S_ISDIR<pos:position pos:line="65" pos:column="16"/></name><argument_list pos:line="65" pos:column="16">(<argument><expr><name><name pos:line="65" pos:column="17">flist<pos:position pos:line="65" pos:column="22"/></name><operator pos:line="65" pos:column="22">-&gt;<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="24">files<pos:position pos:line="65" pos:column="29"/></name><index pos:line="65" pos:column="29">[<expr><name pos:line="65" pos:column="30">i<pos:position pos:line="65" pos:column="31"/></name></expr>]<pos:position pos:line="65" pos:column="32"/></index></name><operator pos:line="65" pos:column="32">.<pos:position pos:line="65" pos:column="33"/></operator><name pos:line="65" pos:column="33">mode<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="39"/></condition><then pos:line="65" pos:column="39"> <block pos:line="65" pos:column="40">{
      <if pos:line="66" pos:column="7">if <condition pos:line="66" pos:column="10">(<expr><name pos:line="66" pos:column="11">dry_run<pos:position pos:line="66" pos:column="18"/></name></expr>)<pos:position pos:line="66" pos:column="19"/></condition><then pos:line="66" pos:column="19"> <block type="pseudo"><continue pos:line="66" pos:column="20">continue;<pos:position pos:line="66" pos:column="29"/></continue></block></then></if>
      <if pos:line="67" pos:column="7">if <condition pos:line="67" pos:column="10">(<expr><call><name pos:line="67" pos:column="11">mkdir<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name><name pos:line="67" pos:column="17">flist<pos:position pos:line="67" pos:column="22"/></name><operator pos:line="67" pos:column="22">-&gt;<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="24">files<pos:position pos:line="67" pos:column="29"/></name><index pos:line="67" pos:column="29">[<expr><name pos:line="67" pos:column="30">i<pos:position pos:line="67" pos:column="31"/></name></expr>]<pos:position pos:line="67" pos:column="32"/></index></name><operator pos:line="67" pos:column="32">.<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="33">name<pos:position pos:line="67" pos:column="37"/></name></expr></argument>,<argument><expr><name><name pos:line="67" pos:column="38">flist<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">-&gt;<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="45">files<pos:position pos:line="67" pos:column="50"/></name><index pos:line="67" pos:column="50">[<expr><name pos:line="67" pos:column="51">i<pos:position pos:line="67" pos:column="52"/></name></expr>]<pos:position pos:line="67" pos:column="53"/></index></name><operator pos:line="67" pos:column="53">.<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="54">mode<pos:position pos:line="67" pos:column="58"/></name></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call> <operator pos:line="67" pos:column="60">!=<pos:position pos:line="67" pos:column="62"/></operator> <literal type="number" pos:line="67" pos:column="63">0<pos:position pos:line="67" pos:column="64"/></literal> <operator pos:line="67" pos:column="65">&amp;&amp;<pos:position pos:line="67" pos:column="75"/></operator> 
	  <name pos:line="68" pos:column="11">errno<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">!=<pos:position pos:line="68" pos:column="19"/></operator> <name pos:line="68" pos:column="20">EEXIST<pos:position pos:line="68" pos:column="26"/></name></expr>)<pos:position pos:line="68" pos:column="27"/></condition><then pos:line="68" pos:column="27"> <block pos:line="68" pos:column="28">{	 
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">fprintf<pos:position pos:line="69" pos:column="16"/></name><argument_list pos:line="69" pos:column="16">(<argument><expr><name pos:line="69" pos:column="17">stderr<pos:position pos:line="69" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="69" pos:column="24">"mkdir %s: %s\n"<pos:position pos:line="69" pos:column="40"/></literal></expr></argument>,
		<argument><expr><name><name pos:line="70" pos:column="17">flist<pos:position pos:line="70" pos:column="22"/></name><operator pos:line="70" pos:column="22">-&gt;<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="24">files<pos:position pos:line="70" pos:column="29"/></name><index pos:line="70" pos:column="29">[<expr><name pos:line="70" pos:column="30">i<pos:position pos:line="70" pos:column="31"/></name></expr>]<pos:position pos:line="70" pos:column="32"/></index></name><operator pos:line="70" pos:column="32">.<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="33">name<pos:position pos:line="70" pos:column="37"/></name></expr></argument>,<argument><expr><call><name pos:line="70" pos:column="38">strerror<pos:position pos:line="70" pos:column="46"/></name><argument_list pos:line="70" pos:column="46">(<argument><expr><name pos:line="70" pos:column="47">errno<pos:position pos:line="70" pos:column="52"/></name></expr></argument>)<pos:position pos:line="70" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">exit<pos:position pos:line="71" pos:column="13"/></name><argument_list pos:line="71" pos:column="13">(<argument><expr><literal type="number" pos:line="71" pos:column="14">1<pos:position pos:line="71" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="17"/></expr_stmt>
      }<pos:position pos:line="72" pos:column="8"/></block></then></if>
      <continue pos:line="73" pos:column="7">continue;<pos:position pos:line="73" pos:column="16"/></continue>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="75" pos:column="5">fname<pos:position pos:line="75" pos:column="10"/></name> <operator pos:line="75" pos:column="11">=<pos:position pos:line="75" pos:column="12"/></operator> <name><name pos:line="75" pos:column="13">flist<pos:position pos:line="75" pos:column="18"/></name><operator pos:line="75" pos:column="18">-&gt;<pos:position pos:line="75" pos:column="23"/></operator><name pos:line="75" pos:column="20">files<pos:position pos:line="75" pos:column="25"/></name><index pos:line="75" pos:column="25">[<expr><name pos:line="75" pos:column="26">i<pos:position pos:line="75" pos:column="27"/></name></expr>]<pos:position pos:line="75" pos:column="28"/></index></name><operator pos:line="75" pos:column="28">.<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="29">name<pos:position pos:line="75" pos:column="33"/></name></expr>;<pos:position pos:line="75" pos:column="34"/></expr_stmt>
    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name><name pos:line="76" pos:column="9">flist<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">-&gt;<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="16">count<pos:position pos:line="76" pos:column="21"/></name></name> <operator pos:line="76" pos:column="22">==<pos:position pos:line="76" pos:column="24"/></operator> <literal type="number" pos:line="76" pos:column="25">1<pos:position pos:line="76" pos:column="26"/></literal> <operator pos:line="76" pos:column="27">&amp;&amp;<pos:position pos:line="76" pos:column="37"/></operator>
	<name pos:line="77" pos:column="9">argc<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">&gt;<pos:position pos:line="77" pos:column="18"/></operator> <literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr>)<pos:position pos:line="77" pos:column="18"/></condition><then pos:line="77" pos:column="18">
      <block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="7">fname<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">=<pos:position pos:line="78" pos:column="14"/></operator> <name><name pos:line="78" pos:column="15">argv<pos:position pos:line="78" pos:column="19"/></name><index pos:line="78" pos:column="19">[<expr><literal type="number" pos:line="78" pos:column="20">0<pos:position pos:line="78" pos:column="21"/></literal></expr>]<pos:position pos:line="78" pos:column="22"/></index></name></expr>;<pos:position pos:line="78" pos:column="23"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">recv_generator<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><name pos:line="79" pos:column="20">fname<pos:position pos:line="79" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="26">flist<pos:position pos:line="79" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="32">i<pos:position pos:line="79" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="79" pos:column="34">STDOUT_FILENO<pos:position pos:line="79" pos:column="47"/></name></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="80" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="81" pos:column="3">write_int<pos:position pos:line="81" pos:column="12"/></name><argument_list pos:line="81" pos:column="12">(<argument><expr><name pos:line="81" pos:column="13">STDOUT_FILENO<pos:position pos:line="81" pos:column="26"/></name></expr></argument>,<argument><expr><operator pos:line="81" pos:column="27">-<pos:position pos:line="81" pos:column="28"/></operator><literal type="number" pos:line="81" pos:column="28">1<pos:position pos:line="81" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="82" pos:column="3">write_flush<pos:position pos:line="82" pos:column="14"/></name><argument_list pos:line="82" pos:column="14">(<argument><expr><name pos:line="82" pos:column="15">STDOUT_FILENO<pos:position pos:line="82" pos:column="28"/></name></expr></argument>)<pos:position pos:line="82" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt>
  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><name pos:line="83" pos:column="7">verbose<pos:position pos:line="83" pos:column="14"/></name> <operator pos:line="83" pos:column="15">&gt;<pos:position pos:line="83" pos:column="19"/></operator> <literal type="number" pos:line="83" pos:column="17">1<pos:position pos:line="83" pos:column="18"/></literal></expr>)<pos:position pos:line="83" pos:column="19"/></condition><then pos:line="83" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="5">fprintf<pos:position pos:line="84" pos:column="12"/></name><argument_list pos:line="84" pos:column="12">(<argument><expr><name pos:line="84" pos:column="13">stderr<pos:position pos:line="84" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="84" pos:column="20">"generator wrote %d\n"<pos:position pos:line="84" pos:column="42"/></literal></expr></argument>,<argument><expr><call><name pos:line="84" pos:column="43">write_total<pos:position pos:line="84" pos:column="54"/></name><argument_list pos:line="84" pos:column="54">()<pos:position pos:line="84" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="58"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="86" pos:column="3">waitpid<pos:position pos:line="86" pos:column="10"/></name><argument_list pos:line="86" pos:column="10">(<argument><expr><name pos:line="86" pos:column="11">pid<pos:position pos:line="86" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="86" pos:column="16">&amp;<pos:position pos:line="86" pos:column="21"/></operator><name pos:line="86" pos:column="17">status<pos:position pos:line="86" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="25">0<pos:position pos:line="86" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="87" pos:column="3">exit<pos:position pos:line="87" pos:column="7"/></name><argument_list pos:line="87" pos:column="7">(<argument><expr><name pos:line="87" pos:column="8">status<pos:position pos:line="87" pos:column="14"/></name></expr></argument>)<pos:position pos:line="87" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="16"/></expr_stmt>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_143_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">set_socket_options<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">fd<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">options<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">tok<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><operator pos:line="4" pos:column="13">!<pos:position pos:line="4" pos:column="14"/></operator><name pos:line="4" pos:column="14">options<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="25">!<pos:position pos:line="4" pos:column="26"/></operator><operator pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">options<pos:position pos:line="4" pos:column="34"/></name></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35"> <block type="pseudo"><return pos:line="4" pos:column="36">return;<pos:position pos:line="4" pos:column="43"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="6" pos:column="9">options<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <call><name pos:line="6" pos:column="19">strdup<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">options<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
	
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">options<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="23">out_of_memory<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><literal type="string" pos:line="8" pos:column="37">"set_socket_options"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt></block></then></if>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">tok<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator><call><name pos:line="10" pos:column="18">strtok<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">options<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">" \t,"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></init> <condition><expr><name pos:line="10" pos:column="43">tok<pos:position pos:line="10" pos:column="46"/></name></expr>;<pos:position pos:line="10" pos:column="47"/></condition> <incr><expr><name pos:line="10" pos:column="48">tok<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">=<pos:position pos:line="10" pos:column="52"/></operator><call><name pos:line="10" pos:column="52">strtok<pos:position pos:line="10" pos:column="58"/></name><argument_list pos:line="10" pos:column="58">(<argument><expr><name pos:line="10" pos:column="59">NULL<pos:position pos:line="10" pos:column="63"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="64">" \t,"<pos:position pos:line="10" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="71"/></argument_list></call></expr></incr>)<pos:position pos:line="10" pos:column="72"/></control> <block pos:line="10" pos:column="73">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">int<pos:position pos:line="11" pos:column="20"/></name></type> <name pos:line="11" pos:column="21">ret<pos:position pos:line="11" pos:column="24"/></name><init pos:line="11" pos:column="24">=<expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></init></decl>,<decl><type ref="prev"/><name pos:line="11" pos:column="27">i<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">int<pos:position pos:line="12" pos:column="20"/></name></type> <name pos:line="12" pos:column="21">value<pos:position pos:line="12" pos:column="26"/></name> <init pos:line="12" pos:column="27">= <expr><literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier></type><name pos:line="13" pos:column="23">p<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="14" pos:column="17">int<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">got_value<pos:position pos:line="14" pos:column="30"/></name> <init pos:line="14" pos:column="31">= <expr><literal type="number" pos:line="14" pos:column="33">0<pos:position pos:line="14" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>

		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">p<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">strchr<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">tok<pos:position pos:line="16" pos:column="36"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="16" pos:column="37">'='<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call><operator pos:line="16" pos:column="41">)<pos:position pos:line="16" pos:column="42"/></operator></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43"> <block pos:line="16" pos:column="44">{
			<expr_stmt><expr><operator pos:line="17" pos:column="25">*<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">p<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
			<expr_stmt><expr><name pos:line="18" pos:column="25">value<pos:position pos:line="18" pos:column="30"/></name> <operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator> <call><name pos:line="18" pos:column="33">atoi<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">p<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">+<pos:position pos:line="18" pos:column="40"/></operator><literal type="number" pos:line="18" pos:column="40">1<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="19" pos:column="25">got_value<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <literal type="number" pos:line="19" pos:column="37">1<pos:position pos:line="19" pos:column="38"/></literal></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>

		<for pos:line="22" pos:column="17">for <control pos:line="22" pos:column="21">(<init><expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator><literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></init><condition><expr><name><name pos:line="22" pos:column="26">socket_options<pos:position pos:line="22" pos:column="40"/></name><index pos:line="22" pos:column="40">[<expr><name pos:line="22" pos:column="41">i<pos:position pos:line="22" pos:column="42"/></name></expr>]<pos:position pos:line="22" pos:column="43"/></index></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">name<pos:position pos:line="22" pos:column="48"/></name></expr>;<pos:position pos:line="22" pos:column="49"/></condition><incr><expr><name pos:line="22" pos:column="49">i<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">++<pos:position pos:line="22" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="53"/></control>
			<block type="pseudo"><if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><call><name pos:line="23" pos:column="29">strcmp<pos:position pos:line="23" pos:column="35"/></name><argument_list pos:line="23" pos:column="35">(<argument><expr><name><name pos:line="23" pos:column="36">socket_options<pos:position pos:line="23" pos:column="50"/></name><index pos:line="23" pos:column="50">[<expr><name pos:line="23" pos:column="51">i<pos:position pos:line="23" pos:column="52"/></name></expr>]<pos:position pos:line="23" pos:column="53"/></index></name><operator pos:line="23" pos:column="53">.<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">name<pos:position pos:line="23" pos:column="58"/></name></expr></argument>,<argument><expr><name pos:line="23" pos:column="59">tok<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call><operator pos:line="23" pos:column="63">==<pos:position pos:line="23" pos:column="65"/></operator><literal type="number" pos:line="23" pos:column="65">0<pos:position pos:line="23" pos:column="66"/></literal></expr>)<pos:position pos:line="23" pos:column="67"/></condition><then pos:line="23" pos:column="67">
				<block type="pseudo"><break pos:line="24" pos:column="33">break;<pos:position pos:line="24" pos:column="39"/></break></block></then></if></block></for>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name><name pos:line="26" pos:column="22">socket_options<pos:position pos:line="26" pos:column="36"/></name><index pos:line="26" pos:column="36">[<expr><name pos:line="26" pos:column="37">i<pos:position pos:line="26" pos:column="38"/></name></expr>]<pos:position pos:line="26" pos:column="39"/></index></name><operator pos:line="26" pos:column="39">.<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="40">name<pos:position pos:line="26" pos:column="44"/></name></expr>)<pos:position pos:line="26" pos:column="45"/></condition><then pos:line="26" pos:column="45"> <block pos:line="26" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">rprintf<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">FERROR<pos:position pos:line="27" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="27" pos:column="40">"Unknown socket option %s\n"<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>,<argument><expr><name pos:line="27" pos:column="69">tok<pos:position pos:line="27" pos:column="72"/></name></expr></argument>)<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="74"/></expr_stmt>
			<continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue>
		}<pos:position pos:line="29" pos:column="18"/></block></then></if>

		<switch pos:line="31" pos:column="17">switch <condition pos:line="31" pos:column="24">(<expr><name><name pos:line="31" pos:column="25">socket_options<pos:position pos:line="31" pos:column="39"/></name><index pos:line="31" pos:column="39">[<expr><name pos:line="31" pos:column="40">i<pos:position pos:line="31" pos:column="41"/></name></expr>]<pos:position pos:line="31" pos:column="42"/></index></name><operator pos:line="31" pos:column="42">.<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="43">opttype<pos:position pos:line="31" pos:column="50"/></name></expr>)<pos:position pos:line="31" pos:column="51"/></condition> <block pos:line="31" pos:column="52">{
		<case pos:line="32" pos:column="17">case <expr><name pos:line="32" pos:column="22">OPT_BOOL<pos:position pos:line="32" pos:column="30"/></name></expr>:<pos:position pos:line="32" pos:column="31"/></case>
		<case pos:line="33" pos:column="17">case <expr><name pos:line="33" pos:column="22">OPT_INT<pos:position pos:line="33" pos:column="29"/></name></expr>:<pos:position pos:line="33" pos:column="30"/></case>
			<expr_stmt><expr><name pos:line="34" pos:column="25">ret<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <call><name pos:line="34" pos:column="31">setsockopt<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name pos:line="34" pos:column="42">fd<pos:position pos:line="34" pos:column="44"/></name></expr></argument>,<argument><expr><name><name pos:line="34" pos:column="45">socket_options<pos:position pos:line="34" pos:column="59"/></name><index pos:line="34" pos:column="59">[<expr><name pos:line="34" pos:column="60">i<pos:position pos:line="34" pos:column="61"/></name></expr>]<pos:position pos:line="34" pos:column="62"/></index></name><operator pos:line="34" pos:column="62">.<pos:position pos:line="34" pos:column="63"/></operator><name pos:line="34" pos:column="63">level<pos:position pos:line="34" pos:column="68"/></name></expr></argument>,
					 <argument><expr><name><name pos:line="35" pos:column="42">socket_options<pos:position pos:line="35" pos:column="56"/></name><index pos:line="35" pos:column="56">[<expr><name pos:line="35" pos:column="57">i<pos:position pos:line="35" pos:column="58"/></name></expr>]<pos:position pos:line="35" pos:column="59"/></index></name><operator pos:line="35" pos:column="59">.<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="60">option<pos:position pos:line="35" pos:column="66"/></name></expr></argument>,<argument><expr><operator pos:line="35" pos:column="67">(<pos:position pos:line="35" pos:column="68"/></operator><name pos:line="35" pos:column="68">char<pos:position pos:line="35" pos:column="72"/></name> <operator pos:line="35" pos:column="73">*<pos:position pos:line="35" pos:column="74"/></operator><operator pos:line="35" pos:column="74">)<pos:position pos:line="35" pos:column="75"/></operator><operator pos:line="35" pos:column="75">&amp;<pos:position pos:line="35" pos:column="80"/></operator><name pos:line="35" pos:column="76">value<pos:position pos:line="35" pos:column="81"/></name></expr></argument>,<argument><expr><sizeof pos:line="35" pos:column="82">sizeof<argument_list pos:line="35" pos:column="88">(<argument><expr><name pos:line="35" pos:column="89">int<pos:position pos:line="35" pos:column="92"/></name></expr></argument>)<pos:position pos:line="35" pos:column="93"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="95"/></expr_stmt>
			<break pos:line="36" pos:column="25">break;<pos:position pos:line="36" pos:column="31"/></break>
			
		<case pos:line="38" pos:column="17">case <expr><name pos:line="38" pos:column="22">OPT_ON<pos:position pos:line="38" pos:column="28"/></name></expr>:<pos:position pos:line="38" pos:column="29"/></case>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">got_value<pos:position pos:line="39" pos:column="38"/></name></expr>)<pos:position pos:line="39" pos:column="39"/></condition><then pos:line="39" pos:column="39">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="33">rprintf<pos:position pos:line="40" pos:column="40"/></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">FERROR<pos:position pos:line="40" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="40" pos:column="48">"syntax error - %s does not take a value\n"<pos:position pos:line="40" pos:column="91"/></literal></expr></argument>,<argument><expr><name pos:line="40" pos:column="92">tok<pos:position pos:line="40" pos:column="95"/></name></expr></argument>)<pos:position pos:line="40" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="97"/></expr_stmt></block></then></if>

			<block pos:line="42" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="43" pos:column="33">int<pos:position pos:line="43" pos:column="36"/></name></type> <name pos:line="43" pos:column="37">on<pos:position pos:line="43" pos:column="39"/></name> <init pos:line="43" pos:column="40">= <expr><name><name pos:line="43" pos:column="42">socket_options<pos:position pos:line="43" pos:column="56"/></name><index pos:line="43" pos:column="56">[<expr><name pos:line="43" pos:column="57">i<pos:position pos:line="43" pos:column="58"/></name></expr>]<pos:position pos:line="43" pos:column="59"/></index></name><operator pos:line="43" pos:column="59">.<pos:position pos:line="43" pos:column="60"/></operator><name pos:line="43" pos:column="60">value<pos:position pos:line="43" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="66"/></decl_stmt>
				<expr_stmt><expr><name pos:line="44" pos:column="33">ret<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <call><name pos:line="44" pos:column="39">setsockopt<pos:position pos:line="44" pos:column="49"/></name><argument_list pos:line="44" pos:column="49">(<argument><expr><name pos:line="44" pos:column="50">fd<pos:position pos:line="44" pos:column="52"/></name></expr></argument>,<argument><expr><name><name pos:line="44" pos:column="53">socket_options<pos:position pos:line="44" pos:column="67"/></name><index pos:line="44" pos:column="67">[<expr><name pos:line="44" pos:column="68">i<pos:position pos:line="44" pos:column="69"/></name></expr>]<pos:position pos:line="44" pos:column="70"/></index></name><operator pos:line="44" pos:column="70">.<pos:position pos:line="44" pos:column="71"/></operator><name pos:line="44" pos:column="71">level<pos:position pos:line="44" pos:column="76"/></name></expr></argument>,
						 <argument><expr><name><name pos:line="45" pos:column="50">socket_options<pos:position pos:line="45" pos:column="64"/></name><index pos:line="45" pos:column="64">[<expr><name pos:line="45" pos:column="65">i<pos:position pos:line="45" pos:column="66"/></name></expr>]<pos:position pos:line="45" pos:column="67"/></index></name><operator pos:line="45" pos:column="67">.<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="68">option<pos:position pos:line="45" pos:column="74"/></name></expr></argument>,<argument><expr><operator pos:line="45" pos:column="75">(<pos:position pos:line="45" pos:column="76"/></operator><name pos:line="45" pos:column="76">char<pos:position pos:line="45" pos:column="80"/></name> <operator pos:line="45" pos:column="81">*<pos:position pos:line="45" pos:column="82"/></operator><operator pos:line="45" pos:column="82">)<pos:position pos:line="45" pos:column="83"/></operator><operator pos:line="45" pos:column="83">&amp;<pos:position pos:line="45" pos:column="88"/></operator><name pos:line="45" pos:column="84">on<pos:position pos:line="45" pos:column="86"/></name></expr></argument>,<argument><expr><sizeof pos:line="45" pos:column="87">sizeof<argument_list pos:line="45" pos:column="93">(<argument><expr><name pos:line="45" pos:column="94">int<pos:position pos:line="45" pos:column="97"/></name></expr></argument>)<pos:position pos:line="45" pos:column="98"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="100"/></expr_stmt>
			}<pos:position pos:line="46" pos:column="26"/></block>
			<break pos:line="47" pos:column="25">break;<pos:position pos:line="47" pos:column="31"/></break>	  
		}<pos:position pos:line="48" pos:column="18"/></block></switch>
		
		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><name pos:line="50" pos:column="21">ret<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">!=<pos:position pos:line="50" pos:column="27"/></operator> <literal type="number" pos:line="50" pos:column="28">0<pos:position pos:line="50" pos:column="29"/></literal></expr>)<pos:position pos:line="50" pos:column="30"/></condition><then pos:line="50" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="25">rprintf<pos:position pos:line="51" pos:column="32"/></name><argument_list pos:line="51" pos:column="32">(<argument><expr><name pos:line="51" pos:column="33">FERROR<pos:position pos:line="51" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="41">"failed to set socket option %s: %s\n"<pos:position pos:line="51" pos:column="79"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="81">tok<pos:position pos:line="51" pos:column="84"/></name></expr></argument>,
				<argument><expr><call><name pos:line="52" pos:column="33">strerror<pos:position pos:line="52" pos:column="41"/></name><argument_list pos:line="52" pos:column="41">(<argument><expr><name pos:line="52" pos:column="42">errno<pos:position pos:line="52" pos:column="47"/></name></expr></argument>)<pos:position pos:line="52" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="53" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="55" pos:column="9">free<pos:position pos:line="55" pos:column="13"/></name><argument_list pos:line="55" pos:column="13">(<argument><expr><name pos:line="55" pos:column="14">options<pos:position pos:line="55" pos:column="21"/></name></expr></argument>)<pos:position pos:line="55" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

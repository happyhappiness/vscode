<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_721_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">vasprintf<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier><modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">ptr<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">format<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">va_list<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">ap<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">va_list<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">ap2<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">VA_COPY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">ap2<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="22">ap<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="7" pos:column="9">ret<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">vsnprintf<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="31">0<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="34">format<pos:position pos:line="7" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="42">ap2<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">va_end<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">ap2<pos:position pos:line="8" pos:column="19"/></name></expr></argument>)<pos:position pos:line="8" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">ret<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block type="pseudo"><return pos:line="9" pos:column="22">return <expr><name pos:line="9" pos:column="29">ret<pos:position pos:line="9" pos:column="32"/></name></expr>;<pos:position pos:line="9" pos:column="33"/></return></block></then></if>

	<expr_stmt><expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">ptr<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">)<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">char<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">)<pos:position pos:line="11" pos:column="26"/></operator><call><name pos:line="11" pos:column="26">malloc<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">ret<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">+<pos:position pos:line="11" pos:column="37"/></operator><literal type="number" pos:line="11" pos:column="37">1<pos:position pos:line="11" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><operator pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">ptr<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block type="pseudo"><return pos:line="12" pos:column="20">return <expr><operator pos:line="12" pos:column="27">-<pos:position pos:line="12" pos:column="28"/></operator><literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr>;<pos:position pos:line="12" pos:column="30"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">VA_COPY<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">ap2<pos:position pos:line="14" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="22">ap<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">ret<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">vsnprintf<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><operator pos:line="15" pos:column="25">*<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="26">ptr<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">ret<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">+<pos:position pos:line="15" pos:column="35"/></operator><literal type="number" pos:line="15" pos:column="35">1<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">format<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">ap2<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">va_end<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">ap2<pos:position pos:line="16" pos:column="19"/></name></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">ret<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_400_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">setup_iconv<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">void<pos:position pos:line="1" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="23"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">defset<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><call><name pos:line="3" pos:column="30">default_charset<pos:position pos:line="3" pos:column="45"/></name><argument_list pos:line="3" pos:column="45">()<pos:position pos:line="3" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
<cpp:ifdef pos:line="4" pos:column="1"># <cpp:directive pos:line="4" pos:column="3">ifdef<pos:position pos:line="4" pos:column="8"/></cpp:directive> <name pos:line="4" pos:column="9">ICONV_OPTION<pos:position pos:line="4" pos:column="21"/></name></cpp:ifdef>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">charset<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">cp<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1"># <cpp:directive pos:line="7" pos:column="3">endif<pos:position pos:line="7" pos:column="8"/></cpp:directive></cpp:endif>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">am_server<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&amp;&amp;<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="27">!<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">allow_8bit_chars<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45"> <block pos:line="9" pos:column="46">{
		<comment type="block" pos:line="10" pos:column="17">/* It's OK if this fails... */</comment>
		<expr_stmt><expr><name pos:line="11" pos:column="17">ic_chck<pos:position pos:line="11" pos:column="24"/></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <call><name pos:line="11" pos:column="27">iconv_open<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">defset<pos:position pos:line="11" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">defset<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">DEBUG_GTE<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">ICONV<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="38">2<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41"> <block pos:line="13" pos:column="42">{
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">ic_chck<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">==<pos:position pos:line="14" pos:column="39"/></operator> <operator pos:line="14" pos:column="40">(<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">iconv_t<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">)<pos:position pos:line="14" pos:column="49"/></operator><operator pos:line="14" pos:column="49">-<pos:position pos:line="14" pos:column="50"/></operator><literal type="number" pos:line="14" pos:column="50">1<pos:position pos:line="14" pos:column="51"/></literal></expr>)<pos:position pos:line="14" pos:column="52"/></condition><then pos:line="14" pos:column="52"> <block pos:line="14" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="15" pos:column="33">rprintf<pos:position pos:line="15" pos:column="40"/></name><argument_list pos:line="15" pos:column="40">(<argument><expr><name pos:line="15" pos:column="41">FINFO<pos:position pos:line="15" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="16" pos:column="41">"msg checking via isprint()"<pos:position pos:line="16" pos:column="69"/></literal>
					<literal type="string" pos:line="17" pos:column="41">" (iconv_open(\"%s\", \"%s\") errno: %d)\n"<pos:position pos:line="17" pos:column="84"/></literal></expr></argument>,
					<argument><expr><name pos:line="18" pos:column="41">defset<pos:position pos:line="18" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="49">defset<pos:position pos:line="18" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">errno<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
			}<pos:position pos:line="19" pos:column="26"/></block></then> <else pos:line="19" pos:column="27">else <block pos:line="19" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="20" pos:column="33">rprintf<pos:position pos:line="20" pos:column="40"/></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">FINFO<pos:position pos:line="20" pos:column="46"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="21" pos:column="41">"msg checking charset: %s\n"<pos:position pos:line="21" pos:column="69"/></literal></expr></argument>,
					<argument><expr><name pos:line="22" pos:column="41">defset<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></else></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
	}<pos:position pos:line="25" pos:column="10"/></block></then> <else pos:line="25" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="17">ic_chck<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <operator pos:line="26" pos:column="27">(<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">iconv_t<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator><operator pos:line="26" pos:column="36">-<pos:position pos:line="26" pos:column="37"/></operator><literal type="number" pos:line="26" pos:column="37">1<pos:position pos:line="26" pos:column="38"/></literal></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt></block></else></if>

<cpp:ifdef pos:line="28" pos:column="1"># <cpp:directive pos:line="28" pos:column="3">ifdef<pos:position pos:line="28" pos:column="8"/></cpp:directive> <name pos:line="28" pos:column="9">ICONV_OPTION<pos:position pos:line="28" pos:column="21"/></name></cpp:ifdef>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">iconv_opt<pos:position pos:line="29" pos:column="23"/></name></expr>)<pos:position pos:line="29" pos:column="24"/></condition><then pos:line="29" pos:column="24">
		<block type="pseudo"><return pos:line="30" pos:column="17">return;<pos:position pos:line="30" pos:column="24"/></return></block></then></if>

	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">cp<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">strchr<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">iconv_opt<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="37">','<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call><operator pos:line="32" pos:column="41">)<pos:position pos:line="32" pos:column="42"/></operator> <operator pos:line="32" pos:column="43">!=<pos:position pos:line="32" pos:column="45"/></operator> <name pos:line="32" pos:column="46">NULL<pos:position pos:line="32" pos:column="50"/></name></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51"> <block pos:line="32" pos:column="52">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><name pos:line="33" pos:column="21">am_server<pos:position pos:line="33" pos:column="30"/></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <comment type="block" pos:line="33" pos:column="32">/* A local transfer needs this. */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="25">iconv_opt<pos:position pos:line="34" pos:column="34"/></name> <operator pos:line="34" pos:column="35">=<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="37">cp<pos:position pos:line="34" pos:column="39"/></name> <operator pos:line="34" pos:column="40">+<pos:position pos:line="34" pos:column="41"/></operator> <literal type="number" pos:line="34" pos:column="42">1<pos:position pos:line="34" pos:column="43"/></literal></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt></block></then>
		<else pos:line="35" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">cp<pos:position pos:line="36" pos:column="28"/></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <literal type="char" pos:line="36" pos:column="31">'\0'<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt></block></else></if>
	}<pos:position pos:line="37" pos:column="10"/></block></then></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><operator pos:line="39" pos:column="13">!<pos:position pos:line="39" pos:column="14"/></operator><operator pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">iconv_opt<pos:position pos:line="39" pos:column="24"/></name> <operator pos:line="39" pos:column="25">||<pos:position pos:line="39" pos:column="27"/></operator> <operator pos:line="39" pos:column="28">(<pos:position pos:line="39" pos:column="29"/></operator><operator pos:line="39" pos:column="29">*<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">iconv_opt<pos:position pos:line="39" pos:column="39"/></name> <operator pos:line="39" pos:column="40">==<pos:position pos:line="39" pos:column="42"/></operator> <literal type="char" pos:line="39" pos:column="43">'.'<pos:position pos:line="39" pos:column="46"/></literal> <operator pos:line="39" pos:column="47">&amp;&amp;<pos:position pos:line="39" pos:column="57"/></operator> <name><name pos:line="39" pos:column="50">iconv_opt<pos:position pos:line="39" pos:column="59"/></name><index pos:line="39" pos:column="59">[<expr><literal type="number" pos:line="39" pos:column="60">1<pos:position pos:line="39" pos:column="61"/></literal></expr>]<pos:position pos:line="39" pos:column="62"/></index></name> <operator pos:line="39" pos:column="63">==<pos:position pos:line="39" pos:column="65"/></operator> <literal type="char" pos:line="39" pos:column="66">'\0'<pos:position pos:line="39" pos:column="70"/></literal><operator pos:line="39" pos:column="70">)<pos:position pos:line="39" pos:column="71"/></operator></expr>)<pos:position pos:line="39" pos:column="72"/></condition><then pos:line="39" pos:column="72">
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">charset<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="27">defset<pos:position pos:line="40" pos:column="33"/></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt></block></then>
	<else pos:line="41" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">charset<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">iconv_opt<pos:position pos:line="42" pos:column="36"/></name></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt></block></else></if>

	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">(<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">ic_send<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <call><name pos:line="44" pos:column="24">iconv_open<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">UTF8_CHARSET<pos:position pos:line="44" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">charset<pos:position pos:line="44" pos:column="56"/></name></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call><operator pos:line="44" pos:column="57">)<pos:position pos:line="44" pos:column="58"/></operator> <operator pos:line="44" pos:column="59">==<pos:position pos:line="44" pos:column="61"/></operator> <operator pos:line="44" pos:column="62">(<pos:position pos:line="44" pos:column="63"/></operator><name pos:line="44" pos:column="63">iconv_t<pos:position pos:line="44" pos:column="70"/></name><operator pos:line="44" pos:column="70">)<pos:position pos:line="44" pos:column="71"/></operator><operator pos:line="44" pos:column="71">-<pos:position pos:line="44" pos:column="72"/></operator><literal type="number" pos:line="44" pos:column="72">1<pos:position pos:line="44" pos:column="73"/></literal></expr>)<pos:position pos:line="44" pos:column="74"/></condition><then pos:line="44" pos:column="74"> <block pos:line="44" pos:column="75">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">rprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">FERROR<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="33">"iconv_open(\"%s\", \"%s\") failed\n"<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>,
			<argument><expr><name pos:line="46" pos:column="25">UTF8_CHARSET<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">charset<pos:position pos:line="46" pos:column="46"/></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">exit_cleanup<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">RERR_UNSUPPORTED<pos:position pos:line="47" pos:column="46"/></name></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">ic_recv<pos:position pos:line="50" pos:column="21"/></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <call><name pos:line="50" pos:column="24">iconv_open<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">charset<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="44">UTF8_CHARSET<pos:position pos:line="50" pos:column="56"/></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call><operator pos:line="50" pos:column="57">)<pos:position pos:line="50" pos:column="58"/></operator> <operator pos:line="50" pos:column="59">==<pos:position pos:line="50" pos:column="61"/></operator> <operator pos:line="50" pos:column="62">(<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="63">iconv_t<pos:position pos:line="50" pos:column="70"/></name><operator pos:line="50" pos:column="70">)<pos:position pos:line="50" pos:column="71"/></operator><operator pos:line="50" pos:column="71">-<pos:position pos:line="50" pos:column="72"/></operator><literal type="number" pos:line="50" pos:column="72">1<pos:position pos:line="50" pos:column="73"/></literal></expr>)<pos:position pos:line="50" pos:column="74"/></condition><then pos:line="50" pos:column="74"> <block pos:line="50" pos:column="75">{
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">rprintf<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">FERROR<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="33">"iconv_open(\"%s\", \"%s\") failed\n"<pos:position pos:line="51" pos:column="70"/></literal></expr></argument>,
			<argument><expr><name pos:line="52" pos:column="25">charset<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">UTF8_CHARSET<pos:position pos:line="52" pos:column="46"/></name></expr></argument>)<pos:position pos:line="52" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="53" pos:column="17">exit_cleanup<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">RERR_UNSUPPORTED<pos:position pos:line="53" pos:column="46"/></name></expr></argument>)<pos:position pos:line="53" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="54" pos:column="10"/></block></then></if>

	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">DEBUG_GTE<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">ICONV<pos:position pos:line="56" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="30">1<pos:position pos:line="56" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="33"/></condition><then pos:line="56" pos:column="33"> <block pos:line="56" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">rprintf<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">FINFO<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="32">"[%s] charset: %s\n"<pos:position pos:line="57" pos:column="52"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="58" pos:column="25">who_am_i<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">()<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="58" pos:column="37">*<pos:position pos:line="58" pos:column="38"/></operator><name pos:line="58" pos:column="38">charset<pos:position pos:line="58" pos:column="45"/></name></expr> ?<pos:position pos:line="58" pos:column="47"/></condition><then pos:line="58" pos:column="47"> <expr><name pos:line="58" pos:column="48">charset<pos:position pos:line="58" pos:column="55"/></name></expr> <pos:position pos:line="58" pos:column="56"/></then><else pos:line="58" pos:column="56">: <expr><literal type="string" pos:line="58" pos:column="58">"[LOCALE]"<pos:position pos:line="58" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>
<cpp:endif pos:line="60" pos:column="1"># <cpp:directive pos:line="60" pos:column="3">endif<pos:position pos:line="60" pos:column="8"/></cpp:directive></cpp:endif>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_40_rsync-1.6.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sparse_end<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">f<pos:position pos:line="1" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="22"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">last_sparse<pos:position pos:line="3" pos:column="18"/></name></expr>)<pos:position pos:line="3" pos:column="19"/></condition><then pos:line="3" pos:column="19"> <block pos:line="3" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">lseek<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><name pos:line="4" pos:column="11">f<pos:position pos:line="4" pos:column="12"/></name></expr></argument>,<argument><expr><operator pos:line="4" pos:column="13">-<pos:position pos:line="4" pos:column="14"/></operator><literal type="number" pos:line="4" pos:column="14">1<pos:position pos:line="4" pos:column="15"/></literal></expr></argument>,<argument><expr><name pos:line="4" pos:column="16">SEEK_CUR<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><ternary><condition><expr><call><name pos:line="5" pos:column="13">write<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">f<pos:position pos:line="5" pos:column="20"/></name></expr></argument>,<argument><expr><operator pos:line="5" pos:column="21">&amp;<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="22">last_byte<pos:position pos:line="5" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="32">1<pos:position pos:line="5" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call> <operator pos:line="5" pos:column="35">==<pos:position pos:line="5" pos:column="37"/></operator> <literal type="number" pos:line="5" pos:column="38">1<pos:position pos:line="5" pos:column="39"/></literal></expr> ?<pos:position pos:line="5" pos:column="41"/></condition><then pos:line="5" pos:column="41"> <expr><literal type="number" pos:line="5" pos:column="42">0<pos:position pos:line="5" pos:column="43"/></literal></expr> <pos:position pos:line="5" pos:column="44"/></then><else pos:line="5" pos:column="44">: <expr><operator pos:line="5" pos:column="46">-<pos:position pos:line="5" pos:column="47"/></operator><literal type="number" pos:line="5" pos:column="47">1<pos:position pos:line="5" pos:column="48"/></literal></expr></else></ternary><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator></expr>;<pos:position pos:line="5" pos:column="50"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="7" pos:column="3">last_sparse<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
  <return pos:line="8" pos:column="3">return <expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

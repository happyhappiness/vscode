<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_324.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">check_timeout<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">time_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">t<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">io_timeout<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25"> <block type="pseudo"><return pos:line="5" pos:column="26">return;<pos:position pos:line="5" pos:column="33"/></return></block></then></if>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">last_io<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
		<expr_stmt><expr><name pos:line="8" pos:column="17">last_io<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <call><name pos:line="8" pos:column="27">time<pos:position pos:line="8" pos:column="31"/></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">NULL<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
		<return pos:line="9" pos:column="17">return;<pos:position pos:line="9" pos:column="24"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">t<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <call><name pos:line="12" pos:column="13">time<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr></argument>)<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">last_io<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">&amp;&amp;<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="24">io_timeout<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">&amp;&amp;<pos:position pos:line="14" pos:column="45"/></operator> <operator pos:line="14" pos:column="38">(<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">t<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">last_io<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">)<pos:position pos:line="14" pos:column="49"/></operator><operator pos:line="14" pos:column="49">&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">io_timeout<pos:position pos:line="14" pos:column="60"/></name></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61"> <block pos:line="14" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">fprintf<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">FERROR<pos:position pos:line="15" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="15" pos:column="32">"read timeout after %d second - exiting\n"<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>, 
			<argument><expr><call pos:line="16" pos:column="25">(<name pos:line="16" pos:column="26">int<pos:position pos:line="16" pos:column="29"/></name>)<argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">t<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">last_io<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">exit_cleanup<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><literal type="number" pos:line="17" pos:column="30">1<pos:position pos:line="17" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

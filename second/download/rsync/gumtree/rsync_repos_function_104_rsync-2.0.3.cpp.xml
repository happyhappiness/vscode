<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_104_rsync-2.0.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">rflush<pos:position pos:line="1" pos:column="12"/></name><parameter_list pos:line="1" pos:column="12">(<parameter><decl><type><name pos:line="1" pos:column="13">int<pos:position pos:line="1" pos:column="16"/></name></type> <name pos:line="1" pos:column="17">fd<pos:position pos:line="1" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="20"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">f<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">extern<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">am_daemon<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">am_daemon<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
		<return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">fd<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">FERROR<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">f<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">=<pos:position pos:line="11" pos:column="20"/></operator> <name pos:line="11" pos:column="21">stderr<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if> 

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">fd<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">FINFO<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
		<decl_stmt><decl><specifier pos:line="15" pos:column="17">extern<pos:position pos:line="15" pos:column="23"/></specifier> <type><name pos:line="15" pos:column="24">int<pos:position pos:line="15" pos:column="27"/></name></type> <name pos:line="15" pos:column="28">am_server<pos:position pos:line="15" pos:column="37"/></name></decl>;<pos:position pos:line="15" pos:column="38"/></decl_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">am_server<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31"> 
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">f<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">stderr<pos:position pos:line="17" pos:column="35"/></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></then>
		<else pos:line="18" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="25">f<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">stdout<pos:position pos:line="19" pos:column="35"/></name></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt></block></else></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if> 

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">f<pos:position pos:line="22" pos:column="15"/></name></expr>)<pos:position pos:line="22" pos:column="16"/></condition><then pos:line="22" pos:column="16"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">exit_cleanup<pos:position pos:line="22" pos:column="29"/></name><argument_list pos:line="22" pos:column="29">(<argument><expr><literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">fflush<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><name pos:line="23" pos:column="16">f<pos:position pos:line="23" pos:column="17"/></name></expr></argument>)<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

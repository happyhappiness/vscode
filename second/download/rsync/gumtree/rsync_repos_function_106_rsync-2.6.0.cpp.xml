<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_106_rsync-2.6.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">client_addr<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">fd<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">sockaddr_storage<pos:position pos:line="3" pos:column="32"/></name></name></type> <name pos:line="3" pos:column="33">ss<pos:position pos:line="3" pos:column="35"/></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">socklen_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">length<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><sizeof pos:line="4" pos:column="28">sizeof <name pos:line="4" pos:column="35">ss<pos:position pos:line="4" pos:column="37"/></name></sizeof></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">ssh_client<pos:position pos:line="5" pos:column="25"/></name></decl>, <modifier pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="28">p<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">char<pos:position pos:line="7" pos:column="20"/></name></type> <name><name pos:line="7" pos:column="21">addr_buf<pos:position pos:line="7" pos:column="29"/></name><index pos:line="7" pos:column="29">[<expr><literal type="number" pos:line="7" pos:column="30">100<pos:position pos:line="7" pos:column="33"/></literal></expr>]<pos:position pos:line="7" pos:column="34"/></index></name></decl>;<pos:position pos:line="7" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="8" pos:column="9">static<pos:position pos:line="8" pos:column="15"/></specifier> <type><name pos:line="8" pos:column="16">int<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">initialised<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">initialised<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block type="pseudo"><return pos:line="10" pos:column="26">return <expr><name pos:line="10" pos:column="33">addr_buf<pos:position pos:line="10" pos:column="41"/></name></expr>;<pos:position pos:line="10" pos:column="42"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">initialised<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="number" pos:line="12" pos:column="23">1<pos:position pos:line="12" pos:column="24"/></literal></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">am_server<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition><then pos:line="14" pos:column="23"> <block pos:line="14" pos:column="24">{
		<comment type="block" pos:line="15" pos:column="17">/* daemon over --rsh mode */</comment>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">strcpy<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">addr_buf<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="34">"0.0.0.0"<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">ssh_client<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">=<pos:position pos:line="17" pos:column="34"/></operator> <call><name pos:line="17" pos:column="35">getenv<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">(<argument><expr><literal type="string" pos:line="17" pos:column="42">"SSH_CLIENT"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call><operator pos:line="17" pos:column="55">)<pos:position pos:line="17" pos:column="56"/></operator> <operator pos:line="17" pos:column="57">!=<pos:position pos:line="17" pos:column="59"/></operator> <name pos:line="17" pos:column="60">NULL<pos:position pos:line="17" pos:column="64"/></name></expr>)<pos:position pos:line="17" pos:column="65"/></condition><then pos:line="17" pos:column="65"> <block pos:line="17" pos:column="66">{
			<comment type="block" pos:line="18" pos:column="25">/* truncate SSH_CLIENT to just IP address */</comment>
			<expr_stmt><expr><name pos:line="19" pos:column="25">p<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <call><name pos:line="19" pos:column="29">strchr<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">ssh_client<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="48">' '<pos:position pos:line="19" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="53"/></expr_stmt>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><name pos:line="20" pos:column="29">p<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
				<expr_stmt><expr><name pos:line="21" pos:column="33">len<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">=<pos:position pos:line="21" pos:column="38"/></operator> <call><name pos:line="21" pos:column="39">MIN<pos:position pos:line="21" pos:column="42"/></name><argument_list pos:line="21" pos:column="42">(<argument><expr><call pos:line="21" pos:column="43">(<name pos:line="21" pos:column="44">unsigned<pos:position pos:line="21" pos:column="52"/></name> <name pos:line="21" pos:column="53">int<pos:position pos:line="21" pos:column="56"/></name>) <argument_list pos:line="21" pos:column="58">(<argument><expr><name pos:line="21" pos:column="59">p<pos:position pos:line="21" pos:column="60"/></name> <operator pos:line="21" pos:column="61">-<pos:position pos:line="21" pos:column="62"/></operator> <name pos:line="21" pos:column="63">ssh_client<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr></argument>, 
						<argument><expr><sizeof pos:line="22" pos:column="49">sizeof<argument_list pos:line="22" pos:column="55">(<argument><expr><name pos:line="22" pos:column="56">addr_buf<pos:position pos:line="22" pos:column="64"/></name></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></sizeof> <operator pos:line="22" pos:column="66">-<pos:position pos:line="22" pos:column="67"/></operator> <literal type="number" pos:line="22" pos:column="68">1<pos:position pos:line="22" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="71"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="23" pos:column="33">strncpy<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">addr_buf<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">ssh_client<pos:position pos:line="23" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="63">len<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="24" pos:column="33">*<pos:position pos:line="24" pos:column="34"/></operator><operator pos:line="24" pos:column="34">(<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">addr_buf<pos:position pos:line="24" pos:column="43"/></name> <operator pos:line="24" pos:column="44">+<pos:position pos:line="24" pos:column="45"/></operator> <name pos:line="24" pos:column="46">len<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">)<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">=<pos:position pos:line="24" pos:column="52"/></operator> <literal type="char" pos:line="24" pos:column="53">'\0'<pos:position pos:line="24" pos:column="57"/></literal></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">client_sockaddr<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">fd<pos:position pos:line="28" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="37">&amp;<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="38">ss<pos:position pos:line="28" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="42">&amp;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="43">length<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">getnameinfo<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><operator pos:line="29" pos:column="29">(<pos:position pos:line="29" pos:column="30"/></operator>struct <name pos:line="29" pos:column="37">sockaddr<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">*<pos:position pos:line="29" pos:column="47"/></operator><operator pos:line="29" pos:column="47">)<pos:position pos:line="29" pos:column="48"/></operator><operator pos:line="29" pos:column="48">&amp;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="49">ss<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">length<pos:position pos:line="29" pos:column="59"/></name></expr></argument>,
			    <argument><expr><name pos:line="30" pos:column="29">addr_buf<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="39">sizeof <name pos:line="30" pos:column="46">addr_buf<pos:position pos:line="30" pos:column="54"/></name></sizeof></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">NULL<pos:position pos:line="30" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="62">0<pos:position pos:line="30" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="65">NI_NUMERICHOST<pos:position pos:line="30" pos:column="79"/></name></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></else></if>

	<return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">addr_buf<pos:position pos:line="33" pos:column="24"/></name></expr>;<pos:position pos:line="33" pos:column="25"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_322_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">logit<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">priority<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">buf<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">logfile_was_closed<pos:position pos:line="3" pos:column="31"/></name></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="4" pos:column="17">logfile_reopen<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">logfile_fp<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <block pos:line="5" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">fprintf<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">logfile_fp<pos:position pos:line="6" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="37">"%s [%d] %s"<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="51">timestring<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">(<argument><expr><call><name pos:line="6" pos:column="62">time<pos:position pos:line="6" pos:column="66"/></name><argument_list pos:line="6" pos:column="66">(<argument><expr><name pos:line="6" pos:column="67">NULL<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="6" pos:column="75">(<pos:position pos:line="6" pos:column="76"/></operator><name pos:line="6" pos:column="76">int<pos:position pos:line="6" pos:column="79"/></name><operator pos:line="6" pos:column="79">)<pos:position pos:line="6" pos:column="80"/></operator><call><name pos:line="6" pos:column="80">getpid<pos:position pos:line="6" pos:column="86"/></name><argument_list pos:line="6" pos:column="86">()<pos:position pos:line="6" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="90">buf<pos:position pos:line="6" pos:column="93"/></name></expr></argument>)<pos:position pos:line="6" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="95"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">fflush<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">logfile_fp<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then> <else pos:line="8" pos:column="11">else <block pos:line="8" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">syslog<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">priority<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"%s"<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">buf<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="10" pos:column="10"/></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_880_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">inet_pton<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">int<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">af<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>,
	  <parameter><decl><type><specifier pos:line="3" pos:column="11">const<pos:position pos:line="3" pos:column="16"/></specifier> <name pos:line="3" pos:column="17">char<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">src<pos:position pos:line="3" pos:column="26"/></name></decl></parameter>,
	  <parameter><decl><type><name pos:line="4" pos:column="11">void<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">dst<pos:position pos:line="4" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="21"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<switch pos:line="6" pos:column="9">switch <condition pos:line="6" pos:column="16">(<expr><name pos:line="6" pos:column="17">af<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition> <block pos:line="6" pos:column="21">{
	<case pos:line="7" pos:column="9">case <expr><name pos:line="7" pos:column="14">AF_INET<pos:position pos:line="7" pos:column="21"/></name></expr>:<pos:position pos:line="7" pos:column="22"/></case>
		<return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><call><name pos:line="8" pos:column="25">inet_pton4<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">src<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">dst<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call><operator pos:line="8" pos:column="45">)<pos:position pos:line="8" pos:column="46"/></operator></expr>;<pos:position pos:line="8" pos:column="47"/></return>
<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">INET6<pos:position pos:line="9" pos:column="13"/></name></cpp:ifdef>
	<case pos:line="10" pos:column="9">case <expr><name pos:line="10" pos:column="14">AF_INET6<pos:position pos:line="10" pos:column="22"/></name></expr>:<pos:position pos:line="10" pos:column="23"/></case>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><call><name pos:line="11" pos:column="25">inet_pton6<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">src<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="41">dst<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator></expr>;<pos:position pos:line="11" pos:column="47"/></return>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
	<default pos:line="13" pos:column="9">default:<pos:position pos:line="13" pos:column="17"/></default>
		<expr_stmt><expr><name pos:line="14" pos:column="17">errno<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">EAFNOSUPPORT<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">-<pos:position pos:line="15" pos:column="26"/></operator><literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></switch>
	<comment type="block" pos:line="17" pos:column="9">/* NOTREACHED */</comment>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

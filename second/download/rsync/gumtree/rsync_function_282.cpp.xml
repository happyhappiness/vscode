<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_282.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">map_ptr<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">map_struct<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">map<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="38">off_t<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">offset<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">len<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name><name pos:line="3" pos:column="7">map<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">-&gt;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="12">map<pos:position pos:line="3" pos:column="15"/></name></name></expr>)<pos:position pos:line="3" pos:column="16"/></condition><then pos:line="3" pos:column="16">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><name><name pos:line="4" pos:column="12">map<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">map<pos:position pos:line="4" pos:column="20"/></name></name><operator pos:line="4" pos:column="20">+<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">offset<pos:position pos:line="4" pos:column="27"/></name></expr>;<pos:position pos:line="4" pos:column="28"/></return></block></then></if>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">len<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> 
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">NULL<pos:position pos:line="7" pos:column="16"/></name></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">len<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">=<pos:position pos:line="9" pos:column="8"/></operator> <call><name pos:line="9" pos:column="9">MIN<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">len<pos:position pos:line="9" pos:column="16"/></name></expr></argument>,<argument><expr><name><name pos:line="9" pos:column="17">map<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">size<pos:position pos:line="9" pos:column="26"/></name></name><operator pos:line="9" pos:column="26">-<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">offset<pos:position pos:line="9" pos:column="33"/></name></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">offset<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&gt;=<pos:position pos:line="11" pos:column="19"/></operator> <name><name pos:line="11" pos:column="17">map<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">p_offset<pos:position pos:line="11" pos:column="30"/></name></name> <operator pos:line="11" pos:column="31">&amp;&amp;<pos:position pos:line="11" pos:column="41"/></operator> 
      <name pos:line="12" pos:column="7">offset<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">+<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">len<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">&lt;=<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="21">map<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">p_offset<pos:position pos:line="12" pos:column="34"/></name></name><operator pos:line="12" pos:column="34">+<pos:position pos:line="12" pos:column="35"/></operator><name><name pos:line="12" pos:column="35">map<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">p_len<pos:position pos:line="12" pos:column="45"/></name></name></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46"> <block pos:line="12" pos:column="47">{
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name><name pos:line="13" pos:column="13">map<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">p<pos:position pos:line="13" pos:column="19"/></name></name> <operator pos:line="13" pos:column="20">+<pos:position pos:line="13" pos:column="21"/></operator> <operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">offset<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">-<pos:position pos:line="13" pos:column="31"/></operator> <name><name pos:line="13" pos:column="32">map<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">p_offset<pos:position pos:line="13" pos:column="45"/></name></name><operator pos:line="13" pos:column="45">)<pos:position pos:line="13" pos:column="46"/></operator><operator pos:line="13" pos:column="46">)<pos:position pos:line="13" pos:column="47"/></operator></expr>;<pos:position pos:line="13" pos:column="48"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">len<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">MAX<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="17">CHUNK_SIZE<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">len<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">MIN<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">len<pos:position pos:line="17" pos:column="16"/></name></expr></argument>,<argument><expr><name><name pos:line="17" pos:column="17">map<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">size<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">-<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">offset<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>  

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">len<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">&gt;<pos:position pos:line="19" pos:column="15"/></operator> <name><name pos:line="19" pos:column="13">map<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">p_size<pos:position pos:line="19" pos:column="24"/></name></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25"> <block pos:line="19" pos:column="26">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">map<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">p<pos:position pos:line="20" pos:column="15"/></name></name></expr>)<pos:position pos:line="20" pos:column="16"/></condition><then pos:line="20" pos:column="16"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">free<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name><name pos:line="20" pos:column="22">map<pos:position pos:line="20" pos:column="25"/></name><operator pos:line="20" pos:column="25">-&gt;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="27">p<pos:position pos:line="20" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">map<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">-&gt;<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="10">p<pos:position pos:line="21" pos:column="11"/></name></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">char<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></operator><operator pos:line="21" pos:column="21">)<pos:position pos:line="21" pos:column="22"/></operator><call><name pos:line="21" pos:column="22">malloc<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">len<pos:position pos:line="21" pos:column="32"/></name></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name><name pos:line="22" pos:column="10">map<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">p<pos:position pos:line="22" pos:column="16"/></name></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="18">out_of_memory<pos:position pos:line="22" pos:column="31"/></name><argument_list pos:line="22" pos:column="31">(<argument><expr><literal type="string" pos:line="22" pos:column="32">"map_ptr"<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">map<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">p_size<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">len<pos:position pos:line="23" pos:column="22"/></name></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><call><name pos:line="26" pos:column="7">lseek<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><name><name pos:line="26" pos:column="13">map<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">fd<pos:position pos:line="26" pos:column="20"/></name></name></expr></argument>,<argument><expr><name pos:line="26" pos:column="21">offset<pos:position pos:line="26" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="26" pos:column="28">SEEK_SET<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call> <operator pos:line="26" pos:column="38">!=<pos:position pos:line="26" pos:column="40"/></operator> <name pos:line="26" pos:column="41">offset<pos:position pos:line="26" pos:column="47"/></name> <operator pos:line="26" pos:column="48">||<pos:position pos:line="26" pos:column="50"/></operator>
      <call><name pos:line="27" pos:column="7">read<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">map<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">fd<pos:position pos:line="27" pos:column="19"/></name></name></expr></argument>,<argument><expr><name><name pos:line="27" pos:column="20">map<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">p<pos:position pos:line="27" pos:column="26"/></name></name></expr></argument>,<argument><expr><name pos:line="27" pos:column="27">len<pos:position pos:line="27" pos:column="30"/></name></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call> <operator pos:line="27" pos:column="32">!=<pos:position pos:line="27" pos:column="34"/></operator> <name pos:line="27" pos:column="35">len<pos:position pos:line="27" pos:column="38"/></name></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39"> <block pos:line="27" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">fprintf<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><name pos:line="28" pos:column="13">FERROR<pos:position pos:line="28" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="28" pos:column="20">"EOF in map_ptr!\n"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">exit_cleanup<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><literal type="number" pos:line="29" pos:column="18">1<pos:position pos:line="29" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="32" pos:column="3">map<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">p_offset<pos:position pos:line="32" pos:column="16"/></name></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">offset<pos:position pos:line="32" pos:column="25"/></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="33" pos:column="3">map<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">p_len<pos:position pos:line="33" pos:column="13"/></name></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name pos:line="33" pos:column="16">len<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>

  <return pos:line="35" pos:column="3">return <expr><name><name pos:line="35" pos:column="10">map<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">p<pos:position pos:line="35" pos:column="16"/></name></name></expr>;<pos:position pos:line="35" pos:column="17"/></return> 
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

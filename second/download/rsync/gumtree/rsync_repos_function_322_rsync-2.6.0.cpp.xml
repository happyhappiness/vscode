<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_322_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">print_rsync_version<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">enum<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">logcode<pos:position pos:line="1" pos:column="45"/></name></name></type> <name pos:line="1" pos:column="46">f<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <specifier pos:line="3" pos:column="14">const<pos:position pos:line="3" pos:column="19"/></specifier> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">got_socketpair<pos:position pos:line="3" pos:column="35"/></name> <init pos:line="3" pos:column="36">= <expr><literal type="string" pos:line="3" pos:column="38">"no "<pos:position pos:line="3" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <specifier pos:line="4" pos:column="14">const<pos:position pos:line="4" pos:column="19"/></specifier> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">hardlinks<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><literal type="string" pos:line="4" pos:column="33">"no "<pos:position pos:line="4" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <specifier pos:line="5" pos:column="14">const<pos:position pos:line="5" pos:column="19"/></specifier> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">links<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><literal type="string" pos:line="5" pos:column="29">"no "<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <specifier pos:line="6" pos:column="14">const<pos:position pos:line="6" pos:column="19"/></specifier> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">ipv6<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><literal type="string" pos:line="6" pos:column="28">"no "<pos:position pos:line="6" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">STRUCT_STAT<pos:position pos:line="7" pos:column="20"/></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">dumstat<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

<cpp:ifdef pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">ifdef<pos:position pos:line="9" pos:column="7"/></cpp:directive> <name pos:line="9" pos:column="8">HAVE_SOCKETPAIR<pos:position pos:line="9" pos:column="23"/></name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="10" pos:column="9">got_socketpair<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="string" pos:line="10" pos:column="26">""<pos:position pos:line="10" pos:column="28"/></literal></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">SUPPORT_HARD_LINKS<pos:position pos:line="13" pos:column="23"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="14" pos:column="9">hardlinks<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <literal type="string" pos:line="14" pos:column="21">""<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">SUPPORT_LINKS<pos:position pos:line="17" pos:column="18"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="18" pos:column="9">links<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="string" pos:line="18" pos:column="17">""<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><name pos:line="21" pos:column="5">INET6<pos:position pos:line="21" pos:column="10"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="22" pos:column="9">ipv6<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <literal type="string" pos:line="22" pos:column="16">""<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">rprintf<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">f<pos:position pos:line="25" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="20">"%s  version %s  protocol version %d\n"<pos:position pos:line="25" pos:column="59"/></literal></expr></argument>,
		<argument><expr><name pos:line="26" pos:column="17">RSYNC_NAME<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">RSYNC_VERSION<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="44">PROTOCOL_VERSION<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">rprintf<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">f<pos:position pos:line="27" pos:column="18"/></name></expr></argument>,
		<argument><expr><literal type="string" pos:line="28" pos:column="17">"Copyright (C) 1996-2004 by Andrew Tridgell and others\n"<pos:position pos:line="28" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="76"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">rprintf<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">f<pos:position pos:line="29" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="20">"&lt;http://rsync.samba.org/&gt;\n"<pos:position pos:line="29" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="30" pos:column="9">rprintf<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">f<pos:position pos:line="30" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="20">"Capabilities: %d-bit files, %ssocketpairs, "<pos:position pos:line="30" pos:column="65"/></literal>
		<literal type="string" pos:line="31" pos:column="17">"%shard links, %ssymlinks, batchfiles, \n"<pos:position pos:line="31" pos:column="59"/></literal></expr></argument>,
		<argument><expr><call pos:line="32" pos:column="17">(<name pos:line="32" pos:column="18">int<pos:position pos:line="32" pos:column="21"/></name>) <argument_list pos:line="32" pos:column="23">(<argument><expr><sizeof pos:line="32" pos:column="24">sizeof<argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">OFF_T<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></sizeof> <operator pos:line="32" pos:column="38">*<pos:position pos:line="32" pos:column="39"/></operator> <literal type="number" pos:line="32" pos:column="40">8<pos:position pos:line="32" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr></argument>,
		<argument><expr><name pos:line="33" pos:column="17">got_socketpair<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">hardlinks<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">links<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>

	<comment type="block" pos:line="35" pos:column="9">/* Note that this field may not have type ino_t.  It depends
	 * on the complicated interaction between largefile feature
	 * macros. */</comment>
	<expr_stmt><expr><call><name pos:line="38" pos:column="9">rprintf<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name pos:line="38" pos:column="17">f<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="20">"              %sIPv6, %d-bit system inums, %d-bit internal inums\n"<pos:position pos:line="38" pos:column="88"/></literal></expr></argument>,
		<argument><expr><name pos:line="39" pos:column="17">ipv6<pos:position pos:line="39" pos:column="21"/></name></expr></argument>,
		<argument><expr><call pos:line="40" pos:column="17">(<name pos:line="40" pos:column="18">int<pos:position pos:line="40" pos:column="21"/></name>) <argument_list pos:line="40" pos:column="23">(<argument><expr><sizeof pos:line="40" pos:column="24">sizeof<argument_list pos:line="40" pos:column="30">(<argument><expr><name><name pos:line="40" pos:column="31">dumstat<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">-&gt;<pos:position pos:line="40" pos:column="43"/></operator><name pos:line="40" pos:column="40">st_ino<pos:position pos:line="40" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></sizeof> <operator pos:line="40" pos:column="48">*<pos:position pos:line="40" pos:column="49"/></operator> <literal type="number" pos:line="40" pos:column="50">8<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr></argument>,
		<argument><expr><call pos:line="41" pos:column="17">(<name pos:line="41" pos:column="18">int<pos:position pos:line="41" pos:column="21"/></name>) <argument_list pos:line="41" pos:column="23">(<argument><expr><sizeof pos:line="41" pos:column="24">sizeof<argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">INO64_T<pos:position pos:line="41" pos:column="38"/></name></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></sizeof> <operator pos:line="41" pos:column="40">*<pos:position pos:line="41" pos:column="41"/></operator> <literal type="number" pos:line="41" pos:column="42">8<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef<pos:position pos:line="42" pos:column="7"/></cpp:directive> <name pos:line="42" pos:column="8">MAINTAINER_MODE<pos:position pos:line="42" pos:column="23"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">rprintf<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><name pos:line="43" pos:column="17">f<pos:position pos:line="43" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="20">"              panic action: \"%s\"\n"<pos:position pos:line="43" pos:column="58"/></literal></expr></argument>,
		<argument><expr><call><name pos:line="44" pos:column="17">get_panic_action<pos:position pos:line="44" pos:column="33"/></name><argument_list pos:line="44" pos:column="33">()<pos:position pos:line="44" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">NO_INT64<pos:position pos:line="47" pos:column="16"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">rprintf<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">f<pos:position pos:line="48" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="20">"WARNING: no 64-bit integers on this platform!\n"<pos:position pos:line="48" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">rprintf<pos:position pos:line="51" pos:column="16"/></name><argument_list pos:line="51" pos:column="16">(<argument><expr><name pos:line="51" pos:column="17">f<pos:position pos:line="51" pos:column="18"/></name></expr></argument>,
<argument><expr><literal type="string" pos:line="52" pos:column="1">"\n"<pos:position pos:line="52" pos:column="5"/></literal>
<literal type="string" pos:line="53" pos:column="1">"rsync comes with ABSOLUTELY NO WARRANTY.  This is free software, and you\n"<pos:position pos:line="53" pos:column="77"/></literal>
<literal type="string" pos:line="54" pos:column="1">"are welcome to redistribute it under certain conditions.  See the GNU\n"<pos:position pos:line="54" pos:column="74"/></literal>
<literal type="string" pos:line="55" pos:column="1">"General Public Licence for details.\n"<pos:position pos:line="55" pos:column="40"/></literal></expr></argument>
		)<pos:position pos:line="56" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="19"/></expr_stmt>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

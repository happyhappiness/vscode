<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_373_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">call_glob_match<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">name<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">int<pos:position pos:line="1" pos:column="57"/></name></type> <name pos:line="1" pos:column="58">len<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">from_glob<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>,
				   <parameter><decl><type><name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">arg<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">abpos<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">fbpos<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">use_buf<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">ENSURE_MEMSPACE<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name><name pos:line="6" pos:column="25">glob<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">.<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">arg_buf<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">char<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="45">glob<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">.<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">absize<pos:position pos:line="6" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="58">abpos<pos:position pos:line="6" pos:column="63"/></name> <operator pos:line="6" pos:column="64">+<pos:position pos:line="6" pos:column="65"/></operator> <name pos:line="6" pos:column="66">len<pos:position pos:line="6" pos:column="69"/></name> <operator pos:line="6" pos:column="70">+<pos:position pos:line="6" pos:column="71"/></operator> <literal type="number" pos:line="6" pos:column="72">2<pos:position pos:line="6" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="75"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="7" pos:column="9">memcpy<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name><name pos:line="7" pos:column="16">glob<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">arg_buf<pos:position pos:line="7" pos:column="28"/></name></name> <operator pos:line="7" pos:column="29">+<pos:position pos:line="7" pos:column="30"/></operator> <name pos:line="7" pos:column="31">abpos<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">name<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">len<pos:position pos:line="7" pos:column="47"/></name></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">abpos<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">+=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">len<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="9" pos:column="9">glob<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">arg_buf<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><name pos:line="9" pos:column="22">abpos<pos:position pos:line="9" pos:column="27"/></name></expr>]<pos:position pos:line="9" pos:column="28"/></index></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <literal type="char" pos:line="9" pos:column="31">'\0'<pos:position pos:line="9" pos:column="35"/></literal></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">fbpos<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&gt;=<pos:position pos:line="11" pos:column="24"/></operator> <literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ENSURE_MEMSPACE<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">glob<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">.<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">filt_buf<pos:position pos:line="12" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">char<pos:position pos:line="12" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="54">glob<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">.<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">fbsize<pos:position pos:line="12" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="67">fbpos<pos:position pos:line="12" pos:column="72"/></name> <operator pos:line="12" pos:column="73">+<pos:position pos:line="12" pos:column="74"/></operator> <name pos:line="12" pos:column="75">len<pos:position pos:line="12" pos:column="78"/></name> <operator pos:line="12" pos:column="79">+<pos:position pos:line="12" pos:column="80"/></operator> <literal type="number" pos:line="12" pos:column="81">2<pos:position pos:line="12" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">memcpy<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name><name pos:line="13" pos:column="24">glob<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">.<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">filt_buf<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">+<pos:position pos:line="13" pos:column="39"/></operator> <name pos:line="13" pos:column="40">fbpos<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">name<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">len<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="14" pos:column="17">fbpos<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">+=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">len<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">glob<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">filt_buf<pos:position pos:line="15" pos:column="30"/></name><index pos:line="15" pos:column="30">[<expr><name pos:line="15" pos:column="31">fbpos<pos:position pos:line="15" pos:column="36"/></name></expr>]<pos:position pos:line="15" pos:column="37"/></index></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="char" pos:line="15" pos:column="40">'\0'<pos:position pos:line="15" pos:column="44"/></literal></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">use_buf<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name><name pos:line="16" pos:column="27">glob<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">.<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">filt_buf<pos:position pos:line="16" pos:column="40"/></name></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">use_buf<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <name><name pos:line="18" pos:column="27">glob<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">arg_buf<pos:position pos:line="18" pos:column="39"/></name></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt></block></else></if>

	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">from_glob<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">||<pos:position pos:line="20" pos:column="25"/></operator> <operator pos:line="20" pos:column="26">(<pos:position pos:line="20" pos:column="27"/></operator><name pos:line="20" pos:column="27">arg<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&amp;&amp;<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="34">len<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">)<pos:position pos:line="20" pos:column="38"/></operator></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39"> <block pos:line="20" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">STRUCT_STAT<pos:position pos:line="21" pos:column="28"/></name></type> <name pos:line="21" pos:column="29">st<pos:position pos:line="21" pos:column="31"/></name></decl>;<pos:position pos:line="21" pos:column="32"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">int<pos:position pos:line="22" pos:column="20"/></name></type> <name pos:line="22" pos:column="21">is_dir<pos:position pos:line="22" pos:column="27"/></name></decl>;<pos:position pos:line="22" pos:column="28"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">do_stat<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name><name pos:line="24" pos:column="29">glob<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">arg_buf<pos:position pos:line="24" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="43">&amp;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="44">st<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call> <operator pos:line="24" pos:column="48">!=<pos:position pos:line="24" pos:column="50"/></operator> <literal type="number" pos:line="24" pos:column="51">0<pos:position pos:line="24" pos:column="52"/></literal></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53">
			<block type="pseudo"><return pos:line="25" pos:column="25">return;<pos:position pos:line="25" pos:column="32"/></return></block></then></if>
		<expr_stmt><expr><name pos:line="26" pos:column="17">is_dir<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">S_ISDIR<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name><name pos:line="26" pos:column="34">st<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">.<pos:position pos:line="26" pos:column="37"/></operator><name pos:line="26" pos:column="37">st_mode<pos:position pos:line="26" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call> <operator pos:line="26" pos:column="46">!=<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">arg<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">&amp;&amp;<pos:position pos:line="27" pos:column="35"/></operator> <operator pos:line="27" pos:column="28">!<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">is_dir<pos:position pos:line="27" pos:column="35"/></name></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36">
			<block type="pseudo"><return pos:line="28" pos:column="25">return;<pos:position pos:line="28" pos:column="32"/></return></block></then></if>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">daemon_filter_list<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">.<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">head<pos:position pos:line="30" pos:column="44"/></name></name>
		 <operator pos:line="31" pos:column="18">&amp;&amp;<pos:position pos:line="31" pos:column="28"/></operator> <call><name pos:line="31" pos:column="21">check_filter<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><operator pos:line="31" pos:column="34">&amp;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="35">daemon_filter_list<pos:position pos:line="31" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="55">FLOG<pos:position pos:line="31" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="61">use_buf<pos:position pos:line="31" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="70">is_dir<pos:position pos:line="31" pos:column="76"/></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call> <operator pos:line="31" pos:column="78">&lt;<pos:position pos:line="31" pos:column="82"/></operator> <literal type="number" pos:line="31" pos:column="80">0<pos:position pos:line="31" pos:column="81"/></literal></expr>)<pos:position pos:line="31" pos:column="82"/></condition><then pos:line="31" pos:column="82">
			<block type="pseudo"><return pos:line="32" pos:column="25">return;<pos:position pos:line="32" pos:column="32"/></return></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">arg<pos:position pos:line="35" pos:column="16"/></name></expr>)<pos:position pos:line="35" pos:column="17"/></condition><then pos:line="35" pos:column="17"> <block pos:line="35" pos:column="18">{
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">glob<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">.<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">arg_buf<pos:position pos:line="36" pos:column="29"/></name><index pos:line="36" pos:column="29">[<expr><name pos:line="36" pos:column="30">abpos<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">++<pos:position pos:line="36" pos:column="37"/></operator></expr>]<pos:position pos:line="36" pos:column="38"/></index></name> <operator pos:line="36" pos:column="39">=<pos:position pos:line="36" pos:column="40"/></operator> <literal type="char" pos:line="36" pos:column="41">'/'<pos:position pos:line="36" pos:column="44"/></literal></expr>;<pos:position pos:line="36" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">glob<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">.<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">arg_buf<pos:position pos:line="37" pos:column="29"/></name><index pos:line="37" pos:column="29">[<expr><name pos:line="37" pos:column="30">abpos<pos:position pos:line="37" pos:column="35"/></name></expr>]<pos:position pos:line="37" pos:column="36"/></index></name> <operator pos:line="37" pos:column="37">=<pos:position pos:line="37" pos:column="38"/></operator> <literal type="char" pos:line="37" pos:column="39">'\0'<pos:position pos:line="37" pos:column="43"/></literal></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">fbpos<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&gt;=<pos:position pos:line="38" pos:column="32"/></operator> <literal type="number" pos:line="38" pos:column="30">0<pos:position pos:line="38" pos:column="31"/></literal></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32"> <block pos:line="38" pos:column="33">{
			<expr_stmt><expr><name><name pos:line="39" pos:column="25">glob<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">.<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">filt_buf<pos:position pos:line="39" pos:column="38"/></name><index pos:line="39" pos:column="38">[<expr><name pos:line="39" pos:column="39">fbpos<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">++<pos:position pos:line="39" pos:column="46"/></operator></expr>]<pos:position pos:line="39" pos:column="47"/></index></name> <operator pos:line="39" pos:column="48">=<pos:position pos:line="39" pos:column="49"/></operator> <literal type="char" pos:line="39" pos:column="50">'/'<pos:position pos:line="39" pos:column="53"/></literal></expr>;<pos:position pos:line="39" pos:column="54"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">glob<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">.<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">filt_buf<pos:position pos:line="40" pos:column="38"/></name><index pos:line="40" pos:column="38">[<expr><name pos:line="40" pos:column="39">fbpos<pos:position pos:line="40" pos:column="44"/></name></expr>]<pos:position pos:line="40" pos:column="45"/></index></name> <operator pos:line="40" pos:column="46">=<pos:position pos:line="40" pos:column="47"/></operator> <literal type="char" pos:line="40" pos:column="48">'\0'<pos:position pos:line="40" pos:column="52"/></literal></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">glob_match<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">arg<pos:position pos:line="42" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="33">abpos<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">fbpos<pos:position pos:line="42" pos:column="45"/></name></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else <block pos:line="43" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">ENSURE_MEMSPACE<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name><name pos:line="44" pos:column="33">glob<pos:position pos:line="44" pos:column="37"/></name><operator pos:line="44" pos:column="37">.<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">argv<pos:position pos:line="44" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">char<pos:position pos:line="44" pos:column="48"/></name> <operator pos:line="44" pos:column="49">*<pos:position pos:line="44" pos:column="50"/></operator></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="52">glob<pos:position pos:line="44" pos:column="56"/></name><operator pos:line="44" pos:column="56">.<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="57">maxargs<pos:position pos:line="44" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="66">glob<pos:position pos:line="44" pos:column="70"/></name><operator pos:line="44" pos:column="70">.<pos:position pos:line="44" pos:column="71"/></operator><name pos:line="44" pos:column="71">argc<pos:position pos:line="44" pos:column="75"/></name></name> <operator pos:line="44" pos:column="76">+<pos:position pos:line="44" pos:column="77"/></operator> <literal type="number" pos:line="44" pos:column="78">1<pos:position pos:line="44" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="81"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><operator pos:line="45" pos:column="21">!<pos:position pos:line="45" pos:column="22"/></operator><operator pos:line="45" pos:column="22">(<pos:position pos:line="45" pos:column="23"/></operator><name><name pos:line="45" pos:column="23">glob<pos:position pos:line="45" pos:column="27"/></name><operator pos:line="45" pos:column="27">.<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">argv<pos:position pos:line="45" pos:column="32"/></name><index pos:line="45" pos:column="32">[<expr><name><name pos:line="45" pos:column="33">glob<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">.<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">argc<pos:position pos:line="45" pos:column="42"/></name></name><operator pos:line="45" pos:column="42">++<pos:position pos:line="45" pos:column="44"/></operator></expr>]<pos:position pos:line="45" pos:column="45"/></index></name> <operator pos:line="45" pos:column="46">=<pos:position pos:line="45" pos:column="47"/></operator> <call><name pos:line="45" pos:column="48">strdup<pos:position pos:line="45" pos:column="54"/></name><argument_list pos:line="45" pos:column="54">(<argument><expr><name><name pos:line="45" pos:column="55">glob<pos:position pos:line="45" pos:column="59"/></name><operator pos:line="45" pos:column="59">.<pos:position pos:line="45" pos:column="60"/></operator><name pos:line="45" pos:column="60">arg_buf<pos:position pos:line="45" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call><operator pos:line="45" pos:column="68">)<pos:position pos:line="45" pos:column="69"/></operator></expr>)<pos:position pos:line="45" pos:column="70"/></condition><then pos:line="45" pos:column="70">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="25">out_of_memory<pos:position pos:line="46" pos:column="38"/></name><argument_list pos:line="46" pos:column="38">(<argument><expr><literal type="string" pos:line="46" pos:column="39">"glob_match"<pos:position pos:line="46" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></else></if>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

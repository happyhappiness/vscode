<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_10_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">build_hash_table<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name><name pos:line="1" pos:column="30">struct<pos:position pos:line="1" pos:column="36"/></name> <name pos:line="1" pos:column="37">sum_struct<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">s<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">uint32<pos:position pos:line="3" pos:column="22"/></name></type> <name pos:line="3" pos:column="23">alloc_size<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int32<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">i<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Dynamically calculate the hash table size so that the hash load
	 * for big files is about 80%.  A number greater than the traditional
	 * size must be odd or s2 will not be able to span the entire set. */</comment>
	<expr_stmt><expr><name pos:line="9" pos:column="9">tablesize<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <call pos:line="9" pos:column="21">(<name pos:line="9" pos:column="22">uint32<pos:position pos:line="9" pos:column="28"/></name>)<argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">s<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">count<pos:position pos:line="9" pos:column="38"/></name></name><operator pos:line="9" pos:column="38">/<pos:position pos:line="9" pos:column="39"/></operator><literal type="number" pos:line="9" pos:column="39">8<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call> <operator pos:line="9" pos:column="42">*<pos:position pos:line="9" pos:column="43"/></operator> <literal type="number" pos:line="9" pos:column="44">10<pos:position pos:line="9" pos:column="46"/></literal> <operator pos:line="9" pos:column="47">+<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="49">11<pos:position pos:line="9" pos:column="51"/></literal></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">tablesize<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="25">TRADITIONAL_TABLESIZE<pos:position pos:line="10" pos:column="46"/></name></expr>)<pos:position pos:line="10" pos:column="47"/></condition><then pos:line="10" pos:column="47">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">tablesize<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">=<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">TRADITIONAL_TABLESIZE<pos:position pos:line="11" pos:column="50"/></name></expr>;<pos:position pos:line="11" pos:column="51"/></expr_stmt></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">tablesize<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&gt;<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="25">alloc_size<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">||<pos:position pos:line="12" pos:column="38"/></operator> <name pos:line="12" pos:column="39">tablesize<pos:position pos:line="12" pos:column="48"/></name> <operator pos:line="12" pos:column="49">&lt;<pos:position pos:line="12" pos:column="53"/></operator> <name pos:line="12" pos:column="51">alloc_size<pos:position pos:line="12" pos:column="61"/></name> <operator pos:line="12" pos:column="62">-<pos:position pos:line="12" pos:column="63"/></operator> <literal type="number" pos:line="12" pos:column="64">16<pos:position pos:line="12" pos:column="66"/></literal><operator pos:line="12" pos:column="66">*<pos:position pos:line="12" pos:column="67"/></operator><literal type="number" pos:line="12" pos:column="67">1024<pos:position pos:line="12" pos:column="71"/></literal></expr>)<pos:position pos:line="12" pos:column="72"/></condition><then pos:line="12" pos:column="72"> <block pos:line="12" pos:column="73">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">hash_table<pos:position pos:line="13" pos:column="31"/></name></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="25">free<pos:position pos:line="14" pos:column="29"/></name><argument_list pos:line="14" pos:column="29">(<argument><expr><name pos:line="14" pos:column="30">hash_table<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">hash_table<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">=<pos:position pos:line="15" pos:column="29"/></operator> <call><name pos:line="15" pos:column="30">new_array<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">int32<pos:position pos:line="15" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="47">tablesize<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="58"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">hash_table<pos:position pos:line="16" pos:column="32"/></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">out_of_memory<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><literal type="string" pos:line="17" pos:column="39">"build_hash_table"<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">alloc_size<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="30">tablesize<pos:position pos:line="18" pos:column="39"/></name></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="21" pos:column="9">memset<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">hash_table<pos:position pos:line="21" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="28">0xFF<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">tablesize<pos:position pos:line="21" pos:column="43"/></name> <operator pos:line="21" pos:column="44">*<pos:position pos:line="21" pos:column="45"/></operator> <sizeof pos:line="21" pos:column="46">sizeof <name><name pos:line="21" pos:column="53">hash_table<pos:position pos:line="21" pos:column="63"/></name><index pos:line="21" pos:column="63">[<expr><literal type="number" pos:line="21" pos:column="64">0<pos:position pos:line="21" pos:column="65"/></literal></expr>]<pos:position pos:line="21" pos:column="66"/></index></name></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">tablesize<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">==<pos:position pos:line="23" pos:column="25"/></operator> <name pos:line="23" pos:column="26">TRADITIONAL_TABLESIZE<pos:position pos:line="23" pos:column="47"/></name></expr>)<pos:position pos:line="23" pos:column="48"/></condition><then pos:line="23" pos:column="48"> <block pos:line="23" pos:column="49">{
		<for pos:line="24" pos:column="17">for <control pos:line="24" pos:column="21">(<init><expr><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></init> <condition><expr><name pos:line="24" pos:column="29">i<pos:position pos:line="24" pos:column="30"/></name> <operator pos:line="24" pos:column="31">&lt;<pos:position pos:line="24" pos:column="35"/></operator> <name><name pos:line="24" pos:column="33">s<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">count<pos:position pos:line="24" pos:column="41"/></name></name></expr>;<pos:position pos:line="24" pos:column="42"/></condition> <incr><expr><name pos:line="24" pos:column="43">i<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">++<pos:position pos:line="24" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="47"/></control> <block pos:line="24" pos:column="48">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">uint32<pos:position pos:line="25" pos:column="31"/></name></type> <name pos:line="25" pos:column="32">t<pos:position pos:line="25" pos:column="33"/></name> <init pos:line="25" pos:column="34">= <expr><call><name pos:line="25" pos:column="36">SUM2HASH<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name><name pos:line="25" pos:column="45">s<pos:position pos:line="25" pos:column="46"/></name><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">sums<pos:position pos:line="25" pos:column="52"/></name><index pos:line="25" pos:column="52">[<expr><name pos:line="25" pos:column="53">i<pos:position pos:line="25" pos:column="54"/></name></expr>]<pos:position pos:line="25" pos:column="55"/></index></name><operator pos:line="25" pos:column="55">.<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">sum1<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="62"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="26" pos:column="25">s<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">sums<pos:position pos:line="26" pos:column="32"/></name><index pos:line="26" pos:column="32">[<expr><name pos:line="26" pos:column="33">i<pos:position pos:line="26" pos:column="34"/></name></expr>]<pos:position pos:line="26" pos:column="35"/></index></name><operator pos:line="26" pos:column="35">.<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">chain<pos:position pos:line="26" pos:column="41"/></name> <operator pos:line="26" pos:column="42">=<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="44">hash_table<pos:position pos:line="26" pos:column="54"/></name><index pos:line="26" pos:column="54">[<expr><name pos:line="26" pos:column="55">t<pos:position pos:line="26" pos:column="56"/></name></expr>]<pos:position pos:line="26" pos:column="57"/></index></name></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="27" pos:column="25">hash_table<pos:position pos:line="27" pos:column="35"/></name><index pos:line="27" pos:column="35">[<expr><name pos:line="27" pos:column="36">t<pos:position pos:line="27" pos:column="37"/></name></expr>]<pos:position pos:line="27" pos:column="38"/></index></name> <operator pos:line="27" pos:column="39">=<pos:position pos:line="27" pos:column="40"/></operator> <name pos:line="27" pos:column="41">i<pos:position pos:line="27" pos:column="42"/></name></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></for>
	}<pos:position pos:line="29" pos:column="10"/></block></then> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
		<for pos:line="30" pos:column="17">for <control pos:line="30" pos:column="21">(<init><expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">=<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="26">0<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></init> <condition><expr><name pos:line="30" pos:column="29">i<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">&lt;<pos:position pos:line="30" pos:column="35"/></operator> <name><name pos:line="30" pos:column="33">s<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">count<pos:position pos:line="30" pos:column="41"/></name></name></expr>;<pos:position pos:line="30" pos:column="42"/></condition> <incr><expr><name pos:line="30" pos:column="43">i<pos:position pos:line="30" pos:column="44"/></name><operator pos:line="30" pos:column="44">++<pos:position pos:line="30" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="47"/></control> <block pos:line="30" pos:column="48">{
			<decl_stmt><decl><type><name pos:line="31" pos:column="25">uint32<pos:position pos:line="31" pos:column="31"/></name></type> <name pos:line="31" pos:column="32">t<pos:position pos:line="31" pos:column="33"/></name> <init pos:line="31" pos:column="34">= <expr><call><name pos:line="31" pos:column="36">BIG_SUM2HASH<pos:position pos:line="31" pos:column="48"/></name><argument_list pos:line="31" pos:column="48">(<argument><expr><name><name pos:line="31" pos:column="49">s<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">-&gt;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="52">sums<pos:position pos:line="31" pos:column="56"/></name><index pos:line="31" pos:column="56">[<expr><name pos:line="31" pos:column="57">i<pos:position pos:line="31" pos:column="58"/></name></expr>]<pos:position pos:line="31" pos:column="59"/></index></name><operator pos:line="31" pos:column="59">.<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="60">sum1<pos:position pos:line="31" pos:column="64"/></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="66"/></decl_stmt>
			<expr_stmt><expr><name><name pos:line="32" pos:column="25">s<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">sums<pos:position pos:line="32" pos:column="32"/></name><index pos:line="32" pos:column="32">[<expr><name pos:line="32" pos:column="33">i<pos:position pos:line="32" pos:column="34"/></name></expr>]<pos:position pos:line="32" pos:column="35"/></index></name><operator pos:line="32" pos:column="35">.<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="36">chain<pos:position pos:line="32" pos:column="41"/></name> <operator pos:line="32" pos:column="42">=<pos:position pos:line="32" pos:column="43"/></operator> <name><name pos:line="32" pos:column="44">hash_table<pos:position pos:line="32" pos:column="54"/></name><index pos:line="32" pos:column="54">[<expr><name pos:line="32" pos:column="55">t<pos:position pos:line="32" pos:column="56"/></name></expr>]<pos:position pos:line="32" pos:column="57"/></index></name></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="33" pos:column="25">hash_table<pos:position pos:line="33" pos:column="35"/></name><index pos:line="33" pos:column="35">[<expr><name pos:line="33" pos:column="36">t<pos:position pos:line="33" pos:column="37"/></name></expr>]<pos:position pos:line="33" pos:column="38"/></index></name> <operator pos:line="33" pos:column="39">=<pos:position pos:line="33" pos:column="40"/></operator> <name pos:line="33" pos:column="41">i<pos:position pos:line="33" pos:column="42"/></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="34" pos:column="18"/></block></for>
	}<pos:position pos:line="35" pos:column="10"/></block></else></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

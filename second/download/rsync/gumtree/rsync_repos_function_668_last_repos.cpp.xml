<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_668_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">voidpf<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">ZLIB_INTERNAL<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">zcalloc<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">voidpf<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">opaque<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="46">uInt<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">items<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">uInt<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">size<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">opaque<pos:position pos:line="3" pos:column="15"/></name></expr>)<pos:position pos:line="3" pos:column="16"/></condition><then pos:line="3" pos:column="16"> <block type="pseudo"><expr_stmt><expr><name pos:line="3" pos:column="17">opaque<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">=<pos:position pos:line="3" pos:column="25"/></operator> <literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr>;<pos:position pos:line="3" pos:column="28"/></expr_stmt></block></then></if> <comment type="block" pos:line="3" pos:column="29">/* to make compiler happy */</comment>
    <return pos:line="4" pos:column="5">return <expr><call><name pos:line="4" pos:column="12">_halloc<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><operator pos:line="4" pos:column="20">(<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">long<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">)<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">items<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="33">size<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

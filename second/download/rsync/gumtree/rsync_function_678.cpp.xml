<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_678.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">auth_server<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">fd<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="27">int<pos:position pos:line="1" pos:column="30"/></name></type> <name pos:line="1" pos:column="31">module<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">addr<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">leader<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">users<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><call><name pos:line="3" pos:column="23">lp_auth_users<pos:position pos:line="3" pos:column="36"/></name><argument_list pos:line="3" pos:column="36">(<argument><expr><name pos:line="3" pos:column="37">module<pos:position pos:line="3" pos:column="43"/></name></expr></argument>)<pos:position pos:line="3" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">challenge<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">16<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">b64_challenge<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><literal type="number" pos:line="5" pos:column="28">30<pos:position pos:line="5" pos:column="30"/></literal></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">line<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">MAXPATHLEN<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">static<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">char<pos:position pos:line="7" pos:column="20"/></name></type> <name><name pos:line="7" pos:column="21">user<pos:position pos:line="7" pos:column="25"/></name><index pos:line="7" pos:column="25">[<expr><literal type="number" pos:line="7" pos:column="26">100<pos:position pos:line="7" pos:column="29"/></literal></expr>]<pos:position pos:line="7" pos:column="30"/></index></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">secret<pos:position pos:line="8" pos:column="20"/></name><index pos:line="8" pos:column="20">[<expr><literal type="number" pos:line="8" pos:column="21">100<pos:position pos:line="8" pos:column="24"/></literal></expr>]<pos:position pos:line="8" pos:column="25"/></index></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">pass<pos:position pos:line="9" pos:column="18"/></name><index pos:line="9" pos:column="18">[<expr><literal type="number" pos:line="9" pos:column="19">30<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">pass2<pos:position pos:line="10" pos:column="19"/></name><index pos:line="10" pos:column="19">[<expr><literal type="number" pos:line="10" pos:column="20">30<pos:position pos:line="10" pos:column="22"/></literal></expr>]<pos:position pos:line="10" pos:column="23"/></index></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">tok<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>

	<comment type="block" pos:line="13" pos:column="9">/* if no auth list then allow anyone in! */</comment>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">users<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">||<pos:position pos:line="14" pos:column="22"/></operator> <operator pos:line="14" pos:column="23">!<pos:position pos:line="14" pos:column="24"/></operator><operator pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">users<pos:position pos:line="14" pos:column="30"/></name></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31"> <block type="pseudo"><return pos:line="14" pos:column="32">return <expr><literal type="string" pos:line="14" pos:column="39">""<pos:position pos:line="14" pos:column="41"/></literal></expr>;<pos:position pos:line="14" pos:column="42"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="16" pos:column="9">gen_challenge<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">addr<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">challenge<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="18" pos:column="9">base64_encode<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">challenge<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="34">16<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">b64_challenge<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">io_printf<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">fd<pos:position pos:line="20" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="20" pos:column="22">"%s%s\n"<pos:position pos:line="20" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="32">leader<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">b64_challenge<pos:position pos:line="20" pos:column="53"/></name></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">read_line<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">fd<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="28">line<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="34">sizeof<argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">line<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></sizeof><operator pos:line="22" pos:column="46">-<pos:position pos:line="22" pos:column="47"/></operator><literal type="number" pos:line="22" pos:column="47">1<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50"> <block pos:line="22" pos:column="51">{
		<return pos:line="23" pos:column="17">return <expr><name pos:line="23" pos:column="24">NULL<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="26" pos:column="9">memset<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">user<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="25">sizeof<argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">user<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">memset<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">pass<pos:position pos:line="27" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="22">0<pos:position pos:line="27" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="25">sizeof<argument_list pos:line="27" pos:column="31">(<argument><expr><name pos:line="27" pos:column="32">pass<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">sscanf<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">line<pos:position pos:line="29" pos:column="24"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="29" pos:column="25">"%99s %29s"<pos:position pos:line="29" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">user<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">pass<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call> <operator pos:line="29" pos:column="50">!=<pos:position pos:line="29" pos:column="52"/></operator> <literal type="number" pos:line="29" pos:column="53">2<pos:position pos:line="29" pos:column="54"/></literal></expr>)<pos:position pos:line="29" pos:column="55"/></condition><then pos:line="29" pos:column="55"> <block pos:line="29" pos:column="56">{
		<return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>
	
	<expr_stmt><expr><name pos:line="33" pos:column="9">users<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <call><name pos:line="33" pos:column="17">strdup<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">users<pos:position pos:line="33" pos:column="29"/></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><operator pos:line="34" pos:column="13">!<pos:position pos:line="34" pos:column="14"/></operator><name pos:line="34" pos:column="14">users<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block type="pseudo"><return pos:line="34" pos:column="21">return <expr><name pos:line="34" pos:column="28">NULL<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></return></block></then></if>

	<for pos:line="36" pos:column="9">for <control pos:line="36" pos:column="13">(<init><expr><name pos:line="36" pos:column="14">tok<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator><call><name pos:line="36" pos:column="18">strtok<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">users<pos:position pos:line="36" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="31">" ,\t"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></init> <condition><expr><name pos:line="36" pos:column="40">tok<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></condition> <incr><expr><name pos:line="36" pos:column="45">tok<pos:position pos:line="36" pos:column="48"/></name> <operator pos:line="36" pos:column="49">=<pos:position pos:line="36" pos:column="50"/></operator> <call><name pos:line="36" pos:column="51">strtok<pos:position pos:line="36" pos:column="57"/></name><argument_list pos:line="36" pos:column="57">(<argument><expr><name pos:line="36" pos:column="58">NULL<pos:position pos:line="36" pos:column="62"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="63">" ,\t"<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr></incr>)<pos:position pos:line="36" pos:column="71"/></control> <block pos:line="36" pos:column="72">{
		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">fnmatch<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">tok<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">user<pos:position pos:line="37" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="40">0<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call> <operator pos:line="37" pos:column="43">==<pos:position pos:line="37" pos:column="45"/></operator> <literal type="number" pos:line="37" pos:column="46">0<pos:position pos:line="37" pos:column="47"/></literal></expr>)<pos:position pos:line="37" pos:column="48"/></condition><then pos:line="37" pos:column="48"> <block type="pseudo"><break pos:line="37" pos:column="49">break;<pos:position pos:line="37" pos:column="55"/></break></block></then></if>
	}<pos:position pos:line="38" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">free<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">users<pos:position pos:line="39" pos:column="19"/></name></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>

	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">tok<pos:position pos:line="41" pos:column="17"/></name></expr>)<pos:position pos:line="41" pos:column="18"/></condition><then pos:line="41" pos:column="18"> <block pos:line="41" pos:column="19">{
		<return pos:line="42" pos:column="17">return <expr><name pos:line="42" pos:column="24">NULL<pos:position pos:line="42" pos:column="28"/></name></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>
	
	<expr_stmt><expr><call><name pos:line="45" pos:column="9">memset<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">secret<pos:position pos:line="45" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="24">0<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="27">sizeof<argument_list pos:line="45" pos:column="33">(<argument><expr><name pos:line="45" pos:column="34">secret<pos:position pos:line="45" pos:column="40"/></name></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><call><name pos:line="46" pos:column="14">get_secret<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">module<pos:position pos:line="46" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">user<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">secret<pos:position pos:line="46" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="47">sizeof<argument_list pos:line="46" pos:column="53">(<argument><expr><name pos:line="46" pos:column="54">secret<pos:position pos:line="46" pos:column="60"/></name></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></sizeof><operator pos:line="46" pos:column="61">-<pos:position pos:line="46" pos:column="62"/></operator><literal type="number" pos:line="46" pos:column="62">1<pos:position pos:line="46" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="65"/></condition><then pos:line="46" pos:column="65"> <block pos:line="46" pos:column="66">{
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">memset<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><name pos:line="47" pos:column="24">secret<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="32">0<pos:position pos:line="47" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="35">sizeof<argument_list pos:line="47" pos:column="41">(<argument><expr><name pos:line="47" pos:column="42">secret<pos:position pos:line="47" pos:column="48"/></name></expr></argument>)<pos:position pos:line="47" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="51"/></expr_stmt>
		<return pos:line="48" pos:column="17">return <expr><name pos:line="48" pos:column="24">NULL<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="51" pos:column="9">generate_hash<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name pos:line="51" pos:column="23">secret<pos:position pos:line="51" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="31">b64_challenge<pos:position pos:line="51" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="46">pass2<pos:position pos:line="51" pos:column="51"/></name></expr></argument>)<pos:position pos:line="51" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">memset<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name pos:line="52" pos:column="16">secret<pos:position pos:line="52" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="24">0<pos:position pos:line="52" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="27">sizeof<argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">secret<pos:position pos:line="52" pos:column="40"/></name></expr></argument>)<pos:position pos:line="52" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="43"/></expr_stmt>
	
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><call><name pos:line="54" pos:column="13">strcmp<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">pass<pos:position pos:line="54" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="26">pass2<pos:position pos:line="54" pos:column="31"/></name></expr></argument>)<pos:position pos:line="54" pos:column="32"/></argument_list></call> <operator pos:line="54" pos:column="33">==<pos:position pos:line="54" pos:column="35"/></operator> <literal type="number" pos:line="54" pos:column="36">0<pos:position pos:line="54" pos:column="37"/></literal></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38">
		<block type="pseudo"><return pos:line="55" pos:column="17">return <expr><name pos:line="55" pos:column="24">user<pos:position pos:line="55" pos:column="28"/></name></expr>;<pos:position pos:line="55" pos:column="29"/></return></block></then></if>

	<return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">NULL<pos:position pos:line="57" pos:column="20"/></name></expr>;<pos:position pos:line="57" pos:column="21"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

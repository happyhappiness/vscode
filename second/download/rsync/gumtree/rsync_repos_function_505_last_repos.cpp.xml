<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_505_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">mode_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">change_sacl_perms<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">SMB_ACL_T<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">sacl<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">rsync_acl<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">racl<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">mode_t<pos:position pos:line="1" pos:column="72"/></name></type> <name pos:line="1" pos:column="73">old_mode<pos:position pos:line="1" pos:column="81"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="83">mode_t<pos:position pos:line="1" pos:column="89"/></name></type> <name pos:line="1" pos:column="90">mode<pos:position pos:line="1" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="95"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">SMB_ACL_ENTRY_T<pos:position pos:line="3" pos:column="24"/></name></type> <name pos:line="3" pos:column="25">entry<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">errfun<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">rc<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">S_ISDIR<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">mode<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
		<comment type="block" pos:line="8" pos:column="17">/* If the sticky bit is going on, it's not safe to allow all
		 * the new ACL to go into effect before it gets set. */</comment>
<cpp:ifdef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifdef<pos:position pos:line="10" pos:column="7"/></cpp:directive> <name pos:line="10" pos:column="8">SMB_ACL_LOSES_SPECIAL_MODE_BITS<pos:position pos:line="10" pos:column="39"/></name></cpp:ifdef>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name pos:line="11" pos:column="21">mode<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">&amp;<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="28">S_ISVTX<pos:position pos:line="11" pos:column="35"/></name></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">mode<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">&amp;=<pos:position pos:line="12" pos:column="36"/></operator> <operator pos:line="12" pos:column="33">~<pos:position pos:line="12" pos:column="34"/></operator><literal type="number" pos:line="12" pos:column="34">0077<pos:position pos:line="12" pos:column="38"/></literal></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt></block></then></if>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">mode<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="28">S_ISVTX<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">&amp;&amp;<pos:position pos:line="14" pos:column="46"/></operator> <operator pos:line="14" pos:column="39">!<pos:position pos:line="14" pos:column="40"/></operator><operator pos:line="14" pos:column="40">(<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="41">old_mode<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">&amp;<pos:position pos:line="14" pos:column="55"/></operator> <name pos:line="14" pos:column="52">S_ISVTX<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">)<pos:position pos:line="14" pos:column="60"/></operator></expr>)<pos:position pos:line="14" pos:column="61"/></condition><then pos:line="14" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">mode<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">&amp;=<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="33">~<pos:position pos:line="15" pos:column="34"/></operator><literal type="number" pos:line="15" pos:column="34">0077<pos:position pos:line="15" pos:column="38"/></literal></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt></block></then></if>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
		<comment type="block" pos:line="17" pos:column="17">/* If setuid or setgid is going off, it's not safe to allow all
		 * the new ACL to go into effect before they get cleared. */</comment>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><operator pos:line="19" pos:column="21">(<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">old_mode<pos:position pos:line="19" pos:column="30"/></name> <operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator> <name pos:line="19" pos:column="33">S_ISUID<pos:position pos:line="19" pos:column="40"/></name> <operator pos:line="19" pos:column="41">&amp;&amp;<pos:position pos:line="19" pos:column="51"/></operator> <operator pos:line="19" pos:column="44">!<pos:position pos:line="19" pos:column="45"/></operator><operator pos:line="19" pos:column="45">(<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">mode<pos:position pos:line="19" pos:column="50"/></name> <operator pos:line="19" pos:column="51">&amp;<pos:position pos:line="19" pos:column="56"/></operator> <name pos:line="19" pos:column="53">S_ISUID<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">)<pos:position pos:line="19" pos:column="61"/></operator><operator pos:line="19" pos:column="61">)<pos:position pos:line="19" pos:column="62"/></operator>
		 <operator pos:line="20" pos:column="18">||<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">old_mode<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&amp;<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="33">S_ISGID<pos:position pos:line="20" pos:column="40"/></name> <operator pos:line="20" pos:column="41">&amp;&amp;<pos:position pos:line="20" pos:column="51"/></operator> <operator pos:line="20" pos:column="44">!<pos:position pos:line="20" pos:column="45"/></operator><operator pos:line="20" pos:column="45">(<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">mode<pos:position pos:line="20" pos:column="50"/></name> <operator pos:line="20" pos:column="51">&amp;<pos:position pos:line="20" pos:column="56"/></operator> <name pos:line="20" pos:column="53">S_ISGID<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">)<pos:position pos:line="20" pos:column="61"/></operator><operator pos:line="20" pos:column="61">)<pos:position pos:line="20" pos:column="62"/></operator></expr>)<pos:position pos:line="20" pos:column="63"/></condition><then pos:line="20" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="25">mode<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">&amp;=<pos:position pos:line="21" pos:column="36"/></operator> <operator pos:line="21" pos:column="33">~<pos:position pos:line="21" pos:column="34"/></operator><literal type="number" pos:line="21" pos:column="34">0077<pos:position pos:line="21" pos:column="38"/></literal></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">errfun<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="string" pos:line="25" pos:column="18">"sys_acl_get_entry"<pos:position pos:line="25" pos:column="37"/></literal></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>
	<for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">rc<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">sys_acl_get_entry<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">sacl<pos:position pos:line="26" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">SMB_ACL_FIRST_ENTRY<pos:position pos:line="26" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="64">&amp;<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="65">entry<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="72"/></init>
	     <condition><expr><name pos:line="27" pos:column="14">rc<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">==<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></condition>
	     <incr><expr><name pos:line="28" pos:column="14">rc<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">sys_acl_get_entry<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name pos:line="28" pos:column="37">sacl<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">SMB_ACL_NEXT_ENTRY<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="63">&amp;<pos:position pos:line="28" pos:column="68"/></operator><name pos:line="28" pos:column="64">entry<pos:position pos:line="28" pos:column="69"/></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call></expr></incr>)<pos:position pos:line="28" pos:column="71"/></control> <block pos:line="28" pos:column="72">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">SMB_ACL_TAG_T<pos:position pos:line="29" pos:column="30"/></name></type> <name pos:line="29" pos:column="31">tag_type<pos:position pos:line="29" pos:column="39"/></name></decl>;<pos:position pos:line="29" pos:column="40"/></decl_stmt>
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><operator pos:line="30" pos:column="21">(<pos:position pos:line="30" pos:column="22"/></operator><name pos:line="30" pos:column="22">rc<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <call><name pos:line="30" pos:column="27">sys_acl_get_tag_type<pos:position pos:line="30" pos:column="47"/></name><argument_list pos:line="30" pos:column="47">(<argument><expr><name pos:line="30" pos:column="48">entry<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="55">&amp;<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="56">tag_type<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call><operator pos:line="30" pos:column="65">)<pos:position pos:line="30" pos:column="66"/></operator> <operator pos:line="30" pos:column="67">!=<pos:position pos:line="30" pos:column="69"/></operator> <literal type="number" pos:line="30" pos:column="70">0<pos:position pos:line="30" pos:column="71"/></literal></expr>)<pos:position pos:line="30" pos:column="72"/></condition><then pos:line="30" pos:column="72"> <block pos:line="30" pos:column="73">{
			<expr_stmt><expr><name pos:line="31" pos:column="25">errfun<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">=<pos:position pos:line="31" pos:column="33"/></operator> <literal type="string" pos:line="31" pos:column="34">"sys_acl_get_tag_type"<pos:position pos:line="31" pos:column="56"/></literal></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>
			<break pos:line="32" pos:column="25">break;<pos:position pos:line="32" pos:column="31"/></break>
		}<pos:position pos:line="33" pos:column="18"/></block></then></if>
		<switch pos:line="34" pos:column="17">switch <condition pos:line="34" pos:column="24">(<expr><name pos:line="34" pos:column="25">tag_type<pos:position pos:line="34" pos:column="33"/></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition> <block pos:line="34" pos:column="35">{
		<case pos:line="35" pos:column="17">case <expr><name pos:line="35" pos:column="22">SMB_ACL_USER_OBJ<pos:position pos:line="35" pos:column="38"/></name></expr>:<pos:position pos:line="35" pos:column="39"/></case>
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">COE2<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">( <argument><expr><name pos:line="36" pos:column="31">store_access_in_entry<pos:position pos:line="36" pos:column="52"/></name></expr></argument>,<argument><expr><operator pos:line="36" pos:column="53">(<pos:position pos:line="36" pos:column="54"/></operator><operator pos:line="36" pos:column="54">(<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="55">mode<pos:position pos:line="36" pos:column="59"/></name> <operator pos:line="36" pos:column="60">&gt;&gt;<pos:position pos:line="36" pos:column="65"/></operator> <literal type="number" pos:line="36" pos:column="63">6<pos:position pos:line="36" pos:column="64"/></literal><operator pos:line="36" pos:column="64">)<pos:position pos:line="36" pos:column="65"/></operator> <operator pos:line="36" pos:column="66">&amp;<pos:position pos:line="36" pos:column="71"/></operator> <literal type="number" pos:line="36" pos:column="68">7<pos:position pos:line="36" pos:column="69"/></literal><operator pos:line="36" pos:column="69">,<pos:position pos:line="36" pos:column="70"/></operator> <name pos:line="36" pos:column="71">entry<pos:position pos:line="36" pos:column="76"/></name><operator pos:line="36" pos:column="76">)<pos:position pos:line="36" pos:column="77"/></operator></expr></argument> )<pos:position pos:line="36" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="80"/></expr_stmt>
			<break pos:line="37" pos:column="25">break;<pos:position pos:line="37" pos:column="31"/></break>
		<case pos:line="38" pos:column="17">case <expr><name pos:line="38" pos:column="22">SMB_ACL_GROUP_OBJ<pos:position pos:line="38" pos:column="39"/></name></expr>:<pos:position pos:line="38" pos:column="40"/></case>
			<comment type="block" pos:line="39" pos:column="25">/* group is only empty when identical to group perms. */</comment>
			<if pos:line="40" pos:column="25">if <condition pos:line="40" pos:column="28">(<expr><name><name pos:line="40" pos:column="29">racl<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">group_obj<pos:position pos:line="40" pos:column="44"/></name></name> <operator pos:line="40" pos:column="45">!=<pos:position pos:line="40" pos:column="47"/></operator> <name pos:line="40" pos:column="48">NO_ENTRY<pos:position pos:line="40" pos:column="56"/></name></expr>)<pos:position pos:line="40" pos:column="57"/></condition><then pos:line="40" pos:column="57">
				<block type="pseudo"><break pos:line="41" pos:column="33">break;<pos:position pos:line="41" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">COE2<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">( <argument><expr><name pos:line="42" pos:column="31">store_access_in_entry<pos:position pos:line="42" pos:column="52"/></name></expr></argument>,<argument><expr><operator pos:line="42" pos:column="53">(<pos:position pos:line="42" pos:column="54"/></operator><operator pos:line="42" pos:column="54">(<pos:position pos:line="42" pos:column="55"/></operator><name pos:line="42" pos:column="55">mode<pos:position pos:line="42" pos:column="59"/></name> <operator pos:line="42" pos:column="60">&gt;&gt;<pos:position pos:line="42" pos:column="65"/></operator> <literal type="number" pos:line="42" pos:column="63">3<pos:position pos:line="42" pos:column="64"/></literal><operator pos:line="42" pos:column="64">)<pos:position pos:line="42" pos:column="65"/></operator> <operator pos:line="42" pos:column="66">&amp;<pos:position pos:line="42" pos:column="71"/></operator> <literal type="number" pos:line="42" pos:column="68">7<pos:position pos:line="42" pos:column="69"/></literal><operator pos:line="42" pos:column="69">,<pos:position pos:line="42" pos:column="70"/></operator> <name pos:line="42" pos:column="71">entry<pos:position pos:line="42" pos:column="76"/></name><operator pos:line="42" pos:column="76">)<pos:position pos:line="42" pos:column="77"/></operator></expr></argument> )<pos:position pos:line="42" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="80"/></expr_stmt>
			<break pos:line="43" pos:column="25">break;<pos:position pos:line="43" pos:column="31"/></break>
		<case pos:line="44" pos:column="17">case <expr><name pos:line="44" pos:column="22">SMB_ACL_MASK<pos:position pos:line="44" pos:column="34"/></name></expr>:<pos:position pos:line="44" pos:column="35"/></case>
<cpp:ifndef pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">ifndef<pos:position pos:line="45" pos:column="8"/></cpp:directive> <name pos:line="45" pos:column="9">HAVE_SOLARIS_ACLS<pos:position pos:line="45" pos:column="26"/></name></cpp:ifndef>
<cpp:ifndef pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">ifndef<pos:position pos:line="46" pos:column="8"/></cpp:directive> <name pos:line="46" pos:column="9">ACLS_NEED_MASK<pos:position pos:line="46" pos:column="23"/></name></cpp:ifndef>
			<comment type="block" pos:line="47" pos:column="25">/* mask is only empty when we don't need it. */</comment>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><name><name pos:line="48" pos:column="29">racl<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">-&gt;<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="35">mask_obj<pos:position pos:line="48" pos:column="43"/></name></name> <operator pos:line="48" pos:column="44">==<pos:position pos:line="48" pos:column="46"/></operator> <name pos:line="48" pos:column="47">NO_ENTRY<pos:position pos:line="48" pos:column="55"/></name></expr>)<pos:position pos:line="48" pos:column="56"/></condition><then pos:line="48" pos:column="56">
				<block type="pseudo"><break pos:line="49" pos:column="33">break;<pos:position pos:line="49" pos:column="39"/></break></block></then></if>
<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif<pos:position pos:line="50" pos:column="7"/></cpp:directive></cpp:endif>
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">COE2<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">( <argument><expr><name pos:line="51" pos:column="31">store_access_in_entry<pos:position pos:line="51" pos:column="52"/></name></expr></argument>,<argument><expr><operator pos:line="51" pos:column="53">(<pos:position pos:line="51" pos:column="54"/></operator><operator pos:line="51" pos:column="54">(<pos:position pos:line="51" pos:column="55"/></operator><name pos:line="51" pos:column="55">mode<pos:position pos:line="51" pos:column="59"/></name> <operator pos:line="51" pos:column="60">&gt;&gt;<pos:position pos:line="51" pos:column="65"/></operator> <literal type="number" pos:line="51" pos:column="63">3<pos:position pos:line="51" pos:column="64"/></literal><operator pos:line="51" pos:column="64">)<pos:position pos:line="51" pos:column="65"/></operator> <operator pos:line="51" pos:column="66">&amp;<pos:position pos:line="51" pos:column="71"/></operator> <literal type="number" pos:line="51" pos:column="68">7<pos:position pos:line="51" pos:column="69"/></literal><operator pos:line="51" pos:column="69">,<pos:position pos:line="51" pos:column="70"/></operator> <name pos:line="51" pos:column="71">entry<pos:position pos:line="51" pos:column="76"/></name><operator pos:line="51" pos:column="76">)<pos:position pos:line="51" pos:column="77"/></operator></expr></argument> )<pos:position pos:line="51" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="80"/></expr_stmt>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>
			<break pos:line="53" pos:column="25">break;<pos:position pos:line="53" pos:column="31"/></break>
		<case pos:line="54" pos:column="17">case <expr><name pos:line="54" pos:column="22">SMB_ACL_OTHER<pos:position pos:line="54" pos:column="35"/></name></expr>:<pos:position pos:line="54" pos:column="36"/></case>
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">COE2<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">( <argument><expr><name pos:line="55" pos:column="31">store_access_in_entry<pos:position pos:line="55" pos:column="52"/></name></expr></argument>,<argument><expr><operator pos:line="55" pos:column="53">(<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="54">mode<pos:position pos:line="55" pos:column="58"/></name> <operator pos:line="55" pos:column="59">&amp;<pos:position pos:line="55" pos:column="64"/></operator> <literal type="number" pos:line="55" pos:column="61">7<pos:position pos:line="55" pos:column="62"/></literal><operator pos:line="55" pos:column="62">,<pos:position pos:line="55" pos:column="63"/></operator> <name pos:line="55" pos:column="64">entry<pos:position pos:line="55" pos:column="69"/></name><operator pos:line="55" pos:column="69">)<pos:position pos:line="55" pos:column="70"/></operator></expr></argument> )<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="73"/></expr_stmt>
			<break pos:line="56" pos:column="25">break;<pos:position pos:line="56" pos:column="31"/></break>
		}<pos:position pos:line="57" pos:column="18"/></block></switch>
	}<pos:position pos:line="58" pos:column="10"/></block></for>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">rc<pos:position pos:line="59" pos:column="15"/></name></expr>)<pos:position pos:line="59" pos:column="16"/></condition><then pos:line="59" pos:column="16"> <block pos:line="59" pos:column="17">{
	  <label><name pos:line="60" pos:column="11">error_exit<pos:position pos:line="60" pos:column="21"/></name>:<pos:position pos:line="60" pos:column="22"/></label>
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><name pos:line="61" pos:column="21">errfun<pos:position pos:line="61" pos:column="27"/></name></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28"> <block pos:line="61" pos:column="29">{
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">rsyserr<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">FERROR_XFER<pos:position pos:line="62" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="46">errno<pos:position pos:line="62" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="53">"change_sacl_perms: %s()"<pos:position pos:line="62" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name pos:line="63" pos:column="33">errfun<pos:position pos:line="63" pos:column="39"/></name></expr></argument>)<pos:position pos:line="63" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if>
		<return pos:line="65" pos:column="17">return <expr><operator pos:line="65" pos:column="24">(<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="25">mode_t<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">)<pos:position pos:line="65" pos:column="32"/></operator><operator pos:line="65" pos:column="32">-<pos:position pos:line="65" pos:column="33"/></operator><literal type="number" pos:line="65" pos:column="33">1<pos:position pos:line="65" pos:column="34"/></literal></expr>;<pos:position pos:line="65" pos:column="35"/></return>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

<cpp:ifdef pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">ifdef<pos:position pos:line="68" pos:column="7"/></cpp:directive> <name pos:line="68" pos:column="8">SMB_ACL_LOSES_SPECIAL_MODE_BITS<pos:position pos:line="68" pos:column="39"/></name></cpp:ifdef>
	<comment type="block" pos:line="69" pos:column="9">/* Ensure that chmod() will be called to restore any lost setid bits. */</comment>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">old_mode<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">&amp;<pos:position pos:line="70" pos:column="27"/></operator> <operator pos:line="70" pos:column="24">(<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="25">S_ISUID<pos:position pos:line="70" pos:column="32"/></name> <operator pos:line="70" pos:column="33">|<pos:position pos:line="70" pos:column="34"/></operator> <name pos:line="70" pos:column="35">S_ISGID<pos:position pos:line="70" pos:column="42"/></name> <operator pos:line="70" pos:column="43">|<pos:position pos:line="70" pos:column="44"/></operator> <name pos:line="70" pos:column="45">S_ISVTX<pos:position pos:line="70" pos:column="52"/></name><operator pos:line="70" pos:column="52">)<pos:position pos:line="70" pos:column="53"/></operator>
	 <operator pos:line="71" pos:column="10">&amp;&amp;<pos:position pos:line="71" pos:column="20"/></operator> <call><name pos:line="71" pos:column="13">BITS_EQUAL<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">old_mode<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="34">mode<pos:position pos:line="71" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="40">CHMOD_BITS<pos:position pos:line="71" pos:column="50"/></name></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="52"/></condition><then pos:line="71" pos:column="52">
		<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="17">old_mode<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">&amp;=<pos:position pos:line="72" pos:column="32"/></operator> <operator pos:line="72" pos:column="29">~<pos:position pos:line="72" pos:column="30"/></operator><operator pos:line="72" pos:column="30">(<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="31">S_ISUID<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">|<pos:position pos:line="72" pos:column="40"/></operator> <name pos:line="72" pos:column="41">S_ISGID<pos:position pos:line="72" pos:column="48"/></name> <operator pos:line="72" pos:column="49">|<pos:position pos:line="72" pos:column="50"/></operator> <name pos:line="72" pos:column="51">S_ISVTX<pos:position pos:line="72" pos:column="58"/></name><operator pos:line="72" pos:column="58">)<pos:position pos:line="72" pos:column="59"/></operator></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt></block></then></if>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>

	<comment type="block" pos:line="75" pos:column="9">/* Return the mode of the file on disk, as we will set them. */</comment>
	<return pos:line="76" pos:column="9">return <expr><operator pos:line="76" pos:column="16">(<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">old_mode<pos:position pos:line="76" pos:column="25"/></name> <operator pos:line="76" pos:column="26">&amp;<pos:position pos:line="76" pos:column="31"/></operator> <operator pos:line="76" pos:column="28">~<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="29">ACCESSPERMS<pos:position pos:line="76" pos:column="40"/></name><operator pos:line="76" pos:column="40">)<pos:position pos:line="76" pos:column="41"/></operator> <operator pos:line="76" pos:column="42">|<pos:position pos:line="76" pos:column="43"/></operator> <operator pos:line="76" pos:column="44">(<pos:position pos:line="76" pos:column="45"/></operator><name pos:line="76" pos:column="45">mode<pos:position pos:line="76" pos:column="49"/></name> <operator pos:line="76" pos:column="50">&amp;<pos:position pos:line="76" pos:column="55"/></operator> <name pos:line="76" pos:column="52">ACCESSPERMS<pos:position pos:line="76" pos:column="63"/></name><operator pos:line="76" pos:column="63">)<pos:position pos:line="76" pos:column="64"/></operator></expr>;<pos:position pos:line="76" pos:column="65"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

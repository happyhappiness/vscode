<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_29_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">write_sparse<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">f<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buf<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">len<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">size_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">l1<pos:position pos:line="3" pos:column="18"/></name><init pos:line="3" pos:column="18">=<expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="22">l2<pos:position pos:line="3" pos:column="24"/></name><init pos:line="3" pos:column="24">=<expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">l1<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr>;<pos:position pos:line="6" pos:column="19"/></init><condition><expr><name pos:line="6" pos:column="19">l1<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">&lt;<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="22">len<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">&amp;&amp;<pos:position pos:line="6" pos:column="36"/></operator> <name><name pos:line="6" pos:column="29">buf<pos:position pos:line="6" pos:column="32"/></name><index pos:line="6" pos:column="32">[<expr><name pos:line="6" pos:column="33">l1<pos:position pos:line="6" pos:column="35"/></name></expr>]<pos:position pos:line="6" pos:column="36"/></index></name><operator pos:line="6" pos:column="36">==<pos:position pos:line="6" pos:column="38"/></operator><literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal></expr>;<pos:position pos:line="6" pos:column="40"/></condition><incr><expr><name pos:line="6" pos:column="40">l1<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">++<pos:position pos:line="6" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="45"/></control> <block type="pseudo"><empty_stmt pos:line="6" pos:column="46">;<pos:position pos:line="6" pos:column="47"/></empty_stmt></block></for>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">l2<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr>;<pos:position pos:line="7" pos:column="19"/></init><condition><expr><name pos:line="7" pos:column="19">l2<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">&lt;<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="22">(<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">len<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">l1<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">)<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="31">&amp;&amp;<pos:position pos:line="7" pos:column="41"/></operator> <name><name pos:line="7" pos:column="34">buf<pos:position pos:line="7" pos:column="37"/></name><index pos:line="7" pos:column="37">[<expr><name pos:line="7" pos:column="38">len<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">-<pos:position pos:line="7" pos:column="42"/></operator><operator pos:line="7" pos:column="42">(<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">l2<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">+<pos:position pos:line="7" pos:column="46"/></operator><literal type="number" pos:line="7" pos:column="46">1<pos:position pos:line="7" pos:column="47"/></literal><operator pos:line="7" pos:column="47">)<pos:position pos:line="7" pos:column="48"/></operator></expr>]<pos:position pos:line="7" pos:column="49"/></index></name><operator pos:line="7" pos:column="49">==<pos:position pos:line="7" pos:column="51"/></operator><literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal></expr>;<pos:position pos:line="7" pos:column="53"/></condition><incr><expr><name pos:line="7" pos:column="53">l2<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">++<pos:position pos:line="7" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="58"/></control> <block type="pseudo"><empty_stmt pos:line="7" pos:column="59">;<pos:position pos:line="7" pos:column="60"/></empty_stmt></block></for>

	<expr_stmt><expr><name pos:line="9" pos:column="9">last_byte<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name><name pos:line="9" pos:column="21">buf<pos:position pos:line="9" pos:column="24"/></name><index pos:line="9" pos:column="24">[<expr><name pos:line="9" pos:column="25">len<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">-<pos:position pos:line="9" pos:column="29"/></operator><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal></expr>]<pos:position pos:line="9" pos:column="31"/></index></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">l1<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">len<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">||<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">l2<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">&gt;<pos:position pos:line="11" pos:column="33"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">last_sparse<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">=<pos:position pos:line="12" pos:column="29"/></operator><literal type="number" pos:line="12" pos:column="29">1<pos:position pos:line="12" pos:column="30"/></literal></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">l1<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&gt;<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20"> <block pos:line="14" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">do_lseek<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">f<pos:position pos:line="15" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="28">l1<pos:position pos:line="15" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="15" pos:column="31">SEEK_CUR<pos:position pos:line="15" pos:column="39"/></name></expr></argument>)<pos:position pos:line="15" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt>  
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">l1<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">len<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> 
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><name pos:line="19" pos:column="24">len<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="21" pos:column="9">ret<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">write<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name pos:line="21" pos:column="21">f<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="24">buf<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">+<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">l1<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">len<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">-<pos:position pos:line="21" pos:column="39"/></operator> <operator pos:line="21" pos:column="40">(<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">l1<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">+<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">l2<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">ret<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">==<pos:position pos:line="22" pos:column="19"/></operator> <operator pos:line="22" pos:column="20">-<pos:position pos:line="22" pos:column="21"/></operator><literal type="number" pos:line="22" pos:column="21">1<pos:position pos:line="22" pos:column="22"/></literal> <operator pos:line="22" pos:column="23">||<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">ret<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">==<pos:position pos:line="22" pos:column="32"/></operator> <literal type="number" pos:line="22" pos:column="33">0<pos:position pos:line="22" pos:column="34"/></literal></expr>)<pos:position pos:line="22" pos:column="35"/></condition><then pos:line="22" pos:column="35">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><name pos:line="23" pos:column="24">ret<pos:position pos:line="23" pos:column="27"/></name></expr>;<pos:position pos:line="23" pos:column="28"/></return></block></then>
	<elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><name pos:line="24" pos:column="18">ret<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">!=<pos:position pos:line="24" pos:column="24"/></operator> <call pos:line="24" pos:column="25">(<name pos:line="24" pos:column="26">int<pos:position pos:line="24" pos:column="29"/></name>) <argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">len<pos:position pos:line="24" pos:column="35"/></name> <operator pos:line="24" pos:column="36">-<pos:position pos:line="24" pos:column="37"/></operator> <operator pos:line="24" pos:column="38">(<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">l1<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">+<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">l2<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="47"/></condition><then pos:line="24" pos:column="47"> 
		<block type="pseudo"><return pos:line="25" pos:column="17">return <expr><operator pos:line="25" pos:column="24">(<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">l1<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">+<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">ret<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">)<pos:position pos:line="25" pos:column="32"/></operator></expr>;<pos:position pos:line="25" pos:column="33"/></return></block></then></if></elseif></if>

	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">l2<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">&gt;<pos:position pos:line="27" pos:column="20"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>)<pos:position pos:line="27" pos:column="20"/></condition><then pos:line="27" pos:column="20">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="17">do_lseek<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">f<pos:position pos:line="28" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="28" pos:column="28">l2<pos:position pos:line="28" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="28" pos:column="31">SEEK_CUR<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt></block></then></if>
	
	<return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">len<pos:position pos:line="30" pos:column="19"/></name></expr>;<pos:position pos:line="30" pos:column="20"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

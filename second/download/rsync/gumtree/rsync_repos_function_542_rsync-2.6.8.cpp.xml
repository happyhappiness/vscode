<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_542_rsync-2.6.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">permstring<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">perms<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">mode_t<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">mode<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><specifier pos:line="3" pos:column="16">const<pos:position pos:line="3" pos:column="21"/></specifier> <name pos:line="3" pos:column="22">char<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">perm_map<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><literal type="string" pos:line="3" pos:column="39">"rwxrwxrwx"<pos:position pos:line="3" pos:column="50"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">strcpy<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">perms<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"----------"<pos:position pos:line="6" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt>
	
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></init><condition><expr><name pos:line="8" pos:column="18">i<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator><literal type="number" pos:line="8" pos:column="20">9<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></condition><incr><expr><name pos:line="8" pos:column="22">i<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">++<pos:position pos:line="8" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="26"/></control> <block pos:line="8" pos:column="27">{
		<if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><name pos:line="9" pos:column="21">mode<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">&amp;<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal><operator pos:line="9" pos:column="30">&lt;&lt;<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="32">i<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator></expr>)<pos:position pos:line="9" pos:column="35"/></condition><then pos:line="9" pos:column="35"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="36">perms<pos:position pos:line="9" pos:column="41"/></name><index pos:line="9" pos:column="41">[<expr><literal type="number" pos:line="9" pos:column="42">9<pos:position pos:line="9" pos:column="43"/></literal><operator pos:line="9" pos:column="43">-<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="44">i<pos:position pos:line="9" pos:column="45"/></name></expr>]<pos:position pos:line="9" pos:column="46"/></index></name> <operator pos:line="9" pos:column="47">=<pos:position pos:line="9" pos:column="48"/></operator> <name><name pos:line="9" pos:column="49">perm_map<pos:position pos:line="9" pos:column="57"/></name><index pos:line="9" pos:column="57">[<expr><literal type="number" pos:line="9" pos:column="58">8<pos:position pos:line="9" pos:column="59"/></literal><operator pos:line="9" pos:column="59">-<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="60">i<pos:position pos:line="9" pos:column="61"/></name></expr>]<pos:position pos:line="9" pos:column="62"/></index></name></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt></block></then></if>
	}<pos:position pos:line="10" pos:column="10"/></block></for>

	<comment type="block" pos:line="12" pos:column="9">/* Handle setuid/sticky bits.  You might think the indices are
	 * off by one, but remember there's a type char at the
	 * start.  */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">mode<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&amp;<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="20">S_ISUID<pos:position pos:line="15" pos:column="27"/></name></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">perms<pos:position pos:line="16" pos:column="22"/></name><index pos:line="16" pos:column="22">[<expr><literal type="number" pos:line="16" pos:column="23">3<pos:position pos:line="16" pos:column="24"/></literal></expr>]<pos:position pos:line="16" pos:column="25"/></index></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <ternary><condition><expr><operator pos:line="16" pos:column="28">(<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">mode<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator> <name pos:line="16" pos:column="36">S_IXUSR<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator></expr> ?<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <expr><literal type="char" pos:line="16" pos:column="47">'s'<pos:position pos:line="16" pos:column="50"/></literal></expr> <pos:position pos:line="16" pos:column="51"/></then><else pos:line="16" pos:column="51">: <expr><literal type="char" pos:line="16" pos:column="53">'S'<pos:position pos:line="16" pos:column="56"/></literal></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">mode<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">&amp;<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="20">S_ISGID<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="17">perms<pos:position pos:line="19" pos:column="22"/></name><index pos:line="19" pos:column="22">[<expr><literal type="number" pos:line="19" pos:column="23">6<pos:position pos:line="19" pos:column="24"/></literal></expr>]<pos:position pos:line="19" pos:column="25"/></index></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <ternary><condition><expr><operator pos:line="19" pos:column="28">(<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">mode<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">&amp;<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="36">S_IXGRP<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">)<pos:position pos:line="19" pos:column="44"/></operator></expr> ?<pos:position pos:line="19" pos:column="46"/></condition><then pos:line="19" pos:column="46"> <expr><literal type="char" pos:line="19" pos:column="47">'s'<pos:position pos:line="19" pos:column="50"/></literal></expr> <pos:position pos:line="19" pos:column="51"/></then><else pos:line="19" pos:column="51">: <expr><literal type="char" pos:line="19" pos:column="53">'S'<pos:position pos:line="19" pos:column="56"/></literal></expr></else></ternary></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt></block></then></if>
	
<cpp:ifdef pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">ifdef<pos:position pos:line="21" pos:column="7"/></cpp:directive> <name pos:line="21" pos:column="8">S_ISVTX<pos:position pos:line="21" pos:column="15"/></name></cpp:ifdef>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">mode<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">&amp;<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="20">S_ISVTX<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="17">perms<pos:position pos:line="23" pos:column="22"/></name><index pos:line="23" pos:column="22">[<expr><literal type="number" pos:line="23" pos:column="23">9<pos:position pos:line="23" pos:column="24"/></literal></expr>]<pos:position pos:line="23" pos:column="25"/></index></name> <operator pos:line="23" pos:column="26">=<pos:position pos:line="23" pos:column="27"/></operator> <ternary><condition><expr><operator pos:line="23" pos:column="28">(<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">mode<pos:position pos:line="23" pos:column="33"/></name> <operator pos:line="23" pos:column="34">&amp;<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="36">S_IXOTH<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator></expr> ?<pos:position pos:line="23" pos:column="46"/></condition><then pos:line="23" pos:column="46"> <expr><literal type="char" pos:line="23" pos:column="47">'t'<pos:position pos:line="23" pos:column="50"/></literal></expr> <pos:position pos:line="23" pos:column="51"/></then><else pos:line="23" pos:column="51">: <expr><literal type="char" pos:line="23" pos:column="53">'T'<pos:position pos:line="23" pos:column="56"/></literal></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt></block></then></if>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
		
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name pos:line="26" pos:column="13">S_ISLNK<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">mode<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="28">perms<pos:position pos:line="26" pos:column="33"/></name><index pos:line="26" pos:column="33">[<expr><literal type="number" pos:line="26" pos:column="34">0<pos:position pos:line="26" pos:column="35"/></literal></expr>]<pos:position pos:line="26" pos:column="36"/></index></name> <operator pos:line="26" pos:column="37">=<pos:position pos:line="26" pos:column="38"/></operator> <literal type="char" pos:line="26" pos:column="39">'l'<pos:position pos:line="26" pos:column="42"/></literal></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">S_ISDIR<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">mode<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="28">perms<pos:position pos:line="27" pos:column="33"/></name><index pos:line="27" pos:column="33">[<expr><literal type="number" pos:line="27" pos:column="34">0<pos:position pos:line="27" pos:column="35"/></literal></expr>]<pos:position pos:line="27" pos:column="36"/></index></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <literal type="char" pos:line="27" pos:column="39">'d'<pos:position pos:line="27" pos:column="42"/></literal></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">S_ISBLK<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">mode<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="28">perms<pos:position pos:line="28" pos:column="33"/></name><index pos:line="28" pos:column="33">[<expr><literal type="number" pos:line="28" pos:column="34">0<pos:position pos:line="28" pos:column="35"/></literal></expr>]<pos:position pos:line="28" pos:column="36"/></index></name> <operator pos:line="28" pos:column="37">=<pos:position pos:line="28" pos:column="38"/></operator> <literal type="char" pos:line="28" pos:column="39">'b'<pos:position pos:line="28" pos:column="42"/></literal></expr>;<pos:position pos:line="28" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name pos:line="29" pos:column="13">S_ISCHR<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><name pos:line="29" pos:column="21">mode<pos:position pos:line="29" pos:column="25"/></name></expr></argument>)<pos:position pos:line="29" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="28">perms<pos:position pos:line="29" pos:column="33"/></name><index pos:line="29" pos:column="33">[<expr><literal type="number" pos:line="29" pos:column="34">0<pos:position pos:line="29" pos:column="35"/></literal></expr>]<pos:position pos:line="29" pos:column="36"/></index></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <literal type="char" pos:line="29" pos:column="39">'c'<pos:position pos:line="29" pos:column="42"/></literal></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt></block></then></if>
	<if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">S_ISSOCK<pos:position pos:line="30" pos:column="21"/></name><argument_list pos:line="30" pos:column="21">(<argument><expr><name pos:line="30" pos:column="22">mode<pos:position pos:line="30" pos:column="26"/></name></expr></argument>)<pos:position pos:line="30" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="28"/></condition><then pos:line="30" pos:column="28"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="29">perms<pos:position pos:line="30" pos:column="34"/></name><index pos:line="30" pos:column="34">[<expr><literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal></expr>]<pos:position pos:line="30" pos:column="37"/></index></name> <operator pos:line="30" pos:column="38">=<pos:position pos:line="30" pos:column="39"/></operator> <literal type="char" pos:line="30" pos:column="40">'s'<pos:position pos:line="30" pos:column="43"/></literal></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt></block></then></if>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">S_ISFIFO<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">mode<pos:position pos:line="31" pos:column="26"/></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="29">perms<pos:position pos:line="31" pos:column="34"/></name><index pos:line="31" pos:column="34">[<expr><literal type="number" pos:line="31" pos:column="35">0<pos:position pos:line="31" pos:column="36"/></literal></expr>]<pos:position pos:line="31" pos:column="37"/></index></name> <operator pos:line="31" pos:column="38">=<pos:position pos:line="31" pos:column="39"/></operator> <literal type="char" pos:line="31" pos:column="40">'p'<pos:position pos:line="31" pos:column="43"/></literal></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt></block></then></if>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

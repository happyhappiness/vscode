<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_313_rsync-2.6.0.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">send_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">argc<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name><name pos:line="1" pos:column="57">argv<pos:position pos:line="1" pos:column="61"/></name><index pos:line="1" pos:column="61">[]<pos:position pos:line="1" pos:column="63"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">l<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">STRUCT_STAT<pos:position pos:line="4" pos:column="20"/></name></type> <name pos:line="4" pos:column="21">st<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">dir<pos:position pos:line="5" pos:column="22"/></name></decl>, <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="25">olddir<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">lastpath<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><name pos:line="6" pos:column="23">MAXPATHLEN<pos:position pos:line="6" pos:column="33"/></name></expr>]<pos:position pos:line="6" pos:column="34"/></index></name> <init pos:line="6" pos:column="35">= <expr><literal type="string" pos:line="6" pos:column="37">""<pos:position pos:line="6" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">file_list<pos:position pos:line="7" pos:column="25"/></name></name> <modifier pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></modifier></type><name pos:line="7" pos:column="27">flist<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int64<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">start_write<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">use_ff_fd<pos:position pos:line="9" pos:column="22"/></name> <init pos:line="9" pos:column="23">= <expr><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">show_filelist_p<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">()<pos:position pos:line="11" pos:column="30"/></argument_list></call> <operator pos:line="11" pos:column="31">&amp;&amp;<pos:position pos:line="11" pos:column="41"/></operator> <name pos:line="11" pos:column="34">f<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">!=<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">-<pos:position pos:line="11" pos:column="40"/></operator><literal type="number" pos:line="11" pos:column="40">1<pos:position pos:line="11" pos:column="41"/></literal></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">start_filelist_progress<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">(<argument><expr><literal type="string" pos:line="12" pos:column="41">"building file list"<pos:position pos:line="12" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="14" pos:column="9">start_write<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name><name pos:line="14" pos:column="23">stats<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">.<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">total_written<pos:position pos:line="14" pos:column="42"/></name></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">flist<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">flist_new<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">()<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">f<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">!=<pos:position pos:line="18" pos:column="17"/></operator> <operator pos:line="18" pos:column="18">-<pos:position pos:line="18" pos:column="19"/></operator><literal type="number" pos:line="18" pos:column="19">1<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">io_start_buffering<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">f<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">filesfrom_fd<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">&gt;=<pos:position pos:line="20" pos:column="39"/></operator> <literal type="number" pos:line="20" pos:column="37">0<pos:position pos:line="20" pos:column="38"/></literal></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39"> <block pos:line="20" pos:column="40">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">argv<pos:position pos:line="21" pos:column="33"/></name><index pos:line="21" pos:column="33">[<expr><literal type="number" pos:line="21" pos:column="34">0<pos:position pos:line="21" pos:column="35"/></literal></expr>]<pos:position pos:line="21" pos:column="36"/></index></name> <operator pos:line="21" pos:column="37">&amp;&amp;<pos:position pos:line="21" pos:column="47"/></operator> <operator pos:line="21" pos:column="40">!<pos:position pos:line="21" pos:column="41"/></operator><call><name pos:line="21" pos:column="41">push_dir<pos:position pos:line="21" pos:column="49"/></name><argument_list pos:line="21" pos:column="49">(<argument><expr><name><name pos:line="21" pos:column="50">argv<pos:position pos:line="21" pos:column="54"/></name><index pos:line="21" pos:column="54">[<expr><literal type="number" pos:line="21" pos:column="55">0<pos:position pos:line="21" pos:column="56"/></literal></expr>]<pos:position pos:line="21" pos:column="57"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="59">0<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="62"/></condition><then pos:line="21" pos:column="62"> <block pos:line="21" pos:column="63">{
				<expr_stmt><expr><call><name pos:line="22" pos:column="33">rprintf<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><name pos:line="22" pos:column="41">FERROR<pos:position pos:line="22" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="49">"push_dir %s failed: %s\n"<pos:position pos:line="22" pos:column="75"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="23" pos:column="41">full_fname<pos:position pos:line="23" pos:column="51"/></name><argument_list pos:line="23" pos:column="51">(<argument><expr><name><name pos:line="23" pos:column="52">argv<pos:position pos:line="23" pos:column="56"/></name><index pos:line="23" pos:column="56">[<expr><literal type="number" pos:line="23" pos:column="57">0<pos:position pos:line="23" pos:column="58"/></literal></expr>]<pos:position pos:line="23" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="62">strerror<pos:position pos:line="23" pos:column="70"/></name><argument_list pos:line="23" pos:column="70">(<argument><expr><name pos:line="23" pos:column="71">errno<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="24" pos:column="33">exit_cleanup<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">RERR_FILESELECT<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="25" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="26" pos:column="25">use_ff_fd<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">=<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="37">1<pos:position pos:line="26" pos:column="38"/></literal></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<while pos:line="30" pos:column="9">while <condition pos:line="30" pos:column="15">(<expr><literal type="number" pos:line="30" pos:column="16">1<pos:position pos:line="30" pos:column="17"/></literal></expr>)<pos:position pos:line="30" pos:column="18"/></condition> <block pos:line="30" pos:column="19">{
		<decl_stmt><decl><type><name pos:line="31" pos:column="17">char<pos:position pos:line="31" pos:column="21"/></name></type> <name><name pos:line="31" pos:column="22">fname2<pos:position pos:line="31" pos:column="28"/></name><index pos:line="31" pos:column="28">[<expr><name pos:line="31" pos:column="29">MAXPATHLEN<pos:position pos:line="31" pos:column="39"/></name></expr>]<pos:position pos:line="31" pos:column="40"/></index></name></decl>;<pos:position pos:line="31" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">char<pos:position pos:line="32" pos:column="21"/></name> <modifier pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></modifier></type><name pos:line="32" pos:column="23">fname<pos:position pos:line="32" pos:column="28"/></name> <init pos:line="32" pos:column="29">= <expr><name pos:line="32" pos:column="31">fname2<pos:position pos:line="32" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="38"/></decl_stmt>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><name pos:line="34" pos:column="21">use_ff_fd<pos:position pos:line="34" pos:column="30"/></name></expr>)<pos:position pos:line="34" pos:column="31"/></condition><then pos:line="34" pos:column="31"> <block pos:line="34" pos:column="32">{
			<if pos:line="35" pos:column="25">if <condition pos:line="35" pos:column="28">(<expr><call><name pos:line="35" pos:column="29">read_filesfrom_line<pos:position pos:line="35" pos:column="48"/></name><argument_list pos:line="35" pos:column="48">(<argument><expr><name pos:line="35" pos:column="49">filesfrom_fd<pos:position pos:line="35" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="63">fname<pos:position pos:line="35" pos:column="68"/></name></expr></argument>)<pos:position pos:line="35" pos:column="69"/></argument_list></call> <operator pos:line="35" pos:column="70">==<pos:position pos:line="35" pos:column="72"/></operator> <literal type="number" pos:line="35" pos:column="73">0<pos:position pos:line="35" pos:column="74"/></literal></expr>)<pos:position pos:line="35" pos:column="75"/></condition><then pos:line="35" pos:column="75">
				<block type="pseudo"><break pos:line="36" pos:column="33">break;<pos:position pos:line="36" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">sanitize_path<pos:position pos:line="37" pos:column="38"/></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">fname<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">NULL<pos:position pos:line="37" pos:column="50"/></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <else pos:line="38" pos:column="19">else <block pos:line="38" pos:column="24">{
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">argc<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">--<pos:position pos:line="39" pos:column="35"/></operator> <operator pos:line="39" pos:column="36">==<pos:position pos:line="39" pos:column="38"/></operator> <literal type="number" pos:line="39" pos:column="39">0<pos:position pos:line="39" pos:column="40"/></literal></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
				<block type="pseudo"><break pos:line="40" pos:column="33">break;<pos:position pos:line="40" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><call><name pos:line="41" pos:column="25">strlcpy<pos:position pos:line="41" pos:column="32"/></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">fname<pos:position pos:line="41" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="40">*<pos:position pos:line="41" pos:column="41"/></operator><name pos:line="41" pos:column="41">argv<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">++<pos:position pos:line="41" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">MAXPATHLEN<pos:position pos:line="41" pos:column="59"/></name></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><name pos:line="42" pos:column="29">sanitize_paths<pos:position pos:line="42" pos:column="43"/></name></expr>)<pos:position pos:line="42" pos:column="44"/></condition><then pos:line="42" pos:column="44">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="33">sanitize_path<pos:position pos:line="43" pos:column="46"/></name><argument_list pos:line="43" pos:column="46">(<argument><expr><name pos:line="43" pos:column="47">fname<pos:position pos:line="43" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="54">NULL<pos:position pos:line="43" pos:column="58"/></name></expr></argument>)<pos:position pos:line="43" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="60"/></expr_stmt></block></then></if>
		}<pos:position pos:line="44" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="46" pos:column="17">l<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">strlen<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">fname<pos:position pos:line="46" pos:column="33"/></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">fname<pos:position pos:line="47" pos:column="26"/></name><index pos:line="47" pos:column="26">[<expr><name pos:line="47" pos:column="27">l<pos:position pos:line="47" pos:column="28"/></name> <operator pos:line="47" pos:column="29">-<pos:position pos:line="47" pos:column="30"/></operator> <literal type="number" pos:line="47" pos:column="31">1<pos:position pos:line="47" pos:column="32"/></literal></expr>]<pos:position pos:line="47" pos:column="33"/></index></name> <operator pos:line="47" pos:column="34">==<pos:position pos:line="47" pos:column="36"/></operator> <literal type="char" pos:line="47" pos:column="37">'/'<pos:position pos:line="47" pos:column="40"/></literal></expr>)<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41"> <block pos:line="47" pos:column="42">{
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><name pos:line="48" pos:column="29">l<pos:position pos:line="48" pos:column="30"/></name> <operator pos:line="48" pos:column="31">==<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">2<pos:position pos:line="48" pos:column="35"/></literal> <operator pos:line="48" pos:column="36">&amp;&amp;<pos:position pos:line="48" pos:column="46"/></operator> <name><name pos:line="48" pos:column="39">fname<pos:position pos:line="48" pos:column="44"/></name><index pos:line="48" pos:column="44">[<expr><literal type="number" pos:line="48" pos:column="45">0<pos:position pos:line="48" pos:column="46"/></literal></expr>]<pos:position pos:line="48" pos:column="47"/></index></name> <operator pos:line="48" pos:column="48">==<pos:position pos:line="48" pos:column="50"/></operator> <literal type="char" pos:line="48" pos:column="51">'.'<pos:position pos:line="48" pos:column="54"/></literal></expr>)<pos:position pos:line="48" pos:column="55"/></condition><then pos:line="48" pos:column="55"> <block pos:line="48" pos:column="56">{
				<comment type="block" pos:line="49" pos:column="33">/* Turn "./" into just "." rather than "./." */</comment>
				<expr_stmt><expr><name><name pos:line="50" pos:column="33">fname<pos:position pos:line="50" pos:column="38"/></name><index pos:line="50" pos:column="38">[<expr><literal type="number" pos:line="50" pos:column="39">1<pos:position pos:line="50" pos:column="40"/></literal></expr>]<pos:position pos:line="50" pos:column="41"/></index></name> <operator pos:line="50" pos:column="42">=<pos:position pos:line="50" pos:column="43"/></operator> <literal type="char" pos:line="50" pos:column="44">'\0'<pos:position pos:line="50" pos:column="48"/></literal></expr>;<pos:position pos:line="50" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="51" pos:column="26"/></block></then> <else pos:line="51" pos:column="27">else <block pos:line="51" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="52" pos:column="33">strlcat<pos:position pos:line="52" pos:column="40"/></name><argument_list pos:line="52" pos:column="40">(<argument><expr><name pos:line="52" pos:column="41">fname<pos:position pos:line="52" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="48">"."<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="53">MAXPATHLEN<pos:position pos:line="52" pos:column="63"/></name></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
			}<pos:position pos:line="53" pos:column="26"/></block></else></if>
		}<pos:position pos:line="54" pos:column="18"/></block></then></if>

		<if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><call><name pos:line="56" pos:column="21">link_stat<pos:position pos:line="56" pos:column="30"/></name><argument_list pos:line="56" pos:column="30">(<argument><expr><name pos:line="56" pos:column="31">fname<pos:position pos:line="56" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="38">&amp;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="39">st<pos:position pos:line="56" pos:column="41"/></name></expr></argument>)<pos:position pos:line="56" pos:column="42"/></argument_list></call> <operator pos:line="56" pos:column="43">!=<pos:position pos:line="56" pos:column="45"/></operator> <literal type="number" pos:line="56" pos:column="46">0<pos:position pos:line="56" pos:column="47"/></literal></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48"> <block pos:line="56" pos:column="49">{
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><name pos:line="57" pos:column="29">f<pos:position pos:line="57" pos:column="30"/></name> <operator pos:line="57" pos:column="31">!=<pos:position pos:line="57" pos:column="33"/></operator> <operator pos:line="57" pos:column="34">-<pos:position pos:line="57" pos:column="35"/></operator><literal type="number" pos:line="57" pos:column="35">1<pos:position pos:line="57" pos:column="36"/></literal></expr>)<pos:position pos:line="57" pos:column="37"/></condition><then pos:line="57" pos:column="37"> <block pos:line="57" pos:column="38">{
				<expr_stmt><expr><name pos:line="58" pos:column="33">io_error<pos:position pos:line="58" pos:column="41"/></name> <operator pos:line="58" pos:column="42">|=<pos:position pos:line="58" pos:column="44"/></operator> <name pos:line="58" pos:column="45">IOERR_GENERAL<pos:position pos:line="58" pos:column="58"/></name></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="59" pos:column="33">rprintf<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">FERROR<pos:position pos:line="59" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="49">"link_stat %s failed: %s\n"<pos:position pos:line="59" pos:column="76"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="60" pos:column="41">full_fname<pos:position pos:line="60" pos:column="51"/></name><argument_list pos:line="60" pos:column="51">(<argument><expr><name pos:line="60" pos:column="52">fname<pos:position pos:line="60" pos:column="57"/></name></expr></argument>)<pos:position pos:line="60" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="60">strerror<pos:position pos:line="60" pos:column="68"/></name><argument_list pos:line="60" pos:column="68">(<argument><expr><name pos:line="60" pos:column="69">errno<pos:position pos:line="60" pos:column="74"/></name></expr></argument>)<pos:position pos:line="60" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="77"/></expr_stmt>
			}<pos:position pos:line="61" pos:column="26"/></block></then></if>
			<continue pos:line="62" pos:column="25">continue;<pos:position pos:line="62" pos:column="34"/></continue>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if>

		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">S_ISDIR<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name><name pos:line="65" pos:column="29">st<pos:position pos:line="65" pos:column="31"/></name><operator pos:line="65" pos:column="31">.<pos:position pos:line="65" pos:column="32"/></operator><name pos:line="65" pos:column="32">st_mode<pos:position pos:line="65" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call> <operator pos:line="65" pos:column="41">&amp;&amp;<pos:position pos:line="65" pos:column="51"/></operator> <operator pos:line="65" pos:column="44">!<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="45">recurse<pos:position pos:line="65" pos:column="52"/></name> <operator pos:line="65" pos:column="53">&amp;&amp;<pos:position pos:line="65" pos:column="63"/></operator> <operator pos:line="65" pos:column="56">!<pos:position pos:line="65" pos:column="57"/></operator><name pos:line="65" pos:column="57">files_from<pos:position pos:line="65" pos:column="67"/></name></expr>)<pos:position pos:line="65" pos:column="68"/></condition><then pos:line="65" pos:column="68"> <block pos:line="65" pos:column="69">{
			<expr_stmt><expr><call><name pos:line="66" pos:column="25">rprintf<pos:position pos:line="66" pos:column="32"/></name><argument_list pos:line="66" pos:column="32">(<argument><expr><name pos:line="66" pos:column="33">FINFO<pos:position pos:line="66" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="40">"skipping directory %s\n"<pos:position pos:line="66" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="67">fname<pos:position pos:line="66" pos:column="72"/></name></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt>
			<continue pos:line="67" pos:column="25">continue;<pos:position pos:line="67" pos:column="34"/></continue>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="70" pos:column="17">dir<pos:position pos:line="70" pos:column="20"/></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <name pos:line="70" pos:column="23">NULL<pos:position pos:line="70" pos:column="27"/></name></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
		<expr_stmt><expr><name pos:line="71" pos:column="17">olddir<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">NULL<pos:position pos:line="71" pos:column="30"/></name></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>

		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><operator pos:line="73" pos:column="21">!<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="22">relative_paths<pos:position pos:line="73" pos:column="36"/></name></expr>)<pos:position pos:line="73" pos:column="37"/></condition><then pos:line="73" pos:column="37"> <block pos:line="73" pos:column="38">{
			<expr_stmt><expr><name pos:line="74" pos:column="25">p<pos:position pos:line="74" pos:column="26"/></name> <operator pos:line="74" pos:column="27">=<pos:position pos:line="74" pos:column="28"/></operator> <call><name pos:line="74" pos:column="29">strrchr<pos:position pos:line="74" pos:column="36"/></name><argument_list pos:line="74" pos:column="36">(<argument><expr><name pos:line="74" pos:column="37">fname<pos:position pos:line="74" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="74" pos:column="44">'/'<pos:position pos:line="74" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name pos:line="75" pos:column="29">p<pos:position pos:line="75" pos:column="30"/></name></expr>)<pos:position pos:line="75" pos:column="31"/></condition><then pos:line="75" pos:column="31"> <block pos:line="75" pos:column="32">{
				<expr_stmt><expr><operator pos:line="76" pos:column="33">*<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="34">p<pos:position pos:line="76" pos:column="35"/></name> <operator pos:line="76" pos:column="36">=<pos:position pos:line="76" pos:column="37"/></operator> <literal type="number" pos:line="76" pos:column="38">0<pos:position pos:line="76" pos:column="39"/></literal></expr>;<pos:position pos:line="76" pos:column="40"/></expr_stmt>
				<if pos:line="77" pos:column="33">if <condition pos:line="77" pos:column="36">(<expr><name pos:line="77" pos:column="37">p<pos:position pos:line="77" pos:column="38"/></name> <operator pos:line="77" pos:column="39">==<pos:position pos:line="77" pos:column="41"/></operator> <name pos:line="77" pos:column="42">fname<pos:position pos:line="77" pos:column="47"/></name></expr>)<pos:position pos:line="77" pos:column="48"/></condition><then pos:line="77" pos:column="48">
					<block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="41">dir<pos:position pos:line="78" pos:column="44"/></name> <operator pos:line="78" pos:column="45">=<pos:position pos:line="78" pos:column="46"/></operator> <literal type="string" pos:line="78" pos:column="47">"/"<pos:position pos:line="78" pos:column="50"/></literal></expr>;<pos:position pos:line="78" pos:column="51"/></expr_stmt></block></then>
				<else pos:line="79" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="41">dir<pos:position pos:line="80" pos:column="44"/></name> <operator pos:line="80" pos:column="45">=<pos:position pos:line="80" pos:column="46"/></operator> <name pos:line="80" pos:column="47">fname<pos:position pos:line="80" pos:column="52"/></name></expr>;<pos:position pos:line="80" pos:column="53"/></expr_stmt></block></else></if>
				<expr_stmt><expr><name pos:line="81" pos:column="33">fname<pos:position pos:line="81" pos:column="38"/></name> <operator pos:line="81" pos:column="39">=<pos:position pos:line="81" pos:column="40"/></operator> <name pos:line="81" pos:column="41">p<pos:position pos:line="81" pos:column="42"/></name> <operator pos:line="81" pos:column="43">+<pos:position pos:line="81" pos:column="44"/></operator> <literal type="number" pos:line="81" pos:column="45">1<pos:position pos:line="81" pos:column="46"/></literal></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt>
			}<pos:position pos:line="82" pos:column="26"/></block></then></if>
		}<pos:position pos:line="83" pos:column="18"/></block></then> <elseif pos:line="83" pos:column="19">else <if pos:line="83" pos:column="24">if <condition pos:line="83" pos:column="27">(<expr><name pos:line="83" pos:column="28">f<pos:position pos:line="83" pos:column="29"/></name> <operator pos:line="83" pos:column="30">!=<pos:position pos:line="83" pos:column="32"/></operator> <operator pos:line="83" pos:column="33">-<pos:position pos:line="83" pos:column="34"/></operator><literal type="number" pos:line="83" pos:column="34">1<pos:position pos:line="83" pos:column="35"/></literal> <operator pos:line="83" pos:column="36">&amp;&amp;<pos:position pos:line="83" pos:column="46"/></operator> <name pos:line="83" pos:column="39">implied_dirs<pos:position pos:line="83" pos:column="51"/></name> <operator pos:line="83" pos:column="52">&amp;&amp;<pos:position pos:line="83" pos:column="62"/></operator> <operator pos:line="83" pos:column="55">(<pos:position pos:line="83" pos:column="56"/></operator><name pos:line="83" pos:column="56">p<pos:position pos:line="83" pos:column="57"/></name><operator pos:line="83" pos:column="57">=<pos:position pos:line="83" pos:column="58"/></operator><call><name pos:line="83" pos:column="58">strrchr<pos:position pos:line="83" pos:column="65"/></name><argument_list pos:line="83" pos:column="65">(<argument><expr><name pos:line="83" pos:column="66">fname<pos:position pos:line="83" pos:column="71"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="83" pos:column="72">'/'<pos:position pos:line="83" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="76"/></argument_list></call><operator pos:line="83" pos:column="76">)<pos:position pos:line="83" pos:column="77"/></operator> <operator pos:line="83" pos:column="78">&amp;&amp;<pos:position pos:line="83" pos:column="88"/></operator> <name pos:line="83" pos:column="81">p<pos:position pos:line="83" pos:column="82"/></name> <operator pos:line="83" pos:column="83">!=<pos:position pos:line="83" pos:column="85"/></operator> <name pos:line="83" pos:column="86">fname<pos:position pos:line="83" pos:column="91"/></name></expr>)<pos:position pos:line="83" pos:column="92"/></condition><then pos:line="83" pos:column="92"> <block pos:line="83" pos:column="93">{
			<comment type="block" pos:line="84" pos:column="25">/* this ensures we send the intermediate directories,
			   thus getting their permissions right */</comment>
			<decl_stmt><decl><type><name pos:line="86" pos:column="25">char<pos:position pos:line="86" pos:column="29"/></name> <modifier pos:line="86" pos:column="30">*<pos:position pos:line="86" pos:column="31"/></modifier></type><name pos:line="86" pos:column="31">lp<pos:position pos:line="86" pos:column="33"/></name> <init pos:line="86" pos:column="34">= <expr><name pos:line="86" pos:column="36">lastpath<pos:position pos:line="86" pos:column="44"/></name></expr></init></decl>, <modifier pos:line="86" pos:column="46">*<pos:position pos:line="86" pos:column="47"/></modifier><decl><type ref="prev"/><name pos:line="86" pos:column="47">fn<pos:position pos:line="86" pos:column="49"/></name> <init pos:line="86" pos:column="50">= <expr><name pos:line="86" pos:column="52">fname<pos:position pos:line="86" pos:column="57"/></name></expr></init></decl>, <modifier pos:line="86" pos:column="59">*<pos:position pos:line="86" pos:column="60"/></modifier><decl><type ref="prev"/><name pos:line="86" pos:column="60">slash<pos:position pos:line="86" pos:column="65"/></name> <init pos:line="86" pos:column="66">= <expr><name pos:line="86" pos:column="68">fname<pos:position pos:line="86" pos:column="73"/></name></expr></init></decl>;<pos:position pos:line="86" pos:column="74"/></decl_stmt>
			<expr_stmt><expr><operator pos:line="87" pos:column="25">*<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="26">p<pos:position pos:line="87" pos:column="27"/></name> <operator pos:line="87" pos:column="28">=<pos:position pos:line="87" pos:column="29"/></operator> <literal type="number" pos:line="87" pos:column="30">0<pos:position pos:line="87" pos:column="31"/></literal></expr>;<pos:position pos:line="87" pos:column="32"/></expr_stmt>
			<comment type="block" pos:line="88" pos:column="25">/* Skip any initial directories in our path that we
			 * have in common with lastpath. */</comment>
			<while pos:line="90" pos:column="25">while <condition pos:line="90" pos:column="31">(<expr><operator pos:line="90" pos:column="32">*<pos:position pos:line="90" pos:column="33"/></operator><name pos:line="90" pos:column="33">fn<pos:position pos:line="90" pos:column="35"/></name> <operator pos:line="90" pos:column="36">&amp;&amp;<pos:position pos:line="90" pos:column="46"/></operator> <operator pos:line="90" pos:column="39">*<pos:position pos:line="90" pos:column="40"/></operator><name pos:line="90" pos:column="40">lp<pos:position pos:line="90" pos:column="42"/></name> <operator pos:line="90" pos:column="43">==<pos:position pos:line="90" pos:column="45"/></operator> <operator pos:line="90" pos:column="46">*<pos:position pos:line="90" pos:column="47"/></operator><name pos:line="90" pos:column="47">fn<pos:position pos:line="90" pos:column="49"/></name></expr>)<pos:position pos:line="90" pos:column="50"/></condition> <block pos:line="90" pos:column="51">{
				<if pos:line="91" pos:column="33">if <condition pos:line="91" pos:column="36">(<expr><operator pos:line="91" pos:column="37">*<pos:position pos:line="91" pos:column="38"/></operator><name pos:line="91" pos:column="38">fn<pos:position pos:line="91" pos:column="40"/></name> <operator pos:line="91" pos:column="41">==<pos:position pos:line="91" pos:column="43"/></operator> <literal type="char" pos:line="91" pos:column="44">'/'<pos:position pos:line="91" pos:column="47"/></literal></expr>)<pos:position pos:line="91" pos:column="48"/></condition><then pos:line="91" pos:column="48">
					<block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="41">slash<pos:position pos:line="92" pos:column="46"/></name> <operator pos:line="92" pos:column="47">=<pos:position pos:line="92" pos:column="48"/></operator> <name pos:line="92" pos:column="49">fn<pos:position pos:line="92" pos:column="51"/></name></expr>;<pos:position pos:line="92" pos:column="52"/></expr_stmt></block></then></if>
				<expr_stmt><expr><name pos:line="93" pos:column="33">lp<pos:position pos:line="93" pos:column="35"/></name><operator pos:line="93" pos:column="35">++<pos:position pos:line="93" pos:column="37"/></operator></expr><operator pos:line="93" pos:column="37">,<pos:position pos:line="93" pos:column="38"/></operator> <expr><name pos:line="93" pos:column="39">fn<pos:position pos:line="93" pos:column="41"/></name><operator pos:line="93" pos:column="41">++<pos:position pos:line="93" pos:column="43"/></operator></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt>
			}<pos:position pos:line="94" pos:column="26"/></block></while>
			<expr_stmt><expr><operator pos:line="95" pos:column="25">*<pos:position pos:line="95" pos:column="26"/></operator><name pos:line="95" pos:column="26">p<pos:position pos:line="95" pos:column="27"/></name> <operator pos:line="95" pos:column="28">=<pos:position pos:line="95" pos:column="29"/></operator> <literal type="char" pos:line="95" pos:column="30">'/'<pos:position pos:line="95" pos:column="33"/></literal></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
			<if pos:line="96" pos:column="25">if <condition pos:line="96" pos:column="28">(<expr><name pos:line="96" pos:column="29">fn<pos:position pos:line="96" pos:column="31"/></name> <operator pos:line="96" pos:column="32">!=<pos:position pos:line="96" pos:column="34"/></operator> <name pos:line="96" pos:column="35">p<pos:position pos:line="96" pos:column="36"/></name> <operator pos:line="96" pos:column="37">||<pos:position pos:line="96" pos:column="39"/></operator> <operator pos:line="96" pos:column="40">(<pos:position pos:line="96" pos:column="41"/></operator><operator pos:line="96" pos:column="41">*<pos:position pos:line="96" pos:column="42"/></operator><name pos:line="96" pos:column="42">lp<pos:position pos:line="96" pos:column="44"/></name> <operator pos:line="96" pos:column="45">&amp;&amp;<pos:position pos:line="96" pos:column="55"/></operator> <operator pos:line="96" pos:column="48">*<pos:position pos:line="96" pos:column="49"/></operator><name pos:line="96" pos:column="49">lp<pos:position pos:line="96" pos:column="51"/></name> <operator pos:line="96" pos:column="52">!=<pos:position pos:line="96" pos:column="54"/></operator> <literal type="char" pos:line="96" pos:column="55">'/'<pos:position pos:line="96" pos:column="58"/></literal><operator pos:line="96" pos:column="58">)<pos:position pos:line="96" pos:column="59"/></operator></expr>)<pos:position pos:line="96" pos:column="60"/></condition><then pos:line="96" pos:column="60"> <block pos:line="96" pos:column="61">{
				<decl_stmt><decl><type><name pos:line="97" pos:column="33">int<pos:position pos:line="97" pos:column="36"/></name></type> <name pos:line="97" pos:column="37">copy_links_saved<pos:position pos:line="97" pos:column="53"/></name> <init pos:line="97" pos:column="54">= <expr><name pos:line="97" pos:column="56">copy_links<pos:position pos:line="97" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="97" pos:column="67"/></decl_stmt>
				<decl_stmt><decl><type><name pos:line="98" pos:column="33">int<pos:position pos:line="98" pos:column="36"/></name></type> <name pos:line="98" pos:column="37">recurse_saved<pos:position pos:line="98" pos:column="50"/></name> <init pos:line="98" pos:column="51">= <expr><name pos:line="98" pos:column="53">recurse<pos:position pos:line="98" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="98" pos:column="61"/></decl_stmt>
				<expr_stmt><expr><name pos:line="99" pos:column="33">copy_links<pos:position pos:line="99" pos:column="43"/></name> <operator pos:line="99" pos:column="44">=<pos:position pos:line="99" pos:column="45"/></operator> <name pos:line="99" pos:column="46">copy_unsafe_links<pos:position pos:line="99" pos:column="63"/></name></expr>;<pos:position pos:line="99" pos:column="64"/></expr_stmt>
				<comment type="block" pos:line="100" pos:column="33">/* set recurse to 1 to prevent make_file
				 * from ignoring directory, but still
				 * turn off the recursive parameter to
				 * send_file_name */</comment>
				<expr_stmt><expr><name pos:line="104" pos:column="33">recurse<pos:position pos:line="104" pos:column="40"/></name> <operator pos:line="104" pos:column="41">=<pos:position pos:line="104" pos:column="42"/></operator> <literal type="number" pos:line="104" pos:column="43">1<pos:position pos:line="104" pos:column="44"/></literal></expr>;<pos:position pos:line="104" pos:column="45"/></expr_stmt>
				<while pos:line="105" pos:column="33">while <condition pos:line="105" pos:column="39">(<expr><operator pos:line="105" pos:column="40">(<pos:position pos:line="105" pos:column="41"/></operator><name pos:line="105" pos:column="41">slash<pos:position pos:line="105" pos:column="46"/></name> <operator pos:line="105" pos:column="47">=<pos:position pos:line="105" pos:column="48"/></operator> <call><name pos:line="105" pos:column="49">strchr<pos:position pos:line="105" pos:column="55"/></name><argument_list pos:line="105" pos:column="55">(<argument><expr><name pos:line="105" pos:column="56">slash<pos:position pos:line="105" pos:column="61"/></name><operator pos:line="105" pos:column="61">+<pos:position pos:line="105" pos:column="62"/></operator><literal type="number" pos:line="105" pos:column="62">1<pos:position pos:line="105" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="105" pos:column="65">'/'<pos:position pos:line="105" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="69"/></argument_list></call><operator pos:line="105" pos:column="69">)<pos:position pos:line="105" pos:column="70"/></operator> <operator pos:line="105" pos:column="71">!=<pos:position pos:line="105" pos:column="73"/></operator> <literal type="number" pos:line="105" pos:column="74">0<pos:position pos:line="105" pos:column="75"/></literal></expr>)<pos:position pos:line="105" pos:column="76"/></condition> <block pos:line="105" pos:column="77">{
					<expr_stmt><expr><operator pos:line="106" pos:column="41">*<pos:position pos:line="106" pos:column="42"/></operator><name pos:line="106" pos:column="42">slash<pos:position pos:line="106" pos:column="47"/></name> <operator pos:line="106" pos:column="48">=<pos:position pos:line="106" pos:column="49"/></operator> <literal type="number" pos:line="106" pos:column="50">0<pos:position pos:line="106" pos:column="51"/></literal></expr>;<pos:position pos:line="106" pos:column="52"/></expr_stmt>
					<expr_stmt><expr><call><name pos:line="107" pos:column="41">send_file_name<pos:position pos:line="107" pos:column="55"/></name><argument_list pos:line="107" pos:column="55">(<argument><expr><name pos:line="107" pos:column="56">f<pos:position pos:line="107" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="59">flist<pos:position pos:line="107" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="66">fname<pos:position pos:line="107" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="73">0<pos:position pos:line="107" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="76">0<pos:position pos:line="107" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="79"/></expr_stmt>
					<expr_stmt><expr><operator pos:line="108" pos:column="41">*<pos:position pos:line="108" pos:column="42"/></operator><name pos:line="108" pos:column="42">slash<pos:position pos:line="108" pos:column="47"/></name> <operator pos:line="108" pos:column="48">=<pos:position pos:line="108" pos:column="49"/></operator> <literal type="char" pos:line="108" pos:column="50">'/'<pos:position pos:line="108" pos:column="53"/></literal></expr>;<pos:position pos:line="108" pos:column="54"/></expr_stmt>
				}<pos:position pos:line="109" pos:column="34"/></block></while>
				<expr_stmt><expr><name pos:line="110" pos:column="33">copy_links<pos:position pos:line="110" pos:column="43"/></name> <operator pos:line="110" pos:column="44">=<pos:position pos:line="110" pos:column="45"/></operator> <name pos:line="110" pos:column="46">copy_links_saved<pos:position pos:line="110" pos:column="62"/></name></expr>;<pos:position pos:line="110" pos:column="63"/></expr_stmt>
				<expr_stmt><expr><name pos:line="111" pos:column="33">recurse<pos:position pos:line="111" pos:column="40"/></name> <operator pos:line="111" pos:column="41">=<pos:position pos:line="111" pos:column="42"/></operator> <name pos:line="111" pos:column="43">recurse_saved<pos:position pos:line="111" pos:column="56"/></name></expr>;<pos:position pos:line="111" pos:column="57"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="112" pos:column="33">*<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">p<pos:position pos:line="112" pos:column="35"/></name> <operator pos:line="112" pos:column="36">=<pos:position pos:line="112" pos:column="37"/></operator> <literal type="number" pos:line="112" pos:column="38">0<pos:position pos:line="112" pos:column="39"/></literal></expr>;<pos:position pos:line="112" pos:column="40"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="113" pos:column="33">strlcpy<pos:position pos:line="113" pos:column="40"/></name><argument_list pos:line="113" pos:column="40">(<argument><expr><name pos:line="113" pos:column="41">lastpath<pos:position pos:line="113" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="51">fname<pos:position pos:line="113" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="58">sizeof <name pos:line="113" pos:column="65">lastpath<pos:position pos:line="113" pos:column="73"/></name></sizeof></expr></argument>)<pos:position pos:line="113" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="114" pos:column="33">*<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="34">p<pos:position pos:line="114" pos:column="35"/></name> <operator pos:line="114" pos:column="36">=<pos:position pos:line="114" pos:column="37"/></operator> <literal type="char" pos:line="114" pos:column="38">'/'<pos:position pos:line="114" pos:column="41"/></literal></expr>;<pos:position pos:line="114" pos:column="42"/></expr_stmt>
			}<pos:position pos:line="115" pos:column="26"/></block></then></if>
		}<pos:position pos:line="116" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><operator pos:line="118" pos:column="21">!<pos:position pos:line="118" pos:column="22"/></operator><operator pos:line="118" pos:column="22">*<pos:position pos:line="118" pos:column="23"/></operator><name pos:line="118" pos:column="23">fname<pos:position pos:line="118" pos:column="28"/></name></expr>)<pos:position pos:line="118" pos:column="29"/></condition><then pos:line="118" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name pos:line="119" pos:column="25">fname<pos:position pos:line="119" pos:column="30"/></name> <operator pos:line="119" pos:column="31">=<pos:position pos:line="119" pos:column="32"/></operator> <literal type="string" pos:line="119" pos:column="33">"."<pos:position pos:line="119" pos:column="36"/></literal></expr>;<pos:position pos:line="119" pos:column="37"/></expr_stmt></block></then></if>

		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name pos:line="121" pos:column="21">dir<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">&amp;&amp;<pos:position pos:line="121" pos:column="35"/></operator> <operator pos:line="121" pos:column="28">*<pos:position pos:line="121" pos:column="29"/></operator><name pos:line="121" pos:column="29">dir<pos:position pos:line="121" pos:column="32"/></name></expr>)<pos:position pos:line="121" pos:column="33"/></condition><then pos:line="121" pos:column="33"> <block pos:line="121" pos:column="34">{
			<expr_stmt><expr><name pos:line="122" pos:column="25">olddir<pos:position pos:line="122" pos:column="31"/></name> <operator pos:line="122" pos:column="32">=<pos:position pos:line="122" pos:column="33"/></operator> <call><name pos:line="122" pos:column="34">push_dir<pos:position pos:line="122" pos:column="42"/></name><argument_list pos:line="122" pos:column="42">(<argument><expr><name pos:line="122" pos:column="43">dir<pos:position pos:line="122" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="48">1<pos:position pos:line="122" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="51"/></expr_stmt>

			<if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><operator pos:line="124" pos:column="29">!<pos:position pos:line="124" pos:column="30"/></operator><name pos:line="124" pos:column="30">olddir<pos:position pos:line="124" pos:column="36"/></name></expr>)<pos:position pos:line="124" pos:column="37"/></condition><then pos:line="124" pos:column="37"> <block pos:line="124" pos:column="38">{
				<expr_stmt><expr><name pos:line="125" pos:column="33">io_error<pos:position pos:line="125" pos:column="41"/></name> <operator pos:line="125" pos:column="42">|=<pos:position pos:line="125" pos:column="44"/></operator> <name pos:line="125" pos:column="45">IOERR_GENERAL<pos:position pos:line="125" pos:column="58"/></name></expr>;<pos:position pos:line="125" pos:column="59"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="126" pos:column="33">rprintf<pos:position pos:line="126" pos:column="40"/></name><argument_list pos:line="126" pos:column="40">(<argument><expr><name pos:line="126" pos:column="41">FERROR<pos:position pos:line="126" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="49">"push_dir %s failed: %s\n"<pos:position pos:line="126" pos:column="75"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="127" pos:column="41">full_fname<pos:position pos:line="127" pos:column="51"/></name><argument_list pos:line="127" pos:column="51">(<argument><expr><name pos:line="127" pos:column="52">dir<pos:position pos:line="127" pos:column="55"/></name></expr></argument>)<pos:position pos:line="127" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="127" pos:column="58">strerror<pos:position pos:line="127" pos:column="66"/></name><argument_list pos:line="127" pos:column="66">(<argument><expr><name pos:line="127" pos:column="67">errno<pos:position pos:line="127" pos:column="72"/></name></expr></argument>)<pos:position pos:line="127" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="75"/></expr_stmt>
				<continue pos:line="128" pos:column="33">continue;<pos:position pos:line="128" pos:column="42"/></continue>
			}<pos:position pos:line="129" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="131" pos:column="25">flist_dir<pos:position pos:line="131" pos:column="34"/></name> <operator pos:line="131" pos:column="35">=<pos:position pos:line="131" pos:column="36"/></operator> <name pos:line="131" pos:column="37">dir<pos:position pos:line="131" pos:column="40"/></name></expr>;<pos:position pos:line="131" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="132" pos:column="18"/></block></then></if>

		<if pos:line="134" pos:column="17">if <condition pos:line="134" pos:column="20">(<expr><name pos:line="134" pos:column="21">one_file_system<pos:position pos:line="134" pos:column="36"/></name></expr>)<pos:position pos:line="134" pos:column="37"/></condition><then pos:line="134" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="135" pos:column="25">set_filesystem<pos:position pos:line="135" pos:column="39"/></name><argument_list pos:line="135" pos:column="39">(<argument><expr><name pos:line="135" pos:column="40">fname<pos:position pos:line="135" pos:column="45"/></name></expr></argument>)<pos:position pos:line="135" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="47"/></expr_stmt></block></then></if>

		<expr_stmt><expr><call><name pos:line="137" pos:column="17">send_file_name<pos:position pos:line="137" pos:column="31"/></name><argument_list pos:line="137" pos:column="31">(<argument><expr><name pos:line="137" pos:column="32">f<pos:position pos:line="137" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="35">flist<pos:position pos:line="137" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="42">fname<pos:position pos:line="137" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="49">recurse<pos:position pos:line="137" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="58">FLAG_DELETE<pos:position pos:line="137" pos:column="69"/></name></expr></argument>)<pos:position pos:line="137" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="71"/></expr_stmt>

		<if pos:line="139" pos:column="17">if <condition pos:line="139" pos:column="20">(<expr><name pos:line="139" pos:column="21">olddir<pos:position pos:line="139" pos:column="27"/></name> <operator pos:line="139" pos:column="28">!=<pos:position pos:line="139" pos:column="30"/></operator> <name pos:line="139" pos:column="31">NULL<pos:position pos:line="139" pos:column="35"/></name></expr>)<pos:position pos:line="139" pos:column="36"/></condition><then pos:line="139" pos:column="36"> <block pos:line="139" pos:column="37">{
			<expr_stmt><expr><name pos:line="140" pos:column="25">flist_dir<pos:position pos:line="140" pos:column="34"/></name> <operator pos:line="140" pos:column="35">=<pos:position pos:line="140" pos:column="36"/></operator> <name pos:line="140" pos:column="37">NULL<pos:position pos:line="140" pos:column="41"/></name></expr>;<pos:position pos:line="140" pos:column="42"/></expr_stmt>
			<if pos:line="141" pos:column="25">if <condition pos:line="141" pos:column="28">(<expr><call><name pos:line="141" pos:column="29">pop_dir<pos:position pos:line="141" pos:column="36"/></name><argument_list pos:line="141" pos:column="36">(<argument><expr><name pos:line="141" pos:column="37">olddir<pos:position pos:line="141" pos:column="43"/></name></expr></argument>)<pos:position pos:line="141" pos:column="44"/></argument_list></call> <operator pos:line="141" pos:column="45">!=<pos:position pos:line="141" pos:column="47"/></operator> <literal type="number" pos:line="141" pos:column="48">0<pos:position pos:line="141" pos:column="49"/></literal></expr>)<pos:position pos:line="141" pos:column="50"/></condition><then pos:line="141" pos:column="50"> <block pos:line="141" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="142" pos:column="33">rprintf<pos:position pos:line="142" pos:column="40"/></name><argument_list pos:line="142" pos:column="40">(<argument><expr><name pos:line="142" pos:column="41">FERROR<pos:position pos:line="142" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="49">"pop_dir %s failed: %s\n"<pos:position pos:line="142" pos:column="74"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="143" pos:column="41">full_fname<pos:position pos:line="143" pos:column="51"/></name><argument_list pos:line="143" pos:column="51">(<argument><expr><name pos:line="143" pos:column="52">dir<pos:position pos:line="143" pos:column="55"/></name></expr></argument>)<pos:position pos:line="143" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="143" pos:column="58">strerror<pos:position pos:line="143" pos:column="66"/></name><argument_list pos:line="143" pos:column="66">(<argument><expr><name pos:line="143" pos:column="67">errno<pos:position pos:line="143" pos:column="72"/></name></expr></argument>)<pos:position pos:line="143" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="143" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="75"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="144" pos:column="33">exit_cleanup<pos:position pos:line="144" pos:column="45"/></name><argument_list pos:line="144" pos:column="45">(<argument><expr><name pos:line="144" pos:column="46">RERR_FILESELECT<pos:position pos:line="144" pos:column="61"/></name></expr></argument>)<pos:position pos:line="144" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="145" pos:column="26"/></block></then></if>
		}<pos:position pos:line="146" pos:column="18"/></block></then></if>
	}<pos:position pos:line="147" pos:column="10"/></block></while>

	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">f<pos:position pos:line="149" pos:column="14"/></name> <operator pos:line="149" pos:column="15">!=<pos:position pos:line="149" pos:column="17"/></operator> <operator pos:line="149" pos:column="18">-<pos:position pos:line="149" pos:column="19"/></operator><literal type="number" pos:line="149" pos:column="19">1<pos:position pos:line="149" pos:column="20"/></literal></expr>)<pos:position pos:line="149" pos:column="21"/></condition><then pos:line="149" pos:column="21"> <block pos:line="149" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="150" pos:column="17">send_file_entry<pos:position pos:line="150" pos:column="32"/></name><argument_list pos:line="150" pos:column="32">(<argument><expr><name pos:line="150" pos:column="33">NULL<pos:position pos:line="150" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="39">f<pos:position pos:line="150" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="42">0<pos:position pos:line="150" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="151" pos:column="10"/></block></then></if>

	<if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><call><name pos:line="153" pos:column="13">show_filelist_p<pos:position pos:line="153" pos:column="28"/></name><argument_list pos:line="153" pos:column="28">()<pos:position pos:line="153" pos:column="30"/></argument_list></call> <operator pos:line="153" pos:column="31">&amp;&amp;<pos:position pos:line="153" pos:column="41"/></operator> <name pos:line="153" pos:column="34">f<pos:position pos:line="153" pos:column="35"/></name> <operator pos:line="153" pos:column="36">!=<pos:position pos:line="153" pos:column="38"/></operator> <operator pos:line="153" pos:column="39">-<pos:position pos:line="153" pos:column="40"/></operator><literal type="number" pos:line="153" pos:column="40">1<pos:position pos:line="153" pos:column="41"/></literal></expr>)<pos:position pos:line="153" pos:column="42"/></condition><then pos:line="153" pos:column="42"> <block pos:line="153" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="154" pos:column="17">finish_filelist_progress<pos:position pos:line="154" pos:column="41"/></name><argument_list pos:line="154" pos:column="41">(<argument><expr><name pos:line="154" pos:column="42">flist<pos:position pos:line="154" pos:column="47"/></name></expr></argument>)<pos:position pos:line="154" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="155" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="157" pos:column="9">clean_flist<pos:position pos:line="157" pos:column="20"/></name><argument_list pos:line="157" pos:column="20">(<argument><expr><name pos:line="157" pos:column="21">flist<pos:position pos:line="157" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="28">0<pos:position pos:line="157" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="31">0<pos:position pos:line="157" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="34"/></expr_stmt>

	<comment type="block" pos:line="159" pos:column="9">/* now send the uid/gid list. This was introduced in protocol
	   version 15 */</comment>
	<if pos:line="161" pos:column="9">if <condition pos:line="161" pos:column="12">(<expr><name pos:line="161" pos:column="13">f<pos:position pos:line="161" pos:column="14"/></name> <operator pos:line="161" pos:column="15">!=<pos:position pos:line="161" pos:column="17"/></operator> <operator pos:line="161" pos:column="18">-<pos:position pos:line="161" pos:column="19"/></operator><literal type="number" pos:line="161" pos:column="19">1<pos:position pos:line="161" pos:column="20"/></literal></expr>)<pos:position pos:line="161" pos:column="21"/></condition><then pos:line="161" pos:column="21"> <block pos:line="161" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="162" pos:column="17">send_uid_list<pos:position pos:line="162" pos:column="30"/></name><argument_list pos:line="162" pos:column="30">(<argument><expr><name pos:line="162" pos:column="31">f<pos:position pos:line="162" pos:column="32"/></name></expr></argument>)<pos:position pos:line="162" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="163" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="165" pos:column="9">/* send the io_error flag */</comment>
	<if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name pos:line="166" pos:column="13">f<pos:position pos:line="166" pos:column="14"/></name> <operator pos:line="166" pos:column="15">!=<pos:position pos:line="166" pos:column="17"/></operator> <operator pos:line="166" pos:column="18">-<pos:position pos:line="166" pos:column="19"/></operator><literal type="number" pos:line="166" pos:column="19">1<pos:position pos:line="166" pos:column="20"/></literal></expr>)<pos:position pos:line="166" pos:column="21"/></condition><then pos:line="166" pos:column="21"> <block pos:line="166" pos:column="22">{
		<decl_stmt><decl><specifier pos:line="167" pos:column="17">extern<pos:position pos:line="167" pos:column="23"/></specifier> <type><name pos:line="167" pos:column="24">int<pos:position pos:line="167" pos:column="27"/></name></type> <name pos:line="167" pos:column="28">module_id<pos:position pos:line="167" pos:column="37"/></name></decl>;<pos:position pos:line="167" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="168" pos:column="17">write_int<pos:position pos:line="168" pos:column="26"/></name><argument_list pos:line="168" pos:column="26">(<argument><expr><name pos:line="168" pos:column="27">f<pos:position pos:line="168" pos:column="28"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="168" pos:column="30">lp_ignore_errors<pos:position pos:line="168" pos:column="46"/></name><argument_list pos:line="168" pos:column="46">(<argument><expr><name pos:line="168" pos:column="47">module_id<pos:position pos:line="168" pos:column="56"/></name></expr></argument>)<pos:position pos:line="168" pos:column="57"/></argument_list></call></expr> ?<pos:position pos:line="168" pos:column="59"/></condition><then pos:line="168" pos:column="59"> <expr><literal type="number" pos:line="168" pos:column="60">0<pos:position pos:line="168" pos:column="61"/></literal></expr> <pos:position pos:line="168" pos:column="62"/></then><else pos:line="168" pos:column="62">: <expr><name pos:line="168" pos:column="64">io_error<pos:position pos:line="168" pos:column="72"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="168" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="74"/></expr_stmt>
	}<pos:position pos:line="169" pos:column="10"/></block></then></if>

	<if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><name pos:line="171" pos:column="13">f<pos:position pos:line="171" pos:column="14"/></name> <operator pos:line="171" pos:column="15">!=<pos:position pos:line="171" pos:column="17"/></operator> <operator pos:line="171" pos:column="18">-<pos:position pos:line="171" pos:column="19"/></operator><literal type="number" pos:line="171" pos:column="19">1<pos:position pos:line="171" pos:column="20"/></literal></expr>)<pos:position pos:line="171" pos:column="21"/></condition><then pos:line="171" pos:column="21"> <block pos:line="171" pos:column="22">{
		<expr_stmt><expr><call><name pos:line="172" pos:column="17">io_end_buffering<pos:position pos:line="172" pos:column="33"/></name><argument_list pos:line="172" pos:column="33">()<pos:position pos:line="172" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="173" pos:column="17">stats<pos:position pos:line="173" pos:column="22"/></name><operator pos:line="173" pos:column="22">.<pos:position pos:line="173" pos:column="23"/></operator><name pos:line="173" pos:column="23">flist_size<pos:position pos:line="173" pos:column="33"/></name></name> <operator pos:line="173" pos:column="34">=<pos:position pos:line="173" pos:column="35"/></operator> <name><name pos:line="173" pos:column="36">stats<pos:position pos:line="173" pos:column="41"/></name><operator pos:line="173" pos:column="41">.<pos:position pos:line="173" pos:column="42"/></operator><name pos:line="173" pos:column="42">total_written<pos:position pos:line="173" pos:column="55"/></name></name> <operator pos:line="173" pos:column="56">-<pos:position pos:line="173" pos:column="57"/></operator> <name pos:line="173" pos:column="58">start_write<pos:position pos:line="173" pos:column="69"/></name></expr>;<pos:position pos:line="173" pos:column="70"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="174" pos:column="17">stats<pos:position pos:line="174" pos:column="22"/></name><operator pos:line="174" pos:column="22">.<pos:position pos:line="174" pos:column="23"/></operator><name pos:line="174" pos:column="23">num_files<pos:position pos:line="174" pos:column="32"/></name></name> <operator pos:line="174" pos:column="33">=<pos:position pos:line="174" pos:column="34"/></operator> <name><name pos:line="174" pos:column="35">flist<pos:position pos:line="174" pos:column="40"/></name><operator pos:line="174" pos:column="40">-&gt;<pos:position pos:line="174" pos:column="45"/></operator><name pos:line="174" pos:column="42">count<pos:position pos:line="174" pos:column="47"/></name></name></expr>;<pos:position pos:line="174" pos:column="48"/></expr_stmt>
		<if pos:line="175" pos:column="17">if <condition pos:line="175" pos:column="20">(<expr><name pos:line="175" pos:column="21">write_batch<pos:position pos:line="175" pos:column="32"/></name></expr>)<pos:position pos:line="175" pos:column="33"/></condition><then pos:line="175" pos:column="33">	<comment type="block" pos:line="175" pos:column="41">/*  dw  */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="176" pos:column="25">write_batch_flist_info<pos:position pos:line="176" pos:column="47"/></name><argument_list pos:line="176" pos:column="47">(<argument><expr><name><name pos:line="176" pos:column="48">flist<pos:position pos:line="176" pos:column="53"/></name><operator pos:line="176" pos:column="53">-&gt;<pos:position pos:line="176" pos:column="58"/></operator><name pos:line="176" pos:column="55">count<pos:position pos:line="176" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="62">flist<pos:position pos:line="176" pos:column="67"/></name><operator pos:line="176" pos:column="67">-&gt;<pos:position pos:line="176" pos:column="72"/></operator><name pos:line="176" pos:column="69">files<pos:position pos:line="176" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="176" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="76"/></expr_stmt></block></then></if>
	}<pos:position pos:line="177" pos:column="10"/></block></then></if>

	<if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">verbose<pos:position pos:line="179" pos:column="20"/></name> <operator pos:line="179" pos:column="21">&gt;<pos:position pos:line="179" pos:column="25"/></operator> <literal type="number" pos:line="179" pos:column="23">2<pos:position pos:line="179" pos:column="24"/></literal></expr>)<pos:position pos:line="179" pos:column="25"/></condition><then pos:line="179" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="180" pos:column="17">rprintf<pos:position pos:line="180" pos:column="24"/></name><argument_list pos:line="180" pos:column="24">(<argument><expr><name pos:line="180" pos:column="25">FINFO<pos:position pos:line="180" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="180" pos:column="32">"send_file_list done\n"<pos:position pos:line="180" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="180" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="57"/></expr_stmt></block></then></if>

	<return pos:line="182" pos:column="9">return <expr><name pos:line="182" pos:column="16">flist<pos:position pos:line="182" pos:column="21"/></name></expr>;<pos:position pos:line="182" pos:column="22"/></return>
}<pos:position pos:line="183" pos:column="2"/></block></function></unit>

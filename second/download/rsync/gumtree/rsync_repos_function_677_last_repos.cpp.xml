<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_677_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">deflateInit2_<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">strm<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">level<pos:position pos:line="1" pos:column="38"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">method<pos:position pos:line="1" pos:column="46"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">windowBits<pos:position pos:line="1" pos:column="58"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">memLevel<pos:position pos:line="1" pos:column="68"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="70">strategy<pos:position pos:line="1" pos:column="78"/></name></type></decl></parameter>,
                  <parameter><decl><type><name pos:line="2" pos:column="19">version<pos:position pos:line="2" pos:column="26"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">stream_size<pos:position pos:line="2" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">z_streamp<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">strm<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type>  <name pos:line="4" pos:column="10">level<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type>  <name pos:line="5" pos:column="10">method<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type>  <name pos:line="6" pos:column="10">windowBits<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type>  <name pos:line="7" pos:column="10">memLevel<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type>  <name pos:line="8" pos:column="10">strategy<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">version<pos:position pos:line="9" pos:column="24"/></name></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">stream_size<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
<block pos:line="11" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">deflate_state<pos:position pos:line="12" pos:column="18"/></name> <modifier pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></modifier></type><name pos:line="12" pos:column="20">s<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">wrap<pos:position pos:line="13" pos:column="13"/></name> <init pos:line="13" pos:column="14">= <expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="14" pos:column="5">static<pos:position pos:line="14" pos:column="11"/></specifier> <type><specifier pos:line="14" pos:column="12">const<pos:position pos:line="14" pos:column="17"/></specifier> <name pos:line="14" pos:column="18">char<pos:position pos:line="14" pos:column="22"/></name></type> <name><name pos:line="14" pos:column="23">my_version<pos:position pos:line="14" pos:column="33"/></name><index pos:line="14" pos:column="33">[]<pos:position pos:line="14" pos:column="35"/></index></name> <init pos:line="14" pos:column="36">= <expr><name pos:line="14" pos:column="38">ZLIB_VERSION<pos:position pos:line="14" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="51"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">ushf<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier></type><name pos:line="16" pos:column="11">overlay<pos:position pos:line="16" pos:column="18"/></name></decl>;<pos:position pos:line="16" pos:column="19"/></decl_stmt>
    <comment type="block" pos:line="17" pos:column="5">/* We overlay pending_buf and d_buf+l_buf. This works since the average
     * output size for (length,distance) codes is &lt;= 24 bits.
     */</comment>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">version<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">==<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">Z_NULL<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">||<pos:position pos:line="21" pos:column="29"/></operator> <name><name pos:line="21" pos:column="30">version<pos:position pos:line="21" pos:column="37"/></name><index pos:line="21" pos:column="37">[<expr><literal type="number" pos:line="21" pos:column="38">0<pos:position pos:line="21" pos:column="39"/></literal></expr>]<pos:position pos:line="21" pos:column="40"/></index></name> <operator pos:line="21" pos:column="41">!=<pos:position pos:line="21" pos:column="43"/></operator> <name><name pos:line="21" pos:column="44">my_version<pos:position pos:line="21" pos:column="54"/></name><index pos:line="21" pos:column="54">[<expr><literal type="number" pos:line="21" pos:column="55">0<pos:position pos:line="21" pos:column="56"/></literal></expr>]<pos:position pos:line="21" pos:column="57"/></index></name> <operator pos:line="21" pos:column="58">||<pos:position pos:line="21" pos:column="60"/></operator>
        <name pos:line="22" pos:column="9">stream_size<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">!=<pos:position pos:line="22" pos:column="23"/></operator> <sizeof pos:line="22" pos:column="24">sizeof<argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">z_stream<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></sizeof></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">Z_VERSION_ERROR<pos:position pos:line="23" pos:column="31"/></name></expr>;<pos:position pos:line="23" pos:column="32"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">strm<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">==<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">Z_NULL<pos:position pos:line="25" pos:column="23"/></name></expr>)<pos:position pos:line="25" pos:column="24"/></condition><then pos:line="25" pos:column="24"> <block type="pseudo"><return pos:line="25" pos:column="25">return <expr><name pos:line="25" pos:column="32">Z_STREAM_ERROR<pos:position pos:line="25" pos:column="46"/></name></expr>;<pos:position pos:line="25" pos:column="47"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">strm<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">msg<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">Z_NULL<pos:position pos:line="27" pos:column="23"/></name></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">strm<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">zalloc<pos:position pos:line="28" pos:column="21"/></name></name> <operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator> <operator pos:line="28" pos:column="25">(<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="26">alloc_func<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator><literal type="number" pos:line="28" pos:column="37">0<pos:position pos:line="28" pos:column="38"/></literal></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">Z_SOLO<pos:position pos:line="29" pos:column="14"/></name></cpp:ifdef>
        <return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">Z_STREAM_ERROR<pos:position pos:line="30" pos:column="30"/></name></expr>;<pos:position pos:line="30" pos:column="31"/></return>
<cpp:else pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">else<pos:position pos:line="31" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">strm<pos:position pos:line="32" pos:column="13"/></name><operator pos:line="32" pos:column="13">-&gt;<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="15">zalloc<pos:position pos:line="32" pos:column="21"/></name></name> <operator pos:line="32" pos:column="22">=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">zcalloc<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">strm<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">-&gt;<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="15">opaque<pos:position pos:line="33" pos:column="21"/></name></name> <operator pos:line="33" pos:column="22">=<pos:position pos:line="33" pos:column="23"/></operator> <operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">voidpf<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">)<pos:position pos:line="33" pos:column="32"/></operator><literal type="number" pos:line="33" pos:column="32">0<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">strm<pos:position pos:line="36" pos:column="13"/></name><operator pos:line="36" pos:column="13">-&gt;<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="15">zfree<pos:position pos:line="36" pos:column="20"/></name></name> <operator pos:line="36" pos:column="21">==<pos:position pos:line="36" pos:column="23"/></operator> <operator pos:line="36" pos:column="24">(<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="25">free_func<pos:position pos:line="36" pos:column="34"/></name><operator pos:line="36" pos:column="34">)<pos:position pos:line="36" pos:column="35"/></operator><literal type="number" pos:line="36" pos:column="35">0<pos:position pos:line="36" pos:column="36"/></literal></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37">
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">Z_SOLO<pos:position pos:line="37" pos:column="14"/></name></cpp:ifdef>
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">Z_STREAM_ERROR<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></return></block></then></if>
<cpp:else pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">else<pos:position pos:line="39" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">strm<pos:position pos:line="40" pos:column="13"/></name><operator pos:line="40" pos:column="13">-&gt;<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="15">zfree<pos:position pos:line="40" pos:column="20"/></name></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">zcfree<pos:position pos:line="40" pos:column="29"/></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">FASTEST<pos:position pos:line="43" pos:column="15"/></name></cpp:ifdef>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">level<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">!=<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="21">level<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <literal type="number" pos:line="44" pos:column="29">1<pos:position pos:line="44" pos:column="30"/></literal></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt></block></then></if>
<cpp:else pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">else<pos:position pos:line="45" pos:column="6"/></cpp:directive></cpp:else>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">level<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">==<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">Z_DEFAULT_COMPRESSION<pos:position pos:line="46" pos:column="39"/></name></expr>)<pos:position pos:line="46" pos:column="40"/></condition><then pos:line="46" pos:column="40"> <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="41">level<pos:position pos:line="46" pos:column="46"/></name> <operator pos:line="46" pos:column="47">=<pos:position pos:line="46" pos:column="48"/></operator> <literal type="number" pos:line="46" pos:column="49">6<pos:position pos:line="46" pos:column="50"/></literal></expr>;<pos:position pos:line="46" pos:column="51"/></expr_stmt></block></then></if>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif<pos:position pos:line="47" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">windowBits<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">&lt;<pos:position pos:line="49" pos:column="24"/></operator> <literal type="number" pos:line="49" pos:column="22">0<pos:position pos:line="49" pos:column="23"/></literal></expr>)<pos:position pos:line="49" pos:column="24"/></condition><then pos:line="49" pos:column="24"> <block pos:line="49" pos:column="25">{ <comment type="block" pos:line="49" pos:column="27">/* suppress zlib wrapper */</comment>
        <expr_stmt><expr><name pos:line="50" pos:column="9">wrap<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <literal type="number" pos:line="50" pos:column="16">0<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">windowBits<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <operator pos:line="51" pos:column="22">-<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="23">windowBits<pos:position pos:line="51" pos:column="33"/></name></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then>
<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">GZIP<pos:position pos:line="53" pos:column="12"/></name></cpp:ifdef>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><name pos:line="54" pos:column="14">windowBits<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">&gt;<pos:position pos:line="54" pos:column="29"/></operator> <literal type="number" pos:line="54" pos:column="27">15<pos:position pos:line="54" pos:column="29"/></literal></expr>)<pos:position pos:line="54" pos:column="30"/></condition><then pos:line="54" pos:column="30"> <block pos:line="54" pos:column="31">{
        <expr_stmt><expr><name pos:line="55" pos:column="9">wrap<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <literal type="number" pos:line="55" pos:column="16">2<pos:position pos:line="55" pos:column="17"/></literal></expr>;<pos:position pos:line="55" pos:column="18"/></expr_stmt>       <comment type="block" pos:line="55" pos:column="25">/* write gzip wrapper instead */</comment>
        <expr_stmt><expr><name pos:line="56" pos:column="9">windowBits<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">-=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="number" pos:line="56" pos:column="23">16<pos:position pos:line="56" pos:column="25"/></literal></expr>;<pos:position pos:line="56" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif></if>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">memLevel<pos:position pos:line="59" pos:column="17"/></name> <argument_list type="generic" pos:line="59" pos:column="18">&lt; <argument><expr><literal type="number" pos:line="59" pos:column="20">1<pos:position pos:line="59" pos:column="21"/></literal> <operator pos:line="59" pos:column="22">||<pos:position pos:line="59" pos:column="24"/></operator> <name pos:line="59" pos:column="25">memLevel<pos:position pos:line="59" pos:column="33"/></name></expr></argument> &gt;<pos:position pos:line="59" pos:column="38"/></argument_list></name> <name pos:line="59" pos:column="36">MAX_MEM_LEVEL<pos:position pos:line="59" pos:column="49"/></name> <operator pos:line="59" pos:column="50">||<pos:position pos:line="59" pos:column="52"/></operator> <name pos:line="59" pos:column="53">method<pos:position pos:line="59" pos:column="59"/></name> <operator pos:line="59" pos:column="60">!=<pos:position pos:line="59" pos:column="62"/></operator> <name pos:line="59" pos:column="63">Z_DEFLATED<pos:position pos:line="59" pos:column="73"/></name> <operator pos:line="59" pos:column="74">||<pos:position pos:line="59" pos:column="76"/></operator>
        <name><name pos:line="60" pos:column="9">windowBits<pos:position pos:line="60" pos:column="19"/></name> <argument_list type="generic" pos:line="60" pos:column="20">&lt; <argument><expr><literal type="number" pos:line="60" pos:column="22">8<pos:position pos:line="60" pos:column="23"/></literal> <operator pos:line="60" pos:column="24">||<pos:position pos:line="60" pos:column="26"/></operator> <name pos:line="60" pos:column="27">windowBits<pos:position pos:line="60" pos:column="37"/></name></expr></argument> &gt;<pos:position pos:line="60" pos:column="42"/></argument_list></name> <literal type="number" pos:line="60" pos:column="40">15<pos:position pos:line="60" pos:column="42"/></literal> <operator pos:line="60" pos:column="43">||<pos:position pos:line="60" pos:column="45"/></operator> <name><name pos:line="60" pos:column="46">level<pos:position pos:line="60" pos:column="51"/></name> <argument_list type="generic" pos:line="60" pos:column="52">&lt; <argument><expr><literal type="number" pos:line="60" pos:column="54">0<pos:position pos:line="60" pos:column="55"/></literal> <operator pos:line="60" pos:column="56">||<pos:position pos:line="60" pos:column="58"/></operator> <name pos:line="60" pos:column="59">level<pos:position pos:line="60" pos:column="64"/></name></expr></argument> &gt;<pos:position pos:line="60" pos:column="69"/></argument_list></name> <literal type="number" pos:line="60" pos:column="67">9<pos:position pos:line="60" pos:column="68"/></literal> <operator pos:line="60" pos:column="69">||<pos:position pos:line="60" pos:column="71"/></operator>
        <name><name pos:line="61" pos:column="9">strategy<pos:position pos:line="61" pos:column="17"/></name> <argument_list type="generic" pos:line="61" pos:column="18">&lt; <argument><expr><literal type="number" pos:line="61" pos:column="20">0<pos:position pos:line="61" pos:column="21"/></literal> <operator pos:line="61" pos:column="22">||<pos:position pos:line="61" pos:column="24"/></operator> <name pos:line="61" pos:column="25">strategy<pos:position pos:line="61" pos:column="33"/></name></expr></argument> &gt;<pos:position pos:line="61" pos:column="38"/></argument_list></name> <name pos:line="61" pos:column="36">Z_FIXED<pos:position pos:line="61" pos:column="43"/></name></expr>)<pos:position pos:line="61" pos:column="44"/></condition><then pos:line="61" pos:column="44"> <block pos:line="61" pos:column="45">{
        <return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">Z_STREAM_ERROR<pos:position pos:line="62" pos:column="30"/></name></expr>;<pos:position pos:line="62" pos:column="31"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">windowBits<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">==<pos:position pos:line="64" pos:column="22"/></operator> <literal type="number" pos:line="64" pos:column="23">8<pos:position pos:line="64" pos:column="24"/></literal></expr>)<pos:position pos:line="64" pos:column="25"/></condition><then pos:line="64" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="26">windowBits<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">=<pos:position pos:line="64" pos:column="38"/></operator> <literal type="number" pos:line="64" pos:column="39">9<pos:position pos:line="64" pos:column="40"/></literal></expr>;<pos:position pos:line="64" pos:column="41"/></expr_stmt></block></then></if>  <comment type="block" pos:line="64" pos:column="43">/* until 256-byte window bug fixed */</comment>
    <expr_stmt><expr><name pos:line="65" pos:column="5">s<pos:position pos:line="65" pos:column="6"/></name> <operator pos:line="65" pos:column="7">=<pos:position pos:line="65" pos:column="8"/></operator> <operator pos:line="65" pos:column="9">(<pos:position pos:line="65" pos:column="10"/></operator><name pos:line="65" pos:column="10">deflate_state<pos:position pos:line="65" pos:column="23"/></name> <operator pos:line="65" pos:column="24">*<pos:position pos:line="65" pos:column="25"/></operator><operator pos:line="65" pos:column="25">)<pos:position pos:line="65" pos:column="26"/></operator> <call><name pos:line="65" pos:column="27">ZALLOC<pos:position pos:line="65" pos:column="33"/></name><argument_list pos:line="65" pos:column="33">(<argument><expr><name pos:line="65" pos:column="34">strm<pos:position pos:line="65" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="40">1<pos:position pos:line="65" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="43">sizeof<argument_list pos:line="65" pos:column="49">(<argument><expr><name pos:line="65" pos:column="50">deflate_state<pos:position pos:line="65" pos:column="63"/></name></expr></argument>)<pos:position pos:line="65" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="66"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">s<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">==<pos:position pos:line="66" pos:column="13"/></operator> <name pos:line="66" pos:column="14">Z_NULL<pos:position pos:line="66" pos:column="20"/></name></expr>)<pos:position pos:line="66" pos:column="21"/></condition><then pos:line="66" pos:column="21"> <block type="pseudo"><return pos:line="66" pos:column="22">return <expr><name pos:line="66" pos:column="29">Z_MEM_ERROR<pos:position pos:line="66" pos:column="40"/></name></expr>;<pos:position pos:line="66" pos:column="41"/></return></block></then></if>
    <expr_stmt><expr><name><name pos:line="67" pos:column="5">strm<pos:position pos:line="67" pos:column="9"/></name><operator pos:line="67" pos:column="9">-&gt;<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="11">state<pos:position pos:line="67" pos:column="16"/></name></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <operator pos:line="67" pos:column="19">(<pos:position pos:line="67" pos:column="20"/></operator>struct <name pos:line="67" pos:column="27">internal_state<pos:position pos:line="67" pos:column="41"/></name> <name pos:line="67" pos:column="42">FAR<pos:position pos:line="67" pos:column="45"/></name> <operator pos:line="67" pos:column="46">*<pos:position pos:line="67" pos:column="47"/></operator><operator pos:line="67" pos:column="47">)<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="48">s<pos:position pos:line="67" pos:column="49"/></name></expr>;<pos:position pos:line="67" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="68" pos:column="5">s<pos:position pos:line="68" pos:column="6"/></name><operator pos:line="68" pos:column="6">-&gt;<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="8">strm<pos:position pos:line="68" pos:column="12"/></name></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <name pos:line="68" pos:column="15">strm<pos:position pos:line="68" pos:column="19"/></name></expr>;<pos:position pos:line="68" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="70" pos:column="5">s<pos:position pos:line="70" pos:column="6"/></name><operator pos:line="70" pos:column="6">-&gt;<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="8">wrap<pos:position pos:line="70" pos:column="12"/></name></name> <operator pos:line="70" pos:column="13">=<pos:position pos:line="70" pos:column="14"/></operator> <name pos:line="70" pos:column="15">wrap<pos:position pos:line="70" pos:column="19"/></name></expr>;<pos:position pos:line="70" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="71" pos:column="5">s<pos:position pos:line="71" pos:column="6"/></name><operator pos:line="71" pos:column="6">-&gt;<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="8">gzhead<pos:position pos:line="71" pos:column="14"/></name></name> <operator pos:line="71" pos:column="15">=<pos:position pos:line="71" pos:column="16"/></operator> <name pos:line="71" pos:column="17">Z_NULL<pos:position pos:line="71" pos:column="23"/></name></expr>;<pos:position pos:line="71" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">s<pos:position pos:line="72" pos:column="6"/></name><operator pos:line="72" pos:column="6">-&gt;<pos:position pos:line="72" pos:column="11"/></operator><name pos:line="72" pos:column="8">w_bits<pos:position pos:line="72" pos:column="14"/></name></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <name pos:line="72" pos:column="17">windowBits<pos:position pos:line="72" pos:column="27"/></name></expr>;<pos:position pos:line="72" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">s<pos:position pos:line="73" pos:column="6"/></name><operator pos:line="73" pos:column="6">-&gt;<pos:position pos:line="73" pos:column="11"/></operator><name pos:line="73" pos:column="8">w_size<pos:position pos:line="73" pos:column="14"/></name></name> <operator pos:line="73" pos:column="15">=<pos:position pos:line="73" pos:column="16"/></operator> <literal type="number" pos:line="73" pos:column="17">1<pos:position pos:line="73" pos:column="18"/></literal> <operator pos:line="73" pos:column="19">&lt;&lt;<pos:position pos:line="73" pos:column="27"/></operator> <name><name pos:line="73" pos:column="22">s<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">-&gt;<pos:position pos:line="73" pos:column="28"/></operator><name pos:line="73" pos:column="25">w_bits<pos:position pos:line="73" pos:column="31"/></name></name></expr>;<pos:position pos:line="73" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="74" pos:column="5">s<pos:position pos:line="74" pos:column="6"/></name><operator pos:line="74" pos:column="6">-&gt;<pos:position pos:line="74" pos:column="11"/></operator><name pos:line="74" pos:column="8">w_mask<pos:position pos:line="74" pos:column="14"/></name></name> <operator pos:line="74" pos:column="15">=<pos:position pos:line="74" pos:column="16"/></operator> <name><name pos:line="74" pos:column="17">s<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">w_size<pos:position pos:line="74" pos:column="26"/></name></name> <operator pos:line="74" pos:column="27">-<pos:position pos:line="74" pos:column="28"/></operator> <literal type="number" pos:line="74" pos:column="29">1<pos:position pos:line="74" pos:column="30"/></literal></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="76" pos:column="5">s<pos:position pos:line="76" pos:column="6"/></name><operator pos:line="76" pos:column="6">-&gt;<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="8">hash_bits<pos:position pos:line="76" pos:column="17"/></name></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">memLevel<pos:position pos:line="76" pos:column="28"/></name> <operator pos:line="76" pos:column="29">+<pos:position pos:line="76" pos:column="30"/></operator> <literal type="number" pos:line="76" pos:column="31">7<pos:position pos:line="76" pos:column="32"/></literal></expr>;<pos:position pos:line="76" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="77" pos:column="5">s<pos:position pos:line="77" pos:column="6"/></name><operator pos:line="77" pos:column="6">-&gt;<pos:position pos:line="77" pos:column="11"/></operator><name pos:line="77" pos:column="8">hash_size<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <literal type="number" pos:line="77" pos:column="20">1<pos:position pos:line="77" pos:column="21"/></literal> <operator pos:line="77" pos:column="22">&lt;&lt;<pos:position pos:line="77" pos:column="30"/></operator> <name><name pos:line="77" pos:column="25">s<pos:position pos:line="77" pos:column="26"/></name><operator pos:line="77" pos:column="26">-&gt;<pos:position pos:line="77" pos:column="31"/></operator><name pos:line="77" pos:column="28">hash_bits<pos:position pos:line="77" pos:column="37"/></name></name></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="78" pos:column="5">s<pos:position pos:line="78" pos:column="6"/></name><operator pos:line="78" pos:column="6">-&gt;<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="8">hash_mask<pos:position pos:line="78" pos:column="17"/></name></name> <operator pos:line="78" pos:column="18">=<pos:position pos:line="78" pos:column="19"/></operator> <name><name pos:line="78" pos:column="20">s<pos:position pos:line="78" pos:column="21"/></name><operator pos:line="78" pos:column="21">-&gt;<pos:position pos:line="78" pos:column="26"/></operator><name pos:line="78" pos:column="23">hash_size<pos:position pos:line="78" pos:column="32"/></name></name> <operator pos:line="78" pos:column="33">-<pos:position pos:line="78" pos:column="34"/></operator> <literal type="number" pos:line="78" pos:column="35">1<pos:position pos:line="78" pos:column="36"/></literal></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">s<pos:position pos:line="79" pos:column="6"/></name><operator pos:line="79" pos:column="6">-&gt;<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="8">hash_shift<pos:position pos:line="79" pos:column="18"/></name></name> <operator pos:line="79" pos:column="19">=<pos:position pos:line="79" pos:column="20"/></operator>  <operator pos:line="79" pos:column="22">(<pos:position pos:line="79" pos:column="23"/></operator><operator pos:line="79" pos:column="23">(<pos:position pos:line="79" pos:column="24"/></operator><name><name pos:line="79" pos:column="24">s<pos:position pos:line="79" pos:column="25"/></name><operator pos:line="79" pos:column="25">-&gt;<pos:position pos:line="79" pos:column="30"/></operator><name pos:line="79" pos:column="27">hash_bits<pos:position pos:line="79" pos:column="36"/></name></name><operator pos:line="79" pos:column="36">+<pos:position pos:line="79" pos:column="37"/></operator><name pos:line="79" pos:column="37">MIN_MATCH<pos:position pos:line="79" pos:column="46"/></name><operator pos:line="79" pos:column="46">-<pos:position pos:line="79" pos:column="47"/></operator><literal type="number" pos:line="79" pos:column="47">1<pos:position pos:line="79" pos:column="48"/></literal><operator pos:line="79" pos:column="48">)<pos:position pos:line="79" pos:column="49"/></operator><operator pos:line="79" pos:column="49">/<pos:position pos:line="79" pos:column="50"/></operator><name pos:line="79" pos:column="50">MIN_MATCH<pos:position pos:line="79" pos:column="59"/></name><operator pos:line="79" pos:column="59">)<pos:position pos:line="79" pos:column="60"/></operator></expr>;<pos:position pos:line="79" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="81" pos:column="5">s<pos:position pos:line="81" pos:column="6"/></name><operator pos:line="81" pos:column="6">-&gt;<pos:position pos:line="81" pos:column="11"/></operator><name pos:line="81" pos:column="8">window<pos:position pos:line="81" pos:column="14"/></name></name> <operator pos:line="81" pos:column="15">=<pos:position pos:line="81" pos:column="16"/></operator> <operator pos:line="81" pos:column="17">(<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="18">Bytef<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">*<pos:position pos:line="81" pos:column="25"/></operator><operator pos:line="81" pos:column="25">)<pos:position pos:line="81" pos:column="26"/></operator> <call><name pos:line="81" pos:column="27">ZALLOC<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">strm<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="40">s<pos:position pos:line="81" pos:column="41"/></name><operator pos:line="81" pos:column="41">-&gt;<pos:position pos:line="81" pos:column="46"/></operator><name pos:line="81" pos:column="43">w_size<pos:position pos:line="81" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="51">2<pos:position pos:line="81" pos:column="52"/></literal><operator pos:line="81" pos:column="52">*<pos:position pos:line="81" pos:column="53"/></operator><sizeof pos:line="81" pos:column="53">sizeof<argument_list pos:line="81" pos:column="59">(<argument><expr><name pos:line="81" pos:column="60">Byte<pos:position pos:line="81" pos:column="64"/></name></expr></argument>)<pos:position pos:line="81" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="81" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="82" pos:column="5">s<pos:position pos:line="82" pos:column="6"/></name><operator pos:line="82" pos:column="6">-&gt;<pos:position pos:line="82" pos:column="11"/></operator><name pos:line="82" pos:column="8">prev<pos:position pos:line="82" pos:column="12"/></name></name>   <operator pos:line="82" pos:column="15">=<pos:position pos:line="82" pos:column="16"/></operator> <operator pos:line="82" pos:column="17">(<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">Posf<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">*<pos:position pos:line="82" pos:column="24"/></operator><operator pos:line="82" pos:column="24">)<pos:position pos:line="82" pos:column="25"/></operator>  <call><name pos:line="82" pos:column="27">ZALLOC<pos:position pos:line="82" pos:column="33"/></name><argument_list pos:line="82" pos:column="33">(<argument><expr><name pos:line="82" pos:column="34">strm<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="40">s<pos:position pos:line="82" pos:column="41"/></name><operator pos:line="82" pos:column="41">-&gt;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="43">w_size<pos:position pos:line="82" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="82" pos:column="51">sizeof<argument_list pos:line="82" pos:column="57">(<argument><expr><name pos:line="82" pos:column="58">Pos<pos:position pos:line="82" pos:column="61"/></name></expr></argument>)<pos:position pos:line="82" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="82" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="83" pos:column="5">s<pos:position pos:line="83" pos:column="6"/></name><operator pos:line="83" pos:column="6">-&gt;<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="8">head<pos:position pos:line="83" pos:column="12"/></name></name>   <operator pos:line="83" pos:column="15">=<pos:position pos:line="83" pos:column="16"/></operator> <operator pos:line="83" pos:column="17">(<pos:position pos:line="83" pos:column="18"/></operator><name pos:line="83" pos:column="18">Posf<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">*<pos:position pos:line="83" pos:column="24"/></operator><operator pos:line="83" pos:column="24">)<pos:position pos:line="83" pos:column="25"/></operator>  <call><name pos:line="83" pos:column="27">ZALLOC<pos:position pos:line="83" pos:column="33"/></name><argument_list pos:line="83" pos:column="33">(<argument><expr><name pos:line="83" pos:column="34">strm<pos:position pos:line="83" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="40">s<pos:position pos:line="83" pos:column="41"/></name><operator pos:line="83" pos:column="41">-&gt;<pos:position pos:line="83" pos:column="46"/></operator><name pos:line="83" pos:column="43">hash_size<pos:position pos:line="83" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="83" pos:column="54">sizeof<argument_list pos:line="83" pos:column="60">(<argument><expr><name pos:line="83" pos:column="61">Pos<pos:position pos:line="83" pos:column="64"/></name></expr></argument>)<pos:position pos:line="83" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="83" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="85" pos:column="5">s<pos:position pos:line="85" pos:column="6"/></name><operator pos:line="85" pos:column="6">-&gt;<pos:position pos:line="85" pos:column="11"/></operator><name pos:line="85" pos:column="8">high_water<pos:position pos:line="85" pos:column="18"/></name></name> <operator pos:line="85" pos:column="19">=<pos:position pos:line="85" pos:column="20"/></operator> <literal type="number" pos:line="85" pos:column="21">0<pos:position pos:line="85" pos:column="22"/></literal></expr>;<pos:position pos:line="85" pos:column="23"/></expr_stmt>      <comment type="block" pos:line="85" pos:column="29">/* nothing written to s-&gt;window yet */</comment>

    <expr_stmt><expr><name><name pos:line="87" pos:column="5">s<pos:position pos:line="87" pos:column="6"/></name><operator pos:line="87" pos:column="6">-&gt;<pos:position pos:line="87" pos:column="11"/></operator><name pos:line="87" pos:column="8">lit_bufsize<pos:position pos:line="87" pos:column="19"/></name></name> <operator pos:line="87" pos:column="20">=<pos:position pos:line="87" pos:column="21"/></operator> <literal type="number" pos:line="87" pos:column="22">1<pos:position pos:line="87" pos:column="23"/></literal> <operator pos:line="87" pos:column="24">&lt;&lt;<pos:position pos:line="87" pos:column="32"/></operator> <operator pos:line="87" pos:column="27">(<pos:position pos:line="87" pos:column="28"/></operator><name pos:line="87" pos:column="28">memLevel<pos:position pos:line="87" pos:column="36"/></name> <operator pos:line="87" pos:column="37">+<pos:position pos:line="87" pos:column="38"/></operator> <literal type="number" pos:line="87" pos:column="39">6<pos:position pos:line="87" pos:column="40"/></literal><operator pos:line="87" pos:column="40">)<pos:position pos:line="87" pos:column="41"/></operator></expr>;<pos:position pos:line="87" pos:column="42"/></expr_stmt> <comment type="block" pos:line="87" pos:column="43">/* 16K elements by default */</comment>

    <expr_stmt><expr><name pos:line="89" pos:column="5">overlay<pos:position pos:line="89" pos:column="12"/></name> <operator pos:line="89" pos:column="13">=<pos:position pos:line="89" pos:column="14"/></operator> <operator pos:line="89" pos:column="15">(<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="16">ushf<pos:position pos:line="89" pos:column="20"/></name> <operator pos:line="89" pos:column="21">*<pos:position pos:line="89" pos:column="22"/></operator><operator pos:line="89" pos:column="22">)<pos:position pos:line="89" pos:column="23"/></operator> <call><name pos:line="89" pos:column="24">ZALLOC<pos:position pos:line="89" pos:column="30"/></name><argument_list pos:line="89" pos:column="30">(<argument><expr><name pos:line="89" pos:column="31">strm<pos:position pos:line="89" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="37">s<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">-&gt;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="40">lit_bufsize<pos:position pos:line="89" pos:column="51"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="89" pos:column="53">sizeof<argument_list pos:line="89" pos:column="59">(<argument><expr><name pos:line="89" pos:column="60">ush<pos:position pos:line="89" pos:column="63"/></name></expr></argument>)<pos:position pos:line="89" pos:column="64"/></argument_list></sizeof><operator pos:line="89" pos:column="64">+<pos:position pos:line="89" pos:column="65"/></operator><literal type="number" pos:line="89" pos:column="65">2<pos:position pos:line="89" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="90" pos:column="5">s<pos:position pos:line="90" pos:column="6"/></name><operator pos:line="90" pos:column="6">-&gt;<pos:position pos:line="90" pos:column="11"/></operator><name pos:line="90" pos:column="8">pending_buf<pos:position pos:line="90" pos:column="19"/></name></name> <operator pos:line="90" pos:column="20">=<pos:position pos:line="90" pos:column="21"/></operator> <operator pos:line="90" pos:column="22">(<pos:position pos:line="90" pos:column="23"/></operator><name pos:line="90" pos:column="23">uchf<pos:position pos:line="90" pos:column="27"/></name> <operator pos:line="90" pos:column="28">*<pos:position pos:line="90" pos:column="29"/></operator><operator pos:line="90" pos:column="29">)<pos:position pos:line="90" pos:column="30"/></operator> <name pos:line="90" pos:column="31">overlay<pos:position pos:line="90" pos:column="38"/></name></expr>;<pos:position pos:line="90" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="91" pos:column="5">s<pos:position pos:line="91" pos:column="6"/></name><operator pos:line="91" pos:column="6">-&gt;<pos:position pos:line="91" pos:column="11"/></operator><name pos:line="91" pos:column="8">pending_buf_size<pos:position pos:line="91" pos:column="24"/></name></name> <operator pos:line="91" pos:column="25">=<pos:position pos:line="91" pos:column="26"/></operator> <operator pos:line="91" pos:column="27">(<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="28">ulg<pos:position pos:line="91" pos:column="31"/></name><operator pos:line="91" pos:column="31">)<pos:position pos:line="91" pos:column="32"/></operator><name><name pos:line="91" pos:column="32">s<pos:position pos:line="91" pos:column="33"/></name><operator pos:line="91" pos:column="33">-&gt;<pos:position pos:line="91" pos:column="38"/></operator><name pos:line="91" pos:column="35">lit_bufsize<pos:position pos:line="91" pos:column="46"/></name></name> <operator pos:line="91" pos:column="47">*<pos:position pos:line="91" pos:column="48"/></operator> <operator pos:line="91" pos:column="49">(<pos:position pos:line="91" pos:column="50"/></operator><sizeof pos:line="91" pos:column="50">sizeof<argument_list pos:line="91" pos:column="56">(<argument><expr><name pos:line="91" pos:column="57">ush<pos:position pos:line="91" pos:column="60"/></name></expr></argument>)<pos:position pos:line="91" pos:column="61"/></argument_list></sizeof><operator pos:line="91" pos:column="61">+<pos:position pos:line="91" pos:column="62"/></operator><literal type="number" pos:line="91" pos:column="62">2L<pos:position pos:line="91" pos:column="64"/></literal><operator pos:line="91" pos:column="64">)<pos:position pos:line="91" pos:column="65"/></operator></expr>;<pos:position pos:line="91" pos:column="66"/></expr_stmt>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name><name pos:line="93" pos:column="9">s<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">window<pos:position pos:line="93" pos:column="18"/></name></name> <operator pos:line="93" pos:column="19">==<pos:position pos:line="93" pos:column="21"/></operator> <name pos:line="93" pos:column="22">Z_NULL<pos:position pos:line="93" pos:column="28"/></name> <operator pos:line="93" pos:column="29">||<pos:position pos:line="93" pos:column="31"/></operator> <name><name pos:line="93" pos:column="32">s<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">-&gt;<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="35">prev<pos:position pos:line="93" pos:column="39"/></name></name> <operator pos:line="93" pos:column="40">==<pos:position pos:line="93" pos:column="42"/></operator> <name pos:line="93" pos:column="43">Z_NULL<pos:position pos:line="93" pos:column="49"/></name> <operator pos:line="93" pos:column="50">||<pos:position pos:line="93" pos:column="52"/></operator> <name><name pos:line="93" pos:column="53">s<pos:position pos:line="93" pos:column="54"/></name><operator pos:line="93" pos:column="54">-&gt;<pos:position pos:line="93" pos:column="59"/></operator><name pos:line="93" pos:column="56">head<pos:position pos:line="93" pos:column="60"/></name></name> <operator pos:line="93" pos:column="61">==<pos:position pos:line="93" pos:column="63"/></operator> <name pos:line="93" pos:column="64">Z_NULL<pos:position pos:line="93" pos:column="70"/></name> <operator pos:line="93" pos:column="71">||<pos:position pos:line="93" pos:column="73"/></operator>
        <name><name pos:line="94" pos:column="9">s<pos:position pos:line="94" pos:column="10"/></name><operator pos:line="94" pos:column="10">-&gt;<pos:position pos:line="94" pos:column="15"/></operator><name pos:line="94" pos:column="12">pending_buf<pos:position pos:line="94" pos:column="23"/></name></name> <operator pos:line="94" pos:column="24">==<pos:position pos:line="94" pos:column="26"/></operator> <name pos:line="94" pos:column="27">Z_NULL<pos:position pos:line="94" pos:column="33"/></name></expr>)<pos:position pos:line="94" pos:column="34"/></condition><then pos:line="94" pos:column="34"> <block pos:line="94" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="95" pos:column="9">s<pos:position pos:line="95" pos:column="10"/></name><operator pos:line="95" pos:column="10">-&gt;<pos:position pos:line="95" pos:column="15"/></operator><name pos:line="95" pos:column="12">status<pos:position pos:line="95" pos:column="18"/></name></name> <operator pos:line="95" pos:column="19">=<pos:position pos:line="95" pos:column="20"/></operator> <name pos:line="95" pos:column="21">FINISH_STATE<pos:position pos:line="95" pos:column="33"/></name></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">strm<pos:position pos:line="96" pos:column="13"/></name><operator pos:line="96" pos:column="13">-&gt;<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="15">msg<pos:position pos:line="96" pos:column="18"/></name></name> <operator pos:line="96" pos:column="19">=<pos:position pos:line="96" pos:column="20"/></operator> <call><name pos:line="96" pos:column="21">ERR_MSG<pos:position pos:line="96" pos:column="28"/></name><argument_list pos:line="96" pos:column="28">(<argument><expr><name pos:line="96" pos:column="29">Z_MEM_ERROR<pos:position pos:line="96" pos:column="40"/></name></expr></argument>)<pos:position pos:line="96" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">deflateEnd<pos:position pos:line="97" pos:column="19"/></name> <argument_list pos:line="97" pos:column="20">(<argument><expr><name pos:line="97" pos:column="21">strm<pos:position pos:line="97" pos:column="25"/></name></expr></argument>)<pos:position pos:line="97" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="27"/></expr_stmt>
        <return pos:line="98" pos:column="9">return <expr><name pos:line="98" pos:column="16">Z_MEM_ERROR<pos:position pos:line="98" pos:column="27"/></name></expr>;<pos:position pos:line="98" pos:column="28"/></return>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="100" pos:column="5">s<pos:position pos:line="100" pos:column="6"/></name><operator pos:line="100" pos:column="6">-&gt;<pos:position pos:line="100" pos:column="11"/></operator><name pos:line="100" pos:column="8">d_buf<pos:position pos:line="100" pos:column="13"/></name></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <name pos:line="100" pos:column="16">overlay<pos:position pos:line="100" pos:column="23"/></name> <operator pos:line="100" pos:column="24">+<pos:position pos:line="100" pos:column="25"/></operator> <name><name pos:line="100" pos:column="26">s<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">-&gt;<pos:position pos:line="100" pos:column="32"/></operator><name pos:line="100" pos:column="29">lit_bufsize<pos:position pos:line="100" pos:column="40"/></name></name><operator pos:line="100" pos:column="40">/<pos:position pos:line="100" pos:column="41"/></operator><sizeof pos:line="100" pos:column="41">sizeof<argument_list pos:line="100" pos:column="47">(<argument><expr><name pos:line="100" pos:column="48">ush<pos:position pos:line="100" pos:column="51"/></name></expr></argument>)<pos:position pos:line="100" pos:column="52"/></argument_list></sizeof></expr>;<pos:position pos:line="100" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="101" pos:column="5">s<pos:position pos:line="101" pos:column="6"/></name><operator pos:line="101" pos:column="6">-&gt;<pos:position pos:line="101" pos:column="11"/></operator><name pos:line="101" pos:column="8">l_buf<pos:position pos:line="101" pos:column="13"/></name></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <name><name pos:line="101" pos:column="16">s<pos:position pos:line="101" pos:column="17"/></name><operator pos:line="101" pos:column="17">-&gt;<pos:position pos:line="101" pos:column="22"/></operator><name pos:line="101" pos:column="19">pending_buf<pos:position pos:line="101" pos:column="30"/></name></name> <operator pos:line="101" pos:column="31">+<pos:position pos:line="101" pos:column="32"/></operator> <operator pos:line="101" pos:column="33">(<pos:position pos:line="101" pos:column="34"/></operator><literal type="number" pos:line="101" pos:column="34">1<pos:position pos:line="101" pos:column="35"/></literal><operator pos:line="101" pos:column="35">+<pos:position pos:line="101" pos:column="36"/></operator><sizeof pos:line="101" pos:column="36">sizeof<argument_list pos:line="101" pos:column="42">(<argument><expr><name pos:line="101" pos:column="43">ush<pos:position pos:line="101" pos:column="46"/></name></expr></argument>)<pos:position pos:line="101" pos:column="47"/></argument_list></sizeof><operator pos:line="101" pos:column="47">)<pos:position pos:line="101" pos:column="48"/></operator><operator pos:line="101" pos:column="48">*<pos:position pos:line="101" pos:column="49"/></operator><name><name pos:line="101" pos:column="49">s<pos:position pos:line="101" pos:column="50"/></name><operator pos:line="101" pos:column="50">-&gt;<pos:position pos:line="101" pos:column="55"/></operator><name pos:line="101" pos:column="52">lit_bufsize<pos:position pos:line="101" pos:column="63"/></name></name></expr>;<pos:position pos:line="101" pos:column="64"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="103" pos:column="5">s<pos:position pos:line="103" pos:column="6"/></name><operator pos:line="103" pos:column="6">-&gt;<pos:position pos:line="103" pos:column="11"/></operator><name pos:line="103" pos:column="8">level<pos:position pos:line="103" pos:column="13"/></name></name> <operator pos:line="103" pos:column="14">=<pos:position pos:line="103" pos:column="15"/></operator> <name pos:line="103" pos:column="16">level<pos:position pos:line="103" pos:column="21"/></name></expr>;<pos:position pos:line="103" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="104" pos:column="5">s<pos:position pos:line="104" pos:column="6"/></name><operator pos:line="104" pos:column="6">-&gt;<pos:position pos:line="104" pos:column="11"/></operator><name pos:line="104" pos:column="8">strategy<pos:position pos:line="104" pos:column="16"/></name></name> <operator pos:line="104" pos:column="17">=<pos:position pos:line="104" pos:column="18"/></operator> <name pos:line="104" pos:column="19">strategy<pos:position pos:line="104" pos:column="27"/></name></expr>;<pos:position pos:line="104" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="105" pos:column="5">s<pos:position pos:line="105" pos:column="6"/></name><operator pos:line="105" pos:column="6">-&gt;<pos:position pos:line="105" pos:column="11"/></operator><name pos:line="105" pos:column="8">method<pos:position pos:line="105" pos:column="14"/></name></name> <operator pos:line="105" pos:column="15">=<pos:position pos:line="105" pos:column="16"/></operator> <operator pos:line="105" pos:column="17">(<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="18">Byte<pos:position pos:line="105" pos:column="22"/></name><operator pos:line="105" pos:column="22">)<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="23">method<pos:position pos:line="105" pos:column="29"/></name></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>

    <return pos:line="107" pos:column="5">return <expr><call><name pos:line="107" pos:column="12">deflateReset<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">strm<pos:position pos:line="107" pos:column="29"/></name></expr></argument>)<pos:position pos:line="107" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="31"/></return>
}<pos:position pos:line="108" pos:column="2"/></block></function_decl></unit>

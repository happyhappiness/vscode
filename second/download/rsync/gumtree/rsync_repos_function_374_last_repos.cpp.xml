<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_374_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">glob_expand<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><specifier pos:line="1" pos:column="17">const<pos:position pos:line="1" pos:column="22"/></specifier> <name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">arg<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">argv_p<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">argc_p<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">maxargs_p<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="18">save_argc<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">s<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">arg<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18"> <block pos:line="6" pos:column="19">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><name><name pos:line="7" pos:column="21">glob<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">filt_buf<pos:position pos:line="7" pos:column="34"/></name></name></expr>)<pos:position pos:line="7" pos:column="35"/></condition><then pos:line="7" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="25">free<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">glob<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">.<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">filt_buf<pos:position pos:line="8" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">free<pos:position pos:line="9" pos:column="21"/></name><argument_list pos:line="9" pos:column="21">(<argument><expr><name><name pos:line="9" pos:column="22">glob<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">arg_buf<pos:position pos:line="9" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">memset<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="25">glob<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="34">sizeof <name pos:line="10" pos:column="41">glob<pos:position pos:line="10" pos:column="45"/></name></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
		<return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">-<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></return>
	}<pos:position pos:line="12" pos:column="10"/></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">sanitize_paths<pos:position pos:line="14" pos:column="27"/></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="17">s<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">sanitize_path<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">NULL<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">arg<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="46">""<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="50">0<pos:position pos:line="15" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">SP_KEEP_DOT_DIRS<pos:position pos:line="15" pos:column="69"/></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="71"/></expr_stmt></block></then>
	<else pos:line="16" pos:column="9">else <block pos:line="16" pos:column="14">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">s<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <call><name pos:line="17" pos:column="21">strdup<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">arg<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">s<pos:position pos:line="18" pos:column="23"/></name></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">out_of_memory<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><literal type="string" pos:line="19" pos:column="39">"glob_expand"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">clean_fname<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">s<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="32">CFN_KEEP_DOT_DIRS<pos:position pos:line="20" pos:column="49"/></name>
			     <operator pos:line="21" pos:column="30">|<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">CFN_KEEP_TRAILING_SLASH<pos:position pos:line="21" pos:column="55"/></name>
			     <operator pos:line="22" pos:column="30">|<pos:position pos:line="22" pos:column="31"/></operator> <name pos:line="22" pos:column="32">CFN_COLLAPSE_DOT_DOT_DIRS<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">ENSURE_MEMSPACE<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name><name pos:line="25" pos:column="25">glob<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">arg_buf<pos:position pos:line="25" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">char<pos:position pos:line="25" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="45">glob<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">.<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="50">absize<pos:position pos:line="25" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="58">MAXPATHLEN<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="70"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">glob<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">arg_buf<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <literal type="char" pos:line="26" pos:column="25">'\0'<pos:position pos:line="26" pos:column="29"/></literal></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="28" pos:column="9">glob<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">.<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">argc<pos:position pos:line="28" pos:column="18"/></name></name> <operator pos:line="28" pos:column="19">=<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">save_argc<pos:position pos:line="28" pos:column="30"/></name> <operator pos:line="28" pos:column="31">=<pos:position pos:line="28" pos:column="32"/></operator> <operator pos:line="28" pos:column="33">*<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="34">argc_p<pos:position pos:line="28" pos:column="40"/></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="29" pos:column="9">glob<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">.<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">argv<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">argv_p<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="30" pos:column="9">glob<pos:position pos:line="30" pos:column="13"/></name><operator pos:line="30" pos:column="13">.<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">maxargs<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <operator pos:line="30" pos:column="24">*<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">maxargs_p<pos:position pos:line="30" pos:column="34"/></name></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">ENSURE_MEMSPACE<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name><name pos:line="32" pos:column="25">glob<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">.<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="30">argv<pos:position pos:line="32" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">char<pos:position pos:line="32" pos:column="40"/></name> <operator pos:line="32" pos:column="41">*<pos:position pos:line="32" pos:column="42"/></operator></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="44">glob<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">.<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="49">maxargs<pos:position pos:line="32" pos:column="56"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="58">100<pos:position pos:line="32" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">glob_match<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">s<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="34" pos:column="26">-<pos:position pos:line="34" pos:column="27"/></operator><literal type="number" pos:line="34" pos:column="27">1<pos:position pos:line="34" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>

	<comment type="block" pos:line="36" pos:column="9">/* The arg didn't match anything, so add the failed arg to the list. */</comment>
	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name><name pos:line="37" pos:column="13">glob<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">.<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">argc<pos:position pos:line="37" pos:column="22"/></name></name> <operator pos:line="37" pos:column="23">==<pos:position pos:line="37" pos:column="25"/></operator> <name pos:line="37" pos:column="26">save_argc<pos:position pos:line="37" pos:column="35"/></name></expr>)<pos:position pos:line="37" pos:column="36"/></condition><then pos:line="37" pos:column="36"> <block pos:line="37" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">ENSURE_MEMSPACE<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name><name pos:line="38" pos:column="33">glob<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">.<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">argv<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">char<pos:position pos:line="38" pos:column="48"/></name> <operator pos:line="38" pos:column="49">*<pos:position pos:line="38" pos:column="50"/></operator></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="52">glob<pos:position pos:line="38" pos:column="56"/></name><operator pos:line="38" pos:column="56">.<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="57">maxargs<pos:position pos:line="38" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="66">glob<pos:position pos:line="38" pos:column="70"/></name><operator pos:line="38" pos:column="70">.<pos:position pos:line="38" pos:column="71"/></operator><name pos:line="38" pos:column="71">argc<pos:position pos:line="38" pos:column="75"/></name></name> <operator pos:line="38" pos:column="76">+<pos:position pos:line="38" pos:column="77"/></operator> <literal type="number" pos:line="38" pos:column="78">1<pos:position pos:line="38" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="81"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="39" pos:column="17">glob<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">.<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">argv<pos:position pos:line="39" pos:column="26"/></name><index pos:line="39" pos:column="26">[<expr><name><name pos:line="39" pos:column="27">glob<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">argc<pos:position pos:line="39" pos:column="36"/></name></name><operator pos:line="39" pos:column="36">++<pos:position pos:line="39" pos:column="38"/></operator></expr>]<pos:position pos:line="39" pos:column="39"/></index></name> <operator pos:line="39" pos:column="40">=<pos:position pos:line="39" pos:column="41"/></operator> <name pos:line="39" pos:column="42">s<pos:position pos:line="39" pos:column="43"/></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">ret<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">0<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></then> <else pos:line="41" pos:column="11">else <block pos:line="41" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">free<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">s<pos:position pos:line="42" pos:column="23"/></name></expr></argument>)<pos:position pos:line="42" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="25"/></expr_stmt>
		<expr_stmt><expr><name pos:line="43" pos:column="17">ret<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <literal type="number" pos:line="43" pos:column="23">1<pos:position pos:line="43" pos:column="24"/></literal></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></else></if>

	<expr_stmt><expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">maxargs_p<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <name><name pos:line="46" pos:column="22">glob<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">.<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">maxargs<pos:position pos:line="46" pos:column="34"/></name></name></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="47" pos:column="9">*<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">argv_p<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <name><name pos:line="47" pos:column="19">glob<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">argv<pos:position pos:line="47" pos:column="28"/></name></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="48" pos:column="9">*<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">argc_p<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <name><name pos:line="48" pos:column="19">glob<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">argc<pos:position pos:line="48" pos:column="28"/></name></name></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>

	<return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">ret<pos:position pos:line="50" pos:column="19"/></name></expr>;<pos:position pos:line="50" pos:column="20"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

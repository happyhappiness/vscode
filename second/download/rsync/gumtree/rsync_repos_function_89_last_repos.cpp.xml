<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_89_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rule_matches<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fname<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">filter_rule<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">ex<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">int<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">name_is_dir<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">slash_handling<pos:position pos:line="3" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="29">str_cnt<pos:position pos:line="3" pos:column="36"/></name> <init pos:line="3" pos:column="37">= <expr><literal type="number" pos:line="3" pos:column="39">0<pos:position pos:line="3" pos:column="40"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="42">anchored_match<pos:position pos:line="3" pos:column="56"/></name> <init pos:line="3" pos:column="57">= <expr><literal type="number" pos:line="3" pos:column="59">0<pos:position pos:line="3" pos:column="60"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret_match<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><ternary><condition><expr><name><name pos:line="4" pos:column="25">ex<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">-&gt;<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="29">rflags<pos:position pos:line="4" pos:column="35"/></name></name> <operator pos:line="4" pos:column="36">&amp;<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="38">FILTRULE_NEGATE<pos:position pos:line="4" pos:column="53"/></name></expr> ?<pos:position pos:line="4" pos:column="55"/></condition><then pos:line="4" pos:column="55"> <expr><literal type="number" pos:line="4" pos:column="56">0<pos:position pos:line="4" pos:column="57"/></literal></expr> <pos:position pos:line="4" pos:column="58"/></then><else pos:line="4" pos:column="58">: <expr><literal type="number" pos:line="4" pos:column="60">1<pos:position pos:line="4" pos:column="61"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="4" pos:column="62"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">p<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">pattern<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">ex<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">pattern<pos:position pos:line="5" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">char<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name><name pos:line="6" pos:column="21">strings<pos:position pos:line="6" pos:column="28"/></name><index pos:line="6" pos:column="28">[<expr><literal type="number" pos:line="6" pos:column="29">16<pos:position pos:line="6" pos:column="31"/></literal></expr>]<pos:position pos:line="6" pos:column="32"/></index></name></decl>;<pos:position pos:line="6" pos:column="33"/></decl_stmt> <comment type="block" pos:line="6" pos:column="34">/* more than enough */</comment>
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">name<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name pos:line="7" pos:column="28">fname<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">+<pos:position pos:line="7" pos:column="35"/></operator> <operator pos:line="7" pos:column="36">(<pos:position pos:line="7" pos:column="37"/></operator><operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">fname<pos:position pos:line="7" pos:column="43"/></name> <operator pos:line="7" pos:column="44">==<pos:position pos:line="7" pos:column="46"/></operator> <literal type="char" pos:line="7" pos:column="47">'/'<pos:position pos:line="7" pos:column="50"/></literal><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator></expr></init></decl>;<pos:position pos:line="7" pos:column="52"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><operator pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">name<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">ex<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">u<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">slash_cnt<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">&amp;&amp;<pos:position pos:line="12" pos:column="40"/></operator> <operator pos:line="12" pos:column="33">!<pos:position pos:line="12" pos:column="34"/></operator><operator pos:line="12" pos:column="34">(<pos:position pos:line="12" pos:column="35"/></operator><name><name pos:line="12" pos:column="35">ex<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">rflags<pos:position pos:line="12" pos:column="45"/></name></name> <operator pos:line="12" pos:column="46">&amp;<pos:position pos:line="12" pos:column="51"/></operator> <name pos:line="12" pos:column="48">FILTRULE_WILD2<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">)<pos:position pos:line="12" pos:column="63"/></operator></expr>)<pos:position pos:line="12" pos:column="64"/></condition><then pos:line="12" pos:column="64"> <block pos:line="12" pos:column="65">{
		<comment type="block" pos:line="13" pos:column="17">/* If the pattern does not have any slashes AND it does
		 * not have a "**" (which could match a slash), then we
		 * just match the name portion of the path. */</comment>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">p<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">strrchr<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">name<pos:position pos:line="16" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="16" pos:column="39">'/'<pos:position pos:line="16" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call><operator pos:line="16" pos:column="43">)<pos:position pos:line="16" pos:column="44"/></operator> <operator pos:line="16" pos:column="45">!=<pos:position pos:line="16" pos:column="47"/></operator> <name pos:line="16" pos:column="48">NULL<pos:position pos:line="16" pos:column="52"/></name></expr>)<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">name<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">=<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="32">p<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">+<pos:position pos:line="17" pos:column="34"/></operator><literal type="number" pos:line="17" pos:column="34">1<pos:position pos:line="17" pos:column="35"/></literal></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <elseif pos:line="18" pos:column="11">else <if pos:line="18" pos:column="16">if <condition pos:line="18" pos:column="19">(<expr><name><name pos:line="18" pos:column="20">ex<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">rflags<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator> <name pos:line="18" pos:column="33">FILTRULE_ABS_PATH<pos:position pos:line="18" pos:column="50"/></name> <operator pos:line="18" pos:column="51">&amp;&amp;<pos:position pos:line="18" pos:column="61"/></operator> <operator pos:line="18" pos:column="54">*<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="55">fname<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">!=<pos:position pos:line="18" pos:column="63"/></operator> <literal type="char" pos:line="18" pos:column="64">'/'<pos:position pos:line="18" pos:column="67"/></literal>
	    <operator pos:line="19" pos:column="13">&amp;&amp;<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="16">curr_dir_len<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">&gt;<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="31">module_dirlen<pos:position pos:line="19" pos:column="44"/></name> <operator pos:line="19" pos:column="45">+<pos:position pos:line="19" pos:column="46"/></operator> <literal type="number" pos:line="19" pos:column="47">1<pos:position pos:line="19" pos:column="48"/></literal></expr>)<pos:position pos:line="19" pos:column="49"/></condition><then pos:line="19" pos:column="49"> <block pos:line="19" pos:column="50">{
		<comment type="block" pos:line="20" pos:column="17">/* If we're matching against an absolute-path pattern,
		 * we need to prepend our full path info. */</comment>
		<expr_stmt><expr><name><name pos:line="22" pos:column="17">strings<pos:position pos:line="22" pos:column="24"/></name><index pos:line="22" pos:column="24">[<expr><name pos:line="22" pos:column="25">str_cnt<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">++<pos:position pos:line="22" pos:column="34"/></operator></expr>]<pos:position pos:line="22" pos:column="35"/></index></name> <operator pos:line="22" pos:column="36">=<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">curr_dir<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">+<pos:position pos:line="22" pos:column="48"/></operator> <name pos:line="22" pos:column="49">module_dirlen<pos:position pos:line="22" pos:column="62"/></name> <operator pos:line="22" pos:column="63">+<pos:position pos:line="22" pos:column="64"/></operator> <literal type="number" pos:line="22" pos:column="65">1<pos:position pos:line="22" pos:column="66"/></literal></expr>;<pos:position pos:line="22" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="23" pos:column="17">strings<pos:position pos:line="23" pos:column="24"/></name><index pos:line="23" pos:column="24">[<expr><name pos:line="23" pos:column="25">str_cnt<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">++<pos:position pos:line="23" pos:column="34"/></operator></expr>]<pos:position pos:line="23" pos:column="35"/></index></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <literal type="string" pos:line="23" pos:column="38">"/"<pos:position pos:line="23" pos:column="41"/></literal></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif> <elseif pos:line="24" pos:column="11">else <if pos:line="24" pos:column="16">if <condition pos:line="24" pos:column="19">(<expr><name><name pos:line="24" pos:column="20">ex<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">-&gt;<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="24">rflags<pos:position pos:line="24" pos:column="30"/></name></name> <operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="33">FILTRULE_WILD2_PREFIX<pos:position pos:line="24" pos:column="54"/></name> <operator pos:line="24" pos:column="55">&amp;&amp;<pos:position pos:line="24" pos:column="65"/></operator> <operator pos:line="24" pos:column="58">*<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="59">fname<pos:position pos:line="24" pos:column="64"/></name> <operator pos:line="24" pos:column="65">!=<pos:position pos:line="24" pos:column="67"/></operator> <literal type="char" pos:line="24" pos:column="68">'/'<pos:position pos:line="24" pos:column="71"/></literal></expr>)<pos:position pos:line="24" pos:column="72"/></condition><then pos:line="24" pos:column="72"> <block pos:line="24" pos:column="73">{
		<comment type="block" pos:line="25" pos:column="17">/* Allow "**"+"/" to match at the start of the string. */</comment>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">strings<pos:position pos:line="26" pos:column="24"/></name><index pos:line="26" pos:column="24">[<expr><name pos:line="26" pos:column="25">str_cnt<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">++<pos:position pos:line="26" pos:column="34"/></operator></expr>]<pos:position pos:line="26" pos:column="35"/></index></name> <operator pos:line="26" pos:column="36">=<pos:position pos:line="26" pos:column="37"/></operator> <literal type="string" pos:line="26" pos:column="38">"/"<pos:position pos:line="26" pos:column="41"/></literal></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif></if>
	<expr_stmt><expr><name><name pos:line="28" pos:column="9">strings<pos:position pos:line="28" pos:column="16"/></name><index pos:line="28" pos:column="16">[<expr><name pos:line="28" pos:column="17">str_cnt<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">++<pos:position pos:line="28" pos:column="26"/></operator></expr>]<pos:position pos:line="28" pos:column="27"/></index></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">name<pos:position pos:line="28" pos:column="34"/></name></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">name_is_dir<pos:position pos:line="29" pos:column="24"/></name></expr>)<pos:position pos:line="29" pos:column="25"/></condition><then pos:line="29" pos:column="25"> <block pos:line="29" pos:column="26">{
		<comment type="block" pos:line="30" pos:column="17">/* Allow a trailing "/"+"***" to match the directory. */</comment>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name><name pos:line="31" pos:column="21">ex<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">-&gt;<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="25">rflags<pos:position pos:line="31" pos:column="31"/></name></name> <operator pos:line="31" pos:column="32">&amp;<pos:position pos:line="31" pos:column="37"/></operator> <name pos:line="31" pos:column="34">FILTRULE_WILD3_SUFFIX<pos:position pos:line="31" pos:column="55"/></name></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="25">strings<pos:position pos:line="32" pos:column="32"/></name><index pos:line="32" pos:column="32">[<expr><name pos:line="32" pos:column="33">str_cnt<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">++<pos:position pos:line="32" pos:column="42"/></operator></expr>]<pos:position pos:line="32" pos:column="43"/></index></name> <operator pos:line="32" pos:column="44">=<pos:position pos:line="32" pos:column="45"/></operator> <literal type="string" pos:line="32" pos:column="46">"/"<pos:position pos:line="32" pos:column="49"/></literal></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></then> <elseif pos:line="33" pos:column="11">else <if pos:line="33" pos:column="16">if <condition pos:line="33" pos:column="19">(<expr><name><name pos:line="33" pos:column="20">ex<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">rflags<pos:position pos:line="33" pos:column="30"/></name></name> <operator pos:line="33" pos:column="31">&amp;<pos:position pos:line="33" pos:column="36"/></operator> <name pos:line="33" pos:column="33">FILTRULE_DIRECTORY<pos:position pos:line="33" pos:column="51"/></name></expr>)<pos:position pos:line="33" pos:column="52"/></condition><then pos:line="33" pos:column="52">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">!<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">ret_match<pos:position pos:line="34" pos:column="34"/></name></expr>;<pos:position pos:line="34" pos:column="35"/></return></block></then></if></elseif></if>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">strings<pos:position pos:line="35" pos:column="16"/></name><index pos:line="35" pos:column="16">[<expr><name pos:line="35" pos:column="17">str_cnt<pos:position pos:line="35" pos:column="24"/></name></expr>]<pos:position pos:line="35" pos:column="25"/></index></name> <operator pos:line="35" pos:column="26">=<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">NULL<pos:position pos:line="35" pos:column="32"/></name></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>

	<if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">pattern<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">==<pos:position pos:line="37" pos:column="24"/></operator> <literal type="char" pos:line="37" pos:column="25">'/'<pos:position pos:line="37" pos:column="28"/></literal></expr>)<pos:position pos:line="37" pos:column="29"/></condition><then pos:line="37" pos:column="29"> <block pos:line="37" pos:column="30">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">anchored_match<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <literal type="number" pos:line="38" pos:column="34">1<pos:position pos:line="38" pos:column="35"/></literal></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">pattern<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">++<pos:position pos:line="39" pos:column="26"/></operator></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><operator pos:line="42" pos:column="13">!<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">anchored_match<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">&amp;&amp;<pos:position pos:line="42" pos:column="39"/></operator> <name><name pos:line="42" pos:column="32">ex<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">-&gt;<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="36">u<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">.<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="38">slash_cnt<pos:position pos:line="42" pos:column="47"/></name></name>
	    <operator pos:line="43" pos:column="13">&amp;&amp;<pos:position pos:line="43" pos:column="23"/></operator> <operator pos:line="43" pos:column="16">!<pos:position pos:line="43" pos:column="17"/></operator><operator pos:line="43" pos:column="17">(<pos:position pos:line="43" pos:column="18"/></operator><name><name pos:line="43" pos:column="18">ex<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-&gt;<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="22">rflags<pos:position pos:line="43" pos:column="28"/></name></name> <operator pos:line="43" pos:column="29">&amp;<pos:position pos:line="43" pos:column="34"/></operator> <name pos:line="43" pos:column="31">FILTRULE_WILD2<pos:position pos:line="43" pos:column="45"/></name><operator pos:line="43" pos:column="45">)<pos:position pos:line="43" pos:column="46"/></operator></expr>)<pos:position pos:line="43" pos:column="47"/></condition><then pos:line="43" pos:column="47"> <block pos:line="43" pos:column="48">{
		<comment type="block" pos:line="44" pos:column="17">/* A non-anchored match with an infix slash and no "**"
		 * needs to match the last slash_cnt+1 name elements. */</comment>
		<expr_stmt><expr><name pos:line="46" pos:column="17">slash_handling<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <name><name pos:line="46" pos:column="34">ex<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">u<pos:position pos:line="46" pos:column="39"/></name><operator pos:line="46" pos:column="39">.<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="40">slash_cnt<pos:position pos:line="46" pos:column="49"/></name></name> <operator pos:line="46" pos:column="50">+<pos:position pos:line="46" pos:column="51"/></operator> <literal type="number" pos:line="46" pos:column="52">1<pos:position pos:line="46" pos:column="53"/></literal></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></then> <elseif pos:line="47" pos:column="11">else <if pos:line="47" pos:column="16">if <condition pos:line="47" pos:column="19">(<expr><operator pos:line="47" pos:column="20">!<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="21">anchored_match<pos:position pos:line="47" pos:column="35"/></name> <operator pos:line="47" pos:column="36">&amp;&amp;<pos:position pos:line="47" pos:column="46"/></operator> <operator pos:line="47" pos:column="39">!<pos:position pos:line="47" pos:column="40"/></operator><operator pos:line="47" pos:column="40">(<pos:position pos:line="47" pos:column="41"/></operator><name><name pos:line="47" pos:column="41">ex<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">rflags<pos:position pos:line="47" pos:column="51"/></name></name> <operator pos:line="47" pos:column="52">&amp;<pos:position pos:line="47" pos:column="57"/></operator> <name pos:line="47" pos:column="54">FILTRULE_WILD2_PREFIX<pos:position pos:line="47" pos:column="75"/></name><operator pos:line="47" pos:column="75">)<pos:position pos:line="47" pos:column="76"/></operator>
				   <operator pos:line="48" pos:column="36">&amp;&amp;<pos:position pos:line="48" pos:column="46"/></operator> <name><name pos:line="48" pos:column="39">ex<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">-&gt;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="43">rflags<pos:position pos:line="48" pos:column="49"/></name></name> <operator pos:line="48" pos:column="50">&amp;<pos:position pos:line="48" pos:column="55"/></operator> <name pos:line="48" pos:column="52">FILTRULE_WILD2<pos:position pos:line="48" pos:column="66"/></name></expr>)<pos:position pos:line="48" pos:column="67"/></condition><then pos:line="48" pos:column="67"> <block pos:line="48" pos:column="68">{
		<comment type="block" pos:line="49" pos:column="17">/* A non-anchored match with an infix or trailing "**" (but not
		 * a prefixed "**") needs to try matching after every slash. */</comment>
		<expr_stmt><expr><name pos:line="51" pos:column="17">slash_handling<pos:position pos:line="51" pos:column="31"/></name> <operator pos:line="51" pos:column="32">=<pos:position pos:line="51" pos:column="33"/></operator> <operator pos:line="51" pos:column="34">-<pos:position pos:line="51" pos:column="35"/></operator><literal type="number" pos:line="51" pos:column="35">1<pos:position pos:line="51" pos:column="36"/></literal></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif> <else pos:line="52" pos:column="11">else <block pos:line="52" pos:column="16">{
		<comment type="block" pos:line="53" pos:column="17">/* The pattern matches only at the start of the path or name. */</comment>
		<expr_stmt><expr><name pos:line="54" pos:column="17">slash_handling<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <literal type="number" pos:line="54" pos:column="34">0<pos:position pos:line="54" pos:column="35"/></literal></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="55" pos:column="10"/></block></else></if>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">ex<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">rflags<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">&amp;<pos:position pos:line="57" pos:column="29"/></operator> <name pos:line="57" pos:column="26">FILTRULE_WILD<pos:position pos:line="57" pos:column="39"/></name></expr>)<pos:position pos:line="57" pos:column="40"/></condition><then pos:line="57" pos:column="40"> <block pos:line="57" pos:column="41">{
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><call><name pos:line="58" pos:column="21">wildmatch_array<pos:position pos:line="58" pos:column="36"/></name><argument_list pos:line="58" pos:column="36">(<argument><expr><name pos:line="58" pos:column="37">pattern<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">strings<pos:position pos:line="58" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="55">slash_handling<pos:position pos:line="58" pos:column="69"/></name></expr></argument>)<pos:position pos:line="58" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="71"/></condition><then pos:line="58" pos:column="71">
			<block type="pseudo"><return pos:line="59" pos:column="25">return <expr><name pos:line="59" pos:column="32">ret_match<pos:position pos:line="59" pos:column="41"/></name></expr>;<pos:position pos:line="59" pos:column="42"/></return></block></then></if>
	}<pos:position pos:line="60" pos:column="10"/></block></then> <elseif pos:line="60" pos:column="11">else <if pos:line="60" pos:column="16">if <condition pos:line="60" pos:column="19">(<expr><name pos:line="60" pos:column="20">str_cnt<pos:position pos:line="60" pos:column="27"/></name> <operator pos:line="60" pos:column="28">&gt;<pos:position pos:line="60" pos:column="32"/></operator> <literal type="number" pos:line="60" pos:column="30">1<pos:position pos:line="60" pos:column="31"/></literal></expr>)<pos:position pos:line="60" pos:column="32"/></condition><then pos:line="60" pos:column="32"> <block pos:line="60" pos:column="33">{
		<if pos:line="61" pos:column="17">if <condition pos:line="61" pos:column="20">(<expr><call><name pos:line="61" pos:column="21">litmatch_array<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">(<argument><expr><name pos:line="61" pos:column="36">pattern<pos:position pos:line="61" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="45">strings<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">slash_handling<pos:position pos:line="61" pos:column="68"/></name></expr></argument>)<pos:position pos:line="61" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="70"/></condition><then pos:line="61" pos:column="70">
			<block type="pseudo"><return pos:line="62" pos:column="25">return <expr><name pos:line="62" pos:column="32">ret_match<pos:position pos:line="62" pos:column="41"/></name></expr>;<pos:position pos:line="62" pos:column="42"/></return></block></then></if>
	}<pos:position pos:line="63" pos:column="10"/></block></then></if></elseif> <elseif pos:line="63" pos:column="11">else <if pos:line="63" pos:column="16">if <condition pos:line="63" pos:column="19">(<expr><name pos:line="63" pos:column="20">anchored_match<pos:position pos:line="63" pos:column="34"/></name></expr>)<pos:position pos:line="63" pos:column="35"/></condition><then pos:line="63" pos:column="35"> <block pos:line="63" pos:column="36">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><call><name pos:line="64" pos:column="21">strcmp<pos:position pos:line="64" pos:column="27"/></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">name<pos:position pos:line="64" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="34">pattern<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call> <operator pos:line="64" pos:column="43">==<pos:position pos:line="64" pos:column="45"/></operator> <literal type="number" pos:line="64" pos:column="46">0<pos:position pos:line="64" pos:column="47"/></literal></expr>)<pos:position pos:line="64" pos:column="48"/></condition><then pos:line="64" pos:column="48">
			<block type="pseudo"><return pos:line="65" pos:column="25">return <expr><name pos:line="65" pos:column="32">ret_match<pos:position pos:line="65" pos:column="41"/></name></expr>;<pos:position pos:line="65" pos:column="42"/></return></block></then></if>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if></elseif> <else pos:line="66" pos:column="11">else <block pos:line="66" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="67" pos:column="17">int<pos:position pos:line="67" pos:column="20"/></name></type> <name pos:line="67" pos:column="21">l1<pos:position pos:line="67" pos:column="23"/></name> <init pos:line="67" pos:column="24">= <expr><call><name pos:line="67" pos:column="26">strlen<pos:position pos:line="67" pos:column="32"/></name><argument_list pos:line="67" pos:column="32">(<argument><expr><name pos:line="67" pos:column="33">name<pos:position pos:line="67" pos:column="37"/></name></expr></argument>)<pos:position pos:line="67" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="68" pos:column="17">int<pos:position pos:line="68" pos:column="20"/></name></type> <name pos:line="68" pos:column="21">l2<pos:position pos:line="68" pos:column="23"/></name> <init pos:line="68" pos:column="24">= <expr><call><name pos:line="68" pos:column="26">strlen<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">pattern<pos:position pos:line="68" pos:column="40"/></name></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="68" pos:column="42"/></decl_stmt>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name pos:line="69" pos:column="21">l2<pos:position pos:line="69" pos:column="23"/></name> <operator pos:line="69" pos:column="24">&lt;=<pos:position pos:line="69" pos:column="29"/></operator> <name pos:line="69" pos:column="27">l1<pos:position pos:line="69" pos:column="29"/></name> <operator pos:line="69" pos:column="30">&amp;&amp;<pos:position pos:line="69" pos:column="40"/></operator>
		    <call><name pos:line="70" pos:column="21">strcmp<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">name<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">+<pos:position pos:line="70" pos:column="33"/></operator><operator pos:line="70" pos:column="33">(<pos:position pos:line="70" pos:column="34"/></operator><name pos:line="70" pos:column="34">l1<pos:position pos:line="70" pos:column="36"/></name><operator pos:line="70" pos:column="36">-<pos:position pos:line="70" pos:column="37"/></operator><name pos:line="70" pos:column="37">l2<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">)<pos:position pos:line="70" pos:column="40"/></operator></expr></argument>,<argument><expr><name pos:line="70" pos:column="41">pattern<pos:position pos:line="70" pos:column="48"/></name></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call> <operator pos:line="70" pos:column="50">==<pos:position pos:line="70" pos:column="52"/></operator> <literal type="number" pos:line="70" pos:column="53">0<pos:position pos:line="70" pos:column="54"/></literal> <operator pos:line="70" pos:column="55">&amp;&amp;<pos:position pos:line="70" pos:column="65"/></operator>
		    <operator pos:line="71" pos:column="21">(<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="22">l1<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">==<pos:position pos:line="71" pos:column="26"/></operator><name pos:line="71" pos:column="26">l2<pos:position pos:line="71" pos:column="28"/></name> <operator pos:line="71" pos:column="29">||<pos:position pos:line="71" pos:column="31"/></operator> <name><name pos:line="71" pos:column="32">name<pos:position pos:line="71" pos:column="36"/></name><index pos:line="71" pos:column="36">[<expr><name pos:line="71" pos:column="37">l1<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">-<pos:position pos:line="71" pos:column="40"/></operator><operator pos:line="71" pos:column="40">(<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="41">l2<pos:position pos:line="71" pos:column="43"/></name><operator pos:line="71" pos:column="43">+<pos:position pos:line="71" pos:column="44"/></operator><literal type="number" pos:line="71" pos:column="44">1<pos:position pos:line="71" pos:column="45"/></literal><operator pos:line="71" pos:column="45">)<pos:position pos:line="71" pos:column="46"/></operator></expr>]<pos:position pos:line="71" pos:column="47"/></index></name> <operator pos:line="71" pos:column="48">==<pos:position pos:line="71" pos:column="50"/></operator> <literal type="char" pos:line="71" pos:column="51">'/'<pos:position pos:line="71" pos:column="54"/></literal><operator pos:line="71" pos:column="54">)<pos:position pos:line="71" pos:column="55"/></operator></expr>)<pos:position pos:line="71" pos:column="56"/></condition><then pos:line="71" pos:column="56"> <block pos:line="71" pos:column="57">{
			<return pos:line="72" pos:column="25">return <expr><name pos:line="72" pos:column="32">ret_match<pos:position pos:line="72" pos:column="41"/></name></expr>;<pos:position pos:line="72" pos:column="42"/></return>
		}<pos:position pos:line="73" pos:column="18"/></block></then></if>
	}<pos:position pos:line="74" pos:column="10"/></block></else></if>

	<return pos:line="76" pos:column="9">return <expr><operator pos:line="76" pos:column="16">!<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="17">ret_match<pos:position pos:line="76" pos:column="26"/></name></expr>;<pos:position pos:line="76" pos:column="27"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

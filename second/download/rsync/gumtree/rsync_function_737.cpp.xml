<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_737.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">add_exclude_line<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">exclude_struct<pos:position pos:line="1" pos:column="44"/></name></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier><modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier><modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">listp<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>,
		      <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">line<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">include<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">tok<pos:position pos:line="4" pos:column="18"/></name></decl>, <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="21">p<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">line<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">||<pos:position pos:line="5" pos:column="21"/></operator> <operator pos:line="5" pos:column="22">!<pos:position pos:line="5" pos:column="23"/></operator><operator pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">line<pos:position pos:line="5" pos:column="28"/></name></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29"> <block type="pseudo"><return pos:line="5" pos:column="30">return;<pos:position pos:line="5" pos:column="37"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="6" pos:column="9">p<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">strdup<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">line<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">p<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="17">out_of_memory<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><literal type="string" pos:line="7" pos:column="31">"add_exclude_line"<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt></block></then></if>
	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">tok<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator><call><name pos:line="8" pos:column="18">get_exclude_tok<pos:position pos:line="8" pos:column="33"/></name><argument_list pos:line="8" pos:column="33">(<argument><expr><name pos:line="8" pos:column="34">p<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></init> <condition><expr><name pos:line="8" pos:column="38">tok<pos:position pos:line="8" pos:column="41"/></name></expr>;<pos:position pos:line="8" pos:column="42"/></condition> <incr><expr><name pos:line="8" pos:column="43">tok<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">=<pos:position pos:line="8" pos:column="47"/></operator><call><name pos:line="8" pos:column="47">get_exclude_tok<pos:position pos:line="8" pos:column="62"/></name><argument_list pos:line="8" pos:column="62">(<argument><expr><name pos:line="8" pos:column="63">NULL<pos:position pos:line="8" pos:column="67"/></name></expr></argument>)<pos:position pos:line="8" pos:column="68"/></argument_list></call></expr></incr>)<pos:position pos:line="8" pos:column="69"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">add_exclude<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">listp<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">tok<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="41">include<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">free<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">p<pos:position pos:line="10" pos:column="15"/></name></expr></argument>)<pos:position pos:line="10" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_156_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_sums<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">sum_struct<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">f_out<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">s<pos:position pos:line="3" pos:column="14"/></name></expr>)<pos:position pos:line="3" pos:column="15"/></condition><then pos:line="3" pos:column="15"> <block pos:line="3" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">size_t<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">i<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

		<comment type="block" pos:line="6" pos:column="17">/* tell the other guy how many we are going to be
		   doing and how many bytes there are in the last
		   chunk */</comment>
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">write_int<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">f_out<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="34">s<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">count<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">write_int<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">f_out<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="34">s<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">n<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">write_int<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">(<argument><expr><name pos:line="11" pos:column="27">f_out<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="34">s<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">remainder<pos:position pos:line="11" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>

		<for pos:line="13" pos:column="17">for <control pos:line="13" pos:column="21">(<init><expr><name pos:line="13" pos:column="22">i<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></init> <condition><expr><name pos:line="13" pos:column="29">i<pos:position pos:line="13" pos:column="30"/></name> <operator pos:line="13" pos:column="31">&lt;<pos:position pos:line="13" pos:column="35"/></operator> <name><name pos:line="13" pos:column="33">s<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">count<pos:position pos:line="13" pos:column="41"/></name></name></expr>;<pos:position pos:line="13" pos:column="42"/></condition> <incr><expr><name pos:line="13" pos:column="43">i<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">++<pos:position pos:line="13" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="47"/></control> <block pos:line="13" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">write_int<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">f_out<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="42">s<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">sums<pos:position pos:line="14" pos:column="49"/></name><index pos:line="14" pos:column="49">[<expr><name pos:line="14" pos:column="50">i<pos:position pos:line="14" pos:column="51"/></name></expr>]<pos:position pos:line="14" pos:column="52"/></index></name><operator pos:line="14" pos:column="52">.<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="53">sum1<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">write_buf<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">f_out<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="42">s<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">-&gt;<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="45">sums<pos:position pos:line="15" pos:column="49"/></name><index pos:line="15" pos:column="49">[<expr><name pos:line="15" pos:column="50">i<pos:position pos:line="15" pos:column="51"/></name></expr>]<pos:position pos:line="15" pos:column="52"/></index></name><operator pos:line="15" pos:column="52">.<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="53">sum2<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">csum_length<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></for>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else <block pos:line="17" pos:column="16">{
		<comment type="block" pos:line="18" pos:column="17">/* we don't have checksums */</comment>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">write_int<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">f_out<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="34">0<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">write_int<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">f_out<pos:position pos:line="20" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="34">block_size<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">write_int<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">f_out<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="34">0<pos:position pos:line="21" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></else></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_862.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">singleOptionHelp<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">FILE<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type> <name pos:line="1" pos:column="30">fp<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">maxLeftCol<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, 
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">struct<pos:position pos:line="2" pos:column="29"/></name> <name pos:line="2" pos:column="30">poptOption<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">opt<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>,
		<comment type="block" pos:line="3" pos:column="17">/*@null@*/</comment> <parameter><decl><type><specifier pos:line="3" pos:column="28">const<pos:position pos:line="3" pos:column="33"/></specifier> <name pos:line="3" pos:column="34">char<pos:position pos:line="3" pos:column="38"/></name> <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier></type> <name pos:line="3" pos:column="41">translation_domain<pos:position pos:line="3" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="60"/></parameter_list>
	<comment type="block" pos:line="4" pos:column="9">/*@globals fileSystem @*/</comment>
	<comment type="block" pos:line="5" pos:column="9">/*@modifies *fp, fileSystem @*/</comment>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">indentLength<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">maxLeftCol<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">+<pos:position pos:line="7" pos:column="36"/></operator> <literal type="number" pos:line="7" pos:column="37">5<pos:position pos:line="7" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">lineLength<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><literal type="number" pos:line="8" pos:column="22">79<pos:position pos:line="8" pos:column="24"/></literal> <operator pos:line="8" pos:column="25">-<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">indentLength<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">unsigned<pos:position pos:line="9" pos:column="19"/></name> <name pos:line="9" pos:column="20">char<pos:position pos:line="9" pos:column="24"/></name> <modifier pos:line="9" pos:column="25">*<pos:position pos:line="9" pos:column="26"/></modifier></type> <name pos:line="9" pos:column="27">help<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><call><name pos:line="9" pos:column="34">D_<pos:position pos:line="9" pos:column="36"/></name><argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">translation_domain<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="57">opt<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">-&gt;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="62">descrip<pos:position pos:line="9" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type> <name pos:line="10" pos:column="18">argDescrip<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><call><name pos:line="10" pos:column="31">getArgDescrip<pos:position pos:line="10" pos:column="44"/></name><argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">opt<pos:position pos:line="10" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="50">translation_domain<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">helpLength<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name> <name pos:line="12" pos:column="14">char<pos:position pos:line="12" pos:column="18"/></name> <modifier pos:line="12" pos:column="19">*<pos:position pos:line="12" pos:column="20"/></modifier></type> <name pos:line="12" pos:column="21">defs<pos:position pos:line="12" pos:column="25"/></name> <init pos:line="12" pos:column="26">= <expr><name pos:line="12" pos:column="28">NULL<pos:position pos:line="12" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">unsigned<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">char<pos:position pos:line="13" pos:column="18"/></name> <modifier pos:line="13" pos:column="19">*<pos:position pos:line="13" pos:column="20"/></modifier></type> <name pos:line="13" pos:column="21">left<pos:position pos:line="13" pos:column="25"/></name></decl>;<pos:position pos:line="13" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">nb<pos:position pos:line="14" pos:column="11"/></name> <init pos:line="14" pos:column="12">= <expr><name pos:line="14" pos:column="14">maxLeftCol<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">+<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="16" pos:column="5">/* Make sure there's more than enough room in target buffer. */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">opt<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">longName<pos:position pos:line="17" pos:column="22"/></name></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">	<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">nb<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">+=<pos:position pos:line="17" pos:column="30"/></operator> <call><name pos:line="17" pos:column="31">strlen<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name><name pos:line="17" pos:column="38">opt<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">longName<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt></block></then></if>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">argDescrip<pos:position pos:line="18" pos:column="19"/></name></expr>)<pos:position pos:line="18" pos:column="20"/></condition><then pos:line="18" pos:column="20">	<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="25">nb<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">+=<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">strlen<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">argDescrip<pos:position pos:line="18" pos:column="48"/></name></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">left<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <call><name pos:line="20" pos:column="12">malloc<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">nb<pos:position pos:line="20" pos:column="21"/></name></expr></argument>)<pos:position pos:line="20" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">left<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">==<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">NULL<pos:position pos:line="21" pos:column="21"/></name></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22"> <block type="pseudo"><return pos:line="21" pos:column="23">return;<pos:position pos:line="21" pos:column="30"/></return></block></then></if>	<comment type="block" pos:line="21" pos:column="33">/* XXX can't happen */</comment>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">left<pos:position pos:line="22" pos:column="9"/></name><index pos:line="22" pos:column="9">[<expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>]<pos:position pos:line="22" pos:column="12"/></index></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="char" pos:line="22" pos:column="15">'\0'<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">left<pos:position pos:line="23" pos:column="9"/></name><index pos:line="23" pos:column="9">[<expr><name pos:line="23" pos:column="10">maxLeftCol<pos:position pos:line="23" pos:column="20"/></name></expr>]<pos:position pos:line="23" pos:column="21"/></index></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="char" pos:line="23" pos:column="24">'\0'<pos:position pos:line="23" pos:column="28"/></literal></expr>;<pos:position pos:line="23" pos:column="29"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">opt<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">longName<pos:position pos:line="25" pos:column="22"/></name></name> <operator pos:line="25" pos:column="23">&amp;&amp;<pos:position pos:line="25" pos:column="33"/></operator> <name><name pos:line="25" pos:column="26">opt<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">shortName<pos:position pos:line="25" pos:column="40"/></name></name></expr>)<pos:position pos:line="25" pos:column="41"/></condition><then pos:line="25" pos:column="41">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="9">sprintf<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">left<pos:position pos:line="26" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"-%c, %s%s"<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="36">opt<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">shortName<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>,
		<argument><expr><operator pos:line="27" pos:column="17">(<pos:position pos:line="27" pos:column="18"/></operator><ternary><condition><expr><operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><name><name pos:line="27" pos:column="19">opt<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">argInfo<pos:position pos:line="27" pos:column="31"/></name></name> <operator pos:line="27" pos:column="32">&amp;<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="34">POPT_ARGFLAG_ONEDASH<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">)<pos:position pos:line="27" pos:column="55"/></operator></expr> ?<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57"> <expr><literal type="string" pos:line="27" pos:column="58">"-"<pos:position pos:line="27" pos:column="61"/></literal></expr> <pos:position pos:line="27" pos:column="62"/></then><else pos:line="27" pos:column="62">: <expr><literal type="string" pos:line="27" pos:column="64">"--"<pos:position pos:line="27" pos:column="68"/></literal></expr></else></ternary><operator pos:line="27" pos:column="68">)<pos:position pos:line="27" pos:column="69"/></operator></expr></argument>,
		<argument><expr><name><name pos:line="28" pos:column="17">opt<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">-&gt;<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="22">longName<pos:position pos:line="28" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name><name pos:line="29" pos:column="14">opt<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">-&gt;<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="19">shortName<pos:position pos:line="29" pos:column="28"/></name></name> <operator pos:line="29" pos:column="29">!=<pos:position pos:line="29" pos:column="31"/></operator> <literal type="char" pos:line="29" pos:column="32">'\0'<pos:position pos:line="29" pos:column="36"/></literal></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37"> 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">sprintf<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><name pos:line="30" pos:column="17">left<pos:position pos:line="30" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"-%c"<pos:position pos:line="30" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="30">opt<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">shortName<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><name><name pos:line="31" pos:column="14">opt<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">longName<pos:position pos:line="31" pos:column="27"/></name></name></expr>)<pos:position pos:line="31" pos:column="28"/></condition><then pos:line="31" pos:column="28">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="9">sprintf<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">left<pos:position pos:line="32" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="23">"%s%s"<pos:position pos:line="32" pos:column="29"/></literal></expr></argument>,
		<argument><expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><ternary><condition><expr><operator pos:line="33" pos:column="18">(<pos:position pos:line="33" pos:column="19"/></operator><name><name pos:line="33" pos:column="19">opt<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">argInfo<pos:position pos:line="33" pos:column="31"/></name></name> <operator pos:line="33" pos:column="32">&amp;<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="34">POPT_ARGFLAG_ONEDASH<pos:position pos:line="33" pos:column="54"/></name><operator pos:line="33" pos:column="54">)<pos:position pos:line="33" pos:column="55"/></operator></expr> ?<pos:position pos:line="33" pos:column="57"/></condition><then pos:line="33" pos:column="57"> <expr><literal type="string" pos:line="33" pos:column="58">"-"<pos:position pos:line="33" pos:column="61"/></literal></expr> <pos:position pos:line="33" pos:column="62"/></then><else pos:line="33" pos:column="62">: <expr><literal type="string" pos:line="33" pos:column="64">"--"<pos:position pos:line="33" pos:column="68"/></literal></expr></else></ternary><operator pos:line="33" pos:column="68">)<pos:position pos:line="33" pos:column="69"/></operator></expr></argument>,
		<argument><expr><name><name pos:line="34" pos:column="17">opt<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">longName<pos:position pos:line="34" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt></block></then></if></elseif></if>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><operator pos:line="35" pos:column="9">!<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">left<pos:position pos:line="35" pos:column="15"/></name></expr>)<pos:position pos:line="35" pos:column="16"/></condition><then pos:line="35" pos:column="16"> <block type="pseudo"><goto pos:line="35" pos:column="17">goto <name pos:line="35" pos:column="22">out<pos:position pos:line="35" pos:column="25"/></name>;<pos:position pos:line="35" pos:column="26"/></goto></block></then></if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">argDescrip<pos:position pos:line="36" pos:column="19"/></name></expr>)<pos:position pos:line="36" pos:column="20"/></condition><then pos:line="36" pos:column="20"> <block pos:line="36" pos:column="21">{
	<decl_stmt><decl><type><name pos:line="37" pos:column="9">char<pos:position pos:line="37" pos:column="13"/></name> <modifier pos:line="37" pos:column="14">*<pos:position pos:line="37" pos:column="15"/></modifier></type> <name pos:line="37" pos:column="16">le<pos:position pos:line="37" pos:column="18"/></name> <init pos:line="37" pos:column="19">= <expr><name pos:line="37" pos:column="21">left<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">+<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">strlen<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">left<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="41"/></decl_stmt>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name><name pos:line="39" pos:column="13">opt<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">argInfo<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">&amp;<pos:position pos:line="39" pos:column="31"/></operator> <name pos:line="39" pos:column="28">POPT_ARGFLAG_OPTIONAL<pos:position pos:line="39" pos:column="49"/></name></expr>)<pos:position pos:line="39" pos:column="50"/></condition><then pos:line="39" pos:column="50">
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">le<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">++<pos:position pos:line="40" pos:column="18"/></operator> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <literal type="char" pos:line="40" pos:column="21">'['<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="42" pos:column="9">/* Choose type of output */</comment>
	<comment type="block" pos:line="43" pos:column="9">/*@-branchstate@*/</comment>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">opt<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">argInfo<pos:position pos:line="44" pos:column="25"/></name></name> <operator pos:line="44" pos:column="26">&amp;<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="28">POPT_ARGFLAG_SHOW_DEFAULT<pos:position pos:line="44" pos:column="53"/></name></expr>)<pos:position pos:line="44" pos:column="54"/></condition><then pos:line="44" pos:column="54"> <block pos:line="44" pos:column="55">{
	    <expr_stmt><expr><name pos:line="45" pos:column="13">defs<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">singleOptionDefaultValue<pos:position pos:line="45" pos:column="44"/></name><argument_list pos:line="45" pos:column="44">(<argument><expr><name pos:line="45" pos:column="45">lineLength<pos:position pos:line="45" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">opt<pos:position pos:line="45" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="62">translation_domain<pos:position pos:line="45" pos:column="80"/></name></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="82"/></expr_stmt>
	    <if pos:line="46" pos:column="13">if <condition pos:line="46" pos:column="16">(<expr><name pos:line="46" pos:column="17">defs<pos:position pos:line="46" pos:column="21"/></name></expr>)<pos:position pos:line="46" pos:column="22"/></condition><then pos:line="46" pos:column="22"> <block pos:line="46" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">char<pos:position pos:line="47" pos:column="21"/></name> <modifier pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></modifier></type> <name pos:line="47" pos:column="24">t<pos:position pos:line="47" pos:column="25"/></name> <init pos:line="47" pos:column="26">= <expr><call><name pos:line="47" pos:column="28">malloc<pos:position pos:line="47" pos:column="34"/></name><argument_list pos:line="47" pos:column="34">(<argument><expr><operator pos:line="47" pos:column="35">(<pos:position pos:line="47" pos:column="36"/></operator><ternary><condition><expr><name pos:line="47" pos:column="36">help<pos:position pos:line="47" pos:column="40"/></name></expr> ?<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42"> <expr><call><name pos:line="47" pos:column="43">strlen<pos:position pos:line="47" pos:column="49"/></name><argument_list pos:line="47" pos:column="49">(<argument><expr><name pos:line="47" pos:column="50">help<pos:position pos:line="47" pos:column="54"/></name></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr> <pos:position pos:line="47" pos:column="56"/></then><else pos:line="47" pos:column="56">: <expr><literal type="number" pos:line="47" pos:column="58">0<pos:position pos:line="47" pos:column="59"/></literal></expr></else></ternary><operator pos:line="47" pos:column="59">)<pos:position pos:line="47" pos:column="60"/></operator> <operator pos:line="47" pos:column="61">+<pos:position pos:line="47" pos:column="62"/></operator>
				<call><name pos:line="48" pos:column="33">strlen<pos:position pos:line="48" pos:column="39"/></name><argument_list pos:line="48" pos:column="39">(<argument><expr><name pos:line="48" pos:column="40">defs<pos:position pos:line="48" pos:column="44"/></name></expr></argument>)<pos:position pos:line="48" pos:column="45"/></argument_list></call> <operator pos:line="48" pos:column="46">+<pos:position pos:line="48" pos:column="47"/></operator> <sizeof pos:line="48" pos:column="48">sizeof<argument_list pos:line="48" pos:column="54">(<argument><expr><literal type="string" pos:line="48" pos:column="55">" "<pos:position pos:line="48" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="48" pos:column="61"/></decl_stmt>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><name pos:line="49" pos:column="21">t<pos:position pos:line="49" pos:column="22"/></name></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23"> <block pos:line="49" pos:column="24">{
		    <decl_stmt><decl><type><name pos:line="50" pos:column="21">char<pos:position pos:line="50" pos:column="25"/></name> <modifier pos:line="50" pos:column="26">*<pos:position pos:line="50" pos:column="27"/></modifier></type> <name pos:line="50" pos:column="28">te<pos:position pos:line="50" pos:column="30"/></name> <init pos:line="50" pos:column="31">= <expr><name pos:line="50" pos:column="33">t<pos:position pos:line="50" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="35"/></decl_stmt>
		    <expr_stmt><expr><operator pos:line="51" pos:column="21">*<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">te<pos:position pos:line="51" pos:column="24"/></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <literal type="char" pos:line="51" pos:column="27">'\0'<pos:position pos:line="51" pos:column="31"/></literal></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>
		    <if pos:line="52" pos:column="21">if <condition pos:line="52" pos:column="24">(<expr><name pos:line="52" pos:column="25">help<pos:position pos:line="52" pos:column="29"/></name></expr>)<pos:position pos:line="52" pos:column="30"/></condition><then pos:line="52" pos:column="30"> <block pos:line="52" pos:column="31">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">strcpy<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">te<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="36">help<pos:position pos:line="53" pos:column="40"/></name></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="42"/></expr_stmt>	<expr_stmt><expr><name pos:line="53" pos:column="49">te<pos:position pos:line="53" pos:column="51"/></name> <operator pos:line="53" pos:column="52">+=<pos:position pos:line="53" pos:column="54"/></operator> <call><name pos:line="53" pos:column="55">strlen<pos:position pos:line="53" pos:column="61"/></name><argument_list pos:line="53" pos:column="61">(<argument><expr><name pos:line="53" pos:column="62">te<pos:position pos:line="53" pos:column="64"/></name></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt>
		    }<pos:position pos:line="54" pos:column="22"/></block></then></if>
		    <expr_stmt><expr><operator pos:line="55" pos:column="21">*<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">te<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">++<pos:position pos:line="55" pos:column="26"/></operator> <operator pos:line="55" pos:column="27">=<pos:position pos:line="55" pos:column="28"/></operator> <literal type="char" pos:line="55" pos:column="29">' '<pos:position pos:line="55" pos:column="32"/></literal></expr>;<pos:position pos:line="55" pos:column="33"/></expr_stmt>
		    <expr_stmt><expr><call><name pos:line="56" pos:column="21">strcpy<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name pos:line="56" pos:column="28">te<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="32">defs<pos:position pos:line="56" pos:column="36"/></name></expr></argument>)<pos:position pos:line="56" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="38"/></expr_stmt>
		    <expr_stmt><expr><name pos:line="57" pos:column="21">defs<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">=<pos:position pos:line="57" pos:column="27"/></operator> <call><name pos:line="57" pos:column="28">_free<pos:position pos:line="57" pos:column="33"/></name><argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">defs<pos:position pos:line="57" pos:column="38"/></name></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="58" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="59" pos:column="17">defs<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">t<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
	    }<pos:position pos:line="60" pos:column="14"/></block></then></if>
	}<pos:position pos:line="61" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="62" pos:column="9">/*@=branchstate@*/</comment>

	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name><name pos:line="64" pos:column="13">opt<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">argDescrip<pos:position pos:line="64" pos:column="28"/></name></name> <operator pos:line="64" pos:column="29">==<pos:position pos:line="64" pos:column="31"/></operator> <name pos:line="64" pos:column="32">NULL<pos:position pos:line="64" pos:column="36"/></name></expr>)<pos:position pos:line="64" pos:column="37"/></condition><then pos:line="64" pos:column="37"> <block pos:line="64" pos:column="38">{
	    <switch pos:line="65" pos:column="13">switch <condition pos:line="65" pos:column="20">(<expr><name><name pos:line="65" pos:column="21">opt<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">-&gt;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="26">argInfo<pos:position pos:line="65" pos:column="33"/></name></name> <operator pos:line="65" pos:column="34">&amp;<pos:position pos:line="65" pos:column="39"/></operator> <name pos:line="65" pos:column="36">POPT_ARG_MASK<pos:position pos:line="65" pos:column="49"/></name></expr>)<pos:position pos:line="65" pos:column="50"/></condition> <block pos:line="65" pos:column="51">{
	    <case pos:line="66" pos:column="13">case <expr><name pos:line="66" pos:column="18">POPT_ARG_NONE<pos:position pos:line="66" pos:column="31"/></name></expr>:<pos:position pos:line="66" pos:column="32"/></case>
		<break pos:line="67" pos:column="17">break;<pos:position pos:line="67" pos:column="23"/></break>
	    <case pos:line="68" pos:column="13">case <expr><name pos:line="68" pos:column="18">POPT_ARG_VAL<pos:position pos:line="68" pos:column="30"/></name></expr>:<pos:position pos:line="68" pos:column="31"/></case>
	    <block pos:line="69" pos:column="13">{	<decl_stmt><decl><type><name pos:line="69" pos:column="17">long<pos:position pos:line="69" pos:column="21"/></name></type> <name pos:line="69" pos:column="22">aLong<pos:position pos:line="69" pos:column="27"/></name> <init pos:line="69" pos:column="28">= <expr><name><name pos:line="69" pos:column="30">opt<pos:position pos:line="69" pos:column="33"/></name><operator pos:line="69" pos:column="33">-&gt;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="35">val<pos:position pos:line="69" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="69" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="70" pos:column="17">int<pos:position pos:line="70" pos:column="20"/></name></type> <name pos:line="70" pos:column="21">ops<pos:position pos:line="70" pos:column="24"/></name> <init pos:line="70" pos:column="25">= <expr><operator pos:line="70" pos:column="27">(<pos:position pos:line="70" pos:column="28"/></operator><name><name pos:line="70" pos:column="28">opt<pos:position pos:line="70" pos:column="31"/></name><operator pos:line="70" pos:column="31">-&gt;<pos:position pos:line="70" pos:column="36"/></operator><name pos:line="70" pos:column="33">argInfo<pos:position pos:line="70" pos:column="40"/></name></name> <operator pos:line="70" pos:column="41">&amp;<pos:position pos:line="70" pos:column="46"/></operator> <name pos:line="70" pos:column="43">POPT_ARGFLAG_LOGICALOPS<pos:position pos:line="70" pos:column="66"/></name><operator pos:line="70" pos:column="66">)<pos:position pos:line="70" pos:column="67"/></operator></expr></init></decl>;<pos:position pos:line="70" pos:column="68"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="71" pos:column="17">int<pos:position pos:line="71" pos:column="20"/></name></type> <name pos:line="71" pos:column="21">negate<pos:position pos:line="71" pos:column="27"/></name> <init pos:line="71" pos:column="28">= <expr><operator pos:line="71" pos:column="30">(<pos:position pos:line="71" pos:column="31"/></operator><name><name pos:line="71" pos:column="31">opt<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">argInfo<pos:position pos:line="71" pos:column="43"/></name></name> <operator pos:line="71" pos:column="44">&amp;<pos:position pos:line="71" pos:column="49"/></operator> <name pos:line="71" pos:column="46">POPT_ARGFLAG_NOT<pos:position pos:line="71" pos:column="62"/></name><operator pos:line="71" pos:column="62">)<pos:position pos:line="71" pos:column="63"/></operator></expr></init></decl>;<pos:position pos:line="71" pos:column="64"/></decl_stmt>

		<comment type="block" pos:line="73" pos:column="17">/* Don't bother displaying typical values */</comment>
		<if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><operator pos:line="74" pos:column="21">!<pos:position pos:line="74" pos:column="22"/></operator><name pos:line="74" pos:column="22">ops<pos:position pos:line="74" pos:column="25"/></name> <operator pos:line="74" pos:column="26">&amp;&amp;<pos:position pos:line="74" pos:column="36"/></operator> <operator pos:line="74" pos:column="29">(<pos:position pos:line="74" pos:column="30"/></operator><name pos:line="74" pos:column="30">aLong<pos:position pos:line="74" pos:column="35"/></name> <operator pos:line="74" pos:column="36">==<pos:position pos:line="74" pos:column="38"/></operator> <literal type="number" pos:line="74" pos:column="39">0L<pos:position pos:line="74" pos:column="41"/></literal> <operator pos:line="74" pos:column="42">||<pos:position pos:line="74" pos:column="44"/></operator> <name pos:line="74" pos:column="45">aLong<pos:position pos:line="74" pos:column="50"/></name> <operator pos:line="74" pos:column="51">==<pos:position pos:line="74" pos:column="53"/></operator> <literal type="number" pos:line="74" pos:column="54">1L<pos:position pos:line="74" pos:column="56"/></literal> <operator pos:line="74" pos:column="57">||<pos:position pos:line="74" pos:column="59"/></operator> <name pos:line="74" pos:column="60">aLong<pos:position pos:line="74" pos:column="65"/></name> <operator pos:line="74" pos:column="66">==<pos:position pos:line="74" pos:column="68"/></operator> <operator pos:line="74" pos:column="69">-<pos:position pos:line="74" pos:column="70"/></operator><literal type="number" pos:line="74" pos:column="70">1L<pos:position pos:line="74" pos:column="72"/></literal><operator pos:line="74" pos:column="72">)<pos:position pos:line="74" pos:column="73"/></operator></expr>)<pos:position pos:line="74" pos:column="74"/></condition><then pos:line="74" pos:column="74">
		    <block type="pseudo"><break pos:line="75" pos:column="21">break;<pos:position pos:line="75" pos:column="27"/></break></block></then></if>
		<expr_stmt><expr><operator pos:line="76" pos:column="17">*<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="18">le<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">++<pos:position pos:line="76" pos:column="22"/></operator> <operator pos:line="76" pos:column="23">=<pos:position pos:line="76" pos:column="24"/></operator> <literal type="char" pos:line="76" pos:column="25">'['<pos:position pos:line="76" pos:column="28"/></literal></expr>;<pos:position pos:line="76" pos:column="29"/></expr_stmt>
		<switch pos:line="77" pos:column="17">switch <condition pos:line="77" pos:column="24">(<expr><name pos:line="77" pos:column="25">ops<pos:position pos:line="77" pos:column="28"/></name></expr>)<pos:position pos:line="77" pos:column="29"/></condition> <block pos:line="77" pos:column="30">{
		<case pos:line="78" pos:column="17">case <expr><name pos:line="78" pos:column="22">POPT_ARGFLAG_OR<pos:position pos:line="78" pos:column="37"/></name></expr>:<pos:position pos:line="78" pos:column="38"/></case>
		    <expr_stmt><expr><operator pos:line="79" pos:column="21">*<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="22">le<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">++<pos:position pos:line="79" pos:column="26"/></operator> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <literal type="char" pos:line="79" pos:column="29">'|'<pos:position pos:line="79" pos:column="32"/></literal></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
		    <comment type="block" pos:line="80" pos:column="21">/*@innerbreak@*/</comment> <break pos:line="80" pos:column="38">break;<pos:position pos:line="80" pos:column="44"/></break>
		<case pos:line="81" pos:column="17">case <expr><name pos:line="81" pos:column="22">POPT_ARGFLAG_AND<pos:position pos:line="81" pos:column="38"/></name></expr>:<pos:position pos:line="81" pos:column="39"/></case>
		    <expr_stmt><expr><operator pos:line="82" pos:column="21">*<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="22">le<pos:position pos:line="82" pos:column="24"/></name><operator pos:line="82" pos:column="24">++<pos:position pos:line="82" pos:column="26"/></operator> <operator pos:line="82" pos:column="27">=<pos:position pos:line="82" pos:column="28"/></operator> <literal type="char" pos:line="82" pos:column="29">'&amp;'<pos:position pos:line="82" pos:column="36"/></literal></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>
		    <comment type="block" pos:line="83" pos:column="21">/*@innerbreak@*/</comment> <break pos:line="83" pos:column="38">break;<pos:position pos:line="83" pos:column="44"/></break>
		<case pos:line="84" pos:column="17">case <expr><name pos:line="84" pos:column="22">POPT_ARGFLAG_XOR<pos:position pos:line="84" pos:column="38"/></name></expr>:<pos:position pos:line="84" pos:column="39"/></case>
		    <expr_stmt><expr><operator pos:line="85" pos:column="21">*<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">le<pos:position pos:line="85" pos:column="24"/></name><operator pos:line="85" pos:column="24">++<pos:position pos:line="85" pos:column="26"/></operator> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <literal type="char" pos:line="85" pos:column="29">'^'<pos:position pos:line="85" pos:column="32"/></literal></expr>;<pos:position pos:line="85" pos:column="33"/></expr_stmt>
		    <comment type="block" pos:line="86" pos:column="21">/*@innerbreak@*/</comment> <break pos:line="86" pos:column="38">break;<pos:position pos:line="86" pos:column="44"/></break>
		<default pos:line="87" pos:column="17">default:<pos:position pos:line="87" pos:column="25"/></default>
		    <comment type="block" pos:line="88" pos:column="21">/*@innerbreak@*/</comment> <break pos:line="88" pos:column="38">break;<pos:position pos:line="88" pos:column="44"/></break>
		}<pos:position pos:line="89" pos:column="18"/></block></switch>
		<expr_stmt><expr><operator pos:line="90" pos:column="17">*<pos:position pos:line="90" pos:column="18"/></operator><name pos:line="90" pos:column="18">le<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">++<pos:position pos:line="90" pos:column="22"/></operator> <operator pos:line="90" pos:column="23">=<pos:position pos:line="90" pos:column="24"/></operator> <literal type="char" pos:line="90" pos:column="25">'='<pos:position pos:line="90" pos:column="28"/></literal></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name pos:line="91" pos:column="21">negate<pos:position pos:line="91" pos:column="27"/></name></expr>)<pos:position pos:line="91" pos:column="28"/></condition><then pos:line="91" pos:column="28"> <block type="pseudo"><expr_stmt><expr><operator pos:line="91" pos:column="29">*<pos:position pos:line="91" pos:column="30"/></operator><name pos:line="91" pos:column="30">le<pos:position pos:line="91" pos:column="32"/></name><operator pos:line="91" pos:column="32">++<pos:position pos:line="91" pos:column="34"/></operator> <operator pos:line="91" pos:column="35">=<pos:position pos:line="91" pos:column="36"/></operator> <literal type="char" pos:line="91" pos:column="37">'~'<pos:position pos:line="91" pos:column="40"/></literal></expr>;<pos:position pos:line="91" pos:column="41"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="92" pos:column="17">/*@-formatconst@*/</comment>
		<expr_stmt><expr><call><name pos:line="93" pos:column="17">sprintf<pos:position pos:line="93" pos:column="24"/></name><argument_list pos:line="93" pos:column="24">(<argument><expr><name pos:line="93" pos:column="25">le<pos:position pos:line="93" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="29">(<pos:position pos:line="93" pos:column="30"/></operator><ternary><condition><expr><name pos:line="93" pos:column="30">ops<pos:position pos:line="93" pos:column="33"/></name></expr> ?<pos:position pos:line="93" pos:column="35"/></condition><then pos:line="93" pos:column="35"> <expr><literal type="string" pos:line="93" pos:column="36">"0x%lx"<pos:position pos:line="93" pos:column="43"/></literal></expr> <pos:position pos:line="93" pos:column="44"/></then><else pos:line="93" pos:column="44">: <expr><literal type="string" pos:line="93" pos:column="46">"%ld"<pos:position pos:line="93" pos:column="51"/></literal></expr></else></ternary><operator pos:line="93" pos:column="51">)<pos:position pos:line="93" pos:column="52"/></operator></expr></argument>, <argument><expr><name pos:line="93" pos:column="54">aLong<pos:position pos:line="93" pos:column="59"/></name></expr></argument>)<pos:position pos:line="93" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="94" pos:column="17">le<pos:position pos:line="94" pos:column="19"/></name> <operator pos:line="94" pos:column="20">+=<pos:position pos:line="94" pos:column="22"/></operator> <call><name pos:line="94" pos:column="23">strlen<pos:position pos:line="94" pos:column="29"/></name><argument_list pos:line="94" pos:column="29">(<argument><expr><name pos:line="94" pos:column="30">le<pos:position pos:line="94" pos:column="32"/></name></expr></argument>)<pos:position pos:line="94" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="34"/></expr_stmt>
		<comment type="block" pos:line="95" pos:column="17">/*@=formatconst@*/</comment>
		<expr_stmt><expr><operator pos:line="96" pos:column="17">*<pos:position pos:line="96" pos:column="18"/></operator><name pos:line="96" pos:column="18">le<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">++<pos:position pos:line="96" pos:column="22"/></operator> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <literal type="char" pos:line="96" pos:column="25">']'<pos:position pos:line="96" pos:column="28"/></literal></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt>
	    }<pos:position pos:line="97" pos:column="14"/></block>	<break pos:line="97" pos:column="17">break;<pos:position pos:line="97" pos:column="23"/></break>
	    <case pos:line="98" pos:column="13">case <expr><name pos:line="98" pos:column="18">POPT_ARG_INT<pos:position pos:line="98" pos:column="30"/></name></expr>:<pos:position pos:line="98" pos:column="31"/></case>
	    <case pos:line="99" pos:column="13">case <expr><name pos:line="99" pos:column="18">POPT_ARG_LONG<pos:position pos:line="99" pos:column="31"/></name></expr>:<pos:position pos:line="99" pos:column="32"/></case>
	    <case pos:line="100" pos:column="13">case <expr><name pos:line="100" pos:column="18">POPT_ARG_FLOAT<pos:position pos:line="100" pos:column="32"/></name></expr>:<pos:position pos:line="100" pos:column="33"/></case>
	    <case pos:line="101" pos:column="13">case <expr><name pos:line="101" pos:column="18">POPT_ARG_DOUBLE<pos:position pos:line="101" pos:column="33"/></name></expr>:<pos:position pos:line="101" pos:column="34"/></case>
	    <case pos:line="102" pos:column="13">case <expr><name pos:line="102" pos:column="18">POPT_ARG_STRING<pos:position pos:line="102" pos:column="33"/></name></expr>:<pos:position pos:line="102" pos:column="34"/></case>
		<expr_stmt><expr><operator pos:line="103" pos:column="17">*<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="18">le<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">++<pos:position pos:line="103" pos:column="22"/></operator> <operator pos:line="103" pos:column="23">=<pos:position pos:line="103" pos:column="24"/></operator> <literal type="char" pos:line="103" pos:column="25">'='<pos:position pos:line="103" pos:column="28"/></literal></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">strcpy<pos:position pos:line="104" pos:column="23"/></name><argument_list pos:line="104" pos:column="23">(<argument><expr><name pos:line="104" pos:column="24">le<pos:position pos:line="104" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="28">argDescrip<pos:position pos:line="104" pos:column="38"/></name></expr></argument>)<pos:position pos:line="104" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="40"/></expr_stmt>		<expr_stmt><expr><name pos:line="104" pos:column="49">le<pos:position pos:line="104" pos:column="51"/></name> <operator pos:line="104" pos:column="52">+=<pos:position pos:line="104" pos:column="54"/></operator> <call><name pos:line="104" pos:column="55">strlen<pos:position pos:line="104" pos:column="61"/></name><argument_list pos:line="104" pos:column="61">(<argument><expr><name pos:line="104" pos:column="62">le<pos:position pos:line="104" pos:column="64"/></name></expr></argument>)<pos:position pos:line="104" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="66"/></expr_stmt>
		<break pos:line="105" pos:column="17">break;<pos:position pos:line="105" pos:column="23"/></break>
	    <default pos:line="106" pos:column="13">default:<pos:position pos:line="106" pos:column="21"/></default>
		<break pos:line="107" pos:column="17">break;<pos:position pos:line="107" pos:column="23"/></break>
	    }<pos:position pos:line="108" pos:column="14"/></block></switch>
	}<pos:position pos:line="109" pos:column="10"/></block></then> <else pos:line="109" pos:column="11">else <block pos:line="109" pos:column="16">{
	    <expr_stmt><expr><operator pos:line="110" pos:column="13">*<pos:position pos:line="110" pos:column="14"/></operator><name pos:line="110" pos:column="14">le<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">++<pos:position pos:line="110" pos:column="18"/></operator> <operator pos:line="110" pos:column="19">=<pos:position pos:line="110" pos:column="20"/></operator> <literal type="char" pos:line="110" pos:column="21">'='<pos:position pos:line="110" pos:column="24"/></literal></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="111" pos:column="13">strcpy<pos:position pos:line="111" pos:column="19"/></name><argument_list pos:line="111" pos:column="19">(<argument><expr><name pos:line="111" pos:column="20">le<pos:position pos:line="111" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="24">argDescrip<pos:position pos:line="111" pos:column="34"/></name></expr></argument>)<pos:position pos:line="111" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="36"/></expr_stmt>		<expr_stmt><expr><name pos:line="111" pos:column="49">le<pos:position pos:line="111" pos:column="51"/></name> <operator pos:line="111" pos:column="52">+=<pos:position pos:line="111" pos:column="54"/></operator> <call><name pos:line="111" pos:column="55">strlen<pos:position pos:line="111" pos:column="61"/></name><argument_list pos:line="111" pos:column="61">(<argument><expr><name pos:line="111" pos:column="62">le<pos:position pos:line="111" pos:column="64"/></name></expr></argument>)<pos:position pos:line="111" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="10"/></block></else></if>
	<if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name><name pos:line="113" pos:column="13">opt<pos:position pos:line="113" pos:column="16"/></name><operator pos:line="113" pos:column="16">-&gt;<pos:position pos:line="113" pos:column="21"/></operator><name pos:line="113" pos:column="18">argInfo<pos:position pos:line="113" pos:column="25"/></name></name> <operator pos:line="113" pos:column="26">&amp;<pos:position pos:line="113" pos:column="31"/></operator> <name pos:line="113" pos:column="28">POPT_ARGFLAG_OPTIONAL<pos:position pos:line="113" pos:column="49"/></name></expr>)<pos:position pos:line="113" pos:column="50"/></condition><then pos:line="113" pos:column="50">
	    <block type="pseudo"><expr_stmt><expr><operator pos:line="114" pos:column="13">*<pos:position pos:line="114" pos:column="14"/></operator><name pos:line="114" pos:column="14">le<pos:position pos:line="114" pos:column="16"/></name><operator pos:line="114" pos:column="16">++<pos:position pos:line="114" pos:column="18"/></operator> <operator pos:line="114" pos:column="19">=<pos:position pos:line="114" pos:column="20"/></operator> <literal type="char" pos:line="114" pos:column="21">']'<pos:position pos:line="114" pos:column="24"/></literal></expr>;<pos:position pos:line="114" pos:column="25"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="115" pos:column="9">*<pos:position pos:line="115" pos:column="10"/></operator><name pos:line="115" pos:column="10">le<pos:position pos:line="115" pos:column="12"/></name> <operator pos:line="115" pos:column="13">=<pos:position pos:line="115" pos:column="14"/></operator> <literal type="char" pos:line="115" pos:column="15">'\0'<pos:position pos:line="115" pos:column="19"/></literal></expr>;<pos:position pos:line="115" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>

    <if pos:line="118" pos:column="5">if <condition pos:line="118" pos:column="8">(<expr><name pos:line="118" pos:column="9">help<pos:position pos:line="118" pos:column="13"/></name></expr>)<pos:position pos:line="118" pos:column="14"/></condition><then pos:line="118" pos:column="14">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="119" pos:column="9">fprintf<pos:position pos:line="119" pos:column="16"/></name><argument_list pos:line="119" pos:column="16">(<argument><expr><name pos:line="119" pos:column="17">fp<pos:position pos:line="119" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="119" pos:column="20">"  %-*s   "<pos:position pos:line="119" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="33">maxLeftCol<pos:position pos:line="119" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="45">left<pos:position pos:line="119" pos:column="49"/></name></expr></argument>)<pos:position pos:line="119" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="51"/></expr_stmt></block></then>
    <else pos:line="120" pos:column="5">else <block pos:line="120" pos:column="10">{
	<expr_stmt><expr><call><name pos:line="121" pos:column="9">fprintf<pos:position pos:line="121" pos:column="16"/></name><argument_list pos:line="121" pos:column="16">(<argument><expr><name pos:line="121" pos:column="17">fp<pos:position pos:line="121" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="121" pos:column="20">"  %s\n"<pos:position pos:line="121" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="30">left<pos:position pos:line="121" pos:column="34"/></name></expr></argument>)<pos:position pos:line="121" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="36"/></expr_stmt> 
	<goto pos:line="122" pos:column="9">goto <name pos:line="122" pos:column="14">out<pos:position pos:line="122" pos:column="17"/></name>;<pos:position pos:line="122" pos:column="18"/></goto>
    }<pos:position pos:line="123" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="125" pos:column="5">left<pos:position pos:line="125" pos:column="9"/></name> <operator pos:line="125" pos:column="10">=<pos:position pos:line="125" pos:column="11"/></operator> <call><name pos:line="125" pos:column="12">_free<pos:position pos:line="125" pos:column="17"/></name><argument_list pos:line="125" pos:column="17">(<argument><expr><name pos:line="125" pos:column="18">left<pos:position pos:line="125" pos:column="22"/></name></expr></argument>)<pos:position pos:line="125" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="24"/></expr_stmt>
    <if pos:line="126" pos:column="5">if <condition pos:line="126" pos:column="8">(<expr><name pos:line="126" pos:column="9">defs<pos:position pos:line="126" pos:column="13"/></name></expr>)<pos:position pos:line="126" pos:column="14"/></condition><then pos:line="126" pos:column="14"> <block pos:line="126" pos:column="15">{
	<expr_stmt><expr><name pos:line="127" pos:column="9">help<pos:position pos:line="127" pos:column="13"/></name> <operator pos:line="127" pos:column="14">=<pos:position pos:line="127" pos:column="15"/></operator> <name pos:line="127" pos:column="16">defs<pos:position pos:line="127" pos:column="20"/></name></expr>;<pos:position pos:line="127" pos:column="21"/></expr_stmt> <expr_stmt><expr><name pos:line="127" pos:column="22">defs<pos:position pos:line="127" pos:column="26"/></name> <operator pos:line="127" pos:column="27">=<pos:position pos:line="127" pos:column="28"/></operator> <name pos:line="127" pos:column="29">NULL<pos:position pos:line="127" pos:column="33"/></name></expr>;<pos:position pos:line="127" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="128" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="130" pos:column="5">helpLength<pos:position pos:line="130" pos:column="15"/></name> <operator pos:line="130" pos:column="16">=<pos:position pos:line="130" pos:column="17"/></operator> <call><name pos:line="130" pos:column="18">strlen<pos:position pos:line="130" pos:column="24"/></name><argument_list pos:line="130" pos:column="24">(<argument><expr><name pos:line="130" pos:column="25">help<pos:position pos:line="130" pos:column="29"/></name></expr></argument>)<pos:position pos:line="130" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="31"/></expr_stmt>
    <while pos:line="131" pos:column="5">while <condition pos:line="131" pos:column="11">(<expr><name pos:line="131" pos:column="12">helpLength<pos:position pos:line="131" pos:column="22"/></name> <operator pos:line="131" pos:column="23">&gt;<pos:position pos:line="131" pos:column="27"/></operator> <name pos:line="131" pos:column="25">lineLength<pos:position pos:line="131" pos:column="35"/></name></expr>)<pos:position pos:line="131" pos:column="36"/></condition> <block pos:line="131" pos:column="37">{
	<decl_stmt><decl><type><specifier pos:line="132" pos:column="9">const<pos:position pos:line="132" pos:column="14"/></specifier> <name pos:line="132" pos:column="15">unsigned<pos:position pos:line="132" pos:column="23"/></name> <name pos:line="132" pos:column="24">char<pos:position pos:line="132" pos:column="28"/></name> <modifier pos:line="132" pos:column="29">*<pos:position pos:line="132" pos:column="30"/></modifier></type> <name pos:line="132" pos:column="31">ch<pos:position pos:line="132" pos:column="33"/></name></decl>;<pos:position pos:line="132" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="133" pos:column="9">char<pos:position pos:line="133" pos:column="13"/></name></type> <name><name pos:line="133" pos:column="14">format<pos:position pos:line="133" pos:column="20"/></name><index pos:line="133" pos:column="20">[<expr><literal type="number" pos:line="133" pos:column="21">10<pos:position pos:line="133" pos:column="23"/></literal></expr>]<pos:position pos:line="133" pos:column="24"/></index></name></decl>;<pos:position pos:line="133" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><name pos:line="135" pos:column="9">ch<pos:position pos:line="135" pos:column="11"/></name> <operator pos:line="135" pos:column="12">=<pos:position pos:line="135" pos:column="13"/></operator> <name pos:line="135" pos:column="14">help<pos:position pos:line="135" pos:column="18"/></name> <operator pos:line="135" pos:column="19">+<pos:position pos:line="135" pos:column="20"/></operator> <name pos:line="135" pos:column="21">lineLength<pos:position pos:line="135" pos:column="31"/></name> <operator pos:line="135" pos:column="32">-<pos:position pos:line="135" pos:column="33"/></operator> <literal type="number" pos:line="135" pos:column="34">1<pos:position pos:line="135" pos:column="35"/></literal></expr>;<pos:position pos:line="135" pos:column="36"/></expr_stmt>
	<while pos:line="136" pos:column="9">while <condition pos:line="136" pos:column="15">(<expr><name pos:line="136" pos:column="16">ch<pos:position pos:line="136" pos:column="18"/></name> <operator pos:line="136" pos:column="19">&gt;<pos:position pos:line="136" pos:column="23"/></operator> <name pos:line="136" pos:column="21">help<pos:position pos:line="136" pos:column="25"/></name> <operator pos:line="136" pos:column="26">&amp;&amp;<pos:position pos:line="136" pos:column="36"/></operator> <operator pos:line="136" pos:column="29">!<pos:position pos:line="136" pos:column="30"/></operator><call><name pos:line="136" pos:column="30">isspace<pos:position pos:line="136" pos:column="37"/></name><argument_list pos:line="136" pos:column="37">(<argument><expr><operator pos:line="136" pos:column="38">*<pos:position pos:line="136" pos:column="39"/></operator><name pos:line="136" pos:column="39">ch<pos:position pos:line="136" pos:column="41"/></name></expr></argument>)<pos:position pos:line="136" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="136" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="136" pos:column="44">ch<pos:position pos:line="136" pos:column="46"/></name><operator pos:line="136" pos:column="46">--<pos:position pos:line="136" pos:column="48"/></operator></expr>;<pos:position pos:line="136" pos:column="49"/></expr_stmt></block></while>
	<if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">ch<pos:position pos:line="137" pos:column="15"/></name> <operator pos:line="137" pos:column="16">==<pos:position pos:line="137" pos:column="18"/></operator> <name pos:line="137" pos:column="19">help<pos:position pos:line="137" pos:column="23"/></name></expr>)<pos:position pos:line="137" pos:column="24"/></condition><then pos:line="137" pos:column="24"> <block type="pseudo"><break pos:line="137" pos:column="25">break;<pos:position pos:line="137" pos:column="31"/></break></block></then></if>		<comment type="block" pos:line="137" pos:column="41">/* give up */</comment>
	<while pos:line="138" pos:column="9">while <condition pos:line="138" pos:column="15">(<expr><name pos:line="138" pos:column="16">ch<pos:position pos:line="138" pos:column="18"/></name> <operator pos:line="138" pos:column="19">&gt;<pos:position pos:line="138" pos:column="23"/></operator> <operator pos:line="138" pos:column="21">(<pos:position pos:line="138" pos:column="22"/></operator><name pos:line="138" pos:column="22">help<pos:position pos:line="138" pos:column="26"/></name> <operator pos:line="138" pos:column="27">+<pos:position pos:line="138" pos:column="28"/></operator> <literal type="number" pos:line="138" pos:column="29">1<pos:position pos:line="138" pos:column="30"/></literal><operator pos:line="138" pos:column="30">)<pos:position pos:line="138" pos:column="31"/></operator> <operator pos:line="138" pos:column="32">&amp;&amp;<pos:position pos:line="138" pos:column="42"/></operator> <call><name pos:line="138" pos:column="35">isspace<pos:position pos:line="138" pos:column="42"/></name><argument_list pos:line="138" pos:column="42">(<argument><expr><operator pos:line="138" pos:column="43">*<pos:position pos:line="138" pos:column="44"/></operator><name pos:line="138" pos:column="44">ch<pos:position pos:line="138" pos:column="46"/></name></expr></argument>)<pos:position pos:line="138" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="48"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="138" pos:column="49">ch<pos:position pos:line="138" pos:column="51"/></name><operator pos:line="138" pos:column="51">--<pos:position pos:line="138" pos:column="53"/></operator></expr>;<pos:position pos:line="138" pos:column="54"/></expr_stmt></block></while>
	<expr_stmt><expr><name pos:line="139" pos:column="9">ch<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">++<pos:position pos:line="139" pos:column="13"/></operator></expr>;<pos:position pos:line="139" pos:column="14"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="141" pos:column="9">sprintf<pos:position pos:line="141" pos:column="16"/></name><argument_list pos:line="141" pos:column="16">(<argument><expr><name pos:line="141" pos:column="17">format<pos:position pos:line="141" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="25">"%%.%ds\n%%%ds"<pos:position pos:line="141" pos:column="40"/></literal></expr></argument>, <argument><expr><call pos:line="141" pos:column="42">(<name pos:line="141" pos:column="43">int<pos:position pos:line="141" pos:column="46"/></name>) <argument_list pos:line="141" pos:column="48">(<argument><expr><name pos:line="141" pos:column="49">ch<pos:position pos:line="141" pos:column="51"/></name> <operator pos:line="141" pos:column="52">-<pos:position pos:line="141" pos:column="53"/></operator> <name pos:line="141" pos:column="54">help<pos:position pos:line="141" pos:column="58"/></name></expr></argument>)<pos:position pos:line="141" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="141" pos:column="61">indentLength<pos:position pos:line="141" pos:column="73"/></name></expr></argument>)<pos:position pos:line="141" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="75"/></expr_stmt>
	<comment type="block" pos:line="142" pos:column="9">/*@-formatconst@*/</comment>
	<expr_stmt><expr><call><name pos:line="143" pos:column="9">fprintf<pos:position pos:line="143" pos:column="16"/></name><argument_list pos:line="143" pos:column="16">(<argument><expr><name pos:line="143" pos:column="17">fp<pos:position pos:line="143" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="21">format<pos:position pos:line="143" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="29">help<pos:position pos:line="143" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="143" pos:column="35">" "<pos:position pos:line="143" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="40"/></expr_stmt>
	<comment type="block" pos:line="144" pos:column="9">/*@=formatconst@*/</comment>
	<expr_stmt><expr><name pos:line="145" pos:column="9">help<pos:position pos:line="145" pos:column="13"/></name> <operator pos:line="145" pos:column="14">=<pos:position pos:line="145" pos:column="15"/></operator> <name pos:line="145" pos:column="16">ch<pos:position pos:line="145" pos:column="18"/></name></expr>;<pos:position pos:line="145" pos:column="19"/></expr_stmt>
	<while pos:line="146" pos:column="9">while <condition pos:line="146" pos:column="15">(<expr><call><name pos:line="146" pos:column="16">isspace<pos:position pos:line="146" pos:column="23"/></name><argument_list pos:line="146" pos:column="23">(<argument><expr><operator pos:line="146" pos:column="24">*<pos:position pos:line="146" pos:column="25"/></operator><name pos:line="146" pos:column="25">help<pos:position pos:line="146" pos:column="29"/></name></expr></argument>)<pos:position pos:line="146" pos:column="30"/></argument_list></call> <operator pos:line="146" pos:column="31">&amp;&amp;<pos:position pos:line="146" pos:column="41"/></operator> <operator pos:line="146" pos:column="34">*<pos:position pos:line="146" pos:column="35"/></operator><name pos:line="146" pos:column="35">help<pos:position pos:line="146" pos:column="39"/></name></expr>)<pos:position pos:line="146" pos:column="40"/></condition> <block type="pseudo"><expr_stmt><expr><name pos:line="146" pos:column="41">help<pos:position pos:line="146" pos:column="45"/></name><operator pos:line="146" pos:column="45">++<pos:position pos:line="146" pos:column="47"/></operator></expr>;<pos:position pos:line="146" pos:column="48"/></expr_stmt></block></while>
	<expr_stmt><expr><name pos:line="147" pos:column="9">helpLength<pos:position pos:line="147" pos:column="19"/></name> <operator pos:line="147" pos:column="20">=<pos:position pos:line="147" pos:column="21"/></operator> <call><name pos:line="147" pos:column="22">strlen<pos:position pos:line="147" pos:column="28"/></name><argument_list pos:line="147" pos:column="28">(<argument><expr><name pos:line="147" pos:column="29">help<pos:position pos:line="147" pos:column="33"/></name></expr></argument>)<pos:position pos:line="147" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="148" pos:column="6"/></block></while>

    <if pos:line="150" pos:column="5">if <condition pos:line="150" pos:column="8">(<expr><name pos:line="150" pos:column="9">helpLength<pos:position pos:line="150" pos:column="19"/></name></expr>)<pos:position pos:line="150" pos:column="20"/></condition><then pos:line="150" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="150" pos:column="21">fprintf<pos:position pos:line="150" pos:column="28"/></name><argument_list pos:line="150" pos:column="28">(<argument><expr><name pos:line="150" pos:column="29">fp<pos:position pos:line="150" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="33">"%s\n"<pos:position pos:line="150" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="41">help<pos:position pos:line="150" pos:column="45"/></name></expr></argument>)<pos:position pos:line="150" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="47"/></expr_stmt></block></then></if>

<label><name pos:line="152" pos:column="1">out<pos:position pos:line="152" pos:column="4"/></name>:<pos:position pos:line="152" pos:column="5"/></label>
    <comment type="block" pos:line="153" pos:column="5">/*@-dependenttrans@*/</comment>
    <expr_stmt><expr><name pos:line="154" pos:column="5">defs<pos:position pos:line="154" pos:column="9"/></name> <operator pos:line="154" pos:column="10">=<pos:position pos:line="154" pos:column="11"/></operator> <call><name pos:line="154" pos:column="12">_free<pos:position pos:line="154" pos:column="17"/></name><argument_list pos:line="154" pos:column="17">(<argument><expr><name pos:line="154" pos:column="18">defs<pos:position pos:line="154" pos:column="22"/></name></expr></argument>)<pos:position pos:line="154" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="155" pos:column="5">/*@=dependenttrans@*/</comment>
    <expr_stmt><expr><name pos:line="156" pos:column="5">left<pos:position pos:line="156" pos:column="9"/></name> <operator pos:line="156" pos:column="10">=<pos:position pos:line="156" pos:column="11"/></operator> <call><name pos:line="156" pos:column="12">_free<pos:position pos:line="156" pos:column="17"/></name><argument_list pos:line="156" pos:column="17">(<argument><expr><name pos:line="156" pos:column="18">left<pos:position pos:line="156" pos:column="22"/></name></expr></argument>)<pos:position pos:line="156" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="24"/></expr_stmt>
}<pos:position pos:line="157" pos:column="2"/></block></function></unit>

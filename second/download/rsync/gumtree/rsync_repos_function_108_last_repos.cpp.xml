<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_108_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">id_t<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">id_parse<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">num_str<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">id_t<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">tmp<pos:position pos:line="3" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="19">num<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">cp<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">num_str<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><operator pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">cp<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition> <block pos:line="6" pos:column="21">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">!<pos:position pos:line="7" pos:column="22"/></operator><call><name pos:line="7" pos:column="22">isDigit<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">cp<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="34"/></condition><then pos:line="7" pos:column="34"> <block pos:line="7" pos:column="35">{
		  <label><name pos:line="8" pos:column="19">invalid_num<pos:position pos:line="8" pos:column="30"/></name>:<pos:position pos:line="8" pos:column="31"/></label>
			<expr_stmt><expr><call><name pos:line="9" pos:column="25">rprintf<pos:position pos:line="9" pos:column="32"/></name><argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">FERROR<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="41">"Invalid ID number: %s\n"<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="68">num_str<pos:position pos:line="9" pos:column="75"/></name></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="10" pos:column="25">exit_cleanup<pos:position pos:line="10" pos:column="37"/></name><argument_list pos:line="10" pos:column="37">(<argument><expr><name pos:line="10" pos:column="38">RERR_SYNTAX<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">tmp<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">num<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">*<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">10<pos:position pos:line="12" pos:column="31"/></literal> <operator pos:line="12" pos:column="32">+<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="34">*<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">cp<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">++<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="40">-<pos:position pos:line="12" pos:column="41"/></operator> <literal type="char" pos:line="12" pos:column="42">'0'<pos:position pos:line="12" pos:column="45"/></literal></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><name pos:line="13" pos:column="21">tmp<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&lt;<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="27">num<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
			<block type="pseudo"><goto pos:line="14" pos:column="25">goto <name pos:line="14" pos:column="30">invalid_num<pos:position pos:line="14" pos:column="41"/></name>;<pos:position pos:line="14" pos:column="42"/></goto></block></then></if>
		<expr_stmt><expr><name pos:line="15" pos:column="17">num<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <name pos:line="15" pos:column="23">tmp<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></while>

	<return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">num<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

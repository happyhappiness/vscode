<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_464.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">do_server_recv<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">argc<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name><name pos:line="1" pos:column="36">argv<pos:position pos:line="1" pos:column="40"/></name><index pos:line="1" pos:column="40">[]<pos:position pos:line="1" pos:column="42"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">file_list<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">flist<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">local_name<pos:position pos:line="5" pos:column="19"/></name><init pos:line="5" pos:column="19">=<expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">dir<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
  
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">verbose<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&gt;<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="17">2<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">fprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">FINFO<pos:position pos:line="9" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="9" pos:column="19">"server_recv(%d) starting pid=%d\n"<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>,<argument><expr><name pos:line="9" pos:column="55">argc<pos:position pos:line="9" pos:column="59"/></name></expr></argument>,<argument><expr><operator pos:line="9" pos:column="60">(<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="61">int<pos:position pos:line="9" pos:column="64"/></name><operator pos:line="9" pos:column="64">)<pos:position pos:line="9" pos:column="65"/></operator><call><name pos:line="9" pos:column="65">getpid<pos:position pos:line="9" pos:column="71"/></name><argument_list pos:line="9" pos:column="71">()<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="75"/></expr_stmt></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">argc<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">&gt;<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16"> <block pos:line="11" pos:column="17">{
	  <expr_stmt><expr><name pos:line="12" pos:column="11">dir<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name><name pos:line="12" pos:column="17">argv<pos:position pos:line="12" pos:column="21"/></name><index pos:line="12" pos:column="21">[<expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr>]<pos:position pos:line="12" pos:column="24"/></index></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="13" pos:column="11">argc<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">--<pos:position pos:line="13" pos:column="17"/></operator></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="14" pos:column="11">argv<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">++<pos:position pos:line="14" pos:column="17"/></operator></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
	  <if pos:line="15" pos:column="11">if <condition pos:line="15" pos:column="14">(<expr><call><name pos:line="15" pos:column="15">chdir<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">dir<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call> <operator pos:line="15" pos:column="26">!=<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
		  <expr_stmt><expr><call><name pos:line="16" pos:column="19">fprintf<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">FERROR<pos:position pos:line="16" pos:column="33"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="34">"chdir %s : %s (4)\n"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>,
			  <argument><expr><name pos:line="17" pos:column="27">dir<pos:position pos:line="17" pos:column="30"/></name></expr></argument>,<argument><expr><call><name pos:line="17" pos:column="31">strerror<pos:position pos:line="17" pos:column="39"/></name><argument_list pos:line="17" pos:column="39">(<argument><expr><name pos:line="17" pos:column="40">errno<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
		  <expr_stmt><expr><call><name pos:line="18" pos:column="19">exit_cleanup<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
	  }<pos:position pos:line="19" pos:column="12"/></block></then></if>    
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">delete_mode<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">recv_exclude_list<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">STDIN_FILENO<pos:position pos:line="23" pos:column="35"/></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">flist<pos:position pos:line="25" pos:column="8"/></name> <operator pos:line="25" pos:column="9">=<pos:position pos:line="25" pos:column="10"/></operator> <call><name pos:line="25" pos:column="11">recv_file_list<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">STDIN_FILENO<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="40"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">!<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">flist<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">||<pos:position pos:line="26" pos:column="16"/></operator> <name><name pos:line="26" pos:column="17">flist<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">count<pos:position pos:line="26" pos:column="29"/></name></name> <operator pos:line="26" pos:column="30">==<pos:position pos:line="26" pos:column="32"/></operator> <literal type="number" pos:line="26" pos:column="33">0<pos:position pos:line="26" pos:column="34"/></literal></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block pos:line="26" pos:column="36">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">FERROR<pos:position pos:line="27" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="27" pos:column="20">"nothing to do\n"<pos:position pos:line="27" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">exit_cleanup<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><literal type="number" pos:line="28" pos:column="18">1<pos:position pos:line="28" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">argc<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">&gt;<pos:position pos:line="31" pos:column="16"/></operator> <literal type="number" pos:line="31" pos:column="14">0<pos:position pos:line="31" pos:column="15"/></literal></expr>)<pos:position pos:line="31" pos:column="16"/></condition><then pos:line="31" pos:column="16"> <block pos:line="31" pos:column="17">{    
	  <if pos:line="32" pos:column="11">if <condition pos:line="32" pos:column="14">(<expr><call><name pos:line="32" pos:column="15">strcmp<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">dir<pos:position pos:line="32" pos:column="25"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="32" pos:column="26">"."<pos:position pos:line="32" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="31"/></condition><then pos:line="32" pos:column="31"> <block pos:line="32" pos:column="32">{
		  <expr_stmt><expr><name><name pos:line="33" pos:column="19">argv<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><literal type="number" pos:line="33" pos:column="24">0<pos:position pos:line="33" pos:column="25"/></literal></expr>]<pos:position pos:line="33" pos:column="26"/></index></name> <operator pos:line="33" pos:column="27">+=<pos:position pos:line="33" pos:column="29"/></operator> <call><name pos:line="33" pos:column="30">strlen<pos:position pos:line="33" pos:column="36"/></name><argument_list pos:line="33" pos:column="36">(<argument><expr><name pos:line="33" pos:column="37">dir<pos:position pos:line="33" pos:column="40"/></name></expr></argument>)<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
		  <if pos:line="34" pos:column="19">if <condition pos:line="34" pos:column="22">(<expr><name><name pos:line="34" pos:column="23">argv<pos:position pos:line="34" pos:column="27"/></name><index pos:line="34" pos:column="27">[<expr><literal type="number" pos:line="34" pos:column="28">0<pos:position pos:line="34" pos:column="29"/></literal></expr>]<pos:position pos:line="34" pos:column="30"/></index><index pos:line="34" pos:column="30">[<expr><literal type="number" pos:line="34" pos:column="31">0<pos:position pos:line="34" pos:column="32"/></literal></expr>]<pos:position pos:line="34" pos:column="33"/></index></name> <operator pos:line="34" pos:column="34">==<pos:position pos:line="34" pos:column="36"/></operator> <literal type="char" pos:line="34" pos:column="37">'/'<pos:position pos:line="34" pos:column="40"/></literal></expr>)<pos:position pos:line="34" pos:column="41"/></condition><then pos:line="34" pos:column="41"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="42">argv<pos:position pos:line="34" pos:column="46"/></name><index pos:line="34" pos:column="46">[<expr><literal type="number" pos:line="34" pos:column="47">0<pos:position pos:line="34" pos:column="48"/></literal></expr>]<pos:position pos:line="34" pos:column="49"/></index></name><operator pos:line="34" pos:column="49">++<pos:position pos:line="34" pos:column="51"/></operator></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt></block></then></if>
	  }<pos:position pos:line="35" pos:column="12"/></block></then></if>
	  <expr_stmt><expr><name pos:line="36" pos:column="11">local_name<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <call><name pos:line="36" pos:column="24">get_local_name<pos:position pos:line="36" pos:column="38"/></name><argument_list pos:line="36" pos:column="38">(<argument><expr><name pos:line="36" pos:column="39">flist<pos:position pos:line="36" pos:column="44"/></name></expr></argument>,<argument><expr><name><name pos:line="36" pos:column="45">argv<pos:position pos:line="36" pos:column="49"/></name><index pos:line="36" pos:column="49">[<expr><literal type="number" pos:line="36" pos:column="50">0<pos:position pos:line="36" pos:column="51"/></literal></expr>]<pos:position pos:line="36" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="39" pos:column="3">status<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <call><name pos:line="39" pos:column="12">do_recv<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">STDIN_FILENO<pos:position pos:line="39" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="39" pos:column="33">STDOUT_FILENO<pos:position pos:line="39" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="39" pos:column="47">flist<pos:position pos:line="39" pos:column="52"/></name></expr></argument>,<argument><expr><name pos:line="39" pos:column="53">local_name<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">exit_cleanup<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">status<pos:position pos:line="40" pos:column="22"/></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="24"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

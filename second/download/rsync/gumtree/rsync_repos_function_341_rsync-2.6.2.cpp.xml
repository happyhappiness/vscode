<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_341_rsync-2.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">start_server<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">int<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">f_in<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">f_out<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">argc<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name><name pos:line="1" pos:column="56">argv<pos:position pos:line="1" pos:column="60"/></name><index pos:line="1" pos:column="60">[]<pos:position pos:line="1" pos:column="62"/></index></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">setup_protocol<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">f_out<pos:position pos:line="3" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="31">f_in<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="5" pos:column="9">set_nonblocking<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">f_in<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">set_nonblocking<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">f_out<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">protocol_version<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">&gt;=<pos:position pos:line="8" pos:column="35"/></operator> <literal type="number" pos:line="8" pos:column="33">23<pos:position pos:line="8" pos:column="35"/></literal></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">io_start_multiplex_out<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name pos:line="9" pos:column="40">f_out<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">am_sender<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">!<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">read_batch<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">recv_exclude_list<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">f_in<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
			<if pos:line="14" pos:column="25">if <condition pos:line="14" pos:column="28">(<expr><name pos:line="14" pos:column="29">cvs_exclude<pos:position pos:line="14" pos:column="40"/></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="33">add_cvs_excludes<pos:position pos:line="15" pos:column="49"/></name><argument_list pos:line="15" pos:column="49">()<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt></block></then></if>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">do_server_sender<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">f_in<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">f_out<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">argc<pos:position pos:line="17" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="53">argv<pos:position pos:line="17" pos:column="57"/></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">do_server_recv<pos:position pos:line="19" pos:column="31"/></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">f_in<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="38">f_out<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">argc<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">argv<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">exit_cleanup<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><literal type="number" pos:line="21" pos:column="22">0<pos:position pos:line="21" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

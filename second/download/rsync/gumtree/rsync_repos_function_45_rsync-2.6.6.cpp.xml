<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_45_rsync-2.6.6.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report_filter_result<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">name<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
                                 <parameter><decl><type><name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">filter_struct<pos:position pos:line="2" pos:column="54"/></name></name> <specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">ent<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">int<pos:position pos:line="3" pos:column="37"/></name></type> <name pos:line="3" pos:column="38">name_is_dir<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="51">const<pos:position pos:line="3" pos:column="56"/></specifier> <name pos:line="3" pos:column="57">char<pos:position pos:line="3" pos:column="61"/></name> <modifier pos:line="3" pos:column="62">*<pos:position pos:line="3" pos:column="63"/></modifier></type><name pos:line="3" pos:column="63">type<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="68"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<comment type="block" pos:line="5" pos:column="9">/* If a trailing slash is present to match only directories,
	 * then it is stripped out by add_rule().  So as a special
	 * case we add it back in here. */</comment>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">verbose<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&gt;=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">2<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">rprintf<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">FINFO<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"[%s] %scluding %s %s because of pattern %s%s%s\n"<pos:position pos:line="10" pos:column="82"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="11" pos:column="25">who_am_i<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">()<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name pos:line="12" pos:column="25">ent<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">match_flags<pos:position pos:line="12" pos:column="41"/></name></name> <operator pos:line="12" pos:column="42">&amp;<pos:position pos:line="12" pos:column="47"/></operator> <name pos:line="12" pos:column="44">MATCHFLG_INCLUDE<pos:position pos:line="12" pos:column="60"/></name></expr> ?<pos:position pos:line="12" pos:column="62"/></condition><then pos:line="12" pos:column="62"> <expr><literal type="string" pos:line="12" pos:column="63">"in"<pos:position pos:line="12" pos:column="67"/></literal></expr> <pos:position pos:line="12" pos:column="68"/></then><else pos:line="12" pos:column="68">: <expr><literal type="string" pos:line="12" pos:column="70">"ex"<pos:position pos:line="12" pos:column="74"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="13" pos:column="25">name_is_dir<pos:position pos:line="13" pos:column="36"/></name></expr> ?<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <expr><literal type="string" pos:line="13" pos:column="39">"directory"<pos:position pos:line="13" pos:column="50"/></literal></expr> <pos:position pos:line="13" pos:column="51"/></then><else pos:line="13" pos:column="51">: <expr><literal type="string" pos:line="13" pos:column="53">"file"<pos:position pos:line="13" pos:column="59"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">name<pos:position pos:line="13" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="67">ent<pos:position pos:line="13" pos:column="70"/></name><operator pos:line="13" pos:column="70">-&gt;<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="72">pattern<pos:position pos:line="13" pos:column="79"/></name></name></expr></argument>,
			<argument><expr><ternary><condition><expr><name><name pos:line="14" pos:column="25">ent<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">match_flags<pos:position pos:line="14" pos:column="41"/></name></name> <operator pos:line="14" pos:column="42">&amp;<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="44">MATCHFLG_DIRECTORY<pos:position pos:line="14" pos:column="62"/></name></expr> ?<pos:position pos:line="14" pos:column="64"/></condition><then pos:line="14" pos:column="64"> <expr><literal type="string" pos:line="14" pos:column="65">"/"<pos:position pos:line="14" pos:column="68"/></literal></expr> <pos:position pos:line="14" pos:column="69"/></then><else pos:line="14" pos:column="69">: <expr><literal type="string" pos:line="14" pos:column="71">""<pos:position pos:line="14" pos:column="73"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="14" pos:column="75">type<pos:position pos:line="14" pos:column="79"/></name></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

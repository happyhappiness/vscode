<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_312_rsync-2.6.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_directory<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">f<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">file_list<pos:position pos:line="1" pos:column="51"/></name></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">flist<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">char<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">dir<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">DIR<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">d<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">dirent<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">di<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">fname<pos:position pos:line="5" pos:column="19"/></name><index pos:line="5" pos:column="19">[<expr><name pos:line="5" pos:column="20">MAXPATHLEN<pos:position pos:line="5" pos:column="30"/></name></expr>]<pos:position pos:line="5" pos:column="31"/></index></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">l<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">p<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="9" pos:column="9">d<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name pos:line="9" pos:column="13">opendir<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">dir<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">d<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16"> <block pos:line="10" pos:column="17">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">io_error<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">|=<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">IOERR_GENERAL<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FERROR<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="33">"opendir %s failed: %s\n"<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="13" pos:column="25">full_fname<pos:position pos:line="13" pos:column="35"/></name><argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">dir<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="42">strerror<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">errno<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
		<return pos:line="14" pos:column="17">return;<pos:position pos:line="14" pos:column="24"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">strlcpy<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">fname<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">dir<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">MAXPATHLEN<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="18" pos:column="9">l<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">strlen<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">fname<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name><name pos:line="19" pos:column="13">fname<pos:position pos:line="19" pos:column="18"/></name><index pos:line="19" pos:column="18">[<expr><name pos:line="19" pos:column="19">l<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">-<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">1<pos:position pos:line="19" pos:column="24"/></literal></expr>]<pos:position pos:line="19" pos:column="25"/></index></name> <operator pos:line="19" pos:column="26">!=<pos:position pos:line="19" pos:column="28"/></operator> <literal type="char" pos:line="19" pos:column="29">'/'<pos:position pos:line="19" pos:column="32"/></literal></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">l<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">==<pos:position pos:line="20" pos:column="25"/></operator> <name pos:line="20" pos:column="26">MAXPATHLEN<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">-<pos:position pos:line="20" pos:column="38"/></operator> <literal type="number" pos:line="20" pos:column="39">1<pos:position pos:line="20" pos:column="40"/></literal></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
			<expr_stmt><expr><name pos:line="21" pos:column="25">io_error<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">|=<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="37">IOERR_GENERAL<pos:position pos:line="21" pos:column="50"/></name></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">rprintf<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">FERROR<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="41">"skipping long-named directory: %s\n"<pos:position pos:line="22" pos:column="78"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="23" pos:column="33">full_fname<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">fname<pos:position pos:line="23" pos:column="49"/></name></expr></argument>)<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">closedir<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">d<pos:position pos:line="24" pos:column="35"/></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
			<return pos:line="25" pos:column="25">return;<pos:position pos:line="25" pos:column="32"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">strlcat<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">fname<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="32">"/"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="37">MAXPATHLEN<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">l<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">++<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="30" pos:column="9">p<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <name pos:line="30" pos:column="13">fname<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">+<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">strlen<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">fname<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="32" pos:column="9">local_exclude_list<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">=<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">NULL<pos:position pos:line="32" pos:column="34"/></name></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">cvs_exclude<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">strlen<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">fname<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call> <operator pos:line="35" pos:column="35">+<pos:position pos:line="35" pos:column="36"/></operator> <call><name pos:line="35" pos:column="37">strlen<pos:position pos:line="35" pos:column="43"/></name><argument_list pos:line="35" pos:column="43">(<argument><expr><literal type="string" pos:line="35" pos:column="44">".cvsignore"<pos:position pos:line="35" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call> <operator pos:line="35" pos:column="58">&lt;=<pos:position pos:line="35" pos:column="63"/></operator> <name pos:line="35" pos:column="61">MAXPATHLEN<pos:position pos:line="35" pos:column="71"/></name> <operator pos:line="35" pos:column="72">-<pos:position pos:line="35" pos:column="73"/></operator> <literal type="number" pos:line="35" pos:column="74">1<pos:position pos:line="35" pos:column="75"/></literal></expr>)<pos:position pos:line="35" pos:column="76"/></condition><then pos:line="35" pos:column="76"> <block pos:line="35" pos:column="77">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">strcpy<pos:position pos:line="36" pos:column="31"/></name><argument_list pos:line="36" pos:column="31">(<argument><expr><name pos:line="36" pos:column="32">p<pos:position pos:line="36" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="35">".cvsignore"<pos:position pos:line="36" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">add_exclude_file<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><operator pos:line="37" pos:column="42">&amp;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="43">exclude_list<pos:position pos:line="37" pos:column="55"/></name></expr></argument>,<argument><expr><name pos:line="37" pos:column="56">fname<pos:position pos:line="37" pos:column="61"/></name></expr></argument>,<argument><expr><name pos:line="37" pos:column="62">MISSING_OK<pos:position pos:line="37" pos:column="72"/></name></expr></argument>,<argument><expr><name pos:line="37" pos:column="73">ADD_EXCLUDE<pos:position pos:line="37" pos:column="84"/></name></expr></argument>)<pos:position pos:line="37" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="86"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></then> <else pos:line="38" pos:column="19">else <block pos:line="38" pos:column="24">{
			<expr_stmt><expr><name pos:line="39" pos:column="25">io_error<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">|=<pos:position pos:line="39" pos:column="36"/></operator> <name pos:line="39" pos:column="37">IOERR_GENERAL<pos:position pos:line="39" pos:column="50"/></name></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">rprintf<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">FINFO<pos:position pos:line="40" pos:column="38"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="41" pos:column="33">"cannot cvs-exclude in long-named directory %s\n"<pos:position pos:line="41" pos:column="82"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="42" pos:column="33">full_fname<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">fname<pos:position pos:line="42" pos:column="49"/></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="43" pos:column="18"/></block></else></if>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<for pos:line="46" pos:column="9">for <control pos:line="46" pos:column="13">(<init><expr><name pos:line="46" pos:column="14">errno<pos:position pos:line="46" pos:column="19"/></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <literal type="number" pos:line="46" pos:column="22">0<pos:position pos:line="46" pos:column="23"/></literal></expr><operator pos:line="46" pos:column="23">,<pos:position pos:line="46" pos:column="24"/></operator> <expr><name pos:line="46" pos:column="25">di<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">=<pos:position pos:line="46" pos:column="29"/></operator> <call><name pos:line="46" pos:column="30">readdir<pos:position pos:line="46" pos:column="37"/></name><argument_list pos:line="46" pos:column="37">(<argument><expr><name pos:line="46" pos:column="38">d<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></init> <condition><expr><name pos:line="46" pos:column="42">di<pos:position pos:line="46" pos:column="44"/></name></expr>;<pos:position pos:line="46" pos:column="45"/></condition> <incr><expr><name pos:line="46" pos:column="46">errno<pos:position pos:line="46" pos:column="51"/></name> <operator pos:line="46" pos:column="52">=<pos:position pos:line="46" pos:column="53"/></operator> <literal type="number" pos:line="46" pos:column="54">0<pos:position pos:line="46" pos:column="55"/></literal></expr><operator pos:line="46" pos:column="55">,<pos:position pos:line="46" pos:column="56"/></operator> <expr><name pos:line="46" pos:column="57">di<pos:position pos:line="46" pos:column="59"/></name> <operator pos:line="46" pos:column="60">=<pos:position pos:line="46" pos:column="61"/></operator> <call><name pos:line="46" pos:column="62">readdir<pos:position pos:line="46" pos:column="69"/></name><argument_list pos:line="46" pos:column="69">(<argument><expr><name pos:line="46" pos:column="70">d<pos:position pos:line="46" pos:column="71"/></name></expr></argument>)<pos:position pos:line="46" pos:column="72"/></argument_list></call></expr></incr>)<pos:position pos:line="46" pos:column="73"/></control> <block pos:line="46" pos:column="74">{
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">char<pos:position pos:line="47" pos:column="21"/></name> <modifier pos:line="47" pos:column="22">*<pos:position pos:line="47" pos:column="23"/></modifier></type><name pos:line="47" pos:column="23">dname<pos:position pos:line="47" pos:column="28"/></name> <init pos:line="47" pos:column="29">= <expr><call><name pos:line="47" pos:column="31">d_name<pos:position pos:line="47" pos:column="37"/></name><argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">di<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="42"/></decl_stmt>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name><name pos:line="48" pos:column="21">dname<pos:position pos:line="48" pos:column="26"/></name><index pos:line="48" pos:column="26">[<expr><literal type="number" pos:line="48" pos:column="27">0<pos:position pos:line="48" pos:column="28"/></literal></expr>]<pos:position pos:line="48" pos:column="29"/></index></name> <operator pos:line="48" pos:column="30">==<pos:position pos:line="48" pos:column="32"/></operator> <literal type="char" pos:line="48" pos:column="33">'.'<pos:position pos:line="48" pos:column="36"/></literal> <operator pos:line="48" pos:column="37">&amp;&amp;<pos:position pos:line="48" pos:column="47"/></operator> <operator pos:line="48" pos:column="40">(<pos:position pos:line="48" pos:column="41"/></operator><name><name pos:line="48" pos:column="41">dname<pos:position pos:line="48" pos:column="46"/></name><index pos:line="48" pos:column="46">[<expr><literal type="number" pos:line="48" pos:column="47">1<pos:position pos:line="48" pos:column="48"/></literal></expr>]<pos:position pos:line="48" pos:column="49"/></index></name> <operator pos:line="48" pos:column="50">==<pos:position pos:line="48" pos:column="52"/></operator> <literal type="char" pos:line="48" pos:column="53">'\0'<pos:position pos:line="48" pos:column="57"/></literal>
		    <operator pos:line="49" pos:column="21">||<pos:position pos:line="49" pos:column="23"/></operator> <operator pos:line="49" pos:column="24">(<pos:position pos:line="49" pos:column="25"/></operator><name><name pos:line="49" pos:column="25">dname<pos:position pos:line="49" pos:column="30"/></name><index pos:line="49" pos:column="30">[<expr><literal type="number" pos:line="49" pos:column="31">1<pos:position pos:line="49" pos:column="32"/></literal></expr>]<pos:position pos:line="49" pos:column="33"/></index></name> <operator pos:line="49" pos:column="34">==<pos:position pos:line="49" pos:column="36"/></operator> <literal type="char" pos:line="49" pos:column="37">'.'<pos:position pos:line="49" pos:column="40"/></literal> <operator pos:line="49" pos:column="41">&amp;&amp;<pos:position pos:line="49" pos:column="51"/></operator> <name><name pos:line="49" pos:column="44">dname<pos:position pos:line="49" pos:column="49"/></name><index pos:line="49" pos:column="49">[<expr><literal type="number" pos:line="49" pos:column="50">2<pos:position pos:line="49" pos:column="51"/></literal></expr>]<pos:position pos:line="49" pos:column="52"/></index></name> <operator pos:line="49" pos:column="53">==<pos:position pos:line="49" pos:column="55"/></operator> <literal type="char" pos:line="49" pos:column="56">'\0'<pos:position pos:line="49" pos:column="60"/></literal><operator pos:line="49" pos:column="60">)<pos:position pos:line="49" pos:column="61"/></operator><operator pos:line="49" pos:column="61">)<pos:position pos:line="49" pos:column="62"/></operator></expr>)<pos:position pos:line="49" pos:column="63"/></condition><then pos:line="49" pos:column="63">
			<block type="pseudo"><continue pos:line="50" pos:column="25">continue;<pos:position pos:line="50" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">strlcpy<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name pos:line="51" pos:column="25">p<pos:position pos:line="51" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="28">dname<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">MAXPATHLEN<pos:position pos:line="51" pos:column="45"/></name> <operator pos:line="51" pos:column="46">-<pos:position pos:line="51" pos:column="47"/></operator> <name pos:line="51" pos:column="48">l<pos:position pos:line="51" pos:column="49"/></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">send_file_name<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">f<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="35">flist<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="42">fname<pos:position pos:line="52" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="49">recurse<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="58">0<pos:position pos:line="52" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></for>
	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">errno<pos:position pos:line="54" pos:column="18"/></name></expr>)<pos:position pos:line="54" pos:column="19"/></condition><then pos:line="54" pos:column="19"> <block pos:line="54" pos:column="20">{
		<expr_stmt><expr><name pos:line="55" pos:column="17">io_error<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">|=<pos:position pos:line="55" pos:column="28"/></operator> <name pos:line="55" pos:column="29">IOERR_GENERAL<pos:position pos:line="55" pos:column="42"/></name></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="56" pos:column="17">rprintf<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">FERROR<pos:position pos:line="56" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="33">"readdir(%s): (%d) %s\n"<pos:position pos:line="56" pos:column="57"/></literal></expr></argument>,
		    <argument><expr><name pos:line="57" pos:column="21">dir<pos:position pos:line="57" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="26">errno<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="33">strerror<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><name pos:line="57" pos:column="42">errno<pos:position pos:line="57" pos:column="47"/></name></expr></argument>)<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>

	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name pos:line="60" pos:column="13">local_exclude_list<pos:position pos:line="60" pos:column="31"/></name></expr>)<pos:position pos:line="60" pos:column="32"/></condition><then pos:line="60" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="17">free_exclude_list<pos:position pos:line="61" pos:column="34"/></name><argument_list pos:line="61" pos:column="34">(<argument><expr><operator pos:line="61" pos:column="35">&amp;<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="36">local_exclude_list<pos:position pos:line="61" pos:column="54"/></name></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="56"/></expr_stmt></block></then></if> <comment type="block" pos:line="61" pos:column="57">/* Zeros pointer too */</comment>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">closedir<pos:position pos:line="63" pos:column="17"/></name><argument_list pos:line="63" pos:column="17">(<argument><expr><name pos:line="63" pos:column="18">d<pos:position pos:line="63" pos:column="19"/></name></expr></argument>)<pos:position pos:line="63" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

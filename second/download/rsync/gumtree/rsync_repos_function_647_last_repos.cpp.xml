<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_647_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">ZEXPORT<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">inflateMark<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">strm<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">strm<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">inflate_state<pos:position pos:line="4" pos:column="25"/></name></name> <name pos:line="4" pos:column="26">FAR<pos:position pos:line="4" pos:column="29"/></name> <modifier pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></modifier></type><name pos:line="4" pos:column="31">state<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">strm<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">Z_NULL<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">||<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">strm<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">state<pos:position pos:line="6" pos:column="38"/></name></name> <operator pos:line="6" pos:column="39">==<pos:position pos:line="6" pos:column="41"/></operator> <name pos:line="6" pos:column="42">Z_NULL<pos:position pos:line="6" pos:column="48"/></name></expr>)<pos:position pos:line="6" pos:column="49"/></condition><then pos:line="6" pos:column="49"> <block type="pseudo"><return pos:line="6" pos:column="50">return <expr><operator pos:line="6" pos:column="57">-<pos:position pos:line="6" pos:column="58"/></operator><literal type="number" pos:line="6" pos:column="58">1L<pos:position pos:line="6" pos:column="60"/></literal> <operator pos:line="6" pos:column="61">&lt;&lt;<pos:position pos:line="6" pos:column="69"/></operator> <literal type="number" pos:line="6" pos:column="64">16<pos:position pos:line="6" pos:column="66"/></literal></expr>;<pos:position pos:line="6" pos:column="67"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="7" pos:column="5">state<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator>struct <name pos:line="7" pos:column="21">inflate_state<pos:position pos:line="7" pos:column="34"/></name> <name pos:line="7" pos:column="35">FAR<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><operator pos:line="7" pos:column="40">)<pos:position pos:line="7" pos:column="41"/></operator><name><name pos:line="7" pos:column="41">strm<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">-&gt;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="47">state<pos:position pos:line="7" pos:column="52"/></name></name></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><call pos:line="8" pos:column="13">(<name pos:line="8" pos:column="14">long<pos:position pos:line="8" pos:column="18"/></name>)<argument_list pos:line="8" pos:column="19">(<argument><expr><name><name pos:line="8" pos:column="20">state<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">back<pos:position pos:line="8" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call> <operator pos:line="8" pos:column="33">&lt;&lt;<pos:position pos:line="8" pos:column="41"/></operator> <literal type="number" pos:line="8" pos:column="36">16<pos:position pos:line="8" pos:column="38"/></literal><operator pos:line="8" pos:column="38">)<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="40">+<pos:position pos:line="8" pos:column="41"/></operator>
        <operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><ternary><condition><expr><name><name pos:line="9" pos:column="10">state<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">mode<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">==<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">COPY<pos:position pos:line="9" pos:column="29"/></name></expr> ?<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31"> <expr><name><name pos:line="9" pos:column="32">state<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">length<pos:position pos:line="9" pos:column="45"/></name></name></expr> <pos:position pos:line="9" pos:column="46"/></then><else pos:line="9" pos:column="46">:
            <expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><ternary><condition><expr><name><name pos:line="10" pos:column="14">state<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">mode<pos:position pos:line="10" pos:column="25"/></name></name> <operator pos:line="10" pos:column="26">==<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">MATCH<pos:position pos:line="10" pos:column="34"/></name></expr> ?<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <expr><name><name pos:line="10" pos:column="37">state<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">was<pos:position pos:line="10" pos:column="47"/></name></name> <operator pos:line="10" pos:column="48">-<pos:position pos:line="10" pos:column="49"/></operator> <name><name pos:line="10" pos:column="50">state<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">length<pos:position pos:line="10" pos:column="63"/></name></name></expr> <pos:position pos:line="10" pos:column="64"/></then><else pos:line="10" pos:column="64">: <expr><literal type="number" pos:line="10" pos:column="66">0<pos:position pos:line="10" pos:column="67"/></literal></expr></else></ternary><operator pos:line="10" pos:column="67">)<pos:position pos:line="10" pos:column="68"/></operator></expr></else></ternary><operator pos:line="10" pos:column="68">)<pos:position pos:line="10" pos:column="69"/></operator></expr>;<pos:position pos:line="10" pos:column="70"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function_decl></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_499_rsync-2.5.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">poptStrippedArgv<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">poptContext<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">con<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">int<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">argc<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier><modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">argv<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">i<pos:position pos:line="3" pos:column="10"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="11">j<pos:position pos:line="3" pos:column="12"/></name><init pos:line="3" pos:column="12">=<expr><literal type="number" pos:line="3" pos:column="13">1<pos:position pos:line="3" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">numargs<pos:position pos:line="3" pos:column="23"/></name><init pos:line="3" pos:column="23">=<expr><name pos:line="3" pos:column="24">argc<pos:position pos:line="3" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    
    <for pos:line="5" pos:column="5">for<control pos:line="5" pos:column="8">(<init><expr><name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator><literal type="number" pos:line="5" pos:column="11">1<pos:position pos:line="5" pos:column="12"/></literal></expr>;<pos:position pos:line="5" pos:column="13"/></init> <condition><expr><name pos:line="5" pos:column="14">i<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">&lt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">argc<pos:position pos:line="5" pos:column="20"/></name></expr>;<pos:position pos:line="5" pos:column="21"/></condition> <incr><expr><name pos:line="5" pos:column="22">i<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">++<pos:position pos:line="5" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="5" pos:column="26"/></control> <block pos:line="5" pos:column="27">{
	<if pos:line="6" pos:column="9">if<condition pos:line="6" pos:column="11">(<expr><call><name pos:line="6" pos:column="12">PBM_ISSET<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">i<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="25">con<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">arg_strip<pos:position pos:line="6" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41"> <block pos:line="6" pos:column="42">{
	    <expr_stmt><expr><name pos:line="7" pos:column="13">numargs<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">--<pos:position pos:line="7" pos:column="22"/></operator></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></for>
    
    <for pos:line="11" pos:column="5">for<control pos:line="11" pos:column="8">(<init><expr><name pos:line="11" pos:column="9">i<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator><literal type="number" pos:line="11" pos:column="11">1<pos:position pos:line="11" pos:column="12"/></literal></expr>;<pos:position pos:line="11" pos:column="13"/></init> <condition><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">&lt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">argc<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></condition> <incr><expr><name pos:line="11" pos:column="22">i<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">++<pos:position pos:line="11" pos:column="25"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="26"/></control> <block pos:line="11" pos:column="27">{
	<if pos:line="12" pos:column="9">if<condition pos:line="12" pos:column="11">(<expr><call><name pos:line="12" pos:column="12">PBM_ISSET<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">i<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="25">con<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">arg_strip<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <block pos:line="12" pos:column="42">{
	    <continue pos:line="13" pos:column="13">continue;<pos:position pos:line="13" pos:column="22"/></continue>
	}<pos:position pos:line="14" pos:column="10"/></block></then> <else pos:line="14" pos:column="11">else <block pos:line="14" pos:column="16">{
	    <if pos:line="15" pos:column="13">if<condition pos:line="15" pos:column="15">(<expr><name pos:line="15" pos:column="16">j<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">numargs<pos:position pos:line="15" pos:column="25"/></name></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">argv<pos:position pos:line="16" pos:column="21"/></name><index pos:line="16" pos:column="21">[<expr><name pos:line="16" pos:column="22">j<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">++<pos:position pos:line="16" pos:column="25"/></operator></expr>]<pos:position pos:line="16" pos:column="26"/></index></name><operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator><name><name pos:line="16" pos:column="27">argv<pos:position pos:line="16" pos:column="31"/></name><index pos:line="16" pos:column="31">[<expr><name pos:line="16" pos:column="32">i<pos:position pos:line="16" pos:column="33"/></name></expr>]<pos:position pos:line="16" pos:column="34"/></index></name></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
	    }<pos:position pos:line="17" pos:column="14"/></block></then> <else pos:line="17" pos:column="15">else <block pos:line="17" pos:column="20">{
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">argv<pos:position pos:line="18" pos:column="21"/></name><index pos:line="18" pos:column="21">[<expr><name pos:line="18" pos:column="22">j<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">++<pos:position pos:line="18" pos:column="25"/></operator></expr>]<pos:position pos:line="18" pos:column="26"/></index></name><operator pos:line="18" pos:column="26">=<pos:position pos:line="18" pos:column="27"/></operator><literal type="char" pos:line="18" pos:column="27">'\0'<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
	    }<pos:position pos:line="19" pos:column="14"/></block></else></if>
	}<pos:position pos:line="20" pos:column="10"/></block></else></if>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
    
    <return pos:line="23" pos:column="5">return<expr><operator pos:line="23" pos:column="11">(<pos:position pos:line="23" pos:column="12"/></operator><name pos:line="23" pos:column="12">numargs<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">)<pos:position pos:line="23" pos:column="20"/></operator></expr>;<pos:position pos:line="23" pos:column="21"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_56_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">unmap_file<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name><name pos:line="1" pos:column="16">struct<pos:position pos:line="1" pos:column="22"/></name> <name pos:line="1" pos:column="23">map_struct<pos:position pos:line="1" pos:column="33"/></name></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">map<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type>	<name pos:line="3" pos:column="17">ret<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">map<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">-&gt;<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="18">p<pos:position pos:line="5" pos:column="19"/></name></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20"> <block pos:line="5" pos:column="21">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">free<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name><name pos:line="6" pos:column="22">map<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">p<pos:position pos:line="6" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="7" pos:column="17">map<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">p<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name><name pos:line="9" pos:column="15">map<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">status<pos:position pos:line="9" pos:column="26"/></name></name></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">memset<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">map<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="21">0<pos:position pos:line="10" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="24">sizeof <name><name pos:line="10" pos:column="31">map<pos:position pos:line="10" pos:column="34"/></name><index pos:line="10" pos:column="34">[<expr><literal type="number" pos:line="10" pos:column="35">0<pos:position pos:line="10" pos:column="36"/></literal></expr>]<pos:position pos:line="10" pos:column="37"/></index></name></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">free<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">map<pos:position pos:line="11" pos:column="17"/></name></expr></argument>)<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>

	<return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">ret<pos:position pos:line="13" pos:column="19"/></name></expr>;<pos:position pos:line="13" pos:column="20"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

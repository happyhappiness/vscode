<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_33_rsync-0.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_sums<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">sum_struct<pos:position pos:line="1" pos:column="40"/></name></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">s<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">f_out<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* tell the other guy how many we are going to be doing and how many
     bytes there are in the last chunk */</comment>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">write_int<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">f_out<pos:position pos:line="7" pos:column="18"/></name></expr></argument>,<argument><expr><ternary><condition><expr><name pos:line="7" pos:column="19">s<pos:position pos:line="7" pos:column="20"/></name></expr>?<pos:position pos:line="7" pos:column="21"/></condition><then><expr><name><name pos:line="7" pos:column="21">s<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">count<pos:position pos:line="7" pos:column="29"/></name></name></expr></then><else pos:line="7" pos:column="29">:<expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">write_int<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">f_out<pos:position pos:line="8" pos:column="18"/></name></expr></argument>,<argument><expr><ternary><condition><expr><name pos:line="8" pos:column="19">s<pos:position pos:line="8" pos:column="20"/></name></expr>?<pos:position pos:line="8" pos:column="21"/></condition><then><expr><name><name pos:line="8" pos:column="21">s<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">n<pos:position pos:line="8" pos:column="25"/></name></name></expr></then><else pos:line="8" pos:column="25">:<expr><name pos:line="8" pos:column="26">block_size<pos:position pos:line="8" pos:column="36"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">write_int<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">f_out<pos:position pos:line="9" pos:column="18"/></name></expr></argument>,<argument><expr><ternary><condition><expr><name pos:line="9" pos:column="19">s<pos:position pos:line="9" pos:column="20"/></name></expr>?<pos:position pos:line="9" pos:column="21"/></condition><then><expr><name><name pos:line="9" pos:column="21">s<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">remainder<pos:position pos:line="9" pos:column="33"/></name></name></expr></then><else pos:line="9" pos:column="33">:<expr><literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">s<pos:position pos:line="10" pos:column="8"/></name></expr>)<pos:position pos:line="10" pos:column="9"/></condition><then pos:line="10" pos:column="9">
    <block type="pseudo"><for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">=<pos:position pos:line="11" pos:column="12"/></operator><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></init><condition><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">&lt;<pos:position pos:line="11" pos:column="19"/></operator><name><name pos:line="11" pos:column="16">s<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">count<pos:position pos:line="11" pos:column="24"/></name></name></expr>;<pos:position pos:line="11" pos:column="25"/></condition><incr><expr><name pos:line="11" pos:column="25">i<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">++<pos:position pos:line="11" pos:column="28"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="29"/></control> <block pos:line="11" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">write_int<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">f_out<pos:position pos:line="12" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="12" pos:column="23">s<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">sums<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[<expr><name pos:line="12" pos:column="31">i<pos:position pos:line="12" pos:column="32"/></name></expr>]<pos:position pos:line="12" pos:column="33"/></index></name><operator pos:line="12" pos:column="33">.<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">sum1<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">write_buf<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name pos:line="13" pos:column="17">f_out<pos:position pos:line="13" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="13" pos:column="23">s<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">-&gt;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="26">sums<pos:position pos:line="13" pos:column="30"/></name><index pos:line="13" pos:column="30">[<expr><name pos:line="13" pos:column="31">i<pos:position pos:line="13" pos:column="32"/></name></expr>]<pos:position pos:line="13" pos:column="33"/></index></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">sum2<pos:position pos:line="13" pos:column="38"/></name></expr></argument>,<argument><expr><name pos:line="13" pos:column="39">SUM_LENGTH<pos:position pos:line="13" pos:column="49"/></name></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></for></block></then></if>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">write_flush<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><name pos:line="15" pos:column="15">f_out<pos:position pos:line="15" pos:column="20"/></name></expr></argument>)<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

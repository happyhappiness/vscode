<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_38_rsync-2.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_one_exclude<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">name<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="42">struct<pos:position pos:line="1" pos:column="48"/></name> <name pos:line="1" pos:column="49">exclude_struct<pos:position pos:line="1" pos:column="63"/></name></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">ex<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">name_is_dir<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">p<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">match_start<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">pattern<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><name><name pos:line="6" pos:column="25">ex<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">pattern<pos:position pos:line="6" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>

	<comment type="block" pos:line="8" pos:column="9">/* If the pattern does not have any slashes AND it does not have
	 * a "**" (which could match a slash), then we just match the
	 * name portion of the path. */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">ex<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">-&gt;<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="18">slash_cnt<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">&amp;&amp;<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="31">!<pos:position pos:line="11" pos:column="32"/></operator><operator pos:line="11" pos:column="32">(<pos:position pos:line="11" pos:column="33"/></operator><name><name pos:line="11" pos:column="33">ex<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">match_flags<pos:position pos:line="11" pos:column="48"/></name></name> <operator pos:line="11" pos:column="49">&amp;<pos:position pos:line="11" pos:column="54"/></operator> <name pos:line="11" pos:column="51">MATCHFLG_WILD2<pos:position pos:line="11" pos:column="65"/></name><operator pos:line="11" pos:column="65">)<pos:position pos:line="11" pos:column="66"/></operator></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67"> <block pos:line="11" pos:column="68">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">(<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">p<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">strrchr<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">name<pos:position pos:line="12" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="12" pos:column="39">'/'<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call><operator pos:line="12" pos:column="43">)<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="45">!=<pos:position pos:line="12" pos:column="47"/></operator> <name pos:line="12" pos:column="48">NULL<pos:position pos:line="12" pos:column="52"/></name></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">name<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">p<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator><literal type="number" pos:line="13" pos:column="34">1<pos:position pos:line="13" pos:column="35"/></literal></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt></block></then></if>
	}<pos:position pos:line="14" pos:column="10"/></block></then>
	<elseif pos:line="15" pos:column="9">else <if pos:line="15" pos:column="14">if <condition pos:line="15" pos:column="17">(<expr><operator pos:line="15" pos:column="18">(<pos:position pos:line="15" pos:column="19"/></operator><name><name pos:line="15" pos:column="19">ex<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">match_flags<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">&amp;<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="37">MATCHFLG_ABS_PATH<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">)<pos:position pos:line="15" pos:column="55"/></operator> <operator pos:line="15" pos:column="56">&amp;&amp;<pos:position pos:line="15" pos:column="66"/></operator> <operator pos:line="15" pos:column="59">*<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="60">name<pos:position pos:line="15" pos:column="64"/></name> <operator pos:line="15" pos:column="65">!=<pos:position pos:line="15" pos:column="67"/></operator> <literal type="char" pos:line="15" pos:column="68">'/'<pos:position pos:line="15" pos:column="71"/></literal></expr>)<pos:position pos:line="15" pos:column="72"/></condition><then pos:line="15" pos:column="72"> <block pos:line="15" pos:column="73">{
		<decl_stmt><decl><specifier pos:line="16" pos:column="17">static<pos:position pos:line="16" pos:column="23"/></specifier> <type><name pos:line="16" pos:column="24">char<pos:position pos:line="16" pos:column="28"/></name></type> <name><name pos:line="16" pos:column="29">full_name<pos:position pos:line="16" pos:column="38"/></name><index pos:line="16" pos:column="38">[<expr><name pos:line="16" pos:column="39">MAXPATHLEN<pos:position pos:line="16" pos:column="49"/></name></expr>]<pos:position pos:line="16" pos:column="50"/></index></name></decl>;<pos:position pos:line="16" pos:column="51"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">plus<pos:position pos:line="17" pos:column="25"/></name> <init pos:line="17" pos:column="26">= <expr><ternary><condition><expr><name><name pos:line="17" pos:column="28">curr_dir<pos:position pos:line="17" pos:column="36"/></name><index pos:line="17" pos:column="36">[<expr><literal type="number" pos:line="17" pos:column="37">1<pos:position pos:line="17" pos:column="38"/></literal></expr>]<pos:position pos:line="17" pos:column="39"/></index></name> <operator pos:line="17" pos:column="40">==<pos:position pos:line="17" pos:column="42"/></operator> <literal type="char" pos:line="17" pos:column="43">'\0'<pos:position pos:line="17" pos:column="47"/></literal></expr>?<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <expr><literal type="number" pos:line="17" pos:column="49">1<pos:position pos:line="17" pos:column="50"/></literal></expr> <pos:position pos:line="17" pos:column="51"/></then><else pos:line="17" pos:column="51">: <expr><literal type="number" pos:line="17" pos:column="53">0<pos:position pos:line="17" pos:column="54"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="17" pos:column="55"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">pathjoin<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">full_name<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="37">sizeof <name pos:line="18" pos:column="44">full_name<pos:position pos:line="18" pos:column="53"/></name></sizeof></expr></argument>, <argument><expr><name pos:line="18" pos:column="55">curr_dir<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">+<pos:position pos:line="18" pos:column="64"/></operator><name pos:line="18" pos:column="64">plus<pos:position pos:line="18" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="70">name<pos:position pos:line="18" pos:column="74"/></name></expr></argument>)<pos:position pos:line="18" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="76"/></expr_stmt>
		<expr_stmt><expr><name pos:line="19" pos:column="17">name<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">full_name<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">name<pos:position pos:line="22" pos:column="18"/></name><index pos:line="22" pos:column="18">[<expr><literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr>]<pos:position pos:line="22" pos:column="21"/></index></name></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22"> <block type="pseudo"><return pos:line="22" pos:column="23">return <expr><literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></return></block></then></if>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">ex<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">directory<pos:position pos:line="24" pos:column="26"/></name></name> <operator pos:line="24" pos:column="27">&amp;&amp;<pos:position pos:line="24" pos:column="37"/></operator> <operator pos:line="24" pos:column="30">!<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">name_is_dir<pos:position pos:line="24" pos:column="42"/></name></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <block type="pseudo"><return pos:line="24" pos:column="44">return <expr><literal type="number" pos:line="24" pos:column="51">0<pos:position pos:line="24" pos:column="52"/></literal></expr>;<pos:position pos:line="24" pos:column="53"/></return></block></then></if>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">pattern<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">==<pos:position pos:line="26" pos:column="24"/></operator> <literal type="char" pos:line="26" pos:column="25">'/'<pos:position pos:line="26" pos:column="28"/></literal></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29"> <block pos:line="26" pos:column="30">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">match_start<pos:position pos:line="27" pos:column="28"/></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <literal type="number" pos:line="27" pos:column="31">1<pos:position pos:line="27" pos:column="32"/></literal></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="28" pos:column="17">pattern<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">++<pos:position pos:line="28" pos:column="26"/></operator></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">name<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">==<pos:position pos:line="29" pos:column="29"/></operator> <literal type="char" pos:line="29" pos:column="30">'/'<pos:position pos:line="29" pos:column="33"/></literal></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34">
			<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="25">name<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">++<pos:position pos:line="30" pos:column="31"/></operator></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt></block></then></if>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">ex<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">match_flags<pos:position pos:line="33" pos:column="28"/></name></name> <operator pos:line="33" pos:column="29">&amp;<pos:position pos:line="33" pos:column="34"/></operator> <name pos:line="33" pos:column="31">MATCHFLG_WILD<pos:position pos:line="33" pos:column="44"/></name></expr>)<pos:position pos:line="33" pos:column="45"/></condition><then pos:line="33" pos:column="45"> <block pos:line="33" pos:column="46">{
		<comment type="block" pos:line="34" pos:column="17">/* A non-anchored match with an infix slash and no "**"
		 * needs to match the last slash_cnt+1 name elements. */</comment>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">match_start<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">&amp;&amp;<pos:position pos:line="36" pos:column="44"/></operator> <name><name pos:line="36" pos:column="37">ex<pos:position pos:line="36" pos:column="39"/></name><operator pos:line="36" pos:column="39">-&gt;<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="41">slash_cnt<pos:position pos:line="36" pos:column="50"/></name></name> <operator pos:line="36" pos:column="51">&amp;&amp;<pos:position pos:line="36" pos:column="61"/></operator>
		    <operator pos:line="37" pos:column="21">!<pos:position pos:line="37" pos:column="22"/></operator><operator pos:line="37" pos:column="22">(<pos:position pos:line="37" pos:column="23"/></operator><name><name pos:line="37" pos:column="23">ex<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">match_flags<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">&amp;<pos:position pos:line="37" pos:column="44"/></operator> <name pos:line="37" pos:column="41">MATCHFLG_WILD2<pos:position pos:line="37" pos:column="55"/></name><operator pos:line="37" pos:column="55">)<pos:position pos:line="37" pos:column="56"/></operator></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57"> <block pos:line="37" pos:column="58">{
			<decl_stmt><decl><type><name pos:line="38" pos:column="25">int<pos:position pos:line="38" pos:column="28"/></name></type> <name pos:line="38" pos:column="29">cnt<pos:position pos:line="38" pos:column="32"/></name> <init pos:line="38" pos:column="33">= <expr><name><name pos:line="38" pos:column="35">ex<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">slash_cnt<pos:position pos:line="38" pos:column="48"/></name></name> <operator pos:line="38" pos:column="49">+<pos:position pos:line="38" pos:column="50"/></operator> <literal type="number" pos:line="38" pos:column="51">1<pos:position pos:line="38" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="53"/></decl_stmt>
			<for pos:line="39" pos:column="25">for <control pos:line="39" pos:column="29">(<init><expr><name pos:line="39" pos:column="30">p<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <name pos:line="39" pos:column="34">name<pos:position pos:line="39" pos:column="38"/></name> <operator pos:line="39" pos:column="39">+<pos:position pos:line="39" pos:column="40"/></operator> <call><name pos:line="39" pos:column="41">strlen<pos:position pos:line="39" pos:column="47"/></name><argument_list pos:line="39" pos:column="47">(<argument><expr><name pos:line="39" pos:column="48">name<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></call> <operator pos:line="39" pos:column="54">-<pos:position pos:line="39" pos:column="55"/></operator> <literal type="number" pos:line="39" pos:column="56">1<pos:position pos:line="39" pos:column="57"/></literal></expr>;<pos:position pos:line="39" pos:column="58"/></init> <condition><expr><name pos:line="39" pos:column="59">p<pos:position pos:line="39" pos:column="60"/></name> <operator pos:line="39" pos:column="61">&gt;=<pos:position pos:line="39" pos:column="66"/></operator> <name pos:line="39" pos:column="64">name<pos:position pos:line="39" pos:column="68"/></name></expr>;<pos:position pos:line="39" pos:column="69"/></condition> <incr><expr><name pos:line="39" pos:column="70">p<pos:position pos:line="39" pos:column="71"/></name><operator pos:line="39" pos:column="71">--<pos:position pos:line="39" pos:column="73"/></operator></expr></incr>)<pos:position pos:line="39" pos:column="74"/></control> <block pos:line="39" pos:column="75">{
				<if pos:line="40" pos:column="33">if <condition pos:line="40" pos:column="36">(<expr><operator pos:line="40" pos:column="37">*<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">p<pos:position pos:line="40" pos:column="39"/></name> <operator pos:line="40" pos:column="40">==<pos:position pos:line="40" pos:column="42"/></operator> <literal type="char" pos:line="40" pos:column="43">'/'<pos:position pos:line="40" pos:column="46"/></literal> <operator pos:line="40" pos:column="47">&amp;&amp;<pos:position pos:line="40" pos:column="57"/></operator> <operator pos:line="40" pos:column="50">!<pos:position pos:line="40" pos:column="51"/></operator><operator pos:line="40" pos:column="51">--<pos:position pos:line="40" pos:column="53"/></operator><name pos:line="40" pos:column="53">cnt<pos:position pos:line="40" pos:column="56"/></name></expr>)<pos:position pos:line="40" pos:column="57"/></condition><then pos:line="40" pos:column="57">
					<block type="pseudo"><break pos:line="41" pos:column="41">break;<pos:position pos:line="41" pos:column="47"/></break></block></then></if>
			}<pos:position pos:line="42" pos:column="26"/></block></for>
			<expr_stmt><expr><name pos:line="43" pos:column="25">name<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <name pos:line="43" pos:column="32">p<pos:position pos:line="43" pos:column="33"/></name><operator pos:line="43" pos:column="33">+<pos:position pos:line="43" pos:column="34"/></operator><literal type="number" pos:line="43" pos:column="34">1<pos:position pos:line="43" pos:column="35"/></literal></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><call><name pos:line="45" pos:column="21">wildmatch<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">pattern<pos:position pos:line="45" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="40">name<pos:position pos:line="45" pos:column="44"/></name></expr></argument>)<pos:position pos:line="45" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="46"/></condition><then pos:line="45" pos:column="46">
			<block type="pseudo"><return pos:line="46" pos:column="25">return <expr><literal type="number" pos:line="46" pos:column="32">1<pos:position pos:line="46" pos:column="33"/></literal></expr>;<pos:position pos:line="46" pos:column="34"/></return></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name><name pos:line="47" pos:column="21">ex<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">match_flags<pos:position pos:line="47" pos:column="36"/></name></name> <operator pos:line="47" pos:column="37">&amp;<pos:position pos:line="47" pos:column="42"/></operator> <name pos:line="47" pos:column="39">MATCHFLG_WILD2_PREFIX<pos:position pos:line="47" pos:column="60"/></name></expr>)<pos:position pos:line="47" pos:column="61"/></condition><then pos:line="47" pos:column="61"> <block pos:line="47" pos:column="62">{
			<comment type="block" pos:line="48" pos:column="25">/* If the **-prefixed pattern has a '/' as the next
			 * character, then try to match the rest of the
			 * pattern at the root. */</comment>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name><name pos:line="51" pos:column="29">pattern<pos:position pos:line="51" pos:column="36"/></name><index pos:line="51" pos:column="36">[<expr><literal type="number" pos:line="51" pos:column="37">2<pos:position pos:line="51" pos:column="38"/></literal></expr>]<pos:position pos:line="51" pos:column="39"/></index></name> <operator pos:line="51" pos:column="40">==<pos:position pos:line="51" pos:column="42"/></operator> <literal type="char" pos:line="51" pos:column="43">'/'<pos:position pos:line="51" pos:column="46"/></literal> <operator pos:line="51" pos:column="47">&amp;&amp;<pos:position pos:line="51" pos:column="57"/></operator> <call><name pos:line="51" pos:column="50">wildmatch<pos:position pos:line="51" pos:column="59"/></name><argument_list pos:line="51" pos:column="59">(<argument><expr><name pos:line="51" pos:column="60">pattern<pos:position pos:line="51" pos:column="67"/></name><operator pos:line="51" pos:column="67">+<pos:position pos:line="51" pos:column="68"/></operator><literal type="number" pos:line="51" pos:column="68">3<pos:position pos:line="51" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="71">name<pos:position pos:line="51" pos:column="75"/></name></expr></argument>)<pos:position pos:line="51" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="77"/></condition><then pos:line="51" pos:column="77">
				<block type="pseudo"><return pos:line="52" pos:column="33">return <expr><literal type="number" pos:line="52" pos:column="40">1<pos:position pos:line="52" pos:column="41"/></literal></expr>;<pos:position pos:line="52" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="53" pos:column="18"/></block></then>
		<elseif pos:line="54" pos:column="17">else <if pos:line="54" pos:column="22">if <condition pos:line="54" pos:column="25">(<expr><operator pos:line="54" pos:column="26">!<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="27">match_start<pos:position pos:line="54" pos:column="38"/></name> <operator pos:line="54" pos:column="39">&amp;&amp;<pos:position pos:line="54" pos:column="49"/></operator> <name><name pos:line="54" pos:column="42">ex<pos:position pos:line="54" pos:column="44"/></name><operator pos:line="54" pos:column="44">-&gt;<pos:position pos:line="54" pos:column="49"/></operator><name pos:line="54" pos:column="46">match_flags<pos:position pos:line="54" pos:column="57"/></name></name> <operator pos:line="54" pos:column="58">&amp;<pos:position pos:line="54" pos:column="63"/></operator> <name pos:line="54" pos:column="60">MATCHFLG_WILD2<pos:position pos:line="54" pos:column="74"/></name></expr>)<pos:position pos:line="54" pos:column="75"/></condition><then pos:line="54" pos:column="75"> <block pos:line="54" pos:column="76">{
			<comment type="block" pos:line="55" pos:column="25">/* A non-anchored match with an infix or trailing "**"
			 * (but not a prefixed "**") needs to try matching
			 * after every slash. */</comment>
			<while pos:line="58" pos:column="25">while <condition pos:line="58" pos:column="31">(<expr><operator pos:line="58" pos:column="32">(<pos:position pos:line="58" pos:column="33"/></operator><name pos:line="58" pos:column="33">name<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">=<pos:position pos:line="58" pos:column="39"/></operator> <call><name pos:line="58" pos:column="40">strchr<pos:position pos:line="58" pos:column="46"/></name><argument_list pos:line="58" pos:column="46">(<argument><expr><name pos:line="58" pos:column="47">name<pos:position pos:line="58" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="58" pos:column="53">'/'<pos:position pos:line="58" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call><operator pos:line="58" pos:column="57">)<pos:position pos:line="58" pos:column="58"/></operator> <operator pos:line="58" pos:column="59">!=<pos:position pos:line="58" pos:column="61"/></operator> <name pos:line="58" pos:column="62">NULL<pos:position pos:line="58" pos:column="66"/></name></expr>)<pos:position pos:line="58" pos:column="67"/></condition> <block pos:line="58" pos:column="68">{
				<expr_stmt><expr><name pos:line="59" pos:column="33">name<pos:position pos:line="59" pos:column="37"/></name><operator pos:line="59" pos:column="37">++<pos:position pos:line="59" pos:column="39"/></operator></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt>
				<if pos:line="60" pos:column="33">if <condition pos:line="60" pos:column="36">(<expr><call><name pos:line="60" pos:column="37">wildmatch<pos:position pos:line="60" pos:column="46"/></name><argument_list pos:line="60" pos:column="46">(<argument><expr><name pos:line="60" pos:column="47">pattern<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="56">name<pos:position pos:line="60" pos:column="60"/></name></expr></argument>)<pos:position pos:line="60" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="62"/></condition><then pos:line="60" pos:column="62">
					<block type="pseudo"><return pos:line="61" pos:column="41">return <expr><literal type="number" pos:line="61" pos:column="48">1<pos:position pos:line="61" pos:column="49"/></literal></expr>;<pos:position pos:line="61" pos:column="50"/></return></block></then></if>
			}<pos:position pos:line="62" pos:column="26"/></block></while>
		}<pos:position pos:line="63" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="64" pos:column="10"/></block></then> <elseif pos:line="64" pos:column="11">else <if pos:line="64" pos:column="16">if <condition pos:line="64" pos:column="19">(<expr><name pos:line="64" pos:column="20">match_start<pos:position pos:line="64" pos:column="31"/></name></expr>)<pos:position pos:line="64" pos:column="32"/></condition><then pos:line="64" pos:column="32"> <block pos:line="64" pos:column="33">{
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><call><name pos:line="65" pos:column="21">strcmp<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">name<pos:position pos:line="65" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="65" pos:column="33">pattern<pos:position pos:line="65" pos:column="40"/></name></expr></argument>)<pos:position pos:line="65" pos:column="41"/></argument_list></call> <operator pos:line="65" pos:column="42">==<pos:position pos:line="65" pos:column="44"/></operator> <literal type="number" pos:line="65" pos:column="45">0<pos:position pos:line="65" pos:column="46"/></literal></expr>)<pos:position pos:line="65" pos:column="47"/></condition><then pos:line="65" pos:column="47">
			<block type="pseudo"><return pos:line="66" pos:column="25">return <expr><literal type="number" pos:line="66" pos:column="32">1<pos:position pos:line="66" pos:column="33"/></literal></expr>;<pos:position pos:line="66" pos:column="34"/></return></block></then></if>
	}<pos:position pos:line="67" pos:column="10"/></block></then></if></elseif> <else pos:line="67" pos:column="11">else <block pos:line="67" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="68" pos:column="17">int<pos:position pos:line="68" pos:column="20"/></name></type> <name pos:line="68" pos:column="21">l1<pos:position pos:line="68" pos:column="23"/></name> <init pos:line="68" pos:column="24">= <expr><call><name pos:line="68" pos:column="26">strlen<pos:position pos:line="68" pos:column="32"/></name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">name<pos:position pos:line="68" pos:column="37"/></name></expr></argument>)<pos:position pos:line="68" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="68" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="69" pos:column="17">int<pos:position pos:line="69" pos:column="20"/></name></type> <name pos:line="69" pos:column="21">l2<pos:position pos:line="69" pos:column="23"/></name> <init pos:line="69" pos:column="24">= <expr><call><name pos:line="69" pos:column="26">strlen<pos:position pos:line="69" pos:column="32"/></name><argument_list pos:line="69" pos:column="32">(<argument><expr><name pos:line="69" pos:column="33">pattern<pos:position pos:line="69" pos:column="40"/></name></expr></argument>)<pos:position pos:line="69" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="69" pos:column="42"/></decl_stmt>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">l2<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">&lt;=<pos:position pos:line="70" pos:column="29"/></operator> <name pos:line="70" pos:column="27">l1<pos:position pos:line="70" pos:column="29"/></name> <operator pos:line="70" pos:column="30">&amp;&amp;<pos:position pos:line="70" pos:column="40"/></operator>
		    <call><name pos:line="71" pos:column="21">strcmp<pos:position pos:line="71" pos:column="27"/></name><argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">name<pos:position pos:line="71" pos:column="32"/></name><operator pos:line="71" pos:column="32">+<pos:position pos:line="71" pos:column="33"/></operator><operator pos:line="71" pos:column="33">(<pos:position pos:line="71" pos:column="34"/></operator><name pos:line="71" pos:column="34">l1<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-<pos:position pos:line="71" pos:column="37"/></operator><name pos:line="71" pos:column="37">l2<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">)<pos:position pos:line="71" pos:column="40"/></operator></expr></argument>,<argument><expr><name pos:line="71" pos:column="41">pattern<pos:position pos:line="71" pos:column="48"/></name></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call> <operator pos:line="71" pos:column="50">==<pos:position pos:line="71" pos:column="52"/></operator> <literal type="number" pos:line="71" pos:column="53">0<pos:position pos:line="71" pos:column="54"/></literal> <operator pos:line="71" pos:column="55">&amp;&amp;<pos:position pos:line="71" pos:column="65"/></operator>
		    <operator pos:line="72" pos:column="21">(<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">l1<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">==<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="26">l2<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">||<pos:position pos:line="72" pos:column="31"/></operator> <name><name pos:line="72" pos:column="32">name<pos:position pos:line="72" pos:column="36"/></name><index pos:line="72" pos:column="36">[<expr><name pos:line="72" pos:column="37">l1<pos:position pos:line="72" pos:column="39"/></name><operator pos:line="72" pos:column="39">-<pos:position pos:line="72" pos:column="40"/></operator><operator pos:line="72" pos:column="40">(<pos:position pos:line="72" pos:column="41"/></operator><name pos:line="72" pos:column="41">l2<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">+<pos:position pos:line="72" pos:column="44"/></operator><literal type="number" pos:line="72" pos:column="44">1<pos:position pos:line="72" pos:column="45"/></literal><operator pos:line="72" pos:column="45">)<pos:position pos:line="72" pos:column="46"/></operator></expr>]<pos:position pos:line="72" pos:column="47"/></index></name> <operator pos:line="72" pos:column="48">==<pos:position pos:line="72" pos:column="50"/></operator> <literal type="char" pos:line="72" pos:column="51">'/'<pos:position pos:line="72" pos:column="54"/></literal><operator pos:line="72" pos:column="54">)<pos:position pos:line="72" pos:column="55"/></operator></expr>)<pos:position pos:line="72" pos:column="56"/></condition><then pos:line="72" pos:column="56"> <block pos:line="72" pos:column="57">{
			<return pos:line="73" pos:column="25">return <expr><literal type="number" pos:line="73" pos:column="32">1<pos:position pos:line="73" pos:column="33"/></literal></expr>;<pos:position pos:line="73" pos:column="34"/></return>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>
	}<pos:position pos:line="75" pos:column="10"/></block></else></if>

	<return pos:line="77" pos:column="9">return <expr><literal type="number" pos:line="77" pos:column="16">0<pos:position pos:line="77" pos:column="17"/></literal></expr>;<pos:position pos:line="77" pos:column="18"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_187_rsync-2.6.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">read_item_attrs<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">f_in<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">f_out<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">ndx<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">uchar<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">type_ptr<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
		    <parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">buf<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">len_ptr<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">uchar<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">fnamecmp_type<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">FNAMECMP_FNAME<pos:position pos:line="5" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">iflags<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><ternary><condition><expr><name pos:line="6" pos:column="22">protocol_version<pos:position pos:line="6" pos:column="38"/></name> <operator pos:line="6" pos:column="39">&gt;=<pos:position pos:line="6" pos:column="44"/></operator> <literal type="number" pos:line="6" pos:column="42">29<pos:position pos:line="6" pos:column="44"/></literal></expr> ?<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46"> <expr><call><name pos:line="6" pos:column="47">read_shortint<pos:position pos:line="6" pos:column="60"/></name><argument_list pos:line="6" pos:column="60">(<argument><expr><name pos:line="6" pos:column="61">f_in<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>
		   <pos:position pos:line="7" pos:column="6"/></then><else pos:line="7" pos:column="20">: <expr><name pos:line="7" pos:column="22">ITEM_TRANSFER<pos:position pos:line="7" pos:column="35"/></name> <operator pos:line="7" pos:column="36">|<pos:position pos:line="7" pos:column="37"/></operator> <name pos:line="7" pos:column="38">ITEM_MISSING_DATA<pos:position pos:line="7" pos:column="55"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="56"/></decl_stmt>

	<comment type="block" pos:line="9" pos:column="9">/* Handle the new keep-alive (no-op) packet. */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">ndx<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name><name pos:line="10" pos:column="20">the_file_list<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">-&gt;<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="35">count<pos:position pos:line="10" pos:column="40"/></name></name> <operator pos:line="10" pos:column="41">&amp;&amp;<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="44">iflags<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">==<pos:position pos:line="10" pos:column="53"/></operator> <name pos:line="10" pos:column="54">ITEM_IS_NEW<pos:position pos:line="10" pos:column="65"/></name></expr>)<pos:position pos:line="10" pos:column="66"/></condition><then pos:line="10" pos:column="66">
		<block type="pseudo"><empty_stmt pos:line="11" pos:column="17">;<pos:position pos:line="11" pos:column="18"/></empty_stmt></block></then>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><name pos:line="12" pos:column="18">ndx<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">&lt;<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">ndx<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">&gt;=<pos:position pos:line="12" pos:column="38"/></operator> <name><name pos:line="12" pos:column="36">the_file_list<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">-&gt;<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="51">count<pos:position pos:line="12" pos:column="56"/></name></name></expr>)<pos:position pos:line="12" pos:column="57"/></condition><then pos:line="12" pos:column="57"> <block pos:line="12" pos:column="58">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">rprintf<pos:position pos:line="13" pos:column="24"/></name><argument_list pos:line="13" pos:column="24">(<argument><expr><name pos:line="13" pos:column="25">FERROR<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="33">"Invalid file index: %d (count=%d) [%s]\n"<pos:position pos:line="13" pos:column="75"/></literal></expr></argument>,
			<argument><expr><name pos:line="14" pos:column="25">ndx<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="30">the_file_list<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">count<pos:position pos:line="14" pos:column="50"/></name></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="52">who_am_i<pos:position pos:line="14" pos:column="60"/></name><argument_list pos:line="14" pos:column="60">()<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">exit_cleanup<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">RERR_PROTOCOL<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif> <elseif pos:line="16" pos:column="11">else <if pos:line="16" pos:column="16">if <condition pos:line="16" pos:column="19">(<expr><name pos:line="16" pos:column="20">iflags<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">==<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">ITEM_IS_NEW<pos:position pos:line="16" pos:column="41"/></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42"> <block pos:line="16" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">rprintf<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">FERROR<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"Invalid itemized flag word: %x [%s]\n"<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>,
			<argument><expr><name pos:line="18" pos:column="25">iflags<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="33">who_am_i<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">()<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">exit_cleanup<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">RERR_PROTOCOL<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif></if>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">iflags<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">&amp;<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="22">ITEM_BASIS_TYPE_FOLLOWS<pos:position pos:line="22" pos:column="45"/></name></expr>)<pos:position pos:line="22" pos:column="46"/></condition><then pos:line="22" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="17">fnamecmp_type<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="33">read_byte<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">f_in<pos:position pos:line="23" pos:column="47"/></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt></block></then></if>
	<expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">type_ptr<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">fnamecmp_type<pos:position pos:line="24" pos:column="34"/></name></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">iflags<pos:position pos:line="26" pos:column="19"/></name> <operator pos:line="26" pos:column="20">&amp;<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="22">ITEM_XNAME_FOLLOWS<pos:position pos:line="26" pos:column="40"/></name></expr>)<pos:position pos:line="26" pos:column="41"/></condition><then pos:line="26" pos:column="41"> <block pos:line="26" pos:column="42">{
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><operator pos:line="27" pos:column="21">(<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">len<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <call><name pos:line="27" pos:column="28">read_vstring<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">f_in<pos:position pos:line="27" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="47">buf<pos:position pos:line="27" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">MAXPATHLEN<pos:position pos:line="27" pos:column="62"/></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call><operator pos:line="27" pos:column="63">)<pos:position pos:line="27" pos:column="64"/></operator> <operator pos:line="27" pos:column="65">&lt;<pos:position pos:line="27" pos:column="69"/></operator> <literal type="number" pos:line="27" pos:column="67">0<pos:position pos:line="27" pos:column="68"/></literal></expr>)<pos:position pos:line="27" pos:column="69"/></condition><then pos:line="27" pos:column="69">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="25">exit_cleanup<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">RERR_PROTOCOL<pos:position pos:line="28" pos:column="51"/></name></expr></argument>)<pos:position pos:line="28" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="53"/></expr_stmt></block></then></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
		<expr_stmt><expr><operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">buf<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="char" pos:line="30" pos:column="24">'\0'<pos:position pos:line="30" pos:column="28"/></literal></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">len<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <operator pos:line="31" pos:column="23">-<pos:position pos:line="31" pos:column="24"/></operator><literal type="number" pos:line="31" pos:column="24">1<pos:position pos:line="31" pos:column="25"/></literal></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></else></if>
	<expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">len_ptr<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">len<pos:position pos:line="33" pos:column="23"/></name></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>

	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">iflags<pos:position pos:line="35" pos:column="19"/></name> <operator pos:line="35" pos:column="20">&amp;<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="22">ITEM_TRANSFER<pos:position pos:line="35" pos:column="35"/></name></expr>)<pos:position pos:line="35" pos:column="36"/></condition><then pos:line="35" pos:column="36"> <block pos:line="35" pos:column="37">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">!<pos:position pos:line="36" pos:column="22"/></operator><call><name pos:line="36" pos:column="22">S_ISREG<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">the_file_list<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">-&gt;<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="45">files<pos:position pos:line="36" pos:column="50"/></name><index pos:line="36" pos:column="50">[<expr><name pos:line="36" pos:column="51">ndx<pos:position pos:line="36" pos:column="54"/></name></expr>]<pos:position pos:line="36" pos:column="55"/></index></name><operator pos:line="36" pos:column="55">-&gt;<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="57">mode<pos:position pos:line="36" pos:column="61"/></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="63"/></condition><then pos:line="36" pos:column="63"> <block pos:line="36" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">rprintf<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">FERROR<pos:position pos:line="37" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="38" pos:column="33">"received request to transfer non-regular file: %d [%s]\n"<pos:position pos:line="38" pos:column="91"/></literal></expr></argument>,
				<argument><expr><name pos:line="39" pos:column="33">ndx<pos:position pos:line="39" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="38">who_am_i<pos:position pos:line="39" pos:column="46"/></name><argument_list pos:line="39" pos:column="46">()<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">exit_cleanup<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">RERR_PROTOCOL<pos:position pos:line="40" pos:column="51"/></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></then> <elseif pos:line="42" pos:column="11">else <if pos:line="42" pos:column="16">if <condition pos:line="42" pos:column="19">(<expr><name pos:line="42" pos:column="20">f_out<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">&gt;=<pos:position pos:line="42" pos:column="31"/></operator> <literal type="number" pos:line="42" pos:column="29">0<pos:position pos:line="42" pos:column="30"/></literal></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31"> <block pos:line="42" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">write_ndx_and_attrs<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">(<argument><expr><name pos:line="43" pos:column="37">f_out<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">ndx<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="49">iflags<pos:position pos:line="43" pos:column="55"/></name></expr></argument>,
				    <argument><expr><name pos:line="44" pos:column="37">fnamecmp_type<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="52">buf<pos:position pos:line="44" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="57">len<pos:position pos:line="44" pos:column="60"/></name></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if></elseif></if>

	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">iflags<pos:position pos:line="47" pos:column="22"/></name></expr>;<pos:position pos:line="47" pos:column="23"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

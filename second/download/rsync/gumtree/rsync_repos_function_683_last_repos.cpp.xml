<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_683_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZEXPORT<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">deflatePrime<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">strm<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">bits<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">value<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">z_streamp<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">strm<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">bits<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">value<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">deflate_state<pos:position pos:line="6" pos:column="18"/></name> <modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type><name pos:line="6" pos:column="20">s<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">put<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">strm<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">Z_NULL<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">||<pos:position pos:line="9" pos:column="26"/></operator> <name><name pos:line="9" pos:column="27">strm<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">state<pos:position pos:line="9" pos:column="38"/></name></name> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">Z_NULL<pos:position pos:line="9" pos:column="48"/></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block type="pseudo"><return pos:line="9" pos:column="50">return <expr><name pos:line="9" pos:column="57">Z_STREAM_ERROR<pos:position pos:line="9" pos:column="71"/></name></expr>;<pos:position pos:line="9" pos:column="72"/></return></block></then></if>
    <expr_stmt><expr><name pos:line="10" pos:column="5">s<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <name><name pos:line="10" pos:column="9">strm<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">state<pos:position pos:line="10" pos:column="20"/></name></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">Bytef<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator><operator pos:line="11" pos:column="18">(<pos:position pos:line="11" pos:column="19"/></operator><name><name pos:line="11" pos:column="19">s<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">d_buf<pos:position pos:line="11" pos:column="27"/></name></name><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator> <operator pos:line="11" pos:column="29">&lt;<pos:position pos:line="11" pos:column="33"/></operator> <name><name pos:line="11" pos:column="31">s<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="34">pending_out<pos:position pos:line="11" pos:column="45"/></name></name> <operator pos:line="11" pos:column="46">+<pos:position pos:line="11" pos:column="47"/></operator> <operator pos:line="11" pos:column="48">(<pos:position pos:line="11" pos:column="49"/></operator><operator pos:line="11" pos:column="49">(<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="50">Buf_size<pos:position pos:line="11" pos:column="58"/></name> <operator pos:line="11" pos:column="59">+<pos:position pos:line="11" pos:column="60"/></operator> <literal type="number" pos:line="11" pos:column="61">7<pos:position pos:line="11" pos:column="62"/></literal><operator pos:line="11" pos:column="62">)<pos:position pos:line="11" pos:column="63"/></operator> <operator pos:line="11" pos:column="64">&gt;&gt;<pos:position pos:line="11" pos:column="69"/></operator> <literal type="number" pos:line="11" pos:column="67">3<pos:position pos:line="11" pos:column="68"/></literal><operator pos:line="11" pos:column="68">)<pos:position pos:line="11" pos:column="69"/></operator></expr>)<pos:position pos:line="11" pos:column="70"/></condition><then pos:line="11" pos:column="70">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">Z_BUF_ERROR<pos:position pos:line="12" pos:column="27"/></name></expr>;<pos:position pos:line="12" pos:column="28"/></return></block></then></if>
    <do pos:line="13" pos:column="5">do <block pos:line="13" pos:column="8">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">put<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <name pos:line="14" pos:column="15">Buf_size<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">-<pos:position pos:line="14" pos:column="25"/></operator> <name><name pos:line="14" pos:column="26">s<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">bi_valid<pos:position pos:line="14" pos:column="37"/></name></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">put<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&gt;<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="19">bits<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="13">put<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">bits<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">s<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">bi_buf<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">|=<pos:position pos:line="17" pos:column="21"/></operator> <call pos:line="17" pos:column="22">(<name pos:line="17" pos:column="23">ush<pos:position pos:line="17" pos:column="26"/></name>)<argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">(<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">value<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">&amp;<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="37">(<pos:position pos:line="17" pos:column="38"/></operator><operator pos:line="17" pos:column="38">(<pos:position pos:line="17" pos:column="39"/></operator><literal type="number" pos:line="17" pos:column="39">1<pos:position pos:line="17" pos:column="40"/></literal> <operator pos:line="17" pos:column="41">&lt;&lt;<pos:position pos:line="17" pos:column="49"/></operator> <name pos:line="17" pos:column="44">put<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">)<pos:position pos:line="17" pos:column="48"/></operator> <operator pos:line="17" pos:column="49">-<pos:position pos:line="17" pos:column="50"/></operator> <literal type="number" pos:line="17" pos:column="51">1<pos:position pos:line="17" pos:column="52"/></literal><operator pos:line="17" pos:column="52">)<pos:position pos:line="17" pos:column="53"/></operator><operator pos:line="17" pos:column="53">)<pos:position pos:line="17" pos:column="54"/></operator> <operator pos:line="17" pos:column="55">&lt;&lt;<pos:position pos:line="17" pos:column="63"/></operator> <name><name pos:line="17" pos:column="58">s<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">bi_valid<pos:position pos:line="17" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">s<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">bi_valid<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">+=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">put<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">_tr_flush_bits<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">s<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">value<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">&gt;&gt;=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="19">put<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">bits<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">-=<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">put<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block> while <condition pos:line="22" pos:column="13">(<expr><name pos:line="22" pos:column="14">bits<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition>;<pos:position pos:line="22" pos:column="20"/></do>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">Z_OK<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function_decl></unit>

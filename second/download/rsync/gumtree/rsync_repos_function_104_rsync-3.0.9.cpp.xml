<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_104_rsync-3.0.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">int<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">flush_a_msg<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">fd<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">msg_list_item<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">m<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><name><name pos:line="3" pos:column="35">msg_queue<pos:position pos:line="3" pos:column="44"/></name><operator pos:line="3" pos:column="44">.<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">head<pos:position pos:line="3" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="50"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">IVAL<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name><name pos:line="4" pos:column="24">m<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">buf<pos:position pos:line="4" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call> <operator pos:line="4" pos:column="35">&amp;<pos:position pos:line="4" pos:column="40"/></operator> <literal type="number" pos:line="4" pos:column="37">0xFFFFFF<pos:position pos:line="4" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">tag<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><operator pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></operator><operator pos:line="5" pos:column="20">(<pos:position pos:line="5" pos:column="21"/></operator><operator pos:line="5" pos:column="21">(<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">uchar<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">*<pos:position pos:line="5" pos:column="28"/></operator><operator pos:line="5" pos:column="28">)<pos:position pos:line="5" pos:column="29"/></operator><name><name pos:line="5" pos:column="29">m<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">buf<pos:position pos:line="5" pos:column="35"/></name></name><operator pos:line="5" pos:column="35">+<pos:position pos:line="5" pos:column="36"/></operator><literal type="number" pos:line="5" pos:column="36">3<pos:position pos:line="5" pos:column="37"/></literal><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator> <operator pos:line="5" pos:column="39">-<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">MPLEX_BASE<pos:position pos:line="5" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><name><name pos:line="7" pos:column="15">msg_queue<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">head<pos:position pos:line="7" pos:column="29"/></name></name> <operator pos:line="7" pos:column="30">=<pos:position pos:line="7" pos:column="31"/></operator> <name><name pos:line="7" pos:column="32">m<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">-&gt;<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="35">next<pos:position pos:line="7" pos:column="39"/></name></name><operator pos:line="7" pos:column="39">)<pos:position pos:line="7" pos:column="40"/></operator></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="17">msg_queue<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">tail<pos:position pos:line="8" pos:column="31"/></name></name> <operator pos:line="8" pos:column="32">=<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="34">NULL<pos:position pos:line="8" pos:column="38"/></name></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">defer_forwarding_messages<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">++<pos:position pos:line="10" pos:column="36"/></operator></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">mplex_write<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">fd<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">tag<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="30">m<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">buf<pos:position pos:line="11" pos:column="36"/></name></name> <operator pos:line="11" pos:column="37">+<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="39">4<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">len<pos:position pos:line="11" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="47">m<pos:position pos:line="11" pos:column="48"/></name><operator pos:line="11" pos:column="48">-&gt;<pos:position pos:line="11" pos:column="53"/></operator><name pos:line="11" pos:column="50">convert<pos:position pos:line="11" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name pos:line="12" pos:column="9">defer_forwarding_messages<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">--<pos:position pos:line="12" pos:column="36"/></operator></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">free<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">m<pos:position pos:line="14" pos:column="15"/></name></expr></argument>)<pos:position pos:line="14" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>

	<return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">len<pos:position pos:line="16" pos:column="19"/></name></expr>;<pos:position pos:line="16" pos:column="20"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

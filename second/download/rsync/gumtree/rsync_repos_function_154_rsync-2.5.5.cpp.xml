<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_154_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">skip_file<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">char<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">fname<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>,
		     <parameter><decl><type><name><name pos:line="2" pos:column="22">struct<pos:position pos:line="2" pos:column="28"/></name> <name pos:line="2" pos:column="29">file_struct<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">file<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">STRUCT_STAT<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">st<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name><name pos:line="4" pos:column="13">st<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">st_size<pos:position pos:line="4" pos:column="24"/></name></name> <operator pos:line="4" pos:column="25">!=<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="28">file<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">length<pos:position pos:line="4" pos:column="40"/></name></name></expr>)<pos:position pos:line="4" pos:column="41"/></condition><then pos:line="4" pos:column="41"> <block pos:line="4" pos:column="42">{
		<return pos:line="5" pos:column="17">return <expr><literal type="number" pos:line="5" pos:column="24">0<pos:position pos:line="5" pos:column="25"/></literal></expr>;<pos:position pos:line="5" pos:column="26"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then></if>
	
	<comment type="block" pos:line="8" pos:column="9">/* if always checksum is set then we use the checksum instead 
	   of the file time to determine whether to sync */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">always_checksum<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">&amp;&amp;<pos:position pos:line="10" pos:column="39"/></operator> <call><name pos:line="10" pos:column="32">S_ISREG<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><name><name pos:line="10" pos:column="40">st<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">st_mode<pos:position pos:line="10" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53"> <block pos:line="10" pos:column="54">{
		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name><name pos:line="11" pos:column="22">sum<pos:position pos:line="11" pos:column="25"/></name><index pos:line="11" pos:column="25">[<expr><name pos:line="11" pos:column="26">MD4_SUM_LENGTH<pos:position pos:line="11" pos:column="40"/></name></expr>]<pos:position pos:line="11" pos:column="41"/></index></name></decl>;<pos:position pos:line="11" pos:column="42"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name></type> <name><name pos:line="12" pos:column="22">fnamecmpdest<pos:position pos:line="12" pos:column="34"/></name><index pos:line="12" pos:column="34">[<expr><name pos:line="12" pos:column="35">MAXPATHLEN<pos:position pos:line="12" pos:column="45"/></name></expr>]<pos:position pos:line="12" pos:column="46"/></index></name></decl>;<pos:position pos:line="12" pos:column="47"/></decl_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">compare_dest<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">!=<pos:position pos:line="14" pos:column="36"/></operator> <name pos:line="14" pos:column="37">NULL<pos:position pos:line="14" pos:column="41"/></name></expr>)<pos:position pos:line="14" pos:column="42"/></condition><then pos:line="14" pos:column="42"> <block pos:line="14" pos:column="43">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><call><name pos:line="15" pos:column="29">access<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">(<argument><expr><name pos:line="15" pos:column="36">fname<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call> <operator pos:line="15" pos:column="46">!=<pos:position pos:line="15" pos:column="48"/></operator> <literal type="number" pos:line="15" pos:column="49">0<pos:position pos:line="15" pos:column="50"/></literal></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51"> <block pos:line="15" pos:column="52">{
				<expr_stmt><expr><call><name pos:line="16" pos:column="33">snprintf<pos:position pos:line="16" pos:column="41"/></name><argument_list pos:line="16" pos:column="41">(<argument><expr><name pos:line="16" pos:column="42">fnamecmpdest<pos:position pos:line="16" pos:column="54"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="55">MAXPATHLEN<pos:position pos:line="16" pos:column="65"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="66">"%s/%s"<pos:position pos:line="16" pos:column="73"/></literal></expr></argument>,
						    <argument><expr><name pos:line="17" pos:column="53">compare_dest<pos:position pos:line="17" pos:column="65"/></name></expr></argument>,<argument><expr><name pos:line="17" pos:column="66">fname<pos:position pos:line="17" pos:column="71"/></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
				<expr_stmt><expr><name pos:line="18" pos:column="33">fname<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">=<pos:position pos:line="18" pos:column="40"/></operator> <name pos:line="18" pos:column="41">fnamecmpdest<pos:position pos:line="18" pos:column="53"/></name></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">file_checksum<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">fname<pos:position pos:line="21" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="21" pos:column="37">sum<pos:position pos:line="21" pos:column="40"/></name></expr></argument>,<argument><expr><name><name pos:line="21" pos:column="41">st<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">st_size<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="54"/></expr_stmt>
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><name pos:line="22" pos:column="21">remote_version<pos:position pos:line="22" pos:column="35"/></name> <operator pos:line="22" pos:column="36">&lt;<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="38">21<pos:position pos:line="22" pos:column="40"/></literal></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
			<return pos:line="23" pos:column="25">return <expr><operator pos:line="23" pos:column="32">(<pos:position pos:line="23" pos:column="33"/></operator><call><name pos:line="23" pos:column="33">memcmp<pos:position pos:line="23" pos:column="39"/></name><argument_list pos:line="23" pos:column="39">(<argument><expr><name pos:line="23" pos:column="40">sum<pos:position pos:line="23" pos:column="43"/></name></expr></argument>,<argument><expr><name><name pos:line="23" pos:column="44">file<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">-&gt;<pos:position pos:line="23" pos:column="53"/></operator><name pos:line="23" pos:column="50">sum<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>,<argument><expr><literal type="number" pos:line="23" pos:column="54">2<pos:position pos:line="23" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call> <operator pos:line="23" pos:column="57">==<pos:position pos:line="23" pos:column="59"/></operator> <literal type="number" pos:line="23" pos:column="60">0<pos:position pos:line="23" pos:column="61"/></literal><operator pos:line="23" pos:column="61">)<pos:position pos:line="23" pos:column="62"/></operator></expr>;<pos:position pos:line="23" pos:column="63"/></return>
		}<pos:position pos:line="24" pos:column="18"/></block></then> <else pos:line="24" pos:column="19">else <block pos:line="24" pos:column="24">{
			<return pos:line="25" pos:column="25">return <expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><call><name pos:line="25" pos:column="33">memcmp<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">sum<pos:position pos:line="25" pos:column="43"/></name></expr></argument>,<argument><expr><name><name pos:line="25" pos:column="44">file<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">-&gt;<pos:position pos:line="25" pos:column="53"/></operator><name pos:line="25" pos:column="50">sum<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>,<argument><expr><name pos:line="25" pos:column="54">MD4_SUM_LENGTH<pos:position pos:line="25" pos:column="68"/></name></expr></argument>)<pos:position pos:line="25" pos:column="69"/></argument_list></call> <operator pos:line="25" pos:column="70">==<pos:position pos:line="25" pos:column="72"/></operator> <literal type="number" pos:line="25" pos:column="73">0<pos:position pos:line="25" pos:column="74"/></literal><operator pos:line="25" pos:column="74">)<pos:position pos:line="25" pos:column="75"/></operator></expr>;<pos:position pos:line="25" pos:column="76"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">size_only<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
		<return pos:line="30" pos:column="17">return <expr><literal type="number" pos:line="30" pos:column="24">1<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">ignore_times<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26"> <block pos:line="33" pos:column="27">{
		<return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><call><name pos:line="37" pos:column="17">cmp_modtime<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name><name pos:line="37" pos:column="29">st<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">st_mtime<pos:position pos:line="37" pos:column="41"/></name></name></expr></argument>,<argument><expr><name><name pos:line="37" pos:column="42">file<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">-&gt;<pos:position pos:line="37" pos:column="51"/></operator><name pos:line="37" pos:column="48">modtime<pos:position pos:line="37" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="56"/></argument_list></call> <operator pos:line="37" pos:column="57">==<pos:position pos:line="37" pos:column="59"/></operator> <literal type="number" pos:line="37" pos:column="60">0<pos:position pos:line="37" pos:column="61"/></literal><operator pos:line="37" pos:column="61">)<pos:position pos:line="37" pos:column="62"/></operator></expr>;<pos:position pos:line="37" pos:column="63"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_818_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sys_acl_create_entry<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">( <parameter><decl><type><name pos:line="1" pos:column="27">SMB_ACL_T<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">pacl<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">SMB_ACL_ENTRY_T<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">pentry<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">acl_entry_link<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">theacl<pos:position pos:line="3" pos:column="38"/></name></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">acl_entry_link<pos:position pos:line="4" pos:column="30"/></name></name> <modifier pos:line="4" pos:column="31">*<pos:position pos:line="4" pos:column="32"/></modifier></type><name pos:line="4" pos:column="32">acl_entryp<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">acl_entry_link<pos:position pos:line="5" pos:column="30"/></name></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="32">temp_entry<pos:position pos:line="5" pos:column="42"/></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">counting<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">DEBUG<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><literal type="number" pos:line="8" pos:column="15">10<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><literal type="string" pos:line="8" pos:column="19">"Entering the sys_acl_create_entry\n"<pos:position pos:line="8" pos:column="56"/></literal><operator pos:line="8" pos:column="56">)<pos:position pos:line="8" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><name pos:line="10" pos:column="9">theacl<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">acl_entryp<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="32">pacl<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="12" pos:column="9">/* Get to the end of the acl before adding entry */</comment>

	<for pos:line="14" pos:column="9">for<control pos:line="14" pos:column="12">(<init><expr><name pos:line="14" pos:column="13">counting<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator><literal type="number" pos:line="14" pos:column="22">0<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></init> <condition><expr><name pos:line="14" pos:column="25">counting<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">&lt;<pos:position pos:line="14" pos:column="38"/></operator> <name><name pos:line="14" pos:column="36">theacl<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">count<pos:position pos:line="14" pos:column="49"/></name></name></expr>;<pos:position pos:line="14" pos:column="50"/></condition> <incr><expr><name pos:line="14" pos:column="51">counting<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">++<pos:position pos:line="14" pos:column="61"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="62"/></control><block pos:line="14" pos:column="62">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">DEBUG<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="number" pos:line="15" pos:column="23">10<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>,<argument><expr><operator pos:line="15" pos:column="26">(<pos:position pos:line="15" pos:column="27"/></operator><literal type="string" pos:line="15" pos:column="27">"The acl_entryp is %d\n"<pos:position pos:line="15" pos:column="51"/></literal><operator pos:line="15" pos:column="51">,<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="52">acl_entryp<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">)<pos:position pos:line="15" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="16" pos:column="17">temp_entry<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">acl_entryp<pos:position pos:line="16" pos:column="40"/></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">acl_entryp<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name><name pos:line="17" pos:column="30">acl_entryp<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">-&gt;<pos:position pos:line="17" pos:column="45"/></operator><name pos:line="17" pos:column="42">nextp<pos:position pos:line="17" pos:column="47"/></name></name></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></for>

	<if pos:line="20" pos:column="9">if<condition pos:line="20" pos:column="11">(<expr><name><name pos:line="20" pos:column="12">theacl<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">count<pos:position pos:line="20" pos:column="25"/></name></name> <operator pos:line="20" pos:column="26">!=<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">0<pos:position pos:line="20" pos:column="30"/></literal></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then><block pos:line="20" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">temp_entry<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">nextp<pos:position pos:line="21" pos:column="34"/></name></name> <operator pos:line="21" pos:column="35">=<pos:position pos:line="21" pos:column="36"/></operator> <name pos:line="21" pos:column="37">acl_entryp<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">=<pos:position pos:line="21" pos:column="49"/></operator> <call><name pos:line="21" pos:column="50">SMB_MALLOC_P<pos:position pos:line="21" pos:column="62"/></name><argument_list pos:line="21" pos:column="62">(<argument><expr pos:line="21" pos:column="63">struct <name pos:line="21" pos:column="70">acl_entry_link<pos:position pos:line="21" pos:column="84"/></name></expr></argument>)<pos:position pos:line="21" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="86"/></expr_stmt>
		<if pos:line="22" pos:column="17">if<condition pos:line="22" pos:column="19">(<expr><name pos:line="22" pos:column="20">acl_entryp<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name pos:line="22" pos:column="34">NULL<pos:position pos:line="22" pos:column="38"/></name></expr>)<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39"> <block pos:line="22" pos:column="40">{
			<expr_stmt><expr><name pos:line="23" pos:column="25">errno<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">ENOMEM<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="24" pos:column="25">DEBUG<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><literal type="number" pos:line="24" pos:column="31">0<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>,<argument><expr><operator pos:line="24" pos:column="33">(<pos:position pos:line="24" pos:column="34"/></operator><literal type="string" pos:line="24" pos:column="34">"Error in sys_acl_create_entry is %d\n"<pos:position pos:line="24" pos:column="73"/></literal><operator pos:line="24" pos:column="73">,<pos:position pos:line="24" pos:column="74"/></operator><name pos:line="24" pos:column="74">errno<pos:position pos:line="24" pos:column="79"/></name><operator pos:line="24" pos:column="79">)<pos:position pos:line="24" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="82"/></expr_stmt>
			<return pos:line="25" pos:column="25">return<expr><operator pos:line="25" pos:column="31">(<pos:position pos:line="25" pos:column="32"/></operator><operator pos:line="25" pos:column="32">-<pos:position pos:line="25" pos:column="33"/></operator><literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator></expr>;<pos:position pos:line="25" pos:column="36"/></return>
		}<pos:position pos:line="26" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="28" pos:column="17">DEBUG<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><literal type="number" pos:line="28" pos:column="23">10<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>,<argument><expr><operator pos:line="28" pos:column="26">(<pos:position pos:line="28" pos:column="27"/></operator><literal type="string" pos:line="28" pos:column="27">"The acl_entryp is %d\n"<pos:position pos:line="28" pos:column="51"/></literal><operator pos:line="28" pos:column="51">,<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="52">acl_entryp<pos:position pos:line="28" pos:column="62"/></name><operator pos:line="28" pos:column="62">)<pos:position pos:line="28" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">acl_entryp<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">prevp<pos:position pos:line="29" pos:column="34"/></name></name> <operator pos:line="29" pos:column="35">=<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="37">temp_entry<pos:position pos:line="29" pos:column="47"/></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">DEBUG<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><literal type="number" pos:line="30" pos:column="23">10<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>,<argument><expr><operator pos:line="30" pos:column="26">(<pos:position pos:line="30" pos:column="27"/></operator><literal type="string" pos:line="30" pos:column="27">"The acl_entryp-&gt;prevp is %d\n"<pos:position pos:line="30" pos:column="61"/></literal><operator pos:line="30" pos:column="58">,<pos:position pos:line="30" pos:column="59"/></operator><name><name pos:line="30" pos:column="59">acl_entryp<pos:position pos:line="30" pos:column="69"/></name><operator pos:line="30" pos:column="69">-&gt;<pos:position pos:line="30" pos:column="74"/></operator><name pos:line="30" pos:column="71">prevp<pos:position pos:line="30" pos:column="76"/></name></name><operator pos:line="30" pos:column="76">)<pos:position pos:line="30" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="33" pos:column="9">*<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">pentry<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">=<pos:position pos:line="33" pos:column="18"/></operator> <name><name pos:line="33" pos:column="19">acl_entryp<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">entryp<pos:position pos:line="33" pos:column="37"/></name></name> <operator pos:line="33" pos:column="38">=<pos:position pos:line="33" pos:column="39"/></operator> <call><name pos:line="33" pos:column="40">SMB_MALLOC_P<pos:position pos:line="33" pos:column="52"/></name><argument_list pos:line="33" pos:column="52">(<argument><expr pos:line="33" pos:column="53">struct <name pos:line="33" pos:column="60">new_acl_entry<pos:position pos:line="33" pos:column="73"/></name></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="75"/></expr_stmt>
	<if pos:line="34" pos:column="9">if<condition pos:line="34" pos:column="11">(<expr><operator pos:line="34" pos:column="12">*<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">pentry<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">==<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">NULL<pos:position pos:line="34" pos:column="27"/></name></expr>)<pos:position pos:line="34" pos:column="28"/></condition><then pos:line="34" pos:column="28"> <block pos:line="34" pos:column="29">{
		<expr_stmt><expr><name pos:line="35" pos:column="17">errno<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">ENOMEM<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="36" pos:column="17">DEBUG<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr></argument>,<argument><expr><operator pos:line="36" pos:column="25">(<pos:position pos:line="36" pos:column="26"/></operator><literal type="string" pos:line="36" pos:column="26">"Error in sys_acl_create_entry is %d\n"<pos:position pos:line="36" pos:column="65"/></literal><operator pos:line="36" pos:column="65">,<pos:position pos:line="36" pos:column="66"/></operator><name pos:line="36" pos:column="66">errno<pos:position pos:line="36" pos:column="71"/></name><operator pos:line="36" pos:column="71">)<pos:position pos:line="36" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>
		<return pos:line="37" pos:column="17">return<expr><operator pos:line="37" pos:column="23">(<pos:position pos:line="37" pos:column="24"/></operator><operator pos:line="37" pos:column="24">-<pos:position pos:line="37" pos:column="25"/></operator><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal><operator pos:line="37" pos:column="26">)<pos:position pos:line="37" pos:column="27"/></operator></expr>;<pos:position pos:line="37" pos:column="28"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="40" pos:column="9">memset<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><operator pos:line="40" pos:column="16">*<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">pentry<pos:position pos:line="40" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="40" pos:column="24">0<pos:position pos:line="40" pos:column="25"/></literal></expr></argument>,<argument><expr><sizeof pos:line="40" pos:column="26">sizeof<argument_list pos:line="40" pos:column="32">(<argument><expr pos:line="40" pos:column="33">struct <name pos:line="40" pos:column="40">new_acl_entry<pos:position pos:line="40" pos:column="53"/></name></expr></argument>)<pos:position pos:line="40" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">acl_entryp<pos:position pos:line="41" pos:column="19"/></name><operator pos:line="41" pos:column="19">-&gt;<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="21">entryp<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">ace_len<pos:position pos:line="41" pos:column="36"/></name></name> <operator pos:line="41" pos:column="37">=<pos:position pos:line="41" pos:column="38"/></operator> <sizeof pos:line="41" pos:column="39">sizeof<argument_list pos:line="41" pos:column="45">(<argument><expr pos:line="41" pos:column="46">struct <name pos:line="41" pos:column="53">acl_entry<pos:position pos:line="41" pos:column="62"/></name></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></sizeof></expr>;<pos:position pos:line="41" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="42" pos:column="9">acl_entryp<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">entryp<pos:position pos:line="42" pos:column="27"/></name><operator pos:line="42" pos:column="27">-&gt;<pos:position pos:line="42" pos:column="32"/></operator><name pos:line="42" pos:column="29">ace_type<pos:position pos:line="42" pos:column="37"/></name></name> <operator pos:line="42" pos:column="38">=<pos:position pos:line="42" pos:column="39"/></operator> <name pos:line="42" pos:column="40">ACC_PERMIT<pos:position pos:line="42" pos:column="50"/></name></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">acl_entryp<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="21">entryp<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">ace_id<pos:position pos:line="43" pos:column="35"/></name><operator pos:line="43" pos:column="35">-&gt;<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="37">id_len<pos:position pos:line="43" pos:column="43"/></name></name> <operator pos:line="43" pos:column="44">=<pos:position pos:line="43" pos:column="45"/></operator> <sizeof pos:line="43" pos:column="46">sizeof<argument_list pos:line="43" pos:column="52">(<argument><expr pos:line="43" pos:column="53">struct <name pos:line="43" pos:column="60">ace_id<pos:position pos:line="43" pos:column="66"/></name></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></sizeof></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">acl_entryp<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">nextp<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">=<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="29">NULL<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">theacl<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">count<pos:position pos:line="45" pos:column="22"/></name></name><operator pos:line="45" pos:column="22">++<pos:position pos:line="45" pos:column="24"/></operator></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">DEBUG<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><literal type="number" pos:line="46" pos:column="15">10<pos:position pos:line="46" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="46" pos:column="18">(<pos:position pos:line="46" pos:column="19"/></operator><literal type="string" pos:line="46" pos:column="19">"Exiting sys_acl_create_entry\n"<pos:position pos:line="46" pos:column="51"/></literal><operator pos:line="46" pos:column="51">)<pos:position pos:line="46" pos:column="52"/></operator></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>
	<return pos:line="47" pos:column="9">return<expr><operator pos:line="47" pos:column="15">(<pos:position pos:line="47" pos:column="16"/></operator><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal><operator pos:line="47" pos:column="17">)<pos:position pos:line="47" pos:column="18"/></operator></expr>;<pos:position pos:line="47" pos:column="19"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

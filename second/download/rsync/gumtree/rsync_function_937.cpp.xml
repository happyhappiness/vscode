<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_937.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">make_output_option<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">output_struct<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">words<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="62">short<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">*<pos:position pos:line="1" pos:column="69"/></modifier></type><name pos:line="1" pos:column="69">levels<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="77">uchar<pos:position pos:line="1" pos:column="82"/></name></type> <name pos:line="1" pos:column="83">where<pos:position pos:line="1" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="89"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">str<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><ternary><condition><expr><name pos:line="3" pos:column="21">words<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">==<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">info_words<pos:position pos:line="3" pos:column="40"/></name></expr> ?<pos:position pos:line="3" pos:column="42"/></condition><then pos:line="3" pos:column="42"> <expr><literal type="string" pos:line="3" pos:column="43">"--info="<pos:position pos:line="3" pos:column="52"/></literal></expr> <pos:position pos:line="3" pos:column="53"/></then><else pos:line="3" pos:column="53">: <expr><literal type="string" pos:line="3" pos:column="55">"--debug="<pos:position pos:line="3" pos:column="65"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="3" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">j<pos:position pos:line="4" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name><name pos:line="4" pos:column="16">counts<pos:position pos:line="4" pos:column="22"/></name><index pos:line="4" pos:column="22">[<expr><name pos:line="4" pos:column="23">MAX_OUT_LEVEL<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">+<pos:position pos:line="4" pos:column="37"/></operator><literal type="number" pos:line="4" pos:column="37">1<pos:position pos:line="4" pos:column="38"/></literal></expr>]<pos:position pos:line="4" pos:column="39"/></index></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="41">pos<pos:position pos:line="4" pos:column="44"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="46">skipped<pos:position pos:line="4" pos:column="53"/></name> <init pos:line="4" pos:column="54">= <expr><literal type="number" pos:line="4" pos:column="56">0<pos:position pos:line="4" pos:column="57"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="59">len<pos:position pos:line="4" pos:column="62"/></name> <init pos:line="4" pos:column="63">= <expr><literal type="number" pos:line="4" pos:column="65">0<pos:position pos:line="4" pos:column="66"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="68">max<pos:position pos:line="4" pos:column="71"/></name> <init pos:line="4" pos:column="72">= <expr><literal type="number" pos:line="4" pos:column="74">0<pos:position pos:line="4" pos:column="75"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="77">lev<pos:position pos:line="4" pos:column="80"/></name> <init pos:line="4" pos:column="81">= <expr><literal type="number" pos:line="4" pos:column="83">0<pos:position pos:line="4" pos:column="84"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="85"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">word_count<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><ternary><condition><expr><name pos:line="5" pos:column="26">words<pos:position pos:line="5" pos:column="31"/></name> <operator pos:line="5" pos:column="32">==<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="35">info_words<pos:position pos:line="5" pos:column="45"/></name></expr> ?<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47"> <expr><name pos:line="5" pos:column="48">COUNT_INFO<pos:position pos:line="5" pos:column="58"/></name></expr> <pos:position pos:line="5" pos:column="59"/></then><else pos:line="5" pos:column="59">: <expr><name pos:line="5" pos:column="61">COUNT_DEBUG<pos:position pos:line="5" pos:column="72"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="73"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">buf<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">memset<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">counts<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="27">sizeof <name pos:line="8" pos:column="34">counts<pos:position pos:line="8" pos:column="40"/></name></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>

	<for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><expr><name pos:line="10" pos:column="14">j<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <literal type="number" pos:line="10" pos:column="18">0<pos:position pos:line="10" pos:column="19"/></literal></expr>;<pos:position pos:line="10" pos:column="20"/></init> <condition><expr><name><name pos:line="10" pos:column="21">words<pos:position pos:line="10" pos:column="26"/></name><index pos:line="10" pos:column="26">[<expr><name pos:line="10" pos:column="27">j<pos:position pos:line="10" pos:column="28"/></name></expr>]<pos:position pos:line="10" pos:column="29"/></index></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">name<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></condition> <incr><expr><name pos:line="10" pos:column="36">j<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">++<pos:position pos:line="10" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="10" pos:column="40"/></control> <block pos:line="10" pos:column="41">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">words<pos:position pos:line="11" pos:column="26"/></name><index pos:line="11" pos:column="26">[<expr><name pos:line="11" pos:column="27">j<pos:position pos:line="11" pos:column="28"/></name></expr>]<pos:position pos:line="11" pos:column="29"/></index></name><operator pos:line="11" pos:column="29">.<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">flag<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">!=<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="38">j<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40"> <block pos:line="11" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="12" pos:column="25">rprintf<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">FERROR<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="41">"rsync: internal error on %s%s: %d != %d\n"<pos:position pos:line="12" pos:column="84"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="13" pos:column="33">words<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">==<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">info_words<pos:position pos:line="13" pos:column="52"/></name></expr> ?<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54"> <expr><literal type="string" pos:line="13" pos:column="55">"INFO_"<pos:position pos:line="13" pos:column="62"/></literal></expr> <pos:position pos:line="13" pos:column="63"/></then><else pos:line="13" pos:column="63">: <expr><literal type="string" pos:line="13" pos:column="65">"DEBUG_"<pos:position pos:line="13" pos:column="73"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><name><name pos:line="14" pos:column="33">words<pos:position pos:line="14" pos:column="38"/></name><index pos:line="14" pos:column="38">[<expr><name pos:line="14" pos:column="39">j<pos:position pos:line="14" pos:column="40"/></name></expr>]<pos:position pos:line="14" pos:column="41"/></index></name><operator pos:line="14" pos:column="41">.<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">name<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="48">words<pos:position pos:line="14" pos:column="53"/></name><index pos:line="14" pos:column="53">[<expr><name pos:line="14" pos:column="54">j<pos:position pos:line="14" pos:column="55"/></name></expr>]<pos:position pos:line="14" pos:column="56"/></index></name><operator pos:line="14" pos:column="56">.<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="57">flag<pos:position pos:line="14" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="63">j<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">exit_cleanup<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">(<argument><expr><name pos:line="15" pos:column="38">RERR_UNSUPPORTED<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><operator pos:line="17" pos:column="21">!<pos:position pos:line="17" pos:column="22"/></operator><operator pos:line="17" pos:column="22">(<pos:position pos:line="17" pos:column="23"/></operator><name><name pos:line="17" pos:column="23">words<pos:position pos:line="17" pos:column="28"/></name><index pos:line="17" pos:column="28">[<expr><name pos:line="17" pos:column="29">j<pos:position pos:line="17" pos:column="30"/></name></expr>]<pos:position pos:line="17" pos:column="31"/></index></name><operator pos:line="17" pos:column="31">.<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">where<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">&amp;<pos:position pos:line="17" pos:column="43"/></operator> <name pos:line="17" pos:column="40">where<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">)<pos:position pos:line="17" pos:column="46"/></operator></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47">
			<block type="pseudo"><continue pos:line="18" pos:column="25">continue;<pos:position pos:line="18" pos:column="34"/></continue></block></then></if>
		<if pos:line="19" pos:column="17">if <condition pos:line="19" pos:column="20">(<expr><name><name pos:line="19" pos:column="21">words<pos:position pos:line="19" pos:column="26"/></name><index pos:line="19" pos:column="26">[<expr><name pos:line="19" pos:column="27">j<pos:position pos:line="19" pos:column="28"/></name></expr>]<pos:position pos:line="19" pos:column="29"/></index></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">priority<pos:position pos:line="19" pos:column="38"/></name> <operator pos:line="19" pos:column="39">==<pos:position pos:line="19" pos:column="41"/></operator> <name pos:line="19" pos:column="42">DEFAULT_PRIORITY<pos:position pos:line="19" pos:column="58"/></name></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59"> <block pos:line="19" pos:column="60">{
			<comment type="block" pos:line="20" pos:column="25">/* Implied items don't need to be mentioned. */</comment>
			<expr_stmt><expr><name pos:line="21" pos:column="25">skipped<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">++<pos:position pos:line="21" pos:column="34"/></operator></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
			<continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="24" pos:column="17">len<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">+=<pos:position pos:line="24" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="24" pos:column="24">len<pos:position pos:line="24" pos:column="27"/></name></expr> ?<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> <expr><literal type="number" pos:line="24" pos:column="30">1<pos:position pos:line="24" pos:column="31"/></literal></expr> <pos:position pos:line="24" pos:column="32"/></then><else pos:line="24" pos:column="32">: <expr><call><name pos:line="24" pos:column="34">strlen<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">(<argument><expr><name pos:line="24" pos:column="41">str<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">len<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">+=<pos:position pos:line="25" pos:column="23"/></operator> <call><name pos:line="25" pos:column="24">strlen<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><name><name pos:line="25" pos:column="31">words<pos:position pos:line="25" pos:column="36"/></name><index pos:line="25" pos:column="36">[<expr><name pos:line="25" pos:column="37">j<pos:position pos:line="25" pos:column="38"/></name></expr>]<pos:position pos:line="25" pos:column="39"/></index></name><operator pos:line="25" pos:column="39">.<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="40">name<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">len<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">+=<pos:position pos:line="26" pos:column="23"/></operator> <ternary><condition><expr><name><name pos:line="26" pos:column="24">levels<pos:position pos:line="26" pos:column="30"/></name><index pos:line="26" pos:column="30">[<expr><name pos:line="26" pos:column="31">j<pos:position pos:line="26" pos:column="32"/></name></expr>]<pos:position pos:line="26" pos:column="33"/></index></name> <operator pos:line="26" pos:column="34">==<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="37">1<pos:position pos:line="26" pos:column="38"/></literal></expr> ?<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40"> <expr><literal type="number" pos:line="26" pos:column="41">0<pos:position pos:line="26" pos:column="42"/></literal></expr> <pos:position pos:line="26" pos:column="43"/></then><else pos:line="26" pos:column="43">: <expr><literal type="number" pos:line="26" pos:column="45">1<pos:position pos:line="26" pos:column="46"/></literal></expr></else></ternary></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt>

		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name><name pos:line="28" pos:column="21">words<pos:position pos:line="28" pos:column="26"/></name><index pos:line="28" pos:column="26">[<expr><name pos:line="28" pos:column="27">j<pos:position pos:line="28" pos:column="28"/></name></expr>]<pos:position pos:line="28" pos:column="29"/></index></name><operator pos:line="28" pos:column="29">.<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="30">priority<pos:position pos:line="28" pos:column="38"/></name> <operator pos:line="28" pos:column="39">==<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">HELP_PRIORITY<pos:position pos:line="28" pos:column="55"/></name></expr>)<pos:position pos:line="28" pos:column="56"/></condition><then pos:line="28" pos:column="56">
			<block type="pseudo"><continue pos:line="29" pos:column="25">continue;<pos:position pos:line="29" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="29" pos:column="35">/* no abbreviating for help */</comment>

		<expr_stmt><expr><call><name pos:line="31" pos:column="17">assert<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name><name pos:line="31" pos:column="24">levels<pos:position pos:line="31" pos:column="30"/></name><index pos:line="31" pos:column="30">[<expr><name pos:line="31" pos:column="31">j<pos:position pos:line="31" pos:column="32"/></name></expr>]<pos:position pos:line="31" pos:column="33"/></index></name> <operator pos:line="31" pos:column="34">&lt;=<pos:position pos:line="31" pos:column="39"/></operator> <name pos:line="31" pos:column="37">MAX_OUT_LEVEL<pos:position pos:line="31" pos:column="50"/></name></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="52"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">++<pos:position pos:line="32" pos:column="23"/></operator><name><name pos:line="32" pos:column="23">counts<pos:position pos:line="32" pos:column="29"/></name><index pos:line="32" pos:column="29">[<expr><name><name pos:line="32" pos:column="30">levels<pos:position pos:line="32" pos:column="36"/></name><index pos:line="32" pos:column="36">[<expr><name pos:line="32" pos:column="37">j<pos:position pos:line="32" pos:column="38"/></name></expr>]<pos:position pos:line="32" pos:column="39"/></index></name></expr>]<pos:position pos:line="32" pos:column="40"/></index></name> <operator pos:line="32" pos:column="41">&gt;<pos:position pos:line="32" pos:column="45"/></operator> <name pos:line="32" pos:column="43">max<pos:position pos:line="32" pos:column="46"/></name></expr>)<pos:position pos:line="32" pos:column="47"/></condition><then pos:line="32" pos:column="47"> <block pos:line="32" pos:column="48">{
			<comment type="block" pos:line="33" pos:column="25">/* Determine which level has the most items. */</comment>
			<expr_stmt><expr><name pos:line="34" pos:column="25">lev<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <name><name pos:line="34" pos:column="31">levels<pos:position pos:line="34" pos:column="37"/></name><index pos:line="34" pos:column="37">[<expr><name pos:line="34" pos:column="38">j<pos:position pos:line="34" pos:column="39"/></name></expr>]<pos:position pos:line="34" pos:column="40"/></index></name></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
			<expr_stmt><expr><name pos:line="35" pos:column="25">max<pos:position pos:line="35" pos:column="28"/></name> <operator pos:line="35" pos:column="29">=<pos:position pos:line="35" pos:column="30"/></operator> <name><name pos:line="35" pos:column="31">counts<pos:position pos:line="35" pos:column="37"/></name><index pos:line="35" pos:column="37">[<expr><name pos:line="35" pos:column="38">lev<pos:position pos:line="35" pos:column="41"/></name></expr>]<pos:position pos:line="35" pos:column="42"/></index></name></expr>;<pos:position pos:line="35" pos:column="43"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>
	}<pos:position pos:line="37" pos:column="10"/></block></for>

	<comment type="block" pos:line="39" pos:column="9">/* Sanity check the COUNT_* define against the length of the table. */</comment>
	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">j<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">!=<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">word_count<pos:position pos:line="40" pos:column="28"/></name></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block pos:line="40" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">rprintf<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">FERROR<pos:position pos:line="41" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="33">"rsync: internal error: %s is wrong! (%d != %d)\n"<pos:position pos:line="41" pos:column="83"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="42" pos:column="25">words<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">==<pos:position pos:line="42" pos:column="33"/></operator> <name pos:line="42" pos:column="34">info_words<pos:position pos:line="42" pos:column="44"/></name></expr> ?<pos:position pos:line="42" pos:column="46"/></condition><then pos:line="42" pos:column="46"> <expr><literal type="string" pos:line="42" pos:column="47">"COUNT_INFO"<pos:position pos:line="42" pos:column="59"/></literal></expr> <pos:position pos:line="42" pos:column="60"/></then><else pos:line="42" pos:column="60">: <expr><literal type="string" pos:line="42" pos:column="62">"COUNT_DEBUG"<pos:position pos:line="42" pos:column="75"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><name pos:line="43" pos:column="25">j<pos:position pos:line="43" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="28">word_count<pos:position pos:line="43" pos:column="38"/></name></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">exit_cleanup<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">RERR_UNSUPPORTED<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">len<pos:position pos:line="47" pos:column="17"/></name></expr>)<pos:position pos:line="47" pos:column="18"/></condition><then pos:line="47" pos:column="18">
		<block type="pseudo"><return pos:line="48" pos:column="17">return <expr><name pos:line="48" pos:column="24">NULL<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="50" pos:column="9">len<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">++<pos:position pos:line="50" pos:column="14"/></operator></expr>;<pos:position pos:line="50" pos:column="15"/></expr_stmt>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><operator pos:line="51" pos:column="14">(<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="15">buf<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">=<pos:position pos:line="51" pos:column="20"/></operator> <call><name pos:line="51" pos:column="21">new_array<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">char<pos:position pos:line="51" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="37">len<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call><operator pos:line="51" pos:column="41">)<pos:position pos:line="51" pos:column="42"/></operator></expr>)<pos:position pos:line="51" pos:column="43"/></condition><then pos:line="51" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">out_of_memory<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><literal type="string" pos:line="52" pos:column="31">"make_output_option"<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="53" pos:column="9">pos<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">=<pos:position pos:line="53" pos:column="14"/></operator> <literal type="number" pos:line="53" pos:column="15">0<pos:position pos:line="53" pos:column="16"/></literal></expr>;<pos:position pos:line="53" pos:column="17"/></expr_stmt>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">skipped<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">||<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="24">max<pos:position pos:line="55" pos:column="27"/></name> <operator pos:line="55" pos:column="28">&lt;<pos:position pos:line="55" pos:column="32"/></operator> <literal type="number" pos:line="55" pos:column="30">5<pos:position pos:line="55" pos:column="31"/></literal></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32">
		<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="17">lev<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <operator pos:line="56" pos:column="23">-<pos:position pos:line="56" pos:column="24"/></operator><literal type="number" pos:line="56" pos:column="24">1<pos:position pos:line="56" pos:column="25"/></literal></expr>;<pos:position pos:line="56" pos:column="26"/></expr_stmt></block></then>
	<else pos:line="57" pos:column="9">else <block pos:line="57" pos:column="14">{
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name pos:line="58" pos:column="21">lev<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">==<pos:position pos:line="58" pos:column="27"/></operator> <literal type="number" pos:line="58" pos:column="28">0<pos:position pos:line="58" pos:column="29"/></literal></expr>)<pos:position pos:line="58" pos:column="30"/></condition><then pos:line="58" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="59" pos:column="25">pos<pos:position pos:line="59" pos:column="28"/></name> <operator pos:line="59" pos:column="29">+=<pos:position pos:line="59" pos:column="31"/></operator> <call><name pos:line="59" pos:column="32">snprintf<pos:position pos:line="59" pos:column="40"/></name><argument_list pos:line="59" pos:column="40">(<argument><expr><name pos:line="59" pos:column="41">buf<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="46">len<pos:position pos:line="59" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="51">"%sNONE"<pos:position pos:line="59" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="61">str<pos:position pos:line="59" pos:column="64"/></name></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="66"/></expr_stmt></block></then>
		<elseif pos:line="60" pos:column="17">else <if pos:line="60" pos:column="22">if <condition pos:line="60" pos:column="25">(<expr><name pos:line="60" pos:column="26">lev<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">==<pos:position pos:line="60" pos:column="32"/></operator> <literal type="number" pos:line="60" pos:column="33">1<pos:position pos:line="60" pos:column="34"/></literal></expr>)<pos:position pos:line="60" pos:column="35"/></condition><then pos:line="60" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="25">pos<pos:position pos:line="61" pos:column="28"/></name> <operator pos:line="61" pos:column="29">+=<pos:position pos:line="61" pos:column="31"/></operator> <call><name pos:line="61" pos:column="32">snprintf<pos:position pos:line="61" pos:column="40"/></name><argument_list pos:line="61" pos:column="40">(<argument><expr><name pos:line="61" pos:column="41">buf<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="46">len<pos:position pos:line="61" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="51">"%sALL"<pos:position pos:line="61" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="60">str<pos:position pos:line="61" pos:column="63"/></name></expr></argument>)<pos:position pos:line="61" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="65"/></expr_stmt></block></then></if></elseif>
		<else pos:line="62" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="25">pos<pos:position pos:line="63" pos:column="28"/></name> <operator pos:line="63" pos:column="29">+=<pos:position pos:line="63" pos:column="31"/></operator> <call><name pos:line="63" pos:column="32">snprintf<pos:position pos:line="63" pos:column="40"/></name><argument_list pos:line="63" pos:column="40">(<argument><expr><name pos:line="63" pos:column="41">buf<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="46">len<pos:position pos:line="63" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="51">"%sALL%d"<pos:position pos:line="63" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="62">str<pos:position pos:line="63" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="67">lev<pos:position pos:line="63" pos:column="70"/></name></expr></argument>)<pos:position pos:line="63" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="72"/></expr_stmt></block></else></if>
	}<pos:position pos:line="64" pos:column="10"/></block></else></if>

	<for pos:line="66" pos:column="9">for <control pos:line="66" pos:column="13">(<init><expr><name pos:line="66" pos:column="14">j<pos:position pos:line="66" pos:column="15"/></name> <operator pos:line="66" pos:column="16">=<pos:position pos:line="66" pos:column="17"/></operator> <literal type="number" pos:line="66" pos:column="18">0<pos:position pos:line="66" pos:column="19"/></literal></expr>;<pos:position pos:line="66" pos:column="20"/></init> <condition><expr><name><name pos:line="66" pos:column="21">words<pos:position pos:line="66" pos:column="26"/></name><index pos:line="66" pos:column="26">[<expr><name pos:line="66" pos:column="27">j<pos:position pos:line="66" pos:column="28"/></name></expr>]<pos:position pos:line="66" pos:column="29"/></index></name><operator pos:line="66" pos:column="29">.<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">name<pos:position pos:line="66" pos:column="34"/></name> <operator pos:line="66" pos:column="35">&amp;&amp;<pos:position pos:line="66" pos:column="45"/></operator> <name pos:line="66" pos:column="38">pos<pos:position pos:line="66" pos:column="41"/></name> <operator pos:line="66" pos:column="42">&lt;<pos:position pos:line="66" pos:column="46"/></operator> <name pos:line="66" pos:column="44">len<pos:position pos:line="66" pos:column="47"/></name></expr>;<pos:position pos:line="66" pos:column="48"/></condition> <incr><expr><name pos:line="66" pos:column="49">j<pos:position pos:line="66" pos:column="50"/></name><operator pos:line="66" pos:column="50">++<pos:position pos:line="66" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="66" pos:column="53"/></control> <block pos:line="66" pos:column="54">{
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name><name pos:line="67" pos:column="21">words<pos:position pos:line="67" pos:column="26"/></name><index pos:line="67" pos:column="26">[<expr><name pos:line="67" pos:column="27">j<pos:position pos:line="67" pos:column="28"/></name></expr>]<pos:position pos:line="67" pos:column="29"/></index></name><operator pos:line="67" pos:column="29">.<pos:position pos:line="67" pos:column="30"/></operator><name pos:line="67" pos:column="30">priority<pos:position pos:line="67" pos:column="38"/></name> <operator pos:line="67" pos:column="39">==<pos:position pos:line="67" pos:column="41"/></operator> <name pos:line="67" pos:column="42">DEFAULT_PRIORITY<pos:position pos:line="67" pos:column="58"/></name> <operator pos:line="67" pos:column="59">||<pos:position pos:line="67" pos:column="61"/></operator> <name><name pos:line="67" pos:column="62">levels<pos:position pos:line="67" pos:column="68"/></name><index pos:line="67" pos:column="68">[<expr><name pos:line="67" pos:column="69">j<pos:position pos:line="67" pos:column="70"/></name></expr>]<pos:position pos:line="67" pos:column="71"/></index></name> <operator pos:line="67" pos:column="72">==<pos:position pos:line="67" pos:column="74"/></operator> <name pos:line="67" pos:column="75">lev<pos:position pos:line="67" pos:column="78"/></name> <operator pos:line="67" pos:column="79">||<pos:position pos:line="67" pos:column="81"/></operator> <operator pos:line="67" pos:column="82">!<pos:position pos:line="67" pos:column="83"/></operator><operator pos:line="67" pos:column="83">(<pos:position pos:line="67" pos:column="84"/></operator><name><name pos:line="67" pos:column="84">words<pos:position pos:line="67" pos:column="89"/></name><index pos:line="67" pos:column="89">[<expr><name pos:line="67" pos:column="90">j<pos:position pos:line="67" pos:column="91"/></name></expr>]<pos:position pos:line="67" pos:column="92"/></index></name><operator pos:line="67" pos:column="92">.<pos:position pos:line="67" pos:column="93"/></operator><name pos:line="67" pos:column="93">where<pos:position pos:line="67" pos:column="98"/></name> <operator pos:line="67" pos:column="99">&amp;<pos:position pos:line="67" pos:column="104"/></operator> <name pos:line="67" pos:column="101">where<pos:position pos:line="67" pos:column="106"/></name><operator pos:line="67" pos:column="106">)<pos:position pos:line="67" pos:column="107"/></operator></expr>)<pos:position pos:line="67" pos:column="108"/></condition><then pos:line="67" pos:column="108">
			<block type="pseudo"><continue pos:line="68" pos:column="25">continue;<pos:position pos:line="68" pos:column="34"/></continue></block></then></if>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name pos:line="69" pos:column="21">pos<pos:position pos:line="69" pos:column="24"/></name></expr>)<pos:position pos:line="69" pos:column="25"/></condition><then pos:line="69" pos:column="25">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="25">buf<pos:position pos:line="70" pos:column="28"/></name><index pos:line="70" pos:column="28">[<expr><name pos:line="70" pos:column="29">pos<pos:position pos:line="70" pos:column="32"/></name><operator pos:line="70" pos:column="32">++<pos:position pos:line="70" pos:column="34"/></operator></expr>]<pos:position pos:line="70" pos:column="35"/></index></name> <operator pos:line="70" pos:column="36">=<pos:position pos:line="70" pos:column="37"/></operator> <literal type="char" pos:line="70" pos:column="38">','<pos:position pos:line="70" pos:column="41"/></literal></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt></block></then>
		<else pos:line="71" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="25">pos<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">+=<pos:position pos:line="72" pos:column="31"/></operator> <call><name pos:line="72" pos:column="32">strlcpy<pos:position pos:line="72" pos:column="39"/></name><argument_list pos:line="72" pos:column="39">(<argument><expr><name pos:line="72" pos:column="40">buf<pos:position pos:line="72" pos:column="43"/></name><operator pos:line="72" pos:column="43">+<pos:position pos:line="72" pos:column="44"/></operator><name pos:line="72" pos:column="44">pos<pos:position pos:line="72" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="49">str<pos:position pos:line="72" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="54">len<pos:position pos:line="72" pos:column="57"/></name><operator pos:line="72" pos:column="57">-<pos:position pos:line="72" pos:column="58"/></operator><name pos:line="72" pos:column="58">pos<pos:position pos:line="72" pos:column="61"/></name></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt></block></else></if>
		<if pos:line="73" pos:column="17">if <condition pos:line="73" pos:column="20">(<expr><name pos:line="73" pos:column="21">pos<pos:position pos:line="73" pos:column="24"/></name> <operator pos:line="73" pos:column="25">&lt;<pos:position pos:line="73" pos:column="29"/></operator> <name pos:line="73" pos:column="27">len<pos:position pos:line="73" pos:column="30"/></name></expr>)<pos:position pos:line="73" pos:column="31"/></condition><then pos:line="73" pos:column="31">
			<block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="25">pos<pos:position pos:line="74" pos:column="28"/></name> <operator pos:line="74" pos:column="29">+=<pos:position pos:line="74" pos:column="31"/></operator> <call><name pos:line="74" pos:column="32">strlcpy<pos:position pos:line="74" pos:column="39"/></name><argument_list pos:line="74" pos:column="39">(<argument><expr><name pos:line="74" pos:column="40">buf<pos:position pos:line="74" pos:column="43"/></name><operator pos:line="74" pos:column="43">+<pos:position pos:line="74" pos:column="44"/></operator><name pos:line="74" pos:column="44">pos<pos:position pos:line="74" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="49">words<pos:position pos:line="74" pos:column="54"/></name><index pos:line="74" pos:column="54">[<expr><name pos:line="74" pos:column="55">j<pos:position pos:line="74" pos:column="56"/></name></expr>]<pos:position pos:line="74" pos:column="57"/></index></name><operator pos:line="74" pos:column="57">.<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="58">name<pos:position pos:line="74" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="64">len<pos:position pos:line="74" pos:column="67"/></name><operator pos:line="74" pos:column="67">-<pos:position pos:line="74" pos:column="68"/></operator><name pos:line="74" pos:column="68">pos<pos:position pos:line="74" pos:column="71"/></name></expr></argument>)<pos:position pos:line="74" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="73"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="75" pos:column="17">/* Level 1 is implied by the name alone. */</comment>
		<if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><name><name pos:line="76" pos:column="21">levels<pos:position pos:line="76" pos:column="27"/></name><index pos:line="76" pos:column="27">[<expr><name pos:line="76" pos:column="28">j<pos:position pos:line="76" pos:column="29"/></name></expr>]<pos:position pos:line="76" pos:column="30"/></index></name> <operator pos:line="76" pos:column="31">!=<pos:position pos:line="76" pos:column="33"/></operator> <literal type="number" pos:line="76" pos:column="34">1<pos:position pos:line="76" pos:column="35"/></literal> <operator pos:line="76" pos:column="36">&amp;&amp;<pos:position pos:line="76" pos:column="46"/></operator> <name pos:line="76" pos:column="39">pos<pos:position pos:line="76" pos:column="42"/></name> <operator pos:line="76" pos:column="43">&lt;<pos:position pos:line="76" pos:column="47"/></operator> <name pos:line="76" pos:column="45">len<pos:position pos:line="76" pos:column="48"/></name></expr>)<pos:position pos:line="76" pos:column="49"/></condition><then pos:line="76" pos:column="49">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="25">buf<pos:position pos:line="77" pos:column="28"/></name><index pos:line="77" pos:column="28">[<expr><name pos:line="77" pos:column="29">pos<pos:position pos:line="77" pos:column="32"/></name><operator pos:line="77" pos:column="32">++<pos:position pos:line="77" pos:column="34"/></operator></expr>]<pos:position pos:line="77" pos:column="35"/></index></name> <operator pos:line="77" pos:column="36">=<pos:position pos:line="77" pos:column="37"/></operator> <literal type="char" pos:line="77" pos:column="38">'0'<pos:position pos:line="77" pos:column="41"/></literal> <operator pos:line="77" pos:column="42">+<pos:position pos:line="77" pos:column="43"/></operator> <name><name pos:line="77" pos:column="44">levels<pos:position pos:line="77" pos:column="50"/></name><index pos:line="77" pos:column="50">[<expr><name pos:line="77" pos:column="51">j<pos:position pos:line="77" pos:column="52"/></name></expr>]<pos:position pos:line="77" pos:column="53"/></index></name></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt></block></then></if>
	}<pos:position pos:line="78" pos:column="10"/></block></for>

	<expr_stmt><expr><name><name pos:line="80" pos:column="9">buf<pos:position pos:line="80" pos:column="12"/></name><index pos:line="80" pos:column="12">[<expr><name pos:line="80" pos:column="13">pos<pos:position pos:line="80" pos:column="16"/></name></expr>]<pos:position pos:line="80" pos:column="17"/></index></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <literal type="char" pos:line="80" pos:column="20">'\0'<pos:position pos:line="80" pos:column="24"/></literal></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt>

	<return pos:line="82" pos:column="9">return <expr><name pos:line="82" pos:column="16">buf<pos:position pos:line="82" pos:column="19"/></name></expr>;<pos:position pos:line="82" pos:column="20"/></return>
}<pos:position pos:line="83" pos:column="2"/></block></function></unit>

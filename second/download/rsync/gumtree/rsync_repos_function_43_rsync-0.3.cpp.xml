<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_43_rsync-0.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">file_checksum<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">fname<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">sum<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="42">off_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">size<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buf<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fd<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">bzero<pos:position pos:line="5" pos:column="8"/></name><argument_list pos:line="5" pos:column="8">(<argument><expr><name pos:line="5" pos:column="9">sum<pos:position pos:line="5" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="13">SUM_LENGTH<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">fd<pos:position pos:line="7" pos:column="5"/></name> <operator pos:line="7" pos:column="6">=<pos:position pos:line="7" pos:column="7"/></operator> <call><name pos:line="7" pos:column="8">open<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">fname<pos:position pos:line="7" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="19">O_RDONLY<pos:position pos:line="7" pos:column="27"/></name></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">fd<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">==<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16"> <block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="10" pos:column="3">buf<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">map_file<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">(<argument><expr><name pos:line="10" pos:column="18">fd<pos:position pos:line="10" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="10" pos:column="21">size<pos:position pos:line="10" pos:column="25"/></name></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">buf<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12"> <block pos:line="11" pos:column="13">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">close<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">fd<pos:position pos:line="12" pos:column="13"/></name></expr></argument>)<pos:position pos:line="12" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="15"/></expr_stmt>
    <return pos:line="13" pos:column="5">return;<pos:position pos:line="13" pos:column="12"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">get_checksum2<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name pos:line="16" pos:column="17">buf<pos:position pos:line="16" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="21">size<pos:position pos:line="16" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="26">sum<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">close<pos:position pos:line="17" pos:column="8"/></name><argument_list pos:line="17" pos:column="8">(<argument><expr><name pos:line="17" pos:column="9">fd<pos:position pos:line="17" pos:column="11"/></name></expr></argument>)<pos:position pos:line="17" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">unmap_file<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">buf<pos:position pos:line="18" pos:column="17"/></name></expr></argument>,<argument><expr><name pos:line="18" pos:column="18">size<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

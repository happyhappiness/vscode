<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_85_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">setup_merge_file<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">mergelist_num<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">filter_rule<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">ex<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
			     <parameter><decl><type><name pos:line="2" pos:column="30">filter_rule_list<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">lp<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">buf<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name pos:line="4" pos:column="18">MAXPATHLEN<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">x<pos:position pos:line="5" pos:column="16"/></name></decl>, <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="19">y<pos:position pos:line="5" pos:column="20"/></name></decl>, <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="23">pat<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">ex<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">pattern<pos:position pos:line="5" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">unsigned<pos:position pos:line="6" pos:column="17"/></name> <name pos:line="6" pos:column="18">int<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">len<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">x<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">parse_merge_name<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">pat<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="41">NULL<pos:position pos:line="8" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="47">0<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator> <operator pos:line="8" pos:column="51">||<pos:position pos:line="8" pos:column="53"/></operator> <operator pos:line="8" pos:column="54">*<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="55">x<pos:position pos:line="8" pos:column="56"/></name> <operator pos:line="8" pos:column="57">!=<pos:position pos:line="8" pos:column="59"/></operator> <literal type="char" pos:line="8" pos:column="60">'/'<pos:position pos:line="8" pos:column="63"/></literal></expr>)<pos:position pos:line="8" pos:column="64"/></condition><then pos:line="8" pos:column="64">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></return></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">DEBUG_GTE<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">FILTER<pos:position pos:line="11" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="31">2<pos:position pos:line="11" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">rprintf<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">FINFO<pos:position pos:line="12" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="32">"[%s] performing parent_dirscan for mergelist #%d%s\n"<pos:position pos:line="12" pos:column="86"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="13" pos:column="25">who_am_i<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">()<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">mergelist_num<pos:position pos:line="13" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="52">lp<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">debug_type<pos:position pos:line="13" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="15" pos:column="9">y<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">strrchr<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">(<argument><expr><name pos:line="15" pos:column="21">x<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="24">'/'<pos:position pos:line="15" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">y<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <literal type="char" pos:line="16" pos:column="14">'\0'<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ex<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">pattern<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <call><name pos:line="17" pos:column="23">strdup<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><name pos:line="17" pos:column="30">y<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">+<pos:position pos:line="17" pos:column="32"/></operator><literal type="number" pos:line="17" pos:column="32">1<pos:position pos:line="17" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">x<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">x<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <literal type="string" pos:line="19" pos:column="21">"/"<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt></block></then></if>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">x<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">==<pos:position pos:line="20" pos:column="18"/></operator> <literal type="char" pos:line="20" pos:column="19">'/'<pos:position pos:line="20" pos:column="22"/></literal></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">strlcpy<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">buf<pos:position pos:line="21" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="30">x<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">MAXPATHLEN<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt></block></then>
	<else pos:line="22" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">pathjoin<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">buf<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="31">MAXPATHLEN<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="43">dirbuf<pos:position pos:line="23" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">x<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">len<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <call><name pos:line="25" pos:column="15">clean_fname<pos:position pos:line="25" pos:column="26"/></name><argument_list pos:line="25" pos:column="26">(<argument><expr><name pos:line="25" pos:column="27">buf<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">CFN_COLLAPSE_DOT_DOT_DIRS<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="59"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">len<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">!=<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="20">1<pos:position pos:line="26" pos:column="21"/></literal> <operator pos:line="26" pos:column="22">&amp;&amp;<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="25">len<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">&lt;<pos:position pos:line="26" pos:column="33"/></operator> <name pos:line="26" pos:column="31">MAXPATHLEN<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-<pos:position pos:line="26" pos:column="42"/></operator><literal type="number" pos:line="26" pos:column="42">1<pos:position pos:line="26" pos:column="43"/></literal></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{
		<expr_stmt><expr><name><name pos:line="27" pos:column="17">buf<pos:position pos:line="27" pos:column="20"/></name><index pos:line="27" pos:column="20">[<expr><name pos:line="27" pos:column="21">len<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">++<pos:position pos:line="27" pos:column="26"/></operator></expr>]<pos:position pos:line="27" pos:column="27"/></index></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <literal type="char" pos:line="27" pos:column="30">'/'<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="28" pos:column="17">buf<pos:position pos:line="28" pos:column="20"/></name><index pos:line="28" pos:column="20">[<expr><name pos:line="28" pos:column="21">len<pos:position pos:line="28" pos:column="24"/></name></expr>]<pos:position pos:line="28" pos:column="25"/></index></name> <operator pos:line="28" pos:column="26">=<pos:position pos:line="28" pos:column="27"/></operator> <literal type="char" pos:line="28" pos:column="28">'\0'<pos:position pos:line="28" pos:column="32"/></literal></expr>;<pos:position pos:line="28" pos:column="33"/></expr_stmt>
	}<pos:position pos:line="29" pos:column="10"/></block></then></if>
	<comment type="block" pos:line="30" pos:column="9">/* This ensures that the specified dir is a parent of the transfer. */</comment>
	<for pos:line="31" pos:column="9">for <control pos:line="31" pos:column="13">(<init><expr><name pos:line="31" pos:column="14">x<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">buf<pos:position pos:line="31" pos:column="21"/></name></expr><operator pos:line="31" pos:column="21">,<pos:position pos:line="31" pos:column="22"/></operator> <expr><name pos:line="31" pos:column="23">y<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <name pos:line="31" pos:column="27">dirbuf<pos:position pos:line="31" pos:column="33"/></name></expr>;<pos:position pos:line="31" pos:column="34"/></init> <condition><expr><operator pos:line="31" pos:column="35">*<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">x<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">&amp;&amp;<pos:position pos:line="31" pos:column="48"/></operator> <operator pos:line="31" pos:column="41">*<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">x<pos:position pos:line="31" pos:column="43"/></name> <operator pos:line="31" pos:column="44">==<pos:position pos:line="31" pos:column="46"/></operator> <operator pos:line="31" pos:column="47">*<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">y<pos:position pos:line="31" pos:column="49"/></name></expr>;<pos:position pos:line="31" pos:column="50"/></condition> <incr><expr><name pos:line="31" pos:column="51">x<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">++<pos:position pos:line="31" pos:column="54"/></operator></expr><operator pos:line="31" pos:column="54">,<pos:position pos:line="31" pos:column="55"/></operator> <expr><name pos:line="31" pos:column="56">y<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">++<pos:position pos:line="31" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="60"/></control> <block pos:line="31" pos:column="61">{}<pos:position pos:line="31" pos:column="63"/></block></for>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">*<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">x<pos:position pos:line="32" pos:column="15"/></name></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="17">y<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">+=<pos:position pos:line="33" pos:column="21"/></operator> <call><name pos:line="33" pos:column="22">strlen<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><name pos:line="33" pos:column="29">y<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt></block></then></if> <comment type="block" pos:line="33" pos:column="33">/* nope -- skip the scan */</comment>

	<expr_stmt><expr><name pos:line="35" pos:column="9">parent_dirscan<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">True<pos:position pos:line="35" pos:column="30"/></name></expr>;<pos:position pos:line="35" pos:column="31"/></expr_stmt>
	<while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><operator pos:line="36" pos:column="16">*<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">y<pos:position pos:line="36" pos:column="18"/></name></expr>)<pos:position pos:line="36" pos:column="19"/></condition> <block pos:line="36" pos:column="20">{
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">char<pos:position pos:line="37" pos:column="21"/></name></type> <name><name pos:line="37" pos:column="22">save<pos:position pos:line="37" pos:column="26"/></name><index pos:line="37" pos:column="26">[<expr><name pos:line="37" pos:column="27">MAXPATHLEN<pos:position pos:line="37" pos:column="37"/></name></expr>]<pos:position pos:line="37" pos:column="38"/></index></name></decl>;<pos:position pos:line="37" pos:column="39"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">strlcpy<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">save<pos:position pos:line="38" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">y<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="34">MAXPATHLEN<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="39" pos:column="17">*<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">y<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <literal type="char" pos:line="39" pos:column="22">'\0'<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">dirbuf_len<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">=<pos:position pos:line="40" pos:column="29"/></operator> <name pos:line="40" pos:column="30">y<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">-<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">dirbuf<pos:position pos:line="40" pos:column="40"/></name></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">strlcpy<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">x<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="28">ex<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">pattern<pos:position pos:line="41" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="41">MAXPATHLEN<pos:position pos:line="41" pos:column="51"/></name> <operator pos:line="41" pos:column="52">-<pos:position pos:line="41" pos:column="53"/></operator> <operator pos:line="41" pos:column="54">(<pos:position pos:line="41" pos:column="55"/></operator><name pos:line="41" pos:column="55">x<pos:position pos:line="41" pos:column="56"/></name> <operator pos:line="41" pos:column="57">-<pos:position pos:line="41" pos:column="58"/></operator> <name pos:line="41" pos:column="59">buf<pos:position pos:line="41" pos:column="62"/></name><operator pos:line="41" pos:column="62">)<pos:position pos:line="41" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">parse_filter_file<pos:position pos:line="42" pos:column="34"/></name><argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">lp<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">buf<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">ex<pos:position pos:line="42" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="48">XFLG_ANCHORED2ABS<pos:position pos:line="42" pos:column="65"/></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name><name pos:line="43" pos:column="21">ex<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">rflags<pos:position pos:line="43" pos:column="31"/></name></name> <operator pos:line="43" pos:column="32">&amp;<pos:position pos:line="43" pos:column="37"/></operator> <name pos:line="43" pos:column="34">FILTRULE_NO_INHERIT<pos:position pos:line="43" pos:column="53"/></name></expr>)<pos:position pos:line="43" pos:column="54"/></condition><then pos:line="43" pos:column="54"> <block pos:line="43" pos:column="55">{
			<comment type="block" pos:line="44" pos:column="25">/* Free the undesired rules to clean up any per-dir
			 * mergelists they defined.  Otherwise pop_local_filters
			 * may crash trying to restore nonexistent state for
			 * those mergelists. */</comment>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">free_filters<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name><name pos:line="48" pos:column="38">lp<pos:position pos:line="48" pos:column="40"/></name><operator pos:line="48" pos:column="40">-&gt;<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="42">head<pos:position pos:line="48" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="48"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="49" pos:column="25">lp<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">head<pos:position pos:line="49" pos:column="33"/></name></name> <operator pos:line="49" pos:column="34">=<pos:position pos:line="49" pos:column="35"/></operator> <name pos:line="49" pos:column="36">NULL<pos:position pos:line="49" pos:column="40"/></name></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="51" pos:column="17">lp<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">-&gt;<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="21">tail<pos:position pos:line="51" pos:column="25"/></name></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="28">NULL<pos:position pos:line="51" pos:column="32"/></name></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="52" pos:column="17">strlcpy<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><name pos:line="52" pos:column="25">y<pos:position pos:line="52" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="28">save<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">MAXPATHLEN<pos:position pos:line="52" pos:column="44"/></name></expr></argument>)<pos:position pos:line="52" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="46"/></expr_stmt>
		<while pos:line="53" pos:column="17">while <condition pos:line="53" pos:column="23">(<expr><operator pos:line="53" pos:column="24">(<pos:position pos:line="53" pos:column="25"/></operator><operator pos:line="53" pos:column="25">*<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="26">x<pos:position pos:line="53" pos:column="27"/></name><operator pos:line="53" pos:column="27">++<pos:position pos:line="53" pos:column="29"/></operator> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <operator pos:line="53" pos:column="32">*<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="33">y<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">++<pos:position pos:line="53" pos:column="36"/></operator><operator pos:line="53" pos:column="36">)<pos:position pos:line="53" pos:column="37"/></operator> <operator pos:line="53" pos:column="38">!=<pos:position pos:line="53" pos:column="40"/></operator> <literal type="char" pos:line="53" pos:column="41">'/'<pos:position pos:line="53" pos:column="44"/></literal></expr>)<pos:position pos:line="53" pos:column="45"/></condition> <block pos:line="53" pos:column="46">{}<pos:position pos:line="53" pos:column="48"/></block></while>
	}<pos:position pos:line="54" pos:column="10"/></block></while>
	<expr_stmt><expr><name pos:line="55" pos:column="9">parent_dirscan<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="26">False<pos:position pos:line="55" pos:column="31"/></name></expr>;<pos:position pos:line="55" pos:column="32"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">DEBUG_GTE<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">FILTER<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="31">2<pos:position pos:line="56" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="34"/></condition><then pos:line="56" pos:column="34"> <block pos:line="56" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">rprintf<pos:position pos:line="57" pos:column="24"/></name><argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">FINFO<pos:position pos:line="57" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="32">"[%s] completed parent_dirscan for mergelist #%d%s\n"<pos:position pos:line="57" pos:column="85"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="58" pos:column="25">who_am_i<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">()<pos:position pos:line="58" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="58" pos:column="37">mergelist_num<pos:position pos:line="58" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="52">lp<pos:position pos:line="58" pos:column="54"/></name><operator pos:line="58" pos:column="54">-&gt;<pos:position pos:line="58" pos:column="59"/></operator><name pos:line="58" pos:column="56">debug_type<pos:position pos:line="58" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="60" pos:column="9">free<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">pat<pos:position pos:line="60" pos:column="17"/></name></expr></argument>)<pos:position pos:line="60" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
	<return pos:line="61" pos:column="9">return <expr><literal type="number" pos:line="61" pos:column="16">1<pos:position pos:line="61" pos:column="17"/></literal></expr>;<pos:position pos:line="61" pos:column="18"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

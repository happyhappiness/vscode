<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_148_rsync-1.6.9.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">void<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fill_window<pos:position pos:line="1" pos:column="23"/></name><argument_list pos:line="1" pos:column="23">(<argument><expr><name pos:line="1" pos:column="24">s<pos:position pos:line="1" pos:column="25"/></name></expr></argument>)<pos:position pos:line="1" pos:column="26"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">unsigned<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">n<pos:position pos:line="4" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="26">m<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">Posf<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">p<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">more<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>    <comment type="block" pos:line="6" pos:column="23">/* Amount of free space at the end of the window. */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uInt<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">wsize<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name><name pos:line="7" pos:column="18">s<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">w_size<pos:position pos:line="7" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <do pos:line="9" pos:column="5">do <block pos:line="9" pos:column="8">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">more<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call pos:line="10" pos:column="16">(<name pos:line="10" pos:column="17">unsigned<pos:position pos:line="10" pos:column="25"/></name>)<argument_list pos:line="10" pos:column="26">(<argument><expr><name><name pos:line="10" pos:column="27">s<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">window_size<pos:position pos:line="10" pos:column="41"/></name></name> <operator pos:line="10" pos:column="42">-<pos:position pos:line="10" pos:column="43"/></operator><operator pos:line="10" pos:column="43">(<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="44">ulg<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">)<pos:position pos:line="10" pos:column="48"/></operator><name><name pos:line="10" pos:column="48">s<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">lookahead<pos:position pos:line="10" pos:column="60"/></name></name> <operator pos:line="10" pos:column="61">-<pos:position pos:line="10" pos:column="62"/></operator><operator pos:line="10" pos:column="62">(<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">ulg<pos:position pos:line="10" pos:column="66"/></name><operator pos:line="10" pos:column="66">)<pos:position pos:line="10" pos:column="67"/></operator><name><name pos:line="10" pos:column="67">s<pos:position pos:line="10" pos:column="68"/></name><operator pos:line="10" pos:column="68">-&gt;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="70">strstart<pos:position pos:line="10" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="80"/></expr_stmt>

        <comment type="block" pos:line="12" pos:column="9">/* Deal with !@#$% 64K limit: */</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">more<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">==<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal> <operator pos:line="13" pos:column="23">&amp;&amp;<pos:position pos:line="13" pos:column="33"/></operator> <name><name pos:line="13" pos:column="26">s<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">strstart<pos:position pos:line="13" pos:column="37"/></name></name> <operator pos:line="13" pos:column="38">==<pos:position pos:line="13" pos:column="40"/></operator> <literal type="number" pos:line="13" pos:column="41">0<pos:position pos:line="13" pos:column="42"/></literal> <operator pos:line="13" pos:column="43">&amp;&amp;<pos:position pos:line="13" pos:column="53"/></operator> <name><name pos:line="13" pos:column="46">s<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">-&gt;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="49">lookahead<pos:position pos:line="13" pos:column="58"/></name></name> <operator pos:line="13" pos:column="59">==<pos:position pos:line="13" pos:column="61"/></operator> <literal type="number" pos:line="13" pos:column="62">0<pos:position pos:line="13" pos:column="63"/></literal></expr>)<pos:position pos:line="13" pos:column="64"/></condition><then pos:line="13" pos:column="64"> <block pos:line="13" pos:column="65">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">more<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">wsize<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><name pos:line="15" pos:column="20">more<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <call pos:line="15" pos:column="28">(<name pos:line="15" pos:column="29">unsigned<pos:position pos:line="15" pos:column="37"/></name>)<argument_list pos:line="15" pos:column="38">(<argument><expr><operator pos:line="15" pos:column="39">-<pos:position pos:line="15" pos:column="40"/></operator><literal type="number" pos:line="15" pos:column="40">1<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
            <comment type="block" pos:line="16" pos:column="13">/* Very unlikely, but possible on 16 bit machine if strstart == 0
             * and lookahead == 1 (input done one byte at time)
             */</comment>
            <expr_stmt><expr><name pos:line="19" pos:column="13">more<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">--<pos:position pos:line="19" pos:column="19"/></operator></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>

        <comment type="block" pos:line="21" pos:column="9">/* If the window is almost full and there is insufficient lookahead,
         * move the upper half to the lower one to make room in the upper half.
         */</comment>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif> <elseif pos:line="24" pos:column="11">else <if pos:line="24" pos:column="16">if <condition pos:line="24" pos:column="19">(<expr><name><name pos:line="24" pos:column="20">s<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">strstart<pos:position pos:line="24" pos:column="31"/></name></name> <operator pos:line="24" pos:column="32">&gt;=<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="35">wsize<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">+<pos:position pos:line="24" pos:column="41"/></operator><call><name pos:line="24" pos:column="41">MAX_DIST<pos:position pos:line="24" pos:column="49"/></name><argument_list pos:line="24" pos:column="49">(<argument><expr><name pos:line="24" pos:column="50">s<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{

            <comment type="block" pos:line="26" pos:column="13">/* By the IN assertion, the window is not empty so we can't confuse
             * more == 0 with more == 64K on a 16 bit machine.
             */</comment>
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">zmemcpy<pos:position pos:line="29" pos:column="20"/></name><argument_list pos:line="29" pos:column="20">(<argument><expr><operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">charf<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">*<pos:position pos:line="29" pos:column="29"/></operator><operator pos:line="29" pos:column="29">)<pos:position pos:line="29" pos:column="30"/></operator><name><name pos:line="29" pos:column="30">s<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">-&gt;<pos:position pos:line="29" pos:column="36"/></operator><name pos:line="29" pos:column="33">window<pos:position pos:line="29" pos:column="39"/></name></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="41">(<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">charf<pos:position pos:line="29" pos:column="47"/></name> <operator pos:line="29" pos:column="48">*<pos:position pos:line="29" pos:column="49"/></operator><operator pos:line="29" pos:column="49">)<pos:position pos:line="29" pos:column="50"/></operator><name><name pos:line="29" pos:column="50">s<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">-&gt;<pos:position pos:line="29" pos:column="56"/></operator><name pos:line="29" pos:column="53">window<pos:position pos:line="29" pos:column="59"/></name></name><operator pos:line="29" pos:column="59">+<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">wsize<pos:position pos:line="29" pos:column="65"/></name></expr></argument>,
                   <argument><expr><operator pos:line="30" pos:column="20">(<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">unsigned<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="30">wsize<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="31" pos:column="13">s<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">match_start<pos:position pos:line="31" pos:column="27"/></name></name> <operator pos:line="31" pos:column="28">-=<pos:position pos:line="31" pos:column="30"/></operator> <name pos:line="31" pos:column="31">wsize<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">s<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">strstart<pos:position pos:line="32" pos:column="24"/></name></name>    <operator pos:line="32" pos:column="28">-=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">wsize<pos:position pos:line="32" pos:column="36"/></name></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt> <comment type="block" pos:line="32" pos:column="38">/* we now have strstart &gt;= MAX_DIST */</comment>

            <expr_stmt><expr><name><name pos:line="34" pos:column="13">s<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">block_start<pos:position pos:line="34" pos:column="27"/></name></name> <operator pos:line="34" pos:column="28">-=<pos:position pos:line="34" pos:column="30"/></operator> <operator pos:line="34" pos:column="31">(<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">Long<pos:position pos:line="34" pos:column="36"/></name><operator pos:line="34" pos:column="36">)<pos:position pos:line="34" pos:column="37"/></operator> <name pos:line="34" pos:column="38">wsize<pos:position pos:line="34" pos:column="43"/></name></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>

            <comment type="block" pos:line="36" pos:column="13">/* Slide the hash table (could be avoided with 32 bit values
               at the expense of memory usage):
             */</comment>
            <expr_stmt><expr><name pos:line="39" pos:column="13">n<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name><name pos:line="39" pos:column="17">s<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">hash_size<pos:position pos:line="39" pos:column="29"/></name></name></expr>;<pos:position pos:line="39" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="40" pos:column="13">p<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <operator pos:line="40" pos:column="17">&amp;<pos:position pos:line="40" pos:column="22"/></operator><name><name pos:line="40" pos:column="18">s<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">head<pos:position pos:line="40" pos:column="25"/></name><index pos:line="40" pos:column="25">[<expr><name pos:line="40" pos:column="26">n<pos:position pos:line="40" pos:column="27"/></name></expr>]<pos:position pos:line="40" pos:column="28"/></index></name></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
            <do pos:line="41" pos:column="13">do <block pos:line="41" pos:column="16">{
                <expr_stmt><expr><name pos:line="42" pos:column="17">m<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator><operator pos:line="42" pos:column="22">--<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">p<pos:position pos:line="42" pos:column="25"/></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="43" pos:column="17">*<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="18">p<pos:position pos:line="43" pos:column="19"/></name> <operator pos:line="43" pos:column="20">=<pos:position pos:line="43" pos:column="21"/></operator> <call pos:line="43" pos:column="22">(<name pos:line="43" pos:column="23">Pos<pos:position pos:line="43" pos:column="26"/></name>)<argument_list pos:line="43" pos:column="27">(<argument><expr><ternary><condition><expr><name pos:line="43" pos:column="28">m<pos:position pos:line="43" pos:column="29"/></name> <operator pos:line="43" pos:column="30">&gt;=<pos:position pos:line="43" pos:column="35"/></operator> <name pos:line="43" pos:column="33">wsize<pos:position pos:line="43" pos:column="38"/></name></expr> ?<pos:position pos:line="43" pos:column="40"/></condition><then pos:line="43" pos:column="40"> <expr><name pos:line="43" pos:column="41">m<pos:position pos:line="43" pos:column="42"/></name><operator pos:line="43" pos:column="42">-<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="43">wsize<pos:position pos:line="43" pos:column="48"/></name></expr> <pos:position pos:line="43" pos:column="49"/></then><else pos:line="43" pos:column="49">: <expr><name pos:line="43" pos:column="51">NIL<pos:position pos:line="43" pos:column="54"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block> while <condition pos:line="44" pos:column="21">(<expr><operator pos:line="44" pos:column="22">--<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">n<pos:position pos:line="44" pos:column="25"/></name></expr>)<pos:position pos:line="44" pos:column="26"/></condition>;<pos:position pos:line="44" pos:column="27"/></do>

            <expr_stmt><expr><name pos:line="46" pos:column="13">n<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <name pos:line="46" pos:column="17">wsize<pos:position pos:line="46" pos:column="22"/></name></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="47" pos:column="13">p<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <operator pos:line="47" pos:column="17">&amp;<pos:position pos:line="47" pos:column="22"/></operator><name><name pos:line="47" pos:column="18">s<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">prev<pos:position pos:line="47" pos:column="25"/></name><index pos:line="47" pos:column="25">[<expr><name pos:line="47" pos:column="26">n<pos:position pos:line="47" pos:column="27"/></name></expr>]<pos:position pos:line="47" pos:column="28"/></index></name></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
            <do pos:line="48" pos:column="13">do <block pos:line="48" pos:column="16">{
                <expr_stmt><expr><name pos:line="49" pos:column="17">m<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">=<pos:position pos:line="49" pos:column="20"/></operator> <operator pos:line="49" pos:column="21">*<pos:position pos:line="49" pos:column="22"/></operator><operator pos:line="49" pos:column="22">--<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">p<pos:position pos:line="49" pos:column="25"/></name></expr>;<pos:position pos:line="49" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="50" pos:column="17">*<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">p<pos:position pos:line="50" pos:column="19"/></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <call pos:line="50" pos:column="22">(<name pos:line="50" pos:column="23">Pos<pos:position pos:line="50" pos:column="26"/></name>)<argument_list pos:line="50" pos:column="27">(<argument><expr><ternary><condition><expr><name pos:line="50" pos:column="28">m<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">&gt;=<pos:position pos:line="50" pos:column="35"/></operator> <name pos:line="50" pos:column="33">wsize<pos:position pos:line="50" pos:column="38"/></name></expr> ?<pos:position pos:line="50" pos:column="40"/></condition><then pos:line="50" pos:column="40"> <expr><name pos:line="50" pos:column="41">m<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="43">wsize<pos:position pos:line="50" pos:column="48"/></name></expr> <pos:position pos:line="50" pos:column="49"/></then><else pos:line="50" pos:column="49">: <expr><name pos:line="50" pos:column="51">NIL<pos:position pos:line="50" pos:column="54"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt>
                <comment type="block" pos:line="51" pos:column="17">/* If n is not on any hash chain, prev[n] is garbage but
                 * its value will never be used.
                 */</comment>
            }<pos:position pos:line="54" pos:column="14"/></block> while <condition pos:line="54" pos:column="21">(<expr><operator pos:line="54" pos:column="22">--<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">n<pos:position pos:line="54" pos:column="25"/></name></expr>)<pos:position pos:line="54" pos:column="26"/></condition>;<pos:position pos:line="54" pos:column="27"/></do>

            <expr_stmt><expr><name pos:line="56" pos:column="13">more<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">+=<pos:position pos:line="56" pos:column="20"/></operator> <name pos:line="56" pos:column="21">wsize<pos:position pos:line="56" pos:column="26"/></name></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="57" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name><name pos:line="58" pos:column="13">s<pos:position pos:line="58" pos:column="14"/></name><operator pos:line="58" pos:column="14">-&gt;<pos:position pos:line="58" pos:column="19"/></operator><name pos:line="58" pos:column="16">strm<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">-&gt;<pos:position pos:line="58" pos:column="25"/></operator><name pos:line="58" pos:column="22">avail_in<pos:position pos:line="58" pos:column="30"/></name></name> <operator pos:line="58" pos:column="31">==<pos:position pos:line="58" pos:column="33"/></operator> <literal type="number" pos:line="58" pos:column="34">0<pos:position pos:line="58" pos:column="35"/></literal></expr>)<pos:position pos:line="58" pos:column="36"/></condition><then pos:line="58" pos:column="36"> <block type="pseudo"><return pos:line="58" pos:column="37">return;<pos:position pos:line="58" pos:column="44"/></return></block></then></if>

        <comment type="block" pos:line="60" pos:column="9">/* If there was no sliding:
         *    strstart &lt;= WSIZE+MAX_DIST-1 &amp;&amp; lookahead &lt;= MIN_LOOKAHEAD - 1 &amp;&amp;
         *    more == window_size - lookahead - strstart
         * =&gt; more &gt;= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
         * =&gt; more &gt;= window_size - 2*WSIZE + 2
         * In the BIG_MEM or MMAP case (not yet supported),
         *   window_size == input_size + MIN_LOOKAHEAD  &amp;&amp;
         *   strstart + s-&gt;lookahead &lt;= input_size =&gt; more &gt;= MIN_LOOKAHEAD.
         * Otherwise, window_size == 2*WSIZE so more &gt;= 2.
         * If there was sliding, more &gt;= WSIZE. So in all cases, more &gt;= 2.
         */</comment>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">Assert<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">more<pos:position pos:line="71" pos:column="20"/></name> <operator pos:line="71" pos:column="21">&gt;=<pos:position pos:line="71" pos:column="26"/></operator> <literal type="number" pos:line="71" pos:column="24">2<pos:position pos:line="71" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="27">"more &lt; 2"<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="39"/></expr_stmt>

        <expr_stmt><expr><name pos:line="73" pos:column="9">n<pos:position pos:line="73" pos:column="10"/></name> <operator pos:line="73" pos:column="11">=<pos:position pos:line="73" pos:column="12"/></operator> <call><name pos:line="73" pos:column="13">zread_buf<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name><name pos:line="73" pos:column="23">s<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">-&gt;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="26">strm<pos:position pos:line="73" pos:column="30"/></name></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="32">(<pos:position pos:line="73" pos:column="33"/></operator><name pos:line="73" pos:column="33">charf<pos:position pos:line="73" pos:column="38"/></name> <operator pos:line="73" pos:column="39">*<pos:position pos:line="73" pos:column="40"/></operator><operator pos:line="73" pos:column="40">)<pos:position pos:line="73" pos:column="41"/></operator><name><name pos:line="73" pos:column="41">s<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">-&gt;<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="44">window<pos:position pos:line="73" pos:column="50"/></name></name> <operator pos:line="73" pos:column="51">+<pos:position pos:line="73" pos:column="52"/></operator> <name><name pos:line="73" pos:column="53">s<pos:position pos:line="73" pos:column="54"/></name><operator pos:line="73" pos:column="54">-&gt;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="56">strstart<pos:position pos:line="73" pos:column="64"/></name></name> <operator pos:line="73" pos:column="65">+<pos:position pos:line="73" pos:column="66"/></operator> <name><name pos:line="73" pos:column="67">s<pos:position pos:line="73" pos:column="68"/></name><operator pos:line="73" pos:column="68">-&gt;<pos:position pos:line="73" pos:column="73"/></operator><name pos:line="73" pos:column="70">lookahead<pos:position pos:line="73" pos:column="79"/></name></name></expr></argument>,
                     <argument><expr><name pos:line="74" pos:column="22">more<pos:position pos:line="74" pos:column="26"/></name></expr></argument>)<pos:position pos:line="74" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">s<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">-&gt;<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="12">lookahead<pos:position pos:line="75" pos:column="21"/></name></name> <operator pos:line="75" pos:column="22">+=<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">n<pos:position pos:line="75" pos:column="26"/></name></expr>;<pos:position pos:line="75" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="77" pos:column="9">/* Initialize the hash value now that we have some input: */</comment>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name><name pos:line="78" pos:column="13">s<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">lookahead<pos:position pos:line="78" pos:column="25"/></name></name> <operator pos:line="78" pos:column="26">&gt;=<pos:position pos:line="78" pos:column="31"/></operator> <name pos:line="78" pos:column="29">MIN_MATCH<pos:position pos:line="78" pos:column="38"/></name></expr>)<pos:position pos:line="78" pos:column="39"/></condition><then pos:line="78" pos:column="39"> <block pos:line="78" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">s<pos:position pos:line="79" pos:column="14"/></name><operator pos:line="79" pos:column="14">-&gt;<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="16">ins_h<pos:position pos:line="79" pos:column="21"/></name></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <name><name pos:line="79" pos:column="24">s<pos:position pos:line="79" pos:column="25"/></name><operator pos:line="79" pos:column="25">-&gt;<pos:position pos:line="79" pos:column="30"/></operator><name pos:line="79" pos:column="27">window<pos:position pos:line="79" pos:column="33"/></name><index pos:line="79" pos:column="33">[<expr><name><name pos:line="79" pos:column="34">s<pos:position pos:line="79" pos:column="35"/></name><operator pos:line="79" pos:column="35">-&gt;<pos:position pos:line="79" pos:column="40"/></operator><name pos:line="79" pos:column="37">strstart<pos:position pos:line="79" pos:column="45"/></name></name></expr>]<pos:position pos:line="79" pos:column="46"/></index></name></expr>;<pos:position pos:line="79" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">UPDATE_HASH<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">s<pos:position pos:line="80" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="28">s<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">-&gt;<pos:position pos:line="80" pos:column="34"/></operator><name pos:line="80" pos:column="31">ins_h<pos:position pos:line="80" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="38">s<pos:position pos:line="80" pos:column="39"/></name><operator pos:line="80" pos:column="39">-&gt;<pos:position pos:line="80" pos:column="44"/></operator><name pos:line="80" pos:column="41">window<pos:position pos:line="80" pos:column="47"/></name><index pos:line="80" pos:column="47">[<expr><name><name pos:line="80" pos:column="48">s<pos:position pos:line="80" pos:column="49"/></name><operator pos:line="80" pos:column="49">-&gt;<pos:position pos:line="80" pos:column="54"/></operator><name pos:line="80" pos:column="51">strstart<pos:position pos:line="80" pos:column="59"/></name></name><operator pos:line="80" pos:column="59">+<pos:position pos:line="80" pos:column="60"/></operator><literal type="number" pos:line="80" pos:column="60">1<pos:position pos:line="80" pos:column="61"/></literal></expr>]<pos:position pos:line="80" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="80" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="64"/></expr_stmt>
<cpp:if pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">if<pos:position pos:line="81" pos:column="4"/></cpp:directive> <expr><name pos:line="81" pos:column="5">MIN_MATCH<pos:position pos:line="81" pos:column="14"/></name> <operator pos:line="81" pos:column="15">!=<pos:position pos:line="81" pos:column="17"/></operator> <literal type="number" pos:line="81" pos:column="18">3<pos:position pos:line="81" pos:column="19"/></literal></expr></cpp:if>
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">Call<pos:position pos:line="82" pos:column="17"/></name></type> <name pos:line="82" pos:column="18">UPDATE_HASH<pos:position pos:line="82" pos:column="29"/></name><argument_list pos:line="82" pos:column="29">()<pos:position pos:line="82" pos:column="31"/></argument_list> <name pos:line="82" pos:column="32">MIN_MATCH<pos:position pos:line="82" pos:column="41"/></name>-3 <name pos:line="82" pos:column="44">more<pos:position pos:line="82" pos:column="48"/></name> <name pos:line="82" pos:column="49">times<pos:position pos:line="82" pos:column="54"/></name></decl></decl_stmt>
<cpp:endif pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">endif<pos:position pos:line="83" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="84" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="85" pos:column="9">/* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
         * but this is not important since only literal bytes will be emitted.
         */</comment>

    }<pos:position pos:line="89" pos:column="6"/></block> while <condition pos:line="89" pos:column="13">(<expr><name><name pos:line="89" pos:column="14">s<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">-&gt;<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="17">lookahead<pos:position pos:line="89" pos:column="26"/></name></name> <operator pos:line="89" pos:column="27">&lt;<pos:position pos:line="89" pos:column="31"/></operator> <name pos:line="89" pos:column="29">MIN_LOOKAHEAD<pos:position pos:line="89" pos:column="42"/></name> <operator pos:line="89" pos:column="43">&amp;&amp;<pos:position pos:line="89" pos:column="53"/></operator> <name><name pos:line="89" pos:column="46">s<pos:position pos:line="89" pos:column="47"/></name><operator pos:line="89" pos:column="47">-&gt;<pos:position pos:line="89" pos:column="52"/></operator><name pos:line="89" pos:column="49">strm<pos:position pos:line="89" pos:column="53"/></name><operator pos:line="89" pos:column="53">-&gt;<pos:position pos:line="89" pos:column="58"/></operator><name pos:line="89" pos:column="55">avail_in<pos:position pos:line="89" pos:column="63"/></name></name> <operator pos:line="89" pos:column="64">!=<pos:position pos:line="89" pos:column="66"/></operator> <literal type="number" pos:line="89" pos:column="67">0<pos:position pos:line="89" pos:column="68"/></literal></expr>)<pos:position pos:line="89" pos:column="69"/></condition>;<pos:position pos:line="89" pos:column="70"/></do>
}<pos:position pos:line="90" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_186.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">recv_generator<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">fname<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="33">struct<pos:position pos:line="1" pos:column="39"/></name> <name pos:line="1" pos:column="40">file_list<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">flist<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">i<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="63">int<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">f_out<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list>
<block pos:line="2" pos:column="1">{  
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">fd<pos:position pos:line="3" pos:column="9"/></name></decl>;<pos:position pos:line="3" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">st<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">buf<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">sum_struct<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">s<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">sum<pos:position pos:line="7" pos:column="11"/></name><index pos:line="7" pos:column="11">[<expr><name pos:line="7" pos:column="12">SUM_LENGTH<pos:position pos:line="7" pos:column="22"/></name></expr>]<pos:position pos:line="7" pos:column="23"/></index></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">statret<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">verbose<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&gt;<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">fprintf<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">stderr<pos:position pos:line="11" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="20">"recv_generator(%s)\n"<pos:position pos:line="11" pos:column="42"/></literal></expr></argument>,<argument><expr><name pos:line="11" pos:column="43">fname<pos:position pos:line="11" pos:column="48"/></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="50"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">statret<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">lstat<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">fname<pos:position pos:line="13" pos:column="24"/></name></expr></argument>,<argument><expr><operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="26">st<pos:position pos:line="13" pos:column="28"/></name></expr></argument>)<pos:position pos:line="13" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">SUPPORT_LINKS<pos:position pos:line="15" pos:column="18"/></name></expr></cpp:if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">preserve_links<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">&amp;&amp;<pos:position pos:line="16" pos:column="32"/></operator> <call><name pos:line="16" pos:column="25">S_ISLNK<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name><name pos:line="16" pos:column="33">flist<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">files<pos:position pos:line="16" pos:column="45"/></name><index pos:line="16" pos:column="45">[<expr><name pos:line="16" pos:column="46">i<pos:position pos:line="16" pos:column="47"/></name></expr>]<pos:position pos:line="16" pos:column="48"/></index></name><operator pos:line="16" pos:column="48">.<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">mode<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="55"/></condition><then pos:line="16" pos:column="55"> <block pos:line="16" pos:column="56">{
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name></type> <name><name pos:line="17" pos:column="10">lnk<pos:position pos:line="17" pos:column="13"/></name><index pos:line="17" pos:column="13">[<expr><name pos:line="17" pos:column="14">MAXPATHLEN<pos:position pos:line="17" pos:column="24"/></name></expr>]<pos:position pos:line="17" pos:column="25"/></index></name></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">l<pos:position pos:line="18" pos:column="10"/></name></decl>;<pos:position pos:line="18" pos:column="11"/></decl_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">statret<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22"> <block pos:line="19" pos:column="23">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">l<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">readlink<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">fname<pos:position pos:line="20" pos:column="25"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="26">lnk<pos:position pos:line="20" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="20" pos:column="30">MAXPATHLEN<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">-<pos:position pos:line="20" pos:column="41"/></operator><literal type="number" pos:line="20" pos:column="41">1<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
      <if pos:line="21" pos:column="7">if <condition pos:line="21" pos:column="10">(<expr><name pos:line="21" pos:column="11">l<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">&gt;<pos:position pos:line="21" pos:column="17"/></operator> <literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr>)<pos:position pos:line="21" pos:column="17"/></condition><then pos:line="21" pos:column="17"> <block pos:line="21" pos:column="18">{
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">lnk<pos:position pos:line="22" pos:column="12"/></name><index pos:line="22" pos:column="12">[<expr><name pos:line="22" pos:column="13">l<pos:position pos:line="22" pos:column="14"/></name></expr>]<pos:position pos:line="22" pos:column="15"/></index></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="18">0<pos:position pos:line="22" pos:column="19"/></literal></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strcmp<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">lnk<pos:position pos:line="23" pos:column="23"/></name></expr></argument>,<argument><expr><name><name pos:line="23" pos:column="24">flist<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">files<pos:position pos:line="23" pos:column="36"/></name><index pos:line="23" pos:column="36">[<expr><name pos:line="23" pos:column="37">i<pos:position pos:line="23" pos:column="38"/></name></expr>]<pos:position pos:line="23" pos:column="39"/></index></name><operator pos:line="23" pos:column="39">.<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">link<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call> <operator pos:line="23" pos:column="46">==<pos:position pos:line="23" pos:column="48"/></operator> <literal type="number" pos:line="23" pos:column="49">0<pos:position pos:line="23" pos:column="50"/></literal></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51"> <block pos:line="23" pos:column="52">{
	  <expr_stmt><expr><call><name pos:line="24" pos:column="11">set_perms<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">fname<pos:position pos:line="24" pos:column="26"/></name></expr></argument>,<argument><expr><operator pos:line="24" pos:column="27">&amp;<pos:position pos:line="24" pos:column="32"/></operator><name><name pos:line="24" pos:column="28">flist<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">files<pos:position pos:line="24" pos:column="40"/></name><index pos:line="24" pos:column="40">[<expr><name pos:line="24" pos:column="41">i<pos:position pos:line="24" pos:column="42"/></name></expr>]<pos:position pos:line="24" pos:column="43"/></index></name></expr></argument>,<argument><expr><operator pos:line="24" pos:column="44">&amp;<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="45">st<pos:position pos:line="24" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="24" pos:column="48">1<pos:position pos:line="24" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
	  <return pos:line="25" pos:column="11">return;<pos:position pos:line="25" pos:column="18"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
      }<pos:position pos:line="27" pos:column="8"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">dry_run<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="19">unlink<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">fname<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt></block></then></if>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">dry_run<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">&amp;&amp;<pos:position pos:line="30" pos:column="28"/></operator> <call><name pos:line="30" pos:column="21">symlink<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name><name pos:line="30" pos:column="29">flist<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">files<pos:position pos:line="30" pos:column="41"/></name><index pos:line="30" pos:column="41">[<expr><name pos:line="30" pos:column="42">i<pos:position pos:line="30" pos:column="43"/></name></expr>]<pos:position pos:line="30" pos:column="44"/></index></name><operator pos:line="30" pos:column="44">.<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="45">link<pos:position pos:line="30" pos:column="49"/></name></expr></argument>,<argument><expr><name pos:line="30" pos:column="50">fname<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call> <operator pos:line="30" pos:column="57">!=<pos:position pos:line="30" pos:column="59"/></operator> <literal type="number" pos:line="30" pos:column="60">0<pos:position pos:line="30" pos:column="61"/></literal></expr>)<pos:position pos:line="30" pos:column="62"/></condition><then pos:line="30" pos:column="62"> <block pos:line="30" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">fprintf<pos:position pos:line="31" pos:column="14"/></name><argument_list pos:line="31" pos:column="14">(<argument><expr><name pos:line="31" pos:column="15">stderr<pos:position pos:line="31" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="31" pos:column="22">"link %s -&gt; %s : %s\n"<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>,
	      <argument><expr><name pos:line="32" pos:column="15">fname<pos:position pos:line="32" pos:column="20"/></name></expr></argument>,<argument><expr><name><name pos:line="32" pos:column="21">flist<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">-&gt;<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="28">files<pos:position pos:line="32" pos:column="33"/></name><index pos:line="32" pos:column="33">[<expr><name pos:line="32" pos:column="34">i<pos:position pos:line="32" pos:column="35"/></name></expr>]<pos:position pos:line="32" pos:column="36"/></index></name><operator pos:line="32" pos:column="36">.<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="37">link<pos:position pos:line="32" pos:column="41"/></name></expr></argument>,<argument><expr><call><name pos:line="32" pos:column="42">strerror<pos:position pos:line="32" pos:column="50"/></name><argument_list pos:line="32" pos:column="50">(<argument><expr><name pos:line="32" pos:column="51">errno<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">set_perms<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">(<argument><expr><name pos:line="34" pos:column="17">fname<pos:position pos:line="34" pos:column="22"/></name></expr></argument>,<argument><expr><operator pos:line="34" pos:column="23">&amp;<pos:position pos:line="34" pos:column="28"/></operator><name><name pos:line="34" pos:column="24">flist<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">files<pos:position pos:line="34" pos:column="36"/></name><index pos:line="34" pos:column="36">[<expr><name pos:line="34" pos:column="37">i<pos:position pos:line="34" pos:column="38"/></name></expr>]<pos:position pos:line="34" pos:column="39"/></index></name></expr></argument>,<argument><expr><name pos:line="34" pos:column="40">NULL<pos:position pos:line="34" pos:column="44"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="34" pos:column="45">0<pos:position pos:line="34" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name pos:line="35" pos:column="11">verbose<pos:position pos:line="35" pos:column="18"/></name></expr>)<pos:position pos:line="35" pos:column="19"/></condition><then pos:line="35" pos:column="19"> 
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="9">fprintf<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><ternary><condition><expr><name pos:line="36" pos:column="17">am_server<pos:position pos:line="36" pos:column="26"/></name></expr>?<pos:position pos:line="36" pos:column="27"/></condition><then><expr><name pos:line="36" pos:column="27">stderr<pos:position pos:line="36" pos:column="33"/></name></expr></then><else pos:line="36" pos:column="33">:<expr><name pos:line="36" pos:column="34">stdout<pos:position pos:line="36" pos:column="40"/></name></expr></else></ternary></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="41">"%s -&gt; %s\n"<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>,
		<argument><expr><name pos:line="37" pos:column="17">fname<pos:position pos:line="37" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="37" pos:column="23">flist<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">files<pos:position pos:line="37" pos:column="35"/></name><index pos:line="37" pos:column="35">[<expr><name pos:line="37" pos:column="36">i<pos:position pos:line="37" pos:column="37"/></name></expr>]<pos:position pos:line="37" pos:column="38"/></index></name><operator pos:line="37" pos:column="38">.<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">link<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>
    <return pos:line="39" pos:column="5">return;<pos:position pos:line="39" pos:column="12"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">HAVE_MKNOD<pos:position pos:line="43" pos:column="18"/></name></cpp:ifdef>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">preserve_devices<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">&amp;&amp;<pos:position pos:line="44" pos:column="34"/></operator> <call><name pos:line="44" pos:column="27">IS_DEVICE<pos:position pos:line="44" pos:column="36"/></name><argument_list pos:line="44" pos:column="36">(<argument><expr><name><name pos:line="44" pos:column="37">flist<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">files<pos:position pos:line="44" pos:column="49"/></name><index pos:line="44" pos:column="49">[<expr><name pos:line="44" pos:column="50">i<pos:position pos:line="44" pos:column="51"/></name></expr>]<pos:position pos:line="44" pos:column="52"/></index></name><operator pos:line="44" pos:column="52">.<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="53">mode<pos:position pos:line="44" pos:column="57"/></name></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="59"/></condition><then pos:line="44" pos:column="59"> <block pos:line="44" pos:column="60">{
    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">statret<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">!=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal> <operator pos:line="45" pos:column="22">||<pos:position pos:line="45" pos:column="24"/></operator> 
	<name><name pos:line="46" pos:column="9">st<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">.<pos:position pos:line="46" pos:column="12"/></operator><name pos:line="46" pos:column="12">st_mode<pos:position pos:line="46" pos:column="19"/></name></name> <operator pos:line="46" pos:column="20">!=<pos:position pos:line="46" pos:column="22"/></operator> <name><name pos:line="46" pos:column="23">flist<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">files<pos:position pos:line="46" pos:column="35"/></name><index pos:line="46" pos:column="35">[<expr><name pos:line="46" pos:column="36">i<pos:position pos:line="46" pos:column="37"/></name></expr>]<pos:position pos:line="46" pos:column="38"/></index></name><operator pos:line="46" pos:column="38">.<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">mode<pos:position pos:line="46" pos:column="43"/></name> <operator pos:line="46" pos:column="44">||<pos:position pos:line="46" pos:column="46"/></operator>
	<name><name pos:line="47" pos:column="9">st<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">.<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">st_rdev<pos:position pos:line="47" pos:column="19"/></name></name> <operator pos:line="47" pos:column="20">!=<pos:position pos:line="47" pos:column="22"/></operator> <name><name pos:line="47" pos:column="23">flist<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">files<pos:position pos:line="47" pos:column="35"/></name><index pos:line="47" pos:column="35">[<expr><name pos:line="47" pos:column="36">i<pos:position pos:line="47" pos:column="37"/></name></expr>]<pos:position pos:line="47" pos:column="38"/></index></name><operator pos:line="47" pos:column="38">.<pos:position pos:line="47" pos:column="39"/></operator><name pos:line="47" pos:column="39">dev<pos:position pos:line="47" pos:column="42"/></name></expr>)<pos:position pos:line="47" pos:column="43"/></condition><then pos:line="47" pos:column="43"> <block pos:line="47" pos:column="44">{	
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><operator pos:line="48" pos:column="11">!<pos:position pos:line="48" pos:column="12"/></operator><name pos:line="48" pos:column="12">dry_run<pos:position pos:line="48" pos:column="19"/></name></expr>)<pos:position pos:line="48" pos:column="20"/></condition><then pos:line="48" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="21">unlink<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name pos:line="48" pos:column="28">fname<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt></block></then></if>
      <if pos:line="49" pos:column="7">if <condition pos:line="49" pos:column="10">(<expr><name pos:line="49" pos:column="11">verbose<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">&gt;<pos:position pos:line="49" pos:column="23"/></operator> <literal type="number" pos:line="49" pos:column="21">2<pos:position pos:line="49" pos:column="22"/></literal></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="9">fprintf<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><name pos:line="50" pos:column="17">stderr<pos:position pos:line="50" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="50" pos:column="24">"mknod(%s,0%o,0x%x)\n"<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>,
		<argument><expr><name pos:line="51" pos:column="17">fname<pos:position pos:line="51" pos:column="22"/></name></expr></argument>,<argument><expr><operator pos:line="51" pos:column="23">(<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">int<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">)<pos:position pos:line="51" pos:column="28"/></operator><name><name pos:line="51" pos:column="28">flist<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-&gt;<pos:position pos:line="51" pos:column="38"/></operator><name pos:line="51" pos:column="35">files<pos:position pos:line="51" pos:column="40"/></name><index pos:line="51" pos:column="40">[<expr><name pos:line="51" pos:column="41">i<pos:position pos:line="51" pos:column="42"/></name></expr>]<pos:position pos:line="51" pos:column="43"/></index></name><operator pos:line="51" pos:column="43">.<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="44">mode<pos:position pos:line="51" pos:column="48"/></name></expr></argument>,<argument><expr><operator pos:line="51" pos:column="49">(<pos:position pos:line="51" pos:column="50"/></operator><name pos:line="51" pos:column="50">int<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">)<pos:position pos:line="51" pos:column="54"/></operator><name><name pos:line="51" pos:column="54">flist<pos:position pos:line="51" pos:column="59"/></name><operator pos:line="51" pos:column="59">-&gt;<pos:position pos:line="51" pos:column="64"/></operator><name pos:line="51" pos:column="61">files<pos:position pos:line="51" pos:column="66"/></name><index pos:line="51" pos:column="66">[<expr><name pos:line="51" pos:column="67">i<pos:position pos:line="51" pos:column="68"/></name></expr>]<pos:position pos:line="51" pos:column="69"/></index></name><operator pos:line="51" pos:column="69">.<pos:position pos:line="51" pos:column="70"/></operator><name pos:line="51" pos:column="70">dev<pos:position pos:line="51" pos:column="73"/></name></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="75"/></expr_stmt></block></then></if>
      <if pos:line="52" pos:column="7">if <condition pos:line="52" pos:column="10">(<expr><operator pos:line="52" pos:column="11">!<pos:position pos:line="52" pos:column="12"/></operator><name pos:line="52" pos:column="12">dry_run<pos:position pos:line="52" pos:column="19"/></name> <operator pos:line="52" pos:column="20">&amp;&amp;<pos:position pos:line="52" pos:column="30"/></operator> 
	  <call><name pos:line="53" pos:column="11">mknod<pos:position pos:line="53" pos:column="16"/></name><argument_list pos:line="53" pos:column="16">(<argument><expr><name pos:line="53" pos:column="17">fname<pos:position pos:line="53" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="53" pos:column="23">flist<pos:position pos:line="53" pos:column="28"/></name><operator pos:line="53" pos:column="28">-&gt;<pos:position pos:line="53" pos:column="33"/></operator><name pos:line="53" pos:column="30">files<pos:position pos:line="53" pos:column="35"/></name><index pos:line="53" pos:column="35">[<expr><name pos:line="53" pos:column="36">i<pos:position pos:line="53" pos:column="37"/></name></expr>]<pos:position pos:line="53" pos:column="38"/></index></name><operator pos:line="53" pos:column="38">.<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="39">mode<pos:position pos:line="53" pos:column="43"/></name></expr></argument>,<argument><expr><name><name pos:line="53" pos:column="44">flist<pos:position pos:line="53" pos:column="49"/></name><operator pos:line="53" pos:column="49">-&gt;<pos:position pos:line="53" pos:column="54"/></operator><name pos:line="53" pos:column="51">files<pos:position pos:line="53" pos:column="56"/></name><index pos:line="53" pos:column="56">[<expr><name pos:line="53" pos:column="57">i<pos:position pos:line="53" pos:column="58"/></name></expr>]<pos:position pos:line="53" pos:column="59"/></index></name><operator pos:line="53" pos:column="59">.<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="60">dev<pos:position pos:line="53" pos:column="63"/></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call> <operator pos:line="53" pos:column="65">!=<pos:position pos:line="53" pos:column="67"/></operator> <literal type="number" pos:line="53" pos:column="68">0<pos:position pos:line="53" pos:column="69"/></literal></expr>)<pos:position pos:line="53" pos:column="70"/></condition><then pos:line="53" pos:column="70"> <block pos:line="53" pos:column="71">{
	<expr_stmt><expr><call><name pos:line="54" pos:column="9">fprintf<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">stderr<pos:position pos:line="54" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="54" pos:column="24">"mknod %s : %s\n"<pos:position pos:line="54" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="54" pos:column="42">fname<pos:position pos:line="54" pos:column="47"/></name></expr></argument>,<argument><expr><call><name pos:line="54" pos:column="48">strerror<pos:position pos:line="54" pos:column="56"/></name><argument_list pos:line="54" pos:column="56">(<argument><expr><name pos:line="54" pos:column="57">errno<pos:position pos:line="54" pos:column="62"/></name></expr></argument>)<pos:position pos:line="54" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="65"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></then> <else pos:line="55" pos:column="9">else <block pos:line="55" pos:column="14">{
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">set_perms<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><name pos:line="56" pos:column="19">fname<pos:position pos:line="56" pos:column="24"/></name></expr></argument>,<argument><expr><operator pos:line="56" pos:column="25">&amp;<pos:position pos:line="56" pos:column="30"/></operator><name><name pos:line="56" pos:column="26">flist<pos:position pos:line="56" pos:column="31"/></name><operator pos:line="56" pos:column="31">-&gt;<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="33">files<pos:position pos:line="56" pos:column="38"/></name><index pos:line="56" pos:column="38">[<expr><name pos:line="56" pos:column="39">i<pos:position pos:line="56" pos:column="40"/></name></expr>]<pos:position pos:line="56" pos:column="41"/></index></name></expr></argument>,<argument><expr><name pos:line="56" pos:column="42">NULL<pos:position pos:line="56" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="56" pos:column="47">0<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="50"/></expr_stmt>
	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">verbose<pos:position pos:line="57" pos:column="20"/></name></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21">
	  <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="11">fprintf<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><ternary><condition><expr><name pos:line="58" pos:column="19">am_server<pos:position pos:line="58" pos:column="28"/></name></expr>?<pos:position pos:line="58" pos:column="29"/></condition><then><expr><name pos:line="58" pos:column="29">stderr<pos:position pos:line="58" pos:column="35"/></name></expr></then><else pos:line="58" pos:column="35">:<expr><name pos:line="58" pos:column="36">stdout<pos:position pos:line="58" pos:column="42"/></name></expr></else></ternary></expr></argument>,<argument><expr><literal type="string" pos:line="58" pos:column="43">"%s\n"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>,<argument><expr><name pos:line="58" pos:column="50">fname<pos:position pos:line="58" pos:column="55"/></name></expr></argument>)<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt></block></then></if>
      }<pos:position pos:line="59" pos:column="8"/></block></else></if>
    }<pos:position pos:line="60" pos:column="6"/></block></then> <else pos:line="60" pos:column="7">else <block pos:line="60" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="61" pos:column="7">set_perms<pos:position pos:line="61" pos:column="16"/></name><argument_list pos:line="61" pos:column="16">(<argument><expr><name pos:line="61" pos:column="17">fname<pos:position pos:line="61" pos:column="22"/></name></expr></argument>,<argument><expr><operator pos:line="61" pos:column="23">&amp;<pos:position pos:line="61" pos:column="28"/></operator><name><name pos:line="61" pos:column="24">flist<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">files<pos:position pos:line="61" pos:column="36"/></name><index pos:line="61" pos:column="36">[<expr><name pos:line="61" pos:column="37">i<pos:position pos:line="61" pos:column="38"/></name></expr>]<pos:position pos:line="61" pos:column="39"/></index></name></expr></argument>,<argument><expr><operator pos:line="61" pos:column="40">&amp;<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="41">st<pos:position pos:line="61" pos:column="43"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="61" pos:column="44">1<pos:position pos:line="61" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></else></if>
    <return pos:line="63" pos:column="5">return;<pos:position pos:line="63" pos:column="12"/></return>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="67" pos:column="3">if <condition pos:line="67" pos:column="6">(<expr><operator pos:line="67" pos:column="7">!<pos:position pos:line="67" pos:column="8"/></operator><call><name pos:line="67" pos:column="8">S_ISREG<pos:position pos:line="67" pos:column="15"/></name><argument_list pos:line="67" pos:column="15">(<argument><expr><name><name pos:line="67" pos:column="16">flist<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">files<pos:position pos:line="67" pos:column="28"/></name><index pos:line="67" pos:column="28">[<expr><name pos:line="67" pos:column="29">i<pos:position pos:line="67" pos:column="30"/></name></expr>]<pos:position pos:line="67" pos:column="31"/></index></name><operator pos:line="67" pos:column="31">.<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="32">mode<pos:position pos:line="67" pos:column="36"/></name></expr></argument>)<pos:position pos:line="67" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="67" pos:column="38"/></condition><then pos:line="67" pos:column="38"> <block pos:line="67" pos:column="39">{
    <expr_stmt><expr><call><name pos:line="68" pos:column="5">fprintf<pos:position pos:line="68" pos:column="12"/></name><argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">stderr<pos:position pos:line="68" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="68" pos:column="20">"skipping non-regular file %s\n"<pos:position pos:line="68" pos:column="52"/></literal></expr></argument>,<argument><expr><name pos:line="68" pos:column="53">fname<pos:position pos:line="68" pos:column="58"/></name></expr></argument>)<pos:position pos:line="68" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="60"/></expr_stmt>
    <return pos:line="69" pos:column="5">return;<pos:position pos:line="69" pos:column="12"/></return>
  }<pos:position pos:line="70" pos:column="4"/></block></then></if>

  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name pos:line="72" pos:column="7">statret<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">==<pos:position pos:line="72" pos:column="17"/></operator> <operator pos:line="72" pos:column="18">-<pos:position pos:line="72" pos:column="19"/></operator><literal type="number" pos:line="72" pos:column="19">1<pos:position pos:line="72" pos:column="20"/></literal></expr>)<pos:position pos:line="72" pos:column="21"/></condition><then pos:line="72" pos:column="21"> <block pos:line="72" pos:column="22">{
    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">errno<pos:position pos:line="73" pos:column="14"/></name> <operator pos:line="73" pos:column="15">==<pos:position pos:line="73" pos:column="17"/></operator> <name pos:line="73" pos:column="18">ENOENT<pos:position pos:line="73" pos:column="24"/></name></expr>)<pos:position pos:line="73" pos:column="25"/></condition><then pos:line="73" pos:column="25"> <block pos:line="73" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">write_int<pos:position pos:line="74" pos:column="16"/></name><argument_list pos:line="74" pos:column="16">(<argument><expr><name pos:line="74" pos:column="17">f_out<pos:position pos:line="74" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="74" pos:column="23">i<pos:position pos:line="74" pos:column="24"/></name></expr></argument>)<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>
      <if pos:line="75" pos:column="7">if <condition pos:line="75" pos:column="10">(<expr><operator pos:line="75" pos:column="11">!<pos:position pos:line="75" pos:column="12"/></operator><name pos:line="75" pos:column="12">dry_run<pos:position pos:line="75" pos:column="19"/></name></expr>)<pos:position pos:line="75" pos:column="20"/></condition><then pos:line="75" pos:column="20"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="21">send_sums<pos:position pos:line="75" pos:column="30"/></name><argument_list pos:line="75" pos:column="30">(<argument><expr><name pos:line="75" pos:column="31">NULL<pos:position pos:line="75" pos:column="35"/></name></expr></argument>,<argument><expr><name pos:line="75" pos:column="36">f_out<pos:position pos:line="75" pos:column="41"/></name></expr></argument>)<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="43"/></expr_stmt></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then> <else pos:line="76" pos:column="7">else <block pos:line="76" pos:column="12">{
      <if pos:line="77" pos:column="7">if <condition pos:line="77" pos:column="10">(<expr><name pos:line="77" pos:column="11">verbose<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">&gt;<pos:position pos:line="77" pos:column="23"/></operator> <literal type="number" pos:line="77" pos:column="21">1<pos:position pos:line="77" pos:column="22"/></literal></expr>)<pos:position pos:line="77" pos:column="23"/></condition><then pos:line="77" pos:column="23">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="9">fprintf<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">(<argument><expr><name pos:line="78" pos:column="17">stderr<pos:position pos:line="78" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="78" pos:column="24">"recv_generator failed to open %s\n"<pos:position pos:line="78" pos:column="60"/></literal></expr></argument>,<argument><expr><name pos:line="78" pos:column="61">fname<pos:position pos:line="78" pos:column="66"/></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="68"/></expr_stmt></block></then></if>
    }<pos:position pos:line="79" pos:column="6"/></block></else></if>
    <return pos:line="80" pos:column="5">return;<pos:position pos:line="80" pos:column="12"/></return>
  }<pos:position pos:line="81" pos:column="4"/></block></then></if>

  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><operator pos:line="83" pos:column="7">!<pos:position pos:line="83" pos:column="8"/></operator><call><name pos:line="83" pos:column="8">S_ISREG<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name><name pos:line="83" pos:column="16">st<pos:position pos:line="83" pos:column="18"/></name><operator pos:line="83" pos:column="18">.<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="19">st_mode<pos:position pos:line="83" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="28"/></condition><then pos:line="83" pos:column="28"> <block pos:line="83" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">fprintf<pos:position pos:line="84" pos:column="12"/></name><argument_list pos:line="84" pos:column="12">(<argument><expr><name pos:line="84" pos:column="13">stderr<pos:position pos:line="84" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="84" pos:column="20">"%s : not a regular file\n"<pos:position pos:line="84" pos:column="47"/></literal></expr></argument>,<argument><expr><name pos:line="84" pos:column="48">fname<pos:position pos:line="84" pos:column="53"/></name></expr></argument>)<pos:position pos:line="84" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="55"/></expr_stmt>
    <return pos:line="85" pos:column="5">return;<pos:position pos:line="85" pos:column="12"/></return>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>

  <if pos:line="88" pos:column="3">if <condition pos:line="88" pos:column="6">(<expr><name pos:line="88" pos:column="7">update_only<pos:position pos:line="88" pos:column="18"/></name> <operator pos:line="88" pos:column="19">&amp;&amp;<pos:position pos:line="88" pos:column="29"/></operator> <name><name pos:line="88" pos:column="22">st<pos:position pos:line="88" pos:column="24"/></name><operator pos:line="88" pos:column="24">.<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="25">st_mtime<pos:position pos:line="88" pos:column="33"/></name></name> <operator pos:line="88" pos:column="34">&gt;=<pos:position pos:line="88" pos:column="39"/></operator> <name><name pos:line="88" pos:column="37">flist<pos:position pos:line="88" pos:column="42"/></name><operator pos:line="88" pos:column="42">-&gt;<pos:position pos:line="88" pos:column="47"/></operator><name pos:line="88" pos:column="44">files<pos:position pos:line="88" pos:column="49"/></name><index pos:line="88" pos:column="49">[<expr><name pos:line="88" pos:column="50">i<pos:position pos:line="88" pos:column="51"/></name></expr>]<pos:position pos:line="88" pos:column="52"/></index></name><operator pos:line="88" pos:column="52">.<pos:position pos:line="88" pos:column="53"/></operator><name pos:line="88" pos:column="53">modtime<pos:position pos:line="88" pos:column="60"/></name></expr>)<pos:position pos:line="88" pos:column="61"/></condition><then pos:line="88" pos:column="61"> <block pos:line="88" pos:column="62">{
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">verbose<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">&gt;<pos:position pos:line="89" pos:column="21"/></operator> <literal type="number" pos:line="89" pos:column="19">1<pos:position pos:line="89" pos:column="20"/></literal></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="7">fprintf<pos:position pos:line="90" pos:column="14"/></name><argument_list pos:line="90" pos:column="14">(<argument><expr><name pos:line="90" pos:column="15">stderr<pos:position pos:line="90" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="90" pos:column="22">"%s is newer\n"<pos:position pos:line="90" pos:column="37"/></literal></expr></argument>,<argument><expr><name pos:line="90" pos:column="38">fname<pos:position pos:line="90" pos:column="43"/></name></expr></argument>)<pos:position pos:line="90" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="45"/></expr_stmt></block></then></if>
    <return pos:line="91" pos:column="5">return;<pos:position pos:line="91" pos:column="12"/></return>
  }<pos:position pos:line="92" pos:column="4"/></block></then></if>

  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><name pos:line="94" pos:column="7">always_checksum<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">&amp;&amp;<pos:position pos:line="94" pos:column="33"/></operator> <call><name pos:line="94" pos:column="26">S_ISREG<pos:position pos:line="94" pos:column="33"/></name><argument_list pos:line="94" pos:column="33">(<argument><expr><name><name pos:line="94" pos:column="34">st<pos:position pos:line="94" pos:column="36"/></name><operator pos:line="94" pos:column="36">.<pos:position pos:line="94" pos:column="37"/></operator><name pos:line="94" pos:column="37">st_mode<pos:position pos:line="94" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="46"/></condition><then pos:line="94" pos:column="46"> <block pos:line="94" pos:column="47">{
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">file_checksum<pos:position pos:line="95" pos:column="18"/></name><argument_list pos:line="95" pos:column="18">(<argument><expr><name pos:line="95" pos:column="19">fname<pos:position pos:line="95" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="95" pos:column="25">sum<pos:position pos:line="95" pos:column="28"/></name></expr></argument>,<argument><expr><name><name pos:line="95" pos:column="29">st<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">.<pos:position pos:line="95" pos:column="32"/></operator><name pos:line="95" pos:column="32">st_size<pos:position pos:line="95" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if>

  <if pos:line="98" pos:column="3">if <condition pos:line="98" pos:column="6">(<expr><name><name pos:line="98" pos:column="7">st<pos:position pos:line="98" pos:column="9"/></name><operator pos:line="98" pos:column="9">.<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">st_size<pos:position pos:line="98" pos:column="17"/></name></name> <operator pos:line="98" pos:column="18">==<pos:position pos:line="98" pos:column="20"/></operator> <name><name pos:line="98" pos:column="21">flist<pos:position pos:line="98" pos:column="26"/></name><operator pos:line="98" pos:column="26">-&gt;<pos:position pos:line="98" pos:column="31"/></operator><name pos:line="98" pos:column="28">files<pos:position pos:line="98" pos:column="33"/></name><index pos:line="98" pos:column="33">[<expr><name pos:line="98" pos:column="34">i<pos:position pos:line="98" pos:column="35"/></name></expr>]<pos:position pos:line="98" pos:column="36"/></index></name><operator pos:line="98" pos:column="36">.<pos:position pos:line="98" pos:column="37"/></operator><name pos:line="98" pos:column="37">length<pos:position pos:line="98" pos:column="43"/></name> <operator pos:line="98" pos:column="44">&amp;&amp;<pos:position pos:line="98" pos:column="54"/></operator>
      <operator pos:line="99" pos:column="7">(<pos:position pos:line="99" pos:column="8"/></operator><operator pos:line="99" pos:column="8">(<pos:position pos:line="99" pos:column="9"/></operator><operator pos:line="99" pos:column="9">!<pos:position pos:line="99" pos:column="10"/></operator><name pos:line="99" pos:column="10">ignore_times<pos:position pos:line="99" pos:column="22"/></name> <operator pos:line="99" pos:column="23">&amp;&amp;<pos:position pos:line="99" pos:column="33"/></operator> <name><name pos:line="99" pos:column="26">st<pos:position pos:line="99" pos:column="28"/></name><operator pos:line="99" pos:column="28">.<pos:position pos:line="99" pos:column="29"/></operator><name pos:line="99" pos:column="29">st_mtime<pos:position pos:line="99" pos:column="37"/></name></name> <operator pos:line="99" pos:column="38">==<pos:position pos:line="99" pos:column="40"/></operator> <name><name pos:line="99" pos:column="41">flist<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">-&gt;<pos:position pos:line="99" pos:column="51"/></operator><name pos:line="99" pos:column="48">files<pos:position pos:line="99" pos:column="53"/></name><index pos:line="99" pos:column="53">[<expr><name pos:line="99" pos:column="54">i<pos:position pos:line="99" pos:column="55"/></name></expr>]<pos:position pos:line="99" pos:column="56"/></index></name><operator pos:line="99" pos:column="56">.<pos:position pos:line="99" pos:column="57"/></operator><name pos:line="99" pos:column="57">modtime<pos:position pos:line="99" pos:column="64"/></name><operator pos:line="99" pos:column="64">)<pos:position pos:line="99" pos:column="65"/></operator> <operator pos:line="99" pos:column="66">||<pos:position pos:line="99" pos:column="68"/></operator>
       <operator pos:line="100" pos:column="8">(<pos:position pos:line="100" pos:column="9"/></operator><name pos:line="100" pos:column="9">always_checksum<pos:position pos:line="100" pos:column="24"/></name> <operator pos:line="100" pos:column="25">&amp;&amp;<pos:position pos:line="100" pos:column="35"/></operator> <call><name pos:line="100" pos:column="28">S_ISREG<pos:position pos:line="100" pos:column="35"/></name><argument_list pos:line="100" pos:column="35">(<argument><expr><name><name pos:line="100" pos:column="36">st<pos:position pos:line="100" pos:column="38"/></name><operator pos:line="100" pos:column="38">.<pos:position pos:line="100" pos:column="39"/></operator><name pos:line="100" pos:column="39">st_mode<pos:position pos:line="100" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="47"/></argument_list></call> <operator pos:line="100" pos:column="48">&amp;&amp;<pos:position pos:line="100" pos:column="58"/></operator> 	  
	<call><name pos:line="101" pos:column="9">memcmp<pos:position pos:line="101" pos:column="15"/></name><argument_list pos:line="101" pos:column="15">(<argument><expr><name pos:line="101" pos:column="16">sum<pos:position pos:line="101" pos:column="19"/></name></expr></argument>,<argument><expr><name><name pos:line="101" pos:column="20">flist<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">-&gt;<pos:position pos:line="101" pos:column="30"/></operator><name pos:line="101" pos:column="27">files<pos:position pos:line="101" pos:column="32"/></name><index pos:line="101" pos:column="32">[<expr><name pos:line="101" pos:column="33">i<pos:position pos:line="101" pos:column="34"/></name></expr>]<pos:position pos:line="101" pos:column="35"/></index></name><operator pos:line="101" pos:column="35">.<pos:position pos:line="101" pos:column="36"/></operator><name pos:line="101" pos:column="36">sum<pos:position pos:line="101" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="101" pos:column="40">csum_length<pos:position pos:line="101" pos:column="51"/></name></expr></argument>)<pos:position pos:line="101" pos:column="52"/></argument_list></call> <operator pos:line="101" pos:column="53">==<pos:position pos:line="101" pos:column="55"/></operator> <literal type="number" pos:line="101" pos:column="56">0<pos:position pos:line="101" pos:column="57"/></literal><operator pos:line="101" pos:column="57">)<pos:position pos:line="101" pos:column="58"/></operator><operator pos:line="101" pos:column="58">)<pos:position pos:line="101" pos:column="59"/></operator></expr>)<pos:position pos:line="101" pos:column="60"/></condition><then pos:line="101" pos:column="60"> <block pos:line="101" pos:column="61">{
    <expr_stmt><expr><call><name pos:line="102" pos:column="5">set_perms<pos:position pos:line="102" pos:column="14"/></name><argument_list pos:line="102" pos:column="14">(<argument><expr><name pos:line="102" pos:column="15">fname<pos:position pos:line="102" pos:column="20"/></name></expr></argument>,<argument><expr><operator pos:line="102" pos:column="21">&amp;<pos:position pos:line="102" pos:column="26"/></operator><name><name pos:line="102" pos:column="22">flist<pos:position pos:line="102" pos:column="27"/></name><operator pos:line="102" pos:column="27">-&gt;<pos:position pos:line="102" pos:column="32"/></operator><name pos:line="102" pos:column="29">files<pos:position pos:line="102" pos:column="34"/></name><index pos:line="102" pos:column="34">[<expr><name pos:line="102" pos:column="35">i<pos:position pos:line="102" pos:column="36"/></name></expr>]<pos:position pos:line="102" pos:column="37"/></index></name></expr></argument>,<argument><expr><operator pos:line="102" pos:column="38">&amp;<pos:position pos:line="102" pos:column="43"/></operator><name pos:line="102" pos:column="39">st<pos:position pos:line="102" pos:column="41"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="102" pos:column="42">1<pos:position pos:line="102" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="45"/></expr_stmt>
    <return pos:line="103" pos:column="5">return;<pos:position pos:line="103" pos:column="12"/></return>
  }<pos:position pos:line="104" pos:column="4"/></block></then></if>

  <if pos:line="106" pos:column="3">if <condition pos:line="106" pos:column="6">(<expr><name pos:line="106" pos:column="7">dry_run<pos:position pos:line="106" pos:column="14"/></name></expr>)<pos:position pos:line="106" pos:column="15"/></condition><then pos:line="106" pos:column="15"> <block pos:line="106" pos:column="16">{
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">write_int<pos:position pos:line="107" pos:column="14"/></name><argument_list pos:line="107" pos:column="14">(<argument><expr><name pos:line="107" pos:column="15">f_out<pos:position pos:line="107" pos:column="20"/></name></expr></argument>,<argument><expr><name pos:line="107" pos:column="21">i<pos:position pos:line="107" pos:column="22"/></name></expr></argument>)<pos:position pos:line="107" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="24"/></expr_stmt>
    <return pos:line="108" pos:column="5">return;<pos:position pos:line="108" pos:column="12"/></return>
  }<pos:position pos:line="109" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="111" pos:column="3">/* open the file */</comment>  
  <expr_stmt><expr><name pos:line="112" pos:column="3">fd<pos:position pos:line="112" pos:column="5"/></name> <operator pos:line="112" pos:column="6">=<pos:position pos:line="112" pos:column="7"/></operator> <call><name pos:line="112" pos:column="8">open<pos:position pos:line="112" pos:column="12"/></name><argument_list pos:line="112" pos:column="12">(<argument><expr><name pos:line="112" pos:column="13">fname<pos:position pos:line="112" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="112" pos:column="19">O_RDONLY<pos:position pos:line="112" pos:column="27"/></name></expr></argument>)<pos:position pos:line="112" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="29"/></expr_stmt>

  <if pos:line="114" pos:column="3">if <condition pos:line="114" pos:column="6">(<expr><name pos:line="114" pos:column="7">fd<pos:position pos:line="114" pos:column="9"/></name> <operator pos:line="114" pos:column="10">==<pos:position pos:line="114" pos:column="12"/></operator> <operator pos:line="114" pos:column="13">-<pos:position pos:line="114" pos:column="14"/></operator><literal type="number" pos:line="114" pos:column="14">1<pos:position pos:line="114" pos:column="15"/></literal></expr>)<pos:position pos:line="114" pos:column="16"/></condition><then pos:line="114" pos:column="16"> <block pos:line="114" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">fprintf<pos:position pos:line="115" pos:column="12"/></name><argument_list pos:line="115" pos:column="12">(<argument><expr><name pos:line="115" pos:column="13">stderr<pos:position pos:line="115" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="115" pos:column="20">"failed to open %s : %s\n"<pos:position pos:line="115" pos:column="46"/></literal></expr></argument>,<argument><expr><name pos:line="115" pos:column="47">fname<pos:position pos:line="115" pos:column="52"/></name></expr></argument>,<argument><expr><call><name pos:line="115" pos:column="53">strerror<pos:position pos:line="115" pos:column="61"/></name><argument_list pos:line="115" pos:column="61">(<argument><expr><name pos:line="115" pos:column="62">errno<pos:position pos:line="115" pos:column="67"/></name></expr></argument>)<pos:position pos:line="115" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="70"/></expr_stmt>
    <return pos:line="116" pos:column="5">return;<pos:position pos:line="116" pos:column="12"/></return>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <if pos:line="119" pos:column="3">if <condition pos:line="119" pos:column="6">(<expr><name><name pos:line="119" pos:column="7">st<pos:position pos:line="119" pos:column="9"/></name><operator pos:line="119" pos:column="9">.<pos:position pos:line="119" pos:column="10"/></operator><name pos:line="119" pos:column="10">st_size<pos:position pos:line="119" pos:column="17"/></name></name> <operator pos:line="119" pos:column="18">&gt;<pos:position pos:line="119" pos:column="22"/></operator> <literal type="number" pos:line="119" pos:column="20">0<pos:position pos:line="119" pos:column="21"/></literal></expr>)<pos:position pos:line="119" pos:column="22"/></condition><then pos:line="119" pos:column="22"> <block pos:line="119" pos:column="23">{
    <expr_stmt><expr><name pos:line="120" pos:column="5">buf<pos:position pos:line="120" pos:column="8"/></name> <operator pos:line="120" pos:column="9">=<pos:position pos:line="120" pos:column="10"/></operator> <call><name pos:line="120" pos:column="11">map_file<pos:position pos:line="120" pos:column="19"/></name><argument_list pos:line="120" pos:column="19">(<argument><expr><name pos:line="120" pos:column="20">fd<pos:position pos:line="120" pos:column="22"/></name></expr></argument>,<argument><expr><name><name pos:line="120" pos:column="23">st<pos:position pos:line="120" pos:column="25"/></name><operator pos:line="120" pos:column="25">.<pos:position pos:line="120" pos:column="26"/></operator><name pos:line="120" pos:column="26">st_size<pos:position pos:line="120" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="121" pos:column="4"/></block></then> <else pos:line="121" pos:column="5">else <block pos:line="121" pos:column="10">{
    <expr_stmt><expr><name pos:line="122" pos:column="5">buf<pos:position pos:line="122" pos:column="8"/></name> <operator pos:line="122" pos:column="9">=<pos:position pos:line="122" pos:column="10"/></operator> <name pos:line="122" pos:column="11">NULL<pos:position pos:line="122" pos:column="15"/></name></expr>;<pos:position pos:line="122" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="123" pos:column="4"/></block></else></if>

  <if pos:line="125" pos:column="3">if <condition pos:line="125" pos:column="6">(<expr><name pos:line="125" pos:column="7">verbose<pos:position pos:line="125" pos:column="14"/></name> <operator pos:line="125" pos:column="15">&gt;<pos:position pos:line="125" pos:column="19"/></operator> <literal type="number" pos:line="125" pos:column="17">3<pos:position pos:line="125" pos:column="18"/></literal></expr>)<pos:position pos:line="125" pos:column="19"/></condition><then pos:line="125" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="5">fprintf<pos:position pos:line="126" pos:column="12"/></name><argument_list pos:line="126" pos:column="12">(<argument><expr><name pos:line="126" pos:column="13">stderr<pos:position pos:line="126" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="126" pos:column="20">"mapped %s of size %d\n"<pos:position pos:line="126" pos:column="44"/></literal></expr></argument>,<argument><expr><name pos:line="126" pos:column="45">fname<pos:position pos:line="126" pos:column="50"/></name></expr></argument>,<argument><expr><operator pos:line="126" pos:column="51">(<pos:position pos:line="126" pos:column="52"/></operator><name pos:line="126" pos:column="52">int<pos:position pos:line="126" pos:column="55"/></name><operator pos:line="126" pos:column="55">)<pos:position pos:line="126" pos:column="56"/></operator><name><name pos:line="126" pos:column="56">st<pos:position pos:line="126" pos:column="58"/></name><operator pos:line="126" pos:column="58">.<pos:position pos:line="126" pos:column="59"/></operator><name pos:line="126" pos:column="59">st_size<pos:position pos:line="126" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="68"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="128" pos:column="3">s<pos:position pos:line="128" pos:column="4"/></name> <operator pos:line="128" pos:column="5">=<pos:position pos:line="128" pos:column="6"/></operator> <call><name pos:line="128" pos:column="7">generate_sums<pos:position pos:line="128" pos:column="20"/></name><argument_list pos:line="128" pos:column="20">(<argument><expr><name pos:line="128" pos:column="21">buf<pos:position pos:line="128" pos:column="24"/></name></expr></argument>,<argument><expr><name><name pos:line="128" pos:column="25">st<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">.<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="28">st_size<pos:position pos:line="128" pos:column="35"/></name></name></expr></argument>,<argument><expr><name pos:line="128" pos:column="36">block_size<pos:position pos:line="128" pos:column="46"/></name></expr></argument>)<pos:position pos:line="128" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="130" pos:column="3">write_int<pos:position pos:line="130" pos:column="12"/></name><argument_list pos:line="130" pos:column="12">(<argument><expr><name pos:line="130" pos:column="13">f_out<pos:position pos:line="130" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="130" pos:column="19">i<pos:position pos:line="130" pos:column="20"/></name></expr></argument>)<pos:position pos:line="130" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="131" pos:column="3">send_sums<pos:position pos:line="131" pos:column="12"/></name><argument_list pos:line="131" pos:column="12">(<argument><expr><name pos:line="131" pos:column="13">s<pos:position pos:line="131" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="131" pos:column="15">f_out<pos:position pos:line="131" pos:column="20"/></name></expr></argument>)<pos:position pos:line="131" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="132" pos:column="3">write_flush<pos:position pos:line="132" pos:column="14"/></name><argument_list pos:line="132" pos:column="14">(<argument><expr><name pos:line="132" pos:column="15">f_out<pos:position pos:line="132" pos:column="20"/></name></expr></argument>)<pos:position pos:line="132" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="134" pos:column="3">close<pos:position pos:line="134" pos:column="8"/></name><argument_list pos:line="134" pos:column="8">(<argument><expr><name pos:line="134" pos:column="9">fd<pos:position pos:line="134" pos:column="11"/></name></expr></argument>)<pos:position pos:line="134" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="135" pos:column="3">unmap_file<pos:position pos:line="135" pos:column="13"/></name><argument_list pos:line="135" pos:column="13">(<argument><expr><name pos:line="135" pos:column="14">buf<pos:position pos:line="135" pos:column="17"/></name></expr></argument>,<argument><expr><name><name pos:line="135" pos:column="18">st<pos:position pos:line="135" pos:column="20"/></name><operator pos:line="135" pos:column="20">.<pos:position pos:line="135" pos:column="21"/></operator><name pos:line="135" pos:column="21">st_size<pos:position pos:line="135" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="137" pos:column="3">free_sums<pos:position pos:line="137" pos:column="12"/></name><argument_list pos:line="137" pos:column="12">(<argument><expr><name pos:line="137" pos:column="13">s<pos:position pos:line="137" pos:column="14"/></name></expr></argument>)<pos:position pos:line="137" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="16"/></expr_stmt>
}<pos:position pos:line="138" pos:column="2"/></block></function></unit>

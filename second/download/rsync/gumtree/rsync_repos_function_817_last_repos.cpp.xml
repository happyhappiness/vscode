<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_817_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SMB_ACL_T<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">sys_acl_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">( <parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">count<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">acl_entry_link<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">*<pos:position pos:line="3" pos:column="32"/></modifier></type><name pos:line="3" pos:column="32">theacl<pos:position pos:line="3" pos:column="38"/></name> <init pos:line="3" pos:column="39">= <expr><name pos:line="3" pos:column="41">NULL<pos:position pos:line="3" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
 
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">count<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">&lt;<pos:position pos:line="5" pos:column="23"/></operator> <literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23"> <block pos:line="5" pos:column="24">{
		<expr_stmt><expr><name pos:line="6" pos:column="17">errno<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">EINVAL<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><name pos:line="7" pos:column="24">NULL<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">DEBUG<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><literal type="number" pos:line="10" pos:column="15">10<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="10" pos:column="18">(<pos:position pos:line="10" pos:column="19"/></operator><literal type="string" pos:line="10" pos:column="19">"Entering sys_acl_init\n"<pos:position pos:line="10" pos:column="44"/></literal><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">theacl<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">SMB_MALLOC_P<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr pos:line="12" pos:column="31">struct <name pos:line="12" pos:column="38">acl_entry_link<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>
	<if pos:line="13" pos:column="9">if<condition pos:line="13" pos:column="11">(<expr><name pos:line="13" pos:column="12">theacl<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">NULL<pos:position pos:line="13" pos:column="26"/></name></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">errno<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">ENOMEM<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">DEBUG<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><literal type="number" pos:line="15" pos:column="23">0<pos:position pos:line="15" pos:column="24"/></literal></expr></argument>,<argument><expr><operator pos:line="15" pos:column="25">(<pos:position pos:line="15" pos:column="26"/></operator><literal type="string" pos:line="15" pos:column="26">"Error in sys_acl_init is %d\n"<pos:position pos:line="15" pos:column="57"/></literal><operator pos:line="15" pos:column="57">,<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">errno<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
		<return pos:line="16" pos:column="17">return<expr><operator pos:line="16" pos:column="23">(<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">)<pos:position pos:line="16" pos:column="29"/></operator></expr>;<pos:position pos:line="16" pos:column="30"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="19" pos:column="9">theacl<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">count<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="20" pos:column="9">theacl<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">nextp<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">NULL<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">theacl<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">prevp<pos:position pos:line="21" pos:column="22"/></name></name> <operator pos:line="21" pos:column="23">=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">theacl<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">entryp<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="26">NULL<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">DEBUG<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><literal type="number" pos:line="23" pos:column="15">10<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>,<argument><expr><operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><literal type="string" pos:line="23" pos:column="19">"Exiting sys_acl_init\n"<pos:position pos:line="23" pos:column="43"/></literal><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
	<return pos:line="24" pos:column="9">return<expr><operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">theacl<pos:position pos:line="24" pos:column="22"/></name><operator pos:line="24" pos:column="22">)<pos:position pos:line="24" pos:column="23"/></operator></expr>;<pos:position pos:line="24" pos:column="24"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_200_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">match_hostname<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier><modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">host_ptr<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier> <name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">addr<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="68">const<pos:position pos:line="1" pos:column="73"/></specifier> <name pos:line="1" pos:column="74">char<pos:position pos:line="1" pos:column="78"/></name> <modifier pos:line="1" pos:column="79">*<pos:position pos:line="1" pos:column="80"/></modifier></type><name pos:line="1" pos:column="80">tok<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">hostent<pos:position pos:line="3" pos:column="23"/></name></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">hp<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">host<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">host_ptr<pos:position pos:line="5" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">host<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">||<pos:position pos:line="7" pos:column="21"/></operator> <operator pos:line="7" pos:column="22">!<pos:position pos:line="7" pos:column="23"/></operator><operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">host<pos:position pos:line="7" pos:column="28"/></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="10" pos:column="9">/* First check if the reverse-DNS-determined hostname matches. */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">iwildmatch<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">tok<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="29">host<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr>;<pos:position pos:line="12" pos:column="26"/></return></block></then></if>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">allow_forward_dns<pos:position pos:line="14" pos:column="31"/></name></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32">
		<block type="pseudo"><return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* Fail quietly if tok is an address or wildcarded entry, not a simple hostname. */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name><name pos:line="18" pos:column="14">tok<pos:position pos:line="18" pos:column="17"/></name><index pos:line="18" pos:column="17">[<expr><call><name pos:line="18" pos:column="18">strspn<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">tok<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="30">".0123456789"<pos:position pos:line="18" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>]<pos:position pos:line="18" pos:column="45"/></index></name> <operator pos:line="18" pos:column="46">||<pos:position pos:line="18" pos:column="48"/></operator> <name><name pos:line="18" pos:column="49">tok<pos:position pos:line="18" pos:column="52"/></name><index pos:line="18" pos:column="52">[<expr><call><name pos:line="18" pos:column="53">strcspn<pos:position pos:line="18" pos:column="60"/></name><argument_list pos:line="18" pos:column="60">(<argument><expr><name pos:line="18" pos:column="61">tok<pos:position pos:line="18" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="66">":/*?["<pos:position pos:line="18" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>]<pos:position pos:line="18" pos:column="75"/></index></name></expr>)<pos:position pos:line="18" pos:column="76"/></condition><then pos:line="18" pos:column="76">
		<block type="pseudo"><return pos:line="19" pos:column="17">return <expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></return></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* Now try forward-DNS on the token (config-specified hostname) and see if the IP matches. */</comment>
	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">hp<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">gethostbyname<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">tok<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator></expr>)<pos:position pos:line="22" pos:column="40"/></condition><then pos:line="22" pos:column="40">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></return></block></then></if>

	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><expr><name pos:line="25" pos:column="14">i<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>;<pos:position pos:line="25" pos:column="20"/></init> <condition><expr><name><name pos:line="25" pos:column="21">hp<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">h_addr_list<pos:position pos:line="25" pos:column="36"/></name><index pos:line="25" pos:column="36">[<expr><name pos:line="25" pos:column="37">i<pos:position pos:line="25" pos:column="38"/></name></expr>]<pos:position pos:line="25" pos:column="39"/></index></name> <operator pos:line="25" pos:column="40">!=<pos:position pos:line="25" pos:column="42"/></operator> <name pos:line="25" pos:column="43">NULL<pos:position pos:line="25" pos:column="47"/></name></expr>;<pos:position pos:line="25" pos:column="48"/></condition> <incr><expr><name pos:line="25" pos:column="49">i<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">++<pos:position pos:line="25" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="25" pos:column="53"/></control> <block pos:line="25" pos:column="54">{
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">strcmp<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">addr<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="34">inet_ntoa<pos:position pos:line="26" pos:column="43"/></name><argument_list pos:line="26" pos:column="43">(<argument><expr><operator pos:line="26" pos:column="44">*<pos:position pos:line="26" pos:column="45"/></operator><operator pos:line="26" pos:column="45">(<pos:position pos:line="26" pos:column="46"/></operator>struct <name pos:line="26" pos:column="53">in_addr<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">*<pos:position pos:line="26" pos:column="61"/></operator><operator pos:line="26" pos:column="61">)<pos:position pos:line="26" pos:column="62"/></operator><operator pos:line="26" pos:column="62">(<pos:position pos:line="26" pos:column="63"/></operator><name><name pos:line="26" pos:column="63">hp<pos:position pos:line="26" pos:column="65"/></name><operator pos:line="26" pos:column="65">-&gt;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="67">h_addr_list<pos:position pos:line="26" pos:column="78"/></name><index pos:line="26" pos:column="78">[<expr><name pos:line="26" pos:column="79">i<pos:position pos:line="26" pos:column="80"/></name></expr>]<pos:position pos:line="26" pos:column="81"/></index></name><operator pos:line="26" pos:column="81">)<pos:position pos:line="26" pos:column="82"/></operator></expr></argument>)<pos:position pos:line="26" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="84"/></argument_list></call> <operator pos:line="26" pos:column="85">==<pos:position pos:line="26" pos:column="87"/></operator> <literal type="number" pos:line="26" pos:column="88">0<pos:position pos:line="26" pos:column="89"/></literal></expr>)<pos:position pos:line="26" pos:column="90"/></condition><then pos:line="26" pos:column="90"> <block pos:line="26" pos:column="91">{
			<comment type="block" pos:line="27" pos:column="25">/* If reverse lookups are off, we'll use the conf-specified
			 * hostname in preference to UNDETERMINED. */</comment>
			<if pos:line="29" pos:column="25">if <condition pos:line="29" pos:column="28">(<expr><name pos:line="29" pos:column="29">host<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">==<pos:position pos:line="29" pos:column="36"/></operator> <name pos:line="29" pos:column="37">undetermined_hostname<pos:position pos:line="29" pos:column="58"/></name></expr>)<pos:position pos:line="29" pos:column="59"/></condition><then pos:line="29" pos:column="59"> <block pos:line="29" pos:column="60">{
				<if pos:line="30" pos:column="33">if <condition pos:line="30" pos:column="36">(<expr><operator pos:line="30" pos:column="37">!<pos:position pos:line="30" pos:column="38"/></operator><operator pos:line="30" pos:column="38">(<pos:position pos:line="30" pos:column="39"/></operator><operator pos:line="30" pos:column="39">*<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">host_ptr<pos:position pos:line="30" pos:column="48"/></name> <operator pos:line="30" pos:column="49">=<pos:position pos:line="30" pos:column="50"/></operator> <call><name pos:line="30" pos:column="51">strdup<pos:position pos:line="30" pos:column="57"/></name><argument_list pos:line="30" pos:column="57">(<argument><expr><name pos:line="30" pos:column="58">tok<pos:position pos:line="30" pos:column="61"/></name></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call><operator pos:line="30" pos:column="62">)<pos:position pos:line="30" pos:column="63"/></operator></expr>)<pos:position pos:line="30" pos:column="64"/></condition><then pos:line="30" pos:column="64">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="31" pos:column="41">*<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">host_ptr<pos:position pos:line="31" pos:column="50"/></name> <operator pos:line="31" pos:column="51">=<pos:position pos:line="31" pos:column="52"/></operator> <name pos:line="31" pos:column="53">undetermined_hostname<pos:position pos:line="31" pos:column="74"/></name></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt></block></then></if>
			}<pos:position pos:line="32" pos:column="26"/></block></then></if>
			<return pos:line="33" pos:column="25">return <expr><literal type="number" pos:line="33" pos:column="32">1<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></return>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>
	}<pos:position pos:line="35" pos:column="10"/></block></for>

	<return pos:line="37" pos:column="9">return <expr><literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>;<pos:position pos:line="37" pos:column="18"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

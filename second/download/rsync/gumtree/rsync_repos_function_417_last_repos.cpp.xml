<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_417_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">open_tmpfile<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">fnametmp<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">fname<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">file_struct<pos:position pos:line="1" pos:column="71"/></name></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">file<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">fd<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">mode_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">added_perms<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">get_tmpname<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">fnametmp<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">fname<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">False<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">am_root<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&lt;<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25"> <block pos:line="9" pos:column="26">{
		<comment type="block" pos:line="10" pos:column="17">/* For --fake-super, the file must be useable by the copying
		 * user, just like it would be for root. */</comment>
		<expr_stmt><expr><name pos:line="12" pos:column="17">added_perms<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">=<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">S_IRUSR<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">|<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">S_IWUSR<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="13" pos:column="10"/></block></then> <else pos:line="13" pos:column="11">else <block pos:line="13" pos:column="16">{
		<comment type="block" pos:line="14" pos:column="17">/* For a normal copy, we need to be able to tweak things like xattrs. */</comment>
		<expr_stmt><expr><name pos:line="15" pos:column="17">added_perms<pos:position pos:line="15" pos:column="28"/></name> <operator pos:line="15" pos:column="29">=<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="31">S_IWUSR<pos:position pos:line="15" pos:column="38"/></name></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></else></if>

	<comment type="block" pos:line="18" pos:column="9">/* We initially set the perms without the setuid/setgid bits or group
	 * access to ensure that there is no race condition.  They will be
	 * correctly updated after the right owner and group info is set.
	 * (Thanks to snabb@epipe.fi for pointing this out.) */</comment>
	<expr_stmt><expr><name pos:line="22" pos:column="9">fd<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">do_mkstemp<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">fnametmp<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">(<pos:position pos:line="22" pos:column="36"/></operator><name><name pos:line="22" pos:column="36">file<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">mode<pos:position pos:line="22" pos:column="46"/></name></name><operator pos:line="22" pos:column="46">|<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">added_perms<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">)<pos:position pos:line="22" pos:column="59"/></operator> <operator pos:line="22" pos:column="60">&amp;<pos:position pos:line="22" pos:column="65"/></operator> <name pos:line="22" pos:column="62">INITACCESSPERMS<pos:position pos:line="22" pos:column="77"/></name></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt>

<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="24" pos:column="5">0<pos:position pos:line="24" pos:column="6"/></literal></expr></cpp:if>
	<comment type="block" pos:line="25" pos:column="9">/* In most cases parent directories will already exist because their
	 * information should have been previously transferred, but that may
	 * not be the case with -R */</comment>
	if (fd == -1 &amp;&amp; relative_paths &amp;&amp; errno == ENOENT
	 &amp;&amp; make_path(fnametmp, MKP_SKIP_SLASH | MKP_DROP_NAME) == 0) {
		<comment type="block" pos:line="30" pos:column="17">/* Get back to name with XXXXXX in it. */</comment>
		get_tmpname(fnametmp, fname, False);
		fd = do_mkstemp(fnametmp, (file-&gt;mode|added_perms) &amp; INITACCESSPERMS);
	}
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">fd<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">==<pos:position pos:line="36" pos:column="18"/></operator> <operator pos:line="36" pos:column="19">-<pos:position pos:line="36" pos:column="20"/></operator><literal type="number" pos:line="36" pos:column="20">1<pos:position pos:line="36" pos:column="21"/></literal></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">rsyserr<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><name pos:line="37" pos:column="25">FERROR_XFER<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">errno<pos:position pos:line="37" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="45">"mkstemp %s failed"<pos:position pos:line="37" pos:column="64"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="38" pos:column="25">full_fname<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">fnametmp<pos:position pos:line="38" pos:column="44"/></name></expr></argument>)<pos:position pos:line="38" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
		<return pos:line="39" pos:column="17">return <expr><operator pos:line="39" pos:column="24">-<pos:position pos:line="39" pos:column="25"/></operator><literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></return>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">fd<pos:position pos:line="42" pos:column="18"/></name></expr>;<pos:position pos:line="42" pos:column="19"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_101_rsync-1.6.9.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">sum_update<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">p<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">len<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">i<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">len<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">+<pos:position pos:line="4" pos:column="12"/></operator> <name pos:line="4" pos:column="13">sumresidue<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="26">CSUM_CHUNK<pos:position pos:line="4" pos:column="36"/></name></expr>)<pos:position pos:line="4" pos:column="37"/></condition><then pos:line="4" pos:column="37"> <block pos:line="4" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">bcopy<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">p<pos:position pos:line="5" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="13">sumrbuf<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">+<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">sumresidue<pos:position pos:line="5" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="5" pos:column="32">len<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">sumresidue<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">+=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">len<pos:position pos:line="6" pos:column="22"/></name></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
    <return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">sumresidue<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
    <expr_stmt><expr><name pos:line="11" pos:column="5">i<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">MIN<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">CSUM_CHUNK<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">sumresidue<pos:position pos:line="11" pos:column="34"/></name></expr></argument>,<argument><expr><name pos:line="11" pos:column="35">len<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">bcopy<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">p<pos:position pos:line="12" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="13">sumrbuf<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">+<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">sumresidue<pos:position pos:line="12" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="32">i<pos:position pos:line="12" pos:column="33"/></name></expr></argument>)<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">MDupdate<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><operator pos:line="13" pos:column="14">&amp;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="15">sumMD<pos:position pos:line="13" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="22">sumrbuf<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="31">(<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">i<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">sumresidue<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">)<pos:position pos:line="13" pos:column="45"/></operator><operator pos:line="13" pos:column="45">*<pos:position pos:line="13" pos:column="46"/></operator><literal type="number" pos:line="13" pos:column="46">8<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">len<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">-=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">i<pos:position pos:line="14" pos:column="13"/></name></expr>;<pos:position pos:line="14" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">p<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">+=<pos:position pos:line="15" pos:column="9"/></operator> <name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name></expr>;<pos:position pos:line="15" pos:column="12"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <for pos:line="18" pos:column="3">for<control pos:line="18" pos:column="6">(<init><expr><name pos:line="18" pos:column="7">i<pos:position pos:line="18" pos:column="8"/></name> <operator pos:line="18" pos:column="9">=<pos:position pos:line="18" pos:column="10"/></operator> <literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>;<pos:position pos:line="18" pos:column="13"/></init> <condition><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">+<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">CSUM_CHUNK<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">&lt;=<pos:position pos:line="18" pos:column="34"/></operator> <name pos:line="18" pos:column="32">len<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></condition> <incr><expr><name pos:line="18" pos:column="37">i<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">+=<pos:position pos:line="18" pos:column="41"/></operator> <name pos:line="18" pos:column="42">CSUM_CHUNK<pos:position pos:line="18" pos:column="52"/></name></expr></incr>)<pos:position pos:line="18" pos:column="53"/></control> <block pos:line="18" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">bcopy<pos:position pos:line="19" pos:column="10"/></name><argument_list pos:line="19" pos:column="10">(<argument><expr><name pos:line="19" pos:column="11">p<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">+<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">i<pos:position pos:line="19" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="15">sumrbuf<pos:position pos:line="19" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="23">CSUM_CHUNK<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">MDupdate<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><operator pos:line="20" pos:column="14">&amp;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="15">sumMD<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="22">sumrbuf<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="31">CSUM_CHUNK<pos:position pos:line="20" pos:column="41"/></name><operator pos:line="20" pos:column="41">*<pos:position pos:line="20" pos:column="42"/></operator><literal type="number" pos:line="20" pos:column="42">8<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></for>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name pos:line="23" pos:column="7">len<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">-<pos:position pos:line="23" pos:column="12"/></operator> <name pos:line="23" pos:column="13">i<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">&gt;<pos:position pos:line="23" pos:column="19"/></operator> <literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal></expr>)<pos:position pos:line="23" pos:column="19"/></condition><then pos:line="23" pos:column="19"> <block pos:line="23" pos:column="20">{
    <expr_stmt><expr><name pos:line="24" pos:column="5">sumresidue<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">len<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">bcopy<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><name pos:line="25" pos:column="11">p<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">+<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">i<pos:position pos:line="25" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="25" pos:column="15">sumrbuf<pos:position pos:line="25" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="25" pos:column="23">sumresidue<pos:position pos:line="25" pos:column="33"/></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then> <else pos:line="26" pos:column="5">else <block pos:line="26" pos:column="10">{
    <expr_stmt><expr><name pos:line="27" pos:column="5">sumresidue<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="18">0<pos:position pos:line="27" pos:column="19"/></literal></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>    
  }<pos:position pos:line="28" pos:column="4"/></block></else></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

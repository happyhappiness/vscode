<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_202_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">make_mask<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">char<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">mask<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">plen<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">addrlen<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">w<pos:position pos:line="3" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="16">b<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><name pos:line="5" pos:column="9">w<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <name pos:line="5" pos:column="13">plen<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&gt;&gt;<pos:position pos:line="5" pos:column="23"/></operator> <literal type="number" pos:line="5" pos:column="21">3<pos:position pos:line="5" pos:column="22"/></literal></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="6" pos:column="9">b<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">plen<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">&amp;<pos:position pos:line="6" pos:column="23"/></operator> <literal type="number" pos:line="6" pos:column="20">0x7<pos:position pos:line="6" pos:column="23"/></literal></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">w<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">memset<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">mask<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="30">0xff<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="36">w<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">w<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&lt;<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="17">addrlen<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="17">mask<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><name pos:line="11" pos:column="22">w<pos:position pos:line="11" pos:column="23"/></name></expr>]<pos:position pos:line="11" pos:column="24"/></index></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="27">0xff<pos:position pos:line="11" pos:column="31"/></literal> <operator pos:line="11" pos:column="32">&amp;<pos:position pos:line="11" pos:column="37"/></operator> <operator pos:line="11" pos:column="34">(<pos:position pos:line="11" pos:column="35"/></operator><literal type="number" pos:line="11" pos:column="35">0xff<pos:position pos:line="11" pos:column="39"/></literal><operator pos:line="11" pos:column="39">&lt;&lt;<pos:position pos:line="11" pos:column="47"/></operator><operator pos:line="11" pos:column="41">(<pos:position pos:line="11" pos:column="42"/></operator><literal type="number" pos:line="11" pos:column="42">8<pos:position pos:line="11" pos:column="43"/></literal><operator pos:line="11" pos:column="43">-<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">b<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator><operator pos:line="11" pos:column="46">)<pos:position pos:line="11" pos:column="47"/></operator></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt></block></then></if>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">w<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">+<pos:position pos:line="12" pos:column="15"/></operator><literal type="number" pos:line="12" pos:column="15">1<pos:position pos:line="12" pos:column="16"/></literal> <operator pos:line="12" pos:column="17">&lt;<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="19">addrlen<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">memset<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">mask<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">+<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">w<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">+<pos:position pos:line="13" pos:column="31"/></operator><literal type="number" pos:line="13" pos:column="31">1<pos:position pos:line="13" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="34">0<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">addrlen<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">w<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-<pos:position pos:line="13" pos:column="47"/></operator><literal type="number" pos:line="13" pos:column="47">1<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt></block></then></if>

	<return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

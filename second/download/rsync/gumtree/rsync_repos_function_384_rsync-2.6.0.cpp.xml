<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_384_rsync-2.6.0.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">inflate_blocks_reset<pos:position pos:line="1" pos:column="26"/></name><argument_list pos:line="1" pos:column="26">(<argument><expr><name pos:line="1" pos:column="27">s<pos:position pos:line="1" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="30">z<pos:position pos:line="1" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="33">c<pos:position pos:line="1" pos:column="34"/></name></expr></argument>)<pos:position pos:line="1" pos:column="35"/></argument_list>
<name pos:line="2" pos:column="1">inflate_blocks_statef<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier><name pos:line="2" pos:column="24">s<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">z_streamp<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">z<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">uLongf<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">c<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">c<pos:position pos:line="6" pos:column="8"/></name> <operator pos:line="6" pos:column="9">!=<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">Z_NULL<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="5">*<pos:position pos:line="7" pos:column="6"/></operator><name pos:line="7" pos:column="6">c<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <name><name pos:line="7" pos:column="10">s<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">-&gt;<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="13">check<pos:position pos:line="7" pos:column="18"/></name></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt></block></then></if>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">s<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">mode<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">BTREE<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">||<pos:position pos:line="8" pos:column="26"/></operator> <name><name pos:line="8" pos:column="27">s<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">mode<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">==<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">DTREE<pos:position pos:line="8" pos:column="43"/></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="5">ZFREE<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">z<pos:position pos:line="9" pos:column="12"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="14">s<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">sub<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">trees<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">.<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">blens<pos:position pos:line="9" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt></block></then></if>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">s<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">-&gt;<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="10">mode<pos:position pos:line="10" pos:column="14"/></name></name> <operator pos:line="10" pos:column="15">==<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">CODES<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="5">inflate_codes_free<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">s<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">sub<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">.<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="31">decode<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">.<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">codes<pos:position pos:line="11" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="45">z<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">s<pos:position pos:line="12" pos:column="4"/></name><operator pos:line="12" pos:column="4">-&gt;<pos:position pos:line="12" pos:column="9"/></operator><name pos:line="12" pos:column="6">mode<pos:position pos:line="12" pos:column="10"/></name></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">TYPE<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">s<pos:position pos:line="13" pos:column="4"/></name><operator pos:line="13" pos:column="4">-&gt;<pos:position pos:line="13" pos:column="9"/></operator><name pos:line="13" pos:column="6">bitk<pos:position pos:line="13" pos:column="10"/></name></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">s<pos:position pos:line="14" pos:column="4"/></name><operator pos:line="14" pos:column="4">-&gt;<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="6">bitb<pos:position pos:line="14" pos:column="10"/></name></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">s<pos:position pos:line="15" pos:column="4"/></name><operator pos:line="15" pos:column="4">-&gt;<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="6">read<pos:position pos:line="15" pos:column="10"/></name></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name><name pos:line="15" pos:column="13">s<pos:position pos:line="15" pos:column="14"/></name><operator pos:line="15" pos:column="14">-&gt;<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="16">write<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name><name pos:line="15" pos:column="24">s<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">window<pos:position pos:line="15" pos:column="33"/></name></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">s<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">checkfn<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">!=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">Z_NULL<pos:position pos:line="16" pos:column="27"/></name></expr>)<pos:position pos:line="16" pos:column="28"/></condition><then pos:line="16" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="17" pos:column="5">z<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">adler<pos:position pos:line="17" pos:column="13"/></name></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name><name pos:line="17" pos:column="16">s<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">check<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call pos:line="17" pos:column="27">(<modifier pos:line="17" pos:column="28">*<pos:position pos:line="17" pos:column="29"/></modifier><name><name pos:line="17" pos:column="29">s<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">checkfn<pos:position pos:line="17" pos:column="39"/></name></name>)<argument_list pos:line="17" pos:column="40">(<argument><expr><literal type="number" pos:line="17" pos:column="41">0L<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">(<pos:position pos:line="17" pos:column="46"/></operator><specifier pos:line="17" pos:column="46">const<pos:position pos:line="17" pos:column="51"/></specifier> <name pos:line="17" pos:column="52">Bytef<pos:position pos:line="17" pos:column="57"/></name> <operator pos:line="17" pos:column="58">*<pos:position pos:line="17" pos:column="59"/></operator><operator pos:line="17" pos:column="59">)<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="60">Z_NULL<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="68">0<pos:position pos:line="17" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt></block></then></if>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">Tracev<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">stderr<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">,<pos:position pos:line="18" pos:column="18"/></operator> <literal type="string" pos:line="18" pos:column="19">"inflate:   blocks reset\n"<pos:position pos:line="18" pos:column="46"/></literal><operator pos:line="18" pos:column="46">)<pos:position pos:line="18" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></unit>

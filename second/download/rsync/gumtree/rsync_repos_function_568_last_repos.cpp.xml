<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_568_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">option_error<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name pos:line="1" pos:column="19">void<pos:position pos:line="1" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="24"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><operator pos:line="3" pos:column="13">!<pos:position pos:line="3" pos:column="14"/></operator><name><name pos:line="3" pos:column="14">err_buf<pos:position pos:line="3" pos:column="21"/></name><index pos:line="3" pos:column="21">[<expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr>]<pos:position pos:line="3" pos:column="24"/></index></name></expr>)<pos:position pos:line="3" pos:column="25"/></condition><then pos:line="3" pos:column="25"> <block pos:line="3" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">strlcpy<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><name pos:line="4" pos:column="25">err_buf<pos:position pos:line="4" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="34">"Error parsing options: option may "<pos:position pos:line="4" pos:column="70"/></literal>
			<literal type="string" pos:line="5" pos:column="25">"be supported on client but not on server?\n"<pos:position pos:line="5" pos:column="70"/></literal></expr></argument>,
			<argument><expr><sizeof pos:line="6" pos:column="25">sizeof <name pos:line="6" pos:column="32">err_buf<pos:position pos:line="6" pos:column="39"/></name></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="7" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">rprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">FERROR<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">RSYNC_NAME<pos:position pos:line="9" pos:column="35"/></name> <literal type="string" pos:line="9" pos:column="36">": %s"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">err_buf<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="10" pos:column="9">msleep<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">20<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

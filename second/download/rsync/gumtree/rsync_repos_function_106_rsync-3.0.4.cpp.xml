<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_106_rsync-3.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">msg_flush<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">am_generator<pos:position pos:line="3" pos:column="25"/></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26"> <block pos:line="3" pos:column="27">{
		<while pos:line="4" pos:column="17">while <condition pos:line="4" pos:column="23">(<expr><name><name pos:line="4" pos:column="24">msg_queue<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">.<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">head<pos:position pos:line="4" pos:column="38"/></name></name> <operator pos:line="4" pos:column="39">&amp;&amp;<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="42">io_multiplexing_out<pos:position pos:line="4" pos:column="61"/></name></expr>)<pos:position pos:line="4" pos:column="62"/></condition>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="5" pos:column="25">stats<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">total_written<pos:position pos:line="5" pos:column="44"/></name></name> <operator pos:line="5" pos:column="45">+=<pos:position pos:line="5" pos:column="47"/></operator> <call><name pos:line="5" pos:column="48">flush_a_msg<pos:position pos:line="5" pos:column="59"/></name><argument_list pos:line="5" pos:column="59">(<argument><expr><name pos:line="5" pos:column="60">sock_f_out<pos:position pos:line="5" pos:column="70"/></name></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call> <operator pos:line="5" pos:column="72">+<pos:position pos:line="5" pos:column="73"/></operator> <literal type="number" pos:line="5" pos:column="74">4<pos:position pos:line="5" pos:column="75"/></literal></expr>;<pos:position pos:line="5" pos:column="76"/></expr_stmt></block></while>
	}<pos:position pos:line="6" pos:column="10"/></block></then> <else pos:line="6" pos:column="11">else <block pos:line="6" pos:column="16">{
		<while pos:line="7" pos:column="17">while <condition pos:line="7" pos:column="23">(<expr><name><name pos:line="7" pos:column="24">msg_queue<pos:position pos:line="7" pos:column="33"/></name><operator pos:line="7" pos:column="33">.<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="34">head<pos:position pos:line="7" pos:column="38"/></name></name></expr>)<pos:position pos:line="7" pos:column="39"/></condition>
			<block type="pseudo"><expr_stmt><expr><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">void<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator><call><name pos:line="8" pos:column="31">flush_a_msg<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">msg_fd_out<pos:position pos:line="8" pos:column="53"/></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt></block></while>
	}<pos:position pos:line="9" pos:column="10"/></block></else></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

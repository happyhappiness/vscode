<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_164.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">hash_search<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">f<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>,<parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">sum_struct<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">s<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">buf<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,<parameter><decl><type><name pos:line="1" pos:column="62">off_t<pos:position pos:line="1" pos:column="67"/></name></type> <name pos:line="1" pos:column="68">len<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="72"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">offset<pos:position pos:line="3" pos:column="13"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="14">j<pos:position pos:line="3" pos:column="15"/></name></decl>,<decl><type ref="prev"/><name pos:line="3" pos:column="16">k<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">end<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">sum2<pos:position pos:line="5" pos:column="12"/></name><index pos:line="5" pos:column="12">[<expr><name pos:line="5" pos:column="13">SUM_LENGTH<pos:position pos:line="5" pos:column="23"/></name></expr>]<pos:position pos:line="5" pos:column="24"/></index></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">uint32<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">s1<pos:position pos:line="6" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="14">s2<pos:position pos:line="6" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="18">sum<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt> 
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">map<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">verbose<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&gt;<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="17">2<pos:position pos:line="9" pos:column="18"/></literal></expr>)<pos:position pos:line="9" pos:column="19"/></condition><then pos:line="9" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">fprintf<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">stderr<pos:position pos:line="10" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="20">"hash search b=%d len=%d\n"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>,<argument><expr><name><name pos:line="10" pos:column="48">s<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">n<pos:position pos:line="10" pos:column="52"/></name></name></expr></argument>,<argument><expr><operator pos:line="10" pos:column="53">(<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="54">int<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="58">len<pos:position pos:line="10" pos:column="61"/></name></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">k<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <call><name pos:line="12" pos:column="7">MIN<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">len<pos:position pos:line="12" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="16">s<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">n<pos:position pos:line="12" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">map<pos:position pos:line="14" pos:column="6"/></name> <operator pos:line="14" pos:column="7">=<pos:position pos:line="14" pos:column="8"/></operator> <call><name pos:line="14" pos:column="9">map_ptr<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">buf<pos:position pos:line="14" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>,<argument><expr><name pos:line="14" pos:column="23">k<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">sum<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">get_checksum1<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">map<pos:position pos:line="16" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">k<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">s1<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <name pos:line="17" pos:column="8">sum<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">&amp;<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="14">0xFFFF<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">s2<pos:position pos:line="18" pos:column="5"/></name> <operator pos:line="18" pos:column="6">=<pos:position pos:line="18" pos:column="7"/></operator> <name pos:line="18" pos:column="8">sum<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">&gt;&gt;<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="15">16<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">verbose<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">&gt;<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="17">3<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">fprintf<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">stderr<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="21">"sum=%.8x k=%d\n"<pos:position pos:line="20" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">sum<pos:position pos:line="20" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="45">k<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">offset<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <literal type="number" pos:line="22" pos:column="12">0<pos:position pos:line="22" pos:column="13"/></literal></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">end<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <name pos:line="24" pos:column="9">len<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">+<pos:position pos:line="24" pos:column="14"/></operator> <literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal> <operator pos:line="24" pos:column="17">-<pos:position pos:line="24" pos:column="18"/></operator> <name><name pos:line="24" pos:column="19">s<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">sums<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[<expr><name><name pos:line="24" pos:column="27">s<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">count<pos:position pos:line="24" pos:column="35"/></name></name><operator pos:line="24" pos:column="35">-<pos:position pos:line="24" pos:column="36"/></operator><literal type="number" pos:line="24" pos:column="36">1<pos:position pos:line="24" pos:column="37"/></literal></expr>]<pos:position pos:line="24" pos:column="38"/></index></name><operator pos:line="24" pos:column="38">.<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">len<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">verbose<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">&gt;<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="17">3<pos:position pos:line="26" pos:column="18"/></literal></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">fprintf<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">stderr<pos:position pos:line="27" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="27" pos:column="20">"hash search s-&gt;n=%d len=%d count=%d\n"<pos:position pos:line="27" pos:column="62"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="28" pos:column="13">s<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">n<pos:position pos:line="28" pos:column="17"/></name></name></expr></argument>,<argument><expr><operator pos:line="28" pos:column="18">(<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">int<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">)<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">len<pos:position pos:line="28" pos:column="26"/></name></expr></argument>,<argument><expr><name><name pos:line="28" pos:column="27">s<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">count<pos:position pos:line="28" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt></block></then></if>

  <do pos:line="30" pos:column="3">do <block pos:line="30" pos:column="6">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">tag<pos:position pos:line="31" pos:column="8"/></name></type> <name pos:line="31" pos:column="9">t<pos:position pos:line="31" pos:column="10"/></name> <init pos:line="31" pos:column="11">= <expr><call><name pos:line="31" pos:column="13">gettag2<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">s1<pos:position pos:line="31" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="31" pos:column="24">s2<pos:position pos:line="31" pos:column="26"/></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="28"/></decl_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">j<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <name><name pos:line="32" pos:column="9">tag_table<pos:position pos:line="32" pos:column="18"/></name><index pos:line="32" pos:column="18">[<expr><name pos:line="32" pos:column="19">t<pos:position pos:line="32" pos:column="20"/></name></expr>]<pos:position pos:line="32" pos:column="21"/></index></name></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">verbose<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">&gt;<pos:position pos:line="33" pos:column="21"/></operator> <literal type="number" pos:line="33" pos:column="19">4<pos:position pos:line="33" pos:column="20"/></literal></expr>)<pos:position pos:line="33" pos:column="21"/></condition><then pos:line="33" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">fprintf<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">stderr<pos:position pos:line="34" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="34" pos:column="22">"offset=%d sum=%08x\n"<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>,
	      <argument><expr><name pos:line="35" pos:column="15">offset<pos:position pos:line="35" pos:column="21"/></name></expr></argument>,<argument><expr><name pos:line="35" pos:column="22">sum<pos:position pos:line="35" pos:column="25"/></name></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt></block></then></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">j<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">!=<pos:position pos:line="37" pos:column="13"/></operator> <name pos:line="37" pos:column="14">NULL_TAG<pos:position pos:line="37" pos:column="22"/></name></expr>)<pos:position pos:line="37" pos:column="23"/></condition><then pos:line="37" pos:column="23"> <block pos:line="37" pos:column="24">{
      <decl_stmt><decl><type><name pos:line="38" pos:column="7">int<pos:position pos:line="38" pos:column="10"/></name></type> <name pos:line="38" pos:column="11">done_csum2<pos:position pos:line="38" pos:column="21"/></name> <init pos:line="38" pos:column="22">= <expr><literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="26"/></decl_stmt>

      <expr_stmt><expr><name pos:line="40" pos:column="7">sum<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">=<pos:position pos:line="40" pos:column="12"/></operator> <operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">s1<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">&amp;<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="19">0xffff<pos:position pos:line="40" pos:column="25"/></literal><operator pos:line="40" pos:column="25">)<pos:position pos:line="40" pos:column="26"/></operator> <operator pos:line="40" pos:column="27">|<pos:position pos:line="40" pos:column="28"/></operator> <operator pos:line="40" pos:column="29">(<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">s2<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">&lt;&lt;<pos:position pos:line="40" pos:column="41"/></operator> <literal type="number" pos:line="40" pos:column="36">16<pos:position pos:line="40" pos:column="38"/></literal><operator pos:line="40" pos:column="38">)<pos:position pos:line="40" pos:column="39"/></operator></expr>;<pos:position pos:line="40" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name pos:line="41" pos:column="7">tag_hits<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">++<pos:position pos:line="41" pos:column="17"/></operator></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt>
      <do pos:line="42" pos:column="7">do <block pos:line="42" pos:column="10">{
	<decl_stmt><decl><type><name pos:line="43" pos:column="9">int<pos:position pos:line="43" pos:column="12"/></name></type> <name pos:line="43" pos:column="13">i<pos:position pos:line="43" pos:column="14"/></name> <init pos:line="43" pos:column="15">= <expr><name><name pos:line="43" pos:column="17">targets<pos:position pos:line="43" pos:column="24"/></name><index pos:line="43" pos:column="24">[<expr><name pos:line="43" pos:column="25">j<pos:position pos:line="43" pos:column="26"/></name></expr>]<pos:position pos:line="43" pos:column="27"/></index></name><operator pos:line="43" pos:column="27">.<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">i<pos:position pos:line="43" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="43" pos:column="30"/></decl_stmt>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">sum<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">==<pos:position pos:line="45" pos:column="19"/></operator> <name><name pos:line="45" pos:column="20">s<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">sums<pos:position pos:line="45" pos:column="27"/></name><index pos:line="45" pos:column="27">[<expr><name pos:line="45" pos:column="28">i<pos:position pos:line="45" pos:column="29"/></name></expr>]<pos:position pos:line="45" pos:column="30"/></index></name><operator pos:line="45" pos:column="30">.<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="31">sum1<pos:position pos:line="45" pos:column="35"/></name></expr>)<pos:position pos:line="45" pos:column="36"/></condition><then pos:line="45" pos:column="36"> <block pos:line="45" pos:column="37">{
	  <if pos:line="46" pos:column="11">if <condition pos:line="46" pos:column="14">(<expr><name pos:line="46" pos:column="15">verbose<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">&gt;<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="25">3<pos:position pos:line="46" pos:column="26"/></literal></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="13">fprintf<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">stderr<pos:position pos:line="47" pos:column="27"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="47" pos:column="28">"potential match at %d target=%d %d sum=%08x\n"<pos:position pos:line="47" pos:column="75"/></literal></expr></argument>,
		    <argument><expr><name pos:line="48" pos:column="21">offset<pos:position pos:line="48" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="48" pos:column="28">j<pos:position pos:line="48" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="48" pos:column="30">i<pos:position pos:line="48" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="48" pos:column="32">sum<pos:position pos:line="48" pos:column="35"/></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt></block></then></if>

	  <if pos:line="50" pos:column="11">if <condition pos:line="50" pos:column="14">(<expr><operator pos:line="50" pos:column="15">!<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="16">done_csum2<pos:position pos:line="50" pos:column="26"/></name></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27"> <block pos:line="50" pos:column="28">{
	    <decl_stmt><decl><type><name pos:line="51" pos:column="13">int<pos:position pos:line="51" pos:column="16"/></name></type> <name pos:line="51" pos:column="17">l<pos:position pos:line="51" pos:column="18"/></name> <init pos:line="51" pos:column="19">= <expr><call><name pos:line="51" pos:column="21">MIN<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><name><name pos:line="51" pos:column="25">s<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">n<pos:position pos:line="51" pos:column="29"/></name></name></expr></argument>,<argument><expr><name pos:line="51" pos:column="30">len<pos:position pos:line="51" pos:column="33"/></name><operator pos:line="51" pos:column="33">-<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="34">offset<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="51" pos:column="42"/></decl_stmt>
	    <expr_stmt><expr><name pos:line="52" pos:column="13">map<pos:position pos:line="52" pos:column="16"/></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <call><name pos:line="52" pos:column="19">map_ptr<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">buf<pos:position pos:line="52" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="52" pos:column="31">offset<pos:position pos:line="52" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="52" pos:column="38">l<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="53" pos:column="13">get_checksum2<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">map<pos:position pos:line="53" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="31">l<pos:position pos:line="53" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="53" pos:column="33">sum2<pos:position pos:line="53" pos:column="37"/></name></expr></argument>)<pos:position pos:line="53" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="39"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="54" pos:column="13">done_csum2<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
	  }<pos:position pos:line="55" pos:column="12"/></block></then></if>
	  <if pos:line="56" pos:column="11">if <condition pos:line="56" pos:column="14">(<expr><call><name pos:line="56" pos:column="15">memcmp<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">sum2<pos:position pos:line="56" pos:column="26"/></name></expr></argument>,<argument><expr><name><name pos:line="56" pos:column="27">s<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">-&gt;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="30">sums<pos:position pos:line="56" pos:column="34"/></name><index pos:line="56" pos:column="34">[<expr><name pos:line="56" pos:column="35">i<pos:position pos:line="56" pos:column="36"/></name></expr>]<pos:position pos:line="56" pos:column="37"/></index></name><operator pos:line="56" pos:column="37">.<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="38">sum2<pos:position pos:line="56" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="56" pos:column="43">csum_length<pos:position pos:line="56" pos:column="54"/></name></expr></argument>)<pos:position pos:line="56" pos:column="55"/></argument_list></call> <operator pos:line="56" pos:column="56">==<pos:position pos:line="56" pos:column="58"/></operator> <literal type="number" pos:line="56" pos:column="59">0<pos:position pos:line="56" pos:column="60"/></literal></expr>)<pos:position pos:line="56" pos:column="61"/></condition><then pos:line="56" pos:column="61"> <block pos:line="56" pos:column="62">{
	    <expr_stmt><expr><call><name pos:line="57" pos:column="13">matched<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">f<pos:position pos:line="57" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="23">s<pos:position pos:line="57" pos:column="24"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="25">buf<pos:position pos:line="57" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="29">len<pos:position pos:line="57" pos:column="32"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="33">offset<pos:position pos:line="57" pos:column="39"/></name></expr></argument>,<argument><expr><name pos:line="57" pos:column="40">i<pos:position pos:line="57" pos:column="41"/></name></expr></argument>)<pos:position pos:line="57" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="43"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="58" pos:column="13">offset<pos:position pos:line="58" pos:column="19"/></name> <operator pos:line="58" pos:column="20">+=<pos:position pos:line="58" pos:column="22"/></operator> <name><name pos:line="58" pos:column="23">s<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">sums<pos:position pos:line="58" pos:column="30"/></name><index pos:line="58" pos:column="30">[<expr><name pos:line="58" pos:column="31">i<pos:position pos:line="58" pos:column="32"/></name></expr>]<pos:position pos:line="58" pos:column="33"/></index></name><operator pos:line="58" pos:column="33">.<pos:position pos:line="58" pos:column="34"/></operator><name pos:line="58" pos:column="34">len<pos:position pos:line="58" pos:column="37"/></name> <operator pos:line="58" pos:column="38">-<pos:position pos:line="58" pos:column="39"/></operator> <literal type="number" pos:line="58" pos:column="40">1<pos:position pos:line="58" pos:column="41"/></literal></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="59" pos:column="13">k<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <call><name pos:line="59" pos:column="17">MIN<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><operator pos:line="59" pos:column="21">(<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">len<pos:position pos:line="59" pos:column="25"/></name><operator pos:line="59" pos:column="25">-<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="26">offset<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">)<pos:position pos:line="59" pos:column="33"/></operator></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="35">s<pos:position pos:line="59" pos:column="36"/></name><operator pos:line="59" pos:column="36">-&gt;<pos:position pos:line="59" pos:column="41"/></operator><name pos:line="59" pos:column="38">n<pos:position pos:line="59" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="60" pos:column="13">map<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <call><name pos:line="60" pos:column="19">map_ptr<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">buf<pos:position pos:line="60" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="60" pos:column="31">offset<pos:position pos:line="60" pos:column="37"/></name></expr></argument>,<argument><expr><name pos:line="60" pos:column="38">k<pos:position pos:line="60" pos:column="39"/></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="61" pos:column="13">sum<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <call><name pos:line="61" pos:column="19">get_checksum1<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">map<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">k<pos:position pos:line="61" pos:column="39"/></name></expr></argument>)<pos:position pos:line="61" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="62" pos:column="13">s1<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <name pos:line="62" pos:column="18">sum<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">&amp;<pos:position pos:line="62" pos:column="27"/></operator> <literal type="number" pos:line="62" pos:column="24">0xFFFF<pos:position pos:line="62" pos:column="30"/></literal></expr>;<pos:position pos:line="62" pos:column="31"/></expr_stmt>
	    <expr_stmt><expr><name pos:line="63" pos:column="13">s2<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <name pos:line="63" pos:column="18">sum<pos:position pos:line="63" pos:column="21"/></name> <operator pos:line="63" pos:column="22">&gt;&gt;<pos:position pos:line="63" pos:column="27"/></operator> <literal type="number" pos:line="63" pos:column="25">16<pos:position pos:line="63" pos:column="27"/></literal></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
	    <expr_stmt><expr><operator pos:line="64" pos:column="13">++<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="15">matches<pos:position pos:line="64" pos:column="22"/></name></expr>;<pos:position pos:line="64" pos:column="23"/></expr_stmt>
	    <break pos:line="65" pos:column="13">break;<pos:position pos:line="65" pos:column="19"/></break>
	  }<pos:position pos:line="66" pos:column="12"/></block></then> <else pos:line="66" pos:column="13">else <block pos:line="66" pos:column="18">{
	    <expr_stmt><expr><name pos:line="67" pos:column="13">false_alarms<pos:position pos:line="67" pos:column="25"/></name><operator pos:line="67" pos:column="25">++<pos:position pos:line="67" pos:column="27"/></operator></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>
	  }<pos:position pos:line="68" pos:column="12"/></block></else></if>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="70" pos:column="9">j<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">++<pos:position pos:line="70" pos:column="12"/></operator></expr>;<pos:position pos:line="70" pos:column="13"/></expr_stmt>
      }<pos:position pos:line="71" pos:column="8"/></block> while <condition pos:line="71" pos:column="15">(<expr><name pos:line="71" pos:column="16">j<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">&lt;<pos:position pos:line="71" pos:column="21"/></operator><name><name pos:line="71" pos:column="18">s<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">-&gt;<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="21">count<pos:position pos:line="71" pos:column="26"/></name></name> <operator pos:line="71" pos:column="27">&amp;&amp;<pos:position pos:line="71" pos:column="37"/></operator> <name><name pos:line="71" pos:column="30">targets<pos:position pos:line="71" pos:column="37"/></name><index pos:line="71" pos:column="37">[<expr><name pos:line="71" pos:column="38">j<pos:position pos:line="71" pos:column="39"/></name></expr>]<pos:position pos:line="71" pos:column="40"/></index></name><operator pos:line="71" pos:column="40">.<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="41">t<pos:position pos:line="71" pos:column="42"/></name> <operator pos:line="71" pos:column="43">==<pos:position pos:line="71" pos:column="45"/></operator> <name pos:line="71" pos:column="46">t<pos:position pos:line="71" pos:column="47"/></name></expr>)<pos:position pos:line="71" pos:column="48"/></condition>;<pos:position pos:line="71" pos:column="49"/></do>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="74" pos:column="5">/* Trim off the first byte from the checksum */</comment>
    <expr_stmt><expr><name pos:line="75" pos:column="5">map<pos:position pos:line="75" pos:column="8"/></name> <operator pos:line="75" pos:column="9">=<pos:position pos:line="75" pos:column="10"/></operator> <call><name pos:line="75" pos:column="11">map_ptr<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><name pos:line="75" pos:column="19">buf<pos:position pos:line="75" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="75" pos:column="23">offset<pos:position pos:line="75" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="75" pos:column="30">k<pos:position pos:line="75" pos:column="31"/></name><operator pos:line="75" pos:column="31">+<pos:position pos:line="75" pos:column="32"/></operator><literal type="number" pos:line="75" pos:column="32">1<pos:position pos:line="75" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="76" pos:column="5">s1<pos:position pos:line="76" pos:column="7"/></name> <operator pos:line="76" pos:column="8">-=<pos:position pos:line="76" pos:column="10"/></operator> <name><name pos:line="76" pos:column="11">map<pos:position pos:line="76" pos:column="14"/></name><index pos:line="76" pos:column="14">[<expr><literal type="number" pos:line="76" pos:column="15">0<pos:position pos:line="76" pos:column="16"/></literal></expr>]<pos:position pos:line="76" pos:column="17"/></index></name></expr>;<pos:position pos:line="76" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="77" pos:column="5">s2<pos:position pos:line="77" pos:column="7"/></name> <operator pos:line="77" pos:column="8">-=<pos:position pos:line="77" pos:column="10"/></operator> <name pos:line="77" pos:column="11">k<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">*<pos:position pos:line="77" pos:column="14"/></operator> <name><name pos:line="77" pos:column="15">map<pos:position pos:line="77" pos:column="18"/></name><index pos:line="77" pos:column="18">[<expr><literal type="number" pos:line="77" pos:column="19">0<pos:position pos:line="77" pos:column="20"/></literal></expr>]<pos:position pos:line="77" pos:column="21"/></index></name></expr>;<pos:position pos:line="77" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="79" pos:column="5">/* Add on the next byte (if there is one) to the checksum */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">k<pos:position pos:line="80" pos:column="10"/></name> <operator pos:line="80" pos:column="11">&lt;<pos:position pos:line="80" pos:column="15"/></operator> <operator pos:line="80" pos:column="13">(<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="14">len<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">-<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="18">offset<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">)<pos:position pos:line="80" pos:column="25"/></operator></expr>)<pos:position pos:line="80" pos:column="26"/></condition><then pos:line="80" pos:column="26"> <block pos:line="80" pos:column="27">{
      <expr_stmt><expr><name pos:line="81" pos:column="7">s1<pos:position pos:line="81" pos:column="9"/></name> <operator pos:line="81" pos:column="10">+=<pos:position pos:line="81" pos:column="12"/></operator> <name><name pos:line="81" pos:column="13">map<pos:position pos:line="81" pos:column="16"/></name><index pos:line="81" pos:column="16">[<expr><name pos:line="81" pos:column="17">k<pos:position pos:line="81" pos:column="18"/></name></expr>]<pos:position pos:line="81" pos:column="19"/></index></name></expr>;<pos:position pos:line="81" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><name pos:line="82" pos:column="7">s2<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">+=<pos:position pos:line="82" pos:column="12"/></operator> <name pos:line="82" pos:column="13">s1<pos:position pos:line="82" pos:column="15"/></name></expr>;<pos:position pos:line="82" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then> <else pos:line="83" pos:column="7">else <block pos:line="83" pos:column="12">{
      <expr_stmt><expr><operator pos:line="84" pos:column="7">--<pos:position pos:line="84" pos:column="9"/></operator><name pos:line="84" pos:column="9">k<pos:position pos:line="84" pos:column="10"/></name></expr>;<pos:position pos:line="84" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="85" pos:column="6"/></block></else></if>

  }<pos:position pos:line="87" pos:column="4"/></block> while <condition pos:line="87" pos:column="11">(<expr><operator pos:line="87" pos:column="12">++<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="14">offset<pos:position pos:line="87" pos:column="20"/></name> <operator pos:line="87" pos:column="21">&lt;<pos:position pos:line="87" pos:column="25"/></operator> <name pos:line="87" pos:column="23">end<pos:position pos:line="87" pos:column="26"/></name></expr>)<pos:position pos:line="87" pos:column="27"/></condition>;<pos:position pos:line="87" pos:column="28"/></do>

  <expr_stmt><expr><call><name pos:line="89" pos:column="3">matched<pos:position pos:line="89" pos:column="10"/></name><argument_list pos:line="89" pos:column="10">(<argument><expr><name pos:line="89" pos:column="11">f<pos:position pos:line="89" pos:column="12"/></name></expr></argument>,<argument><expr><name pos:line="89" pos:column="13">s<pos:position pos:line="89" pos:column="14"/></name></expr></argument>,<argument><expr><name pos:line="89" pos:column="15">buf<pos:position pos:line="89" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="89" pos:column="19">len<pos:position pos:line="89" pos:column="22"/></name></expr></argument>,<argument><expr><name pos:line="89" pos:column="23">len<pos:position pos:line="89" pos:column="26"/></name></expr></argument>,<argument><expr><operator pos:line="89" pos:column="27">-<pos:position pos:line="89" pos:column="28"/></operator><literal type="number" pos:line="89" pos:column="28">1<pos:position pos:line="89" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="31"/></expr_stmt>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

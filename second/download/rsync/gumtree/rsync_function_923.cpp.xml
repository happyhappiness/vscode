<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_923.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">filter_rule<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">parse_rule_tok<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier><modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">rulestr_ptr<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">filter_rule<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier><specifier pos:line="2" pos:column="55">template<pos:position pos:line="2" pos:column="63"/></specifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">int<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">xflags<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>,
				   <parameter><decl><type><specifier pos:line="3" pos:column="36">const<pos:position pos:line="3" pos:column="41"/></specifier> <name pos:line="3" pos:column="42">char<pos:position pos:line="3" pos:column="46"/></name> <modifier pos:line="3" pos:column="47">*<pos:position pos:line="3" pos:column="48"/></modifier><modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">pat_ptr<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="58">unsigned<pos:position pos:line="3" pos:column="66"/></name> <name pos:line="3" pos:column="67">int<pos:position pos:line="3" pos:column="70"/></name> <modifier pos:line="3" pos:column="71">*<pos:position pos:line="3" pos:column="72"/></modifier></type><name pos:line="3" pos:column="72">pat_len_ptr<pos:position pos:line="3" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="84"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">uchar<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">s<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">(<pos:position pos:line="5" pos:column="27"/></operator><specifier pos:line="5" pos:column="27">const<pos:position pos:line="5" pos:column="32"/></specifier> <name pos:line="5" pos:column="33">uchar<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator><operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">rulestr_ptr<pos:position pos:line="5" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">filter_rule<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">rule<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">unsigned<pos:position pos:line="7" pos:column="17"/></name> <name pos:line="7" pos:column="18">int<pos:position pos:line="7" pos:column="21"/></name></type> <name pos:line="7" pos:column="22">len<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></condition></if><template pos:line="9" pos:column="13">template-&gt;<parameter><type><name pos:line="9" pos:column="23">rflags<pos:position pos:line="9" pos:column="29"/></name> <modifier pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></modifier></type> <name pos:line="9" pos:column="32">FILTRULE_WORD_SPLIT<pos:position pos:line="9" pos:column="51"/></name></parameter>) <block pos:line="9" pos:column="53">{
		<comment type="block" pos:line="10" pos:column="17">/* Skip over any initial whitespace. */</comment>
		<while pos:line="11" pos:column="17">while <condition pos:line="11" pos:column="23">(<expr><call><name pos:line="11" pos:column="24">isspace<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><operator pos:line="11" pos:column="32">*<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">s<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="36"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="25">s<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">++<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt></block></while>
		<comment type="block" pos:line="13" pos:column="17">/* Update to point to real start of rule. */</comment>
		<expr_stmt><expr><operator pos:line="14" pos:column="17">*<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">rulestr_ptr<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <operator pos:line="14" pos:column="32">(<pos:position pos:line="14" pos:column="33"/></operator><specifier pos:line="14" pos:column="33">const<pos:position pos:line="14" pos:column="38"/></specifier> <name pos:line="14" pos:column="39">char<pos:position pos:line="14" pos:column="43"/></name> <operator pos:line="14" pos:column="44">*<pos:position pos:line="14" pos:column="45"/></operator><operator pos:line="14" pos:column="45">)<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">s<pos:position pos:line="14" pos:column="47"/></name></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></template>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><operator pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">s<pos:position pos:line="16" pos:column="16"/></name></expr>)<pos:position pos:line="16" pos:column="17"/></condition><then pos:line="16" pos:column="17">
		<block type="pseudo"><return pos:line="17" pos:column="17">return <expr><name pos:line="17" pos:column="24">NULL<pos:position pos:line="17" pos:column="28"/></name></expr>;<pos:position pos:line="17" pos:column="29"/></return></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">rule<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <call><name pos:line="19" pos:column="22">new0<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">filter_rule<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator></expr>)<pos:position pos:line="19" pos:column="41"/></condition><then pos:line="19" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">out_of_memory<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><literal type="string" pos:line="20" pos:column="31">"parse_rule_tok"<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* Inherit from the template.  Don't inherit FILTRULES_SIDES; we check
	 * that later. */</comment>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">rule<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">rflags<pos:position pos:line="24" pos:column="21"/></name></name> <operator pos:line="24" pos:column="22">=<pos:position pos:line="24" pos:column="23"/></operator></expr></expr_stmt> <template pos:line="24" pos:column="24">template-&gt;<parameter><type><name pos:line="24" pos:column="34">rflags<pos:position pos:line="24" pos:column="40"/></name> <modifier pos:line="24" pos:column="41">&amp;<pos:position pos:line="24" pos:column="46"/></modifier></type> <name pos:line="24" pos:column="43">FILTRULES_FROM_CONTAINER<pos:position pos:line="24" pos:column="67"/></name></parameter><empty_stmt pos:line="24" pos:column="67">;<pos:position pos:line="24" pos:column="68"/></empty_stmt></template>

	<comment type="block" pos:line="26" pos:column="9">/* Figure out what kind of a filter rule "s" is pointing at.  Note
	 * that if FILTRULE_NO_PREFIXES is set, the rule is either an include
	 * or an exclude based on the inheritance of the FILTRULE_INCLUDE
	 * flag (above).  XFLG_OLD_PREFIXES indicates a compatibility mode
	 * for old include/exclude patterns where just "+ " and "- " are
	 * allowed as optional prefixes.  */</comment>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></condition></if><template pos:line="32" pos:column="13">template-&gt;<parameter><type><name pos:line="32" pos:column="23">rflags<pos:position pos:line="32" pos:column="29"/></name> <modifier pos:line="32" pos:column="30">&amp;<pos:position pos:line="32" pos:column="35"/></modifier></type> <name pos:line="32" pos:column="32">FILTRULE_NO_PREFIXES<pos:position pos:line="32" pos:column="52"/></name></parameter>) <block pos:line="32" pos:column="54">{
		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">s<pos:position pos:line="33" pos:column="23"/></name> <operator pos:line="33" pos:column="24">==<pos:position pos:line="33" pos:column="26"/></operator> <literal type="char" pos:line="33" pos:column="27">'!'<pos:position pos:line="33" pos:column="30"/></literal> <operator pos:line="33" pos:column="31">&amp;&amp;<pos:position pos:line="33" pos:column="41"/></operator></expr></condition></if> <template pos:line="33" pos:column="34">template-&gt;<parameter><type><name pos:line="33" pos:column="44">rflags<pos:position pos:line="33" pos:column="50"/></name> <modifier pos:line="33" pos:column="51">&amp;<pos:position pos:line="33" pos:column="56"/></modifier></type> <name pos:line="33" pos:column="53">FILTRULE_CVS_IGNORE<pos:position pos:line="33" pos:column="72"/></name></parameter>)
			<expr_stmt><expr><name><name pos:line="34" pos:column="25">rule<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">rflags<pos:position pos:line="34" pos:column="37"/></name></name> <operator pos:line="34" pos:column="38">|=<pos:position pos:line="34" pos:column="40"/></operator> <name pos:line="34" pos:column="41">FILTRULE_CLEAR_LIST<pos:position pos:line="34" pos:column="60"/></name></expr>;<pos:position pos:line="34" pos:column="61"/></expr_stmt></template> <comment type="block" pos:line="34" pos:column="62">/* Tentative! */</comment>
	}<pos:position pos:line="35" pos:column="10"/></block></template> <elseif pos:line="35" pos:column="11">else <if pos:line="35" pos:column="16">if <condition pos:line="35" pos:column="19">(<expr><name pos:line="35" pos:column="20">xflags<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&amp;<pos:position pos:line="35" pos:column="32"/></operator> <name pos:line="35" pos:column="29">XFLG_OLD_PREFIXES<pos:position pos:line="35" pos:column="46"/></name></expr>)<pos:position pos:line="35" pos:column="47"/></condition><then pos:line="35" pos:column="47"> <block pos:line="35" pos:column="48">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><operator pos:line="36" pos:column="21">*<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">s<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">==<pos:position pos:line="36" pos:column="26"/></operator> <literal type="char" pos:line="36" pos:column="27">'-'<pos:position pos:line="36" pos:column="30"/></literal> <operator pos:line="36" pos:column="31">&amp;&amp;<pos:position pos:line="36" pos:column="41"/></operator> <name><name pos:line="36" pos:column="34">s<pos:position pos:line="36" pos:column="35"/></name><index pos:line="36" pos:column="35">[<expr><literal type="number" pos:line="36" pos:column="36">1<pos:position pos:line="36" pos:column="37"/></literal></expr>]<pos:position pos:line="36" pos:column="38"/></index></name> <operator pos:line="36" pos:column="39">==<pos:position pos:line="36" pos:column="41"/></operator> <literal type="char" pos:line="36" pos:column="42">' '<pos:position pos:line="36" pos:column="45"/></literal></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
			<expr_stmt><expr><name><name pos:line="37" pos:column="25">rule<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">-&gt;<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="31">rflags<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">&amp;=<pos:position pos:line="37" pos:column="44"/></operator> <operator pos:line="37" pos:column="41">~<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">FILTRULE_INCLUDE<pos:position pos:line="37" pos:column="58"/></name></expr>;<pos:position pos:line="37" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">s<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">+=<pos:position pos:line="38" pos:column="29"/></operator> <literal type="number" pos:line="38" pos:column="30">2<pos:position pos:line="38" pos:column="31"/></literal></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then> <elseif pos:line="39" pos:column="19">else <if pos:line="39" pos:column="24">if <condition pos:line="39" pos:column="27">(<expr><operator pos:line="39" pos:column="28">*<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="29">s<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">==<pos:position pos:line="39" pos:column="33"/></operator> <literal type="char" pos:line="39" pos:column="34">'+'<pos:position pos:line="39" pos:column="37"/></literal> <operator pos:line="39" pos:column="38">&amp;&amp;<pos:position pos:line="39" pos:column="48"/></operator> <name><name pos:line="39" pos:column="41">s<pos:position pos:line="39" pos:column="42"/></name><index pos:line="39" pos:column="42">[<expr><literal type="number" pos:line="39" pos:column="43">1<pos:position pos:line="39" pos:column="44"/></literal></expr>]<pos:position pos:line="39" pos:column="45"/></index></name> <operator pos:line="39" pos:column="46">==<pos:position pos:line="39" pos:column="48"/></operator> <literal type="char" pos:line="39" pos:column="49">' '<pos:position pos:line="39" pos:column="52"/></literal></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53"> <block pos:line="39" pos:column="54">{
			<expr_stmt><expr><name><name pos:line="40" pos:column="25">rule<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">rflags<pos:position pos:line="40" pos:column="37"/></name></name> <operator pos:line="40" pos:column="38">|=<pos:position pos:line="40" pos:column="40"/></operator> <name pos:line="40" pos:column="41">FILTRULE_INCLUDE<pos:position pos:line="40" pos:column="57"/></name></expr>;<pos:position pos:line="40" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name pos:line="41" pos:column="25">s<pos:position pos:line="41" pos:column="26"/></name> <operator pos:line="41" pos:column="27">+=<pos:position pos:line="41" pos:column="29"/></operator> <literal type="number" pos:line="41" pos:column="30">2<pos:position pos:line="41" pos:column="31"/></literal></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if></elseif> <elseif pos:line="42" pos:column="19">else <if pos:line="42" pos:column="24">if <condition pos:line="42" pos:column="27">(<expr><operator pos:line="42" pos:column="28">*<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">s<pos:position pos:line="42" pos:column="30"/></name> <operator pos:line="42" pos:column="31">==<pos:position pos:line="42" pos:column="33"/></operator> <literal type="char" pos:line="42" pos:column="34">'!'<pos:position pos:line="42" pos:column="37"/></literal></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="43" pos:column="25">rule<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">rflags<pos:position pos:line="43" pos:column="37"/></name></name> <operator pos:line="43" pos:column="38">|=<pos:position pos:line="43" pos:column="40"/></operator> <name pos:line="43" pos:column="41">FILTRULE_CLEAR_LIST<pos:position pos:line="43" pos:column="60"/></name></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt></block></then></if></elseif></if> <comment type="block" pos:line="43" pos:column="62">/* Tentative! */</comment>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">char<pos:position pos:line="45" pos:column="21"/></name></type> <name pos:line="45" pos:column="22">ch<pos:position pos:line="45" pos:column="24"/></name> <init pos:line="45" pos:column="25">= <expr><literal type="number" pos:line="45" pos:column="27">0<pos:position pos:line="45" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">BOOL<pos:position pos:line="46" pos:column="21"/></name></type> <name pos:line="46" pos:column="22">prefix_specifies_side<pos:position pos:line="46" pos:column="43"/></name> <init pos:line="46" pos:column="44">= <expr><name pos:line="46" pos:column="46">False<pos:position pos:line="46" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="52"/></decl_stmt>
		<switch pos:line="47" pos:column="17">switch <condition pos:line="47" pos:column="24">(<expr><operator pos:line="47" pos:column="25">*<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="26">s<pos:position pos:line="47" pos:column="27"/></name></expr>)<pos:position pos:line="47" pos:column="28"/></condition> <block pos:line="47" pos:column="29">{
		<case pos:line="48" pos:column="17">case <expr><literal type="char" pos:line="48" pos:column="22">'c'<pos:position pos:line="48" pos:column="25"/></literal></expr>:<pos:position pos:line="48" pos:column="26"/></case>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><operator pos:line="49" pos:column="29">(<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">s<pos:position pos:line="49" pos:column="31"/></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <call><name pos:line="49" pos:column="34">RULE_STRCMP<pos:position pos:line="49" pos:column="45"/></name><argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">s<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="49">"clear"<pos:position pos:line="49" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call><operator pos:line="49" pos:column="57">)<pos:position pos:line="49" pos:column="58"/></operator> <operator pos:line="49" pos:column="59">!=<pos:position pos:line="49" pos:column="61"/></operator> <name pos:line="49" pos:column="62">NULL<pos:position pos:line="49" pos:column="66"/></name></expr>)<pos:position pos:line="49" pos:column="67"/></condition><then pos:line="49" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="33">ch<pos:position pos:line="50" pos:column="35"/></name> <operator pos:line="50" pos:column="36">=<pos:position pos:line="50" pos:column="37"/></operator> <literal type="char" pos:line="50" pos:column="38">'!'<pos:position pos:line="50" pos:column="41"/></literal></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="51" pos:column="25">break;<pos:position pos:line="51" pos:column="31"/></break>
		<case pos:line="52" pos:column="17">case <expr><literal type="char" pos:line="52" pos:column="22">'d'<pos:position pos:line="52" pos:column="25"/></literal></expr>:<pos:position pos:line="52" pos:column="26"/></case>
			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">(<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">s<pos:position pos:line="53" pos:column="31"/></name> <operator pos:line="53" pos:column="32">=<pos:position pos:line="53" pos:column="33"/></operator> <call><name pos:line="53" pos:column="34">RULE_STRCMP<pos:position pos:line="53" pos:column="45"/></name><argument_list pos:line="53" pos:column="45">(<argument><expr><name pos:line="53" pos:column="46">s<pos:position pos:line="53" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="49">"dir-merge"<pos:position pos:line="53" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="61"/></argument_list></call><operator pos:line="53" pos:column="61">)<pos:position pos:line="53" pos:column="62"/></operator> <operator pos:line="53" pos:column="63">!=<pos:position pos:line="53" pos:column="65"/></operator> <name pos:line="53" pos:column="66">NULL<pos:position pos:line="53" pos:column="70"/></name></expr>)<pos:position pos:line="53" pos:column="71"/></condition><then pos:line="53" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="33">ch<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">=<pos:position pos:line="54" pos:column="37"/></operator> <literal type="char" pos:line="54" pos:column="38">':'<pos:position pos:line="54" pos:column="41"/></literal></expr>;<pos:position pos:line="54" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="55" pos:column="25">break;<pos:position pos:line="55" pos:column="31"/></break>
		<case pos:line="56" pos:column="17">case <expr><literal type="char" pos:line="56" pos:column="22">'e'<pos:position pos:line="56" pos:column="25"/></literal></expr>:<pos:position pos:line="56" pos:column="26"/></case>
			<if pos:line="57" pos:column="25">if <condition pos:line="57" pos:column="28">(<expr><operator pos:line="57" pos:column="29">(<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="30">s<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">=<pos:position pos:line="57" pos:column="33"/></operator> <call><name pos:line="57" pos:column="34">RULE_STRCMP<pos:position pos:line="57" pos:column="45"/></name><argument_list pos:line="57" pos:column="45">(<argument><expr><name pos:line="57" pos:column="46">s<pos:position pos:line="57" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="49">"exclude"<pos:position pos:line="57" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="59"/></argument_list></call><operator pos:line="57" pos:column="59">)<pos:position pos:line="57" pos:column="60"/></operator> <operator pos:line="57" pos:column="61">!=<pos:position pos:line="57" pos:column="63"/></operator> <name pos:line="57" pos:column="64">NULL<pos:position pos:line="57" pos:column="68"/></name></expr>)<pos:position pos:line="57" pos:column="69"/></condition><then pos:line="57" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="33">ch<pos:position pos:line="58" pos:column="35"/></name> <operator pos:line="58" pos:column="36">=<pos:position pos:line="58" pos:column="37"/></operator> <literal type="char" pos:line="58" pos:column="38">'-'<pos:position pos:line="58" pos:column="41"/></literal></expr>;<pos:position pos:line="58" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="59" pos:column="25">break;<pos:position pos:line="59" pos:column="31"/></break>
		<case pos:line="60" pos:column="17">case <expr><literal type="char" pos:line="60" pos:column="22">'h'<pos:position pos:line="60" pos:column="25"/></literal></expr>:<pos:position pos:line="60" pos:column="26"/></case>
			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><operator pos:line="61" pos:column="29">(<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="30">s<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <call><name pos:line="61" pos:column="34">RULE_STRCMP<pos:position pos:line="61" pos:column="45"/></name><argument_list pos:line="61" pos:column="45">(<argument><expr><name pos:line="61" pos:column="46">s<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="49">"hide"<pos:position pos:line="61" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="56"/></argument_list></call><operator pos:line="61" pos:column="56">)<pos:position pos:line="61" pos:column="57"/></operator> <operator pos:line="61" pos:column="58">!=<pos:position pos:line="61" pos:column="60"/></operator> <name pos:line="61" pos:column="61">NULL<pos:position pos:line="61" pos:column="65"/></name></expr>)<pos:position pos:line="61" pos:column="66"/></condition><then pos:line="61" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="33">ch<pos:position pos:line="62" pos:column="35"/></name> <operator pos:line="62" pos:column="36">=<pos:position pos:line="62" pos:column="37"/></operator> <literal type="char" pos:line="62" pos:column="38">'H'<pos:position pos:line="62" pos:column="41"/></literal></expr>;<pos:position pos:line="62" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="63" pos:column="25">break;<pos:position pos:line="63" pos:column="31"/></break>
		<case pos:line="64" pos:column="17">case <expr><literal type="char" pos:line="64" pos:column="22">'i'<pos:position pos:line="64" pos:column="25"/></literal></expr>:<pos:position pos:line="64" pos:column="26"/></case>
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><operator pos:line="65" pos:column="29">(<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="30">s<pos:position pos:line="65" pos:column="31"/></name> <operator pos:line="65" pos:column="32">=<pos:position pos:line="65" pos:column="33"/></operator> <call><name pos:line="65" pos:column="34">RULE_STRCMP<pos:position pos:line="65" pos:column="45"/></name><argument_list pos:line="65" pos:column="45">(<argument><expr><name pos:line="65" pos:column="46">s<pos:position pos:line="65" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="49">"include"<pos:position pos:line="65" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call><operator pos:line="65" pos:column="59">)<pos:position pos:line="65" pos:column="60"/></operator> <operator pos:line="65" pos:column="61">!=<pos:position pos:line="65" pos:column="63"/></operator> <name pos:line="65" pos:column="64">NULL<pos:position pos:line="65" pos:column="68"/></name></expr>)<pos:position pos:line="65" pos:column="69"/></condition><then pos:line="65" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="33">ch<pos:position pos:line="66" pos:column="35"/></name> <operator pos:line="66" pos:column="36">=<pos:position pos:line="66" pos:column="37"/></operator> <literal type="char" pos:line="66" pos:column="38">'+'<pos:position pos:line="66" pos:column="41"/></literal></expr>;<pos:position pos:line="66" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="67" pos:column="25">break;<pos:position pos:line="67" pos:column="31"/></break>
		<case pos:line="68" pos:column="17">case <expr><literal type="char" pos:line="68" pos:column="22">'m'<pos:position pos:line="68" pos:column="25"/></literal></expr>:<pos:position pos:line="68" pos:column="26"/></case>
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><operator pos:line="69" pos:column="29">(<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">s<pos:position pos:line="69" pos:column="31"/></name> <operator pos:line="69" pos:column="32">=<pos:position pos:line="69" pos:column="33"/></operator> <call><name pos:line="69" pos:column="34">RULE_STRCMP<pos:position pos:line="69" pos:column="45"/></name><argument_list pos:line="69" pos:column="45">(<argument><expr><name pos:line="69" pos:column="46">s<pos:position pos:line="69" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="49">"merge"<pos:position pos:line="69" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="57"/></argument_list></call><operator pos:line="69" pos:column="57">)<pos:position pos:line="69" pos:column="58"/></operator> <operator pos:line="69" pos:column="59">!=<pos:position pos:line="69" pos:column="61"/></operator> <name pos:line="69" pos:column="62">NULL<pos:position pos:line="69" pos:column="66"/></name></expr>)<pos:position pos:line="69" pos:column="67"/></condition><then pos:line="69" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name pos:line="70" pos:column="33">ch<pos:position pos:line="70" pos:column="35"/></name> <operator pos:line="70" pos:column="36">=<pos:position pos:line="70" pos:column="37"/></operator> <literal type="char" pos:line="70" pos:column="38">'.'<pos:position pos:line="70" pos:column="41"/></literal></expr>;<pos:position pos:line="70" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="71" pos:column="25">break;<pos:position pos:line="71" pos:column="31"/></break>
		<case pos:line="72" pos:column="17">case <expr><literal type="char" pos:line="72" pos:column="22">'p'<pos:position pos:line="72" pos:column="25"/></literal></expr>:<pos:position pos:line="72" pos:column="26"/></case>
			<if pos:line="73" pos:column="25">if <condition pos:line="73" pos:column="28">(<expr><operator pos:line="73" pos:column="29">(<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="30">s<pos:position pos:line="73" pos:column="31"/></name> <operator pos:line="73" pos:column="32">=<pos:position pos:line="73" pos:column="33"/></operator> <call><name pos:line="73" pos:column="34">RULE_STRCMP<pos:position pos:line="73" pos:column="45"/></name><argument_list pos:line="73" pos:column="45">(<argument><expr><name pos:line="73" pos:column="46">s<pos:position pos:line="73" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="49">"protect"<pos:position pos:line="73" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call><operator pos:line="73" pos:column="59">)<pos:position pos:line="73" pos:column="60"/></operator> <operator pos:line="73" pos:column="61">!=<pos:position pos:line="73" pos:column="63"/></operator> <name pos:line="73" pos:column="64">NULL<pos:position pos:line="73" pos:column="68"/></name></expr>)<pos:position pos:line="73" pos:column="69"/></condition><then pos:line="73" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="33">ch<pos:position pos:line="74" pos:column="35"/></name> <operator pos:line="74" pos:column="36">=<pos:position pos:line="74" pos:column="37"/></operator> <literal type="char" pos:line="74" pos:column="38">'P'<pos:position pos:line="74" pos:column="41"/></literal></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="75" pos:column="25">break;<pos:position pos:line="75" pos:column="31"/></break>
		<case pos:line="76" pos:column="17">case <expr><literal type="char" pos:line="76" pos:column="22">'r'<pos:position pos:line="76" pos:column="25"/></literal></expr>:<pos:position pos:line="76" pos:column="26"/></case>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><operator pos:line="77" pos:column="29">(<pos:position pos:line="77" pos:column="30"/></operator><name pos:line="77" pos:column="30">s<pos:position pos:line="77" pos:column="31"/></name> <operator pos:line="77" pos:column="32">=<pos:position pos:line="77" pos:column="33"/></operator> <call><name pos:line="77" pos:column="34">RULE_STRCMP<pos:position pos:line="77" pos:column="45"/></name><argument_list pos:line="77" pos:column="45">(<argument><expr><name pos:line="77" pos:column="46">s<pos:position pos:line="77" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="49">"risk"<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></call><operator pos:line="77" pos:column="56">)<pos:position pos:line="77" pos:column="57"/></operator> <operator pos:line="77" pos:column="58">!=<pos:position pos:line="77" pos:column="60"/></operator> <name pos:line="77" pos:column="61">NULL<pos:position pos:line="77" pos:column="65"/></name></expr>)<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="78" pos:column="33">ch<pos:position pos:line="78" pos:column="35"/></name> <operator pos:line="78" pos:column="36">=<pos:position pos:line="78" pos:column="37"/></operator> <literal type="char" pos:line="78" pos:column="38">'R'<pos:position pos:line="78" pos:column="41"/></literal></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="79" pos:column="25">break;<pos:position pos:line="79" pos:column="31"/></break>
		<case pos:line="80" pos:column="17">case <expr><literal type="char" pos:line="80" pos:column="22">'s'<pos:position pos:line="80" pos:column="25"/></literal></expr>:<pos:position pos:line="80" pos:column="26"/></case>
			<if pos:line="81" pos:column="25">if <condition pos:line="81" pos:column="28">(<expr><operator pos:line="81" pos:column="29">(<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="30">s<pos:position pos:line="81" pos:column="31"/></name> <operator pos:line="81" pos:column="32">=<pos:position pos:line="81" pos:column="33"/></operator> <call><name pos:line="81" pos:column="34">RULE_STRCMP<pos:position pos:line="81" pos:column="45"/></name><argument_list pos:line="81" pos:column="45">(<argument><expr><name pos:line="81" pos:column="46">s<pos:position pos:line="81" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="49">"show"<pos:position pos:line="81" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="56"/></argument_list></call><operator pos:line="81" pos:column="56">)<pos:position pos:line="81" pos:column="57"/></operator> <operator pos:line="81" pos:column="58">!=<pos:position pos:line="81" pos:column="60"/></operator> <name pos:line="81" pos:column="61">NULL<pos:position pos:line="81" pos:column="65"/></name></expr>)<pos:position pos:line="81" pos:column="66"/></condition><then pos:line="81" pos:column="66">
				<block type="pseudo"><expr_stmt><expr><name pos:line="82" pos:column="33">ch<pos:position pos:line="82" pos:column="35"/></name> <operator pos:line="82" pos:column="36">=<pos:position pos:line="82" pos:column="37"/></operator> <literal type="char" pos:line="82" pos:column="38">'S'<pos:position pos:line="82" pos:column="41"/></literal></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt></block></then></if>
			<break pos:line="83" pos:column="25">break;<pos:position pos:line="83" pos:column="31"/></break>
		<default pos:line="84" pos:column="17">default:<pos:position pos:line="84" pos:column="25"/></default>
			<expr_stmt><expr><name pos:line="85" pos:column="25">ch<pos:position pos:line="85" pos:column="27"/></name> <operator pos:line="85" pos:column="28">=<pos:position pos:line="85" pos:column="29"/></operator> <operator pos:line="85" pos:column="30">*<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="31">s<pos:position pos:line="85" pos:column="32"/></name></expr>;<pos:position pos:line="85" pos:column="33"/></expr_stmt>
			<if pos:line="86" pos:column="25">if <condition pos:line="86" pos:column="28">(<expr><name><name pos:line="86" pos:column="29">s<pos:position pos:line="86" pos:column="30"/></name><index pos:line="86" pos:column="30">[<expr><literal type="number" pos:line="86" pos:column="31">1<pos:position pos:line="86" pos:column="32"/></literal></expr>]<pos:position pos:line="86" pos:column="33"/></index></name> <operator pos:line="86" pos:column="34">==<pos:position pos:line="86" pos:column="36"/></operator> <literal type="char" pos:line="86" pos:column="37">','<pos:position pos:line="86" pos:column="40"/></literal></expr>)<pos:position pos:line="86" pos:column="41"/></condition><then pos:line="86" pos:column="41">
				<block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="33">s<pos:position pos:line="87" pos:column="34"/></name><operator pos:line="87" pos:column="34">++<pos:position pos:line="87" pos:column="36"/></operator></expr>;<pos:position pos:line="87" pos:column="37"/></expr_stmt></block></then></if>
			<break pos:line="88" pos:column="25">break;<pos:position pos:line="88" pos:column="31"/></break>
		}<pos:position pos:line="89" pos:column="18"/></block></switch>
		<switch pos:line="90" pos:column="17">switch <condition pos:line="90" pos:column="24">(<expr><name pos:line="90" pos:column="25">ch<pos:position pos:line="90" pos:column="27"/></name></expr>)<pos:position pos:line="90" pos:column="28"/></condition> <block pos:line="90" pos:column="29">{
		<case pos:line="91" pos:column="17">case <expr><literal type="char" pos:line="91" pos:column="22">':'<pos:position pos:line="91" pos:column="25"/></literal></expr>:<pos:position pos:line="91" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="92" pos:column="25">rule<pos:position pos:line="92" pos:column="29"/></name><operator pos:line="92" pos:column="29">-&gt;<pos:position pos:line="92" pos:column="34"/></operator><name pos:line="92" pos:column="31">rflags<pos:position pos:line="92" pos:column="37"/></name></name> <operator pos:line="92" pos:column="38">|=<pos:position pos:line="92" pos:column="40"/></operator> <name pos:line="92" pos:column="41">FILTRULE_PERDIR_MERGE<pos:position pos:line="92" pos:column="62"/></name>
				       <operator pos:line="93" pos:column="40">|<pos:position pos:line="93" pos:column="41"/></operator> <name pos:line="93" pos:column="42">FILTRULE_FINISH_SETUP<pos:position pos:line="93" pos:column="63"/></name></expr>;<pos:position pos:line="93" pos:column="64"/></expr_stmt>
			<comment type="block" pos:line="94" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="95" pos:column="17">case <expr><literal type="char" pos:line="95" pos:column="22">'.'<pos:position pos:line="95" pos:column="25"/></literal></expr>:<pos:position pos:line="95" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="96" pos:column="25">rule<pos:position pos:line="96" pos:column="29"/></name><operator pos:line="96" pos:column="29">-&gt;<pos:position pos:line="96" pos:column="34"/></operator><name pos:line="96" pos:column="31">rflags<pos:position pos:line="96" pos:column="37"/></name></name> <operator pos:line="96" pos:column="38">|=<pos:position pos:line="96" pos:column="40"/></operator> <name pos:line="96" pos:column="41">FILTRULE_MERGE_FILE<pos:position pos:line="96" pos:column="60"/></name></expr>;<pos:position pos:line="96" pos:column="61"/></expr_stmt>
			<break pos:line="97" pos:column="25">break;<pos:position pos:line="97" pos:column="31"/></break>
		<case pos:line="98" pos:column="17">case <expr><literal type="char" pos:line="98" pos:column="22">'+'<pos:position pos:line="98" pos:column="25"/></literal></expr>:<pos:position pos:line="98" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="99" pos:column="25">rule<pos:position pos:line="99" pos:column="29"/></name><operator pos:line="99" pos:column="29">-&gt;<pos:position pos:line="99" pos:column="34"/></operator><name pos:line="99" pos:column="31">rflags<pos:position pos:line="99" pos:column="37"/></name></name> <operator pos:line="99" pos:column="38">|=<pos:position pos:line="99" pos:column="40"/></operator> <name pos:line="99" pos:column="41">FILTRULE_INCLUDE<pos:position pos:line="99" pos:column="57"/></name></expr>;<pos:position pos:line="99" pos:column="58"/></expr_stmt>
			<break pos:line="100" pos:column="25">break;<pos:position pos:line="100" pos:column="31"/></break>
		<case pos:line="101" pos:column="17">case <expr><literal type="char" pos:line="101" pos:column="22">'-'<pos:position pos:line="101" pos:column="25"/></literal></expr>:<pos:position pos:line="101" pos:column="26"/></case>
			<break pos:line="102" pos:column="25">break;<pos:position pos:line="102" pos:column="31"/></break>
		<case pos:line="103" pos:column="17">case <expr><literal type="char" pos:line="103" pos:column="22">'S'<pos:position pos:line="103" pos:column="25"/></literal></expr>:<pos:position pos:line="103" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="104" pos:column="25">rule<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">-&gt;<pos:position pos:line="104" pos:column="34"/></operator><name pos:line="104" pos:column="31">rflags<pos:position pos:line="104" pos:column="37"/></name></name> <operator pos:line="104" pos:column="38">|=<pos:position pos:line="104" pos:column="40"/></operator> <name pos:line="104" pos:column="41">FILTRULE_INCLUDE<pos:position pos:line="104" pos:column="57"/></name></expr>;<pos:position pos:line="104" pos:column="58"/></expr_stmt>
			<comment type="block" pos:line="105" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="106" pos:column="17">case <expr><literal type="char" pos:line="106" pos:column="22">'H'<pos:position pos:line="106" pos:column="25"/></literal></expr>:<pos:position pos:line="106" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="107" pos:column="25">rule<pos:position pos:line="107" pos:column="29"/></name><operator pos:line="107" pos:column="29">-&gt;<pos:position pos:line="107" pos:column="34"/></operator><name pos:line="107" pos:column="31">rflags<pos:position pos:line="107" pos:column="37"/></name></name> <operator pos:line="107" pos:column="38">|=<pos:position pos:line="107" pos:column="40"/></operator> <name pos:line="107" pos:column="41">FILTRULE_SENDER_SIDE<pos:position pos:line="107" pos:column="61"/></name></expr>;<pos:position pos:line="107" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><name pos:line="108" pos:column="25">prefix_specifies_side<pos:position pos:line="108" pos:column="46"/></name> <operator pos:line="108" pos:column="47">=<pos:position pos:line="108" pos:column="48"/></operator> <name pos:line="108" pos:column="49">True<pos:position pos:line="108" pos:column="53"/></name></expr>;<pos:position pos:line="108" pos:column="54"/></expr_stmt>
			<break pos:line="109" pos:column="25">break;<pos:position pos:line="109" pos:column="31"/></break>
		<case pos:line="110" pos:column="17">case <expr><literal type="char" pos:line="110" pos:column="22">'R'<pos:position pos:line="110" pos:column="25"/></literal></expr>:<pos:position pos:line="110" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="111" pos:column="25">rule<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">-&gt;<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="31">rflags<pos:position pos:line="111" pos:column="37"/></name></name> <operator pos:line="111" pos:column="38">|=<pos:position pos:line="111" pos:column="40"/></operator> <name pos:line="111" pos:column="41">FILTRULE_INCLUDE<pos:position pos:line="111" pos:column="57"/></name></expr>;<pos:position pos:line="111" pos:column="58"/></expr_stmt>
			<comment type="block" pos:line="112" pos:column="25">/* FALL THROUGH */</comment>
		<case pos:line="113" pos:column="17">case <expr><literal type="char" pos:line="113" pos:column="22">'P'<pos:position pos:line="113" pos:column="25"/></literal></expr>:<pos:position pos:line="113" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="114" pos:column="25">rule<pos:position pos:line="114" pos:column="29"/></name><operator pos:line="114" pos:column="29">-&gt;<pos:position pos:line="114" pos:column="34"/></operator><name pos:line="114" pos:column="31">rflags<pos:position pos:line="114" pos:column="37"/></name></name> <operator pos:line="114" pos:column="38">|=<pos:position pos:line="114" pos:column="40"/></operator> <name pos:line="114" pos:column="41">FILTRULE_RECEIVER_SIDE<pos:position pos:line="114" pos:column="63"/></name></expr>;<pos:position pos:line="114" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="115" pos:column="25">prefix_specifies_side<pos:position pos:line="115" pos:column="46"/></name> <operator pos:line="115" pos:column="47">=<pos:position pos:line="115" pos:column="48"/></operator> <name pos:line="115" pos:column="49">True<pos:position pos:line="115" pos:column="53"/></name></expr>;<pos:position pos:line="115" pos:column="54"/></expr_stmt>
			<break pos:line="116" pos:column="25">break;<pos:position pos:line="116" pos:column="31"/></break>
		<case pos:line="117" pos:column="17">case <expr><literal type="char" pos:line="117" pos:column="22">'!'<pos:position pos:line="117" pos:column="25"/></literal></expr>:<pos:position pos:line="117" pos:column="26"/></case>
			<expr_stmt><expr><name><name pos:line="118" pos:column="25">rule<pos:position pos:line="118" pos:column="29"/></name><operator pos:line="118" pos:column="29">-&gt;<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="31">rflags<pos:position pos:line="118" pos:column="37"/></name></name> <operator pos:line="118" pos:column="38">|=<pos:position pos:line="118" pos:column="40"/></operator> <name pos:line="118" pos:column="41">FILTRULE_CLEAR_LIST<pos:position pos:line="118" pos:column="60"/></name></expr>;<pos:position pos:line="118" pos:column="61"/></expr_stmt>
			<break pos:line="119" pos:column="25">break;<pos:position pos:line="119" pos:column="31"/></break>
		<default pos:line="120" pos:column="17">default:<pos:position pos:line="120" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="121" pos:column="25">rprintf<pos:position pos:line="121" pos:column="32"/></name><argument_list pos:line="121" pos:column="32">(<argument><expr><name pos:line="121" pos:column="33">FERROR<pos:position pos:line="121" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="41">"Unknown filter rule: `%s'\n"<pos:position pos:line="121" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="121" pos:column="72">*<pos:position pos:line="121" pos:column="73"/></operator><name pos:line="121" pos:column="73">rulestr_ptr<pos:position pos:line="121" pos:column="84"/></name></expr></argument>)<pos:position pos:line="121" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="86"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="122" pos:column="25">exit_cleanup<pos:position pos:line="122" pos:column="37"/></name><argument_list pos:line="122" pos:column="37">(<argument><expr><name pos:line="122" pos:column="38">RERR_SYNTAX<pos:position pos:line="122" pos:column="49"/></name></expr></argument>)<pos:position pos:line="122" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="123" pos:column="18"/></block></switch>
		<while pos:line="124" pos:column="17">while <condition pos:line="124" pos:column="23">(<expr><name pos:line="124" pos:column="24">ch<pos:position pos:line="124" pos:column="26"/></name> <operator pos:line="124" pos:column="27">!=<pos:position pos:line="124" pos:column="29"/></operator> <literal type="char" pos:line="124" pos:column="30">'!'<pos:position pos:line="124" pos:column="33"/></literal> <operator pos:line="124" pos:column="34">&amp;&amp;<pos:position pos:line="124" pos:column="44"/></operator> <operator pos:line="124" pos:column="37">*<pos:position pos:line="124" pos:column="38"/></operator><operator pos:line="124" pos:column="38">++<pos:position pos:line="124" pos:column="40"/></operator><name pos:line="124" pos:column="40">s<pos:position pos:line="124" pos:column="41"/></name> <operator pos:line="124" pos:column="42">&amp;&amp;<pos:position pos:line="124" pos:column="52"/></operator> <operator pos:line="124" pos:column="45">*<pos:position pos:line="124" pos:column="46"/></operator><name pos:line="124" pos:column="46">s<pos:position pos:line="124" pos:column="47"/></name> <operator pos:line="124" pos:column="48">!=<pos:position pos:line="124" pos:column="50"/></operator> <literal type="char" pos:line="124" pos:column="51">' '<pos:position pos:line="124" pos:column="54"/></literal> <operator pos:line="124" pos:column="55">&amp;&amp;<pos:position pos:line="124" pos:column="65"/></operator> <operator pos:line="124" pos:column="58">*<pos:position pos:line="124" pos:column="59"/></operator><name pos:line="124" pos:column="59">s<pos:position pos:line="124" pos:column="60"/></name> <operator pos:line="124" pos:column="61">!=<pos:position pos:line="124" pos:column="63"/></operator> <literal type="char" pos:line="124" pos:column="64">'_'<pos:position pos:line="124" pos:column="67"/></literal></expr>)<pos:position pos:line="124" pos:column="68"/></condition> <block pos:line="124" pos:column="69">{
			<if pos:line="125" pos:column="25">if <condition pos:line="125" pos:column="28">(<pos:position pos:line="125" pos:column="29"/></condition></if><template pos:line="125" pos:column="29">template-&gt;<parameter><type><name pos:line="125" pos:column="39">rflags<pos:position pos:line="125" pos:column="45"/></name> <modifier pos:line="125" pos:column="46">&amp;<pos:position pos:line="125" pos:column="51"/></modifier> <name pos:line="125" pos:column="48">FILTRULE_WORD_SPLIT<pos:position pos:line="125" pos:column="67"/></name> <modifier pos:line="125" pos:column="68">&amp;&amp;<pos:position pos:line="125" pos:column="78"/></modifier></type> <name pos:line="125" pos:column="71">isspace<pos:position pos:line="125" pos:column="78"/></name><argument_list pos:line="125" pos:column="78">(<argument><expr><operator pos:line="125" pos:column="79">*<pos:position pos:line="125" pos:column="80"/></operator><name pos:line="125" pos:column="80">s<pos:position pos:line="125" pos:column="81"/></name></expr></argument>)<pos:position pos:line="125" pos:column="82"/></argument_list></parameter>) <block pos:line="125" pos:column="84">{
				<expr_stmt><expr><name pos:line="126" pos:column="33">s<pos:position pos:line="126" pos:column="34"/></name><operator pos:line="126" pos:column="34">--<pos:position pos:line="126" pos:column="36"/></operator></expr>;<pos:position pos:line="126" pos:column="37"/></expr_stmt>
				<break pos:line="127" pos:column="33">break;<pos:position pos:line="127" pos:column="39"/></break>
			}<pos:position pos:line="128" pos:column="26"/></block></template>
			<switch pos:line="129" pos:column="25">switch <condition pos:line="129" pos:column="32">(<expr><operator pos:line="129" pos:column="33">*<pos:position pos:line="129" pos:column="34"/></operator><name pos:line="129" pos:column="34">s<pos:position pos:line="129" pos:column="35"/></name></expr>)<pos:position pos:line="129" pos:column="36"/></condition> <block pos:line="129" pos:column="37">{
			<default pos:line="130" pos:column="25">default:<pos:position pos:line="130" pos:column="33"/></default>
			    <label><name pos:line="131" pos:column="29">invalid<pos:position pos:line="131" pos:column="36"/></name>:<pos:position pos:line="131" pos:column="37"/></label>
				<expr_stmt><expr><call><name pos:line="132" pos:column="33">rprintf<pos:position pos:line="132" pos:column="40"/></name><argument_list pos:line="132" pos:column="40">(<argument><expr><name pos:line="132" pos:column="41">FERROR<pos:position pos:line="132" pos:column="47"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="133" pos:column="41">"invalid modifier '%c' at position %d in filter rule: %s\n"<pos:position pos:line="133" pos:column="100"/></literal></expr></argument>,
					<argument><expr><operator pos:line="134" pos:column="41">*<pos:position pos:line="134" pos:column="42"/></operator><name pos:line="134" pos:column="42">s<pos:position pos:line="134" pos:column="43"/></name></expr></argument>, <argument><expr><call pos:line="134" pos:column="45">(<name pos:line="134" pos:column="46">int<pos:position pos:line="134" pos:column="49"/></name>)<argument_list pos:line="134" pos:column="50">(<argument><expr><name pos:line="134" pos:column="51">s<pos:position pos:line="134" pos:column="52"/></name> <operator pos:line="134" pos:column="53">-<pos:position pos:line="134" pos:column="54"/></operator> <operator pos:line="134" pos:column="55">(<pos:position pos:line="134" pos:column="56"/></operator><specifier pos:line="134" pos:column="56">const<pos:position pos:line="134" pos:column="61"/></specifier> <name pos:line="134" pos:column="62">uchar<pos:position pos:line="134" pos:column="67"/></name> <operator pos:line="134" pos:column="68">*<pos:position pos:line="134" pos:column="69"/></operator><operator pos:line="134" pos:column="69">)<pos:position pos:line="134" pos:column="70"/></operator><operator pos:line="134" pos:column="70">*<pos:position pos:line="134" pos:column="71"/></operator><name pos:line="134" pos:column="71">rulestr_ptr<pos:position pos:line="134" pos:column="82"/></name></expr></argument>)<pos:position pos:line="134" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="134" pos:column="85">*<pos:position pos:line="134" pos:column="86"/></operator><name pos:line="134" pos:column="86">rulestr_ptr<pos:position pos:line="134" pos:column="97"/></name></expr></argument>)<pos:position pos:line="134" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="99"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="135" pos:column="33">exit_cleanup<pos:position pos:line="135" pos:column="45"/></name><argument_list pos:line="135" pos:column="45">(<argument><expr><name pos:line="135" pos:column="46">RERR_SYNTAX<pos:position pos:line="135" pos:column="57"/></name></expr></argument>)<pos:position pos:line="135" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="59"/></expr_stmt>
			<case pos:line="136" pos:column="25">case <expr><literal type="char" pos:line="136" pos:column="30">'-'<pos:position pos:line="136" pos:column="33"/></literal></expr>:<pos:position pos:line="136" pos:column="34"/></case>
				<if pos:line="137" pos:column="33">if <condition pos:line="137" pos:column="36">(<expr><operator pos:line="137" pos:column="37">!<pos:position pos:line="137" pos:column="38"/></operator><call><name pos:line="137" pos:column="38">BITS_SETnUNSET<pos:position pos:line="137" pos:column="52"/></name><argument_list pos:line="137" pos:column="52">(<argument><expr><name><name pos:line="137" pos:column="53">rule<pos:position pos:line="137" pos:column="57"/></name><operator pos:line="137" pos:column="57">-&gt;<pos:position pos:line="137" pos:column="62"/></operator><name pos:line="137" pos:column="59">rflags<pos:position pos:line="137" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="67">FILTRULE_MERGE_FILE<pos:position pos:line="137" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="88">FILTRULE_NO_PREFIXES<pos:position pos:line="137" pos:column="108"/></name></expr></argument>)<pos:position pos:line="137" pos:column="109"/></argument_list></call></expr>)<pos:position pos:line="137" pos:column="110"/></condition><then pos:line="137" pos:column="110">
					<block type="pseudo"><goto pos:line="138" pos:column="41">goto <name pos:line="138" pos:column="46">invalid<pos:position pos:line="138" pos:column="53"/></name>;<pos:position pos:line="138" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="139" pos:column="33">rule<pos:position pos:line="139" pos:column="37"/></name><operator pos:line="139" pos:column="37">-&gt;<pos:position pos:line="139" pos:column="42"/></operator><name pos:line="139" pos:column="39">rflags<pos:position pos:line="139" pos:column="45"/></name></name> <operator pos:line="139" pos:column="46">|=<pos:position pos:line="139" pos:column="48"/></operator> <name pos:line="139" pos:column="49">FILTRULE_NO_PREFIXES<pos:position pos:line="139" pos:column="69"/></name></expr>;<pos:position pos:line="139" pos:column="70"/></expr_stmt>
				<break pos:line="140" pos:column="33">break;<pos:position pos:line="140" pos:column="39"/></break>
			<case pos:line="141" pos:column="25">case <expr><literal type="char" pos:line="141" pos:column="30">'+'<pos:position pos:line="141" pos:column="33"/></literal></expr>:<pos:position pos:line="141" pos:column="34"/></case>
				<if pos:line="142" pos:column="33">if <condition pos:line="142" pos:column="36">(<expr><operator pos:line="142" pos:column="37">!<pos:position pos:line="142" pos:column="38"/></operator><call><name pos:line="142" pos:column="38">BITS_SETnUNSET<pos:position pos:line="142" pos:column="52"/></name><argument_list pos:line="142" pos:column="52">(<argument><expr><name><name pos:line="142" pos:column="53">rule<pos:position pos:line="142" pos:column="57"/></name><operator pos:line="142" pos:column="57">-&gt;<pos:position pos:line="142" pos:column="62"/></operator><name pos:line="142" pos:column="59">rflags<pos:position pos:line="142" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="67">FILTRULE_MERGE_FILE<pos:position pos:line="142" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="88">FILTRULE_NO_PREFIXES<pos:position pos:line="142" pos:column="108"/></name></expr></argument>)<pos:position pos:line="142" pos:column="109"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="110"/></condition><then pos:line="142" pos:column="110">
					<block type="pseudo"><goto pos:line="143" pos:column="41">goto <name pos:line="143" pos:column="46">invalid<pos:position pos:line="143" pos:column="53"/></name>;<pos:position pos:line="143" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="144" pos:column="33">rule<pos:position pos:line="144" pos:column="37"/></name><operator pos:line="144" pos:column="37">-&gt;<pos:position pos:line="144" pos:column="42"/></operator><name pos:line="144" pos:column="39">rflags<pos:position pos:line="144" pos:column="45"/></name></name> <operator pos:line="144" pos:column="46">|=<pos:position pos:line="144" pos:column="48"/></operator> <name pos:line="144" pos:column="49">FILTRULE_NO_PREFIXES<pos:position pos:line="144" pos:column="69"/></name>
					      <operator pos:line="145" pos:column="47">|<pos:position pos:line="145" pos:column="48"/></operator> <name pos:line="145" pos:column="49">FILTRULE_INCLUDE<pos:position pos:line="145" pos:column="65"/></name></expr>;<pos:position pos:line="145" pos:column="66"/></expr_stmt>
				<break pos:line="146" pos:column="33">break;<pos:position pos:line="146" pos:column="39"/></break>
			<case pos:line="147" pos:column="25">case <expr><literal type="char" pos:line="147" pos:column="30">'/'<pos:position pos:line="147" pos:column="33"/></literal></expr>:<pos:position pos:line="147" pos:column="34"/></case>
				<expr_stmt><expr><name><name pos:line="148" pos:column="33">rule<pos:position pos:line="148" pos:column="37"/></name><operator pos:line="148" pos:column="37">-&gt;<pos:position pos:line="148" pos:column="42"/></operator><name pos:line="148" pos:column="39">rflags<pos:position pos:line="148" pos:column="45"/></name></name> <operator pos:line="148" pos:column="46">|=<pos:position pos:line="148" pos:column="48"/></operator> <name pos:line="148" pos:column="49">FILTRULE_ABS_PATH<pos:position pos:line="148" pos:column="66"/></name></expr>;<pos:position pos:line="148" pos:column="67"/></expr_stmt>
				<break pos:line="149" pos:column="33">break;<pos:position pos:line="149" pos:column="39"/></break>
			<case pos:line="150" pos:column="25">case <expr><literal type="char" pos:line="150" pos:column="30">'!'<pos:position pos:line="150" pos:column="33"/></literal></expr>:<pos:position pos:line="150" pos:column="34"/></case>
				<comment type="block" pos:line="151" pos:column="33">/* Negation really goes with the pattern, so it
				 * isn't useful as a merge-file default. */</comment>
				<if pos:line="153" pos:column="33">if <condition pos:line="153" pos:column="36">(<expr><name><name pos:line="153" pos:column="37">rule<pos:position pos:line="153" pos:column="41"/></name><operator pos:line="153" pos:column="41">-&gt;<pos:position pos:line="153" pos:column="46"/></operator><name pos:line="153" pos:column="43">rflags<pos:position pos:line="153" pos:column="49"/></name></name> <operator pos:line="153" pos:column="50">&amp;<pos:position pos:line="153" pos:column="55"/></operator> <name pos:line="153" pos:column="52">FILTRULE_MERGE_FILE<pos:position pos:line="153" pos:column="71"/></name></expr>)<pos:position pos:line="153" pos:column="72"/></condition><then pos:line="153" pos:column="72">
					<block type="pseudo"><goto pos:line="154" pos:column="41">goto <name pos:line="154" pos:column="46">invalid<pos:position pos:line="154" pos:column="53"/></name>;<pos:position pos:line="154" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="155" pos:column="33">rule<pos:position pos:line="155" pos:column="37"/></name><operator pos:line="155" pos:column="37">-&gt;<pos:position pos:line="155" pos:column="42"/></operator><name pos:line="155" pos:column="39">rflags<pos:position pos:line="155" pos:column="45"/></name></name> <operator pos:line="155" pos:column="46">|=<pos:position pos:line="155" pos:column="48"/></operator> <name pos:line="155" pos:column="49">FILTRULE_NEGATE<pos:position pos:line="155" pos:column="64"/></name></expr>;<pos:position pos:line="155" pos:column="65"/></expr_stmt>
				<break pos:line="156" pos:column="33">break;<pos:position pos:line="156" pos:column="39"/></break>
			<case pos:line="157" pos:column="25">case <expr><literal type="char" pos:line="157" pos:column="30">'C'<pos:position pos:line="157" pos:column="33"/></literal></expr>:<pos:position pos:line="157" pos:column="34"/></case>
				<if pos:line="158" pos:column="33">if <condition pos:line="158" pos:column="36">(<expr><name><name pos:line="158" pos:column="37">rule<pos:position pos:line="158" pos:column="41"/></name><operator pos:line="158" pos:column="41">-&gt;<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="43">rflags<pos:position pos:line="158" pos:column="49"/></name></name> <operator pos:line="158" pos:column="50">&amp;<pos:position pos:line="158" pos:column="55"/></operator> <name pos:line="158" pos:column="52">FILTRULE_NO_PREFIXES<pos:position pos:line="158" pos:column="72"/></name> <operator pos:line="158" pos:column="73">||<pos:position pos:line="158" pos:column="75"/></operator> <name pos:line="158" pos:column="76">prefix_specifies_side<pos:position pos:line="158" pos:column="97"/></name></expr>)<pos:position pos:line="158" pos:column="98"/></condition><then pos:line="158" pos:column="98">
					<block type="pseudo"><goto pos:line="159" pos:column="41">goto <name pos:line="159" pos:column="46">invalid<pos:position pos:line="159" pos:column="53"/></name>;<pos:position pos:line="159" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="160" pos:column="33">rule<pos:position pos:line="160" pos:column="37"/></name><operator pos:line="160" pos:column="37">-&gt;<pos:position pos:line="160" pos:column="42"/></operator><name pos:line="160" pos:column="39">rflags<pos:position pos:line="160" pos:column="45"/></name></name> <operator pos:line="160" pos:column="46">|=<pos:position pos:line="160" pos:column="48"/></operator> <name pos:line="160" pos:column="49">FILTRULE_NO_PREFIXES<pos:position pos:line="160" pos:column="69"/></name>
					      <operator pos:line="161" pos:column="47">|<pos:position pos:line="161" pos:column="48"/></operator> <name pos:line="161" pos:column="49">FILTRULE_WORD_SPLIT<pos:position pos:line="161" pos:column="68"/></name>
					      <operator pos:line="162" pos:column="47">|<pos:position pos:line="162" pos:column="48"/></operator> <name pos:line="162" pos:column="49">FILTRULE_NO_INHERIT<pos:position pos:line="162" pos:column="68"/></name>
					      <operator pos:line="163" pos:column="47">|<pos:position pos:line="163" pos:column="48"/></operator> <name pos:line="163" pos:column="49">FILTRULE_CVS_IGNORE<pos:position pos:line="163" pos:column="68"/></name></expr>;<pos:position pos:line="163" pos:column="69"/></expr_stmt>
				<break pos:line="164" pos:column="33">break;<pos:position pos:line="164" pos:column="39"/></break>
			<case pos:line="165" pos:column="25">case <expr><literal type="char" pos:line="165" pos:column="30">'e'<pos:position pos:line="165" pos:column="33"/></literal></expr>:<pos:position pos:line="165" pos:column="34"/></case>
				<if pos:line="166" pos:column="33">if <condition pos:line="166" pos:column="36">(<expr><operator pos:line="166" pos:column="37">!<pos:position pos:line="166" pos:column="38"/></operator><operator pos:line="166" pos:column="38">(<pos:position pos:line="166" pos:column="39"/></operator><name><name pos:line="166" pos:column="39">rule<pos:position pos:line="166" pos:column="43"/></name><operator pos:line="166" pos:column="43">-&gt;<pos:position pos:line="166" pos:column="48"/></operator><name pos:line="166" pos:column="45">rflags<pos:position pos:line="166" pos:column="51"/></name></name> <operator pos:line="166" pos:column="52">&amp;<pos:position pos:line="166" pos:column="57"/></operator> <name pos:line="166" pos:column="54">FILTRULE_MERGE_FILE<pos:position pos:line="166" pos:column="73"/></name><operator pos:line="166" pos:column="73">)<pos:position pos:line="166" pos:column="74"/></operator></expr>)<pos:position pos:line="166" pos:column="75"/></condition><then pos:line="166" pos:column="75">
					<block type="pseudo"><goto pos:line="167" pos:column="41">goto <name pos:line="167" pos:column="46">invalid<pos:position pos:line="167" pos:column="53"/></name>;<pos:position pos:line="167" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="168" pos:column="33">rule<pos:position pos:line="168" pos:column="37"/></name><operator pos:line="168" pos:column="37">-&gt;<pos:position pos:line="168" pos:column="42"/></operator><name pos:line="168" pos:column="39">rflags<pos:position pos:line="168" pos:column="45"/></name></name> <operator pos:line="168" pos:column="46">|=<pos:position pos:line="168" pos:column="48"/></operator> <name pos:line="168" pos:column="49">FILTRULE_EXCLUDE_SELF<pos:position pos:line="168" pos:column="70"/></name></expr>;<pos:position pos:line="168" pos:column="71"/></expr_stmt>
				<break pos:line="169" pos:column="33">break;<pos:position pos:line="169" pos:column="39"/></break>
			<case pos:line="170" pos:column="25">case <expr><literal type="char" pos:line="170" pos:column="30">'n'<pos:position pos:line="170" pos:column="33"/></literal></expr>:<pos:position pos:line="170" pos:column="34"/></case>
				<if pos:line="171" pos:column="33">if <condition pos:line="171" pos:column="36">(<expr><operator pos:line="171" pos:column="37">!<pos:position pos:line="171" pos:column="38"/></operator><operator pos:line="171" pos:column="38">(<pos:position pos:line="171" pos:column="39"/></operator><name><name pos:line="171" pos:column="39">rule<pos:position pos:line="171" pos:column="43"/></name><operator pos:line="171" pos:column="43">-&gt;<pos:position pos:line="171" pos:column="48"/></operator><name pos:line="171" pos:column="45">rflags<pos:position pos:line="171" pos:column="51"/></name></name> <operator pos:line="171" pos:column="52">&amp;<pos:position pos:line="171" pos:column="57"/></operator> <name pos:line="171" pos:column="54">FILTRULE_MERGE_FILE<pos:position pos:line="171" pos:column="73"/></name><operator pos:line="171" pos:column="73">)<pos:position pos:line="171" pos:column="74"/></operator></expr>)<pos:position pos:line="171" pos:column="75"/></condition><then pos:line="171" pos:column="75">
					<block type="pseudo"><goto pos:line="172" pos:column="41">goto <name pos:line="172" pos:column="46">invalid<pos:position pos:line="172" pos:column="53"/></name>;<pos:position pos:line="172" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="173" pos:column="33">rule<pos:position pos:line="173" pos:column="37"/></name><operator pos:line="173" pos:column="37">-&gt;<pos:position pos:line="173" pos:column="42"/></operator><name pos:line="173" pos:column="39">rflags<pos:position pos:line="173" pos:column="45"/></name></name> <operator pos:line="173" pos:column="46">|=<pos:position pos:line="173" pos:column="48"/></operator> <name pos:line="173" pos:column="49">FILTRULE_NO_INHERIT<pos:position pos:line="173" pos:column="68"/></name></expr>;<pos:position pos:line="173" pos:column="69"/></expr_stmt>
				<break pos:line="174" pos:column="33">break;<pos:position pos:line="174" pos:column="39"/></break>
			<case pos:line="175" pos:column="25">case <expr><literal type="char" pos:line="175" pos:column="30">'p'<pos:position pos:line="175" pos:column="33"/></literal></expr>:<pos:position pos:line="175" pos:column="34"/></case>
				<expr_stmt><expr><name><name pos:line="176" pos:column="33">rule<pos:position pos:line="176" pos:column="37"/></name><operator pos:line="176" pos:column="37">-&gt;<pos:position pos:line="176" pos:column="42"/></operator><name pos:line="176" pos:column="39">rflags<pos:position pos:line="176" pos:column="45"/></name></name> <operator pos:line="176" pos:column="46">|=<pos:position pos:line="176" pos:column="48"/></operator> <name pos:line="176" pos:column="49">FILTRULE_PERISHABLE<pos:position pos:line="176" pos:column="68"/></name></expr>;<pos:position pos:line="176" pos:column="69"/></expr_stmt>
				<break pos:line="177" pos:column="33">break;<pos:position pos:line="177" pos:column="39"/></break>
			<case pos:line="178" pos:column="25">case <expr><literal type="char" pos:line="178" pos:column="30">'r'<pos:position pos:line="178" pos:column="33"/></literal></expr>:<pos:position pos:line="178" pos:column="34"/></case>
				<if pos:line="179" pos:column="33">if <condition pos:line="179" pos:column="36">(<expr><name pos:line="179" pos:column="37">prefix_specifies_side<pos:position pos:line="179" pos:column="58"/></name></expr>)<pos:position pos:line="179" pos:column="59"/></condition><then pos:line="179" pos:column="59">
					<block type="pseudo"><goto pos:line="180" pos:column="41">goto <name pos:line="180" pos:column="46">invalid<pos:position pos:line="180" pos:column="53"/></name>;<pos:position pos:line="180" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="181" pos:column="33">rule<pos:position pos:line="181" pos:column="37"/></name><operator pos:line="181" pos:column="37">-&gt;<pos:position pos:line="181" pos:column="42"/></operator><name pos:line="181" pos:column="39">rflags<pos:position pos:line="181" pos:column="45"/></name></name> <operator pos:line="181" pos:column="46">|=<pos:position pos:line="181" pos:column="48"/></operator> <name pos:line="181" pos:column="49">FILTRULE_RECEIVER_SIDE<pos:position pos:line="181" pos:column="71"/></name></expr>;<pos:position pos:line="181" pos:column="72"/></expr_stmt>
				<break pos:line="182" pos:column="33">break;<pos:position pos:line="182" pos:column="39"/></break>
			<case pos:line="183" pos:column="25">case <expr><literal type="char" pos:line="183" pos:column="30">'s'<pos:position pos:line="183" pos:column="33"/></literal></expr>:<pos:position pos:line="183" pos:column="34"/></case>
				<if pos:line="184" pos:column="33">if <condition pos:line="184" pos:column="36">(<expr><name pos:line="184" pos:column="37">prefix_specifies_side<pos:position pos:line="184" pos:column="58"/></name></expr>)<pos:position pos:line="184" pos:column="59"/></condition><then pos:line="184" pos:column="59">
					<block type="pseudo"><goto pos:line="185" pos:column="41">goto <name pos:line="185" pos:column="46">invalid<pos:position pos:line="185" pos:column="53"/></name>;<pos:position pos:line="185" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="186" pos:column="33">rule<pos:position pos:line="186" pos:column="37"/></name><operator pos:line="186" pos:column="37">-&gt;<pos:position pos:line="186" pos:column="42"/></operator><name pos:line="186" pos:column="39">rflags<pos:position pos:line="186" pos:column="45"/></name></name> <operator pos:line="186" pos:column="46">|=<pos:position pos:line="186" pos:column="48"/></operator> <name pos:line="186" pos:column="49">FILTRULE_SENDER_SIDE<pos:position pos:line="186" pos:column="69"/></name></expr>;<pos:position pos:line="186" pos:column="70"/></expr_stmt>
				<break pos:line="187" pos:column="33">break;<pos:position pos:line="187" pos:column="39"/></break>
			<case pos:line="188" pos:column="25">case <expr><literal type="char" pos:line="188" pos:column="30">'w'<pos:position pos:line="188" pos:column="33"/></literal></expr>:<pos:position pos:line="188" pos:column="34"/></case>
				<if pos:line="189" pos:column="33">if <condition pos:line="189" pos:column="36">(<expr><operator pos:line="189" pos:column="37">!<pos:position pos:line="189" pos:column="38"/></operator><operator pos:line="189" pos:column="38">(<pos:position pos:line="189" pos:column="39"/></operator><name><name pos:line="189" pos:column="39">rule<pos:position pos:line="189" pos:column="43"/></name><operator pos:line="189" pos:column="43">-&gt;<pos:position pos:line="189" pos:column="48"/></operator><name pos:line="189" pos:column="45">rflags<pos:position pos:line="189" pos:column="51"/></name></name> <operator pos:line="189" pos:column="52">&amp;<pos:position pos:line="189" pos:column="57"/></operator> <name pos:line="189" pos:column="54">FILTRULE_MERGE_FILE<pos:position pos:line="189" pos:column="73"/></name><operator pos:line="189" pos:column="73">)<pos:position pos:line="189" pos:column="74"/></operator></expr>)<pos:position pos:line="189" pos:column="75"/></condition><then pos:line="189" pos:column="75">
					<block type="pseudo"><goto pos:line="190" pos:column="41">goto <name pos:line="190" pos:column="46">invalid<pos:position pos:line="190" pos:column="53"/></name>;<pos:position pos:line="190" pos:column="54"/></goto></block></then></if>
				<expr_stmt><expr><name><name pos:line="191" pos:column="33">rule<pos:position pos:line="191" pos:column="37"/></name><operator pos:line="191" pos:column="37">-&gt;<pos:position pos:line="191" pos:column="42"/></operator><name pos:line="191" pos:column="39">rflags<pos:position pos:line="191" pos:column="45"/></name></name> <operator pos:line="191" pos:column="46">|=<pos:position pos:line="191" pos:column="48"/></operator> <name pos:line="191" pos:column="49">FILTRULE_WORD_SPLIT<pos:position pos:line="191" pos:column="68"/></name></expr>;<pos:position pos:line="191" pos:column="69"/></expr_stmt>
				<break pos:line="192" pos:column="33">break;<pos:position pos:line="192" pos:column="39"/></break>
			}<pos:position pos:line="193" pos:column="26"/></block></switch>
		}<pos:position pos:line="194" pos:column="18"/></block></while>
		<if pos:line="195" pos:column="17">if <condition pos:line="195" pos:column="20">(<expr><operator pos:line="195" pos:column="21">*<pos:position pos:line="195" pos:column="22"/></operator><name pos:line="195" pos:column="22">s<pos:position pos:line="195" pos:column="23"/></name></expr>)<pos:position pos:line="195" pos:column="24"/></condition><then pos:line="195" pos:column="24">
			<block type="pseudo"><expr_stmt><expr><name pos:line="196" pos:column="25">s<pos:position pos:line="196" pos:column="26"/></name><operator pos:line="196" pos:column="26">++<pos:position pos:line="196" pos:column="28"/></operator></expr>;<pos:position pos:line="196" pos:column="29"/></expr_stmt></block></then></if>
	}<pos:position pos:line="197" pos:column="10"/></block></else>
	<if pos:line="198" pos:column="9">if <condition pos:line="198" pos:column="12">(<pos:position pos:line="198" pos:column="13"/></condition></if><template pos:line="198" pos:column="13">template-&gt;<parameter><type><name pos:line="198" pos:column="23">rflags<pos:position pos:line="198" pos:column="29"/></name> <modifier pos:line="198" pos:column="30">&amp;<pos:position pos:line="198" pos:column="35"/></modifier></type> <name pos:line="198" pos:column="32">FILTRULES_SIDES<pos:position pos:line="198" pos:column="47"/></name></parameter>) <block pos:line="198" pos:column="49">{
		<if pos:line="199" pos:column="17">if <condition pos:line="199" pos:column="20">(<expr><name><name pos:line="199" pos:column="21">rule<pos:position pos:line="199" pos:column="25"/></name><operator pos:line="199" pos:column="25">-&gt;<pos:position pos:line="199" pos:column="30"/></operator><name pos:line="199" pos:column="27">rflags<pos:position pos:line="199" pos:column="33"/></name></name> <operator pos:line="199" pos:column="34">&amp;<pos:position pos:line="199" pos:column="39"/></operator> <name pos:line="199" pos:column="36">FILTRULES_SIDES<pos:position pos:line="199" pos:column="51"/></name></expr>)<pos:position pos:line="199" pos:column="52"/></condition><then pos:line="199" pos:column="52"> <block pos:line="199" pos:column="53">{
			<comment type="block" pos:line="200" pos:column="25">/* The filter and template both specify side(s).  This
			 * is dodgy (and won't work correctly if the template is
			 * a one-sided per-dir merge rule), so reject it. */</comment>
			<expr_stmt><expr><call><name pos:line="203" pos:column="25">rprintf<pos:position pos:line="203" pos:column="32"/></name><argument_list pos:line="203" pos:column="32">(<argument><expr><name pos:line="203" pos:column="33">FERROR<pos:position pos:line="203" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="204" pos:column="33">"specified-side merge file contains specified-side filter: %s\n"<pos:position pos:line="204" pos:column="97"/></literal></expr></argument>,
				<argument><expr><operator pos:line="205" pos:column="33">*<pos:position pos:line="205" pos:column="34"/></operator><name pos:line="205" pos:column="34">rulestr_ptr<pos:position pos:line="205" pos:column="45"/></name></expr></argument>)<pos:position pos:line="205" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="206" pos:column="25">exit_cleanup<pos:position pos:line="206" pos:column="37"/></name><argument_list pos:line="206" pos:column="37">(<argument><expr><name pos:line="206" pos:column="38">RERR_SYNTAX<pos:position pos:line="206" pos:column="49"/></name></expr></argument>)<pos:position pos:line="206" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="207" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="208" pos:column="17">rule<pos:position pos:line="208" pos:column="21"/></name><operator pos:line="208" pos:column="21">-&gt;<pos:position pos:line="208" pos:column="26"/></operator><name pos:line="208" pos:column="23">rflags<pos:position pos:line="208" pos:column="29"/></name></name> <operator pos:line="208" pos:column="30">|=<pos:position pos:line="208" pos:column="32"/></operator></expr></expr_stmt> <template pos:line="208" pos:column="33">template-&gt;<parameter><type><name pos:line="208" pos:column="43">rflags<pos:position pos:line="208" pos:column="49"/></name> <modifier pos:line="208" pos:column="50">&amp;<pos:position pos:line="208" pos:column="55"/></modifier></type> <name pos:line="208" pos:column="52">FILTRULES_SIDES<pos:position pos:line="208" pos:column="67"/></name></parameter><empty_stmt pos:line="208" pos:column="67">;<pos:position pos:line="208" pos:column="68"/></empty_stmt></template>
	}<pos:position pos:line="209" pos:column="10"/></block></template>

	<if pos:line="211" pos:column="9">if <condition pos:line="211" pos:column="12">(<pos:position pos:line="211" pos:column="13"/></condition></if><template pos:line="211" pos:column="13">template-&gt;<parameter><type><name pos:line="211" pos:column="23">rflags<pos:position pos:line="211" pos:column="29"/></name> <modifier pos:line="211" pos:column="30">&amp;<pos:position pos:line="211" pos:column="35"/></modifier></type> <name pos:line="211" pos:column="32">FILTRULE_WORD_SPLIT<pos:position pos:line="211" pos:column="51"/></name></parameter>) <block pos:line="211" pos:column="53">{
		<decl_stmt><decl><type><specifier pos:line="212" pos:column="17">const<pos:position pos:line="212" pos:column="22"/></specifier> <name pos:line="212" pos:column="23">uchar<pos:position pos:line="212" pos:column="28"/></name> <modifier pos:line="212" pos:column="29">*<pos:position pos:line="212" pos:column="30"/></modifier></type><name pos:line="212" pos:column="30">cp<pos:position pos:line="212" pos:column="32"/></name> <init pos:line="212" pos:column="33">= <expr><name pos:line="212" pos:column="35">s<pos:position pos:line="212" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="212" pos:column="37"/></decl_stmt>
		<comment type="block" pos:line="213" pos:column="17">/* Token ends at whitespace or the end of the string. */</comment>
		<while pos:line="214" pos:column="17">while <condition pos:line="214" pos:column="23">(<expr><operator pos:line="214" pos:column="24">!<pos:position pos:line="214" pos:column="25"/></operator><call><name pos:line="214" pos:column="25">isspace<pos:position pos:line="214" pos:column="32"/></name><argument_list pos:line="214" pos:column="32">(<argument><expr><operator pos:line="214" pos:column="33">*<pos:position pos:line="214" pos:column="34"/></operator><name pos:line="214" pos:column="34">cp<pos:position pos:line="214" pos:column="36"/></name></expr></argument>)<pos:position pos:line="214" pos:column="37"/></argument_list></call> <operator pos:line="214" pos:column="38">&amp;&amp;<pos:position pos:line="214" pos:column="48"/></operator> <operator pos:line="214" pos:column="41">*<pos:position pos:line="214" pos:column="42"/></operator><name pos:line="214" pos:column="42">cp<pos:position pos:line="214" pos:column="44"/></name> <operator pos:line="214" pos:column="45">!=<pos:position pos:line="214" pos:column="47"/></operator> <literal type="char" pos:line="214" pos:column="48">'\0'<pos:position pos:line="214" pos:column="52"/></literal></expr>)<pos:position pos:line="214" pos:column="53"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="215" pos:column="25">cp<pos:position pos:line="215" pos:column="27"/></name><operator pos:line="215" pos:column="27">++<pos:position pos:line="215" pos:column="29"/></operator></expr>;<pos:position pos:line="215" pos:column="30"/></expr_stmt></block></while>
		<expr_stmt><expr><name pos:line="216" pos:column="17">len<pos:position pos:line="216" pos:column="20"/></name> <operator pos:line="216" pos:column="21">=<pos:position pos:line="216" pos:column="22"/></operator> <name pos:line="216" pos:column="23">cp<pos:position pos:line="216" pos:column="25"/></name> <operator pos:line="216" pos:column="26">-<pos:position pos:line="216" pos:column="27"/></operator> <name pos:line="216" pos:column="28">s<pos:position pos:line="216" pos:column="29"/></name></expr>;<pos:position pos:line="216" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="217" pos:column="10"/></block></template> <else pos:line="217" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="218" pos:column="17">len<pos:position pos:line="218" pos:column="20"/></name> <operator pos:line="218" pos:column="21">=<pos:position pos:line="218" pos:column="22"/></operator> <call><name pos:line="218" pos:column="23">strlen<pos:position pos:line="218" pos:column="29"/></name><argument_list pos:line="218" pos:column="29">(<argument><expr><operator pos:line="218" pos:column="30">(<pos:position pos:line="218" pos:column="31"/></operator><name pos:line="218" pos:column="31">char<pos:position pos:line="218" pos:column="35"/></name><operator pos:line="218" pos:column="35">*<pos:position pos:line="218" pos:column="36"/></operator><operator pos:line="218" pos:column="36">)<pos:position pos:line="218" pos:column="37"/></operator><name pos:line="218" pos:column="37">s<pos:position pos:line="218" pos:column="38"/></name></expr></argument>)<pos:position pos:line="218" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="40"/></expr_stmt></block></else>

	<if pos:line="220" pos:column="9">if <condition pos:line="220" pos:column="12">(<expr><name><name pos:line="220" pos:column="13">rule<pos:position pos:line="220" pos:column="17"/></name><operator pos:line="220" pos:column="17">-&gt;<pos:position pos:line="220" pos:column="22"/></operator><name pos:line="220" pos:column="19">rflags<pos:position pos:line="220" pos:column="25"/></name></name> <operator pos:line="220" pos:column="26">&amp;<pos:position pos:line="220" pos:column="31"/></operator> <name pos:line="220" pos:column="28">FILTRULE_CLEAR_LIST<pos:position pos:line="220" pos:column="47"/></name></expr>)<pos:position pos:line="220" pos:column="48"/></condition><then pos:line="220" pos:column="48"> <block pos:line="220" pos:column="49">{
		<if pos:line="221" pos:column="17">if <condition pos:line="221" pos:column="20">(<expr><operator pos:line="221" pos:column="21">!<pos:position pos:line="221" pos:column="22"/></operator><operator pos:line="221" pos:column="22">(<pos:position pos:line="221" pos:column="23"/></operator><name><name pos:line="221" pos:column="23">rule<pos:position pos:line="221" pos:column="27"/></name><operator pos:line="221" pos:column="27">-&gt;<pos:position pos:line="221" pos:column="32"/></operator><name pos:line="221" pos:column="29">rflags<pos:position pos:line="221" pos:column="35"/></name></name> <operator pos:line="221" pos:column="36">&amp;<pos:position pos:line="221" pos:column="41"/></operator> <name pos:line="221" pos:column="38">FILTRULE_NO_PREFIXES<pos:position pos:line="221" pos:column="58"/></name><operator pos:line="221" pos:column="58">)<pos:position pos:line="221" pos:column="59"/></operator>
		 <operator pos:line="222" pos:column="18">&amp;&amp;<pos:position pos:line="222" pos:column="28"/></operator> <operator pos:line="222" pos:column="21">!<pos:position pos:line="222" pos:column="22"/></operator><operator pos:line="222" pos:column="22">(<pos:position pos:line="222" pos:column="23"/></operator><name pos:line="222" pos:column="23">xflags<pos:position pos:line="222" pos:column="29"/></name> <operator pos:line="222" pos:column="30">&amp;<pos:position pos:line="222" pos:column="35"/></operator> <name pos:line="222" pos:column="32">XFLG_OLD_PREFIXES<pos:position pos:line="222" pos:column="49"/></name><operator pos:line="222" pos:column="49">)<pos:position pos:line="222" pos:column="50"/></operator> <operator pos:line="222" pos:column="51">&amp;&amp;<pos:position pos:line="222" pos:column="61"/></operator> <name pos:line="222" pos:column="54">len<pos:position pos:line="222" pos:column="57"/></name></expr>)<pos:position pos:line="222" pos:column="58"/></condition><then pos:line="222" pos:column="58"> <block pos:line="222" pos:column="59">{
			<expr_stmt><expr><call><name pos:line="223" pos:column="25">rprintf<pos:position pos:line="223" pos:column="32"/></name><argument_list pos:line="223" pos:column="32">(<argument><expr><name pos:line="223" pos:column="33">FERROR<pos:position pos:line="223" pos:column="39"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="224" pos:column="33">"'!' rule has trailing characters: %s\n"<pos:position pos:line="224" pos:column="73"/></literal></expr></argument>, <argument><expr><operator pos:line="224" pos:column="75">*<pos:position pos:line="224" pos:column="76"/></operator><name pos:line="224" pos:column="76">rulestr_ptr<pos:position pos:line="224" pos:column="87"/></name></expr></argument>)<pos:position pos:line="224" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="89"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="225" pos:column="25">exit_cleanup<pos:position pos:line="225" pos:column="37"/></name><argument_list pos:line="225" pos:column="37">(<argument><expr><name pos:line="225" pos:column="38">RERR_SYNTAX<pos:position pos:line="225" pos:column="49"/></name></expr></argument>)<pos:position pos:line="225" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="225" pos:column="51"/></expr_stmt>
		}<pos:position pos:line="226" pos:column="18"/></block></then></if>
		<if pos:line="227" pos:column="17">if <condition pos:line="227" pos:column="20">(<expr><name pos:line="227" pos:column="21">len<pos:position pos:line="227" pos:column="24"/></name> <operator pos:line="227" pos:column="25">&gt;<pos:position pos:line="227" pos:column="29"/></operator> <literal type="number" pos:line="227" pos:column="27">1<pos:position pos:line="227" pos:column="28"/></literal></expr>)<pos:position pos:line="227" pos:column="29"/></condition><then pos:line="227" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="228" pos:column="25">rule<pos:position pos:line="228" pos:column="29"/></name><operator pos:line="228" pos:column="29">-&gt;<pos:position pos:line="228" pos:column="34"/></operator><name pos:line="228" pos:column="31">rflags<pos:position pos:line="228" pos:column="37"/></name></name> <operator pos:line="228" pos:column="38">&amp;=<pos:position pos:line="228" pos:column="44"/></operator> <operator pos:line="228" pos:column="41">~<pos:position pos:line="228" pos:column="42"/></operator><name pos:line="228" pos:column="42">FILTRULE_CLEAR_LIST<pos:position pos:line="228" pos:column="61"/></name></expr>;<pos:position pos:line="228" pos:column="62"/></expr_stmt></block></then></if>
	}<pos:position pos:line="229" pos:column="10"/></block></then> <elseif pos:line="229" pos:column="11">else <if pos:line="229" pos:column="16">if <condition pos:line="229" pos:column="19">(<expr><operator pos:line="229" pos:column="20">!<pos:position pos:line="229" pos:column="21"/></operator><name pos:line="229" pos:column="21">len<pos:position pos:line="229" pos:column="24"/></name> <operator pos:line="229" pos:column="25">&amp;&amp;<pos:position pos:line="229" pos:column="35"/></operator> <operator pos:line="229" pos:column="28">!<pos:position pos:line="229" pos:column="29"/></operator><operator pos:line="229" pos:column="29">(<pos:position pos:line="229" pos:column="30"/></operator><name><name pos:line="229" pos:column="30">rule<pos:position pos:line="229" pos:column="34"/></name><operator pos:line="229" pos:column="34">-&gt;<pos:position pos:line="229" pos:column="39"/></operator><name pos:line="229" pos:column="36">rflags<pos:position pos:line="229" pos:column="42"/></name></name> <operator pos:line="229" pos:column="43">&amp;<pos:position pos:line="229" pos:column="48"/></operator> <name pos:line="229" pos:column="45">FILTRULE_CVS_IGNORE<pos:position pos:line="229" pos:column="64"/></name><operator pos:line="229" pos:column="64">)<pos:position pos:line="229" pos:column="65"/></operator></expr>)<pos:position pos:line="229" pos:column="66"/></condition><then pos:line="229" pos:column="66"> <block pos:line="229" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="230" pos:column="17">rprintf<pos:position pos:line="230" pos:column="24"/></name><argument_list pos:line="230" pos:column="24">(<argument><expr><name pos:line="230" pos:column="25">FERROR<pos:position pos:line="230" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="33">"unexpected end of filter rule: %s\n"<pos:position pos:line="230" pos:column="70"/></literal></expr></argument>, <argument><expr><operator pos:line="230" pos:column="72">*<pos:position pos:line="230" pos:column="73"/></operator><name pos:line="230" pos:column="73">rulestr_ptr<pos:position pos:line="230" pos:column="84"/></name></expr></argument>)<pos:position pos:line="230" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="86"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="231" pos:column="17">exit_cleanup<pos:position pos:line="231" pos:column="29"/></name><argument_list pos:line="231" pos:column="29">(<argument><expr><name pos:line="231" pos:column="30">RERR_SYNTAX<pos:position pos:line="231" pos:column="41"/></name></expr></argument>)<pos:position pos:line="231" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="232" pos:column="10"/></block></then></if></elseif></if>

	<comment type="block" pos:line="234" pos:column="9">/* --delete-excluded turns an un-modified include/exclude into a sender-side rule.  */</comment>
	<if pos:line="235" pos:column="9">if <condition pos:line="235" pos:column="12">(<expr><name pos:line="235" pos:column="13">delete_excluded<pos:position pos:line="235" pos:column="28"/></name>
	 <operator pos:line="236" pos:column="10">&amp;&amp;<pos:position pos:line="236" pos:column="20"/></operator> <operator pos:line="236" pos:column="13">!<pos:position pos:line="236" pos:column="14"/></operator><operator pos:line="236" pos:column="14">(<pos:position pos:line="236" pos:column="15"/></operator><name><name pos:line="236" pos:column="15">rule<pos:position pos:line="236" pos:column="19"/></name><operator pos:line="236" pos:column="19">-&gt;<pos:position pos:line="236" pos:column="24"/></operator><name pos:line="236" pos:column="21">rflags<pos:position pos:line="236" pos:column="27"/></name></name> <operator pos:line="236" pos:column="28">&amp;<pos:position pos:line="236" pos:column="33"/></operator> <operator pos:line="236" pos:column="30">(<pos:position pos:line="236" pos:column="31"/></operator><name pos:line="236" pos:column="31">FILTRULES_SIDES<pos:position pos:line="236" pos:column="46"/></name><operator pos:line="236" pos:column="46">|<pos:position pos:line="236" pos:column="47"/></operator><name pos:line="236" pos:column="47">FILTRULE_MERGE_FILE<pos:position pos:line="236" pos:column="66"/></name><operator pos:line="236" pos:column="66">|<pos:position pos:line="236" pos:column="67"/></operator><name pos:line="236" pos:column="67">FILTRULE_PERDIR_MERGE<pos:position pos:line="236" pos:column="88"/></name><operator pos:line="236" pos:column="88">)<pos:position pos:line="236" pos:column="89"/></operator><operator pos:line="236" pos:column="89">)<pos:position pos:line="236" pos:column="90"/></operator></expr>)<pos:position pos:line="236" pos:column="91"/></condition><then pos:line="236" pos:column="91">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="237" pos:column="17">rule<pos:position pos:line="237" pos:column="21"/></name><operator pos:line="237" pos:column="21">-&gt;<pos:position pos:line="237" pos:column="26"/></operator><name pos:line="237" pos:column="23">rflags<pos:position pos:line="237" pos:column="29"/></name></name> <operator pos:line="237" pos:column="30">|=<pos:position pos:line="237" pos:column="32"/></operator> <name pos:line="237" pos:column="33">FILTRULE_SENDER_SIDE<pos:position pos:line="237" pos:column="53"/></name></expr>;<pos:position pos:line="237" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><operator pos:line="239" pos:column="9">*<pos:position pos:line="239" pos:column="10"/></operator><name pos:line="239" pos:column="10">pat_ptr<pos:position pos:line="239" pos:column="17"/></name> <operator pos:line="239" pos:column="18">=<pos:position pos:line="239" pos:column="19"/></operator> <operator pos:line="239" pos:column="20">(<pos:position pos:line="239" pos:column="21"/></operator><specifier pos:line="239" pos:column="21">const<pos:position pos:line="239" pos:column="26"/></specifier> <name pos:line="239" pos:column="27">char<pos:position pos:line="239" pos:column="31"/></name> <operator pos:line="239" pos:column="32">*<pos:position pos:line="239" pos:column="33"/></operator><operator pos:line="239" pos:column="33">)<pos:position pos:line="239" pos:column="34"/></operator><name pos:line="239" pos:column="34">s<pos:position pos:line="239" pos:column="35"/></name></expr>;<pos:position pos:line="239" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="240" pos:column="9">*<pos:position pos:line="240" pos:column="10"/></operator><name pos:line="240" pos:column="10">pat_len_ptr<pos:position pos:line="240" pos:column="21"/></name> <operator pos:line="240" pos:column="22">=<pos:position pos:line="240" pos:column="23"/></operator> <name pos:line="240" pos:column="24">len<pos:position pos:line="240" pos:column="27"/></name></expr>;<pos:position pos:line="240" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="241" pos:column="9">*<pos:position pos:line="241" pos:column="10"/></operator><name pos:line="241" pos:column="10">rulestr_ptr<pos:position pos:line="241" pos:column="21"/></name> <operator pos:line="241" pos:column="22">=<pos:position pos:line="241" pos:column="23"/></operator> <operator pos:line="241" pos:column="24">*<pos:position pos:line="241" pos:column="25"/></operator><name pos:line="241" pos:column="25">pat_ptr<pos:position pos:line="241" pos:column="32"/></name> <operator pos:line="241" pos:column="33">+<pos:position pos:line="241" pos:column="34"/></operator> <name pos:line="241" pos:column="35">len<pos:position pos:line="241" pos:column="38"/></name></expr>;<pos:position pos:line="241" pos:column="39"/></expr_stmt>
	<return pos:line="242" pos:column="9">return <expr><name pos:line="242" pos:column="16">rule<pos:position pos:line="242" pos:column="20"/></name></expr>;<pos:position pos:line="242" pos:column="21"/></return>
}<pos:position pos:line="243" pos:column="2"/></block></function></unit>

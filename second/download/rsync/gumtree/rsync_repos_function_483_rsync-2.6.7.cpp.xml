<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_483_rsync-2.6.7.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">uInt<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">longest_match_fast<pos:position pos:line="1" pos:column="30"/></name><argument_list pos:line="1" pos:column="30">(<argument><expr><name pos:line="1" pos:column="31">s<pos:position pos:line="1" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="34">cur_match<pos:position pos:line="1" pos:column="43"/></name></expr></argument>)<pos:position pos:line="1" pos:column="44"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">IPos<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">cur_match<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>                             <comment type="block" pos:line="3" pos:column="49">/* current match */</comment>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">Bytef<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">scan<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name><name pos:line="5" pos:column="28">s<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">-&gt;<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="31">window<pos:position pos:line="5" pos:column="37"/></name></name> <operator pos:line="5" pos:column="38">+<pos:position pos:line="5" pos:column="39"/></operator> <name><name pos:line="5" pos:column="40">s<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">-&gt;<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="43">strstart<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt> <comment type="block" pos:line="5" pos:column="53">/* current string */</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">register<pos:position pos:line="6" pos:column="13"/></specifier> <name pos:line="6" pos:column="14">Bytef<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">match<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>                       <comment type="block" pos:line="6" pos:column="50">/* matched string */</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">register<pos:position pos:line="7" pos:column="13"/></specifier> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">len<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>                           <comment type="block" pos:line="7" pos:column="49">/* length of current match */</comment>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">register<pos:position pos:line="8" pos:column="13"/></specifier> <name pos:line="8" pos:column="14">Bytef<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">strend<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name><name pos:line="8" pos:column="30">s<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">-&gt;<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="33">window<pos:position pos:line="8" pos:column="39"/></name></name> <operator pos:line="8" pos:column="40">+<pos:position pos:line="8" pos:column="41"/></operator> <name><name pos:line="8" pos:column="42">s<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">-&gt;<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="45">strstart<pos:position pos:line="8" pos:column="53"/></name></name> <operator pos:line="8" pos:column="54">+<pos:position pos:line="8" pos:column="55"/></operator> <name pos:line="8" pos:column="56">MAX_MATCH<pos:position pos:line="8" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="66"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* The code is optimized for HASH_BITS &gt;= 8 and MAX_MATCH-2 multiple of 16.
     * It is easy to get rid of this optimization if necessary.
     */</comment>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">Assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">s<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">hash_bits<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">&gt;=<pos:position pos:line="13" pos:column="30"/></operator> <literal type="number" pos:line="13" pos:column="28">8<pos:position pos:line="13" pos:column="29"/></literal> <operator pos:line="13" pos:column="30">&amp;&amp;<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="33">MAX_MATCH<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">==<pos:position pos:line="13" pos:column="45"/></operator> <literal type="number" pos:line="13" pos:column="46">258<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="51">"Code too clever"<pos:position pos:line="13" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">Assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">ulg<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">)<pos:position pos:line="15" pos:column="17"/></operator><name><name pos:line="15" pos:column="17">s<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">strstart<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">&lt;=<pos:position pos:line="15" pos:column="34"/></operator> <name><name pos:line="15" pos:column="32">s<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">window_size<pos:position pos:line="15" pos:column="46"/></name></name><operator pos:line="15" pos:column="46">-<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">MIN_LOOKAHEAD<pos:position pos:line="15" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="62">"need lookahead"<pos:position pos:line="15" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">Assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">cur_match<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">&lt;<pos:position pos:line="17" pos:column="26"/></operator> <name><name pos:line="17" pos:column="24">s<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">strstart<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="37">"no future"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">match<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <name><name pos:line="19" pos:column="13">s<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">window<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">+<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">cur_match<pos:position pos:line="19" pos:column="34"/></name></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Return failure if the match length is less than 2:
     */</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">match<pos:position pos:line="23" pos:column="14"/></name><index pos:line="23" pos:column="14">[<expr><literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal></expr>]<pos:position pos:line="23" pos:column="17"/></index></name> <operator pos:line="23" pos:column="18">!=<pos:position pos:line="23" pos:column="20"/></operator> <name><name pos:line="23" pos:column="21">scan<pos:position pos:line="23" pos:column="25"/></name><index pos:line="23" pos:column="25">[<expr><literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr>]<pos:position pos:line="23" pos:column="28"/></index></name> <operator pos:line="23" pos:column="29">||<pos:position pos:line="23" pos:column="31"/></operator> <name><name pos:line="23" pos:column="32">match<pos:position pos:line="23" pos:column="37"/></name><index pos:line="23" pos:column="37">[<expr><literal type="number" pos:line="23" pos:column="38">1<pos:position pos:line="23" pos:column="39"/></literal></expr>]<pos:position pos:line="23" pos:column="40"/></index></name> <operator pos:line="23" pos:column="41">!=<pos:position pos:line="23" pos:column="43"/></operator> <name><name pos:line="23" pos:column="44">scan<pos:position pos:line="23" pos:column="48"/></name><index pos:line="23" pos:column="48">[<expr><literal type="number" pos:line="23" pos:column="49">1<pos:position pos:line="23" pos:column="50"/></literal></expr>]<pos:position pos:line="23" pos:column="51"/></index></name></expr>)<pos:position pos:line="23" pos:column="52"/></condition><then pos:line="23" pos:column="52"> <block type="pseudo"><return pos:line="23" pos:column="53">return <expr><name pos:line="23" pos:column="60">MIN_MATCH<pos:position pos:line="23" pos:column="69"/></name><operator pos:line="23" pos:column="69">-<pos:position pos:line="23" pos:column="70"/></operator><literal type="number" pos:line="23" pos:column="70">1<pos:position pos:line="23" pos:column="71"/></literal></expr>;<pos:position pos:line="23" pos:column="72"/></return></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS &gt;= 8.
     */</comment>
    <expr_stmt><expr><name pos:line="31" pos:column="5">scan<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">+=<pos:position pos:line="31" pos:column="12"/></operator> <literal type="number" pos:line="31" pos:column="13">2<pos:position pos:line="31" pos:column="14"/></literal></expr><operator pos:line="31" pos:column="14">,<pos:position pos:line="31" pos:column="15"/></operator> <expr><name pos:line="31" pos:column="16">match<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">+=<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">2<pos:position pos:line="31" pos:column="26"/></literal></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">Assert<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><operator pos:line="32" pos:column="12">*<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">scan<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">==<pos:position pos:line="32" pos:column="20"/></operator> <operator pos:line="32" pos:column="21">*<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">match<pos:position pos:line="32" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="29">"match[2]?"<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="34" pos:column="5">/* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */</comment>
    <do pos:line="37" pos:column="5">do <block pos:line="37" pos:column="8">{
    }<pos:position pos:line="38" pos:column="6"/></block> while <condition pos:line="38" pos:column="13">(<expr><operator pos:line="38" pos:column="14">*<pos:position pos:line="38" pos:column="15"/></operator><operator pos:line="38" pos:column="15">++<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">scan<pos:position pos:line="38" pos:column="21"/></name> <operator pos:line="38" pos:column="22">==<pos:position pos:line="38" pos:column="24"/></operator> <operator pos:line="38" pos:column="25">*<pos:position pos:line="38" pos:column="26"/></operator><operator pos:line="38" pos:column="26">++<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">match<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">&amp;&amp;<pos:position pos:line="38" pos:column="44"/></operator> <operator pos:line="38" pos:column="37">*<pos:position pos:line="38" pos:column="38"/></operator><operator pos:line="38" pos:column="38">++<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="40">scan<pos:position pos:line="38" pos:column="44"/></name> <operator pos:line="38" pos:column="45">==<pos:position pos:line="38" pos:column="47"/></operator> <operator pos:line="38" pos:column="48">*<pos:position pos:line="38" pos:column="49"/></operator><operator pos:line="38" pos:column="49">++<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="51">match<pos:position pos:line="38" pos:column="56"/></name> <operator pos:line="38" pos:column="57">&amp;&amp;<pos:position pos:line="38" pos:column="67"/></operator>
             <operator pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></operator><operator pos:line="39" pos:column="15">++<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">scan<pos:position pos:line="39" pos:column="21"/></name> <operator pos:line="39" pos:column="22">==<pos:position pos:line="39" pos:column="24"/></operator> <operator pos:line="39" pos:column="25">*<pos:position pos:line="39" pos:column="26"/></operator><operator pos:line="39" pos:column="26">++<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="28">match<pos:position pos:line="39" pos:column="33"/></name> <operator pos:line="39" pos:column="34">&amp;&amp;<pos:position pos:line="39" pos:column="44"/></operator> <operator pos:line="39" pos:column="37">*<pos:position pos:line="39" pos:column="38"/></operator><operator pos:line="39" pos:column="38">++<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="40">scan<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">==<pos:position pos:line="39" pos:column="47"/></operator> <operator pos:line="39" pos:column="48">*<pos:position pos:line="39" pos:column="49"/></operator><operator pos:line="39" pos:column="49">++<pos:position pos:line="39" pos:column="51"/></operator><name pos:line="39" pos:column="51">match<pos:position pos:line="39" pos:column="56"/></name> <operator pos:line="39" pos:column="57">&amp;&amp;<pos:position pos:line="39" pos:column="67"/></operator>
             <operator pos:line="40" pos:column="14">*<pos:position pos:line="40" pos:column="15"/></operator><operator pos:line="40" pos:column="15">++<pos:position pos:line="40" pos:column="17"/></operator><name pos:line="40" pos:column="17">scan<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">==<pos:position pos:line="40" pos:column="24"/></operator> <operator pos:line="40" pos:column="25">*<pos:position pos:line="40" pos:column="26"/></operator><operator pos:line="40" pos:column="26">++<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">match<pos:position pos:line="40" pos:column="33"/></name> <operator pos:line="40" pos:column="34">&amp;&amp;<pos:position pos:line="40" pos:column="44"/></operator> <operator pos:line="40" pos:column="37">*<pos:position pos:line="40" pos:column="38"/></operator><operator pos:line="40" pos:column="38">++<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="40">scan<pos:position pos:line="40" pos:column="44"/></name> <operator pos:line="40" pos:column="45">==<pos:position pos:line="40" pos:column="47"/></operator> <operator pos:line="40" pos:column="48">*<pos:position pos:line="40" pos:column="49"/></operator><operator pos:line="40" pos:column="49">++<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="51">match<pos:position pos:line="40" pos:column="56"/></name> <operator pos:line="40" pos:column="57">&amp;&amp;<pos:position pos:line="40" pos:column="67"/></operator>
             <operator pos:line="41" pos:column="14">*<pos:position pos:line="41" pos:column="15"/></operator><operator pos:line="41" pos:column="15">++<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">scan<pos:position pos:line="41" pos:column="21"/></name> <operator pos:line="41" pos:column="22">==<pos:position pos:line="41" pos:column="24"/></operator> <operator pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></operator><operator pos:line="41" pos:column="26">++<pos:position pos:line="41" pos:column="28"/></operator><name pos:line="41" pos:column="28">match<pos:position pos:line="41" pos:column="33"/></name> <operator pos:line="41" pos:column="34">&amp;&amp;<pos:position pos:line="41" pos:column="44"/></operator> <operator pos:line="41" pos:column="37">*<pos:position pos:line="41" pos:column="38"/></operator><operator pos:line="41" pos:column="38">++<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="40">scan<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">==<pos:position pos:line="41" pos:column="47"/></operator> <operator pos:line="41" pos:column="48">*<pos:position pos:line="41" pos:column="49"/></operator><operator pos:line="41" pos:column="49">++<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="51">match<pos:position pos:line="41" pos:column="56"/></name> <operator pos:line="41" pos:column="57">&amp;&amp;<pos:position pos:line="41" pos:column="67"/></operator>
             <name pos:line="42" pos:column="14">scan<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">&lt;<pos:position pos:line="42" pos:column="23"/></operator> <name pos:line="42" pos:column="21">strend<pos:position pos:line="42" pos:column="27"/></name></expr>)<pos:position pos:line="42" pos:column="28"/></condition>;<pos:position pos:line="42" pos:column="29"/></do>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">Assert<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name pos:line="44" pos:column="12">scan<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">&lt;=<pos:position pos:line="44" pos:column="22"/></operator> <name><name pos:line="44" pos:column="20">s<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">-&gt;<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="23">window<pos:position pos:line="44" pos:column="29"/></name></name><operator pos:line="44" pos:column="29">+<pos:position pos:line="44" pos:column="30"/></operator><call pos:line="44" pos:column="30">(<name pos:line="44" pos:column="31">unsigned<pos:position pos:line="44" pos:column="39"/></name>)<argument_list pos:line="44" pos:column="40">(<argument><expr><name><name pos:line="44" pos:column="41">s<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">-&gt;<pos:position pos:line="44" pos:column="47"/></operator><name pos:line="44" pos:column="44">window_size<pos:position pos:line="44" pos:column="55"/></name></name><operator pos:line="44" pos:column="55">-<pos:position pos:line="44" pos:column="56"/></operator><literal type="number" pos:line="44" pos:column="56">1<pos:position pos:line="44" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="60">"wild scan"<pos:position pos:line="44" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="73"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">len<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <name pos:line="46" pos:column="11">MAX_MATCH<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">-<pos:position pos:line="46" pos:column="22"/></operator> <call pos:line="46" pos:column="23">(<name pos:line="46" pos:column="24">int<pos:position pos:line="46" pos:column="27"/></name>)<argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">strend<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">-<pos:position pos:line="46" pos:column="37"/></operator> <name pos:line="46" pos:column="38">scan<pos:position pos:line="46" pos:column="42"/></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">len<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">&lt;<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="15">MIN_MATCH<pos:position pos:line="48" pos:column="24"/></name></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25"> <block type="pseudo"><return pos:line="48" pos:column="26">return <expr><name pos:line="48" pos:column="33">MIN_MATCH<pos:position pos:line="48" pos:column="42"/></name> <operator pos:line="48" pos:column="43">-<pos:position pos:line="48" pos:column="44"/></operator> <literal type="number" pos:line="48" pos:column="45">1<pos:position pos:line="48" pos:column="46"/></literal></expr>;<pos:position pos:line="48" pos:column="47"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">s<pos:position pos:line="50" pos:column="6"/></name><operator pos:line="50" pos:column="6">-&gt;<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="8">match_start<pos:position pos:line="50" pos:column="19"/></name></name> <operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator> <name pos:line="50" pos:column="22">cur_match<pos:position pos:line="50" pos:column="31"/></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><ternary><condition><expr><operator pos:line="51" pos:column="12">(<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">uInt<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">)<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">len<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">&lt;=<pos:position pos:line="51" pos:column="27"/></operator> <name><name pos:line="51" pos:column="25">s<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">-&gt;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="28">lookahead<pos:position pos:line="51" pos:column="37"/></name></name></expr> ?<pos:position pos:line="51" pos:column="39"/></condition><then pos:line="51" pos:column="39"> <expr><operator pos:line="51" pos:column="40">(<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="41">uInt<pos:position pos:line="51" pos:column="45"/></name><operator pos:line="51" pos:column="45">)<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="46">len<pos:position pos:line="51" pos:column="49"/></name></expr> <pos:position pos:line="51" pos:column="50"/></then><else pos:line="51" pos:column="50">: <expr><name><name pos:line="51" pos:column="52">s<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">-&gt;<pos:position pos:line="51" pos:column="58"/></operator><name pos:line="51" pos:column="55">lookahead<pos:position pos:line="51" pos:column="64"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="51" pos:column="65"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_616_last_repos.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name> <name pos:line="1" pos:column="5">ZLIB_INTERNAL<pos:position pos:line="1" pos:column="18"/></name></type> <name pos:line="1" pos:column="19">_tr_tally<pos:position pos:line="1" pos:column="28"/></name> <argument_list pos:line="1" pos:column="29">(<argument><expr><name pos:line="1" pos:column="30">s<pos:position pos:line="1" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="33">dist<pos:position pos:line="1" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="39">lc<pos:position pos:line="1" pos:column="41"/></name></expr></argument>)<pos:position pos:line="1" pos:column="42"/></argument_list>
    <name pos:line="2" pos:column="5">deflate_state<pos:position pos:line="2" pos:column="18"/></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">unsigned<pos:position pos:line="3" pos:column="13"/></name></type> <name pos:line="3" pos:column="14">dist<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>  <comment type="block" pos:line="3" pos:column="21">/* distance of matched string */</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">lc<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>    <comment type="block" pos:line="4" pos:column="21">/* match length-MIN_MATCH or unmatched char (if dist==0) */</comment>
<block pos:line="5" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">s<pos:position pos:line="6" pos:column="6"/></name><operator pos:line="6" pos:column="6">-&gt;<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="8">d_buf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name><name pos:line="6" pos:column="14">s<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">last_lit<pos:position pos:line="6" pos:column="25"/></name></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">ush<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="34">dist<pos:position pos:line="6" pos:column="38"/></name></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">s<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">l_buf<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><name><name pos:line="7" pos:column="14">s<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">last_lit<pos:position pos:line="7" pos:column="25"/></name></name><operator pos:line="7" pos:column="25">++<pos:position pos:line="7" pos:column="27"/></operator></expr>]<pos:position pos:line="7" pos:column="28"/></index></name> <operator pos:line="7" pos:column="29">=<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">uch<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="36">lc<pos:position pos:line="7" pos:column="38"/></name></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">dist<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19"> <block pos:line="8" pos:column="20">{
        <comment type="block" pos:line="9" pos:column="9">/* lc is the unmatched char */</comment>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">dyn_ltree<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><name pos:line="10" pos:column="22">lc<pos:position pos:line="10" pos:column="24"/></name></expr>]<pos:position pos:line="10" pos:column="25"/></index></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">Freq<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">++<pos:position pos:line="10" pos:column="32"/></operator></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <else pos:line="11" pos:column="7">else <block pos:line="11" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">matches<pos:position pos:line="12" pos:column="19"/></name></name><operator pos:line="12" pos:column="19">++<pos:position pos:line="12" pos:column="21"/></operator></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
        <comment type="block" pos:line="13" pos:column="9">/* Here, lc is the match length - MIN_MATCH */</comment>
        <expr_stmt><expr><name pos:line="14" pos:column="9">dist<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">--<pos:position pos:line="14" pos:column="15"/></operator></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>             <comment type="block" pos:line="14" pos:column="29">/* dist = match distance - 1 */</comment>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">Assert<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">ush<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">)<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="21">dist<pos:position pos:line="15" pos:column="25"/></name> <operator pos:line="15" pos:column="26">&lt;<pos:position pos:line="15" pos:column="30"/></operator> <operator pos:line="15" pos:column="28">(<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">ush<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">)<pos:position pos:line="15" pos:column="33"/></operator><call><name pos:line="15" pos:column="33">MAX_DIST<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">s<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call> <operator pos:line="15" pos:column="45">&amp;&amp;<pos:position pos:line="15" pos:column="55"/></operator>
               <operator pos:line="16" pos:column="16">(<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">ush<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">)<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">lc<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">&lt;=<pos:position pos:line="16" pos:column="29"/></operator> <call pos:line="16" pos:column="27">(<name pos:line="16" pos:column="28">ush<pos:position pos:line="16" pos:column="31"/></name>)<argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">MAX_MATCH<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">MIN_MATCH<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call> <operator pos:line="16" pos:column="54">&amp;&amp;<pos:position pos:line="16" pos:column="64"/></operator>
               <operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">ush<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">)<pos:position pos:line="17" pos:column="21"/></operator><call><name pos:line="17" pos:column="21">d_code<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">dist<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call> <operator pos:line="17" pos:column="34">&lt;<pos:position pos:line="17" pos:column="38"/></operator> <operator pos:line="17" pos:column="36">(<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">ush<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">D_CODES<pos:position pos:line="17" pos:column="48"/></name></expr></argument>,  <argument><expr><literal type="string" pos:line="17" pos:column="51">"_tr_tally: bad match"<pos:position pos:line="17" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="75"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="19" pos:column="9">s<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">dyn_ltree<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><name><name pos:line="19" pos:column="22">_length_code<pos:position pos:line="19" pos:column="34"/></name><index pos:line="19" pos:column="34">[<expr><name pos:line="19" pos:column="35">lc<pos:position pos:line="19" pos:column="37"/></name></expr>]<pos:position pos:line="19" pos:column="38"/></index></name><operator pos:line="19" pos:column="38">+<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">LITERALS<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">+<pos:position pos:line="19" pos:column="48"/></operator><literal type="number" pos:line="19" pos:column="48">1<pos:position pos:line="19" pos:column="49"/></literal></expr>]<pos:position pos:line="19" pos:column="50"/></index></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">Freq<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">++<pos:position pos:line="19" pos:column="57"/></operator></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">s<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">dyn_dtree<pos:position pos:line="20" pos:column="21"/></name><index pos:line="20" pos:column="21">[<expr><call><name pos:line="20" pos:column="22">d_code<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">dist<pos:position pos:line="20" pos:column="33"/></name></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>]<pos:position pos:line="20" pos:column="35"/></index></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">Freq<pos:position pos:line="20" pos:column="40"/></name><operator pos:line="20" pos:column="40">++<pos:position pos:line="20" pos:column="42"/></operator></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">TRUNCATE_BLOCK<pos:position pos:line="23" pos:column="22"/></name></cpp:ifdef>
    <comment type="block" pos:line="24" pos:column="5">/* Try to guess if it is profitable to stop the current block here */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name><name pos:line="25" pos:column="10">s<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">last_lit<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">&amp;<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="24">0x1fff<pos:position pos:line="25" pos:column="30"/></literal><operator pos:line="25" pos:column="30">)<pos:position pos:line="25" pos:column="31"/></operator> <operator pos:line="25" pos:column="32">==<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">0<pos:position pos:line="25" pos:column="36"/></literal> <operator pos:line="25" pos:column="37">&amp;&amp;<pos:position pos:line="25" pos:column="47"/></operator> <name><name pos:line="25" pos:column="40">s<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">level<pos:position pos:line="25" pos:column="48"/></name></name> <operator pos:line="25" pos:column="49">&gt;<pos:position pos:line="25" pos:column="53"/></operator> <literal type="number" pos:line="25" pos:column="51">2<pos:position pos:line="25" pos:column="52"/></literal></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <block pos:line="25" pos:column="54">{
        <comment type="block" pos:line="26" pos:column="9">/* Compute an upper bound for the compressed length */</comment>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">ulg<pos:position pos:line="27" pos:column="12"/></name></type> <name pos:line="27" pos:column="13">out_length<pos:position pos:line="27" pos:column="23"/></name> <init pos:line="27" pos:column="24">= <expr><operator pos:line="27" pos:column="26">(<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">ulg<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">)<pos:position pos:line="27" pos:column="31"/></operator><name><name pos:line="27" pos:column="31">s<pos:position pos:line="27" pos:column="32"/></name><operator pos:line="27" pos:column="32">-&gt;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="34">last_lit<pos:position pos:line="27" pos:column="42"/></name></name><operator pos:line="27" pos:column="42">*<pos:position pos:line="27" pos:column="43"/></operator><literal type="number" pos:line="27" pos:column="43">8L<pos:position pos:line="27" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">ulg<pos:position pos:line="28" pos:column="12"/></name></type> <name pos:line="28" pos:column="13">in_length<pos:position pos:line="28" pos:column="22"/></name> <init pos:line="28" pos:column="23">= <expr><call pos:line="28" pos:column="25">(<name pos:line="28" pos:column="26">ulg<pos:position pos:line="28" pos:column="29"/></name>)<argument_list pos:line="28" pos:column="30">(<argument><expr><operator pos:line="28" pos:column="31">(<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">long<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">)<pos:position pos:line="28" pos:column="37"/></operator><name><name pos:line="28" pos:column="37">s<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">strstart<pos:position pos:line="28" pos:column="48"/></name></name> <operator pos:line="28" pos:column="49">-<pos:position pos:line="28" pos:column="50"/></operator> <name><name pos:line="28" pos:column="51">s<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">block_start<pos:position pos:line="28" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">int<pos:position pos:line="29" pos:column="12"/></name></type> <name pos:line="29" pos:column="13">dcode<pos:position pos:line="29" pos:column="18"/></name></decl>;<pos:position pos:line="29" pos:column="19"/></decl_stmt>
        <for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">dcode<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <literal type="number" pos:line="30" pos:column="22">0<pos:position pos:line="30" pos:column="23"/></literal></expr>;<pos:position pos:line="30" pos:column="24"/></init> <condition><expr><name pos:line="30" pos:column="25">dcode<pos:position pos:line="30" pos:column="30"/></name> <operator pos:line="30" pos:column="31">&lt;<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="33">D_CODES<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></condition> <incr><expr><name pos:line="30" pos:column="42">dcode<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">++<pos:position pos:line="30" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="50"/></control> <block pos:line="30" pos:column="51">{
            <expr_stmt><expr><name pos:line="31" pos:column="13">out_length<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">+=<pos:position pos:line="31" pos:column="26"/></operator> <operator pos:line="31" pos:column="27">(<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">ulg<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">)<pos:position pos:line="31" pos:column="32"/></operator><name><name pos:line="31" pos:column="32">s<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">dyn_dtree<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><name pos:line="31" pos:column="45">dcode<pos:position pos:line="31" pos:column="50"/></name></expr>]<pos:position pos:line="31" pos:column="51"/></index></name><operator pos:line="31" pos:column="51">.<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">Freq<pos:position pos:line="31" pos:column="56"/></name> <operator pos:line="31" pos:column="57">*<pos:position pos:line="31" pos:column="58"/></operator>
                <operator pos:line="32" pos:column="17">(<pos:position pos:line="32" pos:column="18"/></operator><literal type="number" pos:line="32" pos:column="18">5L<pos:position pos:line="32" pos:column="20"/></literal><operator pos:line="32" pos:column="20">+<pos:position pos:line="32" pos:column="21"/></operator><name><name pos:line="32" pos:column="21">extra_dbits<pos:position pos:line="32" pos:column="32"/></name><index pos:line="32" pos:column="32">[<expr><name pos:line="32" pos:column="33">dcode<pos:position pos:line="32" pos:column="38"/></name></expr>]<pos:position pos:line="32" pos:column="39"/></index></name><operator pos:line="32" pos:column="39">)<pos:position pos:line="32" pos:column="40"/></operator></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="34" pos:column="9">out_length<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">&gt;&gt;=<pos:position pos:line="34" pos:column="29"/></operator> <literal type="number" pos:line="34" pos:column="24">3<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">Tracev<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">stderr<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">,<pos:position pos:line="35" pos:column="24"/></operator><literal type="string" pos:line="35" pos:column="24">"\nlast_lit %u, in %ld, out ~%ld(%ld%%) "<pos:position pos:line="35" pos:column="65"/></literal><operator pos:line="35" pos:column="65">,<pos:position pos:line="35" pos:column="66"/></operator>
               <name><name pos:line="36" pos:column="16">s<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">-&gt;<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="19">last_lit<pos:position pos:line="36" pos:column="27"/></name></name><operator pos:line="36" pos:column="27">,<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="29">in_length<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">,<pos:position pos:line="36" pos:column="39"/></operator> <name pos:line="36" pos:column="40">out_length<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">,<pos:position pos:line="36" pos:column="51"/></operator>
               <literal type="number" pos:line="37" pos:column="16">100L<pos:position pos:line="37" pos:column="20"/></literal> <operator pos:line="37" pos:column="21">-<pos:position pos:line="37" pos:column="22"/></operator> <name pos:line="37" pos:column="23">out_length<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">*<pos:position pos:line="37" pos:column="34"/></operator><literal type="number" pos:line="37" pos:column="34">100L<pos:position pos:line="37" pos:column="38"/></literal><operator pos:line="37" pos:column="38">/<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">in_length<pos:position pos:line="37" pos:column="48"/></name><operator pos:line="37" pos:column="48">)<pos:position pos:line="37" pos:column="49"/></operator></expr></argument>)<pos:position pos:line="37" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">s<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">matches<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">&lt;<pos:position pos:line="38" pos:column="28"/></operator> <name><name pos:line="38" pos:column="26">s<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">last_lit<pos:position pos:line="38" pos:column="37"/></name></name><operator pos:line="38" pos:column="37">/<pos:position pos:line="38" pos:column="38"/></operator><literal type="number" pos:line="38" pos:column="38">2<pos:position pos:line="38" pos:column="39"/></literal> <operator pos:line="38" pos:column="40">&amp;&amp;<pos:position pos:line="38" pos:column="50"/></operator> <name pos:line="38" pos:column="43">out_length<pos:position pos:line="38" pos:column="53"/></name> <operator pos:line="38" pos:column="54">&lt;<pos:position pos:line="38" pos:column="58"/></operator> <name pos:line="38" pos:column="56">in_length<pos:position pos:line="38" pos:column="65"/></name><operator pos:line="38" pos:column="65">/<pos:position pos:line="38" pos:column="66"/></operator><literal type="number" pos:line="38" pos:column="66">2<pos:position pos:line="38" pos:column="67"/></literal></expr>)<pos:position pos:line="38" pos:column="68"/></condition><then pos:line="38" pos:column="68"> <block type="pseudo"><return pos:line="38" pos:column="69">return <expr><literal type="number" pos:line="38" pos:column="76">1<pos:position pos:line="38" pos:column="77"/></literal></expr>;<pos:position pos:line="38" pos:column="78"/></return></block></then></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name><name pos:line="41" pos:column="13">s<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">last_lit<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">==<pos:position pos:line="41" pos:column="27"/></operator> <name><name pos:line="41" pos:column="28">s<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-&gt;<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="31">lit_bufsize<pos:position pos:line="41" pos:column="42"/></name></name><operator pos:line="41" pos:column="42">-<pos:position pos:line="41" pos:column="43"/></operator><literal type="number" pos:line="41" pos:column="43">1<pos:position pos:line="41" pos:column="44"/></literal><operator pos:line="41" pos:column="44">)<pos:position pos:line="41" pos:column="45"/></operator></expr>;<pos:position pos:line="41" pos:column="46"/></return>
    <comment type="block" pos:line="42" pos:column="5">/* We avoid equality with lit_bufsize because of wraparound at 64K
     * on 16 bit machines and because stored blocks are restricted to
     * 64K-1 bytes.
     */</comment>
}<pos:position pos:line="46" pos:column="2"/></block></unit>

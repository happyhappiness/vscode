<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_316_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">atomic_create<pos:position pos:line="1" pos:column="18"/></name><parameter_list pos:line="1" pos:column="18">(<parameter><decl><type><name><name pos:line="1" pos:column="19">struct<pos:position pos:line="1" pos:column="25"/></name> <name pos:line="1" pos:column="26">file_struct<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">file<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">fname<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">slnk<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="76">const<pos:position pos:line="1" pos:column="81"/></specifier> <name pos:line="1" pos:column="82">char<pos:position pos:line="1" pos:column="86"/></name> <modifier pos:line="1" pos:column="87">*<pos:position pos:line="1" pos:column="88"/></modifier></type><name pos:line="1" pos:column="88">hlnk<pos:position pos:line="1" pos:column="92"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="2" pos:column="19">dev_t<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">rdev<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">stat_x<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">sxp<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">del_for_flag<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">tmpname<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><name pos:line="4" pos:column="22">MAXPATHLEN<pos:position pos:line="4" pos:column="32"/></name></expr>]<pos:position pos:line="4" pos:column="33"/></index></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">create_name<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">skip_atomic<pos:position pos:line="6" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="26">dir_in_the_way<pos:position pos:line="6" pos:column="40"/></name> <init pos:line="6" pos:column="41">= <expr><name pos:line="6" pos:column="43">del_for_flag<pos:position pos:line="6" pos:column="55"/></name> <operator pos:line="6" pos:column="56">&amp;&amp;<pos:position pos:line="6" pos:column="66"/></operator> <call><name pos:line="6" pos:column="59">S_ISDIR<pos:position pos:line="6" pos:column="66"/></name><argument_list pos:line="6" pos:column="66">(<argument><expr><name><name pos:line="6" pos:column="67">sxp<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">-&gt;<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="72">st<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">.<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="75">st_mode<pos:position pos:line="6" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="84"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">del_for_flag<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">||<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">dir_in_the_way<pos:position pos:line="8" pos:column="44"/></name> <operator pos:line="8" pos:column="45">||<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="48">tmpdir<pos:position pos:line="8" pos:column="54"/></name> <operator pos:line="8" pos:column="55">||<pos:position pos:line="8" pos:column="57"/></operator> <operator pos:line="8" pos:column="58">!<pos:position pos:line="8" pos:column="59"/></operator><call><name pos:line="8" pos:column="59">get_tmpname<pos:position pos:line="8" pos:column="70"/></name><argument_list pos:line="8" pos:column="70">(<argument><expr><name pos:line="8" pos:column="71">tmpname<pos:position pos:line="8" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="80">fname<pos:position pos:line="8" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="87">True<pos:position pos:line="8" pos:column="91"/></name></expr></argument>)<pos:position pos:line="8" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="93"/></condition><then pos:line="8" pos:column="93">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">skip_atomic<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="31">1<pos:position pos:line="9" pos:column="32"/></literal></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt></block></then>
	<else pos:line="10" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">skip_atomic<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt></block></else></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">del_for_flag<pos:position pos:line="13" pos:column="25"/></name></expr>)<pos:position pos:line="13" pos:column="26"/></condition><then pos:line="13" pos:column="26"> <block pos:line="13" pos:column="27">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">make_backups<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">&gt;<pos:position pos:line="14" pos:column="38"/></operator> <literal type="number" pos:line="14" pos:column="36">0<pos:position pos:line="14" pos:column="37"/></literal> <operator pos:line="14" pos:column="38">&amp;&amp;<pos:position pos:line="14" pos:column="48"/></operator> <operator pos:line="14" pos:column="41">!<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">dir_in_the_way<pos:position pos:line="14" pos:column="56"/></name></expr>)<pos:position pos:line="14" pos:column="57"/></condition><then pos:line="14" pos:column="57"> <block pos:line="14" pos:column="58">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><operator pos:line="15" pos:column="29">!<pos:position pos:line="15" pos:column="30"/></operator><call><name pos:line="15" pos:column="30">make_backup<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">fname<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">skip_atomic<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="62"/></condition><then pos:line="15" pos:column="62">
				<block type="pseudo"><return pos:line="16" pos:column="33">return <expr><literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr>;<pos:position pos:line="16" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><name pos:line="17" pos:column="28">skip_atomic<pos:position pos:line="17" pos:column="39"/></name></expr>)<pos:position pos:line="17" pos:column="40"/></condition><then pos:line="17" pos:column="40"> <block pos:line="17" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">int<pos:position pos:line="18" pos:column="28"/></name></type> <name pos:line="18" pos:column="29">del_opts<pos:position pos:line="18" pos:column="37"/></name> <init pos:line="18" pos:column="38">= <expr><ternary><condition><expr><name pos:line="18" pos:column="40">delete_mode<pos:position pos:line="18" pos:column="51"/></name> <operator pos:line="18" pos:column="52">||<pos:position pos:line="18" pos:column="54"/></operator> <name pos:line="18" pos:column="55">force_delete<pos:position pos:line="18" pos:column="67"/></name></expr> ?<pos:position pos:line="18" pos:column="69"/></condition><then pos:line="18" pos:column="69"> <expr><name pos:line="18" pos:column="70">DEL_RECURSE<pos:position pos:line="18" pos:column="81"/></name></expr> <pos:position pos:line="18" pos:column="82"/></then><else pos:line="18" pos:column="82">: <expr><literal type="number" pos:line="18" pos:column="84">0<pos:position pos:line="18" pos:column="85"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="18" pos:column="86"/></decl_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">delete_item<pos:position pos:line="19" pos:column="40"/></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name pos:line="19" pos:column="41">fname<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="48">sxp<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">st<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">.<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="56">st_mode<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="65">del_opts<pos:position pos:line="19" pos:column="73"/></name> <operator pos:line="19" pos:column="74">|<pos:position pos:line="19" pos:column="75"/></operator> <name pos:line="19" pos:column="76">del_for_flag<pos:position pos:line="19" pos:column="88"/></name></expr></argument>)<pos:position pos:line="19" pos:column="89"/></argument_list></call> <operator pos:line="19" pos:column="90">!=<pos:position pos:line="19" pos:column="92"/></operator> <literal type="number" pos:line="19" pos:column="93">0<pos:position pos:line="19" pos:column="94"/></literal></expr>)<pos:position pos:line="19" pos:column="95"/></condition><then pos:line="19" pos:column="95">
				<block type="pseudo"><return pos:line="20" pos:column="33">return <expr><literal type="number" pos:line="20" pos:column="40">0<pos:position pos:line="20" pos:column="41"/></literal></expr>;<pos:position pos:line="20" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if></elseif></if>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">create_name<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <ternary><condition><expr><name pos:line="24" pos:column="23">skip_atomic<pos:position pos:line="24" pos:column="34"/></name></expr> ?<pos:position pos:line="24" pos:column="36"/></condition><then pos:line="24" pos:column="36"> <expr><name pos:line="24" pos:column="37">fname<pos:position pos:line="24" pos:column="42"/></name></expr> <pos:position pos:line="24" pos:column="43"/></then><else pos:line="24" pos:column="43">: <expr><name pos:line="24" pos:column="45">tmpname<pos:position pos:line="24" pos:column="52"/></name></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">slnk<pos:position pos:line="26" pos:column="17"/></name></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18"> <block pos:line="26" pos:column="19">{
<cpp:ifdef pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">ifdef<pos:position pos:line="27" pos:column="7"/></cpp:directive> <name pos:line="27" pos:column="8">SUPPORT_LINKS<pos:position pos:line="27" pos:column="21"/></name></cpp:ifdef>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><call><name pos:line="28" pos:column="21">do_symlink<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">slnk<pos:position pos:line="28" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="38">create_name<pos:position pos:line="28" pos:column="49"/></name></expr></argument>)<pos:position pos:line="28" pos:column="50"/></argument_list></call> <operator pos:line="28" pos:column="51">&lt;<pos:position pos:line="28" pos:column="55"/></operator> <literal type="number" pos:line="28" pos:column="53">0<pos:position pos:line="28" pos:column="54"/></literal></expr>)<pos:position pos:line="28" pos:column="55"/></condition><then pos:line="28" pos:column="55"> <block pos:line="28" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">rsyserr<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">FERROR_XFER<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">errno<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="53">"symlink %s -&gt; \"%s\" failed"<pos:position pos:line="29" pos:column="85"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="30" pos:column="33">full_fname<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">create_name<pos:position pos:line="30" pos:column="55"/></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">slnk<pos:position pos:line="30" pos:column="62"/></name></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="64"/></expr_stmt>
			<return pos:line="31" pos:column="25">return <expr><literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal></expr>;<pos:position pos:line="31" pos:column="34"/></return>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
<cpp:else pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">else<pos:position pos:line="33" pos:column="6"/></cpp:directive></cpp:else>
		<return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="36" pos:column="10"/></block></then> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><name pos:line="36" pos:column="20">hlnk<pos:position pos:line="36" pos:column="24"/></name></expr>)<pos:position pos:line="36" pos:column="25"/></condition><then pos:line="36" pos:column="25"> <block pos:line="36" pos:column="26">{
<cpp:ifdef pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">ifdef<pos:position pos:line="37" pos:column="7"/></cpp:directive> <name pos:line="37" pos:column="8">SUPPORT_HARD_LINKS<pos:position pos:line="37" pos:column="26"/></name></cpp:ifdef>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><operator pos:line="38" pos:column="21">!<pos:position pos:line="38" pos:column="22"/></operator><call><name pos:line="38" pos:column="22">hard_link_one<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">file<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="42">create_name<pos:position pos:line="38" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">hlnk<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="61">0<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="64"/></condition><then pos:line="38" pos:column="64">
			<block type="pseudo"><return pos:line="39" pos:column="25">return <expr><literal type="number" pos:line="39" pos:column="32">0<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></return></block></then></if>
<cpp:else pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">else<pos:position pos:line="40" pos:column="6"/></cpp:directive></cpp:else>
		<return pos:line="41" pos:column="17">return <expr><literal type="number" pos:line="41" pos:column="24">0<pos:position pos:line="41" pos:column="25"/></literal></expr>;<pos:position pos:line="41" pos:column="26"/></return>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif> <else pos:line="43" pos:column="11">else <block pos:line="43" pos:column="16">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name pos:line="44" pos:column="21">do_mknod<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">(<argument><expr><name pos:line="44" pos:column="30">create_name<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="43">file<pos:position pos:line="44" pos:column="47"/></name><operator pos:line="44" pos:column="47">-&gt;<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="49">mode<pos:position pos:line="44" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="55">rdev<pos:position pos:line="44" pos:column="59"/></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call> <operator pos:line="44" pos:column="61">&lt;<pos:position pos:line="44" pos:column="65"/></operator> <literal type="number" pos:line="44" pos:column="63">0<pos:position pos:line="44" pos:column="64"/></literal></expr>)<pos:position pos:line="44" pos:column="65"/></condition><then pos:line="44" pos:column="65"> <block pos:line="44" pos:column="66">{
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">rsyserr<pos:position pos:line="45" pos:column="32"/></name><argument_list pos:line="45" pos:column="32">(<argument><expr><name pos:line="45" pos:column="33">FERROR_XFER<pos:position pos:line="45" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="46">errno<pos:position pos:line="45" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="53">"mknod %s failed"<pos:position pos:line="45" pos:column="70"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="46" pos:column="33">full_fname<pos:position pos:line="46" pos:column="43"/></name><argument_list pos:line="46" pos:column="43">(<argument><expr><name pos:line="46" pos:column="44">create_name<pos:position pos:line="46" pos:column="55"/></name></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt>
			<return pos:line="47" pos:column="25">return <expr><literal type="number" pos:line="47" pos:column="32">0<pos:position pos:line="47" pos:column="33"/></literal></expr>;<pos:position pos:line="47" pos:column="34"/></return>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if>
	}<pos:position pos:line="49" pos:column="10"/></block></else></if>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><operator pos:line="51" pos:column="13">!<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">skip_atomic<pos:position pos:line="51" pos:column="25"/></name></expr>)<pos:position pos:line="51" pos:column="26"/></condition><then pos:line="51" pos:column="26"> <block pos:line="51" pos:column="27">{
		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><call><name pos:line="52" pos:column="21">do_rename<pos:position pos:line="52" pos:column="30"/></name><argument_list pos:line="52" pos:column="30">(<argument><expr><name pos:line="52" pos:column="31">tmpname<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="40">fname<pos:position pos:line="52" pos:column="45"/></name></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call> <operator pos:line="52" pos:column="47">&lt;<pos:position pos:line="52" pos:column="51"/></operator> <literal type="number" pos:line="52" pos:column="49">0<pos:position pos:line="52" pos:column="50"/></literal></expr>)<pos:position pos:line="52" pos:column="51"/></condition><then pos:line="52" pos:column="51"> <block pos:line="52" pos:column="52">{
			<expr_stmt><expr><call><name pos:line="53" pos:column="25">rsyserr<pos:position pos:line="53" pos:column="32"/></name><argument_list pos:line="53" pos:column="32">(<argument><expr><name pos:line="53" pos:column="33">FERROR_XFER<pos:position pos:line="53" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="46">errno<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="53">"rename %s -&gt; \"%s\" failed"<pos:position pos:line="53" pos:column="84"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="54" pos:column="33">full_fname<pos:position pos:line="54" pos:column="43"/></name><argument_list pos:line="54" pos:column="43">(<argument><expr><name pos:line="54" pos:column="44">tmpname<pos:position pos:line="54" pos:column="51"/></name></expr></argument>)<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="54">full_fname<pos:position pos:line="54" pos:column="64"/></name><argument_list pos:line="54" pos:column="64">(<argument><expr><name pos:line="54" pos:column="65">fname<pos:position pos:line="54" pos:column="70"/></name></expr></argument>)<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">do_unlink<pos:position pos:line="55" pos:column="34"/></name><argument_list pos:line="55" pos:column="34">(<argument><expr><name pos:line="55" pos:column="35">tmpname<pos:position pos:line="55" pos:column="42"/></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
			<return pos:line="56" pos:column="25">return <expr><literal type="number" pos:line="56" pos:column="32">0<pos:position pos:line="56" pos:column="33"/></literal></expr>;<pos:position pos:line="56" pos:column="34"/></return>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>

	<return pos:line="60" pos:column="9">return <expr><literal type="number" pos:line="60" pos:column="16">1<pos:position pos:line="60" pos:column="17"/></literal></expr>;<pos:position pos:line="60" pos:column="18"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

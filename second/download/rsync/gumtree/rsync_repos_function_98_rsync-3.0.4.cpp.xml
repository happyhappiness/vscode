<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_98_rsync-3.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">got_flist_entry_status<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name><name pos:line="1" pos:column="36">enum<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">festatus<pos:position pos:line="1" pos:column="49"/></name></name></type> <name pos:line="1" pos:column="50">status<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">buf<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ndx<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">IVAL<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">(<argument><expr><name pos:line="3" pos:column="24">buf<pos:position pos:line="3" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="29">0<pos:position pos:line="3" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">file_list<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">flist<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><call><name pos:line="4" pos:column="35">flist_for_ndx<pos:position pos:line="4" pos:column="48"/></name><argument_list pos:line="4" pos:column="48">(<argument><expr><name pos:line="4" pos:column="49">ndx<pos:position pos:line="4" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="54">"got_flist_entry_status"<pos:position pos:line="4" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="80"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">remove_source_files<pos:position pos:line="6" pos:column="32"/></name></expr>)<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33"> <block pos:line="6" pos:column="34">{
		<expr_stmt><expr><name pos:line="7" pos:column="17">active_filecnt<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">--<pos:position pos:line="7" pos:column="33"/></operator></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="8" pos:column="17">active_bytecnt<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">-=<pos:position pos:line="8" pos:column="34"/></operator> <call><name pos:line="8" pos:column="35">F_LENGTH<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">(<argument><expr><name><name pos:line="8" pos:column="44">flist<pos:position pos:line="8" pos:column="49"/></name><operator pos:line="8" pos:column="49">-&gt;<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="51">files<pos:position pos:line="8" pos:column="56"/></name><index pos:line="8" pos:column="56">[<expr><name pos:line="8" pos:column="57">ndx<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">-<pos:position pos:line="8" pos:column="62"/></operator> <name><name pos:line="8" pos:column="63">flist<pos:position pos:line="8" pos:column="68"/></name><operator pos:line="8" pos:column="68">-&gt;<pos:position pos:line="8" pos:column="73"/></operator><name pos:line="8" pos:column="70">ndx_start<pos:position pos:line="8" pos:column="79"/></name></name></expr>]<pos:position pos:line="8" pos:column="80"/></index></name></expr></argument>)<pos:position pos:line="8" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="82"/></expr_stmt>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">inc_recurse<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="17">flist<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">in_progress<pos:position pos:line="12" pos:column="35"/></name></name><operator pos:line="12" pos:column="35">--<pos:position pos:line="12" pos:column="37"/></operator></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt></block></then></if>

	<switch pos:line="14" pos:column="9">switch <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">status<pos:position pos:line="14" pos:column="23"/></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition> <block pos:line="14" pos:column="25">{
	<case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">FES_SUCCESS<pos:position pos:line="15" pos:column="25"/></name></expr>:<pos:position pos:line="15" pos:column="26"/></case>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">remove_source_files<pos:position pos:line="16" pos:column="40"/></name></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">send_msg<pos:position pos:line="17" pos:column="33"/></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">MSG_SUCCESS<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">buf<pos:position pos:line="17" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="52">4<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="55">0<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt></block></then></if>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">preserve_hard_links<pos:position pos:line="18" pos:column="40"/></name></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
			<decl_stmt><decl><type><name><name pos:line="19" pos:column="25">struct<pos:position pos:line="19" pos:column="31"/></name> <name pos:line="19" pos:column="32">file_struct<pos:position pos:line="19" pos:column="43"/></name></name> <modifier pos:line="19" pos:column="44">*<pos:position pos:line="19" pos:column="45"/></modifier></type><name pos:line="19" pos:column="45">file<pos:position pos:line="19" pos:column="49"/></name> <init pos:line="19" pos:column="50">= <expr><name><name pos:line="19" pos:column="52">flist<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">-&gt;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="59">files<pos:position pos:line="19" pos:column="64"/></name><index pos:line="19" pos:column="64">[<expr><name pos:line="19" pos:column="65">ndx<pos:position pos:line="19" pos:column="68"/></name> <operator pos:line="19" pos:column="69">-<pos:position pos:line="19" pos:column="70"/></operator> <name><name pos:line="19" pos:column="71">flist<pos:position pos:line="19" pos:column="76"/></name><operator pos:line="19" pos:column="76">-&gt;<pos:position pos:line="19" pos:column="81"/></operator><name pos:line="19" pos:column="78">ndx_start<pos:position pos:line="19" pos:column="87"/></name></name></expr>]<pos:position pos:line="19" pos:column="88"/></index></name></expr></init></decl>;<pos:position pos:line="19" pos:column="89"/></decl_stmt>
			<if pos:line="20" pos:column="25">if <condition pos:line="20" pos:column="28">(<expr><call><name pos:line="20" pos:column="29">F_IS_HLINKED<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">(<argument><expr><name pos:line="20" pos:column="42">file<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48"> <block pos:line="20" pos:column="49">{
				<expr_stmt><expr><call><name pos:line="21" pos:column="33">flist_ndx_push<pos:position pos:line="21" pos:column="47"/></name><argument_list pos:line="21" pos:column="47">(<argument><expr><operator pos:line="21" pos:column="48">&amp;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="49">hlink_list<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">ndx<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="22" pos:column="33">flist<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">in_progress<pos:position pos:line="22" pos:column="51"/></name></name><operator pos:line="22" pos:column="51">++<pos:position pos:line="22" pos:column="53"/></operator></expr>;<pos:position pos:line="22" pos:column="54"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>
	<case pos:line="26" pos:column="9">case <expr><name pos:line="26" pos:column="14">FES_REDO<pos:position pos:line="26" pos:column="22"/></name></expr>:<pos:position pos:line="26" pos:column="23"/></case>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">inc_recurse<pos:position pos:line="27" pos:column="32"/></name></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="25">flist<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">to_redo<pos:position pos:line="28" pos:column="39"/></name></name><operator pos:line="28" pos:column="39">++<pos:position pos:line="28" pos:column="41"/></operator></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">flist_ndx_push<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><operator pos:line="29" pos:column="32">&amp;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="33">redo_list<pos:position pos:line="29" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="44">ndx<pos:position pos:line="29" pos:column="47"/></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt>
		<break pos:line="30" pos:column="17">break;<pos:position pos:line="30" pos:column="23"/></break>
	<case pos:line="31" pos:column="9">case <expr><name pos:line="31" pos:column="14">FES_NO_SEND<pos:position pos:line="31" pos:column="25"/></name></expr>:<pos:position pos:line="31" pos:column="26"/></case>
		<break pos:line="32" pos:column="17">break;<pos:position pos:line="32" pos:column="23"/></break>
	}<pos:position pos:line="33" pos:column="10"/></block></switch>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

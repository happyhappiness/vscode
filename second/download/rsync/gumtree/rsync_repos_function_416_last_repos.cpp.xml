<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_416_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">get_tmpname<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">fnametmp<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">fname<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">BOOL<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">make_unique<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">maxname<pos:position pos:line="3" pos:column="20"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="22">length<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><literal type="number" pos:line="3" pos:column="31">0<pos:position pos:line="3" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name pos:line="4" pos:column="15">char<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">f<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">suf<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">tmpdir<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20"> <block pos:line="7" pos:column="21">{
		<comment type="block" pos:line="8" pos:column="17">/* Note: this can't overflow, so the return value is safe */</comment>
		<expr_stmt><expr><name pos:line="9" pos:column="17">length<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <call><name pos:line="9" pos:column="26">strlcpy<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">fnametmp<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">tmpdir<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">MAXPATHLEN<pos:position pos:line="9" pos:column="62"/></name> <operator pos:line="9" pos:column="63">-<pos:position pos:line="9" pos:column="64"/></operator> <literal type="number" pos:line="9" pos:column="65">2<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="10" pos:column="17">fnametmp<pos:position pos:line="10" pos:column="25"/></name><index pos:line="10" pos:column="25">[<expr><name pos:line="10" pos:column="26">length<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">++<pos:position pos:line="10" pos:column="34"/></operator></expr>]<pos:position pos:line="10" pos:column="35"/></index></name> <operator pos:line="10" pos:column="36">=<pos:position pos:line="10" pos:column="37"/></operator> <literal type="char" pos:line="10" pos:column="38">'/'<pos:position pos:line="10" pos:column="41"/></literal></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">f<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name pos:line="13" pos:column="18">strrchr<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><name pos:line="13" pos:column="26">fname<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="33">'/'<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="39">!=<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">NULL<pos:position pos:line="13" pos:column="46"/></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47"> <block pos:line="13" pos:column="48">{
		<expr_stmt><expr><operator pos:line="14" pos:column="17">++<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="19">f<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">tmpdir<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">length<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">f<pos:position pos:line="16" pos:column="35"/></name> <operator pos:line="16" pos:column="36">-<pos:position pos:line="16" pos:column="37"/></operator> <name pos:line="16" pos:column="38">fname<pos:position pos:line="16" pos:column="43"/></name></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
			<comment type="block" pos:line="17" pos:column="25">/* copy up to and including the slash */</comment>
			<expr_stmt><expr><call><name pos:line="18" pos:column="25">strlcpy<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name pos:line="18" pos:column="33">fnametmp<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">fname<pos:position pos:line="18" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">length<pos:position pos:line="18" pos:column="56"/></name> <operator pos:line="18" pos:column="57">+<pos:position pos:line="18" pos:column="58"/></operator> <literal type="number" pos:line="18" pos:column="59">1<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
		}<pos:position pos:line="19" pos:column="18"/></block></then></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then> <else pos:line="20" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">f<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">fname<pos:position pos:line="21" pos:column="26"/></name></expr>;<pos:position pos:line="21" pos:column="27"/></expr_stmt></block></else></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">tmpdir<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{ <comment type="block" pos:line="23" pos:column="24">/* using a tmpdir avoids the leading dot on our temp names */</comment>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">f<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">==<pos:position pos:line="24" pos:column="26"/></operator> <literal type="char" pos:line="24" pos:column="27">'.'<pos:position pos:line="24" pos:column="30"/></literal></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31"> <comment type="block" pos:line="24" pos:column="32">/* avoid an extra leading dot for OS X's sake */</comment>
			<block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="25">f<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">++<pos:position pos:line="25" pos:column="28"/></operator></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="26" pos:column="17">fnametmp<pos:position pos:line="26" pos:column="25"/></name><index pos:line="26" pos:column="25">[<expr><name pos:line="26" pos:column="26">length<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">++<pos:position pos:line="26" pos:column="34"/></operator></expr>]<pos:position pos:line="26" pos:column="35"/></index></name> <operator pos:line="26" pos:column="36">=<pos:position pos:line="26" pos:column="37"/></operator> <literal type="char" pos:line="26" pos:column="38">'.'<pos:position pos:line="26" pos:column="41"/></literal></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="29" pos:column="9">/* The maxname value is bufsize, and includes space for the '\0'.
	 * NAME_MAX needs an extra -1 for the name's leading dot. */</comment>
	<expr_stmt><expr><name pos:line="31" pos:column="9">maxname<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">MIN<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">MAXPATHLEN<pos:position pos:line="31" pos:column="33"/></name> <operator pos:line="31" pos:column="34">-<pos:position pos:line="31" pos:column="35"/></operator> <name pos:line="31" pos:column="36">length<pos:position pos:line="31" pos:column="42"/></name> <operator pos:line="31" pos:column="43">-<pos:position pos:line="31" pos:column="44"/></operator> <name pos:line="31" pos:column="45">TMPNAME_SUFFIX_LEN<pos:position pos:line="31" pos:column="63"/></name></expr></argument>,
		      <argument><expr><name pos:line="32" pos:column="23">NAME_MAX<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">-<pos:position pos:line="32" pos:column="33"/></operator> <literal type="number" pos:line="32" pos:column="34">1<pos:position pos:line="32" pos:column="35"/></literal> <operator pos:line="32" pos:column="36">-<pos:position pos:line="32" pos:column="37"/></operator> <name pos:line="32" pos:column="38">TMPNAME_SUFFIX_LEN<pos:position pos:line="32" pos:column="56"/></name></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>

	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">maxname<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&lt;<pos:position pos:line="34" pos:column="25"/></operator> <literal type="number" pos:line="34" pos:column="23">0<pos:position pos:line="34" pos:column="24"/></literal></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="35" pos:column="17">rprintf<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name pos:line="35" pos:column="25">FERROR_XFER<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="38">"temporary filename too long: %s\n"<pos:position pos:line="35" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="75">fname<pos:position pos:line="35" pos:column="80"/></name></expr></argument>)<pos:position pos:line="35" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="82"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="36" pos:column="17">fnametmp<pos:position pos:line="36" pos:column="25"/></name><index pos:line="36" pos:column="25">[<expr><literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr>]<pos:position pos:line="36" pos:column="28"/></index></name> <operator pos:line="36" pos:column="29">=<pos:position pos:line="36" pos:column="30"/></operator> <literal type="char" pos:line="36" pos:column="31">'\0'<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
		<return pos:line="37" pos:column="17">return <expr><literal type="number" pos:line="37" pos:column="24">0<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></return>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">maxname<pos:position pos:line="40" pos:column="20"/></name></expr>)<pos:position pos:line="40" pos:column="21"/></condition><then pos:line="40" pos:column="21"> <block pos:line="40" pos:column="22">{
		<decl_stmt><decl><type><name pos:line="41" pos:column="17">int<pos:position pos:line="41" pos:column="20"/></name></type> <name pos:line="41" pos:column="21">added<pos:position pos:line="41" pos:column="26"/></name> <init pos:line="41" pos:column="27">= <expr><call><name pos:line="41" pos:column="29">strlcpy<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">fnametmp<pos:position pos:line="41" pos:column="45"/></name> <operator pos:line="41" pos:column="46">+<pos:position pos:line="41" pos:column="47"/></operator> <name pos:line="41" pos:column="48">length<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="56">f<pos:position pos:line="41" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="59">maxname<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="68"/></decl_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">added<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">&gt;=<pos:position pos:line="42" pos:column="32"/></operator> <name pos:line="42" pos:column="30">maxname<pos:position pos:line="42" pos:column="37"/></name></expr>)<pos:position pos:line="42" pos:column="38"/></condition><then pos:line="42" pos:column="38">
			<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="25">added<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">=<pos:position pos:line="43" pos:column="32"/></operator> <name pos:line="43" pos:column="33">maxname<pos:position pos:line="43" pos:column="40"/></name> <operator pos:line="43" pos:column="41">-<pos:position pos:line="43" pos:column="42"/></operator> <literal type="number" pos:line="43" pos:column="43">1<pos:position pos:line="43" pos:column="44"/></literal></expr>;<pos:position pos:line="43" pos:column="45"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name pos:line="44" pos:column="17">suf<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">=<pos:position pos:line="44" pos:column="22"/></operator> <name pos:line="44" pos:column="23">fnametmp<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">+<pos:position pos:line="44" pos:column="33"/></operator> <name pos:line="44" pos:column="34">length<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">+<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="43">added<pos:position pos:line="44" pos:column="48"/></name></expr>;<pos:position pos:line="44" pos:column="49"/></expr_stmt>

		<comment type="block" pos:line="46" pos:column="17">/* Trim any dangling high-bit chars if the first-trimmed char (if any) is
		 * also a high-bit char, just in case we cut into a multi-byte sequence.
		 * We are guaranteed to stop because of the leading '.' we added. */</comment>
		<if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">int<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">)<pos:position pos:line="49" pos:column="26"/></operator><name><name pos:line="49" pos:column="26">f<pos:position pos:line="49" pos:column="27"/></name><index pos:line="49" pos:column="27">[<expr><name pos:line="49" pos:column="28">added<pos:position pos:line="49" pos:column="33"/></name></expr>]<pos:position pos:line="49" pos:column="34"/></index></name> <operator pos:line="49" pos:column="35">&amp;<pos:position pos:line="49" pos:column="40"/></operator> <literal type="number" pos:line="49" pos:column="37">0x80<pos:position pos:line="49" pos:column="41"/></literal></expr>)<pos:position pos:line="49" pos:column="42"/></condition><then pos:line="49" pos:column="42"> <block pos:line="49" pos:column="43">{
			<while pos:line="50" pos:column="25">while <condition pos:line="50" pos:column="31">(<expr><operator pos:line="50" pos:column="32">(<pos:position pos:line="50" pos:column="33"/></operator><name pos:line="50" pos:column="33">int<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">)<pos:position pos:line="50" pos:column="37"/></operator><name><name pos:line="50" pos:column="37">suf<pos:position pos:line="50" pos:column="40"/></name><index pos:line="50" pos:column="40">[<expr><operator pos:line="50" pos:column="41">-<pos:position pos:line="50" pos:column="42"/></operator><literal type="number" pos:line="50" pos:column="42">1<pos:position pos:line="50" pos:column="43"/></literal></expr>]<pos:position pos:line="50" pos:column="44"/></index></name> <operator pos:line="50" pos:column="45">&amp;<pos:position pos:line="50" pos:column="50"/></operator> <literal type="number" pos:line="50" pos:column="47">0x80<pos:position pos:line="50" pos:column="51"/></literal></expr>)<pos:position pos:line="50" pos:column="52"/></condition>
				<block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="33">suf<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">--<pos:position pos:line="51" pos:column="38"/></operator></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt></block></while>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if>
		<comment type="block" pos:line="53" pos:column="17">/* trim one trailing dot before our suffix's dot */</comment>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name><name pos:line="54" pos:column="21">suf<pos:position pos:line="54" pos:column="24"/></name><index pos:line="54" pos:column="24">[<expr><operator pos:line="54" pos:column="25">-<pos:position pos:line="54" pos:column="26"/></operator><literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal></expr>]<pos:position pos:line="54" pos:column="28"/></index></name> <operator pos:line="54" pos:column="29">==<pos:position pos:line="54" pos:column="31"/></operator> <literal type="char" pos:line="54" pos:column="32">'.'<pos:position pos:line="54" pos:column="35"/></literal></expr>)<pos:position pos:line="54" pos:column="36"/></condition><then pos:line="54" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="55" pos:column="25">suf<pos:position pos:line="55" pos:column="28"/></name><operator pos:line="55" pos:column="28">--<pos:position pos:line="55" pos:column="30"/></operator></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt></block></then></if>
	}<pos:position pos:line="56" pos:column="10"/></block></then> <else pos:line="56" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="17">suf<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <name pos:line="57" pos:column="23">fnametmp<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">+<pos:position pos:line="57" pos:column="33"/></operator> <name pos:line="57" pos:column="34">length<pos:position pos:line="57" pos:column="40"/></name> <operator pos:line="57" pos:column="41">-<pos:position pos:line="57" pos:column="42"/></operator> <literal type="number" pos:line="57" pos:column="43">1<pos:position pos:line="57" pos:column="44"/></literal></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt></block></else></if> <comment type="block" pos:line="57" pos:column="46">/* overwrite the leading dot with suffix's dot */</comment>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name pos:line="59" pos:column="13">make_unique<pos:position pos:line="59" pos:column="24"/></name></expr>)<pos:position pos:line="59" pos:column="25"/></condition><then pos:line="59" pos:column="25"> <block pos:line="59" pos:column="26">{
		<decl_stmt><decl><specifier pos:line="60" pos:column="17">static<pos:position pos:line="60" pos:column="23"/></specifier> <type><name pos:line="60" pos:column="24">unsigned<pos:position pos:line="60" pos:column="32"/></name></type> <name pos:line="60" pos:column="33">counter_limit<pos:position pos:line="60" pos:column="46"/></name></decl>;<pos:position pos:line="60" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="61" pos:column="17">unsigned<pos:position pos:line="61" pos:column="25"/></name></type> <name pos:line="61" pos:column="26">counter<pos:position pos:line="61" pos:column="33"/></name></decl>;<pos:position pos:line="61" pos:column="34"/></decl_stmt>

		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><operator pos:line="63" pos:column="21">!<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">counter_limit<pos:position pos:line="63" pos:column="35"/></name></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36"> <block pos:line="63" pos:column="37">{
			<expr_stmt><expr><name pos:line="64" pos:column="25">counter_limit<pos:position pos:line="64" pos:column="38"/></name> <operator pos:line="64" pos:column="39">=<pos:position pos:line="64" pos:column="40"/></operator> <operator pos:line="64" pos:column="41">(<pos:position pos:line="64" pos:column="42"/></operator><name pos:line="64" pos:column="42">unsigned<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">)<pos:position pos:line="64" pos:column="51"/></operator><call><name pos:line="64" pos:column="51">getpid<pos:position pos:line="64" pos:column="57"/></name><argument_list pos:line="64" pos:column="57">()<pos:position pos:line="64" pos:column="59"/></argument_list></call> <operator pos:line="64" pos:column="60">+<pos:position pos:line="64" pos:column="61"/></operator> <name pos:line="64" pos:column="62">MAX_UNIQUE_LOOP<pos:position pos:line="64" pos:column="77"/></name></expr>;<pos:position pos:line="64" pos:column="78"/></expr_stmt>
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">counter_limit<pos:position pos:line="65" pos:column="42"/></name> <operator pos:line="65" pos:column="43">&gt;<pos:position pos:line="65" pos:column="47"/></operator> <name pos:line="65" pos:column="45">MAX_UNIQUE_NUMBER<pos:position pos:line="65" pos:column="62"/></name> <operator pos:line="65" pos:column="63">||<pos:position pos:line="65" pos:column="65"/></operator> <name pos:line="65" pos:column="66">counter_limit<pos:position pos:line="65" pos:column="79"/></name> <operator pos:line="65" pos:column="80">&lt;<pos:position pos:line="65" pos:column="84"/></operator> <name pos:line="65" pos:column="82">MAX_UNIQUE_LOOP<pos:position pos:line="65" pos:column="97"/></name></expr>)<pos:position pos:line="65" pos:column="98"/></condition><then pos:line="65" pos:column="98">
				<block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="33">counter_limit<pos:position pos:line="66" pos:column="46"/></name> <operator pos:line="66" pos:column="47">=<pos:position pos:line="66" pos:column="48"/></operator> <name pos:line="66" pos:column="49">MAX_UNIQUE_LOOP<pos:position pos:line="66" pos:column="64"/></name></expr>;<pos:position pos:line="66" pos:column="65"/></expr_stmt></block></then></if>
		}<pos:position pos:line="67" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="68" pos:column="17">counter<pos:position pos:line="68" pos:column="24"/></name> <operator pos:line="68" pos:column="25">=<pos:position pos:line="68" pos:column="26"/></operator> <name pos:line="68" pos:column="27">counter_limit<pos:position pos:line="68" pos:column="40"/></name> <operator pos:line="68" pos:column="41">-<pos:position pos:line="68" pos:column="42"/></operator> <name pos:line="68" pos:column="43">MAX_UNIQUE_LOOP<pos:position pos:line="68" pos:column="58"/></name></expr>;<pos:position pos:line="68" pos:column="59"/></expr_stmt>

		<comment type="block" pos:line="70" pos:column="17">/* This doesn't have to be very good because we don't need
		 * to worry about someone trying to guess the values:  all
		 * a conflict will do is cause a device, special file, hard
		 * link, or symlink to fail to be created.  Also: avoid
		 * using mktemp() due to gcc's annoying warning. */</comment>
		<while pos:line="75" pos:column="17">while <condition pos:line="75" pos:column="23">(<expr><literal type="number" pos:line="75" pos:column="24">1<pos:position pos:line="75" pos:column="25"/></literal></expr>)<pos:position pos:line="75" pos:column="26"/></condition> <block pos:line="75" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="76" pos:column="25">snprintf<pos:position pos:line="76" pos:column="33"/></name><argument_list pos:line="76" pos:column="33">(<argument><expr><name pos:line="76" pos:column="34">suf<pos:position pos:line="76" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="39">TMPNAME_SUFFIX_LEN<pos:position pos:line="76" pos:column="57"/></name><operator pos:line="76" pos:column="57">+<pos:position pos:line="76" pos:column="58"/></operator><literal type="number" pos:line="76" pos:column="58">1<pos:position pos:line="76" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="61">".%d"<pos:position pos:line="76" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="68">counter<pos:position pos:line="76" pos:column="75"/></name></expr></argument>)<pos:position pos:line="76" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="77"/></expr_stmt>
			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><call><name pos:line="77" pos:column="29">access<pos:position pos:line="77" pos:column="35"/></name><argument_list pos:line="77" pos:column="35">(<argument><expr><name pos:line="77" pos:column="36">fnametmp<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="46">0<pos:position pos:line="77" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call> <operator pos:line="77" pos:column="49">&lt;<pos:position pos:line="77" pos:column="53"/></operator> <literal type="number" pos:line="77" pos:column="51">0<pos:position pos:line="77" pos:column="52"/></literal></expr>)<pos:position pos:line="77" pos:column="53"/></condition><then pos:line="77" pos:column="53">
				<block type="pseudo"><break pos:line="78" pos:column="33">break;<pos:position pos:line="78" pos:column="39"/></break></block></then></if>
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><operator pos:line="79" pos:column="29">++<pos:position pos:line="79" pos:column="31"/></operator><name pos:line="79" pos:column="31">counter<pos:position pos:line="79" pos:column="38"/></name> <operator pos:line="79" pos:column="39">&gt;=<pos:position pos:line="79" pos:column="44"/></operator> <name pos:line="79" pos:column="42">counter_limit<pos:position pos:line="79" pos:column="55"/></name></expr>)<pos:position pos:line="79" pos:column="56"/></condition><then pos:line="79" pos:column="56">
				<block type="pseudo"><return pos:line="80" pos:column="33">return <expr><literal type="number" pos:line="80" pos:column="40">0<pos:position pos:line="80" pos:column="41"/></literal></expr>;<pos:position pos:line="80" pos:column="42"/></return></block></then></if>
		}<pos:position pos:line="81" pos:column="18"/></block></while>
	}<pos:position pos:line="82" pos:column="10"/></block></then> <else pos:line="82" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="17">memcpy<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">suf<pos:position pos:line="83" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="29">TMPNAME_SUFFIX<pos:position pos:line="83" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="45">TMPNAME_SUFFIX_LEN<pos:position pos:line="83" pos:column="63"/></name><operator pos:line="83" pos:column="63">+<pos:position pos:line="83" pos:column="64"/></operator><literal type="number" pos:line="83" pos:column="64">1<pos:position pos:line="83" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="67"/></expr_stmt></block></else></if>

	<return pos:line="85" pos:column="9">return <expr><literal type="number" pos:line="85" pos:column="16">1<pos:position pos:line="85" pos:column="17"/></literal></expr>;<pos:position pos:line="85" pos:column="18"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

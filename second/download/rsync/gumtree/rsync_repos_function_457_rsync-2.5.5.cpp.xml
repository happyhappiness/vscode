<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_457_rsync-2.5.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name>
<cpp:ifdef pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">ifdef<pos:position pos:line="2" pos:column="7"/></cpp:directive> <name pos:line="2" pos:column="8">_LIBC<pos:position pos:line="2" pos:column="13"/></name></cpp:ifdef>
<name pos:line="3" pos:column="1">internal_function<pos:position pos:line="3" pos:column="18"/></name></type>
<cpp:endif pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">endif<pos:position pos:line="4" pos:column="7"/></cpp:directive></cpp:endif>
<name pos:line="5" pos:column="1">internal_fnmatch<pos:position pos:line="5" pos:column="17"/></name> <parameter_list pos:line="5" pos:column="18">(<parameter><decl><type><specifier pos:line="5" pos:column="19">const<pos:position pos:line="5" pos:column="24"/></specifier> <name pos:line="5" pos:column="25">char<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">pattern<pos:position pos:line="5" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="5" pos:column="40">const<pos:position pos:line="5" pos:column="45"/></specifier> <name pos:line="5" pos:column="46">char<pos:position pos:line="5" pos:column="50"/></name> <modifier pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></modifier></type><name pos:line="5" pos:column="52">string<pos:position pos:line="5" pos:column="58"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="6" pos:column="19">int<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">no_leading_period<pos:position pos:line="6" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="6" pos:column="42">int<pos:position pos:line="6" pos:column="45"/></name></type> <name pos:line="6" pos:column="46">flags<pos:position pos:line="6" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="52"/></parameter_list>
<block pos:line="7" pos:column="1">{
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">register<pos:position pos:line="8" pos:column="11"/></specifier> <specifier pos:line="8" pos:column="12">const<pos:position pos:line="8" pos:column="17"/></specifier> <name pos:line="8" pos:column="18">char<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">p<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">pattern<pos:position pos:line="8" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="37">*<pos:position pos:line="8" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="38">n<pos:position pos:line="8" pos:column="39"/></name> <init pos:line="8" pos:column="40">= <expr><name pos:line="8" pos:column="42">string<pos:position pos:line="8" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="9" pos:column="3">register<pos:position pos:line="9" pos:column="11"/></specifier> <name pos:line="9" pos:column="12">unsigned<pos:position pos:line="9" pos:column="20"/></name> <name pos:line="9" pos:column="21">char<pos:position pos:line="9" pos:column="25"/></name></type> <name pos:line="9" pos:column="26">c<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

<comment type="block" pos:line="11" pos:column="1">/* Note that this evaluates C many times.  */</comment>
<cpp:ifdef pos:line="12" pos:column="1"># <cpp:directive pos:line="12" pos:column="3">ifdef<pos:position pos:line="12" pos:column="8"/></cpp:directive> <name pos:line="12" pos:column="9">_LIBC<pos:position pos:line="12" pos:column="14"/></name></cpp:ifdef>
<cpp:define pos:line="13" pos:column="1">#  <cpp:directive pos:line="13" pos:column="4">define<pos:position pos:line="13" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="11">FOLD<pos:position pos:line="13" pos:column="15"/></name><parameter_list pos:line="13" pos:column="15">(<parameter><type><name pos:line="13" pos:column="16">c<pos:position pos:line="13" pos:column="17"/></name></type></parameter>)<pos:position pos:line="13" pos:column="18"/></parameter_list></cpp:macro> <cpp:value pos:line="13" pos:column="19">((flags &amp; FNM_CASEFOLD) ? tolower (c) : (c))<pos:position pos:line="13" pos:column="63"/></cpp:value></cpp:define>
<cpp:else pos:line="14" pos:column="1"># <cpp:directive pos:line="14" pos:column="3">else<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:else>
<cpp:define pos:line="15" pos:column="1">#  <cpp:directive pos:line="15" pos:column="4">define<pos:position pos:line="15" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="15" pos:column="11">FOLD<pos:position pos:line="15" pos:column="15"/></name><parameter_list pos:line="15" pos:column="15">(<parameter><type><name pos:line="15" pos:column="16">c<pos:position pos:line="15" pos:column="17"/></name></type></parameter>)<pos:position pos:line="15" pos:column="18"/></parameter_list></cpp:macro> <cpp:value pos:line="15" pos:column="19">((flags &amp; FNM_CASEFOLD) &amp;&amp; ISUPPER (c) ? tolower (c) : (c))<pos:position pos:line="15" pos:column="78"/></cpp:value></cpp:define>
<cpp:endif pos:line="16" pos:column="1"># <cpp:directive pos:line="16" pos:column="3">endif<pos:position pos:line="16" pos:column="8"/></cpp:directive></cpp:endif>

  <while pos:line="18" pos:column="3">while <condition pos:line="18" pos:column="9">(<expr><operator pos:line="18" pos:column="10">(<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">c<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">*<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">p<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">++<pos:position pos:line="18" pos:column="19"/></operator><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator> <operator pos:line="18" pos:column="21">!=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="char" pos:line="18" pos:column="24">'\0'<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition>
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">c<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">=<pos:position pos:line="20" pos:column="10"/></operator> <call><name pos:line="20" pos:column="11">FOLD<pos:position pos:line="20" pos:column="15"/></name> <argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">c<pos:position pos:line="20" pos:column="18"/></name></expr></argument>)<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>

      <switch pos:line="22" pos:column="7">switch <condition pos:line="22" pos:column="14">(<expr><name pos:line="22" pos:column="15">c<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition>
	<block pos:line="23" pos:column="9">{
	<case pos:line="24" pos:column="9">case <expr><literal type="char" pos:line="24" pos:column="14">'?'<pos:position pos:line="24" pos:column="17"/></literal></expr>:<pos:position pos:line="24" pos:column="18"/></case>
	  <if pos:line="25" pos:column="11">if <condition pos:line="25" pos:column="14">(<expr><operator pos:line="25" pos:column="15">*<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">n<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">==<pos:position pos:line="25" pos:column="20"/></operator> <literal type="char" pos:line="25" pos:column="21">'\0'<pos:position pos:line="25" pos:column="25"/></literal></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
	    <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><name pos:line="26" pos:column="20">FNM_NOMATCH<pos:position pos:line="26" pos:column="31"/></name></expr>;<pos:position pos:line="26" pos:column="32"/></return></block></then>
	  <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><operator pos:line="27" pos:column="20">*<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">n<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">==<pos:position pos:line="27" pos:column="25"/></operator> <literal type="char" pos:line="27" pos:column="26">'/'<pos:position pos:line="27" pos:column="29"/></literal> <operator pos:line="27" pos:column="30">&amp;&amp;<pos:position pos:line="27" pos:column="40"/></operator> <operator pos:line="27" pos:column="33">(<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">flags<pos:position pos:line="27" pos:column="39"/></name> <operator pos:line="27" pos:column="40">&amp;<pos:position pos:line="27" pos:column="45"/></operator> <name pos:line="27" pos:column="42">FNM_FILE_NAME<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">)<pos:position pos:line="27" pos:column="56"/></operator></expr>)<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57">
	    <block type="pseudo"><return pos:line="28" pos:column="13">return <expr><name pos:line="28" pos:column="20">FNM_NOMATCH<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></return></block></then></if></elseif>
	  <elseif pos:line="29" pos:column="11">else <if pos:line="29" pos:column="16">if <condition pos:line="29" pos:column="19">(<expr><operator pos:line="29" pos:column="20">*<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="21">n<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">==<pos:position pos:line="29" pos:column="25"/></operator> <literal type="char" pos:line="29" pos:column="26">'.'<pos:position pos:line="29" pos:column="29"/></literal> <operator pos:line="29" pos:column="30">&amp;&amp;<pos:position pos:line="29" pos:column="40"/></operator> <name pos:line="29" pos:column="33">no_leading_period<pos:position pos:line="29" pos:column="50"/></name>
		   <operator pos:line="30" pos:column="20">&amp;&amp;<pos:position pos:line="30" pos:column="30"/></operator> <operator pos:line="30" pos:column="23">(<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">n<pos:position pos:line="30" pos:column="25"/></name> <operator pos:line="30" pos:column="26">==<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="29">string<pos:position pos:line="30" pos:column="35"/></name>
		       <operator pos:line="31" pos:column="24">||<pos:position pos:line="31" pos:column="26"/></operator> <operator pos:line="31" pos:column="27">(<pos:position pos:line="31" pos:column="28"/></operator><name><name pos:line="31" pos:column="28">n<pos:position pos:line="31" pos:column="29"/></name><index pos:line="31" pos:column="29">[<expr><operator pos:line="31" pos:column="30">-<pos:position pos:line="31" pos:column="31"/></operator><literal type="number" pos:line="31" pos:column="31">1<pos:position pos:line="31" pos:column="32"/></literal></expr>]<pos:position pos:line="31" pos:column="33"/></index></name> <operator pos:line="31" pos:column="34">==<pos:position pos:line="31" pos:column="36"/></operator> <literal type="char" pos:line="31" pos:column="37">'/'<pos:position pos:line="31" pos:column="40"/></literal> <operator pos:line="31" pos:column="41">&amp;&amp;<pos:position pos:line="31" pos:column="51"/></operator> <operator pos:line="31" pos:column="44">(<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">flags<pos:position pos:line="31" pos:column="50"/></name> <operator pos:line="31" pos:column="51">&amp;<pos:position pos:line="31" pos:column="56"/></operator> <name pos:line="31" pos:column="53">FNM_FILE_NAME<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">)<pos:position pos:line="31" pos:column="67"/></operator><operator pos:line="31" pos:column="67">)<pos:position pos:line="31" pos:column="68"/></operator><operator pos:line="31" pos:column="68">)<pos:position pos:line="31" pos:column="69"/></operator></expr>)<pos:position pos:line="31" pos:column="70"/></condition><then pos:line="31" pos:column="70">
	    <block type="pseudo"><return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">FNM_NOMATCH<pos:position pos:line="32" pos:column="31"/></name></expr>;<pos:position pos:line="32" pos:column="32"/></return></block></then></if></elseif></if>
	  <break pos:line="33" pos:column="11">break;<pos:position pos:line="33" pos:column="17"/></break>

	<case pos:line="35" pos:column="9">case <expr><literal type="char" pos:line="35" pos:column="14">'\\'<pos:position pos:line="35" pos:column="18"/></literal></expr>:<pos:position pos:line="35" pos:column="19"/></case>
	  <if pos:line="36" pos:column="11">if <condition pos:line="36" pos:column="14">(<expr><operator pos:line="36" pos:column="15">!<pos:position pos:line="36" pos:column="16"/></operator><operator pos:line="36" pos:column="16">(<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">flags<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&amp;<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="25">FNM_NOESCAPE<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">)<pos:position pos:line="36" pos:column="38"/></operator></expr>)<pos:position pos:line="36" pos:column="39"/></condition><then pos:line="36" pos:column="39">
	    <block pos:line="37" pos:column="13">{
	      <expr_stmt><expr><name pos:line="38" pos:column="15">c<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <operator pos:line="38" pos:column="19">*<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">p<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">++<pos:position pos:line="38" pos:column="23"/></operator></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
	      <if pos:line="39" pos:column="15">if <condition pos:line="39" pos:column="18">(<expr><name pos:line="39" pos:column="19">c<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">==<pos:position pos:line="39" pos:column="23"/></operator> <literal type="char" pos:line="39" pos:column="24">'\0'<pos:position pos:line="39" pos:column="28"/></literal></expr>)<pos:position pos:line="39" pos:column="29"/></condition><then pos:line="39" pos:column="29">
		<comment type="block" pos:line="40" pos:column="17">/* Trailing \ loses.  */</comment>
		<block type="pseudo"><return pos:line="41" pos:column="17">return <expr><name pos:line="41" pos:column="24">FNM_NOMATCH<pos:position pos:line="41" pos:column="35"/></name></expr>;<pos:position pos:line="41" pos:column="36"/></return></block></then></if>
	      <expr_stmt><expr><name pos:line="42" pos:column="15">c<pos:position pos:line="42" pos:column="16"/></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <call><name pos:line="42" pos:column="19">FOLD<pos:position pos:line="42" pos:column="23"/></name> <argument_list pos:line="42" pos:column="24">(<argument><expr><name pos:line="42" pos:column="25">c<pos:position pos:line="42" pos:column="26"/></name></expr></argument>)<pos:position pos:line="42" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
	    }<pos:position pos:line="43" pos:column="14"/></block></then></if>
	  <if pos:line="44" pos:column="11">if <condition pos:line="44" pos:column="14">(<expr><call><name pos:line="44" pos:column="15">FOLD<pos:position pos:line="44" pos:column="19"/></name> <argument_list pos:line="44" pos:column="20">(<argument><expr><operator pos:line="44" pos:column="21">(<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">unsigned<pos:position pos:line="44" pos:column="30"/></name> <name pos:line="44" pos:column="31">char<pos:position pos:line="44" pos:column="35"/></name><operator pos:line="44" pos:column="35">)<pos:position pos:line="44" pos:column="36"/></operator> <operator pos:line="44" pos:column="37">*<pos:position pos:line="44" pos:column="38"/></operator><name pos:line="44" pos:column="38">n<pos:position pos:line="44" pos:column="39"/></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call> <operator pos:line="44" pos:column="41">!=<pos:position pos:line="44" pos:column="43"/></operator> <name pos:line="44" pos:column="44">c<pos:position pos:line="44" pos:column="45"/></name></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46">
	    <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><name pos:line="45" pos:column="20">FNM_NOMATCH<pos:position pos:line="45" pos:column="31"/></name></expr>;<pos:position pos:line="45" pos:column="32"/></return></block></then></if>
	  <break pos:line="46" pos:column="11">break;<pos:position pos:line="46" pos:column="17"/></break>

	<case pos:line="48" pos:column="9">case <expr><literal type="char" pos:line="48" pos:column="14">'*'<pos:position pos:line="48" pos:column="17"/></literal></expr>:<pos:position pos:line="48" pos:column="18"/></case>
	  <if pos:line="49" pos:column="11">if <condition pos:line="49" pos:column="14">(<expr><operator pos:line="49" pos:column="15">*<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">n<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">==<pos:position pos:line="49" pos:column="20"/></operator> <literal type="char" pos:line="49" pos:column="21">'.'<pos:position pos:line="49" pos:column="24"/></literal> <operator pos:line="49" pos:column="25">&amp;&amp;<pos:position pos:line="49" pos:column="35"/></operator> <name pos:line="49" pos:column="28">no_leading_period<pos:position pos:line="49" pos:column="45"/></name>
	      <operator pos:line="50" pos:column="15">&amp;&amp;<pos:position pos:line="50" pos:column="25"/></operator> <operator pos:line="50" pos:column="18">(<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">n<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">==<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">string<pos:position pos:line="50" pos:column="30"/></name>
		  <operator pos:line="51" pos:column="19">||<pos:position pos:line="51" pos:column="21"/></operator> <operator pos:line="51" pos:column="22">(<pos:position pos:line="51" pos:column="23"/></operator><name><name pos:line="51" pos:column="23">n<pos:position pos:line="51" pos:column="24"/></name><index pos:line="51" pos:column="24">[<expr><operator pos:line="51" pos:column="25">-<pos:position pos:line="51" pos:column="26"/></operator><literal type="number" pos:line="51" pos:column="26">1<pos:position pos:line="51" pos:column="27"/></literal></expr>]<pos:position pos:line="51" pos:column="28"/></index></name> <operator pos:line="51" pos:column="29">==<pos:position pos:line="51" pos:column="31"/></operator> <literal type="char" pos:line="51" pos:column="32">'/'<pos:position pos:line="51" pos:column="35"/></literal> <operator pos:line="51" pos:column="36">&amp;&amp;<pos:position pos:line="51" pos:column="46"/></operator> <operator pos:line="51" pos:column="39">(<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">flags<pos:position pos:line="51" pos:column="45"/></name> <operator pos:line="51" pos:column="46">&amp;<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="48">FNM_FILE_NAME<pos:position pos:line="51" pos:column="61"/></name><operator pos:line="51" pos:column="61">)<pos:position pos:line="51" pos:column="62"/></operator><operator pos:line="51" pos:column="62">)<pos:position pos:line="51" pos:column="63"/></operator><operator pos:line="51" pos:column="63">)<pos:position pos:line="51" pos:column="64"/></operator></expr>)<pos:position pos:line="51" pos:column="65"/></condition><then pos:line="51" pos:column="65">
	    <block type="pseudo"><return pos:line="52" pos:column="13">return <expr><name pos:line="52" pos:column="20">FNM_NOMATCH<pos:position pos:line="52" pos:column="31"/></name></expr>;<pos:position pos:line="52" pos:column="32"/></return></block></then></if>

	  <for pos:line="54" pos:column="11">for <control pos:line="54" pos:column="15">(<init><expr><name pos:line="54" pos:column="16">c<pos:position pos:line="54" pos:column="17"/></name> <operator pos:line="54" pos:column="18">=<pos:position pos:line="54" pos:column="19"/></operator> <operator pos:line="54" pos:column="20">*<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="21">p<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">++<pos:position pos:line="54" pos:column="24"/></operator></expr>;<pos:position pos:line="54" pos:column="25"/></init> <condition><expr><name pos:line="54" pos:column="26">c<pos:position pos:line="54" pos:column="27"/></name> <operator pos:line="54" pos:column="28">==<pos:position pos:line="54" pos:column="30"/></operator> <literal type="char" pos:line="54" pos:column="31">'?'<pos:position pos:line="54" pos:column="34"/></literal> <operator pos:line="54" pos:column="35">||<pos:position pos:line="54" pos:column="37"/></operator> <name pos:line="54" pos:column="38">c<pos:position pos:line="54" pos:column="39"/></name> <operator pos:line="54" pos:column="40">==<pos:position pos:line="54" pos:column="42"/></operator> <literal type="char" pos:line="54" pos:column="43">'*'<pos:position pos:line="54" pos:column="46"/></literal></expr>;<pos:position pos:line="54" pos:column="47"/></condition> <incr><expr><name pos:line="54" pos:column="48">c<pos:position pos:line="54" pos:column="49"/></name> <operator pos:line="54" pos:column="50">=<pos:position pos:line="54" pos:column="51"/></operator> <operator pos:line="54" pos:column="52">*<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="53">p<pos:position pos:line="54" pos:column="54"/></name><operator pos:line="54" pos:column="54">++<pos:position pos:line="54" pos:column="56"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="57"/></control>
	    <block pos:line="55" pos:column="13">{
	      <if pos:line="56" pos:column="15">if <condition pos:line="56" pos:column="18">(<expr><operator pos:line="56" pos:column="19">*<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="20">n<pos:position pos:line="56" pos:column="21"/></name> <operator pos:line="56" pos:column="22">==<pos:position pos:line="56" pos:column="24"/></operator> <literal type="char" pos:line="56" pos:column="25">'/'<pos:position pos:line="56" pos:column="28"/></literal> <operator pos:line="56" pos:column="29">&amp;&amp;<pos:position pos:line="56" pos:column="39"/></operator> <operator pos:line="56" pos:column="32">(<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="33">flags<pos:position pos:line="56" pos:column="38"/></name> <operator pos:line="56" pos:column="39">&amp;<pos:position pos:line="56" pos:column="44"/></operator> <name pos:line="56" pos:column="41">FNM_FILE_NAME<pos:position pos:line="56" pos:column="54"/></name><operator pos:line="56" pos:column="54">)<pos:position pos:line="56" pos:column="55"/></operator></expr>)<pos:position pos:line="56" pos:column="56"/></condition><then pos:line="56" pos:column="56">
		<comment type="block" pos:line="57" pos:column="17">/* A slash does not match a wildcard under FNM_FILE_NAME.  */</comment>
		<block type="pseudo"><return pos:line="58" pos:column="17">return <expr><name pos:line="58" pos:column="24">FNM_NOMATCH<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></return></block></then>
	      <elseif pos:line="59" pos:column="15">else <if pos:line="59" pos:column="20">if <condition pos:line="59" pos:column="23">(<expr><name pos:line="59" pos:column="24">c<pos:position pos:line="59" pos:column="25"/></name> <operator pos:line="59" pos:column="26">==<pos:position pos:line="59" pos:column="28"/></operator> <literal type="char" pos:line="59" pos:column="29">'?'<pos:position pos:line="59" pos:column="32"/></literal></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33">
		<block pos:line="60" pos:column="17">{
		  <comment type="block" pos:line="61" pos:column="19">/* A ? needs to match one character.  */</comment>
		  <if pos:line="62" pos:column="19">if <condition pos:line="62" pos:column="22">(<expr><operator pos:line="62" pos:column="23">*<pos:position pos:line="62" pos:column="24"/></operator><name pos:line="62" pos:column="24">n<pos:position pos:line="62" pos:column="25"/></name> <operator pos:line="62" pos:column="26">==<pos:position pos:line="62" pos:column="28"/></operator> <literal type="char" pos:line="62" pos:column="29">'\0'<pos:position pos:line="62" pos:column="33"/></literal></expr>)<pos:position pos:line="62" pos:column="34"/></condition><then pos:line="62" pos:column="34">
		    <comment type="block" pos:line="63" pos:column="21">/* There isn't another character; no match.  */</comment>
		    <block type="pseudo"><return pos:line="64" pos:column="21">return <expr><name pos:line="64" pos:column="28">FNM_NOMATCH<pos:position pos:line="64" pos:column="39"/></name></expr>;<pos:position pos:line="64" pos:column="40"/></return></block></then>
		  <else pos:line="65" pos:column="19">else
		    <comment type="block" pos:line="66" pos:column="21">/* One character of the string is consumed in matching
		       this ? wildcard, so *??? won't match if there are
		       less than three characters.  */</comment>
		    <block type="pseudo"><expr_stmt><expr><operator pos:line="69" pos:column="21">++<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="23">n<pos:position pos:line="69" pos:column="24"/></name></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt></block></else></if>
		}<pos:position pos:line="70" pos:column="18"/></block></then></if></elseif></if>
	    }<pos:position pos:line="71" pos:column="14"/></block></for>

	  <if pos:line="73" pos:column="11">if <condition pos:line="73" pos:column="14">(<expr><name pos:line="73" pos:column="15">c<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">==<pos:position pos:line="73" pos:column="19"/></operator> <literal type="char" pos:line="73" pos:column="20">'\0'<pos:position pos:line="73" pos:column="24"/></literal></expr>)<pos:position pos:line="73" pos:column="25"/></condition><then pos:line="73" pos:column="25">
	    <comment type="block" pos:line="74" pos:column="13">/* The wildcard(s) is/are the last element of the pattern.
	       If the name is a file name and contains another slash
	       this does mean it cannot match.  */</comment>
	    <block type="pseudo"><return pos:line="77" pos:column="13">return <expr><operator pos:line="77" pos:column="20">(<pos:position pos:line="77" pos:column="21"/></operator><ternary><condition><expr><operator pos:line="77" pos:column="21">(<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">flags<pos:position pos:line="77" pos:column="27"/></name> <operator pos:line="77" pos:column="28">&amp;<pos:position pos:line="77" pos:column="33"/></operator> <name pos:line="77" pos:column="30">FNM_FILE_NAME<pos:position pos:line="77" pos:column="43"/></name><operator pos:line="77" pos:column="43">)<pos:position pos:line="77" pos:column="44"/></operator> <operator pos:line="77" pos:column="45">&amp;&amp;<pos:position pos:line="77" pos:column="55"/></operator> <call><name pos:line="77" pos:column="48">strchr<pos:position pos:line="77" pos:column="54"/></name> <argument_list pos:line="77" pos:column="55">(<argument><expr><name pos:line="77" pos:column="56">n<pos:position pos:line="77" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="77" pos:column="59">'/'<pos:position pos:line="77" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="63"/></argument_list></call> <operator pos:line="77" pos:column="64">!=<pos:position pos:line="77" pos:column="66"/></operator> <name pos:line="77" pos:column="67">NULL<pos:position pos:line="77" pos:column="71"/></name></expr>
		    ?<pos:position pos:line="78" pos:column="22"/></condition><then pos:line="78" pos:column="22"> <expr><name pos:line="78" pos:column="23">FNM_NOMATCH<pos:position pos:line="78" pos:column="34"/></name></expr> <pos:position pos:line="78" pos:column="35"/></then><else pos:line="78" pos:column="35">: <expr><literal type="number" pos:line="78" pos:column="37">0<pos:position pos:line="78" pos:column="38"/></literal></expr></else></ternary><operator pos:line="78" pos:column="38">)<pos:position pos:line="78" pos:column="39"/></operator></expr>;<pos:position pos:line="78" pos:column="40"/></return></block></then>
	  <else pos:line="79" pos:column="11">else
	    <block pos:line="80" pos:column="13">{
	      <decl_stmt><decl><type><specifier pos:line="81" pos:column="15">const<pos:position pos:line="81" pos:column="20"/></specifier> <name pos:line="81" pos:column="21">char<pos:position pos:line="81" pos:column="25"/></name> <modifier pos:line="81" pos:column="26">*<pos:position pos:line="81" pos:column="27"/></modifier></type><name pos:line="81" pos:column="27">endp<pos:position pos:line="81" pos:column="31"/></name></decl>;<pos:position pos:line="81" pos:column="32"/></decl_stmt>

<cpp:if pos:line="83" pos:column="1">#<cpp:directive pos:line="83" pos:column="2">if<pos:position pos:line="83" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="83" pos:column="5">0<pos:position pos:line="83" pos:column="6"/></literal></expr></cpp:if>
	      endp = __strchrnul (n, (flags &amp; FNM_FILE_NAME) ? '/' : '\0');
<cpp:else pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">else<pos:position pos:line="85" pos:column="6"/></cpp:directive></cpp:else>
<comment type="block" pos:line="86" pos:column="1">/* replace call to internal glibc function with equivalent */</comment>
	      <if pos:line="87" pos:column="15">if <condition pos:line="87" pos:column="18">(<expr><operator pos:line="87" pos:column="19">!<pos:position pos:line="87" pos:column="20"/></operator><operator pos:line="87" pos:column="20">(<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="21">flags<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">&amp;<pos:position pos:line="87" pos:column="32"/></operator> <name pos:line="87" pos:column="29">FNM_FILE_NAME<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">)<pos:position pos:line="87" pos:column="43"/></operator> <operator pos:line="87" pos:column="44">||<pos:position pos:line="87" pos:column="46"/></operator> <operator pos:line="87" pos:column="47">(<pos:position pos:line="87" pos:column="48"/></operator><operator pos:line="87" pos:column="48">(<pos:position pos:line="87" pos:column="49"/></operator><name pos:line="87" pos:column="49">endp<pos:position pos:line="87" pos:column="53"/></name> <operator pos:line="87" pos:column="54">=<pos:position pos:line="87" pos:column="55"/></operator> <call><name pos:line="87" pos:column="56">strchr<pos:position pos:line="87" pos:column="62"/></name><argument_list pos:line="87" pos:column="62">(<argument><expr><name pos:line="87" pos:column="63">n<pos:position pos:line="87" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="87" pos:column="66">'/'<pos:position pos:line="87" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="70"/></argument_list></call><operator pos:line="87" pos:column="70">)<pos:position pos:line="87" pos:column="71"/></operator> <operator pos:line="87" pos:column="72">==<pos:position pos:line="87" pos:column="74"/></operator> <name pos:line="87" pos:column="75">NULL<pos:position pos:line="87" pos:column="79"/></name><operator pos:line="87" pos:column="79">)<pos:position pos:line="87" pos:column="80"/></operator></expr>)<pos:position pos:line="87" pos:column="81"/></condition><then pos:line="87" pos:column="81">
		<block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="17">endp<pos:position pos:line="88" pos:column="21"/></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <name pos:line="88" pos:column="24">n<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">+<pos:position pos:line="88" pos:column="27"/></operator> <call><name pos:line="88" pos:column="28">strlen<pos:position pos:line="88" pos:column="34"/></name><argument_list pos:line="88" pos:column="34">(<argument><expr><name pos:line="88" pos:column="35">n<pos:position pos:line="88" pos:column="36"/></name></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt></block></then></if>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif>

	      <if pos:line="91" pos:column="15">if <condition pos:line="91" pos:column="18">(<expr><name pos:line="91" pos:column="19">c<pos:position pos:line="91" pos:column="20"/></name> <operator pos:line="91" pos:column="21">==<pos:position pos:line="91" pos:column="23"/></operator> <literal type="char" pos:line="91" pos:column="24">'['<pos:position pos:line="91" pos:column="27"/></literal></expr>)<pos:position pos:line="91" pos:column="28"/></condition><then pos:line="91" pos:column="28">
		<block pos:line="92" pos:column="17">{
		  <decl_stmt><decl><type><name pos:line="93" pos:column="19">int<pos:position pos:line="93" pos:column="22"/></name></type> <name pos:line="93" pos:column="23">flags2<pos:position pos:line="93" pos:column="29"/></name> <init pos:line="93" pos:column="30">= <expr><operator pos:line="93" pos:column="32">(<pos:position pos:line="93" pos:column="33"/></operator><ternary><condition><expr><operator pos:line="93" pos:column="33">(<pos:position pos:line="93" pos:column="34"/></operator><name pos:line="93" pos:column="34">flags<pos:position pos:line="93" pos:column="39"/></name> <operator pos:line="93" pos:column="40">&amp;<pos:position pos:line="93" pos:column="45"/></operator> <name pos:line="93" pos:column="42">FNM_FILE_NAME<pos:position pos:line="93" pos:column="55"/></name><operator pos:line="93" pos:column="55">)<pos:position pos:line="93" pos:column="56"/></operator></expr>
				?<pos:position pos:line="94" pos:column="34"/></condition><then pos:line="94" pos:column="34"> <expr><name pos:line="94" pos:column="35">flags<pos:position pos:line="94" pos:column="40"/></name></expr> <pos:position pos:line="94" pos:column="41"/></then><else pos:line="94" pos:column="41">: <expr><operator pos:line="94" pos:column="43">(<pos:position pos:line="94" pos:column="44"/></operator><name pos:line="94" pos:column="44">flags<pos:position pos:line="94" pos:column="49"/></name> <operator pos:line="94" pos:column="50">&amp;<pos:position pos:line="94" pos:column="55"/></operator> <operator pos:line="94" pos:column="52">~<pos:position pos:line="94" pos:column="53"/></operator><name pos:line="94" pos:column="53">FNM_PERIOD<pos:position pos:line="94" pos:column="63"/></name><operator pos:line="94" pos:column="63">)<pos:position pos:line="94" pos:column="64"/></operator></expr></else></ternary><operator pos:line="94" pos:column="64">)<pos:position pos:line="94" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="94" pos:column="66"/></decl_stmt>

		  <for pos:line="96" pos:column="19">for <control pos:line="96" pos:column="23">(<init><expr><operator pos:line="96" pos:column="24">--<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="26">p<pos:position pos:line="96" pos:column="27"/></name></expr>;<pos:position pos:line="96" pos:column="28"/></init> <condition><expr><name pos:line="96" pos:column="29">n<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">&lt;<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="33">endp<pos:position pos:line="96" pos:column="37"/></name></expr>;<pos:position pos:line="96" pos:column="38"/></condition> <incr><expr><operator pos:line="96" pos:column="39">++<pos:position pos:line="96" pos:column="41"/></operator><name pos:line="96" pos:column="41">n<pos:position pos:line="96" pos:column="42"/></name></expr></incr>)<pos:position pos:line="96" pos:column="43"/></control>
		    <block type="pseudo"><if pos:line="97" pos:column="21">if <condition pos:line="97" pos:column="24">(<expr><call><name pos:line="97" pos:column="25">internal_fnmatch<pos:position pos:line="97" pos:column="41"/></name> <argument_list pos:line="97" pos:column="42">(<argument><expr><name pos:line="97" pos:column="43">p<pos:position pos:line="97" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="46">n<pos:position pos:line="97" pos:column="47"/></name></expr></argument>,
					  <argument><expr><operator pos:line="98" pos:column="43">(<pos:position pos:line="98" pos:column="44"/></operator><name pos:line="98" pos:column="44">no_leading_period<pos:position pos:line="98" pos:column="61"/></name>
					   <operator pos:line="99" pos:column="44">&amp;&amp;<pos:position pos:line="99" pos:column="54"/></operator> <operator pos:line="99" pos:column="47">(<pos:position pos:line="99" pos:column="48"/></operator><name pos:line="99" pos:column="48">n<pos:position pos:line="99" pos:column="49"/></name> <operator pos:line="99" pos:column="50">==<pos:position pos:line="99" pos:column="52"/></operator> <name pos:line="99" pos:column="53">string<pos:position pos:line="99" pos:column="59"/></name>
					       <operator pos:line="100" pos:column="48">||<pos:position pos:line="100" pos:column="50"/></operator> <operator pos:line="100" pos:column="51">(<pos:position pos:line="100" pos:column="52"/></operator><name><name pos:line="100" pos:column="52">n<pos:position pos:line="100" pos:column="53"/></name><index pos:line="100" pos:column="53">[<expr><operator pos:line="100" pos:column="54">-<pos:position pos:line="100" pos:column="55"/></operator><literal type="number" pos:line="100" pos:column="55">1<pos:position pos:line="100" pos:column="56"/></literal></expr>]<pos:position pos:line="100" pos:column="57"/></index></name> <operator pos:line="100" pos:column="58">==<pos:position pos:line="100" pos:column="60"/></operator> <literal type="char" pos:line="100" pos:column="61">'/'<pos:position pos:line="100" pos:column="64"/></literal>
						   <operator pos:line="101" pos:column="52">&amp;&amp;<pos:position pos:line="101" pos:column="62"/></operator> <operator pos:line="101" pos:column="55">(<pos:position pos:line="101" pos:column="56"/></operator><name pos:line="101" pos:column="56">flags<pos:position pos:line="101" pos:column="61"/></name>
						       <operator pos:line="102" pos:column="56">&amp;<pos:position pos:line="102" pos:column="61"/></operator> <name pos:line="102" pos:column="58">FNM_FILE_NAME<pos:position pos:line="102" pos:column="71"/></name><operator pos:line="102" pos:column="71">)<pos:position pos:line="102" pos:column="72"/></operator><operator pos:line="102" pos:column="72">)<pos:position pos:line="102" pos:column="73"/></operator><operator pos:line="102" pos:column="73">)<pos:position pos:line="102" pos:column="74"/></operator><operator pos:line="102" pos:column="74">)<pos:position pos:line="102" pos:column="75"/></operator></expr></argument>,
					  <argument><expr><name pos:line="103" pos:column="43">flags2<pos:position pos:line="103" pos:column="49"/></name></expr></argument>)<pos:position pos:line="103" pos:column="50"/></argument_list></call>
			<operator pos:line="104" pos:column="25">==<pos:position pos:line="104" pos:column="27"/></operator> <literal type="number" pos:line="104" pos:column="28">0<pos:position pos:line="104" pos:column="29"/></literal></expr>)<pos:position pos:line="104" pos:column="30"/></condition><then pos:line="104" pos:column="30">
		      <block type="pseudo"><return pos:line="105" pos:column="23">return <expr><literal type="number" pos:line="105" pos:column="30">0<pos:position pos:line="105" pos:column="31"/></literal></expr>;<pos:position pos:line="105" pos:column="32"/></return></block></then></if></block></for>
		}<pos:position pos:line="106" pos:column="18"/></block></then>
	      <elseif pos:line="107" pos:column="15">else <if pos:line="107" pos:column="20">if <condition pos:line="107" pos:column="23">(<expr><name pos:line="107" pos:column="24">c<pos:position pos:line="107" pos:column="25"/></name> <operator pos:line="107" pos:column="26">==<pos:position pos:line="107" pos:column="28"/></operator> <literal type="char" pos:line="107" pos:column="29">'/'<pos:position pos:line="107" pos:column="32"/></literal> <operator pos:line="107" pos:column="33">&amp;&amp;<pos:position pos:line="107" pos:column="43"/></operator> <operator pos:line="107" pos:column="36">(<pos:position pos:line="107" pos:column="37"/></operator><name pos:line="107" pos:column="37">flags<pos:position pos:line="107" pos:column="42"/></name> <operator pos:line="107" pos:column="43">&amp;<pos:position pos:line="107" pos:column="48"/></operator> <name pos:line="107" pos:column="45">FNM_FILE_NAME<pos:position pos:line="107" pos:column="58"/></name><operator pos:line="107" pos:column="58">)<pos:position pos:line="107" pos:column="59"/></operator></expr>)<pos:position pos:line="107" pos:column="60"/></condition><then pos:line="107" pos:column="60">
		<block pos:line="108" pos:column="17">{
		  <while pos:line="109" pos:column="19">while <condition pos:line="109" pos:column="25">(<expr><operator pos:line="109" pos:column="26">*<pos:position pos:line="109" pos:column="27"/></operator><name pos:line="109" pos:column="27">n<pos:position pos:line="109" pos:column="28"/></name> <operator pos:line="109" pos:column="29">!=<pos:position pos:line="109" pos:column="31"/></operator> <literal type="char" pos:line="109" pos:column="32">'\0'<pos:position pos:line="109" pos:column="36"/></literal> <operator pos:line="109" pos:column="37">&amp;&amp;<pos:position pos:line="109" pos:column="47"/></operator> <operator pos:line="109" pos:column="40">*<pos:position pos:line="109" pos:column="41"/></operator><name pos:line="109" pos:column="41">n<pos:position pos:line="109" pos:column="42"/></name> <operator pos:line="109" pos:column="43">!=<pos:position pos:line="109" pos:column="45"/></operator> <literal type="char" pos:line="109" pos:column="46">'/'<pos:position pos:line="109" pos:column="49"/></literal></expr>)<pos:position pos:line="109" pos:column="50"/></condition>
		    <block type="pseudo"><expr_stmt><expr><operator pos:line="110" pos:column="21">++<pos:position pos:line="110" pos:column="23"/></operator><name pos:line="110" pos:column="23">n<pos:position pos:line="110" pos:column="24"/></name></expr>;<pos:position pos:line="110" pos:column="25"/></expr_stmt></block></while>
		  <if pos:line="111" pos:column="19">if <condition pos:line="111" pos:column="22">(<expr><operator pos:line="111" pos:column="23">*<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">n<pos:position pos:line="111" pos:column="25"/></name> <operator pos:line="111" pos:column="26">==<pos:position pos:line="111" pos:column="28"/></operator> <literal type="char" pos:line="111" pos:column="29">'/'<pos:position pos:line="111" pos:column="32"/></literal>
		      <operator pos:line="112" pos:column="23">&amp;&amp;<pos:position pos:line="112" pos:column="33"/></operator> <operator pos:line="112" pos:column="26">(<pos:position pos:line="112" pos:column="27"/></operator><call><name pos:line="112" pos:column="27">internal_fnmatch<pos:position pos:line="112" pos:column="43"/></name> <argument_list pos:line="112" pos:column="44">(<argument><expr><name pos:line="112" pos:column="45">p<pos:position pos:line="112" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="48">n<pos:position pos:line="112" pos:column="49"/></name> <operator pos:line="112" pos:column="50">+<pos:position pos:line="112" pos:column="51"/></operator> <literal type="number" pos:line="112" pos:column="52">1<pos:position pos:line="112" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="55">flags<pos:position pos:line="112" pos:column="60"/></name> <operator pos:line="112" pos:column="61">&amp;<pos:position pos:line="112" pos:column="66"/></operator> <name pos:line="112" pos:column="63">FNM_PERIOD<pos:position pos:line="112" pos:column="73"/></name></expr></argument>,
					    <argument><expr><name pos:line="113" pos:column="45">flags<pos:position pos:line="113" pos:column="50"/></name></expr></argument>)<pos:position pos:line="113" pos:column="51"/></argument_list></call> <operator pos:line="113" pos:column="52">==<pos:position pos:line="113" pos:column="54"/></operator> <literal type="number" pos:line="113" pos:column="55">0<pos:position pos:line="113" pos:column="56"/></literal><operator pos:line="113" pos:column="56">)<pos:position pos:line="113" pos:column="57"/></operator></expr>)<pos:position pos:line="113" pos:column="58"/></condition><then pos:line="113" pos:column="58">
		    <block type="pseudo"><return pos:line="114" pos:column="21">return <expr><literal type="number" pos:line="114" pos:column="28">0<pos:position pos:line="114" pos:column="29"/></literal></expr>;<pos:position pos:line="114" pos:column="30"/></return></block></then></if>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if></elseif>
	      <else pos:line="116" pos:column="15">else
		<block pos:line="117" pos:column="17">{
		  <decl_stmt><decl><type><name pos:line="118" pos:column="19">int<pos:position pos:line="118" pos:column="22"/></name></type> <name pos:line="118" pos:column="23">flags2<pos:position pos:line="118" pos:column="29"/></name> <init pos:line="118" pos:column="30">= <expr><operator pos:line="118" pos:column="32">(<pos:position pos:line="118" pos:column="33"/></operator><ternary><condition><expr><operator pos:line="118" pos:column="33">(<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="34">flags<pos:position pos:line="118" pos:column="39"/></name> <operator pos:line="118" pos:column="40">&amp;<pos:position pos:line="118" pos:column="45"/></operator> <name pos:line="118" pos:column="42">FNM_FILE_NAME<pos:position pos:line="118" pos:column="55"/></name><operator pos:line="118" pos:column="55">)<pos:position pos:line="118" pos:column="56"/></operator></expr>
				?<pos:position pos:line="119" pos:column="34"/></condition><then pos:line="119" pos:column="34"> <expr><name pos:line="119" pos:column="35">flags<pos:position pos:line="119" pos:column="40"/></name></expr> <pos:position pos:line="119" pos:column="41"/></then><else pos:line="119" pos:column="41">: <expr><operator pos:line="119" pos:column="43">(<pos:position pos:line="119" pos:column="44"/></operator><name pos:line="119" pos:column="44">flags<pos:position pos:line="119" pos:column="49"/></name> <operator pos:line="119" pos:column="50">&amp;<pos:position pos:line="119" pos:column="55"/></operator> <operator pos:line="119" pos:column="52">~<pos:position pos:line="119" pos:column="53"/></operator><name pos:line="119" pos:column="53">FNM_PERIOD<pos:position pos:line="119" pos:column="63"/></name><operator pos:line="119" pos:column="63">)<pos:position pos:line="119" pos:column="64"/></operator></expr></else></ternary><operator pos:line="119" pos:column="64">)<pos:position pos:line="119" pos:column="65"/></operator></expr></init></decl>;<pos:position pos:line="119" pos:column="66"/></decl_stmt>

		  <if pos:line="121" pos:column="19">if <condition pos:line="121" pos:column="22">(<expr><name pos:line="121" pos:column="23">c<pos:position pos:line="121" pos:column="24"/></name> <operator pos:line="121" pos:column="25">==<pos:position pos:line="121" pos:column="27"/></operator> <literal type="char" pos:line="121" pos:column="28">'\\'<pos:position pos:line="121" pos:column="32"/></literal> <operator pos:line="121" pos:column="33">&amp;&amp;<pos:position pos:line="121" pos:column="43"/></operator> <operator pos:line="121" pos:column="36">!<pos:position pos:line="121" pos:column="37"/></operator><operator pos:line="121" pos:column="37">(<pos:position pos:line="121" pos:column="38"/></operator><name pos:line="121" pos:column="38">flags<pos:position pos:line="121" pos:column="43"/></name> <operator pos:line="121" pos:column="44">&amp;<pos:position pos:line="121" pos:column="49"/></operator> <name pos:line="121" pos:column="46">FNM_NOESCAPE<pos:position pos:line="121" pos:column="58"/></name><operator pos:line="121" pos:column="58">)<pos:position pos:line="121" pos:column="59"/></operator></expr>)<pos:position pos:line="121" pos:column="60"/></condition><then pos:line="121" pos:column="60">
		    <block type="pseudo"><expr_stmt><expr><name pos:line="122" pos:column="21">c<pos:position pos:line="122" pos:column="22"/></name> <operator pos:line="122" pos:column="23">=<pos:position pos:line="122" pos:column="24"/></operator> <operator pos:line="122" pos:column="25">*<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="26">p<pos:position pos:line="122" pos:column="27"/></name></expr>;<pos:position pos:line="122" pos:column="28"/></expr_stmt></block></then></if>
		  <expr_stmt><expr><name pos:line="123" pos:column="19">c<pos:position pos:line="123" pos:column="20"/></name> <operator pos:line="123" pos:column="21">=<pos:position pos:line="123" pos:column="22"/></operator> <call><name pos:line="123" pos:column="23">FOLD<pos:position pos:line="123" pos:column="27"/></name> <argument_list pos:line="123" pos:column="28">(<argument><expr><name pos:line="123" pos:column="29">c<pos:position pos:line="123" pos:column="30"/></name></expr></argument>)<pos:position pos:line="123" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="32"/></expr_stmt>
		  <for pos:line="124" pos:column="19">for <control pos:line="124" pos:column="23">(<init><expr><operator pos:line="124" pos:column="24">--<pos:position pos:line="124" pos:column="26"/></operator><name pos:line="124" pos:column="26">p<pos:position pos:line="124" pos:column="27"/></name></expr>;<pos:position pos:line="124" pos:column="28"/></init> <condition><expr><name pos:line="124" pos:column="29">n<pos:position pos:line="124" pos:column="30"/></name> <operator pos:line="124" pos:column="31">&lt;<pos:position pos:line="124" pos:column="35"/></operator> <name pos:line="124" pos:column="33">endp<pos:position pos:line="124" pos:column="37"/></name></expr>;<pos:position pos:line="124" pos:column="38"/></condition> <incr><expr><operator pos:line="124" pos:column="39">++<pos:position pos:line="124" pos:column="41"/></operator><name pos:line="124" pos:column="41">n<pos:position pos:line="124" pos:column="42"/></name></expr></incr>)<pos:position pos:line="124" pos:column="43"/></control>
		    <block type="pseudo"><if pos:line="125" pos:column="21">if <condition pos:line="125" pos:column="24">(<expr><call><name pos:line="125" pos:column="25">FOLD<pos:position pos:line="125" pos:column="29"/></name> <argument_list pos:line="125" pos:column="30">(<argument><expr><operator pos:line="125" pos:column="31">(<pos:position pos:line="125" pos:column="32"/></operator><name pos:line="125" pos:column="32">unsigned<pos:position pos:line="125" pos:column="40"/></name> <name pos:line="125" pos:column="41">char<pos:position pos:line="125" pos:column="45"/></name><operator pos:line="125" pos:column="45">)<pos:position pos:line="125" pos:column="46"/></operator> <operator pos:line="125" pos:column="47">*<pos:position pos:line="125" pos:column="48"/></operator><name pos:line="125" pos:column="48">n<pos:position pos:line="125" pos:column="49"/></name></expr></argument>)<pos:position pos:line="125" pos:column="50"/></argument_list></call> <operator pos:line="125" pos:column="51">==<pos:position pos:line="125" pos:column="53"/></operator> <name pos:line="125" pos:column="54">c<pos:position pos:line="125" pos:column="55"/></name>
			<operator pos:line="126" pos:column="25">&amp;&amp;<pos:position pos:line="126" pos:column="35"/></operator> <operator pos:line="126" pos:column="28">(<pos:position pos:line="126" pos:column="29"/></operator><call><name pos:line="126" pos:column="29">internal_fnmatch<pos:position pos:line="126" pos:column="45"/></name> <argument_list pos:line="126" pos:column="46">(<argument><expr><name pos:line="126" pos:column="47">p<pos:position pos:line="126" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="50">n<pos:position pos:line="126" pos:column="51"/></name></expr></argument>,
					      <argument><expr><operator pos:line="127" pos:column="47">(<pos:position pos:line="127" pos:column="48"/></operator><name pos:line="127" pos:column="48">no_leading_period<pos:position pos:line="127" pos:column="65"/></name>
					       <operator pos:line="128" pos:column="48">&amp;&amp;<pos:position pos:line="128" pos:column="58"/></operator> <operator pos:line="128" pos:column="51">(<pos:position pos:line="128" pos:column="52"/></operator><name pos:line="128" pos:column="52">n<pos:position pos:line="128" pos:column="53"/></name> <operator pos:line="128" pos:column="54">==<pos:position pos:line="128" pos:column="56"/></operator> <name pos:line="128" pos:column="57">string<pos:position pos:line="128" pos:column="63"/></name>
						   <operator pos:line="129" pos:column="52">||<pos:position pos:line="129" pos:column="54"/></operator> <operator pos:line="129" pos:column="55">(<pos:position pos:line="129" pos:column="56"/></operator><name><name pos:line="129" pos:column="56">n<pos:position pos:line="129" pos:column="57"/></name><index pos:line="129" pos:column="57">[<expr><operator pos:line="129" pos:column="58">-<pos:position pos:line="129" pos:column="59"/></operator><literal type="number" pos:line="129" pos:column="59">1<pos:position pos:line="129" pos:column="60"/></literal></expr>]<pos:position pos:line="129" pos:column="61"/></index></name> <operator pos:line="129" pos:column="62">==<pos:position pos:line="129" pos:column="64"/></operator> <literal type="char" pos:line="129" pos:column="65">'/'<pos:position pos:line="129" pos:column="68"/></literal>
						       <operator pos:line="130" pos:column="56">&amp;&amp;<pos:position pos:line="130" pos:column="66"/></operator> <operator pos:line="130" pos:column="59">(<pos:position pos:line="130" pos:column="60"/></operator><name pos:line="130" pos:column="60">flags<pos:position pos:line="130" pos:column="65"/></name>
							   <operator pos:line="131" pos:column="60">&amp;<pos:position pos:line="131" pos:column="65"/></operator> <name pos:line="131" pos:column="62">FNM_FILE_NAME<pos:position pos:line="131" pos:column="75"/></name><operator pos:line="131" pos:column="75">)<pos:position pos:line="131" pos:column="76"/></operator><operator pos:line="131" pos:column="76">)<pos:position pos:line="131" pos:column="77"/></operator><operator pos:line="131" pos:column="77">)<pos:position pos:line="131" pos:column="78"/></operator><operator pos:line="131" pos:column="78">)<pos:position pos:line="131" pos:column="79"/></operator></expr></argument>,
					      <argument><expr><name pos:line="132" pos:column="47">flags2<pos:position pos:line="132" pos:column="53"/></name></expr></argument>)<pos:position pos:line="132" pos:column="54"/></argument_list></call> <operator pos:line="132" pos:column="55">==<pos:position pos:line="132" pos:column="57"/></operator> <literal type="number" pos:line="132" pos:column="58">0<pos:position pos:line="132" pos:column="59"/></literal><operator pos:line="132" pos:column="59">)<pos:position pos:line="132" pos:column="60"/></operator></expr>)<pos:position pos:line="132" pos:column="61"/></condition><then pos:line="132" pos:column="61">
		      <block type="pseudo"><return pos:line="133" pos:column="23">return <expr><literal type="number" pos:line="133" pos:column="30">0<pos:position pos:line="133" pos:column="31"/></literal></expr>;<pos:position pos:line="133" pos:column="32"/></return></block></then></if></block></for>
		}<pos:position pos:line="134" pos:column="18"/></block></else></if>
	    }<pos:position pos:line="135" pos:column="14"/></block></else></if>

	  <comment type="block" pos:line="137" pos:column="11">/* If we come here no match is possible with the wildcard.  */</comment>
	  <return pos:line="138" pos:column="11">return <expr><name pos:line="138" pos:column="18">FNM_NOMATCH<pos:position pos:line="138" pos:column="29"/></name></expr>;<pos:position pos:line="138" pos:column="30"/></return>

	<case pos:line="140" pos:column="9">case <expr><literal type="char" pos:line="140" pos:column="14">'['<pos:position pos:line="140" pos:column="17"/></literal></expr>:<pos:position pos:line="140" pos:column="18"/></case>
	  <block pos:line="141" pos:column="11">{
	    <comment type="block" pos:line="142" pos:column="13">/* Nonzero if the sense of the character class is inverted.  */</comment>
	    <decl_stmt><decl><specifier pos:line="143" pos:column="13">static<pos:position pos:line="143" pos:column="19"/></specifier> <type><name pos:line="143" pos:column="20">int<pos:position pos:line="143" pos:column="23"/></name></type> <name pos:line="143" pos:column="24">posixly_correct<pos:position pos:line="143" pos:column="39"/></name></decl>;<pos:position pos:line="143" pos:column="40"/></decl_stmt>
	    <expr_stmt><expr><specifier pos:line="144" pos:column="13">register<pos:position pos:line="144" pos:column="21"/></specifier> <name pos:line="144" pos:column="22">int<pos:position pos:line="144" pos:column="25"/></name> <operator pos:line="144" pos:column="26">not<pos:position pos:line="144" pos:column="29"/></operator></expr>;<pos:position pos:line="144" pos:column="30"/></expr_stmt>
	    <decl_stmt><decl><type><name pos:line="145" pos:column="13">char<pos:position pos:line="145" pos:column="17"/></name></type> <name pos:line="145" pos:column="18">cold<pos:position pos:line="145" pos:column="22"/></name></decl>;<pos:position pos:line="145" pos:column="23"/></decl_stmt>

	    <if pos:line="147" pos:column="13">if <condition pos:line="147" pos:column="16">(<expr><name pos:line="147" pos:column="17">posixly_correct<pos:position pos:line="147" pos:column="32"/></name> <operator pos:line="147" pos:column="33">==<pos:position pos:line="147" pos:column="35"/></operator> <literal type="number" pos:line="147" pos:column="36">0<pos:position pos:line="147" pos:column="37"/></literal></expr>)<pos:position pos:line="147" pos:column="38"/></condition><then pos:line="147" pos:column="38">
	      <block type="pseudo"><expr_stmt><expr><name pos:line="148" pos:column="15">posixly_correct<pos:position pos:line="148" pos:column="30"/></name> <operator pos:line="148" pos:column="31">=<pos:position pos:line="148" pos:column="32"/></operator> <ternary><condition><expr><call><name pos:line="148" pos:column="33">getenv<pos:position pos:line="148" pos:column="39"/></name> <argument_list pos:line="148" pos:column="40">(<argument><expr><literal type="string" pos:line="148" pos:column="41">"POSIXLY_CORRECT"<pos:position pos:line="148" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="59"/></argument_list></call> <operator pos:line="148" pos:column="60">!=<pos:position pos:line="148" pos:column="62"/></operator> <name pos:line="148" pos:column="63">NULL<pos:position pos:line="148" pos:column="67"/></name></expr> ?<pos:position pos:line="148" pos:column="69"/></condition><then pos:line="148" pos:column="69"> <expr><literal type="number" pos:line="148" pos:column="70">1<pos:position pos:line="148" pos:column="71"/></literal></expr> <pos:position pos:line="148" pos:column="72"/></then><else pos:line="148" pos:column="72">: <expr><operator pos:line="148" pos:column="74">-<pos:position pos:line="148" pos:column="75"/></operator><literal type="number" pos:line="148" pos:column="75">1<pos:position pos:line="148" pos:column="76"/></literal></expr></else></ternary></expr>;<pos:position pos:line="148" pos:column="77"/></expr_stmt></block></then></if>

	    <if pos:line="150" pos:column="13">if <condition pos:line="150" pos:column="16">(<expr><operator pos:line="150" pos:column="17">*<pos:position pos:line="150" pos:column="18"/></operator><name pos:line="150" pos:column="18">n<pos:position pos:line="150" pos:column="19"/></name> <operator pos:line="150" pos:column="20">==<pos:position pos:line="150" pos:column="22"/></operator> <literal type="char" pos:line="150" pos:column="23">'\0'<pos:position pos:line="150" pos:column="27"/></literal></expr>)<pos:position pos:line="150" pos:column="28"/></condition><then pos:line="150" pos:column="28">
	      <block type="pseudo"><return pos:line="151" pos:column="15">return <expr><name pos:line="151" pos:column="22">FNM_NOMATCH<pos:position pos:line="151" pos:column="33"/></name></expr>;<pos:position pos:line="151" pos:column="34"/></return></block></then></if>

	    <if pos:line="153" pos:column="13">if <condition pos:line="153" pos:column="16">(<expr><operator pos:line="153" pos:column="17">*<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="18">n<pos:position pos:line="153" pos:column="19"/></name> <operator pos:line="153" pos:column="20">==<pos:position pos:line="153" pos:column="22"/></operator> <literal type="char" pos:line="153" pos:column="23">'.'<pos:position pos:line="153" pos:column="26"/></literal> <operator pos:line="153" pos:column="27">&amp;&amp;<pos:position pos:line="153" pos:column="37"/></operator> <name pos:line="153" pos:column="30">no_leading_period<pos:position pos:line="153" pos:column="47"/></name> <operator pos:line="153" pos:column="48">&amp;&amp;<pos:position pos:line="153" pos:column="58"/></operator> <operator pos:line="153" pos:column="51">(<pos:position pos:line="153" pos:column="52"/></operator><name pos:line="153" pos:column="52">n<pos:position pos:line="153" pos:column="53"/></name> <operator pos:line="153" pos:column="54">==<pos:position pos:line="153" pos:column="56"/></operator> <name pos:line="153" pos:column="57">string<pos:position pos:line="153" pos:column="63"/></name>
						   <operator pos:line="154" pos:column="52">||<pos:position pos:line="154" pos:column="54"/></operator> <operator pos:line="154" pos:column="55">(<pos:position pos:line="154" pos:column="56"/></operator><name><name pos:line="154" pos:column="56">n<pos:position pos:line="154" pos:column="57"/></name><index pos:line="154" pos:column="57">[<expr><operator pos:line="154" pos:column="58">-<pos:position pos:line="154" pos:column="59"/></operator><literal type="number" pos:line="154" pos:column="59">1<pos:position pos:line="154" pos:column="60"/></literal></expr>]<pos:position pos:line="154" pos:column="61"/></index></name> <operator pos:line="154" pos:column="62">==<pos:position pos:line="154" pos:column="64"/></operator> <literal type="char" pos:line="154" pos:column="65">'/'<pos:position pos:line="154" pos:column="68"/></literal>
						       <operator pos:line="155" pos:column="56">&amp;&amp;<pos:position pos:line="155" pos:column="66"/></operator> <operator pos:line="155" pos:column="59">(<pos:position pos:line="155" pos:column="60"/></operator><name pos:line="155" pos:column="60">flags<pos:position pos:line="155" pos:column="65"/></name>
							   <operator pos:line="156" pos:column="60">&amp;<pos:position pos:line="156" pos:column="65"/></operator> <name pos:line="156" pos:column="62">FNM_FILE_NAME<pos:position pos:line="156" pos:column="75"/></name><operator pos:line="156" pos:column="75">)<pos:position pos:line="156" pos:column="76"/></operator><operator pos:line="156" pos:column="76">)<pos:position pos:line="156" pos:column="77"/></operator><operator pos:line="156" pos:column="77">)<pos:position pos:line="156" pos:column="78"/></operator></expr>)<pos:position pos:line="156" pos:column="79"/></condition><then pos:line="156" pos:column="79">
	      <block type="pseudo"><return pos:line="157" pos:column="15">return <expr><name pos:line="157" pos:column="22">FNM_NOMATCH<pos:position pos:line="157" pos:column="33"/></name></expr>;<pos:position pos:line="157" pos:column="34"/></return></block></then></if>

	    <if pos:line="159" pos:column="13">if <condition pos:line="159" pos:column="16">(<expr><operator pos:line="159" pos:column="17">*<pos:position pos:line="159" pos:column="18"/></operator><name pos:line="159" pos:column="18">n<pos:position pos:line="159" pos:column="19"/></name> <operator pos:line="159" pos:column="20">==<pos:position pos:line="159" pos:column="22"/></operator> <literal type="char" pos:line="159" pos:column="23">'/'<pos:position pos:line="159" pos:column="26"/></literal> <operator pos:line="159" pos:column="27">&amp;&amp;<pos:position pos:line="159" pos:column="37"/></operator> <operator pos:line="159" pos:column="30">(<pos:position pos:line="159" pos:column="31"/></operator><name pos:line="159" pos:column="31">flags<pos:position pos:line="159" pos:column="36"/></name> <operator pos:line="159" pos:column="37">&amp;<pos:position pos:line="159" pos:column="42"/></operator> <name pos:line="159" pos:column="39">FNM_FILE_NAME<pos:position pos:line="159" pos:column="52"/></name><operator pos:line="159" pos:column="52">)<pos:position pos:line="159" pos:column="53"/></operator></expr>)<pos:position pos:line="159" pos:column="54"/></condition><then pos:line="159" pos:column="54">
	      <comment type="block" pos:line="160" pos:column="15">/* `/' cannot be matched.  */</comment>
	      <block type="pseudo"><return pos:line="161" pos:column="15">return <expr><name pos:line="161" pos:column="22">FNM_NOMATCH<pos:position pos:line="161" pos:column="33"/></name></expr>;<pos:position pos:line="161" pos:column="34"/></return></block></then></if>

	    <expr_stmt><expr><operator pos:line="163" pos:column="13">not<pos:position pos:line="163" pos:column="16"/></operator> <operator pos:line="163" pos:column="17">=<pos:position pos:line="163" pos:column="18"/></operator> <operator pos:line="163" pos:column="19">(<pos:position pos:line="163" pos:column="20"/></operator><operator pos:line="163" pos:column="20">*<pos:position pos:line="163" pos:column="21"/></operator><name pos:line="163" pos:column="21">p<pos:position pos:line="163" pos:column="22"/></name> <operator pos:line="163" pos:column="23">==<pos:position pos:line="163" pos:column="25"/></operator> <literal type="char" pos:line="163" pos:column="26">'!'<pos:position pos:line="163" pos:column="29"/></literal> <operator pos:line="163" pos:column="30">||<pos:position pos:line="163" pos:column="32"/></operator> <operator pos:line="163" pos:column="33">(<pos:position pos:line="163" pos:column="34"/></operator><name pos:line="163" pos:column="34">posixly_correct<pos:position pos:line="163" pos:column="49"/></name> <operator pos:line="163" pos:column="50">&lt;<pos:position pos:line="163" pos:column="54"/></operator> <literal type="number" pos:line="163" pos:column="52">0<pos:position pos:line="163" pos:column="53"/></literal> <operator pos:line="163" pos:column="54">&amp;&amp;<pos:position pos:line="163" pos:column="64"/></operator> <operator pos:line="163" pos:column="57">*<pos:position pos:line="163" pos:column="58"/></operator><name pos:line="163" pos:column="58">p<pos:position pos:line="163" pos:column="59"/></name> <operator pos:line="163" pos:column="60">==<pos:position pos:line="163" pos:column="62"/></operator> <literal type="char" pos:line="163" pos:column="63">'^'<pos:position pos:line="163" pos:column="66"/></literal><operator pos:line="163" pos:column="66">)<pos:position pos:line="163" pos:column="67"/></operator><operator pos:line="163" pos:column="67">)<pos:position pos:line="163" pos:column="68"/></operator></expr>;<pos:position pos:line="163" pos:column="69"/></expr_stmt>
	    <if pos:line="164" pos:column="13">if <condition pos:line="164" pos:column="16">(<expr><operator pos:line="164" pos:column="17">not<pos:position pos:line="164" pos:column="20"/></operator></expr>)<pos:position pos:line="164" pos:column="21"/></condition><then pos:line="164" pos:column="21">
	      <block type="pseudo"><expr_stmt><expr><operator pos:line="165" pos:column="15">++<pos:position pos:line="165" pos:column="17"/></operator><name pos:line="165" pos:column="17">p<pos:position pos:line="165" pos:column="18"/></name></expr>;<pos:position pos:line="165" pos:column="19"/></expr_stmt></block></then></if>

	    <expr_stmt><expr><name pos:line="167" pos:column="13">c<pos:position pos:line="167" pos:column="14"/></name> <operator pos:line="167" pos:column="15">=<pos:position pos:line="167" pos:column="16"/></operator> <operator pos:line="167" pos:column="17">*<pos:position pos:line="167" pos:column="18"/></operator><name pos:line="167" pos:column="18">p<pos:position pos:line="167" pos:column="19"/></name><operator pos:line="167" pos:column="19">++<pos:position pos:line="167" pos:column="21"/></operator></expr>;<pos:position pos:line="167" pos:column="22"/></expr_stmt>
	    <for pos:line="168" pos:column="13">for <control pos:line="168" pos:column="17">(<init pos:line="168" pos:column="18">;<pos:position pos:line="168" pos:column="19"/></init><condition pos:line="168" pos:column="19">;<pos:position pos:line="168" pos:column="20"/></condition><incr/>)<pos:position pos:line="168" pos:column="21"/></control>
	      <block pos:line="169" pos:column="15">{
		<decl_stmt><decl><type><name pos:line="170" pos:column="17">unsigned<pos:position pos:line="170" pos:column="25"/></name> <name pos:line="170" pos:column="26">char<pos:position pos:line="170" pos:column="30"/></name></type> <name pos:line="170" pos:column="31">fn<pos:position pos:line="170" pos:column="33"/></name> <init pos:line="170" pos:column="34">= <expr><call><name pos:line="170" pos:column="36">FOLD<pos:position pos:line="170" pos:column="40"/></name> <argument_list pos:line="170" pos:column="41">(<argument><expr><operator pos:line="170" pos:column="42">(<pos:position pos:line="170" pos:column="43"/></operator><name pos:line="170" pos:column="43">unsigned<pos:position pos:line="170" pos:column="51"/></name> <name pos:line="170" pos:column="52">char<pos:position pos:line="170" pos:column="56"/></name><operator pos:line="170" pos:column="56">)<pos:position pos:line="170" pos:column="57"/></operator> <operator pos:line="170" pos:column="58">*<pos:position pos:line="170" pos:column="59"/></operator><name pos:line="170" pos:column="59">n<pos:position pos:line="170" pos:column="60"/></name></expr></argument>)<pos:position pos:line="170" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="170" pos:column="62"/></decl_stmt>

		<if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><operator pos:line="172" pos:column="21">!<pos:position pos:line="172" pos:column="22"/></operator><operator pos:line="172" pos:column="22">(<pos:position pos:line="172" pos:column="23"/></operator><name pos:line="172" pos:column="23">flags<pos:position pos:line="172" pos:column="28"/></name> <operator pos:line="172" pos:column="29">&amp;<pos:position pos:line="172" pos:column="34"/></operator> <name pos:line="172" pos:column="31">FNM_NOESCAPE<pos:position pos:line="172" pos:column="43"/></name><operator pos:line="172" pos:column="43">)<pos:position pos:line="172" pos:column="44"/></operator> <operator pos:line="172" pos:column="45">&amp;&amp;<pos:position pos:line="172" pos:column="55"/></operator> <name pos:line="172" pos:column="48">c<pos:position pos:line="172" pos:column="49"/></name> <operator pos:line="172" pos:column="50">==<pos:position pos:line="172" pos:column="52"/></operator> <literal type="char" pos:line="172" pos:column="53">'\\'<pos:position pos:line="172" pos:column="57"/></literal></expr>)<pos:position pos:line="172" pos:column="58"/></condition><then pos:line="172" pos:column="58">
		  <block pos:line="173" pos:column="19">{
		    <if pos:line="174" pos:column="21">if <condition pos:line="174" pos:column="24">(<expr><operator pos:line="174" pos:column="25">*<pos:position pos:line="174" pos:column="26"/></operator><name pos:line="174" pos:column="26">p<pos:position pos:line="174" pos:column="27"/></name> <operator pos:line="174" pos:column="28">==<pos:position pos:line="174" pos:column="30"/></operator> <literal type="char" pos:line="174" pos:column="31">'\0'<pos:position pos:line="174" pos:column="35"/></literal></expr>)<pos:position pos:line="174" pos:column="36"/></condition><then pos:line="174" pos:column="36">
		      <block type="pseudo"><return pos:line="175" pos:column="23">return <expr><name pos:line="175" pos:column="30">FNM_NOMATCH<pos:position pos:line="175" pos:column="41"/></name></expr>;<pos:position pos:line="175" pos:column="42"/></return></block></then></if>
		    <expr_stmt><expr><name pos:line="176" pos:column="21">c<pos:position pos:line="176" pos:column="22"/></name> <operator pos:line="176" pos:column="23">=<pos:position pos:line="176" pos:column="24"/></operator> <call><name pos:line="176" pos:column="25">FOLD<pos:position pos:line="176" pos:column="29"/></name> <argument_list pos:line="176" pos:column="30">(<argument><expr><operator pos:line="176" pos:column="31">(<pos:position pos:line="176" pos:column="32"/></operator><name pos:line="176" pos:column="32">unsigned<pos:position pos:line="176" pos:column="40"/></name> <name pos:line="176" pos:column="41">char<pos:position pos:line="176" pos:column="45"/></name><operator pos:line="176" pos:column="45">)<pos:position pos:line="176" pos:column="46"/></operator> <operator pos:line="176" pos:column="47">*<pos:position pos:line="176" pos:column="48"/></operator><name pos:line="176" pos:column="48">p<pos:position pos:line="176" pos:column="49"/></name></expr></argument>)<pos:position pos:line="176" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="51"/></expr_stmt>
		    <expr_stmt><expr><operator pos:line="177" pos:column="21">++<pos:position pos:line="177" pos:column="23"/></operator><name pos:line="177" pos:column="23">p<pos:position pos:line="177" pos:column="24"/></name></expr>;<pos:position pos:line="177" pos:column="25"/></expr_stmt>

		    <if pos:line="179" pos:column="21">if <condition pos:line="179" pos:column="24">(<expr><name pos:line="179" pos:column="25">c<pos:position pos:line="179" pos:column="26"/></name> <operator pos:line="179" pos:column="27">==<pos:position pos:line="179" pos:column="29"/></operator> <name pos:line="179" pos:column="30">fn<pos:position pos:line="179" pos:column="32"/></name></expr>)<pos:position pos:line="179" pos:column="33"/></condition><then pos:line="179" pos:column="33">
		      <block type="pseudo"><goto pos:line="180" pos:column="23">goto <name pos:line="180" pos:column="28">matched<pos:position pos:line="180" pos:column="35"/></name>;<pos:position pos:line="180" pos:column="36"/></goto></block></then></if>
		  }<pos:position pos:line="181" pos:column="20"/></block></then>
		<elseif pos:line="182" pos:column="17">else <if pos:line="182" pos:column="22">if <condition pos:line="182" pos:column="25">(<expr><name pos:line="182" pos:column="26">c<pos:position pos:line="182" pos:column="27"/></name> <operator pos:line="182" pos:column="28">==<pos:position pos:line="182" pos:column="30"/></operator> <literal type="char" pos:line="182" pos:column="31">'['<pos:position pos:line="182" pos:column="34"/></literal> <operator pos:line="182" pos:column="35">&amp;&amp;<pos:position pos:line="182" pos:column="45"/></operator> <operator pos:line="182" pos:column="38">*<pos:position pos:line="182" pos:column="39"/></operator><name pos:line="182" pos:column="39">p<pos:position pos:line="182" pos:column="40"/></name> <operator pos:line="182" pos:column="41">==<pos:position pos:line="182" pos:column="43"/></operator> <literal type="char" pos:line="182" pos:column="44">':'<pos:position pos:line="182" pos:column="47"/></literal></expr>)<pos:position pos:line="182" pos:column="48"/></condition><then pos:line="182" pos:column="48">
		  <block pos:line="183" pos:column="19">{
		    <comment type="block" pos:line="184" pos:column="21">/* Leave room for the null.  */</comment>
		    <decl_stmt><decl><type><name pos:line="185" pos:column="21">char<pos:position pos:line="185" pos:column="25"/></name></type> <name><name pos:line="185" pos:column="26">str<pos:position pos:line="185" pos:column="29"/></name><index pos:line="185" pos:column="29">[<expr><name pos:line="185" pos:column="30">CHAR_CLASS_MAX_LENGTH<pos:position pos:line="185" pos:column="51"/></name> <operator pos:line="185" pos:column="52">+<pos:position pos:line="185" pos:column="53"/></operator> <literal type="number" pos:line="185" pos:column="54">1<pos:position pos:line="185" pos:column="55"/></literal></expr>]<pos:position pos:line="185" pos:column="56"/></index></name></decl>;<pos:position pos:line="185" pos:column="57"/></decl_stmt>
		    <decl_stmt><decl><type><name pos:line="186" pos:column="21">size_t<pos:position pos:line="186" pos:column="27"/></name></type> <name pos:line="186" pos:column="28">c1<pos:position pos:line="186" pos:column="30"/></name> <init pos:line="186" pos:column="31">= <expr><literal type="number" pos:line="186" pos:column="33">0<pos:position pos:line="186" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="186" pos:column="35"/></decl_stmt>
<cpp:if pos:line="187" pos:column="1"># <cpp:directive pos:line="187" pos:column="3">if<pos:position pos:line="187" pos:column="5"/></cpp:directive> <expr><name pos:line="187" pos:column="6">defined<pos:position pos:line="187" pos:column="13"/></name> <name pos:line="187" pos:column="14">_LIBC<pos:position pos:line="187" pos:column="19"/></name> <operator pos:line="187" pos:column="20">||<pos:position pos:line="187" pos:column="22"/></operator> <operator pos:line="187" pos:column="23">(<pos:position pos:line="187" pos:column="24"/></operator><name pos:line="187" pos:column="24">defined<pos:position pos:line="187" pos:column="31"/></name> <name pos:line="187" pos:column="32">HAVE_WCTYPE_H<pos:position pos:line="187" pos:column="45"/></name> <operator pos:line="187" pos:column="46">&amp;&amp;<pos:position pos:line="187" pos:column="56"/></operator> <name pos:line="187" pos:column="49">defined<pos:position pos:line="187" pos:column="56"/></name> <name pos:line="187" pos:column="57">HAVE_WCHAR_H<pos:position pos:line="187" pos:column="69"/></name><operator pos:line="187" pos:column="69">)<pos:position pos:line="187" pos:column="70"/></operator></expr></cpp:if>
		    <decl_stmt><decl><type><name pos:line="188" pos:column="21">wctype_t<pos:position pos:line="188" pos:column="29"/></name></type> <name pos:line="188" pos:column="30">wt<pos:position pos:line="188" pos:column="32"/></name></decl>;<pos:position pos:line="188" pos:column="33"/></decl_stmt>
<cpp:endif pos:line="189" pos:column="1"># <cpp:directive pos:line="189" pos:column="3">endif<pos:position pos:line="189" pos:column="8"/></cpp:directive></cpp:endif>
		    <decl_stmt><decl><type><specifier pos:line="190" pos:column="21">const<pos:position pos:line="190" pos:column="26"/></specifier> <name pos:line="190" pos:column="27">char<pos:position pos:line="190" pos:column="31"/></name> <modifier pos:line="190" pos:column="32">*<pos:position pos:line="190" pos:column="33"/></modifier></type><name pos:line="190" pos:column="33">startp<pos:position pos:line="190" pos:column="39"/></name> <init pos:line="190" pos:column="40">= <expr><name pos:line="190" pos:column="42">p<pos:position pos:line="190" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="190" pos:column="44"/></decl_stmt>

		    <for pos:line="192" pos:column="21">for <control pos:line="192" pos:column="25">(<init pos:line="192" pos:column="26">;<pos:position pos:line="192" pos:column="27"/></init><condition pos:line="192" pos:column="27">;<pos:position pos:line="192" pos:column="28"/></condition><incr/>)<pos:position pos:line="192" pos:column="29"/></control>
		      <block pos:line="193" pos:column="23">{
			<if pos:line="194" pos:column="25">if <condition pos:line="194" pos:column="28">(<expr><name pos:line="194" pos:column="29">c1<pos:position pos:line="194" pos:column="31"/></name> <operator pos:line="194" pos:column="32">==<pos:position pos:line="194" pos:column="34"/></operator> <name pos:line="194" pos:column="35">CHAR_CLASS_MAX_LENGTH<pos:position pos:line="194" pos:column="56"/></name></expr>)<pos:position pos:line="194" pos:column="57"/></condition><then pos:line="194" pos:column="57">
			  <comment type="block" pos:line="195" pos:column="27">/* The name is too long and therefore the pattern
			     is ill-formed.  */</comment>
			  <block type="pseudo"><return pos:line="197" pos:column="27">return <expr><name pos:line="197" pos:column="34">FNM_NOMATCH<pos:position pos:line="197" pos:column="45"/></name></expr>;<pos:position pos:line="197" pos:column="46"/></return></block></then></if>

			<expr_stmt><expr><name pos:line="199" pos:column="25">c<pos:position pos:line="199" pos:column="26"/></name> <operator pos:line="199" pos:column="27">=<pos:position pos:line="199" pos:column="28"/></operator> <operator pos:line="199" pos:column="29">*<pos:position pos:line="199" pos:column="30"/></operator><operator pos:line="199" pos:column="30">++<pos:position pos:line="199" pos:column="32"/></operator><name pos:line="199" pos:column="32">p<pos:position pos:line="199" pos:column="33"/></name></expr>;<pos:position pos:line="199" pos:column="34"/></expr_stmt>
			<if pos:line="200" pos:column="25">if <condition pos:line="200" pos:column="28">(<expr><name pos:line="200" pos:column="29">c<pos:position pos:line="200" pos:column="30"/></name> <operator pos:line="200" pos:column="31">==<pos:position pos:line="200" pos:column="33"/></operator> <literal type="char" pos:line="200" pos:column="34">':'<pos:position pos:line="200" pos:column="37"/></literal> <operator pos:line="200" pos:column="38">&amp;&amp;<pos:position pos:line="200" pos:column="48"/></operator> <name><name pos:line="200" pos:column="41">p<pos:position pos:line="200" pos:column="42"/></name><index pos:line="200" pos:column="42">[<expr><literal type="number" pos:line="200" pos:column="43">1<pos:position pos:line="200" pos:column="44"/></literal></expr>]<pos:position pos:line="200" pos:column="45"/></index></name> <operator pos:line="200" pos:column="46">==<pos:position pos:line="200" pos:column="48"/></operator> <literal type="char" pos:line="200" pos:column="49">']'<pos:position pos:line="200" pos:column="52"/></literal></expr>)<pos:position pos:line="200" pos:column="53"/></condition><then pos:line="200" pos:column="53">
			  <block pos:line="201" pos:column="27">{
			    <expr_stmt><expr><name pos:line="202" pos:column="29">p<pos:position pos:line="202" pos:column="30"/></name> <operator pos:line="202" pos:column="31">+=<pos:position pos:line="202" pos:column="33"/></operator> <literal type="number" pos:line="202" pos:column="34">2<pos:position pos:line="202" pos:column="35"/></literal></expr>;<pos:position pos:line="202" pos:column="36"/></expr_stmt>
			    <break pos:line="203" pos:column="29">break;<pos:position pos:line="203" pos:column="35"/></break>
			  }<pos:position pos:line="204" pos:column="28"/></block></then></if>
			<if pos:line="205" pos:column="25">if <condition pos:line="205" pos:column="28">(<expr><name pos:line="205" pos:column="29">c<pos:position pos:line="205" pos:column="30"/></name> <operator pos:line="205" pos:column="31">&lt;<pos:position pos:line="205" pos:column="35"/></operator> <literal type="char" pos:line="205" pos:column="33">'a'<pos:position pos:line="205" pos:column="36"/></literal> <operator pos:line="205" pos:column="37">||<pos:position pos:line="205" pos:column="39"/></operator> <name pos:line="205" pos:column="40">c<pos:position pos:line="205" pos:column="41"/></name> <operator pos:line="205" pos:column="42">&gt;=<pos:position pos:line="205" pos:column="47"/></operator> <literal type="char" pos:line="205" pos:column="45">'z'<pos:position pos:line="205" pos:column="48"/></literal></expr>)<pos:position pos:line="205" pos:column="49"/></condition><then pos:line="205" pos:column="49">
			  <block pos:line="206" pos:column="27">{
			    <comment type="block" pos:line="207" pos:column="29">/* This cannot possibly be a character class name.
			       Match it as a normal range.  */</comment>
			    <expr_stmt><expr><name pos:line="209" pos:column="29">p<pos:position pos:line="209" pos:column="30"/></name> <operator pos:line="209" pos:column="31">=<pos:position pos:line="209" pos:column="32"/></operator> <name pos:line="209" pos:column="33">startp<pos:position pos:line="209" pos:column="39"/></name></expr>;<pos:position pos:line="209" pos:column="40"/></expr_stmt>
			    <expr_stmt><expr><name pos:line="210" pos:column="29">c<pos:position pos:line="210" pos:column="30"/></name> <operator pos:line="210" pos:column="31">=<pos:position pos:line="210" pos:column="32"/></operator> <literal type="char" pos:line="210" pos:column="33">'['<pos:position pos:line="210" pos:column="36"/></literal></expr>;<pos:position pos:line="210" pos:column="37"/></expr_stmt>
			    <goto pos:line="211" pos:column="29">goto <name pos:line="211" pos:column="34">normal_bracket<pos:position pos:line="211" pos:column="48"/></name>;<pos:position pos:line="211" pos:column="49"/></goto>
			  }<pos:position pos:line="212" pos:column="28"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="213" pos:column="25">str<pos:position pos:line="213" pos:column="28"/></name><index pos:line="213" pos:column="28">[<expr><name pos:line="213" pos:column="29">c1<pos:position pos:line="213" pos:column="31"/></name><operator pos:line="213" pos:column="31">++<pos:position pos:line="213" pos:column="33"/></operator></expr>]<pos:position pos:line="213" pos:column="34"/></index></name> <operator pos:line="213" pos:column="35">=<pos:position pos:line="213" pos:column="36"/></operator> <name pos:line="213" pos:column="37">c<pos:position pos:line="213" pos:column="38"/></name></expr>;<pos:position pos:line="213" pos:column="39"/></expr_stmt>
		      }<pos:position pos:line="214" pos:column="24"/></block></for>
		    <expr_stmt><expr><name><name pos:line="215" pos:column="21">str<pos:position pos:line="215" pos:column="24"/></name><index pos:line="215" pos:column="24">[<expr><name pos:line="215" pos:column="25">c1<pos:position pos:line="215" pos:column="27"/></name></expr>]<pos:position pos:line="215" pos:column="28"/></index></name> <operator pos:line="215" pos:column="29">=<pos:position pos:line="215" pos:column="30"/></operator> <literal type="char" pos:line="215" pos:column="31">'\0'<pos:position pos:line="215" pos:column="35"/></literal></expr>;<pos:position pos:line="215" pos:column="36"/></expr_stmt>

<cpp:if pos:line="217" pos:column="1"># <cpp:directive pos:line="217" pos:column="3">if<pos:position pos:line="217" pos:column="5"/></cpp:directive> <expr><name pos:line="217" pos:column="6">defined<pos:position pos:line="217" pos:column="13"/></name> <name pos:line="217" pos:column="14">_LIBC<pos:position pos:line="217" pos:column="19"/></name> <operator pos:line="217" pos:column="20">||<pos:position pos:line="217" pos:column="22"/></operator> <operator pos:line="217" pos:column="23">(<pos:position pos:line="217" pos:column="24"/></operator><name pos:line="217" pos:column="24">defined<pos:position pos:line="217" pos:column="31"/></name> <name pos:line="217" pos:column="32">HAVE_WCTYPE_H<pos:position pos:line="217" pos:column="45"/></name> <operator pos:line="217" pos:column="46">&amp;&amp;<pos:position pos:line="217" pos:column="56"/></operator> <name pos:line="217" pos:column="49">defined<pos:position pos:line="217" pos:column="56"/></name> <name pos:line="217" pos:column="57">HAVE_WCHAR_H<pos:position pos:line="217" pos:column="69"/></name><operator pos:line="217" pos:column="69">)<pos:position pos:line="217" pos:column="70"/></operator></expr></cpp:if>
		    <expr_stmt><expr><name pos:line="218" pos:column="21">wt<pos:position pos:line="218" pos:column="23"/></name> <operator pos:line="218" pos:column="24">=<pos:position pos:line="218" pos:column="25"/></operator> <call><name pos:line="218" pos:column="26">IS_CHAR_CLASS<pos:position pos:line="218" pos:column="39"/></name> <argument_list pos:line="218" pos:column="40">(<argument><expr><name pos:line="218" pos:column="41">str<pos:position pos:line="218" pos:column="44"/></name></expr></argument>)<pos:position pos:line="218" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="46"/></expr_stmt>
		    <if pos:line="219" pos:column="21">if <condition pos:line="219" pos:column="24">(<expr><name pos:line="219" pos:column="25">wt<pos:position pos:line="219" pos:column="27"/></name> <operator pos:line="219" pos:column="28">==<pos:position pos:line="219" pos:column="30"/></operator> <literal type="number" pos:line="219" pos:column="31">0<pos:position pos:line="219" pos:column="32"/></literal></expr>)<pos:position pos:line="219" pos:column="33"/></condition><then pos:line="219" pos:column="33">
		      <comment type="block" pos:line="220" pos:column="23">/* Invalid character class name.  */</comment>
		      <block type="pseudo"><return pos:line="221" pos:column="23">return <expr><name pos:line="221" pos:column="30">FNM_NOMATCH<pos:position pos:line="221" pos:column="41"/></name></expr>;<pos:position pos:line="221" pos:column="42"/></return></block></then></if>

		    <if pos:line="223" pos:column="21">if <condition pos:line="223" pos:column="24">(<expr><call><name pos:line="223" pos:column="25">__iswctype<pos:position pos:line="223" pos:column="35"/></name> <argument_list pos:line="223" pos:column="36">(<argument><expr><call><name pos:line="223" pos:column="37">__btowc<pos:position pos:line="223" pos:column="44"/></name> <argument_list pos:line="223" pos:column="45">(<argument><expr><operator pos:line="223" pos:column="46">(<pos:position pos:line="223" pos:column="47"/></operator><name pos:line="223" pos:column="47">unsigned<pos:position pos:line="223" pos:column="55"/></name> <name pos:line="223" pos:column="56">char<pos:position pos:line="223" pos:column="60"/></name><operator pos:line="223" pos:column="60">)<pos:position pos:line="223" pos:column="61"/></operator> <operator pos:line="223" pos:column="62">*<pos:position pos:line="223" pos:column="63"/></operator><name pos:line="223" pos:column="63">n<pos:position pos:line="223" pos:column="64"/></name></expr></argument>)<pos:position pos:line="223" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="223" pos:column="67">wt<pos:position pos:line="223" pos:column="69"/></name></expr></argument>)<pos:position pos:line="223" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="223" pos:column="71"/></condition><then pos:line="223" pos:column="71">
		      <block type="pseudo"><goto pos:line="224" pos:column="23">goto <name pos:line="224" pos:column="28">matched<pos:position pos:line="224" pos:column="35"/></name>;<pos:position pos:line="224" pos:column="36"/></goto></block></then></if>
<cpp:else pos:line="225" pos:column="1"># <cpp:directive pos:line="225" pos:column="3">else<pos:position pos:line="225" pos:column="7"/></cpp:directive></cpp:else>
		    <if pos:line="226" pos:column="21">if <condition pos:line="226" pos:column="24">(<expr><operator pos:line="226" pos:column="25">(<pos:position pos:line="226" pos:column="26"/></operator><call><name pos:line="226" pos:column="26">STREQ<pos:position pos:line="226" pos:column="31"/></name> <argument_list pos:line="226" pos:column="32">(<argument><expr><name pos:line="226" pos:column="33">str<pos:position pos:line="226" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="226" pos:column="38">"alnum"<pos:position pos:line="226" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="226" pos:column="46"/></argument_list></call> <operator pos:line="226" pos:column="47">&amp;&amp;<pos:position pos:line="226" pos:column="57"/></operator> <call><name pos:line="226" pos:column="50">ISALNUM<pos:position pos:line="226" pos:column="57"/></name> <argument_list pos:line="226" pos:column="58">(<argument><expr><operator pos:line="226" pos:column="59">(<pos:position pos:line="226" pos:column="60"/></operator><name pos:line="226" pos:column="60">unsigned<pos:position pos:line="226" pos:column="68"/></name> <name pos:line="226" pos:column="69">char<pos:position pos:line="226" pos:column="73"/></name><operator pos:line="226" pos:column="73">)<pos:position pos:line="226" pos:column="74"/></operator> <operator pos:line="226" pos:column="75">*<pos:position pos:line="226" pos:column="76"/></operator><name pos:line="226" pos:column="76">n<pos:position pos:line="226" pos:column="77"/></name></expr></argument>)<pos:position pos:line="226" pos:column="78"/></argument_list></call><operator pos:line="226" pos:column="78">)<pos:position pos:line="226" pos:column="79"/></operator>
			<operator pos:line="227" pos:column="25">||<pos:position pos:line="227" pos:column="27"/></operator> <operator pos:line="227" pos:column="28">(<pos:position pos:line="227" pos:column="29"/></operator><call><name pos:line="227" pos:column="29">STREQ<pos:position pos:line="227" pos:column="34"/></name> <argument_list pos:line="227" pos:column="35">(<argument><expr><name pos:line="227" pos:column="36">str<pos:position pos:line="227" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="41">"alpha"<pos:position pos:line="227" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="49"/></argument_list></call> <operator pos:line="227" pos:column="50">&amp;&amp;<pos:position pos:line="227" pos:column="60"/></operator> <call><name pos:line="227" pos:column="53">ISALPHA<pos:position pos:line="227" pos:column="60"/></name> <argument_list pos:line="227" pos:column="61">(<argument><expr><operator pos:line="227" pos:column="62">(<pos:position pos:line="227" pos:column="63"/></operator><name pos:line="227" pos:column="63">unsigned<pos:position pos:line="227" pos:column="71"/></name> <name pos:line="227" pos:column="72">char<pos:position pos:line="227" pos:column="76"/></name><operator pos:line="227" pos:column="76">)<pos:position pos:line="227" pos:column="77"/></operator> <operator pos:line="227" pos:column="78">*<pos:position pos:line="227" pos:column="79"/></operator><name pos:line="227" pos:column="79">n<pos:position pos:line="227" pos:column="80"/></name></expr></argument>)<pos:position pos:line="227" pos:column="81"/></argument_list></call><operator pos:line="227" pos:column="81">)<pos:position pos:line="227" pos:column="82"/></operator>
			<operator pos:line="228" pos:column="25">||<pos:position pos:line="228" pos:column="27"/></operator> <operator pos:line="228" pos:column="28">(<pos:position pos:line="228" pos:column="29"/></operator><call><name pos:line="228" pos:column="29">STREQ<pos:position pos:line="228" pos:column="34"/></name> <argument_list pos:line="228" pos:column="35">(<argument><expr><name pos:line="228" pos:column="36">str<pos:position pos:line="228" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="41">"blank"<pos:position pos:line="228" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="228" pos:column="49"/></argument_list></call> <operator pos:line="228" pos:column="50">&amp;&amp;<pos:position pos:line="228" pos:column="60"/></operator> <call><name pos:line="228" pos:column="53">ISBLANK<pos:position pos:line="228" pos:column="60"/></name> <argument_list pos:line="228" pos:column="61">(<argument><expr><operator pos:line="228" pos:column="62">(<pos:position pos:line="228" pos:column="63"/></operator><name pos:line="228" pos:column="63">unsigned<pos:position pos:line="228" pos:column="71"/></name> <name pos:line="228" pos:column="72">char<pos:position pos:line="228" pos:column="76"/></name><operator pos:line="228" pos:column="76">)<pos:position pos:line="228" pos:column="77"/></operator> <operator pos:line="228" pos:column="78">*<pos:position pos:line="228" pos:column="79"/></operator><name pos:line="228" pos:column="79">n<pos:position pos:line="228" pos:column="80"/></name></expr></argument>)<pos:position pos:line="228" pos:column="81"/></argument_list></call><operator pos:line="228" pos:column="81">)<pos:position pos:line="228" pos:column="82"/></operator>
			<operator pos:line="229" pos:column="25">||<pos:position pos:line="229" pos:column="27"/></operator> <operator pos:line="229" pos:column="28">(<pos:position pos:line="229" pos:column="29"/></operator><call><name pos:line="229" pos:column="29">STREQ<pos:position pos:line="229" pos:column="34"/></name> <argument_list pos:line="229" pos:column="35">(<argument><expr><name pos:line="229" pos:column="36">str<pos:position pos:line="229" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="41">"cntrl"<pos:position pos:line="229" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="49"/></argument_list></call> <operator pos:line="229" pos:column="50">&amp;&amp;<pos:position pos:line="229" pos:column="60"/></operator> <call><name pos:line="229" pos:column="53">ISCNTRL<pos:position pos:line="229" pos:column="60"/></name> <argument_list pos:line="229" pos:column="61">(<argument><expr><operator pos:line="229" pos:column="62">(<pos:position pos:line="229" pos:column="63"/></operator><name pos:line="229" pos:column="63">unsigned<pos:position pos:line="229" pos:column="71"/></name> <name pos:line="229" pos:column="72">char<pos:position pos:line="229" pos:column="76"/></name><operator pos:line="229" pos:column="76">)<pos:position pos:line="229" pos:column="77"/></operator> <operator pos:line="229" pos:column="78">*<pos:position pos:line="229" pos:column="79"/></operator><name pos:line="229" pos:column="79">n<pos:position pos:line="229" pos:column="80"/></name></expr></argument>)<pos:position pos:line="229" pos:column="81"/></argument_list></call><operator pos:line="229" pos:column="81">)<pos:position pos:line="229" pos:column="82"/></operator>
			<operator pos:line="230" pos:column="25">||<pos:position pos:line="230" pos:column="27"/></operator> <operator pos:line="230" pos:column="28">(<pos:position pos:line="230" pos:column="29"/></operator><call><name pos:line="230" pos:column="29">STREQ<pos:position pos:line="230" pos:column="34"/></name> <argument_list pos:line="230" pos:column="35">(<argument><expr><name pos:line="230" pos:column="36">str<pos:position pos:line="230" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="41">"digit"<pos:position pos:line="230" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="49"/></argument_list></call> <operator pos:line="230" pos:column="50">&amp;&amp;<pos:position pos:line="230" pos:column="60"/></operator> <call><name pos:line="230" pos:column="53">ISDIGIT<pos:position pos:line="230" pos:column="60"/></name> <argument_list pos:line="230" pos:column="61">(<argument><expr><operator pos:line="230" pos:column="62">(<pos:position pos:line="230" pos:column="63"/></operator><name pos:line="230" pos:column="63">unsigned<pos:position pos:line="230" pos:column="71"/></name> <name pos:line="230" pos:column="72">char<pos:position pos:line="230" pos:column="76"/></name><operator pos:line="230" pos:column="76">)<pos:position pos:line="230" pos:column="77"/></operator> <operator pos:line="230" pos:column="78">*<pos:position pos:line="230" pos:column="79"/></operator><name pos:line="230" pos:column="79">n<pos:position pos:line="230" pos:column="80"/></name></expr></argument>)<pos:position pos:line="230" pos:column="81"/></argument_list></call><operator pos:line="230" pos:column="81">)<pos:position pos:line="230" pos:column="82"/></operator>
			<operator pos:line="231" pos:column="25">||<pos:position pos:line="231" pos:column="27"/></operator> <operator pos:line="231" pos:column="28">(<pos:position pos:line="231" pos:column="29"/></operator><call><name pos:line="231" pos:column="29">STREQ<pos:position pos:line="231" pos:column="34"/></name> <argument_list pos:line="231" pos:column="35">(<argument><expr><name pos:line="231" pos:column="36">str<pos:position pos:line="231" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="41">"graph"<pos:position pos:line="231" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="49"/></argument_list></call> <operator pos:line="231" pos:column="50">&amp;&amp;<pos:position pos:line="231" pos:column="60"/></operator> <call><name pos:line="231" pos:column="53">ISGRAPH<pos:position pos:line="231" pos:column="60"/></name> <argument_list pos:line="231" pos:column="61">(<argument><expr><operator pos:line="231" pos:column="62">(<pos:position pos:line="231" pos:column="63"/></operator><name pos:line="231" pos:column="63">unsigned<pos:position pos:line="231" pos:column="71"/></name> <name pos:line="231" pos:column="72">char<pos:position pos:line="231" pos:column="76"/></name><operator pos:line="231" pos:column="76">)<pos:position pos:line="231" pos:column="77"/></operator> <operator pos:line="231" pos:column="78">*<pos:position pos:line="231" pos:column="79"/></operator><name pos:line="231" pos:column="79">n<pos:position pos:line="231" pos:column="80"/></name></expr></argument>)<pos:position pos:line="231" pos:column="81"/></argument_list></call><operator pos:line="231" pos:column="81">)<pos:position pos:line="231" pos:column="82"/></operator>
			<operator pos:line="232" pos:column="25">||<pos:position pos:line="232" pos:column="27"/></operator> <operator pos:line="232" pos:column="28">(<pos:position pos:line="232" pos:column="29"/></operator><call><name pos:line="232" pos:column="29">STREQ<pos:position pos:line="232" pos:column="34"/></name> <argument_list pos:line="232" pos:column="35">(<argument><expr><name pos:line="232" pos:column="36">str<pos:position pos:line="232" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="41">"lower"<pos:position pos:line="232" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="49"/></argument_list></call> <operator pos:line="232" pos:column="50">&amp;&amp;<pos:position pos:line="232" pos:column="60"/></operator> <call><name pos:line="232" pos:column="53">ISLOWER<pos:position pos:line="232" pos:column="60"/></name> <argument_list pos:line="232" pos:column="61">(<argument><expr><operator pos:line="232" pos:column="62">(<pos:position pos:line="232" pos:column="63"/></operator><name pos:line="232" pos:column="63">unsigned<pos:position pos:line="232" pos:column="71"/></name> <name pos:line="232" pos:column="72">char<pos:position pos:line="232" pos:column="76"/></name><operator pos:line="232" pos:column="76">)<pos:position pos:line="232" pos:column="77"/></operator> <operator pos:line="232" pos:column="78">*<pos:position pos:line="232" pos:column="79"/></operator><name pos:line="232" pos:column="79">n<pos:position pos:line="232" pos:column="80"/></name></expr></argument>)<pos:position pos:line="232" pos:column="81"/></argument_list></call><operator pos:line="232" pos:column="81">)<pos:position pos:line="232" pos:column="82"/></operator>
			<operator pos:line="233" pos:column="25">||<pos:position pos:line="233" pos:column="27"/></operator> <operator pos:line="233" pos:column="28">(<pos:position pos:line="233" pos:column="29"/></operator><call><name pos:line="233" pos:column="29">STREQ<pos:position pos:line="233" pos:column="34"/></name> <argument_list pos:line="233" pos:column="35">(<argument><expr><name pos:line="233" pos:column="36">str<pos:position pos:line="233" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="233" pos:column="41">"print"<pos:position pos:line="233" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="233" pos:column="49"/></argument_list></call> <operator pos:line="233" pos:column="50">&amp;&amp;<pos:position pos:line="233" pos:column="60"/></operator> <call><name pos:line="233" pos:column="53">ISPRINT<pos:position pos:line="233" pos:column="60"/></name> <argument_list pos:line="233" pos:column="61">(<argument><expr><operator pos:line="233" pos:column="62">(<pos:position pos:line="233" pos:column="63"/></operator><name pos:line="233" pos:column="63">unsigned<pos:position pos:line="233" pos:column="71"/></name> <name pos:line="233" pos:column="72">char<pos:position pos:line="233" pos:column="76"/></name><operator pos:line="233" pos:column="76">)<pos:position pos:line="233" pos:column="77"/></operator> <operator pos:line="233" pos:column="78">*<pos:position pos:line="233" pos:column="79"/></operator><name pos:line="233" pos:column="79">n<pos:position pos:line="233" pos:column="80"/></name></expr></argument>)<pos:position pos:line="233" pos:column="81"/></argument_list></call><operator pos:line="233" pos:column="81">)<pos:position pos:line="233" pos:column="82"/></operator>
			<operator pos:line="234" pos:column="25">||<pos:position pos:line="234" pos:column="27"/></operator> <operator pos:line="234" pos:column="28">(<pos:position pos:line="234" pos:column="29"/></operator><call><name pos:line="234" pos:column="29">STREQ<pos:position pos:line="234" pos:column="34"/></name> <argument_list pos:line="234" pos:column="35">(<argument><expr><name pos:line="234" pos:column="36">str<pos:position pos:line="234" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="41">"punct"<pos:position pos:line="234" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="49"/></argument_list></call> <operator pos:line="234" pos:column="50">&amp;&amp;<pos:position pos:line="234" pos:column="60"/></operator> <call><name pos:line="234" pos:column="53">ISPUNCT<pos:position pos:line="234" pos:column="60"/></name> <argument_list pos:line="234" pos:column="61">(<argument><expr><operator pos:line="234" pos:column="62">(<pos:position pos:line="234" pos:column="63"/></operator><name pos:line="234" pos:column="63">unsigned<pos:position pos:line="234" pos:column="71"/></name> <name pos:line="234" pos:column="72">char<pos:position pos:line="234" pos:column="76"/></name><operator pos:line="234" pos:column="76">)<pos:position pos:line="234" pos:column="77"/></operator> <operator pos:line="234" pos:column="78">*<pos:position pos:line="234" pos:column="79"/></operator><name pos:line="234" pos:column="79">n<pos:position pos:line="234" pos:column="80"/></name></expr></argument>)<pos:position pos:line="234" pos:column="81"/></argument_list></call><operator pos:line="234" pos:column="81">)<pos:position pos:line="234" pos:column="82"/></operator>
			<operator pos:line="235" pos:column="25">||<pos:position pos:line="235" pos:column="27"/></operator> <operator pos:line="235" pos:column="28">(<pos:position pos:line="235" pos:column="29"/></operator><call><name pos:line="235" pos:column="29">STREQ<pos:position pos:line="235" pos:column="34"/></name> <argument_list pos:line="235" pos:column="35">(<argument><expr><name pos:line="235" pos:column="36">str<pos:position pos:line="235" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="41">"space"<pos:position pos:line="235" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="49"/></argument_list></call> <operator pos:line="235" pos:column="50">&amp;&amp;<pos:position pos:line="235" pos:column="60"/></operator> <call><name pos:line="235" pos:column="53">ISSPACE<pos:position pos:line="235" pos:column="60"/></name> <argument_list pos:line="235" pos:column="61">(<argument><expr><operator pos:line="235" pos:column="62">(<pos:position pos:line="235" pos:column="63"/></operator><name pos:line="235" pos:column="63">unsigned<pos:position pos:line="235" pos:column="71"/></name> <name pos:line="235" pos:column="72">char<pos:position pos:line="235" pos:column="76"/></name><operator pos:line="235" pos:column="76">)<pos:position pos:line="235" pos:column="77"/></operator> <operator pos:line="235" pos:column="78">*<pos:position pos:line="235" pos:column="79"/></operator><name pos:line="235" pos:column="79">n<pos:position pos:line="235" pos:column="80"/></name></expr></argument>)<pos:position pos:line="235" pos:column="81"/></argument_list></call><operator pos:line="235" pos:column="81">)<pos:position pos:line="235" pos:column="82"/></operator>
			<operator pos:line="236" pos:column="25">||<pos:position pos:line="236" pos:column="27"/></operator> <operator pos:line="236" pos:column="28">(<pos:position pos:line="236" pos:column="29"/></operator><call><name pos:line="236" pos:column="29">STREQ<pos:position pos:line="236" pos:column="34"/></name> <argument_list pos:line="236" pos:column="35">(<argument><expr><name pos:line="236" pos:column="36">str<pos:position pos:line="236" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="236" pos:column="41">"upper"<pos:position pos:line="236" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="236" pos:column="49"/></argument_list></call> <operator pos:line="236" pos:column="50">&amp;&amp;<pos:position pos:line="236" pos:column="60"/></operator> <call><name pos:line="236" pos:column="53">ISUPPER<pos:position pos:line="236" pos:column="60"/></name> <argument_list pos:line="236" pos:column="61">(<argument><expr><operator pos:line="236" pos:column="62">(<pos:position pos:line="236" pos:column="63"/></operator><name pos:line="236" pos:column="63">unsigned<pos:position pos:line="236" pos:column="71"/></name> <name pos:line="236" pos:column="72">char<pos:position pos:line="236" pos:column="76"/></name><operator pos:line="236" pos:column="76">)<pos:position pos:line="236" pos:column="77"/></operator> <operator pos:line="236" pos:column="78">*<pos:position pos:line="236" pos:column="79"/></operator><name pos:line="236" pos:column="79">n<pos:position pos:line="236" pos:column="80"/></name></expr></argument>)<pos:position pos:line="236" pos:column="81"/></argument_list></call><operator pos:line="236" pos:column="81">)<pos:position pos:line="236" pos:column="82"/></operator>
			<operator pos:line="237" pos:column="25">||<pos:position pos:line="237" pos:column="27"/></operator> <operator pos:line="237" pos:column="28">(<pos:position pos:line="237" pos:column="29"/></operator><call><name pos:line="237" pos:column="29">STREQ<pos:position pos:line="237" pos:column="34"/></name> <argument_list pos:line="237" pos:column="35">(<argument><expr><name pos:line="237" pos:column="36">str<pos:position pos:line="237" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="41">"xdigit"<pos:position pos:line="237" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="50"/></argument_list></call> <operator pos:line="237" pos:column="51">&amp;&amp;<pos:position pos:line="237" pos:column="61"/></operator> <call><name pos:line="237" pos:column="54">ISXDIGIT<pos:position pos:line="237" pos:column="62"/></name> <argument_list pos:line="237" pos:column="63">(<argument><expr><operator pos:line="237" pos:column="64">(<pos:position pos:line="237" pos:column="65"/></operator><name pos:line="237" pos:column="65">unsigned<pos:position pos:line="237" pos:column="73"/></name> <name pos:line="237" pos:column="74">char<pos:position pos:line="237" pos:column="78"/></name><operator pos:line="237" pos:column="78">)<pos:position pos:line="237" pos:column="79"/></operator> <operator pos:line="237" pos:column="80">*<pos:position pos:line="237" pos:column="81"/></operator><name pos:line="237" pos:column="81">n<pos:position pos:line="237" pos:column="82"/></name></expr></argument>)<pos:position pos:line="237" pos:column="83"/></argument_list></call><operator pos:line="237" pos:column="83">)<pos:position pos:line="237" pos:column="84"/></operator></expr>)<pos:position pos:line="237" pos:column="85"/></condition><then pos:line="237" pos:column="85">
		      <block type="pseudo"><goto pos:line="238" pos:column="23">goto <name pos:line="238" pos:column="28">matched<pos:position pos:line="238" pos:column="35"/></name>;<pos:position pos:line="238" pos:column="36"/></goto></block></then></if>
<cpp:endif pos:line="239" pos:column="1"># <cpp:directive pos:line="239" pos:column="3">endif<pos:position pos:line="239" pos:column="8"/></cpp:directive></cpp:endif>
		  }<pos:position pos:line="240" pos:column="20"/></block></then></if></elseif>
		<elseif pos:line="241" pos:column="17">else <if pos:line="241" pos:column="22">if <condition pos:line="241" pos:column="25">(<expr><name pos:line="241" pos:column="26">c<pos:position pos:line="241" pos:column="27"/></name> <operator pos:line="241" pos:column="28">==<pos:position pos:line="241" pos:column="30"/></operator> <literal type="char" pos:line="241" pos:column="31">'\0'<pos:position pos:line="241" pos:column="35"/></literal></expr>)<pos:position pos:line="241" pos:column="36"/></condition><then pos:line="241" pos:column="36">
		  <comment type="block" pos:line="242" pos:column="19">/* [ (unterminated) loses.  */</comment>
		  <block type="pseudo"><return pos:line="243" pos:column="19">return <expr><name pos:line="243" pos:column="26">FNM_NOMATCH<pos:position pos:line="243" pos:column="37"/></name></expr>;<pos:position pos:line="243" pos:column="38"/></return></block></then></if></elseif>
		<else pos:line="244" pos:column="17">else
		  <block pos:line="245" pos:column="19">{
		  <label><name pos:line="246" pos:column="19">normal_bracket<pos:position pos:line="246" pos:column="33"/></name>:<pos:position pos:line="246" pos:column="34"/></label>
		    <if pos:line="247" pos:column="21">if <condition pos:line="247" pos:column="24">(<expr><call><name pos:line="247" pos:column="25">FOLD<pos:position pos:line="247" pos:column="29"/></name> <argument_list pos:line="247" pos:column="30">(<argument><expr><name pos:line="247" pos:column="31">c<pos:position pos:line="247" pos:column="32"/></name></expr></argument>)<pos:position pos:line="247" pos:column="33"/></argument_list></call> <operator pos:line="247" pos:column="34">==<pos:position pos:line="247" pos:column="36"/></operator> <name pos:line="247" pos:column="37">fn<pos:position pos:line="247" pos:column="39"/></name></expr>)<pos:position pos:line="247" pos:column="40"/></condition><then pos:line="247" pos:column="40">
		      <block type="pseudo"><goto pos:line="248" pos:column="23">goto <name pos:line="248" pos:column="28">matched<pos:position pos:line="248" pos:column="35"/></name>;<pos:position pos:line="248" pos:column="36"/></goto></block></then></if>

		    <expr_stmt><expr><name pos:line="250" pos:column="21">cold<pos:position pos:line="250" pos:column="25"/></name> <operator pos:line="250" pos:column="26">=<pos:position pos:line="250" pos:column="27"/></operator> <name pos:line="250" pos:column="28">c<pos:position pos:line="250" pos:column="29"/></name></expr>;<pos:position pos:line="250" pos:column="30"/></expr_stmt>
		    <expr_stmt><expr><name pos:line="251" pos:column="21">c<pos:position pos:line="251" pos:column="22"/></name> <operator pos:line="251" pos:column="23">=<pos:position pos:line="251" pos:column="24"/></operator> <operator pos:line="251" pos:column="25">*<pos:position pos:line="251" pos:column="26"/></operator><name pos:line="251" pos:column="26">p<pos:position pos:line="251" pos:column="27"/></name><operator pos:line="251" pos:column="27">++<pos:position pos:line="251" pos:column="29"/></operator></expr>;<pos:position pos:line="251" pos:column="30"/></expr_stmt>

		    <if pos:line="253" pos:column="21">if <condition pos:line="253" pos:column="24">(<expr><name pos:line="253" pos:column="25">c<pos:position pos:line="253" pos:column="26"/></name> <operator pos:line="253" pos:column="27">==<pos:position pos:line="253" pos:column="29"/></operator> <literal type="char" pos:line="253" pos:column="30">'-'<pos:position pos:line="253" pos:column="33"/></literal> <operator pos:line="253" pos:column="34">&amp;&amp;<pos:position pos:line="253" pos:column="44"/></operator> <operator pos:line="253" pos:column="37">*<pos:position pos:line="253" pos:column="38"/></operator><name pos:line="253" pos:column="38">p<pos:position pos:line="253" pos:column="39"/></name> <operator pos:line="253" pos:column="40">!=<pos:position pos:line="253" pos:column="42"/></operator> <literal type="char" pos:line="253" pos:column="43">']'<pos:position pos:line="253" pos:column="46"/></literal></expr>)<pos:position pos:line="253" pos:column="47"/></condition><then pos:line="253" pos:column="47">
		      <block pos:line="254" pos:column="23">{
			<comment type="block" pos:line="255" pos:column="25">/* It is a range.  */</comment>
			<decl_stmt><decl><type><name pos:line="256" pos:column="25">unsigned<pos:position pos:line="256" pos:column="33"/></name> <name pos:line="256" pos:column="34">char<pos:position pos:line="256" pos:column="38"/></name></type> <name pos:line="256" pos:column="39">cend<pos:position pos:line="256" pos:column="43"/></name> <init pos:line="256" pos:column="44">= <expr><operator pos:line="256" pos:column="46">*<pos:position pos:line="256" pos:column="47"/></operator><name pos:line="256" pos:column="47">p<pos:position pos:line="256" pos:column="48"/></name><operator pos:line="256" pos:column="48">++<pos:position pos:line="256" pos:column="50"/></operator></expr></init></decl>;<pos:position pos:line="256" pos:column="51"/></decl_stmt>
			<if pos:line="257" pos:column="25">if <condition pos:line="257" pos:column="28">(<expr><operator pos:line="257" pos:column="29">!<pos:position pos:line="257" pos:column="30"/></operator><operator pos:line="257" pos:column="30">(<pos:position pos:line="257" pos:column="31"/></operator><name pos:line="257" pos:column="31">flags<pos:position pos:line="257" pos:column="36"/></name> <operator pos:line="257" pos:column="37">&amp;<pos:position pos:line="257" pos:column="42"/></operator> <name pos:line="257" pos:column="39">FNM_NOESCAPE<pos:position pos:line="257" pos:column="51"/></name><operator pos:line="257" pos:column="51">)<pos:position pos:line="257" pos:column="52"/></operator> <operator pos:line="257" pos:column="53">&amp;&amp;<pos:position pos:line="257" pos:column="63"/></operator> <name pos:line="257" pos:column="56">cend<pos:position pos:line="257" pos:column="60"/></name> <operator pos:line="257" pos:column="61">==<pos:position pos:line="257" pos:column="63"/></operator> <literal type="char" pos:line="257" pos:column="64">'\\'<pos:position pos:line="257" pos:column="68"/></literal></expr>)<pos:position pos:line="257" pos:column="69"/></condition><then pos:line="257" pos:column="69">
			  <block type="pseudo"><expr_stmt><expr><name pos:line="258" pos:column="27">cend<pos:position pos:line="258" pos:column="31"/></name> <operator pos:line="258" pos:column="32">=<pos:position pos:line="258" pos:column="33"/></operator> <operator pos:line="258" pos:column="34">*<pos:position pos:line="258" pos:column="35"/></operator><name pos:line="258" pos:column="35">p<pos:position pos:line="258" pos:column="36"/></name><operator pos:line="258" pos:column="36">++<pos:position pos:line="258" pos:column="38"/></operator></expr>;<pos:position pos:line="258" pos:column="39"/></expr_stmt></block></then></if>
			<if pos:line="259" pos:column="25">if <condition pos:line="259" pos:column="28">(<expr><name pos:line="259" pos:column="29">cend<pos:position pos:line="259" pos:column="33"/></name> <operator pos:line="259" pos:column="34">==<pos:position pos:line="259" pos:column="36"/></operator> <literal type="char" pos:line="259" pos:column="37">'\0'<pos:position pos:line="259" pos:column="41"/></literal></expr>)<pos:position pos:line="259" pos:column="42"/></condition><then pos:line="259" pos:column="42">
			  <block type="pseudo"><return pos:line="260" pos:column="27">return <expr><name pos:line="260" pos:column="34">FNM_NOMATCH<pos:position pos:line="260" pos:column="45"/></name></expr>;<pos:position pos:line="260" pos:column="46"/></return></block></then></if>

			<if pos:line="262" pos:column="25">if <condition pos:line="262" pos:column="28">(<expr><name pos:line="262" pos:column="29">cold<pos:position pos:line="262" pos:column="33"/></name> <operator pos:line="262" pos:column="34">&lt;=<pos:position pos:line="262" pos:column="39"/></operator> <name pos:line="262" pos:column="37">fn<pos:position pos:line="262" pos:column="39"/></name> <operator pos:line="262" pos:column="40">&amp;&amp;<pos:position pos:line="262" pos:column="50"/></operator> <name pos:line="262" pos:column="43">fn<pos:position pos:line="262" pos:column="45"/></name> <operator pos:line="262" pos:column="46">&lt;=<pos:position pos:line="262" pos:column="51"/></operator> <call><name pos:line="262" pos:column="49">FOLD<pos:position pos:line="262" pos:column="53"/></name> <argument_list pos:line="262" pos:column="54">(<argument><expr><name pos:line="262" pos:column="55">cend<pos:position pos:line="262" pos:column="59"/></name></expr></argument>)<pos:position pos:line="262" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="262" pos:column="61"/></condition><then pos:line="262" pos:column="61">
			  <block type="pseudo"><goto pos:line="263" pos:column="27">goto <name pos:line="263" pos:column="32">matched<pos:position pos:line="263" pos:column="39"/></name>;<pos:position pos:line="263" pos:column="40"/></goto></block></then></if>

			<expr_stmt><expr><name pos:line="265" pos:column="25">c<pos:position pos:line="265" pos:column="26"/></name> <operator pos:line="265" pos:column="27">=<pos:position pos:line="265" pos:column="28"/></operator> <operator pos:line="265" pos:column="29">*<pos:position pos:line="265" pos:column="30"/></operator><name pos:line="265" pos:column="30">p<pos:position pos:line="265" pos:column="31"/></name><operator pos:line="265" pos:column="31">++<pos:position pos:line="265" pos:column="33"/></operator></expr>;<pos:position pos:line="265" pos:column="34"/></expr_stmt>
		      }<pos:position pos:line="266" pos:column="24"/></block></then></if>
		  }<pos:position pos:line="267" pos:column="20"/></block></else></if>

		<if pos:line="269" pos:column="17">if <condition pos:line="269" pos:column="20">(<expr><name pos:line="269" pos:column="21">c<pos:position pos:line="269" pos:column="22"/></name> <operator pos:line="269" pos:column="23">==<pos:position pos:line="269" pos:column="25"/></operator> <literal type="char" pos:line="269" pos:column="26">']'<pos:position pos:line="269" pos:column="29"/></literal></expr>)<pos:position pos:line="269" pos:column="30"/></condition><then pos:line="269" pos:column="30">
		  <block type="pseudo"><break pos:line="270" pos:column="19">break;<pos:position pos:line="270" pos:column="25"/></break></block></then></if>
	      }<pos:position pos:line="271" pos:column="16"/></block></for>

	    <if pos:line="273" pos:column="13">if <condition pos:line="273" pos:column="16">(<expr><operator pos:line="273" pos:column="17">!<pos:position pos:line="273" pos:column="18"/></operator><operator pos:line="273" pos:column="18">not<pos:position pos:line="273" pos:column="21"/></operator></expr>)<pos:position pos:line="273" pos:column="22"/></condition><then pos:line="273" pos:column="22">
	      <block type="pseudo"><return pos:line="274" pos:column="15">return <expr><name pos:line="274" pos:column="22">FNM_NOMATCH<pos:position pos:line="274" pos:column="33"/></name></expr>;<pos:position pos:line="274" pos:column="34"/></return></block></then></if>
	    <break pos:line="275" pos:column="13">break;<pos:position pos:line="275" pos:column="19"/></break>

	  <label><name pos:line="277" pos:column="11">matched<pos:position pos:line="277" pos:column="18"/></name>:<pos:position pos:line="277" pos:column="19"/></label>
	    <comment type="block" pos:line="278" pos:column="13">/* Skip the rest of the [...] that already matched.  */</comment>
	    <while pos:line="279" pos:column="13">while <condition pos:line="279" pos:column="19">(<expr><name pos:line="279" pos:column="20">c<pos:position pos:line="279" pos:column="21"/></name> <operator pos:line="279" pos:column="22">!=<pos:position pos:line="279" pos:column="24"/></operator> <literal type="char" pos:line="279" pos:column="25">']'<pos:position pos:line="279" pos:column="28"/></literal></expr>)<pos:position pos:line="279" pos:column="29"/></condition>
	      <block pos:line="280" pos:column="15">{
		<if pos:line="281" pos:column="17">if <condition pos:line="281" pos:column="20">(<expr><name pos:line="281" pos:column="21">c<pos:position pos:line="281" pos:column="22"/></name> <operator pos:line="281" pos:column="23">==<pos:position pos:line="281" pos:column="25"/></operator> <literal type="char" pos:line="281" pos:column="26">'\0'<pos:position pos:line="281" pos:column="30"/></literal></expr>)<pos:position pos:line="281" pos:column="31"/></condition><then pos:line="281" pos:column="31">
		  <comment type="block" pos:line="282" pos:column="19">/* [... (unterminated) loses.  */</comment>
		  <block type="pseudo"><return pos:line="283" pos:column="19">return <expr><name pos:line="283" pos:column="26">FNM_NOMATCH<pos:position pos:line="283" pos:column="37"/></name></expr>;<pos:position pos:line="283" pos:column="38"/></return></block></then></if>

		<expr_stmt><expr><name pos:line="285" pos:column="17">c<pos:position pos:line="285" pos:column="18"/></name> <operator pos:line="285" pos:column="19">=<pos:position pos:line="285" pos:column="20"/></operator> <operator pos:line="285" pos:column="21">*<pos:position pos:line="285" pos:column="22"/></operator><name pos:line="285" pos:column="22">p<pos:position pos:line="285" pos:column="23"/></name><operator pos:line="285" pos:column="23">++<pos:position pos:line="285" pos:column="25"/></operator></expr>;<pos:position pos:line="285" pos:column="26"/></expr_stmt>
		<if pos:line="286" pos:column="17">if <condition pos:line="286" pos:column="20">(<expr><operator pos:line="286" pos:column="21">!<pos:position pos:line="286" pos:column="22"/></operator><operator pos:line="286" pos:column="22">(<pos:position pos:line="286" pos:column="23"/></operator><name pos:line="286" pos:column="23">flags<pos:position pos:line="286" pos:column="28"/></name> <operator pos:line="286" pos:column="29">&amp;<pos:position pos:line="286" pos:column="34"/></operator> <name pos:line="286" pos:column="31">FNM_NOESCAPE<pos:position pos:line="286" pos:column="43"/></name><operator pos:line="286" pos:column="43">)<pos:position pos:line="286" pos:column="44"/></operator> <operator pos:line="286" pos:column="45">&amp;&amp;<pos:position pos:line="286" pos:column="55"/></operator> <name pos:line="286" pos:column="48">c<pos:position pos:line="286" pos:column="49"/></name> <operator pos:line="286" pos:column="50">==<pos:position pos:line="286" pos:column="52"/></operator> <literal type="char" pos:line="286" pos:column="53">'\\'<pos:position pos:line="286" pos:column="57"/></literal></expr>)<pos:position pos:line="286" pos:column="58"/></condition><then pos:line="286" pos:column="58">
		  <block pos:line="287" pos:column="19">{
		    <if pos:line="288" pos:column="21">if <condition pos:line="288" pos:column="24">(<expr><operator pos:line="288" pos:column="25">*<pos:position pos:line="288" pos:column="26"/></operator><name pos:line="288" pos:column="26">p<pos:position pos:line="288" pos:column="27"/></name> <operator pos:line="288" pos:column="28">==<pos:position pos:line="288" pos:column="30"/></operator> <literal type="char" pos:line="288" pos:column="31">'\0'<pos:position pos:line="288" pos:column="35"/></literal></expr>)<pos:position pos:line="288" pos:column="36"/></condition><then pos:line="288" pos:column="36">
		      <block type="pseudo"><return pos:line="289" pos:column="23">return <expr><name pos:line="289" pos:column="30">FNM_NOMATCH<pos:position pos:line="289" pos:column="41"/></name></expr>;<pos:position pos:line="289" pos:column="42"/></return></block></then></if>
		    <comment type="block" pos:line="290" pos:column="21">/* XXX 1003.2d11 is unclear if this is right.  */</comment>
		    <expr_stmt><expr><operator pos:line="291" pos:column="21">++<pos:position pos:line="291" pos:column="23"/></operator><name pos:line="291" pos:column="23">p<pos:position pos:line="291" pos:column="24"/></name></expr>;<pos:position pos:line="291" pos:column="25"/></expr_stmt>
		  }<pos:position pos:line="292" pos:column="20"/></block></then>
		<elseif pos:line="293" pos:column="17">else <if pos:line="293" pos:column="22">if <condition pos:line="293" pos:column="25">(<expr><name pos:line="293" pos:column="26">c<pos:position pos:line="293" pos:column="27"/></name> <operator pos:line="293" pos:column="28">==<pos:position pos:line="293" pos:column="30"/></operator> <literal type="char" pos:line="293" pos:column="31">'['<pos:position pos:line="293" pos:column="34"/></literal> <operator pos:line="293" pos:column="35">&amp;&amp;<pos:position pos:line="293" pos:column="45"/></operator> <operator pos:line="293" pos:column="38">*<pos:position pos:line="293" pos:column="39"/></operator><name pos:line="293" pos:column="39">p<pos:position pos:line="293" pos:column="40"/></name> <operator pos:line="293" pos:column="41">==<pos:position pos:line="293" pos:column="43"/></operator> <literal type="char" pos:line="293" pos:column="44">':'<pos:position pos:line="293" pos:column="47"/></literal></expr>)<pos:position pos:line="293" pos:column="48"/></condition><then pos:line="293" pos:column="48">
		  <block pos:line="294" pos:column="19">{
		    <do pos:line="295" pos:column="21">do
		      <block type="pseudo"><if pos:line="296" pos:column="23">if <condition pos:line="296" pos:column="26">(<expr><operator pos:line="296" pos:column="27">*<pos:position pos:line="296" pos:column="28"/></operator><operator pos:line="296" pos:column="28">++<pos:position pos:line="296" pos:column="30"/></operator><name pos:line="296" pos:column="30">p<pos:position pos:line="296" pos:column="31"/></name> <operator pos:line="296" pos:column="32">==<pos:position pos:line="296" pos:column="34"/></operator> <literal type="char" pos:line="296" pos:column="35">'\0'<pos:position pos:line="296" pos:column="39"/></literal></expr>)<pos:position pos:line="296" pos:column="40"/></condition><then pos:line="296" pos:column="40">
			<block type="pseudo"><return pos:line="297" pos:column="25">return <expr><name pos:line="297" pos:column="32">FNM_NOMATCH<pos:position pos:line="297" pos:column="43"/></name></expr>;<pos:position pos:line="297" pos:column="44"/></return></block></then></if></block>
		    while <condition pos:line="298" pos:column="27">(<expr><operator pos:line="298" pos:column="28">*<pos:position pos:line="298" pos:column="29"/></operator><name pos:line="298" pos:column="29">p<pos:position pos:line="298" pos:column="30"/></name> <operator pos:line="298" pos:column="31">!=<pos:position pos:line="298" pos:column="33"/></operator> <literal type="char" pos:line="298" pos:column="34">':'<pos:position pos:line="298" pos:column="37"/></literal> <operator pos:line="298" pos:column="38">||<pos:position pos:line="298" pos:column="40"/></operator> <name><name pos:line="298" pos:column="41">p<pos:position pos:line="298" pos:column="42"/></name><index pos:line="298" pos:column="42">[<expr><literal type="number" pos:line="298" pos:column="43">1<pos:position pos:line="298" pos:column="44"/></literal></expr>]<pos:position pos:line="298" pos:column="45"/></index></name> <operator pos:line="298" pos:column="46">==<pos:position pos:line="298" pos:column="48"/></operator> <literal type="char" pos:line="298" pos:column="49">']'<pos:position pos:line="298" pos:column="52"/></literal></expr>)<pos:position pos:line="298" pos:column="53"/></condition>;<pos:position pos:line="298" pos:column="54"/></do>
		    <expr_stmt><expr><name pos:line="299" pos:column="21">p<pos:position pos:line="299" pos:column="22"/></name> <operator pos:line="299" pos:column="23">+=<pos:position pos:line="299" pos:column="25"/></operator> <literal type="number" pos:line="299" pos:column="26">2<pos:position pos:line="299" pos:column="27"/></literal></expr>;<pos:position pos:line="299" pos:column="28"/></expr_stmt>
		    <expr_stmt><expr><name pos:line="300" pos:column="21">c<pos:position pos:line="300" pos:column="22"/></name> <operator pos:line="300" pos:column="23">=<pos:position pos:line="300" pos:column="24"/></operator> <operator pos:line="300" pos:column="25">*<pos:position pos:line="300" pos:column="26"/></operator><name pos:line="300" pos:column="26">p<pos:position pos:line="300" pos:column="27"/></name></expr>;<pos:position pos:line="300" pos:column="28"/></expr_stmt>
		  }<pos:position pos:line="301" pos:column="20"/></block></then></if></elseif></if>
	      }<pos:position pos:line="302" pos:column="16"/></block></while>
	    <if pos:line="303" pos:column="13">if <condition pos:line="303" pos:column="16">(<expr><operator pos:line="303" pos:column="17">not<pos:position pos:line="303" pos:column="20"/></operator></expr>)<pos:position pos:line="303" pos:column="21"/></condition><then pos:line="303" pos:column="21">
	      <block type="pseudo"><return pos:line="304" pos:column="15">return <expr><name pos:line="304" pos:column="22">FNM_NOMATCH<pos:position pos:line="304" pos:column="33"/></name></expr>;<pos:position pos:line="304" pos:column="34"/></return></block></then></if>
	  }<pos:position pos:line="305" pos:column="12"/></block>
	  <break pos:line="306" pos:column="11">break;<pos:position pos:line="306" pos:column="17"/></break>

	<default pos:line="308" pos:column="9">default:<pos:position pos:line="308" pos:column="17"/></default>
	  <if pos:line="309" pos:column="11">if <condition pos:line="309" pos:column="14">(<expr><name pos:line="309" pos:column="15">c<pos:position pos:line="309" pos:column="16"/></name> <operator pos:line="309" pos:column="17">!=<pos:position pos:line="309" pos:column="19"/></operator> <call><name pos:line="309" pos:column="20">FOLD<pos:position pos:line="309" pos:column="24"/></name> <argument_list pos:line="309" pos:column="25">(<argument><expr><operator pos:line="309" pos:column="26">(<pos:position pos:line="309" pos:column="27"/></operator><name pos:line="309" pos:column="27">unsigned<pos:position pos:line="309" pos:column="35"/></name> <name pos:line="309" pos:column="36">char<pos:position pos:line="309" pos:column="40"/></name><operator pos:line="309" pos:column="40">)<pos:position pos:line="309" pos:column="41"/></operator> <operator pos:line="309" pos:column="42">*<pos:position pos:line="309" pos:column="43"/></operator><name pos:line="309" pos:column="43">n<pos:position pos:line="309" pos:column="44"/></name></expr></argument>)<pos:position pos:line="309" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="309" pos:column="46"/></condition><then pos:line="309" pos:column="46">
	    <block type="pseudo"><return pos:line="310" pos:column="13">return <expr><name pos:line="310" pos:column="20">FNM_NOMATCH<pos:position pos:line="310" pos:column="31"/></name></expr>;<pos:position pos:line="310" pos:column="32"/></return></block></then></if>
	}<pos:position pos:line="311" pos:column="10"/></block></switch>

      <expr_stmt><expr><operator pos:line="313" pos:column="7">++<pos:position pos:line="313" pos:column="9"/></operator><name pos:line="313" pos:column="9">n<pos:position pos:line="313" pos:column="10"/></name></expr>;<pos:position pos:line="313" pos:column="11"/></expr_stmt>
    }<pos:position pos:line="314" pos:column="6"/></block></while>

  <if pos:line="316" pos:column="3">if <condition pos:line="316" pos:column="6">(<expr><operator pos:line="316" pos:column="7">*<pos:position pos:line="316" pos:column="8"/></operator><name pos:line="316" pos:column="8">n<pos:position pos:line="316" pos:column="9"/></name> <operator pos:line="316" pos:column="10">==<pos:position pos:line="316" pos:column="12"/></operator> <literal type="char" pos:line="316" pos:column="13">'\0'<pos:position pos:line="316" pos:column="17"/></literal></expr>)<pos:position pos:line="316" pos:column="18"/></condition><then pos:line="316" pos:column="18">
    <block type="pseudo"><return pos:line="317" pos:column="5">return <expr><literal type="number" pos:line="317" pos:column="12">0<pos:position pos:line="317" pos:column="13"/></literal></expr>;<pos:position pos:line="317" pos:column="14"/></return></block></then></if>

  <if pos:line="319" pos:column="3">if <condition pos:line="319" pos:column="6">(<expr><operator pos:line="319" pos:column="7">(<pos:position pos:line="319" pos:column="8"/></operator><name pos:line="319" pos:column="8">flags<pos:position pos:line="319" pos:column="13"/></name> <operator pos:line="319" pos:column="14">&amp;<pos:position pos:line="319" pos:column="19"/></operator> <name pos:line="319" pos:column="16">FNM_LEADING_DIR<pos:position pos:line="319" pos:column="31"/></name><operator pos:line="319" pos:column="31">)<pos:position pos:line="319" pos:column="32"/></operator> <operator pos:line="319" pos:column="33">&amp;&amp;<pos:position pos:line="319" pos:column="43"/></operator> <operator pos:line="319" pos:column="36">*<pos:position pos:line="319" pos:column="37"/></operator><name pos:line="319" pos:column="37">n<pos:position pos:line="319" pos:column="38"/></name> <operator pos:line="319" pos:column="39">==<pos:position pos:line="319" pos:column="41"/></operator> <literal type="char" pos:line="319" pos:column="42">'/'<pos:position pos:line="319" pos:column="45"/></literal></expr>)<pos:position pos:line="319" pos:column="46"/></condition><then pos:line="319" pos:column="46">
    <comment type="block" pos:line="320" pos:column="5">/* The FNM_LEADING_DIR flag says that "foo*" matches "foobar/frobozz".  */</comment>
    <block type="pseudo"><return pos:line="321" pos:column="5">return <expr><literal type="number" pos:line="321" pos:column="12">0<pos:position pos:line="321" pos:column="13"/></literal></expr>;<pos:position pos:line="321" pos:column="14"/></return></block></then></if>

  <return pos:line="323" pos:column="3">return <expr><name pos:line="323" pos:column="10">FNM_NOMATCH<pos:position pos:line="323" pos:column="21"/></name></expr>;<pos:position pos:line="323" pos:column="22"/></return>

<cpp:undef pos:line="325" pos:column="1"># <cpp:directive pos:line="325" pos:column="3">undef<pos:position pos:line="325" pos:column="8"/></cpp:directive> <name pos:line="325" pos:column="9">FOLD<pos:position pos:line="325" pos:column="13"/></name></cpp:undef>
}<pos:position pos:line="326" pos:column="2"/></block></function></unit>

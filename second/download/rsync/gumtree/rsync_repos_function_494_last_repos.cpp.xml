<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_494_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send_ida_entries<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">int<pos:position pos:line="1" pos:column="33"/></name></type> <name pos:line="1" pos:column="34">f<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">ida_entries<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">idal<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">id_access<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">ida<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">count<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">idal<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">count<pos:position pos:line="4" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="6" pos:column="9">write_varint<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">f<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="25">idal<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">count<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">ida<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name><name pos:line="8" pos:column="20">idal<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">idas<pos:position pos:line="8" pos:column="30"/></name></name></expr>;<pos:position pos:line="8" pos:column="31"/></init> <condition><expr><name pos:line="8" pos:column="32">count<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">--<pos:position pos:line="8" pos:column="39"/></operator></expr>;<pos:position pos:line="8" pos:column="40"/></condition> <incr><expr><name pos:line="8" pos:column="41">ida<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">++<pos:position pos:line="8" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="47"/></control> <block pos:line="8" pos:column="48">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">uint32<pos:position pos:line="9" pos:column="23"/></name></type> <name pos:line="9" pos:column="24">xbits<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name><name pos:line="9" pos:column="32">ida<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">access<pos:position pos:line="9" pos:column="43"/></name></name> <operator pos:line="9" pos:column="44">&lt;&lt;<pos:position pos:line="9" pos:column="52"/></operator> <literal type="number" pos:line="9" pos:column="47">2<pos:position pos:line="9" pos:column="48"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="10" pos:column="17">const<pos:position pos:line="10" pos:column="22"/></specifier> <name pos:line="10" pos:column="23">char<pos:position pos:line="10" pos:column="27"/></name> <modifier pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></modifier></type><name pos:line="10" pos:column="29">name<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><name><name pos:line="11" pos:column="21">ida<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">access<pos:position pos:line="11" pos:column="32"/></name></name> <operator pos:line="11" pos:column="33">&amp;<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="35">NAME_IS_USER<pos:position pos:line="11" pos:column="47"/></name></expr>)<pos:position pos:line="11" pos:column="48"/></condition><then pos:line="11" pos:column="48"> <block pos:line="11" pos:column="49">{
			<expr_stmt><expr><name pos:line="12" pos:column="25">xbits<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">|=<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">XFLAG_NAME_IS_USER<pos:position pos:line="12" pos:column="52"/></name></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
			<expr_stmt><expr><name pos:line="13" pos:column="25">name<pos:position pos:line="13" pos:column="29"/></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <ternary><condition><expr><name pos:line="13" pos:column="32">numeric_ids<pos:position pos:line="13" pos:column="43"/></name></expr> ?<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <expr><name pos:line="13" pos:column="46">NULL<pos:position pos:line="13" pos:column="50"/></name></expr> <pos:position pos:line="13" pos:column="51"/></then><else pos:line="13" pos:column="51">: <expr><call><name pos:line="13" pos:column="53">add_uid<pos:position pos:line="13" pos:column="60"/></name><argument_list pos:line="13" pos:column="60">(<argument><expr><name><name pos:line="13" pos:column="61">ida<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">-&gt;<pos:position pos:line="13" pos:column="69"/></operator><name pos:line="13" pos:column="66">id<pos:position pos:line="13" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <else pos:line="14" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">name<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">=<pos:position pos:line="15" pos:column="31"/></operator> <ternary><condition><expr><name pos:line="15" pos:column="32">numeric_ids<pos:position pos:line="15" pos:column="43"/></name></expr> ?<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45"> <expr><name pos:line="15" pos:column="46">NULL<pos:position pos:line="15" pos:column="50"/></name></expr> <pos:position pos:line="15" pos:column="51"/></then><else pos:line="15" pos:column="51">: <expr><call><name pos:line="15" pos:column="53">add_gid<pos:position pos:line="15" pos:column="60"/></name><argument_list pos:line="15" pos:column="60">(<argument><expr><name><name pos:line="15" pos:column="61">ida<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">-&gt;<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="66">id<pos:position pos:line="15" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt></block></else></if>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">write_varint<pos:position pos:line="16" pos:column="29"/></name><argument_list pos:line="16" pos:column="29">(<argument><expr><name pos:line="16" pos:column="30">f<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="33">ida<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">id<pos:position pos:line="16" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">inc_recurse<pos:position pos:line="17" pos:column="32"/></name> <operator pos:line="17" pos:column="33">&amp;&amp;<pos:position pos:line="17" pos:column="43"/></operator> <name pos:line="17" pos:column="36">name<pos:position pos:line="17" pos:column="40"/></name></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <block pos:line="17" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">int<pos:position pos:line="18" pos:column="28"/></name></type> <name pos:line="18" pos:column="29">len<pos:position pos:line="18" pos:column="32"/></name> <init pos:line="18" pos:column="33">= <expr><call><name pos:line="18" pos:column="35">strlen<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">name<pos:position pos:line="18" pos:column="46"/></name></expr></argument>)<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="19" pos:column="25">write_varint<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">f<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="41">xbits<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">|<pos:position pos:line="19" pos:column="48"/></operator> <name pos:line="19" pos:column="49">XFLAG_NAME_FOLLOWS<pos:position pos:line="19" pos:column="67"/></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="20" pos:column="25">write_byte<pos:position pos:line="20" pos:column="35"/></name><argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">f<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">len<pos:position pos:line="20" pos:column="42"/></name></expr></argument>)<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">write_buf<pos:position pos:line="21" pos:column="34"/></name><argument_list pos:line="21" pos:column="34">(<argument><expr><name pos:line="21" pos:column="35">f<pos:position pos:line="21" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="38">name<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">len<pos:position pos:line="21" pos:column="47"/></name></expr></argument>)<pos:position pos:line="21" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="49"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then> <else pos:line="22" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">write_varint<pos:position pos:line="23" pos:column="37"/></name><argument_list pos:line="23" pos:column="37">(<argument><expr><name pos:line="23" pos:column="38">f<pos:position pos:line="23" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="41">xbits<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt></block></else></if>
	}<pos:position pos:line="24" pos:column="10"/></block></for>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

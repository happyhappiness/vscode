<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_474_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">do_fallocate<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">fd<pos:position pos:line="1" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">OFF_T<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">offset<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">OFF_T<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">length<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifdef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifdef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">FALLOC_FL_KEEP_SIZE<pos:position pos:line="3" pos:column="27"/></name></cpp:ifdef>
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">DO_FALLOC_OPTIONS<pos:position pos:line="4" pos:column="26"/></name></cpp:macro> <cpp:value pos:line="4" pos:column="27">FALLOC_FL_KEEP_SIZE<pos:position pos:line="4" pos:column="46"/></cpp:value></cpp:define>
<cpp:else pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">else<pos:position pos:line="5" pos:column="6"/></cpp:directive></cpp:else>
<cpp:define pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">define<pos:position pos:line="6" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="6" pos:column="9">DO_FALLOC_OPTIONS<pos:position pos:line="6" pos:column="26"/></name></cpp:macro> <cpp:value pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></cpp:value></cpp:define>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name pos:line="8" pos:column="9">RETURN_ERROR_IF<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">dry_run<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">RETURN_ERROR_IF_RO_OR_LO<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">defined<pos:position pos:line="10" pos:column="12"/></name> <name pos:line="10" pos:column="13">HAVE_FALLOCATE<pos:position pos:line="10" pos:column="27"/></name></expr></cpp:if>
	<return pos:line="11" pos:column="9">return <expr><call><name pos:line="11" pos:column="16">fallocate<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">fd<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">DO_FALLOC_OPTIONS<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">offset<pos:position pos:line="11" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="57">length<pos:position pos:line="11" pos:column="63"/></name></expr></argument>)<pos:position pos:line="11" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="65"/></return>
<cpp:elif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">elif<pos:position pos:line="12" pos:column="6"/></cpp:directive> <expr><name pos:line="12" pos:column="7">defined<pos:position pos:line="12" pos:column="14"/></name> <name pos:line="12" pos:column="15">HAVE_SYS_FALLOCATE<pos:position pos:line="12" pos:column="33"/></name></expr></cpp:elif>
	<return pos:line="13" pos:column="9">return <expr><call><name pos:line="13" pos:column="16">syscall<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">SYS_fallocate<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">fd<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="43">DO_FALLOC_OPTIONS<pos:position pos:line="13" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="62">(<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="63">loff_t<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">)<pos:position pos:line="13" pos:column="70"/></operator><name pos:line="13" pos:column="70">offset<pos:position pos:line="13" pos:column="76"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="78">(<pos:position pos:line="13" pos:column="79"/></operator><name pos:line="13" pos:column="79">loff_t<pos:position pos:line="13" pos:column="85"/></name><operator pos:line="13" pos:column="85">)<pos:position pos:line="13" pos:column="86"/></operator><name pos:line="13" pos:column="86">length<pos:position pos:line="13" pos:column="92"/></name></expr></argument>)<pos:position pos:line="13" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="94"/></return>
<cpp:elif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">elif<pos:position pos:line="14" pos:column="6"/></cpp:directive> <expr><name pos:line="14" pos:column="7">defined<pos:position pos:line="14" pos:column="14"/></name> <name pos:line="14" pos:column="15">HAVE_EFFICIENT_POSIX_FALLOCATE<pos:position pos:line="14" pos:column="45"/></name></expr></cpp:elif>
	<return pos:line="15" pos:column="9">return <expr><call><name pos:line="15" pos:column="16">posix_fallocate<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">fd<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">offset<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">length<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></return>
<cpp:else pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">else<pos:position pos:line="16" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">error<pos:position pos:line="17" pos:column="7"/></cpp:directive> Coding error in SUPPORT_PREALLOCATION logic.<pos:position pos:line="17" pos:column="52"/></cpp:error>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

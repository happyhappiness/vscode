<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_398_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">expand_item_list<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">item_list<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">lp<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">size_t<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">item_size<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
		       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">desc<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">incr<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<comment type="block" pos:line="4" pos:column="9">/* First time through, 0 &lt;= 0, so list is expanded. */</comment>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">lp<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">malloced<pos:position pos:line="5" pos:column="25"/></name></name> <operator pos:line="5" pos:column="26">&lt;=<pos:position pos:line="5" pos:column="31"/></operator> <name><name pos:line="5" pos:column="29">lp<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">count<pos:position pos:line="5" pos:column="38"/></name></name></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39"> <block pos:line="5" pos:column="40">{
		<decl_stmt><decl><type><name pos:line="6" pos:column="17">void<pos:position pos:line="6" pos:column="21"/></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">new_ptr<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="7" pos:column="17">size_t<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">new_size<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name><name pos:line="7" pos:column="35">lp<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">malloced<pos:position pos:line="7" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
		<if pos:line="8" pos:column="17">if <condition pos:line="8" pos:column="20">(<expr><name pos:line="8" pos:column="21">incr<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">&lt;<pos:position pos:line="8" pos:column="30"/></operator> <literal type="number" pos:line="8" pos:column="28">0<pos:position pos:line="8" pos:column="29"/></literal></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="25">new_size<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">+=<pos:position pos:line="9" pos:column="36"/></operator> <operator pos:line="9" pos:column="37">-<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">incr<pos:position pos:line="9" pos:column="42"/></name></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt></block></then> <comment type="block" pos:line="9" pos:column="44">/* increase slowly */</comment>
		<elseif pos:line="10" pos:column="17">else <if pos:line="10" pos:column="22">if <condition pos:line="10" pos:column="25">(<expr><name pos:line="10" pos:column="26">new_size<pos:position pos:line="10" pos:column="34"/></name> <operator pos:line="10" pos:column="35">&lt;<pos:position pos:line="10" pos:column="39"/></operator> <operator pos:line="10" pos:column="37">(<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">size_t<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">incr<pos:position pos:line="10" pos:column="49"/></name></expr>)<pos:position pos:line="10" pos:column="50"/></condition><then pos:line="10" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="25">new_size<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <name pos:line="11" pos:column="36">incr<pos:position pos:line="11" pos:column="40"/></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><name pos:line="12" pos:column="26">new_size<pos:position pos:line="12" pos:column="34"/></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="25">new_size<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">*=<pos:position pos:line="13" pos:column="36"/></operator> <literal type="number" pos:line="13" pos:column="37">2<pos:position pos:line="13" pos:column="38"/></literal></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt></block></then></if></elseif>
		<else pos:line="14" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="25">new_size<pos:position pos:line="15" pos:column="33"/></name> <operator pos:line="15" pos:column="34">=<pos:position pos:line="15" pos:column="35"/></operator> <literal type="number" pos:line="15" pos:column="36">1<pos:position pos:line="15" pos:column="37"/></literal></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt></block></else></if>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">new_size<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">&lt;=<pos:position pos:line="16" pos:column="35"/></operator> <name><name pos:line="16" pos:column="33">lp<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">-&gt;<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="37">malloced<pos:position pos:line="16" pos:column="45"/></name></name></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="25">overflow_exit<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><literal type="string" pos:line="17" pos:column="39">"expand_item_list"<pos:position pos:line="17" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="59"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="18" pos:column="17">/* Using _realloc_array() lets us pass the size, not a type. */</comment>
		<expr_stmt><expr><name pos:line="19" pos:column="17">new_ptr<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">=<pos:position pos:line="19" pos:column="26"/></operator> <call><name pos:line="19" pos:column="27">_realloc_array<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">lp<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">items<pos:position pos:line="19" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">item_size<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="64">new_size<pos:position pos:line="19" pos:column="72"/></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">DEBUG_GTE<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">FLIST<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="38">3<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
			<expr_stmt><expr><call><name pos:line="21" pos:column="25">rprintf<pos:position pos:line="21" pos:column="32"/></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">FINFO<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="40">"[%s] expand %s to %s bytes, did%s move\n"<pos:position pos:line="21" pos:column="82"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="22" pos:column="33">who_am_i<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">()<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="45">desc<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="51">big_num<pos:position pos:line="22" pos:column="58"/></name><argument_list pos:line="22" pos:column="58">(<argument><expr><name pos:line="22" pos:column="59">new_size<pos:position pos:line="22" pos:column="67"/></name> <operator pos:line="22" pos:column="68">*<pos:position pos:line="22" pos:column="69"/></operator> <name pos:line="22" pos:column="70">item_size<pos:position pos:line="22" pos:column="79"/></name></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="23" pos:column="33">new_ptr<pos:position pos:line="23" pos:column="40"/></name> <operator pos:line="23" pos:column="41">==<pos:position pos:line="23" pos:column="43"/></operator> <name><name pos:line="23" pos:column="44">lp<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">items<pos:position pos:line="23" pos:column="53"/></name></name></expr> ?<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55"> <expr><literal type="string" pos:line="23" pos:column="56">" not"<pos:position pos:line="23" pos:column="62"/></literal></expr> <pos:position pos:line="23" pos:column="63"/></then><else pos:line="23" pos:column="63">: <expr><literal type="string" pos:line="23" pos:column="65">""<pos:position pos:line="23" pos:column="67"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">!<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">new_ptr<pos:position pos:line="25" pos:column="29"/></name></expr>)<pos:position pos:line="25" pos:column="30"/></condition><then pos:line="25" pos:column="30">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="25">out_of_memory<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><literal type="string" pos:line="26" pos:column="39">"expand_item_list"<pos:position pos:line="26" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name><name pos:line="28" pos:column="17">lp<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">items<pos:position pos:line="28" pos:column="26"/></name></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">new_ptr<pos:position pos:line="28" pos:column="36"/></name></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="29" pos:column="17">lp<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">malloced<pos:position pos:line="29" pos:column="29"/></name></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <name pos:line="29" pos:column="32">new_size<pos:position pos:line="29" pos:column="40"/></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>
	<return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">char<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><operator pos:line="31" pos:column="22">)<pos:position pos:line="31" pos:column="23"/></operator><name><name pos:line="31" pos:column="23">lp<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">-&gt;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="27">items<pos:position pos:line="31" pos:column="32"/></name></name> <operator pos:line="31" pos:column="33">+<pos:position pos:line="31" pos:column="34"/></operator> <operator pos:line="31" pos:column="35">(<pos:position pos:line="31" pos:column="36"/></operator><name><name pos:line="31" pos:column="36">lp<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">count<pos:position pos:line="31" pos:column="45"/></name></name><operator pos:line="31" pos:column="45">++<pos:position pos:line="31" pos:column="47"/></operator> <operator pos:line="31" pos:column="48">*<pos:position pos:line="31" pos:column="49"/></operator> <name pos:line="31" pos:column="50">item_size<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">)<pos:position pos:line="31" pos:column="60"/></operator></expr>;<pos:position pos:line="31" pos:column="61"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

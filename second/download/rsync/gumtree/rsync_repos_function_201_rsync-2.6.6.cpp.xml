<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_201_rsync-2.6.6.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">generate_files<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">int<pos:position pos:line="1" pos:column="24"/></name></type> <name pos:line="1" pos:column="25">f_out<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="32">struct<pos:position pos:line="1" pos:column="38"/></name> <name pos:line="1" pos:column="39">file_list<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">flist<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">local_name<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name></type> <name><name pos:line="4" pos:column="14">fbuf<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><name pos:line="4" pos:column="19">MAXPATHLEN<pos:position pos:line="4" pos:column="29"/></name></expr>]<pos:position pos:line="4" pos:column="30"/></index></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">itemizing<pos:position pos:line="5" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">maybe_PERMS_REPORT<pos:position pos:line="5" pos:column="42"/></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">enum<pos:position pos:line="6" pos:column="13"/></name> <name pos:line="6" pos:column="14">logcode<pos:position pos:line="6" pos:column="21"/></name></name></type> <name pos:line="6" pos:column="22">code<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">lull_mod<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><name pos:line="7" pos:column="24">allowed_lull<pos:position pos:line="7" pos:column="36"/></name> <operator pos:line="7" pos:column="37">*<pos:position pos:line="7" pos:column="38"/></operator> <literal type="number" pos:line="7" pos:column="39">5<pos:position pos:line="7" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">need_retouch_dir_times<pos:position pos:line="8" pos:column="35"/></name> <init pos:line="8" pos:column="36">= <expr><name pos:line="8" pos:column="38">preserve_times<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">&amp;&amp;<pos:position pos:line="8" pos:column="63"/></operator> <operator pos:line="8" pos:column="56">!<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="57">omit_dir_times<pos:position pos:line="8" pos:column="71"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="72"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">need_retouch_dir_perms<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><literal type="number" pos:line="9" pos:column="38">0<pos:position pos:line="9" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="40"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">save_only_existing<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><name pos:line="10" pos:column="34">only_existing<pos:position pos:line="10" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">save_opt_ignore_existing<pos:position pos:line="11" pos:column="37"/></name> <init pos:line="11" pos:column="38">= <expr><name pos:line="11" pos:column="40">opt_ignore_existing<pos:position pos:line="11" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="60"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">save_do_progress<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><name pos:line="12" pos:column="32">do_progress<pos:position pos:line="12" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">save_make_backups<pos:position pos:line="13" pos:column="30"/></name> <init pos:line="13" pos:column="31">= <expr><name pos:line="13" pos:column="33">make_backups<pos:position pos:line="13" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>

	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">protocol_version<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">&gt;=<pos:position pos:line="15" pos:column="35"/></operator> <literal type="number" pos:line="15" pos:column="33">29<pos:position pos:line="15" pos:column="35"/></literal></expr>)<pos:position pos:line="15" pos:column="36"/></condition><then pos:line="15" pos:column="36"> <block pos:line="15" pos:column="37">{
		<expr_stmt><expr><name pos:line="16" pos:column="17">itemizing<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">=<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="29">1<pos:position pos:line="16" pos:column="30"/></literal></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="17" pos:column="17">maybe_PERMS_REPORT<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">=<pos:position pos:line="17" pos:column="37"/></operator> <ternary><condition><expr><name pos:line="17" pos:column="38">log_format_has_i<pos:position pos:line="17" pos:column="54"/></name></expr> ?<pos:position pos:line="17" pos:column="56"/></condition><then pos:line="17" pos:column="56"> <expr><literal type="number" pos:line="17" pos:column="57">0<pos:position pos:line="17" pos:column="58"/></literal></expr> <pos:position pos:line="17" pos:column="59"/></then><else pos:line="17" pos:column="59">: <expr><name pos:line="17" pos:column="61">PERMS_REPORT<pos:position pos:line="17" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">code<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="18" pos:column="24">daemon_log_format_has_i<pos:position pos:line="18" pos:column="47"/></name></expr> ?<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49"> <expr><literal type="number" pos:line="18" pos:column="50">0<pos:position pos:line="18" pos:column="51"/></literal></expr> <pos:position pos:line="18" pos:column="52"/></then><else pos:line="18" pos:column="52">: <expr><name pos:line="18" pos:column="54">FLOG<pos:position pos:line="18" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><name pos:line="19" pos:column="20">am_daemon<pos:position pos:line="19" pos:column="29"/></name></expr>)<pos:position pos:line="19" pos:column="30"/></condition><then pos:line="19" pos:column="30"> <block pos:line="19" pos:column="31">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">itemizing<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="29">daemon_log_format_has_i<pos:position pos:line="20" pos:column="52"/></name> <operator pos:line="20" pos:column="53">&amp;&amp;<pos:position pos:line="20" pos:column="63"/></operator> <name pos:line="20" pos:column="56">do_xfers<pos:position pos:line="20" pos:column="64"/></name></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">maybe_PERMS_REPORT<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">=<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="38">PERMS_REPORT<pos:position pos:line="21" pos:column="50"/></name></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">code<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="22" pos:column="24">itemizing<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">||<pos:position pos:line="22" pos:column="36"/></operator> <operator pos:line="22" pos:column="37">!<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="38">do_xfers<pos:position pos:line="22" pos:column="46"/></name></expr> ?<pos:position pos:line="22" pos:column="48"/></condition><then pos:line="22" pos:column="48"> <expr><name pos:line="22" pos:column="49">FCLIENT<pos:position pos:line="22" pos:column="56"/></name></expr> <pos:position pos:line="22" pos:column="57"/></then><else pos:line="22" pos:column="57">: <expr><name pos:line="22" pos:column="59">FINFO<pos:position pos:line="22" pos:column="64"/></name></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if></elseif> <elseif pos:line="23" pos:column="11">else <if pos:line="23" pos:column="16">if <condition pos:line="23" pos:column="19">(<expr><operator pos:line="23" pos:column="20">!<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">am_server<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
		<expr_stmt><expr><name pos:line="24" pos:column="17">itemizing<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">=<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="29">log_format_has_i<pos:position pos:line="24" pos:column="45"/></name></expr>;<pos:position pos:line="24" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="25" pos:column="17">maybe_PERMS_REPORT<pos:position pos:line="25" pos:column="35"/></name> <operator pos:line="25" pos:column="36">=<pos:position pos:line="25" pos:column="37"/></operator> <ternary><condition><expr><name pos:line="25" pos:column="38">log_format_has_i<pos:position pos:line="25" pos:column="54"/></name></expr> ?<pos:position pos:line="25" pos:column="56"/></condition><then pos:line="25" pos:column="56"> <expr><literal type="number" pos:line="25" pos:column="57">0<pos:position pos:line="25" pos:column="58"/></literal></expr> <pos:position pos:line="25" pos:column="59"/></then><else pos:line="25" pos:column="59">: <expr><name pos:line="25" pos:column="61">PERMS_REPORT<pos:position pos:line="25" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="25" pos:column="74"/></expr_stmt>
		<expr_stmt><expr><name pos:line="26" pos:column="17">code<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">=<pos:position pos:line="26" pos:column="23"/></operator> <ternary><condition><expr><name pos:line="26" pos:column="24">itemizing<pos:position pos:line="26" pos:column="33"/></name></expr> ?<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <expr><literal type="number" pos:line="26" pos:column="36">0<pos:position pos:line="26" pos:column="37"/></literal></expr> <pos:position pos:line="26" pos:column="38"/></then><else pos:line="26" pos:column="38">: <expr><name pos:line="26" pos:column="40">FINFO<pos:position pos:line="26" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">itemizing<pos:position pos:line="28" pos:column="26"/></name> <operator pos:line="28" pos:column="27">=<pos:position pos:line="28" pos:column="28"/></operator> <literal type="number" pos:line="28" pos:column="29">0<pos:position pos:line="28" pos:column="30"/></literal></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">maybe_PERMS_REPORT<pos:position pos:line="29" pos:column="35"/></name> <operator pos:line="29" pos:column="36">=<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="38">PERMS_REPORT<pos:position pos:line="29" pos:column="50"/></name></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name pos:line="30" pos:column="17">code<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name pos:line="30" pos:column="24">FINFO<pos:position pos:line="30" pos:column="29"/></name></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></else></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">verbose<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">&gt;<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="23">2<pos:position pos:line="33" pos:column="24"/></literal></expr>)<pos:position pos:line="33" pos:column="25"/></condition><then pos:line="33" pos:column="25"> <block pos:line="33" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">rprintf<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">FINFO<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="32">"generator starting pid=%ld count=%d\n"<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>,
			<argument><expr><operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">long<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">)<pos:position pos:line="35" pos:column="31"/></operator><call><name pos:line="35" pos:column="31">getpid<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">()<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="41">flist<pos:position pos:line="35" pos:column="46"/></name><operator pos:line="35" pos:column="46">-&gt;<pos:position pos:line="35" pos:column="51"/></operator><name pos:line="35" pos:column="48">count<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">delete_before<pos:position pos:line="38" pos:column="26"/></name> <operator pos:line="38" pos:column="27">&amp;&amp;<pos:position pos:line="38" pos:column="37"/></operator> <operator pos:line="38" pos:column="30">!<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">local_name<pos:position pos:line="38" pos:column="41"/></name> <operator pos:line="38" pos:column="42">&amp;&amp;<pos:position pos:line="38" pos:column="52"/></operator> <name><name pos:line="38" pos:column="45">flist<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">-&gt;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="52">count<pos:position pos:line="38" pos:column="57"/></name></name> <operator pos:line="38" pos:column="58">&gt;<pos:position pos:line="38" pos:column="62"/></operator> <literal type="number" pos:line="38" pos:column="60">0<pos:position pos:line="38" pos:column="61"/></literal></expr>)<pos:position pos:line="38" pos:column="62"/></condition><then pos:line="38" pos:column="62">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">do_delete_pass<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">flist<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="40" pos:column="9">do_progress<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <literal type="number" pos:line="40" pos:column="23">0<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>

	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">whole_file<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">&lt;<pos:position pos:line="42" pos:column="28"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="17">whole_file<pos:position pos:line="43" pos:column="27"/></name> <operator pos:line="43" pos:column="28">=<pos:position pos:line="43" pos:column="29"/></operator> <literal type="number" pos:line="43" pos:column="30">0<pos:position pos:line="43" pos:column="31"/></literal></expr>;<pos:position pos:line="43" pos:column="32"/></expr_stmt></block></then></if>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">verbose<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">&gt;=<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="24">2<pos:position pos:line="44" pos:column="25"/></literal></expr>)<pos:position pos:line="44" pos:column="26"/></condition><then pos:line="44" pos:column="26"> <block pos:line="44" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="45" pos:column="17">rprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">FINFO<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="32">"delta-transmission %s\n"<pos:position pos:line="45" pos:column="57"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="46" pos:column="25">whole_file<pos:position pos:line="46" pos:column="35"/></name></expr>
			?<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <expr><literal type="string" pos:line="47" pos:column="27">"disabled for local transfer or --whole-file"<pos:position pos:line="47" pos:column="72"/></literal></expr>
			<pos:position pos:line="48" pos:column="4"/></then><else pos:line="48" pos:column="25">: <expr><literal type="string" pos:line="48" pos:column="27">"enabled"<pos:position pos:line="48" pos:column="36"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="51" pos:column="9">/* Since we often fill up the outgoing socket and then just sit around
	 * waiting for the other 2 processes to do their thing, we don't want
	 * to exit on a timeout.  If the data stops flowing, the receiver will
	 * notice that and let us know via the redo pipe (or its closing). */</comment>
	<expr_stmt><expr><name pos:line="55" pos:column="9">ignore_timeout<pos:position pos:line="55" pos:column="23"/></name> <operator pos:line="55" pos:column="24">=<pos:position pos:line="55" pos:column="25"/></operator> <literal type="number" pos:line="55" pos:column="26">1<pos:position pos:line="55" pos:column="27"/></literal></expr>;<pos:position pos:line="55" pos:column="28"/></expr_stmt>

	<for pos:line="57" pos:column="9">for <control pos:line="57" pos:column="13">(<init><expr><name pos:line="57" pos:column="14">i<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr>;<pos:position pos:line="57" pos:column="20"/></init> <condition><expr><name pos:line="57" pos:column="21">i<pos:position pos:line="57" pos:column="22"/></name> <operator pos:line="57" pos:column="23">&lt;<pos:position pos:line="57" pos:column="27"/></operator> <name><name pos:line="57" pos:column="25">flist<pos:position pos:line="57" pos:column="30"/></name><operator pos:line="57" pos:column="30">-&gt;<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="32">count<pos:position pos:line="57" pos:column="37"/></name></name></expr>;<pos:position pos:line="57" pos:column="38"/></condition> <incr><expr><name pos:line="57" pos:column="39">i<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">++<pos:position pos:line="57" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="57" pos:column="43"/></control> <block pos:line="57" pos:column="44">{
		<decl_stmt><decl><type><name><name pos:line="58" pos:column="17">struct<pos:position pos:line="58" pos:column="23"/></name> <name pos:line="58" pos:column="24">file_struct<pos:position pos:line="58" pos:column="35"/></name></name> <modifier pos:line="58" pos:column="36">*<pos:position pos:line="58" pos:column="37"/></modifier></type><name pos:line="58" pos:column="37">file<pos:position pos:line="58" pos:column="41"/></name> <init pos:line="58" pos:column="42">= <expr><name><name pos:line="58" pos:column="44">flist<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">files<pos:position pos:line="58" pos:column="56"/></name><index pos:line="58" pos:column="56">[<expr><name pos:line="58" pos:column="57">i<pos:position pos:line="58" pos:column="58"/></name></expr>]<pos:position pos:line="58" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="58" pos:column="60"/></decl_stmt>

		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">!<pos:position pos:line="60" pos:column="22"/></operator><name><name pos:line="60" pos:column="22">file<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">-&gt;<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="28">basename<pos:position pos:line="60" pos:column="36"/></name></name></expr>)<pos:position pos:line="60" pos:column="37"/></condition><then pos:line="60" pos:column="37">
			<block type="pseudo"><continue pos:line="61" pos:column="25">continue;<pos:position pos:line="61" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="63" pos:column="17">recv_generator<pos:position pos:line="63" pos:column="31"/></name><argument_list pos:line="63" pos:column="31">(<argument><expr><ternary><condition><expr><name pos:line="63" pos:column="32">local_name<pos:position pos:line="63" pos:column="42"/></name></expr> ?<pos:position pos:line="63" pos:column="44"/></condition><then pos:line="63" pos:column="44"> <expr><name pos:line="63" pos:column="45">local_name<pos:position pos:line="63" pos:column="55"/></name></expr> <pos:position pos:line="63" pos:column="56"/></then><else pos:line="63" pos:column="56">: <expr><call><name pos:line="63" pos:column="58">f_name_to<pos:position pos:line="63" pos:column="67"/></name><argument_list pos:line="63" pos:column="67">(<argument><expr><name pos:line="63" pos:column="68">file<pos:position pos:line="63" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="74">fbuf<pos:position pos:line="63" pos:column="78"/></name></expr></argument>)<pos:position pos:line="63" pos:column="79"/></argument_list></call></expr></else></ternary></expr></argument>,
			       <argument><expr><name pos:line="64" pos:column="32">file<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="38">i<pos:position pos:line="64" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="41">itemizing<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">maybe_PERMS_REPORT<pos:position pos:line="64" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="72">code<pos:position pos:line="64" pos:column="76"/></name></expr></argument>,
			       <argument><expr><name pos:line="65" pos:column="32">f_out<pos:position pos:line="65" pos:column="37"/></name></expr></argument>)<pos:position pos:line="65" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="39"/></expr_stmt>

		<comment type="block" pos:line="67" pos:column="17">/* We need to ensure that any dirs we create have writeable
		 * permissions during the time we are putting files within
		 * them.  This is then fixed after the transfer is done. */</comment>
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="22">am_root<pos:position pos:line="70" pos:column="29"/></name> <operator pos:line="70" pos:column="30">&amp;&amp;<pos:position pos:line="70" pos:column="40"/></operator> <call><name pos:line="70" pos:column="33">S_ISDIR<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><name><name pos:line="70" pos:column="41">file<pos:position pos:line="70" pos:column="45"/></name><operator pos:line="70" pos:column="45">-&gt;<pos:position pos:line="70" pos:column="50"/></operator><name pos:line="70" pos:column="47">mode<pos:position pos:line="70" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="52"/></argument_list></call> <operator pos:line="70" pos:column="53">&amp;&amp;<pos:position pos:line="70" pos:column="63"/></operator> <operator pos:line="70" pos:column="56">!<pos:position pos:line="70" pos:column="57"/></operator><operator pos:line="70" pos:column="57">(<pos:position pos:line="70" pos:column="58"/></operator><name><name pos:line="70" pos:column="58">file<pos:position pos:line="70" pos:column="62"/></name><operator pos:line="70" pos:column="62">-&gt;<pos:position pos:line="70" pos:column="67"/></operator><name pos:line="70" pos:column="64">mode<pos:position pos:line="70" pos:column="68"/></name></name> <operator pos:line="70" pos:column="69">&amp;<pos:position pos:line="70" pos:column="74"/></operator> <name pos:line="70" pos:column="71">S_IWUSR<pos:position pos:line="70" pos:column="78"/></name><operator pos:line="70" pos:column="78">)<pos:position pos:line="70" pos:column="79"/></operator>
		    <operator pos:line="71" pos:column="21">&amp;&amp;<pos:position pos:line="71" pos:column="31"/></operator> <operator pos:line="71" pos:column="24">!<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="25">list_only<pos:position pos:line="71" pos:column="34"/></name></expr>)<pos:position pos:line="71" pos:column="35"/></condition><then pos:line="71" pos:column="35"> <block pos:line="71" pos:column="36">{
			<decl_stmt><decl><type><name pos:line="72" pos:column="25">int<pos:position pos:line="72" pos:column="28"/></name></type> <name pos:line="72" pos:column="29">mode<pos:position pos:line="72" pos:column="33"/></name> <init pos:line="72" pos:column="34">= <expr><name><name pos:line="72" pos:column="36">file<pos:position pos:line="72" pos:column="40"/></name><operator pos:line="72" pos:column="40">-&gt;<pos:position pos:line="72" pos:column="45"/></operator><name pos:line="72" pos:column="42">mode<pos:position pos:line="72" pos:column="46"/></name></name> <operator pos:line="72" pos:column="47">|<pos:position pos:line="72" pos:column="48"/></operator> <name pos:line="72" pos:column="49">S_IWUSR<pos:position pos:line="72" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="72" pos:column="57"/></decl_stmt> <comment type="block" pos:line="72" pos:column="58">/* user write */</comment>
			<decl_stmt><decl><type><name pos:line="73" pos:column="25">char<pos:position pos:line="73" pos:column="29"/></name> <modifier pos:line="73" pos:column="30">*<pos:position pos:line="73" pos:column="31"/></modifier></type><name pos:line="73" pos:column="31">fname<pos:position pos:line="73" pos:column="36"/></name> <init pos:line="73" pos:column="37">= <expr><ternary><condition><expr><name pos:line="73" pos:column="39">local_name<pos:position pos:line="73" pos:column="49"/></name></expr> ?<pos:position pos:line="73" pos:column="51"/></condition><then pos:line="73" pos:column="51"> <expr><name pos:line="73" pos:column="52">local_name<pos:position pos:line="73" pos:column="62"/></name></expr> <pos:position pos:line="73" pos:column="63"/></then><else pos:line="73" pos:column="63">: <expr><name pos:line="73" pos:column="65">fbuf<pos:position pos:line="73" pos:column="69"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="73" pos:column="70"/></decl_stmt>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><call><name pos:line="74" pos:column="29">do_chmod<pos:position pos:line="74" pos:column="37"/></name><argument_list pos:line="74" pos:column="37">(<argument><expr><name pos:line="74" pos:column="38">fname<pos:position pos:line="74" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="45">mode<pos:position pos:line="74" pos:column="49"/></name> <operator pos:line="74" pos:column="50">&amp;<pos:position pos:line="74" pos:column="55"/></operator> <name pos:line="74" pos:column="52">CHMOD_BITS<pos:position pos:line="74" pos:column="62"/></name></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call> <operator pos:line="74" pos:column="64">&lt;<pos:position pos:line="74" pos:column="68"/></operator> <literal type="number" pos:line="74" pos:column="66">0<pos:position pos:line="74" pos:column="67"/></literal></expr>)<pos:position pos:line="74" pos:column="68"/></condition><then pos:line="74" pos:column="68"> <block pos:line="74" pos:column="69">{
				<expr_stmt><expr><call><name pos:line="75" pos:column="33">rsyserr<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">(<argument><expr><name pos:line="75" pos:column="41">FERROR<pos:position pos:line="75" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="49">errno<pos:position pos:line="75" pos:column="54"/></name></expr></argument>,
					<argument><expr><literal type="string" pos:line="76" pos:column="41">"failed to modify permissions on %s"<pos:position pos:line="76" pos:column="77"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="77" pos:column="41">full_fname<pos:position pos:line="77" pos:column="51"/></name><argument_list pos:line="77" pos:column="51">(<argument><expr><name pos:line="77" pos:column="52">fname<pos:position pos:line="77" pos:column="57"/></name></expr></argument>)<pos:position pos:line="77" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="60"/></expr_stmt>
			}<pos:position pos:line="78" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="79" pos:column="25">need_retouch_dir_perms<pos:position pos:line="79" pos:column="47"/></name> <operator pos:line="79" pos:column="48">=<pos:position pos:line="79" pos:column="49"/></operator> <literal type="number" pos:line="79" pos:column="50">1<pos:position pos:line="79" pos:column="51"/></literal></expr>;<pos:position pos:line="79" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">preserve_hard_links<pos:position pos:line="82" pos:column="40"/></name></expr>)<pos:position pos:line="82" pos:column="41"/></condition><then pos:line="82" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="25">check_for_finished_hlinks<pos:position pos:line="83" pos:column="50"/></name><argument_list pos:line="83" pos:column="50">(<argument><expr><name pos:line="83" pos:column="51">itemizing<pos:position pos:line="83" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="62">code<pos:position pos:line="83" pos:column="66"/></name></expr></argument>)<pos:position pos:line="83" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="68"/></expr_stmt></block></then></if>

		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name pos:line="85" pos:column="21">allowed_lull<pos:position pos:line="85" pos:column="33"/></name> <operator pos:line="85" pos:column="34">&amp;&amp;<pos:position pos:line="85" pos:column="44"/></operator> <operator pos:line="85" pos:column="37">!<pos:position pos:line="85" pos:column="38"/></operator><operator pos:line="85" pos:column="38">(<pos:position pos:line="85" pos:column="39"/></operator><name pos:line="85" pos:column="39">i<pos:position pos:line="85" pos:column="40"/></name> <operator pos:line="85" pos:column="41">%<pos:position pos:line="85" pos:column="42"/></operator> <name pos:line="85" pos:column="43">lull_mod<pos:position pos:line="85" pos:column="51"/></name><operator pos:line="85" pos:column="51">)<pos:position pos:line="85" pos:column="52"/></operator></expr>)<pos:position pos:line="85" pos:column="53"/></condition><then pos:line="85" pos:column="53">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="25">maybe_send_keepalive<pos:position pos:line="86" pos:column="45"/></name><argument_list pos:line="86" pos:column="45">()<pos:position pos:line="86" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="48"/></expr_stmt></block></then>
		<elseif pos:line="87" pos:column="17">else <if pos:line="87" pos:column="22">if <condition pos:line="87" pos:column="25">(<expr><operator pos:line="87" pos:column="26">!<pos:position pos:line="87" pos:column="27"/></operator><operator pos:line="87" pos:column="27">(<pos:position pos:line="87" pos:column="28"/></operator><name pos:line="87" pos:column="28">i<pos:position pos:line="87" pos:column="29"/></name> <operator pos:line="87" pos:column="30">%<pos:position pos:line="87" pos:column="31"/></operator> <literal type="number" pos:line="87" pos:column="32">200<pos:position pos:line="87" pos:column="35"/></literal><operator pos:line="87" pos:column="35">)<pos:position pos:line="87" pos:column="36"/></operator></expr>)<pos:position pos:line="87" pos:column="37"/></condition><then pos:line="87" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="88" pos:column="25">maybe_flush_socket<pos:position pos:line="88" pos:column="43"/></name><argument_list pos:line="88" pos:column="43">()<pos:position pos:line="88" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="46"/></expr_stmt></block></then></if></elseif></if>
	}<pos:position pos:line="89" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="90" pos:column="9">recv_generator<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><name pos:line="90" pos:column="24">NULL<pos:position pos:line="90" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="30">NULL<pos:position pos:line="90" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="36">0<pos:position pos:line="90" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="39">0<pos:position pos:line="90" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="42">0<pos:position pos:line="90" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="45">code<pos:position pos:line="90" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="51">-<pos:position pos:line="90" pos:column="52"/></operator><literal type="number" pos:line="90" pos:column="52">1<pos:position pos:line="90" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="55"/></expr_stmt>
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">delete_during<pos:position pos:line="91" pos:column="26"/></name></expr>)<pos:position pos:line="91" pos:column="27"/></condition><then pos:line="91" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="17">delete_in_dir<pos:position pos:line="92" pos:column="30"/></name><argument_list pos:line="92" pos:column="30">(<argument><expr><name pos:line="92" pos:column="31">NULL<pos:position pos:line="92" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="37">NULL<pos:position pos:line="92" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="43">NULL<pos:position pos:line="92" pos:column="47"/></name></expr></argument>)<pos:position pos:line="92" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="49"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="94" pos:column="9">phase<pos:position pos:line="94" pos:column="14"/></name><operator pos:line="94" pos:column="14">++<pos:position pos:line="94" pos:column="16"/></operator></expr>;<pos:position pos:line="94" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="95" pos:column="9">csum_length<pos:position pos:line="95" pos:column="20"/></name> <operator pos:line="95" pos:column="21">=<pos:position pos:line="95" pos:column="22"/></operator> <name pos:line="95" pos:column="23">SUM_LENGTH<pos:position pos:line="95" pos:column="33"/></name></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="96" pos:column="9">only_existing<pos:position pos:line="96" pos:column="22"/></name> <operator pos:line="96" pos:column="23">=<pos:position pos:line="96" pos:column="24"/></operator> <name pos:line="96" pos:column="25">max_size<pos:position pos:line="96" pos:column="33"/></name> <operator pos:line="96" pos:column="34">=<pos:position pos:line="96" pos:column="35"/></operator> <name pos:line="96" pos:column="36">opt_ignore_existing<pos:position pos:line="96" pos:column="55"/></name> <operator pos:line="96" pos:column="56">=<pos:position pos:line="96" pos:column="57"/></operator> <literal type="number" pos:line="96" pos:column="58">0<pos:position pos:line="96" pos:column="59"/></literal></expr>;<pos:position pos:line="96" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name pos:line="97" pos:column="9">update_only<pos:position pos:line="97" pos:column="20"/></name> <operator pos:line="97" pos:column="21">=<pos:position pos:line="97" pos:column="22"/></operator> <name pos:line="97" pos:column="23">always_checksum<pos:position pos:line="97" pos:column="38"/></name> <operator pos:line="97" pos:column="39">=<pos:position pos:line="97" pos:column="40"/></operator> <name pos:line="97" pos:column="41">size_only<pos:position pos:line="97" pos:column="50"/></name> <operator pos:line="97" pos:column="51">=<pos:position pos:line="97" pos:column="52"/></operator> <literal type="number" pos:line="97" pos:column="53">0<pos:position pos:line="97" pos:column="54"/></literal></expr>;<pos:position pos:line="97" pos:column="55"/></expr_stmt>
	<expr_stmt><expr><name pos:line="98" pos:column="9">ignore_times<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">=<pos:position pos:line="98" pos:column="23"/></operator> <literal type="number" pos:line="98" pos:column="24">1<pos:position pos:line="98" pos:column="25"/></literal></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><name pos:line="99" pos:column="9">make_backups<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <literal type="number" pos:line="99" pos:column="24">0<pos:position pos:line="99" pos:column="25"/></literal></expr>;<pos:position pos:line="99" pos:column="26"/></expr_stmt> <comment type="block" pos:line="99" pos:column="27">/* avoid a duplicate backup for inplace processing */</comment>

	<if pos:line="101" pos:column="9">if <condition pos:line="101" pos:column="12">(<expr><name pos:line="101" pos:column="13">verbose<pos:position pos:line="101" pos:column="20"/></name> <operator pos:line="101" pos:column="21">&gt;<pos:position pos:line="101" pos:column="25"/></operator> <literal type="number" pos:line="101" pos:column="23">2<pos:position pos:line="101" pos:column="24"/></literal></expr>)<pos:position pos:line="101" pos:column="25"/></condition><then pos:line="101" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="102" pos:column="17">rprintf<pos:position pos:line="102" pos:column="24"/></name><argument_list pos:line="102" pos:column="24">(<argument><expr><name pos:line="102" pos:column="25">FINFO<pos:position pos:line="102" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="102" pos:column="31">"generate_files phase=%d\n"<pos:position pos:line="102" pos:column="58"/></literal></expr></argument>,<argument><expr><name pos:line="102" pos:column="59">phase<pos:position pos:line="102" pos:column="64"/></name></expr></argument>)<pos:position pos:line="102" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="66"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="104" pos:column="9">write_int<pos:position pos:line="104" pos:column="18"/></name><argument_list pos:line="104" pos:column="18">(<argument><expr><name pos:line="104" pos:column="19">f_out<pos:position pos:line="104" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="26">-<pos:position pos:line="104" pos:column="27"/></operator><literal type="number" pos:line="104" pos:column="27">1<pos:position pos:line="104" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="30"/></expr_stmt>

	<comment type="block" pos:line="106" pos:column="9">/* files can cycle through the system more than once
	 * to catch initial checksum errors */</comment>
	<while pos:line="108" pos:column="9">while <condition pos:line="108" pos:column="15">(<expr><operator pos:line="108" pos:column="16">(<pos:position pos:line="108" pos:column="17"/></operator><name pos:line="108" pos:column="17">i<pos:position pos:line="108" pos:column="18"/></name> <operator pos:line="108" pos:column="19">=<pos:position pos:line="108" pos:column="20"/></operator> <call><name pos:line="108" pos:column="21">get_redo_num<pos:position pos:line="108" pos:column="33"/></name><argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">itemizing<pos:position pos:line="108" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="108" pos:column="45">code<pos:position pos:line="108" pos:column="49"/></name></expr></argument>)<pos:position pos:line="108" pos:column="50"/></argument_list></call><operator pos:line="108" pos:column="50">)<pos:position pos:line="108" pos:column="51"/></operator> <operator pos:line="108" pos:column="52">!=<pos:position pos:line="108" pos:column="54"/></operator> <operator pos:line="108" pos:column="55">-<pos:position pos:line="108" pos:column="56"/></operator><literal type="number" pos:line="108" pos:column="56">1<pos:position pos:line="108" pos:column="57"/></literal></expr>)<pos:position pos:line="108" pos:column="58"/></condition> <block pos:line="108" pos:column="59">{
		<decl_stmt><decl><type><name><name pos:line="109" pos:column="17">struct<pos:position pos:line="109" pos:column="23"/></name> <name pos:line="109" pos:column="24">file_struct<pos:position pos:line="109" pos:column="35"/></name></name> <modifier pos:line="109" pos:column="36">*<pos:position pos:line="109" pos:column="37"/></modifier></type><name pos:line="109" pos:column="37">file<pos:position pos:line="109" pos:column="41"/></name> <init pos:line="109" pos:column="42">= <expr><name><name pos:line="109" pos:column="44">flist<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">-&gt;<pos:position pos:line="109" pos:column="54"/></operator><name pos:line="109" pos:column="51">files<pos:position pos:line="109" pos:column="56"/></name><index pos:line="109" pos:column="56">[<expr><name pos:line="109" pos:column="57">i<pos:position pos:line="109" pos:column="58"/></name></expr>]<pos:position pos:line="109" pos:column="59"/></index></name></expr></init></decl>;<pos:position pos:line="109" pos:column="60"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="110" pos:column="17">recv_generator<pos:position pos:line="110" pos:column="31"/></name><argument_list pos:line="110" pos:column="31">(<argument><expr><ternary><condition><expr><name pos:line="110" pos:column="32">local_name<pos:position pos:line="110" pos:column="42"/></name></expr> ?<pos:position pos:line="110" pos:column="44"/></condition><then pos:line="110" pos:column="44"> <expr><name pos:line="110" pos:column="45">local_name<pos:position pos:line="110" pos:column="55"/></name></expr> <pos:position pos:line="110" pos:column="56"/></then><else pos:line="110" pos:column="56">: <expr><call><name pos:line="110" pos:column="58">f_name_to<pos:position pos:line="110" pos:column="67"/></name><argument_list pos:line="110" pos:column="67">(<argument><expr><name pos:line="110" pos:column="68">file<pos:position pos:line="110" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="74">fbuf<pos:position pos:line="110" pos:column="78"/></name></expr></argument>)<pos:position pos:line="110" pos:column="79"/></argument_list></call></expr></else></ternary></expr></argument>,
			       <argument><expr><name pos:line="111" pos:column="32">file<pos:position pos:line="111" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="38">i<pos:position pos:line="111" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="41">itemizing<pos:position pos:line="111" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="52">maybe_PERMS_REPORT<pos:position pos:line="111" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="72">code<pos:position pos:line="111" pos:column="76"/></name></expr></argument>,
			       <argument><expr><name pos:line="112" pos:column="32">f_out<pos:position pos:line="112" pos:column="37"/></name></expr></argument>)<pos:position pos:line="112" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="113" pos:column="10"/></block></while>

	<expr_stmt><expr><name pos:line="115" pos:column="9">phase<pos:position pos:line="115" pos:column="14"/></name><operator pos:line="115" pos:column="14">++<pos:position pos:line="115" pos:column="16"/></operator></expr>;<pos:position pos:line="115" pos:column="17"/></expr_stmt>
	<expr_stmt><expr><name pos:line="116" pos:column="9">only_existing<pos:position pos:line="116" pos:column="22"/></name> <operator pos:line="116" pos:column="23">=<pos:position pos:line="116" pos:column="24"/></operator> <name pos:line="116" pos:column="25">save_only_existing<pos:position pos:line="116" pos:column="43"/></name></expr>;<pos:position pos:line="116" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="117" pos:column="9">opt_ignore_existing<pos:position pos:line="117" pos:column="28"/></name> <operator pos:line="117" pos:column="29">=<pos:position pos:line="117" pos:column="30"/></operator> <name pos:line="117" pos:column="31">save_opt_ignore_existing<pos:position pos:line="117" pos:column="55"/></name></expr>;<pos:position pos:line="117" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><name pos:line="118" pos:column="9">make_backups<pos:position pos:line="118" pos:column="21"/></name> <operator pos:line="118" pos:column="22">=<pos:position pos:line="118" pos:column="23"/></operator> <name pos:line="118" pos:column="24">save_make_backups<pos:position pos:line="118" pos:column="41"/></name></expr>;<pos:position pos:line="118" pos:column="42"/></expr_stmt>

	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">verbose<pos:position pos:line="120" pos:column="20"/></name> <operator pos:line="120" pos:column="21">&gt;<pos:position pos:line="120" pos:column="25"/></operator> <literal type="number" pos:line="120" pos:column="23">2<pos:position pos:line="120" pos:column="24"/></literal></expr>)<pos:position pos:line="120" pos:column="25"/></condition><then pos:line="120" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="121" pos:column="17">rprintf<pos:position pos:line="121" pos:column="24"/></name><argument_list pos:line="121" pos:column="24">(<argument><expr><name pos:line="121" pos:column="25">FINFO<pos:position pos:line="121" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="121" pos:column="31">"generate_files phase=%d\n"<pos:position pos:line="121" pos:column="58"/></literal></expr></argument>,<argument><expr><name pos:line="121" pos:column="59">phase<pos:position pos:line="121" pos:column="64"/></name></expr></argument>)<pos:position pos:line="121" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="66"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="123" pos:column="9">write_int<pos:position pos:line="123" pos:column="18"/></name><argument_list pos:line="123" pos:column="18">(<argument><expr><name pos:line="123" pos:column="19">f_out<pos:position pos:line="123" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="123" pos:column="26">-<pos:position pos:line="123" pos:column="27"/></operator><literal type="number" pos:line="123" pos:column="27">1<pos:position pos:line="123" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="30"/></expr_stmt>
	<comment type="block" pos:line="124" pos:column="9">/* Reduce round-trip lag-time for a useless delay-updates phase. */</comment>
	<if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><name pos:line="125" pos:column="13">protocol_version<pos:position pos:line="125" pos:column="29"/></name> <operator pos:line="125" pos:column="30">&gt;=<pos:position pos:line="125" pos:column="35"/></operator> <literal type="number" pos:line="125" pos:column="33">29<pos:position pos:line="125" pos:column="35"/></literal> <operator pos:line="125" pos:column="36">&amp;&amp;<pos:position pos:line="125" pos:column="46"/></operator> <operator pos:line="125" pos:column="39">!<pos:position pos:line="125" pos:column="40"/></operator><name pos:line="125" pos:column="40">delay_updates<pos:position pos:line="125" pos:column="53"/></name></expr>)<pos:position pos:line="125" pos:column="54"/></condition><then pos:line="125" pos:column="54">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="17">write_int<pos:position pos:line="126" pos:column="26"/></name><argument_list pos:line="126" pos:column="26">(<argument><expr><name pos:line="126" pos:column="27">f_out<pos:position pos:line="126" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="34">-<pos:position pos:line="126" pos:column="35"/></operator><literal type="number" pos:line="126" pos:column="35">1<pos:position pos:line="126" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="38"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="128" pos:column="9">/* Read MSG_DONE for the redo phase (and any prior messages). */</comment>
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">get_redo_num<pos:position pos:line="129" pos:column="21"/></name><argument_list pos:line="129" pos:column="21">(<argument><expr><name pos:line="129" pos:column="22">itemizing<pos:position pos:line="129" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="33">code<pos:position pos:line="129" pos:column="37"/></name></expr></argument>)<pos:position pos:line="129" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="39"/></expr_stmt>

	<if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name pos:line="131" pos:column="13">protocol_version<pos:position pos:line="131" pos:column="29"/></name> <operator pos:line="131" pos:column="30">&gt;=<pos:position pos:line="131" pos:column="35"/></operator> <literal type="number" pos:line="131" pos:column="33">29<pos:position pos:line="131" pos:column="35"/></literal></expr>)<pos:position pos:line="131" pos:column="36"/></condition><then pos:line="131" pos:column="36"> <block pos:line="131" pos:column="37">{
		<expr_stmt><expr><name pos:line="132" pos:column="17">phase<pos:position pos:line="132" pos:column="22"/></name><operator pos:line="132" pos:column="22">++<pos:position pos:line="132" pos:column="24"/></operator></expr>;<pos:position pos:line="132" pos:column="25"/></expr_stmt>
		<if pos:line="133" pos:column="17">if <condition pos:line="133" pos:column="20">(<expr><name pos:line="133" pos:column="21">verbose<pos:position pos:line="133" pos:column="28"/></name> <operator pos:line="133" pos:column="29">&gt;<pos:position pos:line="133" pos:column="33"/></operator> <literal type="number" pos:line="133" pos:column="31">2<pos:position pos:line="133" pos:column="32"/></literal></expr>)<pos:position pos:line="133" pos:column="33"/></condition><then pos:line="133" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="25">rprintf<pos:position pos:line="134" pos:column="32"/></name><argument_list pos:line="134" pos:column="32">(<argument><expr><name pos:line="134" pos:column="33">FINFO<pos:position pos:line="134" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="40">"generate_files phase=%d\n"<pos:position pos:line="134" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="69">phase<pos:position pos:line="134" pos:column="74"/></name></expr></argument>)<pos:position pos:line="134" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="76"/></expr_stmt></block></then></if>
		<if pos:line="135" pos:column="17">if <condition pos:line="135" pos:column="20">(<expr><name pos:line="135" pos:column="21">delay_updates<pos:position pos:line="135" pos:column="34"/></name></expr>)<pos:position pos:line="135" pos:column="35"/></condition><then pos:line="135" pos:column="35">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="25">write_int<pos:position pos:line="136" pos:column="34"/></name><argument_list pos:line="136" pos:column="34">(<argument><expr><name pos:line="136" pos:column="35">f_out<pos:position pos:line="136" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="42">-<pos:position pos:line="136" pos:column="43"/></operator><literal type="number" pos:line="136" pos:column="43">1<pos:position pos:line="136" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="46"/></expr_stmt></block></then></if>
		<comment type="block" pos:line="137" pos:column="17">/* Read MSG_DONE for delay-updates phase &amp; prior messages. */</comment>
		<expr_stmt><expr><call><name pos:line="138" pos:column="17">get_redo_num<pos:position pos:line="138" pos:column="29"/></name><argument_list pos:line="138" pos:column="29">(<argument><expr><name pos:line="138" pos:column="30">itemizing<pos:position pos:line="138" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="138" pos:column="41">code<pos:position pos:line="138" pos:column="45"/></name></expr></argument>)<pos:position pos:line="138" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="47"/></expr_stmt>
	}<pos:position pos:line="139" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="141" pos:column="9">do_progress<pos:position pos:line="141" pos:column="20"/></name> <operator pos:line="141" pos:column="21">=<pos:position pos:line="141" pos:column="22"/></operator> <name pos:line="141" pos:column="23">save_do_progress<pos:position pos:line="141" pos:column="39"/></name></expr>;<pos:position pos:line="141" pos:column="40"/></expr_stmt>
	<if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><name pos:line="142" pos:column="13">delete_after<pos:position pos:line="142" pos:column="25"/></name> <operator pos:line="142" pos:column="26">&amp;&amp;<pos:position pos:line="142" pos:column="36"/></operator> <operator pos:line="142" pos:column="29">!<pos:position pos:line="142" pos:column="30"/></operator><name pos:line="142" pos:column="30">local_name<pos:position pos:line="142" pos:column="40"/></name> <operator pos:line="142" pos:column="41">&amp;&amp;<pos:position pos:line="142" pos:column="51"/></operator> <name><name pos:line="142" pos:column="44">flist<pos:position pos:line="142" pos:column="49"/></name><operator pos:line="142" pos:column="49">-&gt;<pos:position pos:line="142" pos:column="54"/></operator><name pos:line="142" pos:column="51">count<pos:position pos:line="142" pos:column="56"/></name></name> <operator pos:line="142" pos:column="57">&gt;<pos:position pos:line="142" pos:column="61"/></operator> <literal type="number" pos:line="142" pos:column="59">0<pos:position pos:line="142" pos:column="60"/></literal></expr>)<pos:position pos:line="142" pos:column="61"/></condition><then pos:line="142" pos:column="61">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="17">do_delete_pass<pos:position pos:line="143" pos:column="31"/></name><argument_list pos:line="143" pos:column="31">(<argument><expr><name pos:line="143" pos:column="32">flist<pos:position pos:line="143" pos:column="37"/></name></expr></argument>)<pos:position pos:line="143" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="39"/></expr_stmt></block></then></if>

	<if pos:line="145" pos:column="9">if <condition pos:line="145" pos:column="12">(<expr><operator pos:line="145" pos:column="13">(<pos:position pos:line="145" pos:column="14"/></operator><name pos:line="145" pos:column="14">need_retouch_dir_perms<pos:position pos:line="145" pos:column="36"/></name> <operator pos:line="145" pos:column="37">||<pos:position pos:line="145" pos:column="39"/></operator> <name pos:line="145" pos:column="40">need_retouch_dir_times<pos:position pos:line="145" pos:column="62"/></name><operator pos:line="145" pos:column="62">)<pos:position pos:line="145" pos:column="63"/></operator>
	    <operator pos:line="146" pos:column="13">&amp;&amp;<pos:position pos:line="146" pos:column="23"/></operator> <operator pos:line="146" pos:column="16">!<pos:position pos:line="146" pos:column="17"/></operator><name pos:line="146" pos:column="17">list_only<pos:position pos:line="146" pos:column="26"/></name> <operator pos:line="146" pos:column="27">&amp;&amp;<pos:position pos:line="146" pos:column="37"/></operator> <operator pos:line="146" pos:column="30">!<pos:position pos:line="146" pos:column="31"/></operator><name pos:line="146" pos:column="31">local_name<pos:position pos:line="146" pos:column="41"/></name> <operator pos:line="146" pos:column="42">&amp;&amp;<pos:position pos:line="146" pos:column="52"/></operator> <operator pos:line="146" pos:column="45">!<pos:position pos:line="146" pos:column="46"/></operator><name pos:line="146" pos:column="46">dry_run<pos:position pos:line="146" pos:column="53"/></name></expr>)<pos:position pos:line="146" pos:column="54"/></condition><then pos:line="146" pos:column="54"> <block pos:line="146" pos:column="55">{
		<decl_stmt><decl><type><name pos:line="147" pos:column="17">int<pos:position pos:line="147" pos:column="20"/></name></type> <name pos:line="147" pos:column="21">j<pos:position pos:line="147" pos:column="22"/></name> <init pos:line="147" pos:column="23">= <expr><literal type="number" pos:line="147" pos:column="25">0<pos:position pos:line="147" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="147" pos:column="27"/></decl_stmt>
		<comment type="block" pos:line="148" pos:column="17">/* Now we need to fix any directory permissions that were
		 * modified during the transfer and/or re-set any tweaked
		 * modified-time values. */</comment>
		<for pos:line="151" pos:column="17">for <control pos:line="151" pos:column="21">(<init><expr><name pos:line="151" pos:column="22">i<pos:position pos:line="151" pos:column="23"/></name> <operator pos:line="151" pos:column="24">=<pos:position pos:line="151" pos:column="25"/></operator> <literal type="number" pos:line="151" pos:column="26">0<pos:position pos:line="151" pos:column="27"/></literal></expr>;<pos:position pos:line="151" pos:column="28"/></init> <condition><expr><name pos:line="151" pos:column="29">i<pos:position pos:line="151" pos:column="30"/></name> <operator pos:line="151" pos:column="31">&lt;<pos:position pos:line="151" pos:column="35"/></operator> <name><name pos:line="151" pos:column="33">flist<pos:position pos:line="151" pos:column="38"/></name><operator pos:line="151" pos:column="38">-&gt;<pos:position pos:line="151" pos:column="43"/></operator><name pos:line="151" pos:column="40">count<pos:position pos:line="151" pos:column="45"/></name></name></expr>;<pos:position pos:line="151" pos:column="46"/></condition> <incr><expr><name pos:line="151" pos:column="47">i<pos:position pos:line="151" pos:column="48"/></name><operator pos:line="151" pos:column="48">++<pos:position pos:line="151" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="151" pos:column="51"/></control> <block pos:line="151" pos:column="52">{
			<decl_stmt><decl><type><name><name pos:line="152" pos:column="25">struct<pos:position pos:line="152" pos:column="31"/></name> <name pos:line="152" pos:column="32">file_struct<pos:position pos:line="152" pos:column="43"/></name></name> <modifier pos:line="152" pos:column="44">*<pos:position pos:line="152" pos:column="45"/></modifier></type><name pos:line="152" pos:column="45">file<pos:position pos:line="152" pos:column="49"/></name> <init pos:line="152" pos:column="50">= <expr><name><name pos:line="152" pos:column="52">flist<pos:position pos:line="152" pos:column="57"/></name><operator pos:line="152" pos:column="57">-&gt;<pos:position pos:line="152" pos:column="62"/></operator><name pos:line="152" pos:column="59">files<pos:position pos:line="152" pos:column="64"/></name><index pos:line="152" pos:column="64">[<expr><name pos:line="152" pos:column="65">i<pos:position pos:line="152" pos:column="66"/></name></expr>]<pos:position pos:line="152" pos:column="67"/></index></name></expr></init></decl>;<pos:position pos:line="152" pos:column="68"/></decl_stmt>
			<if pos:line="153" pos:column="25">if <condition pos:line="153" pos:column="28">(<expr><operator pos:line="153" pos:column="29">!<pos:position pos:line="153" pos:column="30"/></operator><name><name pos:line="153" pos:column="30">file<pos:position pos:line="153" pos:column="34"/></name><operator pos:line="153" pos:column="34">-&gt;<pos:position pos:line="153" pos:column="39"/></operator><name pos:line="153" pos:column="36">basename<pos:position pos:line="153" pos:column="44"/></name></name> <operator pos:line="153" pos:column="45">||<pos:position pos:line="153" pos:column="47"/></operator> <operator pos:line="153" pos:column="48">!<pos:position pos:line="153" pos:column="49"/></operator><call><name pos:line="153" pos:column="49">S_ISDIR<pos:position pos:line="153" pos:column="56"/></name><argument_list pos:line="153" pos:column="56">(<argument><expr><name><name pos:line="153" pos:column="57">file<pos:position pos:line="153" pos:column="61"/></name><operator pos:line="153" pos:column="61">-&gt;<pos:position pos:line="153" pos:column="66"/></operator><name pos:line="153" pos:column="63">mode<pos:position pos:line="153" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="153" pos:column="69"/></condition><then pos:line="153" pos:column="69">
				<block type="pseudo"><continue pos:line="154" pos:column="33">continue;<pos:position pos:line="154" pos:column="42"/></continue></block></then></if>
			<if pos:line="155" pos:column="25">if <condition pos:line="155" pos:column="28">(<expr><operator pos:line="155" pos:column="29">!<pos:position pos:line="155" pos:column="30"/></operator><name pos:line="155" pos:column="30">need_retouch_dir_times<pos:position pos:line="155" pos:column="52"/></name> <operator pos:line="155" pos:column="53">&amp;&amp;<pos:position pos:line="155" pos:column="63"/></operator> <name><name pos:line="155" pos:column="56">file<pos:position pos:line="155" pos:column="60"/></name><operator pos:line="155" pos:column="60">-&gt;<pos:position pos:line="155" pos:column="65"/></operator><name pos:line="155" pos:column="62">mode<pos:position pos:line="155" pos:column="66"/></name></name> <operator pos:line="155" pos:column="67">&amp;<pos:position pos:line="155" pos:column="72"/></operator> <name pos:line="155" pos:column="69">S_IWUSR<pos:position pos:line="155" pos:column="76"/></name></expr>)<pos:position pos:line="155" pos:column="77"/></condition><then pos:line="155" pos:column="77">
				<block type="pseudo"><continue pos:line="156" pos:column="33">continue;<pos:position pos:line="156" pos:column="42"/></continue></block></then></if>
			<expr_stmt><expr><call><name pos:line="157" pos:column="25">recv_generator<pos:position pos:line="157" pos:column="39"/></name><argument_list pos:line="157" pos:column="39">(<argument><expr><call><name pos:line="157" pos:column="40">f_name<pos:position pos:line="157" pos:column="46"/></name><argument_list pos:line="157" pos:column="46">(<argument><expr><name pos:line="157" pos:column="47">file<pos:position pos:line="157" pos:column="51"/></name></expr></argument>)<pos:position pos:line="157" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="157" pos:column="54">file<pos:position pos:line="157" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="60">i<pos:position pos:line="157" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="63">itemizing<pos:position pos:line="157" pos:column="72"/></name></expr></argument>,
				       <argument><expr><name pos:line="158" pos:column="40">maybe_PERMS_REPORT<pos:position pos:line="158" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="60">code<pos:position pos:line="158" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="158" pos:column="66">-<pos:position pos:line="158" pos:column="67"/></operator><literal type="number" pos:line="158" pos:column="67">1<pos:position pos:line="158" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="158" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="70"/></expr_stmt>
			<if pos:line="159" pos:column="25">if <condition pos:line="159" pos:column="28">(<expr><name pos:line="159" pos:column="29">allowed_lull<pos:position pos:line="159" pos:column="41"/></name> <operator pos:line="159" pos:column="42">&amp;&amp;<pos:position pos:line="159" pos:column="52"/></operator> <operator pos:line="159" pos:column="45">!<pos:position pos:line="159" pos:column="46"/></operator><operator pos:line="159" pos:column="46">(<pos:position pos:line="159" pos:column="47"/></operator><operator pos:line="159" pos:column="47">++<pos:position pos:line="159" pos:column="49"/></operator><name pos:line="159" pos:column="49">j<pos:position pos:line="159" pos:column="50"/></name> <operator pos:line="159" pos:column="51">%<pos:position pos:line="159" pos:column="52"/></operator> <name pos:line="159" pos:column="53">lull_mod<pos:position pos:line="159" pos:column="61"/></name><operator pos:line="159" pos:column="61">)<pos:position pos:line="159" pos:column="62"/></operator></expr>)<pos:position pos:line="159" pos:column="63"/></condition><then pos:line="159" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="160" pos:column="33">maybe_send_keepalive<pos:position pos:line="160" pos:column="53"/></name><argument_list pos:line="160" pos:column="53">()<pos:position pos:line="160" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="56"/></expr_stmt></block></then>
			<elseif pos:line="161" pos:column="25">else <if pos:line="161" pos:column="30">if <condition pos:line="161" pos:column="33">(<expr><operator pos:line="161" pos:column="34">!<pos:position pos:line="161" pos:column="35"/></operator><operator pos:line="161" pos:column="35">(<pos:position pos:line="161" pos:column="36"/></operator><name pos:line="161" pos:column="36">j<pos:position pos:line="161" pos:column="37"/></name> <operator pos:line="161" pos:column="38">%<pos:position pos:line="161" pos:column="39"/></operator> <literal type="number" pos:line="161" pos:column="40">200<pos:position pos:line="161" pos:column="43"/></literal><operator pos:line="161" pos:column="43">)<pos:position pos:line="161" pos:column="44"/></operator></expr>)<pos:position pos:line="161" pos:column="45"/></condition><then pos:line="161" pos:column="45">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="162" pos:column="33">maybe_flush_socket<pos:position pos:line="162" pos:column="51"/></name><argument_list pos:line="162" pos:column="51">()<pos:position pos:line="162" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="54"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="163" pos:column="18"/></block></for>
	}<pos:position pos:line="164" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="165" pos:column="9">recv_generator<pos:position pos:line="165" pos:column="23"/></name><argument_list pos:line="165" pos:column="23">(<argument><expr><name pos:line="165" pos:column="24">NULL<pos:position pos:line="165" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="30">NULL<pos:position pos:line="165" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="165" pos:column="36">0<pos:position pos:line="165" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="165" pos:column="39">0<pos:position pos:line="165" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="165" pos:column="42">0<pos:position pos:line="165" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="165" pos:column="45">code<pos:position pos:line="165" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="165" pos:column="51">-<pos:position pos:line="165" pos:column="52"/></operator><literal type="number" pos:line="165" pos:column="52">1<pos:position pos:line="165" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="55"/></expr_stmt>

	<if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">(<expr><name pos:line="167" pos:column="13">max_delete<pos:position pos:line="167" pos:column="23"/></name> <operator pos:line="167" pos:column="24">&gt;<pos:position pos:line="167" pos:column="28"/></operator> <literal type="number" pos:line="167" pos:column="26">0<pos:position pos:line="167" pos:column="27"/></literal> <operator pos:line="167" pos:column="28">&amp;&amp;<pos:position pos:line="167" pos:column="38"/></operator> <name pos:line="167" pos:column="31">deletion_count<pos:position pos:line="167" pos:column="45"/></name> <operator pos:line="167" pos:column="46">&gt;<pos:position pos:line="167" pos:column="50"/></operator> <name pos:line="167" pos:column="48">max_delete<pos:position pos:line="167" pos:column="58"/></name></expr>)<pos:position pos:line="167" pos:column="59"/></condition><then pos:line="167" pos:column="59"> <block pos:line="167" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="168" pos:column="17">rprintf<pos:position pos:line="168" pos:column="24"/></name><argument_list pos:line="168" pos:column="24">(<argument><expr><name pos:line="168" pos:column="25">FINFO<pos:position pos:line="168" pos:column="30"/></name></expr></argument>,
			<argument><expr><literal type="string" pos:line="169" pos:column="25">"Deletions stopped due to --max-delete limit (%d skipped)\n"<pos:position pos:line="169" pos:column="85"/></literal></expr></argument>,
			<argument><expr><name pos:line="170" pos:column="25">deletion_count<pos:position pos:line="170" pos:column="39"/></name> <operator pos:line="170" pos:column="40">-<pos:position pos:line="170" pos:column="41"/></operator> <name pos:line="170" pos:column="42">max_delete<pos:position pos:line="170" pos:column="52"/></name></expr></argument>)<pos:position pos:line="170" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><name pos:line="171" pos:column="17">io_error<pos:position pos:line="171" pos:column="25"/></name> <operator pos:line="171" pos:column="26">|=<pos:position pos:line="171" pos:column="28"/></operator> <name pos:line="171" pos:column="29">IOERR_DEL_LIMIT<pos:position pos:line="171" pos:column="44"/></name></expr>;<pos:position pos:line="171" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="172" pos:column="10"/></block></then></if>

	<if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><name pos:line="174" pos:column="13">verbose<pos:position pos:line="174" pos:column="20"/></name> <operator pos:line="174" pos:column="21">&gt;<pos:position pos:line="174" pos:column="25"/></operator> <literal type="number" pos:line="174" pos:column="23">2<pos:position pos:line="174" pos:column="24"/></literal></expr>)<pos:position pos:line="174" pos:column="25"/></condition><then pos:line="174" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="175" pos:column="17">rprintf<pos:position pos:line="175" pos:column="24"/></name><argument_list pos:line="175" pos:column="24">(<argument><expr><name pos:line="175" pos:column="25">FINFO<pos:position pos:line="175" pos:column="30"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="175" pos:column="31">"generate_files finished\n"<pos:position pos:line="175" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="60"/></expr_stmt></block></then></if>
}<pos:position pos:line="176" pos:column="2"/></block></function></unit>

void init_hard_links(struct file_list *flist);
int check_hard_link(struct file_struct *file);
void do_hard_links(struct file_list *flist);
int64 write_total(void);
int64 read_total(void);
void setup_nonblocking(int f_in,int f_out);
int read_int(int f);
int64 read_longint(int f);
void read_buf(int f,char *buf,int len);
void read_sbuf(int f,char *buf,int len);
unsigned char read_byte(int f);
int sparse_end(int f);
int write_file(int f,char *buf,int len);
void write_int(int f,int x);
void write_longint(int f, int64 x);
void write_buf(int f,char *buf,int len);
void write_byte(int f,unsigned char c);
void write_flush(int f);
void do_server_sender(int argc,char *argv[]);
void do_server_recv(int argc,char *argv[]);
void start_server(int argc, char *argv[]);
int main(int argc,char *argv[]);
void match_sums(int f,struct sum_struct *s,struct map_struct *buf,off_t len);
void match_report(void);
int adapt_block_size(struct file_struct *file, int bsize);
void recv_generator(char *fname,struct file_list *flist,int i,int f_out);
void exit_cleanup(int code);
void sig_int(void);
int recv_files(int f_in,struct file_list *flist,char *local_name,int f_gen);
void send_files(struct file_list *flist,int f_out,int f_in);
void generate_files(int f,struct file_list *flist,char *local_name,int f_recv);
int do_unlink(char *fname);
int do_symlink(char *fname1, char *fname2);
int do_link(char *fname1, char *fname2);
int do_lchown(const char *path, uid_t owner, gid_t group);
int do_mknod(char *pathname, mode_t mode, dev_t dev);
int do_rmdir(char *pathname);
int do_open(char *pathname, int flags, mode_t mode);
int do_chmod(const char *path, mode_t mode);
int do_rename(char *fname1, char *fname2);
int do_mkdir(char *fname, mode_t mode);
char *do_mktemp(char *template);
void send_token(int f,int token,struct map_struct *buf,int offset,
		int n,int toklen);
int recv_token(int f,char **data);
void see_token(char *data, int toklen);
void add_uid(uid_t uid);
void add_gid(gid_t gid);
void send_uid_list(int f);
void recv_uid_list(int f, struct file_list *flist);
int num_waiting(int fd);
struct map_struct *map_file(int fd,off_t len);
char *map_ptr(struct map_struct *map,off_t offset,int len);
void unmap_file(struct map_struct *map);
int piped_child(char **command,int *f_in,int *f_out);
int local_child(int argc, char **argv,int *f_in,int *f_out);
void out_of_memory(char *str);
void overflow(char *str);
int set_modtime(char *fname,time_t modtime);

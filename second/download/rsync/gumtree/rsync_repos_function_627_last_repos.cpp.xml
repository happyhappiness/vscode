<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_627_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <name pos:line="1" pos:column="6">ZLIB_INTERNAL<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">inflate_fast<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">strm<pos:position pos:line="1" pos:column="37"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="39">start<pos:position pos:line="1" pos:column="44"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">strm<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">unsigned<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">start<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>         <comment type="block" pos:line="3" pos:column="25">/* inflate()'s starting value for strm-&gt;avail_out */</comment>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">inflate_state<pos:position pos:line="5" pos:column="25"/></name></name> <name pos:line="5" pos:column="26">FAR<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">state<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">z_const<pos:position pos:line="6" pos:column="12"/></name> <name pos:line="6" pos:column="13">unsigned<pos:position pos:line="6" pos:column="21"/></name> <name pos:line="6" pos:column="22">char<pos:position pos:line="6" pos:column="26"/></name> <name pos:line="6" pos:column="27">FAR<pos:position pos:line="6" pos:column="30"/></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">in<pos:position pos:line="6" pos:column="34"/></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>      <comment type="block" pos:line="6" pos:column="41">/* local strm-&gt;next_in */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">z_const<pos:position pos:line="7" pos:column="12"/></name> <name pos:line="7" pos:column="13">unsigned<pos:position pos:line="7" pos:column="21"/></name> <name pos:line="7" pos:column="22">char<pos:position pos:line="7" pos:column="26"/></name> <name pos:line="7" pos:column="27">FAR<pos:position pos:line="7" pos:column="30"/></name> <modifier pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></modifier></type><name pos:line="7" pos:column="32">last<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>    <comment type="block" pos:line="7" pos:column="41">/* have enough input while in &lt; last */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">char<pos:position pos:line="8" pos:column="18"/></name> <name pos:line="8" pos:column="19">FAR<pos:position pos:line="8" pos:column="22"/></name> <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">out<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>     <comment type="block" pos:line="8" pos:column="33">/* local strm-&gt;next_out */</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">char<pos:position pos:line="9" pos:column="18"/></name> <name pos:line="9" pos:column="19">FAR<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">beg<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>     <comment type="block" pos:line="9" pos:column="33">/* inflate()'s initial strm-&gt;next_out */</comment>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">char<pos:position pos:line="10" pos:column="18"/></name> <name pos:line="10" pos:column="19">FAR<pos:position pos:line="10" pos:column="22"/></name> <modifier pos:line="10" pos:column="23">*<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="24">end<pos:position pos:line="10" pos:column="27"/></name></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>     <comment type="block" pos:line="10" pos:column="33">/* while out &lt; end, enough space available */</comment>
<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef<pos:position pos:line="11" pos:column="7"/></cpp:directive> <name pos:line="11" pos:column="8">INFLATE_STRICT<pos:position pos:line="11" pos:column="22"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">unsigned<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">dmax<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>              <comment type="block" pos:line="12" pos:column="33">/* maximum distance from zlib header */</comment>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">unsigned<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">wsize<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>             <comment type="block" pos:line="14" pos:column="33">/* window size or zero if not using window */</comment>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">unsigned<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">whave<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>             <comment type="block" pos:line="15" pos:column="33">/* valid bytes in the window */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">unsigned<pos:position pos:line="16" pos:column="13"/></name></type> <name pos:line="16" pos:column="14">wnext<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>             <comment type="block" pos:line="16" pos:column="33">/* window write index */</comment>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">unsigned<pos:position pos:line="17" pos:column="13"/></name> <name pos:line="17" pos:column="14">char<pos:position pos:line="17" pos:column="18"/></name> <name pos:line="17" pos:column="19">FAR<pos:position pos:line="17" pos:column="22"/></name> <modifier pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></modifier></type><name pos:line="17" pos:column="24">window<pos:position pos:line="17" pos:column="30"/></name></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>  <comment type="block" pos:line="17" pos:column="33">/* allocated sliding window, if wsize != 0 */</comment>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">unsigned<pos:position pos:line="18" pos:column="13"/></name> <name pos:line="18" pos:column="14">long<pos:position pos:line="18" pos:column="18"/></name></type> <name pos:line="18" pos:column="19">hold<pos:position pos:line="18" pos:column="23"/></name></decl>;<pos:position pos:line="18" pos:column="24"/></decl_stmt>         <comment type="block" pos:line="18" pos:column="33">/* local strm-&gt;hold */</comment>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">unsigned<pos:position pos:line="19" pos:column="13"/></name></type> <name pos:line="19" pos:column="14">bits<pos:position pos:line="19" pos:column="18"/></name></decl>;<pos:position pos:line="19" pos:column="19"/></decl_stmt>              <comment type="block" pos:line="19" pos:column="33">/* local strm-&gt;bits */</comment>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">code<pos:position pos:line="20" pos:column="9"/></name> <specifier pos:line="20" pos:column="10">const<pos:position pos:line="20" pos:column="15"/></specifier> <name pos:line="20" pos:column="16">FAR<pos:position pos:line="20" pos:column="19"/></name> <modifier pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></modifier></type><name pos:line="20" pos:column="21">lcode<pos:position pos:line="20" pos:column="26"/></name></decl>;<pos:position pos:line="20" pos:column="27"/></decl_stmt>      <comment type="block" pos:line="20" pos:column="33">/* local strm-&gt;lencode */</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">code<pos:position pos:line="21" pos:column="9"/></name> <specifier pos:line="21" pos:column="10">const<pos:position pos:line="21" pos:column="15"/></specifier> <name pos:line="21" pos:column="16">FAR<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">dcode<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>      <comment type="block" pos:line="21" pos:column="33">/* local strm-&gt;distcode */</comment>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">unsigned<pos:position pos:line="22" pos:column="13"/></name></type> <name pos:line="22" pos:column="14">lmask<pos:position pos:line="22" pos:column="19"/></name></decl>;<pos:position pos:line="22" pos:column="20"/></decl_stmt>             <comment type="block" pos:line="22" pos:column="33">/* mask for first level of length codes */</comment>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">unsigned<pos:position pos:line="23" pos:column="13"/></name></type> <name pos:line="23" pos:column="14">dmask<pos:position pos:line="23" pos:column="19"/></name></decl>;<pos:position pos:line="23" pos:column="20"/></decl_stmt>             <comment type="block" pos:line="23" pos:column="33">/* mask for first level of distance codes */</comment>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">code<pos:position pos:line="24" pos:column="9"/></name></type> <name pos:line="24" pos:column="10">here<pos:position pos:line="24" pos:column="14"/></name></decl>;<pos:position pos:line="24" pos:column="15"/></decl_stmt>                  <comment type="block" pos:line="24" pos:column="33">/* retrieved table entry */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">unsigned<pos:position pos:line="25" pos:column="13"/></name></type> <name pos:line="25" pos:column="14">op<pos:position pos:line="25" pos:column="16"/></name></decl>;<pos:position pos:line="25" pos:column="17"/></decl_stmt>                <comment type="block" pos:line="25" pos:column="33">/* code bits, operation, extra bits, or */</comment>
                                <comment type="block" pos:line="26" pos:column="33">/*  window position, window bytes to copy */</comment>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">unsigned<pos:position pos:line="27" pos:column="13"/></name></type> <name pos:line="27" pos:column="14">len<pos:position pos:line="27" pos:column="17"/></name></decl>;<pos:position pos:line="27" pos:column="18"/></decl_stmt>               <comment type="block" pos:line="27" pos:column="33">/* match length, unused bytes */</comment>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">unsigned<pos:position pos:line="28" pos:column="13"/></name></type> <name pos:line="28" pos:column="14">dist<pos:position pos:line="28" pos:column="18"/></name></decl>;<pos:position pos:line="28" pos:column="19"/></decl_stmt>              <comment type="block" pos:line="28" pos:column="33">/* match distance */</comment>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">unsigned<pos:position pos:line="29" pos:column="13"/></name> <name pos:line="29" pos:column="14">char<pos:position pos:line="29" pos:column="18"/></name> <name pos:line="29" pos:column="19">FAR<pos:position pos:line="29" pos:column="22"/></name> <modifier pos:line="29" pos:column="23">*<pos:position pos:line="29" pos:column="24"/></modifier></type><name pos:line="29" pos:column="24">from<pos:position pos:line="29" pos:column="28"/></name></decl>;<pos:position pos:line="29" pos:column="29"/></decl_stmt>    <comment type="block" pos:line="29" pos:column="33">/* where to copy match from */</comment>

    <comment type="block" pos:line="31" pos:column="5">/* copy state to local variables */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">state<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">=<pos:position pos:line="32" pos:column="12"/></operator> <operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator>struct <name pos:line="32" pos:column="21">inflate_state<pos:position pos:line="32" pos:column="34"/></name> <name pos:line="32" pos:column="35">FAR<pos:position pos:line="32" pos:column="38"/></name> <operator pos:line="32" pos:column="39">*<pos:position pos:line="32" pos:column="40"/></operator><operator pos:line="32" pos:column="40">)<pos:position pos:line="32" pos:column="41"/></operator><name><name pos:line="32" pos:column="41">strm<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">state<pos:position pos:line="32" pos:column="52"/></name></name></expr>;<pos:position pos:line="32" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">in<pos:position pos:line="33" pos:column="7"/></name> <operator pos:line="33" pos:column="8">=<pos:position pos:line="33" pos:column="9"/></operator> <name><name pos:line="33" pos:column="10">strm<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">next_in<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">-<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">OFF<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">last<pos:position pos:line="34" pos:column="9"/></name> <operator pos:line="34" pos:column="10">=<pos:position pos:line="34" pos:column="11"/></operator> <name pos:line="34" pos:column="12">in<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">+<pos:position pos:line="34" pos:column="16"/></operator> <operator pos:line="34" pos:column="17">(<pos:position pos:line="34" pos:column="18"/></operator><name><name pos:line="34" pos:column="18">strm<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">avail_in<pos:position pos:line="34" pos:column="32"/></name></name> <operator pos:line="34" pos:column="33">-<pos:position pos:line="34" pos:column="34"/></operator> <literal type="number" pos:line="34" pos:column="35">5<pos:position pos:line="34" pos:column="36"/></literal><operator pos:line="34" pos:column="36">)<pos:position pos:line="34" pos:column="37"/></operator></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">out<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <name><name pos:line="35" pos:column="11">strm<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">next_out<pos:position pos:line="35" pos:column="25"/></name></name> <operator pos:line="35" pos:column="26">-<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">OFF<pos:position pos:line="35" pos:column="31"/></name></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">beg<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <name pos:line="36" pos:column="11">out<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">-<pos:position pos:line="36" pos:column="16"/></operator> <operator pos:line="36" pos:column="17">(<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">start<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">-<pos:position pos:line="36" pos:column="25"/></operator> <name><name pos:line="36" pos:column="26">strm<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">avail_out<pos:position pos:line="36" pos:column="41"/></name></name><operator pos:line="36" pos:column="41">)<pos:position pos:line="36" pos:column="42"/></operator></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">end<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <name pos:line="37" pos:column="11">out<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">+<pos:position pos:line="37" pos:column="16"/></operator> <operator pos:line="37" pos:column="17">(<pos:position pos:line="37" pos:column="18"/></operator><name><name pos:line="37" pos:column="18">strm<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">avail_out<pos:position pos:line="37" pos:column="33"/></name></name> <operator pos:line="37" pos:column="34">-<pos:position pos:line="37" pos:column="35"/></operator> <literal type="number" pos:line="37" pos:column="36">257<pos:position pos:line="37" pos:column="39"/></literal><operator pos:line="37" pos:column="39">)<pos:position pos:line="37" pos:column="40"/></operator></expr>;<pos:position pos:line="37" pos:column="41"/></expr_stmt>
<cpp:ifdef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifdef<pos:position pos:line="38" pos:column="7"/></cpp:directive> <name pos:line="38" pos:column="8">INFLATE_STRICT<pos:position pos:line="38" pos:column="22"/></name></cpp:ifdef>
    <expr_stmt><expr><name pos:line="39" pos:column="5">dmax<pos:position pos:line="39" pos:column="9"/></name> <operator pos:line="39" pos:column="10">=<pos:position pos:line="39" pos:column="11"/></operator> <name><name pos:line="39" pos:column="12">state<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">dmax<pos:position pos:line="39" pos:column="23"/></name></name></expr>;<pos:position pos:line="39" pos:column="24"/></expr_stmt>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="41" pos:column="5">wsize<pos:position pos:line="41" pos:column="10"/></name> <operator pos:line="41" pos:column="11">=<pos:position pos:line="41" pos:column="12"/></operator> <name><name pos:line="41" pos:column="13">state<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">-&gt;<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="20">wsize<pos:position pos:line="41" pos:column="25"/></name></name></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="42" pos:column="5">whave<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <name><name pos:line="42" pos:column="13">state<pos:position pos:line="42" pos:column="18"/></name><operator pos:line="42" pos:column="18">-&gt;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="20">whave<pos:position pos:line="42" pos:column="25"/></name></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="43" pos:column="5">wnext<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <name><name pos:line="43" pos:column="13">state<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">wnext<pos:position pos:line="43" pos:column="25"/></name></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">window<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <name><name pos:line="44" pos:column="14">state<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">window<pos:position pos:line="44" pos:column="27"/></name></name></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">hold<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <name><name pos:line="45" pos:column="12">state<pos:position pos:line="45" pos:column="17"/></name><operator pos:line="45" pos:column="17">-&gt;<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="19">hold<pos:position pos:line="45" pos:column="23"/></name></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">bits<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <name><name pos:line="46" pos:column="12">state<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">bits<pos:position pos:line="46" pos:column="23"/></name></name></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">lcode<pos:position pos:line="47" pos:column="10"/></name> <operator pos:line="47" pos:column="11">=<pos:position pos:line="47" pos:column="12"/></operator> <name><name pos:line="47" pos:column="13">state<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">-&gt;<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="20">lencode<pos:position pos:line="47" pos:column="27"/></name></name></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">dcode<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <name><name pos:line="48" pos:column="13">state<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">distcode<pos:position pos:line="48" pos:column="28"/></name></name></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="49" pos:column="5">lmask<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><literal type="number" pos:line="49" pos:column="14">1U<pos:position pos:line="49" pos:column="16"/></literal> <operator pos:line="49" pos:column="17">&lt;&lt;<pos:position pos:line="49" pos:column="25"/></operator> <name><name pos:line="49" pos:column="20">state<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">-&gt;<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="27">lenbits<pos:position pos:line="49" pos:column="34"/></name></name><operator pos:line="49" pos:column="34">)<pos:position pos:line="49" pos:column="35"/></operator> <operator pos:line="49" pos:column="36">-<pos:position pos:line="49" pos:column="37"/></operator> <literal type="number" pos:line="49" pos:column="38">1<pos:position pos:line="49" pos:column="39"/></literal></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="50" pos:column="5">dmask<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><literal type="number" pos:line="50" pos:column="14">1U<pos:position pos:line="50" pos:column="16"/></literal> <operator pos:line="50" pos:column="17">&lt;&lt;<pos:position pos:line="50" pos:column="25"/></operator> <name><name pos:line="50" pos:column="20">state<pos:position pos:line="50" pos:column="25"/></name><operator pos:line="50" pos:column="25">-&gt;<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="27">distbits<pos:position pos:line="50" pos:column="35"/></name></name><operator pos:line="50" pos:column="35">)<pos:position pos:line="50" pos:column="36"/></operator> <operator pos:line="50" pos:column="37">-<pos:position pos:line="50" pos:column="38"/></operator> <literal type="number" pos:line="50" pos:column="39">1<pos:position pos:line="50" pos:column="40"/></literal></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="52" pos:column="5">/* decode literals and length/distances until end-of-block or not enough
       input data or output space */</comment>
    <do pos:line="54" pos:column="5">do <block pos:line="54" pos:column="8">{
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">bits<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">&lt;<pos:position pos:line="55" pos:column="22"/></operator> <literal type="number" pos:line="55" pos:column="20">15<pos:position pos:line="55" pos:column="22"/></literal></expr>)<pos:position pos:line="55" pos:column="23"/></condition><then pos:line="55" pos:column="23"> <block pos:line="55" pos:column="24">{
            <expr_stmt><expr><name pos:line="56" pos:column="13">hold<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">+=<pos:position pos:line="56" pos:column="20"/></operator> <call pos:line="56" pos:column="21">(<name pos:line="56" pos:column="22">unsigned<pos:position pos:line="56" pos:column="30"/></name> <name pos:line="56" pos:column="31">long<pos:position pos:line="56" pos:column="35"/></name>)<argument_list pos:line="56" pos:column="36">(<argument><expr><call><name pos:line="56" pos:column="37">PUP<pos:position pos:line="56" pos:column="40"/></name><argument_list pos:line="56" pos:column="40">(<argument><expr><name pos:line="56" pos:column="41">in<pos:position pos:line="56" pos:column="43"/></name></expr></argument>)<pos:position pos:line="56" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="45"/></argument_list></call> <operator pos:line="56" pos:column="46">&lt;&lt;<pos:position pos:line="56" pos:column="54"/></operator> <name pos:line="56" pos:column="49">bits<pos:position pos:line="56" pos:column="53"/></name></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">bits<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">+=<pos:position pos:line="57" pos:column="20"/></operator> <literal type="number" pos:line="57" pos:column="21">8<pos:position pos:line="57" pos:column="22"/></literal></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="58" pos:column="13">hold<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">+=<pos:position pos:line="58" pos:column="20"/></operator> <call pos:line="58" pos:column="21">(<name pos:line="58" pos:column="22">unsigned<pos:position pos:line="58" pos:column="30"/></name> <name pos:line="58" pos:column="31">long<pos:position pos:line="58" pos:column="35"/></name>)<argument_list pos:line="58" pos:column="36">(<argument><expr><call><name pos:line="58" pos:column="37">PUP<pos:position pos:line="58" pos:column="40"/></name><argument_list pos:line="58" pos:column="40">(<argument><expr><name pos:line="58" pos:column="41">in<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call> <operator pos:line="58" pos:column="46">&lt;&lt;<pos:position pos:line="58" pos:column="54"/></operator> <name pos:line="58" pos:column="49">bits<pos:position pos:line="58" pos:column="53"/></name></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="59" pos:column="13">bits<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">+=<pos:position pos:line="59" pos:column="20"/></operator> <literal type="number" pos:line="59" pos:column="21">8<pos:position pos:line="59" pos:column="22"/></literal></expr>;<pos:position pos:line="59" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="61" pos:column="9">here<pos:position pos:line="61" pos:column="13"/></name> <operator pos:line="61" pos:column="14">=<pos:position pos:line="61" pos:column="15"/></operator> <name><name pos:line="61" pos:column="16">lcode<pos:position pos:line="61" pos:column="21"/></name><index pos:line="61" pos:column="21">[<expr><name pos:line="61" pos:column="22">hold<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">&amp;<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="29">lmask<pos:position pos:line="61" pos:column="34"/></name></expr>]<pos:position pos:line="61" pos:column="35"/></index></name></expr>;<pos:position pos:line="61" pos:column="36"/></expr_stmt>
      <label><name pos:line="62" pos:column="7">dolen<pos:position pos:line="62" pos:column="12"/></name>:<pos:position pos:line="62" pos:column="13"/></label>
        <expr_stmt><expr><name pos:line="63" pos:column="9">op<pos:position pos:line="63" pos:column="11"/></name> <operator pos:line="63" pos:column="12">=<pos:position pos:line="63" pos:column="13"/></operator> <call pos:line="63" pos:column="14">(<name pos:line="63" pos:column="15">unsigned<pos:position pos:line="63" pos:column="23"/></name>)<argument_list pos:line="63" pos:column="24">(<argument><expr><name><name pos:line="63" pos:column="25">here<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">.<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">bits<pos:position pos:line="63" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">hold<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">&gt;&gt;=<pos:position pos:line="64" pos:column="23"/></operator> <name pos:line="64" pos:column="18">op<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">bits<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">-=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">op<pos:position pos:line="65" pos:column="19"/></name></expr>;<pos:position pos:line="65" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">op<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <call pos:line="66" pos:column="14">(<name pos:line="66" pos:column="15">unsigned<pos:position pos:line="66" pos:column="23"/></name>)<argument_list pos:line="66" pos:column="24">(<argument><expr><name><name pos:line="66" pos:column="25">here<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">.<pos:position pos:line="66" pos:column="30"/></operator><name pos:line="66" pos:column="30">op<pos:position pos:line="66" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">op<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">==<pos:position pos:line="67" pos:column="18"/></operator> <literal type="number" pos:line="67" pos:column="19">0<pos:position pos:line="67" pos:column="20"/></literal></expr>)<pos:position pos:line="67" pos:column="21"/></condition><then pos:line="67" pos:column="21"> <block pos:line="67" pos:column="22">{                          <comment type="block" pos:line="67" pos:column="49">/* literal */</comment>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">Tracevv<pos:position pos:line="68" pos:column="20"/></name><argument_list pos:line="68" pos:column="20">(<argument><expr><operator pos:line="68" pos:column="21">(<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="22">stderr<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">,<pos:position pos:line="68" pos:column="29"/></operator> <ternary><condition><expr><name><name pos:line="68" pos:column="30">here<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">.<pos:position pos:line="68" pos:column="35"/></operator><name pos:line="68" pos:column="35">val<pos:position pos:line="68" pos:column="38"/></name></name> <operator pos:line="68" pos:column="39">&gt;=<pos:position pos:line="68" pos:column="44"/></operator> <literal type="number" pos:line="68" pos:column="42">0x20<pos:position pos:line="68" pos:column="46"/></literal> <operator pos:line="68" pos:column="47">&amp;&amp;<pos:position pos:line="68" pos:column="57"/></operator> <name><name pos:line="68" pos:column="50">here<pos:position pos:line="68" pos:column="54"/></name><operator pos:line="68" pos:column="54">.<pos:position pos:line="68" pos:column="55"/></operator><name pos:line="68" pos:column="55">val<pos:position pos:line="68" pos:column="58"/></name></name> <operator pos:line="68" pos:column="59">&lt;<pos:position pos:line="68" pos:column="63"/></operator> <literal type="number" pos:line="68" pos:column="61">0x7f<pos:position pos:line="68" pos:column="65"/></literal></expr> ?<pos:position pos:line="68" pos:column="67"/></condition><then pos:line="68" pos:column="67">
                    <expr><literal type="string" pos:line="69" pos:column="21">"inflate:         literal '%c'\n"<pos:position pos:line="69" pos:column="54"/></literal></expr> <pos:position pos:line="69" pos:column="55"/></then><else pos:line="69" pos:column="55">:
                    <expr><literal type="string" pos:line="70" pos:column="21">"inflate:         literal 0x%02x\n"<pos:position pos:line="70" pos:column="56"/></literal></expr></else></ternary><operator pos:line="70" pos:column="56">,<pos:position pos:line="70" pos:column="57"/></operator> <name><name pos:line="70" pos:column="58">here<pos:position pos:line="70" pos:column="62"/></name><operator pos:line="70" pos:column="62">.<pos:position pos:line="70" pos:column="63"/></operator><name pos:line="70" pos:column="63">val<pos:position pos:line="70" pos:column="66"/></name></name><operator pos:line="70" pos:column="66">)<pos:position pos:line="70" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="70" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">PUP<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><name pos:line="71" pos:column="17">out<pos:position pos:line="71" pos:column="20"/></name></expr></argument>)<pos:position pos:line="71" pos:column="21"/></argument_list></call> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <call pos:line="71" pos:column="24">(<name pos:line="71" pos:column="25">unsigned<pos:position pos:line="71" pos:column="33"/></name> <name pos:line="71" pos:column="34">char<pos:position pos:line="71" pos:column="38"/></name>)<argument_list pos:line="71" pos:column="39">(<argument><expr><name><name pos:line="71" pos:column="40">here<pos:position pos:line="71" pos:column="44"/></name><operator pos:line="71" pos:column="44">.<pos:position pos:line="71" pos:column="45"/></operator><name pos:line="71" pos:column="45">val<pos:position pos:line="71" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then>
        <elseif pos:line="73" pos:column="9">else <if pos:line="73" pos:column="14">if <condition pos:line="73" pos:column="17">(<expr><name pos:line="73" pos:column="18">op<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">&amp;<pos:position pos:line="73" pos:column="26"/></operator> <literal type="number" pos:line="73" pos:column="23">16<pos:position pos:line="73" pos:column="25"/></literal></expr>)<pos:position pos:line="73" pos:column="26"/></condition><then pos:line="73" pos:column="26"> <block pos:line="73" pos:column="27">{                     <comment type="block" pos:line="73" pos:column="49">/* length base */</comment>
            <expr_stmt><expr><name pos:line="74" pos:column="13">len<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <call pos:line="74" pos:column="19">(<name pos:line="74" pos:column="20">unsigned<pos:position pos:line="74" pos:column="28"/></name>)<argument_list pos:line="74" pos:column="29">(<argument><expr><name><name pos:line="74" pos:column="30">here<pos:position pos:line="74" pos:column="34"/></name><operator pos:line="74" pos:column="34">.<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">val<pos:position pos:line="74" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="75" pos:column="13">op<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">&amp;=<pos:position pos:line="75" pos:column="22"/></operator> <literal type="number" pos:line="75" pos:column="19">15<pos:position pos:line="75" pos:column="21"/></literal></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>                           <comment type="block" pos:line="75" pos:column="49">/* number of extra bits */</comment>
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><name pos:line="76" pos:column="17">op<pos:position pos:line="76" pos:column="19"/></name></expr>)<pos:position pos:line="76" pos:column="20"/></condition><then pos:line="76" pos:column="20"> <block pos:line="76" pos:column="21">{
                <if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><name pos:line="77" pos:column="21">bits<pos:position pos:line="77" pos:column="25"/></name> <operator pos:line="77" pos:column="26">&lt;<pos:position pos:line="77" pos:column="30"/></operator> <name pos:line="77" pos:column="28">op<pos:position pos:line="77" pos:column="30"/></name></expr>)<pos:position pos:line="77" pos:column="31"/></condition><then pos:line="77" pos:column="31"> <block pos:line="77" pos:column="32">{
                    <expr_stmt><expr><name pos:line="78" pos:column="21">hold<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">+=<pos:position pos:line="78" pos:column="28"/></operator> <call pos:line="78" pos:column="29">(<name pos:line="78" pos:column="30">unsigned<pos:position pos:line="78" pos:column="38"/></name> <name pos:line="78" pos:column="39">long<pos:position pos:line="78" pos:column="43"/></name>)<argument_list pos:line="78" pos:column="44">(<argument><expr><call><name pos:line="78" pos:column="45">PUP<pos:position pos:line="78" pos:column="48"/></name><argument_list pos:line="78" pos:column="48">(<argument><expr><name pos:line="78" pos:column="49">in<pos:position pos:line="78" pos:column="51"/></name></expr></argument>)<pos:position pos:line="78" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="53"/></argument_list></call> <operator pos:line="78" pos:column="54">&lt;&lt;<pos:position pos:line="78" pos:column="62"/></operator> <name pos:line="78" pos:column="57">bits<pos:position pos:line="78" pos:column="61"/></name></expr>;<pos:position pos:line="78" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="79" pos:column="21">bits<pos:position pos:line="79" pos:column="25"/></name> <operator pos:line="79" pos:column="26">+=<pos:position pos:line="79" pos:column="28"/></operator> <literal type="number" pos:line="79" pos:column="29">8<pos:position pos:line="79" pos:column="30"/></literal></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
                }<pos:position pos:line="80" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="81" pos:column="17">len<pos:position pos:line="81" pos:column="20"/></name> <operator pos:line="81" pos:column="21">+=<pos:position pos:line="81" pos:column="23"/></operator> <operator pos:line="81" pos:column="24">(<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="25">unsigned<pos:position pos:line="81" pos:column="33"/></name><operator pos:line="81" pos:column="33">)<pos:position pos:line="81" pos:column="34"/></operator><name pos:line="81" pos:column="34">hold<pos:position pos:line="81" pos:column="38"/></name> <operator pos:line="81" pos:column="39">&amp;<pos:position pos:line="81" pos:column="44"/></operator> <operator pos:line="81" pos:column="41">(<pos:position pos:line="81" pos:column="42"/></operator><operator pos:line="81" pos:column="42">(<pos:position pos:line="81" pos:column="43"/></operator><literal type="number" pos:line="81" pos:column="43">1U<pos:position pos:line="81" pos:column="45"/></literal> <operator pos:line="81" pos:column="46">&lt;&lt;<pos:position pos:line="81" pos:column="54"/></operator> <name pos:line="81" pos:column="49">op<pos:position pos:line="81" pos:column="51"/></name><operator pos:line="81" pos:column="51">)<pos:position pos:line="81" pos:column="52"/></operator> <operator pos:line="81" pos:column="53">-<pos:position pos:line="81" pos:column="54"/></operator> <literal type="number" pos:line="81" pos:column="55">1<pos:position pos:line="81" pos:column="56"/></literal><operator pos:line="81" pos:column="56">)<pos:position pos:line="81" pos:column="57"/></operator></expr>;<pos:position pos:line="81" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="82" pos:column="17">hold<pos:position pos:line="82" pos:column="21"/></name> <operator pos:line="82" pos:column="22">&gt;&gt;=<pos:position pos:line="82" pos:column="31"/></operator> <name pos:line="82" pos:column="26">op<pos:position pos:line="82" pos:column="28"/></name></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="83" pos:column="17">bits<pos:position pos:line="83" pos:column="21"/></name> <operator pos:line="83" pos:column="22">-=<pos:position pos:line="83" pos:column="24"/></operator> <name pos:line="83" pos:column="25">op<pos:position pos:line="83" pos:column="27"/></name></expr>;<pos:position pos:line="83" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="84" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">Tracevv<pos:position pos:line="85" pos:column="20"/></name><argument_list pos:line="85" pos:column="20">(<argument><expr><operator pos:line="85" pos:column="21">(<pos:position pos:line="85" pos:column="22"/></operator><name pos:line="85" pos:column="22">stderr<pos:position pos:line="85" pos:column="28"/></name><operator pos:line="85" pos:column="28">,<pos:position pos:line="85" pos:column="29"/></operator> <literal type="string" pos:line="85" pos:column="30">"inflate:         length %u\n"<pos:position pos:line="85" pos:column="60"/></literal><operator pos:line="85" pos:column="60">,<pos:position pos:line="85" pos:column="61"/></operator> <name pos:line="85" pos:column="62">len<pos:position pos:line="85" pos:column="65"/></name><operator pos:line="85" pos:column="65">)<pos:position pos:line="85" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="85" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="68"/></expr_stmt>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">bits<pos:position pos:line="86" pos:column="21"/></name> <operator pos:line="86" pos:column="22">&lt;<pos:position pos:line="86" pos:column="26"/></operator> <literal type="number" pos:line="86" pos:column="24">15<pos:position pos:line="86" pos:column="26"/></literal></expr>)<pos:position pos:line="86" pos:column="27"/></condition><then pos:line="86" pos:column="27"> <block pos:line="86" pos:column="28">{
                <expr_stmt><expr><name pos:line="87" pos:column="17">hold<pos:position pos:line="87" pos:column="21"/></name> <operator pos:line="87" pos:column="22">+=<pos:position pos:line="87" pos:column="24"/></operator> <call pos:line="87" pos:column="25">(<name pos:line="87" pos:column="26">unsigned<pos:position pos:line="87" pos:column="34"/></name> <name pos:line="87" pos:column="35">long<pos:position pos:line="87" pos:column="39"/></name>)<argument_list pos:line="87" pos:column="40">(<argument><expr><call><name pos:line="87" pos:column="41">PUP<pos:position pos:line="87" pos:column="44"/></name><argument_list pos:line="87" pos:column="44">(<argument><expr><name pos:line="87" pos:column="45">in<pos:position pos:line="87" pos:column="47"/></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="49"/></argument_list></call> <operator pos:line="87" pos:column="50">&lt;&lt;<pos:position pos:line="87" pos:column="58"/></operator> <name pos:line="87" pos:column="53">bits<pos:position pos:line="87" pos:column="57"/></name></expr>;<pos:position pos:line="87" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="88" pos:column="17">bits<pos:position pos:line="88" pos:column="21"/></name> <operator pos:line="88" pos:column="22">+=<pos:position pos:line="88" pos:column="24"/></operator> <literal type="number" pos:line="88" pos:column="25">8<pos:position pos:line="88" pos:column="26"/></literal></expr>;<pos:position pos:line="88" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name pos:line="89" pos:column="17">hold<pos:position pos:line="89" pos:column="21"/></name> <operator pos:line="89" pos:column="22">+=<pos:position pos:line="89" pos:column="24"/></operator> <call pos:line="89" pos:column="25">(<name pos:line="89" pos:column="26">unsigned<pos:position pos:line="89" pos:column="34"/></name> <name pos:line="89" pos:column="35">long<pos:position pos:line="89" pos:column="39"/></name>)<argument_list pos:line="89" pos:column="40">(<argument><expr><call><name pos:line="89" pos:column="41">PUP<pos:position pos:line="89" pos:column="44"/></name><argument_list pos:line="89" pos:column="44">(<argument><expr><name pos:line="89" pos:column="45">in<pos:position pos:line="89" pos:column="47"/></name></expr></argument>)<pos:position pos:line="89" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call> <operator pos:line="89" pos:column="50">&lt;&lt;<pos:position pos:line="89" pos:column="58"/></operator> <name pos:line="89" pos:column="53">bits<pos:position pos:line="89" pos:column="57"/></name></expr>;<pos:position pos:line="89" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><name pos:line="90" pos:column="17">bits<pos:position pos:line="90" pos:column="21"/></name> <operator pos:line="90" pos:column="22">+=<pos:position pos:line="90" pos:column="24"/></operator> <literal type="number" pos:line="90" pos:column="25">8<pos:position pos:line="90" pos:column="26"/></literal></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="91" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="92" pos:column="13">here<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">=<pos:position pos:line="92" pos:column="19"/></operator> <name><name pos:line="92" pos:column="20">dcode<pos:position pos:line="92" pos:column="25"/></name><index pos:line="92" pos:column="25">[<expr><name pos:line="92" pos:column="26">hold<pos:position pos:line="92" pos:column="30"/></name> <operator pos:line="92" pos:column="31">&amp;<pos:position pos:line="92" pos:column="36"/></operator> <name pos:line="92" pos:column="33">dmask<pos:position pos:line="92" pos:column="38"/></name></expr>]<pos:position pos:line="92" pos:column="39"/></index></name></expr>;<pos:position pos:line="92" pos:column="40"/></expr_stmt>
          <label><name pos:line="93" pos:column="11">dodist<pos:position pos:line="93" pos:column="17"/></name>:<pos:position pos:line="93" pos:column="18"/></label>
            <expr_stmt><expr><name pos:line="94" pos:column="13">op<pos:position pos:line="94" pos:column="15"/></name> <operator pos:line="94" pos:column="16">=<pos:position pos:line="94" pos:column="17"/></operator> <call pos:line="94" pos:column="18">(<name pos:line="94" pos:column="19">unsigned<pos:position pos:line="94" pos:column="27"/></name>)<argument_list pos:line="94" pos:column="28">(<argument><expr><name><name pos:line="94" pos:column="29">here<pos:position pos:line="94" pos:column="33"/></name><operator pos:line="94" pos:column="33">.<pos:position pos:line="94" pos:column="34"/></operator><name pos:line="94" pos:column="34">bits<pos:position pos:line="94" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="95" pos:column="13">hold<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">&gt;&gt;=<pos:position pos:line="95" pos:column="27"/></operator> <name pos:line="95" pos:column="22">op<pos:position pos:line="95" pos:column="24"/></name></expr>;<pos:position pos:line="95" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="96" pos:column="13">bits<pos:position pos:line="96" pos:column="17"/></name> <operator pos:line="96" pos:column="18">-=<pos:position pos:line="96" pos:column="20"/></operator> <name pos:line="96" pos:column="21">op<pos:position pos:line="96" pos:column="23"/></name></expr>;<pos:position pos:line="96" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><name pos:line="97" pos:column="13">op<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <call pos:line="97" pos:column="18">(<name pos:line="97" pos:column="19">unsigned<pos:position pos:line="97" pos:column="27"/></name>)<argument_list pos:line="97" pos:column="28">(<argument><expr><name><name pos:line="97" pos:column="29">here<pos:position pos:line="97" pos:column="33"/></name><operator pos:line="97" pos:column="33">.<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="34">op<pos:position pos:line="97" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="38"/></expr_stmt>
            <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><name pos:line="98" pos:column="17">op<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">&amp;<pos:position pos:line="98" pos:column="25"/></operator> <literal type="number" pos:line="98" pos:column="22">16<pos:position pos:line="98" pos:column="24"/></literal></expr>)<pos:position pos:line="98" pos:column="25"/></condition><then pos:line="98" pos:column="25"> <block pos:line="98" pos:column="26">{                      <comment type="block" pos:line="98" pos:column="49">/* distance base */</comment>
                <expr_stmt><expr><name pos:line="99" pos:column="17">dist<pos:position pos:line="99" pos:column="21"/></name> <operator pos:line="99" pos:column="22">=<pos:position pos:line="99" pos:column="23"/></operator> <call pos:line="99" pos:column="24">(<name pos:line="99" pos:column="25">unsigned<pos:position pos:line="99" pos:column="33"/></name>)<argument_list pos:line="99" pos:column="34">(<argument><expr><name><name pos:line="99" pos:column="35">here<pos:position pos:line="99" pos:column="39"/></name><operator pos:line="99" pos:column="39">.<pos:position pos:line="99" pos:column="40"/></operator><name pos:line="99" pos:column="40">val<pos:position pos:line="99" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><name pos:line="100" pos:column="17">op<pos:position pos:line="100" pos:column="19"/></name> <operator pos:line="100" pos:column="20">&amp;=<pos:position pos:line="100" pos:column="26"/></operator> <literal type="number" pos:line="100" pos:column="23">15<pos:position pos:line="100" pos:column="25"/></literal></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>                       <comment type="block" pos:line="100" pos:column="49">/* number of extra bits */</comment>
                <if pos:line="101" pos:column="17">if <condition pos:line="101" pos:column="20">(<expr><name pos:line="101" pos:column="21">bits<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">&lt;<pos:position pos:line="101" pos:column="30"/></operator> <name pos:line="101" pos:column="28">op<pos:position pos:line="101" pos:column="30"/></name></expr>)<pos:position pos:line="101" pos:column="31"/></condition><then pos:line="101" pos:column="31"> <block pos:line="101" pos:column="32">{
                    <expr_stmt><expr><name pos:line="102" pos:column="21">hold<pos:position pos:line="102" pos:column="25"/></name> <operator pos:line="102" pos:column="26">+=<pos:position pos:line="102" pos:column="28"/></operator> <call pos:line="102" pos:column="29">(<name pos:line="102" pos:column="30">unsigned<pos:position pos:line="102" pos:column="38"/></name> <name pos:line="102" pos:column="39">long<pos:position pos:line="102" pos:column="43"/></name>)<argument_list pos:line="102" pos:column="44">(<argument><expr><call><name pos:line="102" pos:column="45">PUP<pos:position pos:line="102" pos:column="48"/></name><argument_list pos:line="102" pos:column="48">(<argument><expr><name pos:line="102" pos:column="49">in<pos:position pos:line="102" pos:column="51"/></name></expr></argument>)<pos:position pos:line="102" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="53"/></argument_list></call> <operator pos:line="102" pos:column="54">&lt;&lt;<pos:position pos:line="102" pos:column="62"/></operator> <name pos:line="102" pos:column="57">bits<pos:position pos:line="102" pos:column="61"/></name></expr>;<pos:position pos:line="102" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="103" pos:column="21">bits<pos:position pos:line="103" pos:column="25"/></name> <operator pos:line="103" pos:column="26">+=<pos:position pos:line="103" pos:column="28"/></operator> <literal type="number" pos:line="103" pos:column="29">8<pos:position pos:line="103" pos:column="30"/></literal></expr>;<pos:position pos:line="103" pos:column="31"/></expr_stmt>
                    <if pos:line="104" pos:column="21">if <condition pos:line="104" pos:column="24">(<expr><name pos:line="104" pos:column="25">bits<pos:position pos:line="104" pos:column="29"/></name> <operator pos:line="104" pos:column="30">&lt;<pos:position pos:line="104" pos:column="34"/></operator> <name pos:line="104" pos:column="32">op<pos:position pos:line="104" pos:column="34"/></name></expr>)<pos:position pos:line="104" pos:column="35"/></condition><then pos:line="104" pos:column="35"> <block pos:line="104" pos:column="36">{
                        <expr_stmt><expr><name pos:line="105" pos:column="25">hold<pos:position pos:line="105" pos:column="29"/></name> <operator pos:line="105" pos:column="30">+=<pos:position pos:line="105" pos:column="32"/></operator> <call pos:line="105" pos:column="33">(<name pos:line="105" pos:column="34">unsigned<pos:position pos:line="105" pos:column="42"/></name> <name pos:line="105" pos:column="43">long<pos:position pos:line="105" pos:column="47"/></name>)<argument_list pos:line="105" pos:column="48">(<argument><expr><call><name pos:line="105" pos:column="49">PUP<pos:position pos:line="105" pos:column="52"/></name><argument_list pos:line="105" pos:column="52">(<argument><expr><name pos:line="105" pos:column="53">in<pos:position pos:line="105" pos:column="55"/></name></expr></argument>)<pos:position pos:line="105" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="105" pos:column="57"/></argument_list></call> <operator pos:line="105" pos:column="58">&lt;&lt;<pos:position pos:line="105" pos:column="66"/></operator> <name pos:line="105" pos:column="61">bits<pos:position pos:line="105" pos:column="65"/></name></expr>;<pos:position pos:line="105" pos:column="66"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="106" pos:column="25">bits<pos:position pos:line="106" pos:column="29"/></name> <operator pos:line="106" pos:column="30">+=<pos:position pos:line="106" pos:column="32"/></operator> <literal type="number" pos:line="106" pos:column="33">8<pos:position pos:line="106" pos:column="34"/></literal></expr>;<pos:position pos:line="106" pos:column="35"/></expr_stmt>
                    }<pos:position pos:line="107" pos:column="22"/></block></then></if>
                }<pos:position pos:line="108" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="109" pos:column="17">dist<pos:position pos:line="109" pos:column="21"/></name> <operator pos:line="109" pos:column="22">+=<pos:position pos:line="109" pos:column="24"/></operator> <operator pos:line="109" pos:column="25">(<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="26">unsigned<pos:position pos:line="109" pos:column="34"/></name><operator pos:line="109" pos:column="34">)<pos:position pos:line="109" pos:column="35"/></operator><name pos:line="109" pos:column="35">hold<pos:position pos:line="109" pos:column="39"/></name> <operator pos:line="109" pos:column="40">&amp;<pos:position pos:line="109" pos:column="45"/></operator> <operator pos:line="109" pos:column="42">(<pos:position pos:line="109" pos:column="43"/></operator><operator pos:line="109" pos:column="43">(<pos:position pos:line="109" pos:column="44"/></operator><literal type="number" pos:line="109" pos:column="44">1U<pos:position pos:line="109" pos:column="46"/></literal> <operator pos:line="109" pos:column="47">&lt;&lt;<pos:position pos:line="109" pos:column="55"/></operator> <name pos:line="109" pos:column="50">op<pos:position pos:line="109" pos:column="52"/></name><operator pos:line="109" pos:column="52">)<pos:position pos:line="109" pos:column="53"/></operator> <operator pos:line="109" pos:column="54">-<pos:position pos:line="109" pos:column="55"/></operator> <literal type="number" pos:line="109" pos:column="56">1<pos:position pos:line="109" pos:column="57"/></literal><operator pos:line="109" pos:column="57">)<pos:position pos:line="109" pos:column="58"/></operator></expr>;<pos:position pos:line="109" pos:column="59"/></expr_stmt>
<cpp:ifdef pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">ifdef<pos:position pos:line="110" pos:column="7"/></cpp:directive> <name pos:line="110" pos:column="8">INFLATE_STRICT<pos:position pos:line="110" pos:column="22"/></name></cpp:ifdef>
                <if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name pos:line="111" pos:column="21">dist<pos:position pos:line="111" pos:column="25"/></name> <operator pos:line="111" pos:column="26">&gt;<pos:position pos:line="111" pos:column="30"/></operator> <name pos:line="111" pos:column="28">dmax<pos:position pos:line="111" pos:column="32"/></name></expr>)<pos:position pos:line="111" pos:column="33"/></condition><then pos:line="111" pos:column="33"> <block pos:line="111" pos:column="34">{
                    <expr_stmt><expr><name><name pos:line="112" pos:column="21">strm<pos:position pos:line="112" pos:column="25"/></name><operator pos:line="112" pos:column="25">-&gt;<pos:position pos:line="112" pos:column="30"/></operator><name pos:line="112" pos:column="27">msg<pos:position pos:line="112" pos:column="30"/></name></name> <operator pos:line="112" pos:column="31">=<pos:position pos:line="112" pos:column="32"/></operator> <operator pos:line="112" pos:column="33">(<pos:position pos:line="112" pos:column="34"/></operator><name pos:line="112" pos:column="34">char<pos:position pos:line="112" pos:column="38"/></name> <operator pos:line="112" pos:column="39">*<pos:position pos:line="112" pos:column="40"/></operator><operator pos:line="112" pos:column="40">)<pos:position pos:line="112" pos:column="41"/></operator><literal type="string" pos:line="112" pos:column="41">"invalid distance too far back"<pos:position pos:line="112" pos:column="72"/></literal></expr>;<pos:position pos:line="112" pos:column="73"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="113" pos:column="21">state<pos:position pos:line="113" pos:column="26"/></name><operator pos:line="113" pos:column="26">-&gt;<pos:position pos:line="113" pos:column="31"/></operator><name pos:line="113" pos:column="28">mode<pos:position pos:line="113" pos:column="32"/></name></name> <operator pos:line="113" pos:column="33">=<pos:position pos:line="113" pos:column="34"/></operator> <name pos:line="113" pos:column="35">BAD<pos:position pos:line="113" pos:column="38"/></name></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt>
                    <break pos:line="114" pos:column="21">break;<pos:position pos:line="114" pos:column="27"/></break>
                }<pos:position pos:line="115" pos:column="18"/></block></then></if>
<cpp:endif pos:line="116" pos:column="1">#<cpp:directive pos:line="116" pos:column="2">endif<pos:position pos:line="116" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><name pos:line="117" pos:column="17">hold<pos:position pos:line="117" pos:column="21"/></name> <operator pos:line="117" pos:column="22">&gt;&gt;=<pos:position pos:line="117" pos:column="31"/></operator> <name pos:line="117" pos:column="26">op<pos:position pos:line="117" pos:column="28"/></name></expr>;<pos:position pos:line="117" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="118" pos:column="17">bits<pos:position pos:line="118" pos:column="21"/></name> <operator pos:line="118" pos:column="22">-=<pos:position pos:line="118" pos:column="24"/></operator> <name pos:line="118" pos:column="25">op<pos:position pos:line="118" pos:column="27"/></name></expr>;<pos:position pos:line="118" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">Tracevv<pos:position pos:line="119" pos:column="24"/></name><argument_list pos:line="119" pos:column="24">(<argument><expr><operator pos:line="119" pos:column="25">(<pos:position pos:line="119" pos:column="26"/></operator><name pos:line="119" pos:column="26">stderr<pos:position pos:line="119" pos:column="32"/></name><operator pos:line="119" pos:column="32">,<pos:position pos:line="119" pos:column="33"/></operator> <literal type="string" pos:line="119" pos:column="34">"inflate:         distance %u\n"<pos:position pos:line="119" pos:column="66"/></literal><operator pos:line="119" pos:column="66">,<pos:position pos:line="119" pos:column="67"/></operator> <name pos:line="119" pos:column="68">dist<pos:position pos:line="119" pos:column="72"/></name><operator pos:line="119" pos:column="72">)<pos:position pos:line="119" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="119" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="75"/></expr_stmt>
                <expr_stmt><expr><name pos:line="120" pos:column="17">op<pos:position pos:line="120" pos:column="19"/></name> <operator pos:line="120" pos:column="20">=<pos:position pos:line="120" pos:column="21"/></operator> <call pos:line="120" pos:column="22">(<name pos:line="120" pos:column="23">unsigned<pos:position pos:line="120" pos:column="31"/></name>)<argument_list pos:line="120" pos:column="32">(<argument><expr><name pos:line="120" pos:column="33">out<pos:position pos:line="120" pos:column="36"/></name> <operator pos:line="120" pos:column="37">-<pos:position pos:line="120" pos:column="38"/></operator> <name pos:line="120" pos:column="39">beg<pos:position pos:line="120" pos:column="42"/></name></expr></argument>)<pos:position pos:line="120" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="44"/></expr_stmt>     <comment type="block" pos:line="120" pos:column="49">/* max distance in output */</comment>
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name pos:line="121" pos:column="21">dist<pos:position pos:line="121" pos:column="25"/></name> <operator pos:line="121" pos:column="26">&gt;<pos:position pos:line="121" pos:column="30"/></operator> <name pos:line="121" pos:column="28">op<pos:position pos:line="121" pos:column="30"/></name></expr>)<pos:position pos:line="121" pos:column="31"/></condition><then pos:line="121" pos:column="31"> <block pos:line="121" pos:column="32">{                <comment type="block" pos:line="121" pos:column="49">/* see if copy from window */</comment>
                    <expr_stmt><expr><name pos:line="122" pos:column="21">op<pos:position pos:line="122" pos:column="23"/></name> <operator pos:line="122" pos:column="24">=<pos:position pos:line="122" pos:column="25"/></operator> <name pos:line="122" pos:column="26">dist<pos:position pos:line="122" pos:column="30"/></name> <operator pos:line="122" pos:column="31">-<pos:position pos:line="122" pos:column="32"/></operator> <name pos:line="122" pos:column="33">op<pos:position pos:line="122" pos:column="35"/></name></expr>;<pos:position pos:line="122" pos:column="36"/></expr_stmt>             <comment type="block" pos:line="122" pos:column="49">/* distance back in window */</comment>
                    <if pos:line="123" pos:column="21">if <condition pos:line="123" pos:column="24">(<expr><name pos:line="123" pos:column="25">op<pos:position pos:line="123" pos:column="27"/></name> <operator pos:line="123" pos:column="28">&gt;<pos:position pos:line="123" pos:column="32"/></operator> <name pos:line="123" pos:column="30">whave<pos:position pos:line="123" pos:column="35"/></name></expr>)<pos:position pos:line="123" pos:column="36"/></condition><then pos:line="123" pos:column="36"> <block pos:line="123" pos:column="37">{
                        <if pos:line="124" pos:column="25">if <condition pos:line="124" pos:column="28">(<expr><name><name pos:line="124" pos:column="29">state<pos:position pos:line="124" pos:column="34"/></name><operator pos:line="124" pos:column="34">-&gt;<pos:position pos:line="124" pos:column="39"/></operator><name pos:line="124" pos:column="36">sane<pos:position pos:line="124" pos:column="40"/></name></name></expr>)<pos:position pos:line="124" pos:column="41"/></condition><then pos:line="124" pos:column="41"> <block pos:line="124" pos:column="42">{
                            <expr_stmt><expr><name><name pos:line="125" pos:column="29">strm<pos:position pos:line="125" pos:column="33"/></name><operator pos:line="125" pos:column="33">-&gt;<pos:position pos:line="125" pos:column="38"/></operator><name pos:line="125" pos:column="35">msg<pos:position pos:line="125" pos:column="38"/></name></name> <operator pos:line="125" pos:column="39">=<pos:position pos:line="125" pos:column="40"/></operator>
                                <operator pos:line="126" pos:column="33">(<pos:position pos:line="126" pos:column="34"/></operator><name pos:line="126" pos:column="34">char<pos:position pos:line="126" pos:column="38"/></name> <operator pos:line="126" pos:column="39">*<pos:position pos:line="126" pos:column="40"/></operator><operator pos:line="126" pos:column="40">)<pos:position pos:line="126" pos:column="41"/></operator><literal type="string" pos:line="126" pos:column="41">"invalid distance too far back"<pos:position pos:line="126" pos:column="72"/></literal></expr>;<pos:position pos:line="126" pos:column="73"/></expr_stmt>
                            <expr_stmt><expr><name><name pos:line="127" pos:column="29">state<pos:position pos:line="127" pos:column="34"/></name><operator pos:line="127" pos:column="34">-&gt;<pos:position pos:line="127" pos:column="39"/></operator><name pos:line="127" pos:column="36">mode<pos:position pos:line="127" pos:column="40"/></name></name> <operator pos:line="127" pos:column="41">=<pos:position pos:line="127" pos:column="42"/></operator> <name pos:line="127" pos:column="43">BAD<pos:position pos:line="127" pos:column="46"/></name></expr>;<pos:position pos:line="127" pos:column="47"/></expr_stmt>
                            <break pos:line="128" pos:column="29">break;<pos:position pos:line="128" pos:column="35"/></break>
                        }<pos:position pos:line="129" pos:column="26"/></block></then></if>
<cpp:ifdef pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">ifdef<pos:position pos:line="130" pos:column="7"/></cpp:directive> <name pos:line="130" pos:column="8">INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR<pos:position pos:line="130" pos:column="50"/></name></cpp:ifdef>
                        <if pos:line="131" pos:column="25">if <condition pos:line="131" pos:column="28">(<expr><name pos:line="131" pos:column="29">len<pos:position pos:line="131" pos:column="32"/></name> <operator pos:line="131" pos:column="33">&lt;=<pos:position pos:line="131" pos:column="38"/></operator> <name pos:line="131" pos:column="36">op<pos:position pos:line="131" pos:column="38"/></name> <operator pos:line="131" pos:column="39">-<pos:position pos:line="131" pos:column="40"/></operator> <name pos:line="131" pos:column="41">whave<pos:position pos:line="131" pos:column="46"/></name></expr>)<pos:position pos:line="131" pos:column="47"/></condition><then pos:line="131" pos:column="47"> <block pos:line="131" pos:column="48">{
                            <do pos:line="132" pos:column="29">do <block pos:line="132" pos:column="32">{
                                <expr_stmt><expr><call><name pos:line="133" pos:column="33">PUP<pos:position pos:line="133" pos:column="36"/></name><argument_list pos:line="133" pos:column="36">(<argument><expr><name pos:line="133" pos:column="37">out<pos:position pos:line="133" pos:column="40"/></name></expr></argument>)<pos:position pos:line="133" pos:column="41"/></argument_list></call> <operator pos:line="133" pos:column="42">=<pos:position pos:line="133" pos:column="43"/></operator> <literal type="number" pos:line="133" pos:column="44">0<pos:position pos:line="133" pos:column="45"/></literal></expr>;<pos:position pos:line="133" pos:column="46"/></expr_stmt>
                            }<pos:position pos:line="134" pos:column="30"/></block> while <condition pos:line="134" pos:column="37">(<expr><operator pos:line="134" pos:column="38">--<pos:position pos:line="134" pos:column="40"/></operator><name pos:line="134" pos:column="40">len<pos:position pos:line="134" pos:column="43"/></name></expr>)<pos:position pos:line="134" pos:column="44"/></condition>;<pos:position pos:line="134" pos:column="45"/></do>
                            <continue pos:line="135" pos:column="29">continue;<pos:position pos:line="135" pos:column="38"/></continue>
                        }<pos:position pos:line="136" pos:column="26"/></block></then></if>
                        <expr_stmt><expr><name pos:line="137" pos:column="25">len<pos:position pos:line="137" pos:column="28"/></name> <operator pos:line="137" pos:column="29">-=<pos:position pos:line="137" pos:column="31"/></operator> <name pos:line="137" pos:column="32">op<pos:position pos:line="137" pos:column="34"/></name> <operator pos:line="137" pos:column="35">-<pos:position pos:line="137" pos:column="36"/></operator> <name pos:line="137" pos:column="37">whave<pos:position pos:line="137" pos:column="42"/></name></expr>;<pos:position pos:line="137" pos:column="43"/></expr_stmt>
                        <do pos:line="138" pos:column="25">do <block pos:line="138" pos:column="28">{
                            <expr_stmt><expr><call><name pos:line="139" pos:column="29">PUP<pos:position pos:line="139" pos:column="32"/></name><argument_list pos:line="139" pos:column="32">(<argument><expr><name pos:line="139" pos:column="33">out<pos:position pos:line="139" pos:column="36"/></name></expr></argument>)<pos:position pos:line="139" pos:column="37"/></argument_list></call> <operator pos:line="139" pos:column="38">=<pos:position pos:line="139" pos:column="39"/></operator> <literal type="number" pos:line="139" pos:column="40">0<pos:position pos:line="139" pos:column="41"/></literal></expr>;<pos:position pos:line="139" pos:column="42"/></expr_stmt>
                        }<pos:position pos:line="140" pos:column="26"/></block> while <condition pos:line="140" pos:column="33">(<expr><operator pos:line="140" pos:column="34">--<pos:position pos:line="140" pos:column="36"/></operator><name pos:line="140" pos:column="36">op<pos:position pos:line="140" pos:column="38"/></name> <operator pos:line="140" pos:column="39">&gt;<pos:position pos:line="140" pos:column="43"/></operator> <name pos:line="140" pos:column="41">whave<pos:position pos:line="140" pos:column="46"/></name></expr>)<pos:position pos:line="140" pos:column="47"/></condition>;<pos:position pos:line="140" pos:column="48"/></do>
                        <if pos:line="141" pos:column="25">if <condition pos:line="141" pos:column="28">(<expr><name pos:line="141" pos:column="29">op<pos:position pos:line="141" pos:column="31"/></name> <operator pos:line="141" pos:column="32">==<pos:position pos:line="141" pos:column="34"/></operator> <literal type="number" pos:line="141" pos:column="35">0<pos:position pos:line="141" pos:column="36"/></literal></expr>)<pos:position pos:line="141" pos:column="37"/></condition><then pos:line="141" pos:column="37"> <block pos:line="141" pos:column="38">{
                            <expr_stmt><expr><name pos:line="142" pos:column="29">from<pos:position pos:line="142" pos:column="33"/></name> <operator pos:line="142" pos:column="34">=<pos:position pos:line="142" pos:column="35"/></operator> <name pos:line="142" pos:column="36">out<pos:position pos:line="142" pos:column="39"/></name> <operator pos:line="142" pos:column="40">-<pos:position pos:line="142" pos:column="41"/></operator> <name pos:line="142" pos:column="42">dist<pos:position pos:line="142" pos:column="46"/></name></expr>;<pos:position pos:line="142" pos:column="47"/></expr_stmt>
                            <do pos:line="143" pos:column="29">do <block pos:line="143" pos:column="32">{
                                <expr_stmt><expr><call><name pos:line="144" pos:column="33">PUP<pos:position pos:line="144" pos:column="36"/></name><argument_list pos:line="144" pos:column="36">(<argument><expr><name pos:line="144" pos:column="37">out<pos:position pos:line="144" pos:column="40"/></name></expr></argument>)<pos:position pos:line="144" pos:column="41"/></argument_list></call> <operator pos:line="144" pos:column="42">=<pos:position pos:line="144" pos:column="43"/></operator> <call><name pos:line="144" pos:column="44">PUP<pos:position pos:line="144" pos:column="47"/></name><argument_list pos:line="144" pos:column="47">(<argument><expr><name pos:line="144" pos:column="48">from<pos:position pos:line="144" pos:column="52"/></name></expr></argument>)<pos:position pos:line="144" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="54"/></expr_stmt>
                            }<pos:position pos:line="145" pos:column="30"/></block> while <condition pos:line="145" pos:column="37">(<expr><operator pos:line="145" pos:column="38">--<pos:position pos:line="145" pos:column="40"/></operator><name pos:line="145" pos:column="40">len<pos:position pos:line="145" pos:column="43"/></name></expr>)<pos:position pos:line="145" pos:column="44"/></condition>;<pos:position pos:line="145" pos:column="45"/></do>
                            <continue pos:line="146" pos:column="29">continue;<pos:position pos:line="146" pos:column="38"/></continue>
                        }<pos:position pos:line="147" pos:column="26"/></block></then></if>
<cpp:endif pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">endif<pos:position pos:line="148" pos:column="7"/></cpp:directive></cpp:endif>
                    }<pos:position pos:line="149" pos:column="22"/></block></then></if>
                    <expr_stmt><expr><name pos:line="150" pos:column="21">from<pos:position pos:line="150" pos:column="25"/></name> <operator pos:line="150" pos:column="26">=<pos:position pos:line="150" pos:column="27"/></operator> <name pos:line="150" pos:column="28">window<pos:position pos:line="150" pos:column="34"/></name> <operator pos:line="150" pos:column="35">-<pos:position pos:line="150" pos:column="36"/></operator> <name pos:line="150" pos:column="37">OFF<pos:position pos:line="150" pos:column="40"/></name></expr>;<pos:position pos:line="150" pos:column="41"/></expr_stmt>
                    <if pos:line="151" pos:column="21">if <condition pos:line="151" pos:column="24">(<expr><name pos:line="151" pos:column="25">wnext<pos:position pos:line="151" pos:column="30"/></name> <operator pos:line="151" pos:column="31">==<pos:position pos:line="151" pos:column="33"/></operator> <literal type="number" pos:line="151" pos:column="34">0<pos:position pos:line="151" pos:column="35"/></literal></expr>)<pos:position pos:line="151" pos:column="36"/></condition><then pos:line="151" pos:column="36"> <block pos:line="151" pos:column="37">{           <comment type="block" pos:line="151" pos:column="49">/* very common case */</comment>
                        <expr_stmt><expr><name pos:line="152" pos:column="25">from<pos:position pos:line="152" pos:column="29"/></name> <operator pos:line="152" pos:column="30">+=<pos:position pos:line="152" pos:column="32"/></operator> <name pos:line="152" pos:column="33">wsize<pos:position pos:line="152" pos:column="38"/></name> <operator pos:line="152" pos:column="39">-<pos:position pos:line="152" pos:column="40"/></operator> <name pos:line="152" pos:column="41">op<pos:position pos:line="152" pos:column="43"/></name></expr>;<pos:position pos:line="152" pos:column="44"/></expr_stmt>
                        <if pos:line="153" pos:column="25">if <condition pos:line="153" pos:column="28">(<expr><name pos:line="153" pos:column="29">op<pos:position pos:line="153" pos:column="31"/></name> <operator pos:line="153" pos:column="32">&lt;<pos:position pos:line="153" pos:column="36"/></operator> <name pos:line="153" pos:column="34">len<pos:position pos:line="153" pos:column="37"/></name></expr>)<pos:position pos:line="153" pos:column="38"/></condition><then pos:line="153" pos:column="38"> <block pos:line="153" pos:column="39">{         <comment type="block" pos:line="153" pos:column="49">/* some from window */</comment>
                            <expr_stmt><expr><name pos:line="154" pos:column="29">len<pos:position pos:line="154" pos:column="32"/></name> <operator pos:line="154" pos:column="33">-=<pos:position pos:line="154" pos:column="35"/></operator> <name pos:line="154" pos:column="36">op<pos:position pos:line="154" pos:column="38"/></name></expr>;<pos:position pos:line="154" pos:column="39"/></expr_stmt>
                            <do pos:line="155" pos:column="29">do <block pos:line="155" pos:column="32">{
                                <expr_stmt><expr><call><name pos:line="156" pos:column="33">PUP<pos:position pos:line="156" pos:column="36"/></name><argument_list pos:line="156" pos:column="36">(<argument><expr><name pos:line="156" pos:column="37">out<pos:position pos:line="156" pos:column="40"/></name></expr></argument>)<pos:position pos:line="156" pos:column="41"/></argument_list></call> <operator pos:line="156" pos:column="42">=<pos:position pos:line="156" pos:column="43"/></operator> <call><name pos:line="156" pos:column="44">PUP<pos:position pos:line="156" pos:column="47"/></name><argument_list pos:line="156" pos:column="47">(<argument><expr><name pos:line="156" pos:column="48">from<pos:position pos:line="156" pos:column="52"/></name></expr></argument>)<pos:position pos:line="156" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="54"/></expr_stmt>
                            }<pos:position pos:line="157" pos:column="30"/></block> while <condition pos:line="157" pos:column="37">(<expr><operator pos:line="157" pos:column="38">--<pos:position pos:line="157" pos:column="40"/></operator><name pos:line="157" pos:column="40">op<pos:position pos:line="157" pos:column="42"/></name></expr>)<pos:position pos:line="157" pos:column="43"/></condition>;<pos:position pos:line="157" pos:column="44"/></do>
                            <expr_stmt><expr><name pos:line="158" pos:column="29">from<pos:position pos:line="158" pos:column="33"/></name> <operator pos:line="158" pos:column="34">=<pos:position pos:line="158" pos:column="35"/></operator> <name pos:line="158" pos:column="36">out<pos:position pos:line="158" pos:column="39"/></name> <operator pos:line="158" pos:column="40">-<pos:position pos:line="158" pos:column="41"/></operator> <name pos:line="158" pos:column="42">dist<pos:position pos:line="158" pos:column="46"/></name></expr>;<pos:position pos:line="158" pos:column="47"/></expr_stmt>  <comment type="block" pos:line="158" pos:column="49">/* rest from output */</comment>
                        }<pos:position pos:line="159" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="160" pos:column="22"/></block></then>
                    <elseif pos:line="161" pos:column="21">else <if pos:line="161" pos:column="26">if <condition pos:line="161" pos:column="29">(<expr><name pos:line="161" pos:column="30">wnext<pos:position pos:line="161" pos:column="35"/></name> <operator pos:line="161" pos:column="36">&lt;<pos:position pos:line="161" pos:column="40"/></operator> <name pos:line="161" pos:column="38">op<pos:position pos:line="161" pos:column="40"/></name></expr>)<pos:position pos:line="161" pos:column="41"/></condition><then pos:line="161" pos:column="41"> <block pos:line="161" pos:column="42">{      <comment type="block" pos:line="161" pos:column="49">/* wrap around window */</comment>
                        <expr_stmt><expr><name pos:line="162" pos:column="25">from<pos:position pos:line="162" pos:column="29"/></name> <operator pos:line="162" pos:column="30">+=<pos:position pos:line="162" pos:column="32"/></operator> <name pos:line="162" pos:column="33">wsize<pos:position pos:line="162" pos:column="38"/></name> <operator pos:line="162" pos:column="39">+<pos:position pos:line="162" pos:column="40"/></operator> <name pos:line="162" pos:column="41">wnext<pos:position pos:line="162" pos:column="46"/></name> <operator pos:line="162" pos:column="47">-<pos:position pos:line="162" pos:column="48"/></operator> <name pos:line="162" pos:column="49">op<pos:position pos:line="162" pos:column="51"/></name></expr>;<pos:position pos:line="162" pos:column="52"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="163" pos:column="25">op<pos:position pos:line="163" pos:column="27"/></name> <operator pos:line="163" pos:column="28">-=<pos:position pos:line="163" pos:column="30"/></operator> <name pos:line="163" pos:column="31">wnext<pos:position pos:line="163" pos:column="36"/></name></expr>;<pos:position pos:line="163" pos:column="37"/></expr_stmt>
                        <if pos:line="164" pos:column="25">if <condition pos:line="164" pos:column="28">(<expr><name pos:line="164" pos:column="29">op<pos:position pos:line="164" pos:column="31"/></name> <operator pos:line="164" pos:column="32">&lt;<pos:position pos:line="164" pos:column="36"/></operator> <name pos:line="164" pos:column="34">len<pos:position pos:line="164" pos:column="37"/></name></expr>)<pos:position pos:line="164" pos:column="38"/></condition><then pos:line="164" pos:column="38"> <block pos:line="164" pos:column="39">{         <comment type="block" pos:line="164" pos:column="49">/* some from end of window */</comment>
                            <expr_stmt><expr><name pos:line="165" pos:column="29">len<pos:position pos:line="165" pos:column="32"/></name> <operator pos:line="165" pos:column="33">-=<pos:position pos:line="165" pos:column="35"/></operator> <name pos:line="165" pos:column="36">op<pos:position pos:line="165" pos:column="38"/></name></expr>;<pos:position pos:line="165" pos:column="39"/></expr_stmt>
                            <do pos:line="166" pos:column="29">do <block pos:line="166" pos:column="32">{
                                <expr_stmt><expr><call><name pos:line="167" pos:column="33">PUP<pos:position pos:line="167" pos:column="36"/></name><argument_list pos:line="167" pos:column="36">(<argument><expr><name pos:line="167" pos:column="37">out<pos:position pos:line="167" pos:column="40"/></name></expr></argument>)<pos:position pos:line="167" pos:column="41"/></argument_list></call> <operator pos:line="167" pos:column="42">=<pos:position pos:line="167" pos:column="43"/></operator> <call><name pos:line="167" pos:column="44">PUP<pos:position pos:line="167" pos:column="47"/></name><argument_list pos:line="167" pos:column="47">(<argument><expr><name pos:line="167" pos:column="48">from<pos:position pos:line="167" pos:column="52"/></name></expr></argument>)<pos:position pos:line="167" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="54"/></expr_stmt>
                            }<pos:position pos:line="168" pos:column="30"/></block> while <condition pos:line="168" pos:column="37">(<expr><operator pos:line="168" pos:column="38">--<pos:position pos:line="168" pos:column="40"/></operator><name pos:line="168" pos:column="40">op<pos:position pos:line="168" pos:column="42"/></name></expr>)<pos:position pos:line="168" pos:column="43"/></condition>;<pos:position pos:line="168" pos:column="44"/></do>
                            <expr_stmt><expr><name pos:line="169" pos:column="29">from<pos:position pos:line="169" pos:column="33"/></name> <operator pos:line="169" pos:column="34">=<pos:position pos:line="169" pos:column="35"/></operator> <name pos:line="169" pos:column="36">window<pos:position pos:line="169" pos:column="42"/></name> <operator pos:line="169" pos:column="43">-<pos:position pos:line="169" pos:column="44"/></operator> <name pos:line="169" pos:column="45">OFF<pos:position pos:line="169" pos:column="48"/></name></expr>;<pos:position pos:line="169" pos:column="49"/></expr_stmt>
                            <if pos:line="170" pos:column="29">if <condition pos:line="170" pos:column="32">(<expr><name pos:line="170" pos:column="33">wnext<pos:position pos:line="170" pos:column="38"/></name> <operator pos:line="170" pos:column="39">&lt;<pos:position pos:line="170" pos:column="43"/></operator> <name pos:line="170" pos:column="41">len<pos:position pos:line="170" pos:column="44"/></name></expr>)<pos:position pos:line="170" pos:column="45"/></condition><then pos:line="170" pos:column="45"> <block pos:line="170" pos:column="46">{  <comment type="block" pos:line="170" pos:column="49">/* some from start of window */</comment>
                                <expr_stmt><expr><name pos:line="171" pos:column="33">op<pos:position pos:line="171" pos:column="35"/></name> <operator pos:line="171" pos:column="36">=<pos:position pos:line="171" pos:column="37"/></operator> <name pos:line="171" pos:column="38">wnext<pos:position pos:line="171" pos:column="43"/></name></expr>;<pos:position pos:line="171" pos:column="44"/></expr_stmt>
                                <expr_stmt><expr><name pos:line="172" pos:column="33">len<pos:position pos:line="172" pos:column="36"/></name> <operator pos:line="172" pos:column="37">-=<pos:position pos:line="172" pos:column="39"/></operator> <name pos:line="172" pos:column="40">op<pos:position pos:line="172" pos:column="42"/></name></expr>;<pos:position pos:line="172" pos:column="43"/></expr_stmt>
                                <do pos:line="173" pos:column="33">do <block pos:line="173" pos:column="36">{
                                    <expr_stmt><expr><call><name pos:line="174" pos:column="37">PUP<pos:position pos:line="174" pos:column="40"/></name><argument_list pos:line="174" pos:column="40">(<argument><expr><name pos:line="174" pos:column="41">out<pos:position pos:line="174" pos:column="44"/></name></expr></argument>)<pos:position pos:line="174" pos:column="45"/></argument_list></call> <operator pos:line="174" pos:column="46">=<pos:position pos:line="174" pos:column="47"/></operator> <call><name pos:line="174" pos:column="48">PUP<pos:position pos:line="174" pos:column="51"/></name><argument_list pos:line="174" pos:column="51">(<argument><expr><name pos:line="174" pos:column="52">from<pos:position pos:line="174" pos:column="56"/></name></expr></argument>)<pos:position pos:line="174" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="58"/></expr_stmt>
                                }<pos:position pos:line="175" pos:column="34"/></block> while <condition pos:line="175" pos:column="41">(<expr><operator pos:line="175" pos:column="42">--<pos:position pos:line="175" pos:column="44"/></operator><name pos:line="175" pos:column="44">op<pos:position pos:line="175" pos:column="46"/></name></expr>)<pos:position pos:line="175" pos:column="47"/></condition>;<pos:position pos:line="175" pos:column="48"/></do>
                                <expr_stmt><expr><name pos:line="176" pos:column="33">from<pos:position pos:line="176" pos:column="37"/></name> <operator pos:line="176" pos:column="38">=<pos:position pos:line="176" pos:column="39"/></operator> <name pos:line="176" pos:column="40">out<pos:position pos:line="176" pos:column="43"/></name> <operator pos:line="176" pos:column="44">-<pos:position pos:line="176" pos:column="45"/></operator> <name pos:line="176" pos:column="46">dist<pos:position pos:line="176" pos:column="50"/></name></expr>;<pos:position pos:line="176" pos:column="51"/></expr_stmt>      <comment type="block" pos:line="176" pos:column="57">/* rest from output */</comment>
                            }<pos:position pos:line="177" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="178" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="179" pos:column="22"/></block></then></if></elseif>
                    <else pos:line="180" pos:column="21">else <block pos:line="180" pos:column="26">{                      <comment type="block" pos:line="180" pos:column="49">/* contiguous in window */</comment>
                        <expr_stmt><expr><name pos:line="181" pos:column="25">from<pos:position pos:line="181" pos:column="29"/></name> <operator pos:line="181" pos:column="30">+=<pos:position pos:line="181" pos:column="32"/></operator> <name pos:line="181" pos:column="33">wnext<pos:position pos:line="181" pos:column="38"/></name> <operator pos:line="181" pos:column="39">-<pos:position pos:line="181" pos:column="40"/></operator> <name pos:line="181" pos:column="41">op<pos:position pos:line="181" pos:column="43"/></name></expr>;<pos:position pos:line="181" pos:column="44"/></expr_stmt>
                        <if pos:line="182" pos:column="25">if <condition pos:line="182" pos:column="28">(<expr><name pos:line="182" pos:column="29">op<pos:position pos:line="182" pos:column="31"/></name> <operator pos:line="182" pos:column="32">&lt;<pos:position pos:line="182" pos:column="36"/></operator> <name pos:line="182" pos:column="34">len<pos:position pos:line="182" pos:column="37"/></name></expr>)<pos:position pos:line="182" pos:column="38"/></condition><then pos:line="182" pos:column="38"> <block pos:line="182" pos:column="39">{         <comment type="block" pos:line="182" pos:column="49">/* some from window */</comment>
                            <expr_stmt><expr><name pos:line="183" pos:column="29">len<pos:position pos:line="183" pos:column="32"/></name> <operator pos:line="183" pos:column="33">-=<pos:position pos:line="183" pos:column="35"/></operator> <name pos:line="183" pos:column="36">op<pos:position pos:line="183" pos:column="38"/></name></expr>;<pos:position pos:line="183" pos:column="39"/></expr_stmt>
                            <do pos:line="184" pos:column="29">do <block pos:line="184" pos:column="32">{
                                <expr_stmt><expr><call><name pos:line="185" pos:column="33">PUP<pos:position pos:line="185" pos:column="36"/></name><argument_list pos:line="185" pos:column="36">(<argument><expr><name pos:line="185" pos:column="37">out<pos:position pos:line="185" pos:column="40"/></name></expr></argument>)<pos:position pos:line="185" pos:column="41"/></argument_list></call> <operator pos:line="185" pos:column="42">=<pos:position pos:line="185" pos:column="43"/></operator> <call><name pos:line="185" pos:column="44">PUP<pos:position pos:line="185" pos:column="47"/></name><argument_list pos:line="185" pos:column="47">(<argument><expr><name pos:line="185" pos:column="48">from<pos:position pos:line="185" pos:column="52"/></name></expr></argument>)<pos:position pos:line="185" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="54"/></expr_stmt>
                            }<pos:position pos:line="186" pos:column="30"/></block> while <condition pos:line="186" pos:column="37">(<expr><operator pos:line="186" pos:column="38">--<pos:position pos:line="186" pos:column="40"/></operator><name pos:line="186" pos:column="40">op<pos:position pos:line="186" pos:column="42"/></name></expr>)<pos:position pos:line="186" pos:column="43"/></condition>;<pos:position pos:line="186" pos:column="44"/></do>
                            <expr_stmt><expr><name pos:line="187" pos:column="29">from<pos:position pos:line="187" pos:column="33"/></name> <operator pos:line="187" pos:column="34">=<pos:position pos:line="187" pos:column="35"/></operator> <name pos:line="187" pos:column="36">out<pos:position pos:line="187" pos:column="39"/></name> <operator pos:line="187" pos:column="40">-<pos:position pos:line="187" pos:column="41"/></operator> <name pos:line="187" pos:column="42">dist<pos:position pos:line="187" pos:column="46"/></name></expr>;<pos:position pos:line="187" pos:column="47"/></expr_stmt>  <comment type="block" pos:line="187" pos:column="49">/* rest from output */</comment>
                        }<pos:position pos:line="188" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="189" pos:column="22"/></block></else></if>
                    <while pos:line="190" pos:column="21">while <condition pos:line="190" pos:column="27">(<expr><name pos:line="190" pos:column="28">len<pos:position pos:line="190" pos:column="31"/></name> <operator pos:line="190" pos:column="32">&gt;<pos:position pos:line="190" pos:column="36"/></operator> <literal type="number" pos:line="190" pos:column="34">2<pos:position pos:line="190" pos:column="35"/></literal></expr>)<pos:position pos:line="190" pos:column="36"/></condition> <block pos:line="190" pos:column="37">{
                        <expr_stmt><expr><call><name pos:line="191" pos:column="25">PUP<pos:position pos:line="191" pos:column="28"/></name><argument_list pos:line="191" pos:column="28">(<argument><expr><name pos:line="191" pos:column="29">out<pos:position pos:line="191" pos:column="32"/></name></expr></argument>)<pos:position pos:line="191" pos:column="33"/></argument_list></call> <operator pos:line="191" pos:column="34">=<pos:position pos:line="191" pos:column="35"/></operator> <call><name pos:line="191" pos:column="36">PUP<pos:position pos:line="191" pos:column="39"/></name><argument_list pos:line="191" pos:column="39">(<argument><expr><name pos:line="191" pos:column="40">from<pos:position pos:line="191" pos:column="44"/></name></expr></argument>)<pos:position pos:line="191" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="46"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="192" pos:column="25">PUP<pos:position pos:line="192" pos:column="28"/></name><argument_list pos:line="192" pos:column="28">(<argument><expr><name pos:line="192" pos:column="29">out<pos:position pos:line="192" pos:column="32"/></name></expr></argument>)<pos:position pos:line="192" pos:column="33"/></argument_list></call> <operator pos:line="192" pos:column="34">=<pos:position pos:line="192" pos:column="35"/></operator> <call><name pos:line="192" pos:column="36">PUP<pos:position pos:line="192" pos:column="39"/></name><argument_list pos:line="192" pos:column="39">(<argument><expr><name pos:line="192" pos:column="40">from<pos:position pos:line="192" pos:column="44"/></name></expr></argument>)<pos:position pos:line="192" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="46"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="193" pos:column="25">PUP<pos:position pos:line="193" pos:column="28"/></name><argument_list pos:line="193" pos:column="28">(<argument><expr><name pos:line="193" pos:column="29">out<pos:position pos:line="193" pos:column="32"/></name></expr></argument>)<pos:position pos:line="193" pos:column="33"/></argument_list></call> <operator pos:line="193" pos:column="34">=<pos:position pos:line="193" pos:column="35"/></operator> <call><name pos:line="193" pos:column="36">PUP<pos:position pos:line="193" pos:column="39"/></name><argument_list pos:line="193" pos:column="39">(<argument><expr><name pos:line="193" pos:column="40">from<pos:position pos:line="193" pos:column="44"/></name></expr></argument>)<pos:position pos:line="193" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="46"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="194" pos:column="25">len<pos:position pos:line="194" pos:column="28"/></name> <operator pos:line="194" pos:column="29">-=<pos:position pos:line="194" pos:column="31"/></operator> <literal type="number" pos:line="194" pos:column="32">3<pos:position pos:line="194" pos:column="33"/></literal></expr>;<pos:position pos:line="194" pos:column="34"/></expr_stmt>
                    }<pos:position pos:line="195" pos:column="22"/></block></while>
                    <if pos:line="196" pos:column="21">if <condition pos:line="196" pos:column="24">(<expr><name pos:line="196" pos:column="25">len<pos:position pos:line="196" pos:column="28"/></name></expr>)<pos:position pos:line="196" pos:column="29"/></condition><then pos:line="196" pos:column="29"> <block pos:line="196" pos:column="30">{
                        <expr_stmt><expr><call><name pos:line="197" pos:column="25">PUP<pos:position pos:line="197" pos:column="28"/></name><argument_list pos:line="197" pos:column="28">(<argument><expr><name pos:line="197" pos:column="29">out<pos:position pos:line="197" pos:column="32"/></name></expr></argument>)<pos:position pos:line="197" pos:column="33"/></argument_list></call> <operator pos:line="197" pos:column="34">=<pos:position pos:line="197" pos:column="35"/></operator> <call><name pos:line="197" pos:column="36">PUP<pos:position pos:line="197" pos:column="39"/></name><argument_list pos:line="197" pos:column="39">(<argument><expr><name pos:line="197" pos:column="40">from<pos:position pos:line="197" pos:column="44"/></name></expr></argument>)<pos:position pos:line="197" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="46"/></expr_stmt>
                        <if pos:line="198" pos:column="25">if <condition pos:line="198" pos:column="28">(<expr><name pos:line="198" pos:column="29">len<pos:position pos:line="198" pos:column="32"/></name> <operator pos:line="198" pos:column="33">&gt;<pos:position pos:line="198" pos:column="37"/></operator> <literal type="number" pos:line="198" pos:column="35">1<pos:position pos:line="198" pos:column="36"/></literal></expr>)<pos:position pos:line="198" pos:column="37"/></condition><then pos:line="198" pos:column="37">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="199" pos:column="29">PUP<pos:position pos:line="199" pos:column="32"/></name><argument_list pos:line="199" pos:column="32">(<argument><expr><name pos:line="199" pos:column="33">out<pos:position pos:line="199" pos:column="36"/></name></expr></argument>)<pos:position pos:line="199" pos:column="37"/></argument_list></call> <operator pos:line="199" pos:column="38">=<pos:position pos:line="199" pos:column="39"/></operator> <call><name pos:line="199" pos:column="40">PUP<pos:position pos:line="199" pos:column="43"/></name><argument_list pos:line="199" pos:column="43">(<argument><expr><name pos:line="199" pos:column="44">from<pos:position pos:line="199" pos:column="48"/></name></expr></argument>)<pos:position pos:line="199" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="50"/></expr_stmt></block></then></if>
                    }<pos:position pos:line="200" pos:column="22"/></block></then></if>
                }<pos:position pos:line="201" pos:column="18"/></block></then>
                <else pos:line="202" pos:column="17">else <block pos:line="202" pos:column="22">{
                    <expr_stmt><expr><name pos:line="203" pos:column="21">from<pos:position pos:line="203" pos:column="25"/></name> <operator pos:line="203" pos:column="26">=<pos:position pos:line="203" pos:column="27"/></operator> <name pos:line="203" pos:column="28">out<pos:position pos:line="203" pos:column="31"/></name> <operator pos:line="203" pos:column="32">-<pos:position pos:line="203" pos:column="33"/></operator> <name pos:line="203" pos:column="34">dist<pos:position pos:line="203" pos:column="38"/></name></expr>;<pos:position pos:line="203" pos:column="39"/></expr_stmt>          <comment type="block" pos:line="203" pos:column="49">/* copy direct from output */</comment>
                    <do pos:line="204" pos:column="21">do <block pos:line="204" pos:column="24">{                        <comment type="block" pos:line="204" pos:column="49">/* minimum length is three */</comment>
                        <expr_stmt><expr><call><name pos:line="205" pos:column="25">PUP<pos:position pos:line="205" pos:column="28"/></name><argument_list pos:line="205" pos:column="28">(<argument><expr><name pos:line="205" pos:column="29">out<pos:position pos:line="205" pos:column="32"/></name></expr></argument>)<pos:position pos:line="205" pos:column="33"/></argument_list></call> <operator pos:line="205" pos:column="34">=<pos:position pos:line="205" pos:column="35"/></operator> <call><name pos:line="205" pos:column="36">PUP<pos:position pos:line="205" pos:column="39"/></name><argument_list pos:line="205" pos:column="39">(<argument><expr><name pos:line="205" pos:column="40">from<pos:position pos:line="205" pos:column="44"/></name></expr></argument>)<pos:position pos:line="205" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="46"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="206" pos:column="25">PUP<pos:position pos:line="206" pos:column="28"/></name><argument_list pos:line="206" pos:column="28">(<argument><expr><name pos:line="206" pos:column="29">out<pos:position pos:line="206" pos:column="32"/></name></expr></argument>)<pos:position pos:line="206" pos:column="33"/></argument_list></call> <operator pos:line="206" pos:column="34">=<pos:position pos:line="206" pos:column="35"/></operator> <call><name pos:line="206" pos:column="36">PUP<pos:position pos:line="206" pos:column="39"/></name><argument_list pos:line="206" pos:column="39">(<argument><expr><name pos:line="206" pos:column="40">from<pos:position pos:line="206" pos:column="44"/></name></expr></argument>)<pos:position pos:line="206" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="46"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="207" pos:column="25">PUP<pos:position pos:line="207" pos:column="28"/></name><argument_list pos:line="207" pos:column="28">(<argument><expr><name pos:line="207" pos:column="29">out<pos:position pos:line="207" pos:column="32"/></name></expr></argument>)<pos:position pos:line="207" pos:column="33"/></argument_list></call> <operator pos:line="207" pos:column="34">=<pos:position pos:line="207" pos:column="35"/></operator> <call><name pos:line="207" pos:column="36">PUP<pos:position pos:line="207" pos:column="39"/></name><argument_list pos:line="207" pos:column="39">(<argument><expr><name pos:line="207" pos:column="40">from<pos:position pos:line="207" pos:column="44"/></name></expr></argument>)<pos:position pos:line="207" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="46"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="208" pos:column="25">len<pos:position pos:line="208" pos:column="28"/></name> <operator pos:line="208" pos:column="29">-=<pos:position pos:line="208" pos:column="31"/></operator> <literal type="number" pos:line="208" pos:column="32">3<pos:position pos:line="208" pos:column="33"/></literal></expr>;<pos:position pos:line="208" pos:column="34"/></expr_stmt>
                    }<pos:position pos:line="209" pos:column="22"/></block> while <condition pos:line="209" pos:column="29">(<expr><name pos:line="209" pos:column="30">len<pos:position pos:line="209" pos:column="33"/></name> <operator pos:line="209" pos:column="34">&gt;<pos:position pos:line="209" pos:column="38"/></operator> <literal type="number" pos:line="209" pos:column="36">2<pos:position pos:line="209" pos:column="37"/></literal></expr>)<pos:position pos:line="209" pos:column="38"/></condition>;<pos:position pos:line="209" pos:column="39"/></do>
                    <if pos:line="210" pos:column="21">if <condition pos:line="210" pos:column="24">(<expr><name pos:line="210" pos:column="25">len<pos:position pos:line="210" pos:column="28"/></name></expr>)<pos:position pos:line="210" pos:column="29"/></condition><then pos:line="210" pos:column="29"> <block pos:line="210" pos:column="30">{
                        <expr_stmt><expr><call><name pos:line="211" pos:column="25">PUP<pos:position pos:line="211" pos:column="28"/></name><argument_list pos:line="211" pos:column="28">(<argument><expr><name pos:line="211" pos:column="29">out<pos:position pos:line="211" pos:column="32"/></name></expr></argument>)<pos:position pos:line="211" pos:column="33"/></argument_list></call> <operator pos:line="211" pos:column="34">=<pos:position pos:line="211" pos:column="35"/></operator> <call><name pos:line="211" pos:column="36">PUP<pos:position pos:line="211" pos:column="39"/></name><argument_list pos:line="211" pos:column="39">(<argument><expr><name pos:line="211" pos:column="40">from<pos:position pos:line="211" pos:column="44"/></name></expr></argument>)<pos:position pos:line="211" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="46"/></expr_stmt>
                        <if pos:line="212" pos:column="25">if <condition pos:line="212" pos:column="28">(<expr><name pos:line="212" pos:column="29">len<pos:position pos:line="212" pos:column="32"/></name> <operator pos:line="212" pos:column="33">&gt;<pos:position pos:line="212" pos:column="37"/></operator> <literal type="number" pos:line="212" pos:column="35">1<pos:position pos:line="212" pos:column="36"/></literal></expr>)<pos:position pos:line="212" pos:column="37"/></condition><then pos:line="212" pos:column="37">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="213" pos:column="29">PUP<pos:position pos:line="213" pos:column="32"/></name><argument_list pos:line="213" pos:column="32">(<argument><expr><name pos:line="213" pos:column="33">out<pos:position pos:line="213" pos:column="36"/></name></expr></argument>)<pos:position pos:line="213" pos:column="37"/></argument_list></call> <operator pos:line="213" pos:column="38">=<pos:position pos:line="213" pos:column="39"/></operator> <call><name pos:line="213" pos:column="40">PUP<pos:position pos:line="213" pos:column="43"/></name><argument_list pos:line="213" pos:column="43">(<argument><expr><name pos:line="213" pos:column="44">from<pos:position pos:line="213" pos:column="48"/></name></expr></argument>)<pos:position pos:line="213" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="50"/></expr_stmt></block></then></if>
                    }<pos:position pos:line="214" pos:column="22"/></block></then></if>
                }<pos:position pos:line="215" pos:column="18"/></block></else></if>
            }<pos:position pos:line="216" pos:column="14"/></block></then>
            <elseif pos:line="217" pos:column="13">else <if pos:line="217" pos:column="18">if <condition pos:line="217" pos:column="21">(<expr><operator pos:line="217" pos:column="22">(<pos:position pos:line="217" pos:column="23"/></operator><name pos:line="217" pos:column="23">op<pos:position pos:line="217" pos:column="25"/></name> <operator pos:line="217" pos:column="26">&amp;<pos:position pos:line="217" pos:column="31"/></operator> <literal type="number" pos:line="217" pos:column="28">64<pos:position pos:line="217" pos:column="30"/></literal><operator pos:line="217" pos:column="30">)<pos:position pos:line="217" pos:column="31"/></operator> <operator pos:line="217" pos:column="32">==<pos:position pos:line="217" pos:column="34"/></operator> <literal type="number" pos:line="217" pos:column="35">0<pos:position pos:line="217" pos:column="36"/></literal></expr>)<pos:position pos:line="217" pos:column="37"/></condition><then pos:line="217" pos:column="37"> <block pos:line="217" pos:column="38">{          <comment type="block" pos:line="217" pos:column="49">/* 2nd level distance code */</comment>
                <expr_stmt><expr><name pos:line="218" pos:column="17">here<pos:position pos:line="218" pos:column="21"/></name> <operator pos:line="218" pos:column="22">=<pos:position pos:line="218" pos:column="23"/></operator> <name><name pos:line="218" pos:column="24">dcode<pos:position pos:line="218" pos:column="29"/></name><index pos:line="218" pos:column="29">[<expr><name><name pos:line="218" pos:column="30">here<pos:position pos:line="218" pos:column="34"/></name><operator pos:line="218" pos:column="34">.<pos:position pos:line="218" pos:column="35"/></operator><name pos:line="218" pos:column="35">val<pos:position pos:line="218" pos:column="38"/></name></name> <operator pos:line="218" pos:column="39">+<pos:position pos:line="218" pos:column="40"/></operator> <operator pos:line="218" pos:column="41">(<pos:position pos:line="218" pos:column="42"/></operator><name pos:line="218" pos:column="42">hold<pos:position pos:line="218" pos:column="46"/></name> <operator pos:line="218" pos:column="47">&amp;<pos:position pos:line="218" pos:column="52"/></operator> <operator pos:line="218" pos:column="49">(<pos:position pos:line="218" pos:column="50"/></operator><operator pos:line="218" pos:column="50">(<pos:position pos:line="218" pos:column="51"/></operator><literal type="number" pos:line="218" pos:column="51">1U<pos:position pos:line="218" pos:column="53"/></literal> <operator pos:line="218" pos:column="54">&lt;&lt;<pos:position pos:line="218" pos:column="62"/></operator> <name pos:line="218" pos:column="57">op<pos:position pos:line="218" pos:column="59"/></name><operator pos:line="218" pos:column="59">)<pos:position pos:line="218" pos:column="60"/></operator> <operator pos:line="218" pos:column="61">-<pos:position pos:line="218" pos:column="62"/></operator> <literal type="number" pos:line="218" pos:column="63">1<pos:position pos:line="218" pos:column="64"/></literal><operator pos:line="218" pos:column="64">)<pos:position pos:line="218" pos:column="65"/></operator><operator pos:line="218" pos:column="65">)<pos:position pos:line="218" pos:column="66"/></operator></expr>]<pos:position pos:line="218" pos:column="67"/></index></name></expr>;<pos:position pos:line="218" pos:column="68"/></expr_stmt>
                <goto pos:line="219" pos:column="17">goto <name pos:line="219" pos:column="22">dodist<pos:position pos:line="219" pos:column="28"/></name>;<pos:position pos:line="219" pos:column="29"/></goto>
            }<pos:position pos:line="220" pos:column="14"/></block></then></if></elseif>
            <else pos:line="221" pos:column="13">else <block pos:line="221" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="222" pos:column="17">strm<pos:position pos:line="222" pos:column="21"/></name><operator pos:line="222" pos:column="21">-&gt;<pos:position pos:line="222" pos:column="26"/></operator><name pos:line="222" pos:column="23">msg<pos:position pos:line="222" pos:column="26"/></name></name> <operator pos:line="222" pos:column="27">=<pos:position pos:line="222" pos:column="28"/></operator> <operator pos:line="222" pos:column="29">(<pos:position pos:line="222" pos:column="30"/></operator><name pos:line="222" pos:column="30">char<pos:position pos:line="222" pos:column="34"/></name> <operator pos:line="222" pos:column="35">*<pos:position pos:line="222" pos:column="36"/></operator><operator pos:line="222" pos:column="36">)<pos:position pos:line="222" pos:column="37"/></operator><literal type="string" pos:line="222" pos:column="37">"invalid distance code"<pos:position pos:line="222" pos:column="60"/></literal></expr>;<pos:position pos:line="222" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="223" pos:column="17">state<pos:position pos:line="223" pos:column="22"/></name><operator pos:line="223" pos:column="22">-&gt;<pos:position pos:line="223" pos:column="27"/></operator><name pos:line="223" pos:column="24">mode<pos:position pos:line="223" pos:column="28"/></name></name> <operator pos:line="223" pos:column="29">=<pos:position pos:line="223" pos:column="30"/></operator> <name pos:line="223" pos:column="31">BAD<pos:position pos:line="223" pos:column="34"/></name></expr>;<pos:position pos:line="223" pos:column="35"/></expr_stmt>
                <break pos:line="224" pos:column="17">break;<pos:position pos:line="224" pos:column="23"/></break>
            }<pos:position pos:line="225" pos:column="14"/></block></else></if>
        }<pos:position pos:line="226" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="227" pos:column="9">else <if pos:line="227" pos:column="14">if <condition pos:line="227" pos:column="17">(<expr><operator pos:line="227" pos:column="18">(<pos:position pos:line="227" pos:column="19"/></operator><name pos:line="227" pos:column="19">op<pos:position pos:line="227" pos:column="21"/></name> <operator pos:line="227" pos:column="22">&amp;<pos:position pos:line="227" pos:column="27"/></operator> <literal type="number" pos:line="227" pos:column="24">64<pos:position pos:line="227" pos:column="26"/></literal><operator pos:line="227" pos:column="26">)<pos:position pos:line="227" pos:column="27"/></operator> <operator pos:line="227" pos:column="28">==<pos:position pos:line="227" pos:column="30"/></operator> <literal type="number" pos:line="227" pos:column="31">0<pos:position pos:line="227" pos:column="32"/></literal></expr>)<pos:position pos:line="227" pos:column="33"/></condition><then pos:line="227" pos:column="33"> <block pos:line="227" pos:column="34">{              <comment type="block" pos:line="227" pos:column="49">/* 2nd level length code */</comment>
            <expr_stmt><expr><name pos:line="228" pos:column="13">here<pos:position pos:line="228" pos:column="17"/></name> <operator pos:line="228" pos:column="18">=<pos:position pos:line="228" pos:column="19"/></operator> <name><name pos:line="228" pos:column="20">lcode<pos:position pos:line="228" pos:column="25"/></name><index pos:line="228" pos:column="25">[<expr><name><name pos:line="228" pos:column="26">here<pos:position pos:line="228" pos:column="30"/></name><operator pos:line="228" pos:column="30">.<pos:position pos:line="228" pos:column="31"/></operator><name pos:line="228" pos:column="31">val<pos:position pos:line="228" pos:column="34"/></name></name> <operator pos:line="228" pos:column="35">+<pos:position pos:line="228" pos:column="36"/></operator> <operator pos:line="228" pos:column="37">(<pos:position pos:line="228" pos:column="38"/></operator><name pos:line="228" pos:column="38">hold<pos:position pos:line="228" pos:column="42"/></name> <operator pos:line="228" pos:column="43">&amp;<pos:position pos:line="228" pos:column="48"/></operator> <operator pos:line="228" pos:column="45">(<pos:position pos:line="228" pos:column="46"/></operator><operator pos:line="228" pos:column="46">(<pos:position pos:line="228" pos:column="47"/></operator><literal type="number" pos:line="228" pos:column="47">1U<pos:position pos:line="228" pos:column="49"/></literal> <operator pos:line="228" pos:column="50">&lt;&lt;<pos:position pos:line="228" pos:column="58"/></operator> <name pos:line="228" pos:column="53">op<pos:position pos:line="228" pos:column="55"/></name><operator pos:line="228" pos:column="55">)<pos:position pos:line="228" pos:column="56"/></operator> <operator pos:line="228" pos:column="57">-<pos:position pos:line="228" pos:column="58"/></operator> <literal type="number" pos:line="228" pos:column="59">1<pos:position pos:line="228" pos:column="60"/></literal><operator pos:line="228" pos:column="60">)<pos:position pos:line="228" pos:column="61"/></operator><operator pos:line="228" pos:column="61">)<pos:position pos:line="228" pos:column="62"/></operator></expr>]<pos:position pos:line="228" pos:column="63"/></index></name></expr>;<pos:position pos:line="228" pos:column="64"/></expr_stmt>
            <goto pos:line="229" pos:column="13">goto <name pos:line="229" pos:column="18">dolen<pos:position pos:line="229" pos:column="23"/></name>;<pos:position pos:line="229" pos:column="24"/></goto>
        }<pos:position pos:line="230" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="231" pos:column="9">else <if pos:line="231" pos:column="14">if <condition pos:line="231" pos:column="17">(<expr><name pos:line="231" pos:column="18">op<pos:position pos:line="231" pos:column="20"/></name> <operator pos:line="231" pos:column="21">&amp;<pos:position pos:line="231" pos:column="26"/></operator> <literal type="number" pos:line="231" pos:column="23">32<pos:position pos:line="231" pos:column="25"/></literal></expr>)<pos:position pos:line="231" pos:column="26"/></condition><then pos:line="231" pos:column="26"> <block pos:line="231" pos:column="27">{                     <comment type="block" pos:line="231" pos:column="49">/* end-of-block */</comment>
            <expr_stmt><expr><call><name pos:line="232" pos:column="13">Tracevv<pos:position pos:line="232" pos:column="20"/></name><argument_list pos:line="232" pos:column="20">(<argument><expr><operator pos:line="232" pos:column="21">(<pos:position pos:line="232" pos:column="22"/></operator><name pos:line="232" pos:column="22">stderr<pos:position pos:line="232" pos:column="28"/></name><operator pos:line="232" pos:column="28">,<pos:position pos:line="232" pos:column="29"/></operator> <literal type="string" pos:line="232" pos:column="30">"inflate:         end of block\n"<pos:position pos:line="232" pos:column="63"/></literal><operator pos:line="232" pos:column="63">)<pos:position pos:line="232" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="232" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="233" pos:column="13">state<pos:position pos:line="233" pos:column="18"/></name><operator pos:line="233" pos:column="18">-&gt;<pos:position pos:line="233" pos:column="23"/></operator><name pos:line="233" pos:column="20">mode<pos:position pos:line="233" pos:column="24"/></name></name> <operator pos:line="233" pos:column="25">=<pos:position pos:line="233" pos:column="26"/></operator> <name pos:line="233" pos:column="27">TYPE<pos:position pos:line="233" pos:column="31"/></name></expr>;<pos:position pos:line="233" pos:column="32"/></expr_stmt>
            <break pos:line="234" pos:column="13">break;<pos:position pos:line="234" pos:column="19"/></break>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if></elseif>
        <else pos:line="236" pos:column="9">else <block pos:line="236" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="237" pos:column="13">strm<pos:position pos:line="237" pos:column="17"/></name><operator pos:line="237" pos:column="17">-&gt;<pos:position pos:line="237" pos:column="22"/></operator><name pos:line="237" pos:column="19">msg<pos:position pos:line="237" pos:column="22"/></name></name> <operator pos:line="237" pos:column="23">=<pos:position pos:line="237" pos:column="24"/></operator> <operator pos:line="237" pos:column="25">(<pos:position pos:line="237" pos:column="26"/></operator><name pos:line="237" pos:column="26">char<pos:position pos:line="237" pos:column="30"/></name> <operator pos:line="237" pos:column="31">*<pos:position pos:line="237" pos:column="32"/></operator><operator pos:line="237" pos:column="32">)<pos:position pos:line="237" pos:column="33"/></operator><literal type="string" pos:line="237" pos:column="33">"invalid literal/length code"<pos:position pos:line="237" pos:column="62"/></literal></expr>;<pos:position pos:line="237" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="238" pos:column="13">state<pos:position pos:line="238" pos:column="18"/></name><operator pos:line="238" pos:column="18">-&gt;<pos:position pos:line="238" pos:column="23"/></operator><name pos:line="238" pos:column="20">mode<pos:position pos:line="238" pos:column="24"/></name></name> <operator pos:line="238" pos:column="25">=<pos:position pos:line="238" pos:column="26"/></operator> <name pos:line="238" pos:column="27">BAD<pos:position pos:line="238" pos:column="30"/></name></expr>;<pos:position pos:line="238" pos:column="31"/></expr_stmt>
            <break pos:line="239" pos:column="13">break;<pos:position pos:line="239" pos:column="19"/></break>
        }<pos:position pos:line="240" pos:column="10"/></block></else></if>
    }<pos:position pos:line="241" pos:column="6"/></block> while <condition pos:line="241" pos:column="13">(<expr><name pos:line="241" pos:column="14">in<pos:position pos:line="241" pos:column="16"/></name> <operator pos:line="241" pos:column="17">&lt;<pos:position pos:line="241" pos:column="21"/></operator> <name pos:line="241" pos:column="19">last<pos:position pos:line="241" pos:column="23"/></name> <operator pos:line="241" pos:column="24">&amp;&amp;<pos:position pos:line="241" pos:column="34"/></operator> <name pos:line="241" pos:column="27">out<pos:position pos:line="241" pos:column="30"/></name> <operator pos:line="241" pos:column="31">&lt;<pos:position pos:line="241" pos:column="35"/></operator> <name pos:line="241" pos:column="33">end<pos:position pos:line="241" pos:column="36"/></name></expr>)<pos:position pos:line="241" pos:column="37"/></condition>;<pos:position pos:line="241" pos:column="38"/></do>

    <comment type="block" pos:line="243" pos:column="5">/* return unused bytes (on entry, bits &lt; 8, so in won't go too far back) */</comment>
    <expr_stmt><expr><name pos:line="244" pos:column="5">len<pos:position pos:line="244" pos:column="8"/></name> <operator pos:line="244" pos:column="9">=<pos:position pos:line="244" pos:column="10"/></operator> <name pos:line="244" pos:column="11">bits<pos:position pos:line="244" pos:column="15"/></name> <operator pos:line="244" pos:column="16">&gt;&gt;<pos:position pos:line="244" pos:column="21"/></operator> <literal type="number" pos:line="244" pos:column="19">3<pos:position pos:line="244" pos:column="20"/></literal></expr>;<pos:position pos:line="244" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="245" pos:column="5">in<pos:position pos:line="245" pos:column="7"/></name> <operator pos:line="245" pos:column="8">-=<pos:position pos:line="245" pos:column="10"/></operator> <name pos:line="245" pos:column="11">len<pos:position pos:line="245" pos:column="14"/></name></expr>;<pos:position pos:line="245" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name pos:line="246" pos:column="5">bits<pos:position pos:line="246" pos:column="9"/></name> <operator pos:line="246" pos:column="10">-=<pos:position pos:line="246" pos:column="12"/></operator> <name pos:line="246" pos:column="13">len<pos:position pos:line="246" pos:column="16"/></name> <operator pos:line="246" pos:column="17">&lt;&lt;<pos:position pos:line="246" pos:column="25"/></operator> <literal type="number" pos:line="246" pos:column="20">3<pos:position pos:line="246" pos:column="21"/></literal></expr>;<pos:position pos:line="246" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="247" pos:column="5">hold<pos:position pos:line="247" pos:column="9"/></name> <operator pos:line="247" pos:column="10">&amp;=<pos:position pos:line="247" pos:column="16"/></operator> <operator pos:line="247" pos:column="13">(<pos:position pos:line="247" pos:column="14"/></operator><literal type="number" pos:line="247" pos:column="14">1U<pos:position pos:line="247" pos:column="16"/></literal> <operator pos:line="247" pos:column="17">&lt;&lt;<pos:position pos:line="247" pos:column="25"/></operator> <name pos:line="247" pos:column="20">bits<pos:position pos:line="247" pos:column="24"/></name><operator pos:line="247" pos:column="24">)<pos:position pos:line="247" pos:column="25"/></operator> <operator pos:line="247" pos:column="26">-<pos:position pos:line="247" pos:column="27"/></operator> <literal type="number" pos:line="247" pos:column="28">1<pos:position pos:line="247" pos:column="29"/></literal></expr>;<pos:position pos:line="247" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="249" pos:column="5">/* update state and return */</comment>
    <expr_stmt><expr><name><name pos:line="250" pos:column="5">strm<pos:position pos:line="250" pos:column="9"/></name><operator pos:line="250" pos:column="9">-&gt;<pos:position pos:line="250" pos:column="14"/></operator><name pos:line="250" pos:column="11">next_in<pos:position pos:line="250" pos:column="18"/></name></name> <operator pos:line="250" pos:column="19">=<pos:position pos:line="250" pos:column="20"/></operator> <name pos:line="250" pos:column="21">in<pos:position pos:line="250" pos:column="23"/></name> <operator pos:line="250" pos:column="24">+<pos:position pos:line="250" pos:column="25"/></operator> <name pos:line="250" pos:column="26">OFF<pos:position pos:line="250" pos:column="29"/></name></expr>;<pos:position pos:line="250" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="251" pos:column="5">strm<pos:position pos:line="251" pos:column="9"/></name><operator pos:line="251" pos:column="9">-&gt;<pos:position pos:line="251" pos:column="14"/></operator><name pos:line="251" pos:column="11">next_out<pos:position pos:line="251" pos:column="19"/></name></name> <operator pos:line="251" pos:column="20">=<pos:position pos:line="251" pos:column="21"/></operator> <name pos:line="251" pos:column="22">out<pos:position pos:line="251" pos:column="25"/></name> <operator pos:line="251" pos:column="26">+<pos:position pos:line="251" pos:column="27"/></operator> <name pos:line="251" pos:column="28">OFF<pos:position pos:line="251" pos:column="31"/></name></expr>;<pos:position pos:line="251" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="252" pos:column="5">strm<pos:position pos:line="252" pos:column="9"/></name><operator pos:line="252" pos:column="9">-&gt;<pos:position pos:line="252" pos:column="14"/></operator><name pos:line="252" pos:column="11">avail_in<pos:position pos:line="252" pos:column="19"/></name></name> <operator pos:line="252" pos:column="20">=<pos:position pos:line="252" pos:column="21"/></operator> <call pos:line="252" pos:column="22">(<name pos:line="252" pos:column="23">unsigned<pos:position pos:line="252" pos:column="31"/></name>)<argument_list pos:line="252" pos:column="32">(<argument><expr><ternary><condition><expr><name pos:line="252" pos:column="33">in<pos:position pos:line="252" pos:column="35"/></name> <operator pos:line="252" pos:column="36">&lt;<pos:position pos:line="252" pos:column="40"/></operator> <name pos:line="252" pos:column="38">last<pos:position pos:line="252" pos:column="42"/></name></expr> ?<pos:position pos:line="252" pos:column="44"/></condition><then pos:line="252" pos:column="44"> <expr><literal type="number" pos:line="252" pos:column="45">5<pos:position pos:line="252" pos:column="46"/></literal> <operator pos:line="252" pos:column="47">+<pos:position pos:line="252" pos:column="48"/></operator> <operator pos:line="252" pos:column="49">(<pos:position pos:line="252" pos:column="50"/></operator><name pos:line="252" pos:column="50">last<pos:position pos:line="252" pos:column="54"/></name> <operator pos:line="252" pos:column="55">-<pos:position pos:line="252" pos:column="56"/></operator> <name pos:line="252" pos:column="57">in<pos:position pos:line="252" pos:column="59"/></name><operator pos:line="252" pos:column="59">)<pos:position pos:line="252" pos:column="60"/></operator></expr> <pos:position pos:line="252" pos:column="61"/></then><else pos:line="252" pos:column="61">: <expr><literal type="number" pos:line="252" pos:column="63">5<pos:position pos:line="252" pos:column="64"/></literal> <operator pos:line="252" pos:column="65">-<pos:position pos:line="252" pos:column="66"/></operator> <operator pos:line="252" pos:column="67">(<pos:position pos:line="252" pos:column="68"/></operator><name pos:line="252" pos:column="68">in<pos:position pos:line="252" pos:column="70"/></name> <operator pos:line="252" pos:column="71">-<pos:position pos:line="252" pos:column="72"/></operator> <name pos:line="252" pos:column="73">last<pos:position pos:line="252" pos:column="77"/></name><operator pos:line="252" pos:column="77">)<pos:position pos:line="252" pos:column="78"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="252" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="253" pos:column="5">strm<pos:position pos:line="253" pos:column="9"/></name><operator pos:line="253" pos:column="9">-&gt;<pos:position pos:line="253" pos:column="14"/></operator><name pos:line="253" pos:column="11">avail_out<pos:position pos:line="253" pos:column="20"/></name></name> <operator pos:line="253" pos:column="21">=<pos:position pos:line="253" pos:column="22"/></operator> <call pos:line="253" pos:column="23">(<name pos:line="253" pos:column="24">unsigned<pos:position pos:line="253" pos:column="32"/></name>)<argument_list pos:line="253" pos:column="33">(<argument><expr><ternary><condition><expr><name pos:line="253" pos:column="34">out<pos:position pos:line="253" pos:column="37"/></name> <operator pos:line="253" pos:column="38">&lt;<pos:position pos:line="253" pos:column="42"/></operator> <name pos:line="253" pos:column="40">end<pos:position pos:line="253" pos:column="43"/></name></expr> ?<pos:position pos:line="253" pos:column="45"/></condition><then pos:line="253" pos:column="45">
                                 <expr><literal type="number" pos:line="254" pos:column="34">257<pos:position pos:line="254" pos:column="37"/></literal> <operator pos:line="254" pos:column="38">+<pos:position pos:line="254" pos:column="39"/></operator> <operator pos:line="254" pos:column="40">(<pos:position pos:line="254" pos:column="41"/></operator><name pos:line="254" pos:column="41">end<pos:position pos:line="254" pos:column="44"/></name> <operator pos:line="254" pos:column="45">-<pos:position pos:line="254" pos:column="46"/></operator> <name pos:line="254" pos:column="47">out<pos:position pos:line="254" pos:column="50"/></name><operator pos:line="254" pos:column="50">)<pos:position pos:line="254" pos:column="51"/></operator></expr> <pos:position pos:line="254" pos:column="52"/></then><else pos:line="254" pos:column="52">: <expr><literal type="number" pos:line="254" pos:column="54">257<pos:position pos:line="254" pos:column="57"/></literal> <operator pos:line="254" pos:column="58">-<pos:position pos:line="254" pos:column="59"/></operator> <operator pos:line="254" pos:column="60">(<pos:position pos:line="254" pos:column="61"/></operator><name pos:line="254" pos:column="61">out<pos:position pos:line="254" pos:column="64"/></name> <operator pos:line="254" pos:column="65">-<pos:position pos:line="254" pos:column="66"/></operator> <name pos:line="254" pos:column="67">end<pos:position pos:line="254" pos:column="70"/></name><operator pos:line="254" pos:column="70">)<pos:position pos:line="254" pos:column="71"/></operator></expr></else></ternary></expr></argument>)<pos:position pos:line="254" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="255" pos:column="5">state<pos:position pos:line="255" pos:column="10"/></name><operator pos:line="255" pos:column="10">-&gt;<pos:position pos:line="255" pos:column="15"/></operator><name pos:line="255" pos:column="12">hold<pos:position pos:line="255" pos:column="16"/></name></name> <operator pos:line="255" pos:column="17">=<pos:position pos:line="255" pos:column="18"/></operator> <name pos:line="255" pos:column="19">hold<pos:position pos:line="255" pos:column="23"/></name></expr>;<pos:position pos:line="255" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="256" pos:column="5">state<pos:position pos:line="256" pos:column="10"/></name><operator pos:line="256" pos:column="10">-&gt;<pos:position pos:line="256" pos:column="15"/></operator><name pos:line="256" pos:column="12">bits<pos:position pos:line="256" pos:column="16"/></name></name> <operator pos:line="256" pos:column="17">=<pos:position pos:line="256" pos:column="18"/></operator> <name pos:line="256" pos:column="19">bits<pos:position pos:line="256" pos:column="23"/></name></expr>;<pos:position pos:line="256" pos:column="24"/></expr_stmt>
    <return pos:line="257" pos:column="5">return;<pos:position pos:line="257" pos:column="12"/></return>
}<pos:position pos:line="258" pos:column="2"/></block></function_decl></unit>

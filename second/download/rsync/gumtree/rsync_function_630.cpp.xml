<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_630.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">glob_expand<pos:position pos:line="1" pos:column="17"/></name><parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier><modifier pos:line="1" pos:column="24">*<pos:position pos:line="1" pos:column="25"/></modifier></type><name pos:line="1" pos:column="25">argv<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">int<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">argc<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">int<pos:position pos:line="1" pos:column="45"/></name></type> <name pos:line="1" pos:column="46">maxargs<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:ifndef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">ifndef<pos:position pos:line="3" pos:column="8"/></cpp:directive> <name pos:line="3" pos:column="9">HAVE_GLOB<pos:position pos:line="3" pos:column="18"/></name></cpp:ifndef>
	<expr_stmt><expr><operator pos:line="4" pos:column="9">(<pos:position pos:line="4" pos:column="10"/></operator><operator pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">argc<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">)<pos:position pos:line="4" pos:column="16"/></operator><operator pos:line="4" pos:column="16">++<pos:position pos:line="4" pos:column="18"/></operator></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
	<return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return>
<cpp:else pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">else<pos:position pos:line="6" pos:column="6"/></cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">glob_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">globbuf<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">memset<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="17">globbuf<pos:position pos:line="10" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="29">sizeof<argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">globbuf<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">glob<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name><name pos:line="11" pos:column="14">argv<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><operator pos:line="11" pos:column="19">*<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">argc<pos:position pos:line="11" pos:column="24"/></name></expr>]<pos:position pos:line="11" pos:column="25"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="27">0<pos:position pos:line="11" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="36">&amp;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="37">globbuf<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">globbuf<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">gl_pathc<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">==<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="33">0<pos:position pos:line="12" pos:column="34"/></literal></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35"> <block pos:line="12" pos:column="36">{
		<expr_stmt><expr><operator pos:line="13" pos:column="17">(<pos:position pos:line="13" pos:column="18"/></operator><operator pos:line="13" pos:column="18">*<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">argc<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">)<pos:position pos:line="13" pos:column="24"/></operator><operator pos:line="13" pos:column="24">++<pos:position pos:line="13" pos:column="26"/></operator></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">globfree<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><operator pos:line="14" pos:column="26">&amp;<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="27">globbuf<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
		<return pos:line="15" pos:column="17">return;<pos:position pos:line="15" pos:column="24"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<for pos:line="17" pos:column="9">for <control pos:line="17" pos:column="13">(<init><expr><name pos:line="17" pos:column="14">i<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></init> <condition><expr><name pos:line="17" pos:column="19">i<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">&lt;<pos:position pos:line="17" pos:column="24"/></operator><operator pos:line="17" pos:column="21">(<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">maxargs<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">-<pos:position pos:line="17" pos:column="31"/></operator> <operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><operator pos:line="17" pos:column="33">*<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">argc<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">)<pos:position pos:line="17" pos:column="39"/></operator><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator> <operator pos:line="17" pos:column="41">&amp;&amp;<pos:position pos:line="17" pos:column="51"/></operator> <name pos:line="17" pos:column="44">i<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">&lt;<pos:position pos:line="17" pos:column="49"/></operator><name><name pos:line="17" pos:column="46">globbuf<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">.<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">gl_pathc<pos:position pos:line="17" pos:column="62"/></name></name></expr>;<pos:position pos:line="17" pos:column="63"/></condition><incr><expr><name pos:line="17" pos:column="63">i<pos:position pos:line="17" pos:column="64"/></name><operator pos:line="17" pos:column="64">++<pos:position pos:line="17" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="17" pos:column="67"/></control> <block pos:line="17" pos:column="68">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">==<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="29">free<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">argv<pos:position pos:line="18" pos:column="38"/></name><index pos:line="18" pos:column="38">[<expr><operator pos:line="18" pos:column="39">*<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="40">argc<pos:position pos:line="18" pos:column="44"/></name></expr>]<pos:position pos:line="18" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt></block></then></if>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">argv<pos:position pos:line="19" pos:column="21"/></name><index pos:line="19" pos:column="21">[<expr><operator pos:line="19" pos:column="22">(<pos:position pos:line="19" pos:column="23"/></operator><operator pos:line="19" pos:column="23">*<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">argc<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">)<pos:position pos:line="19" pos:column="29"/></operator> <operator pos:line="19" pos:column="30">+<pos:position pos:line="19" pos:column="31"/></operator> <name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr>]<pos:position pos:line="19" pos:column="34"/></index></name> <operator pos:line="19" pos:column="35">=<pos:position pos:line="19" pos:column="36"/></operator> <call><name pos:line="19" pos:column="37">strdup<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name><name pos:line="19" pos:column="44">globbuf<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">.<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="52">gl_pathv<pos:position pos:line="19" pos:column="60"/></name><index pos:line="19" pos:column="60">[<expr><name pos:line="19" pos:column="61">i<pos:position pos:line="19" pos:column="62"/></name></expr>]<pos:position pos:line="19" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><operator pos:line="20" pos:column="21">!<pos:position pos:line="20" pos:column="22"/></operator><name><name pos:line="20" pos:column="22">argv<pos:position pos:line="20" pos:column="26"/></name><index pos:line="20" pos:column="26">[<expr><operator pos:line="20" pos:column="27">(<pos:position pos:line="20" pos:column="28"/></operator><operator pos:line="20" pos:column="28">*<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">argc<pos:position pos:line="20" pos:column="33"/></name><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator> <operator pos:line="20" pos:column="35">+<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">i<pos:position pos:line="20" pos:column="38"/></name></expr>]<pos:position pos:line="20" pos:column="39"/></index></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="41">out_of_memory<pos:position pos:line="20" pos:column="54"/></name><argument_list pos:line="20" pos:column="54">(<argument><expr><literal type="string" pos:line="20" pos:column="55">"glob_expand"<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt></block></then></if>
	}<pos:position pos:line="21" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">globfree<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><operator pos:line="22" pos:column="18">&amp;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="19">globbuf<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><operator pos:line="23" pos:column="10">*<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">argc<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator> <operator pos:line="23" pos:column="17">+=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">i<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

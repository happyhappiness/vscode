<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_225_rsync-1.7.4.cpp" pos:tabs="8"><decl_stmt><decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">int<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">inflate_codes<pos:position pos:line="1" pos:column="24"/></name><argument_list pos:line="1" pos:column="24">(<argument><expr><name pos:line="1" pos:column="25">s<pos:position pos:line="1" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="28">z<pos:position pos:line="1" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="1" pos:column="31">r<pos:position pos:line="1" pos:column="32"/></name></expr></argument>)<pos:position pos:line="1" pos:column="33"/></argument_list>
<name pos:line="2" pos:column="1">inflate_blocks_statef<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier><name pos:line="2" pos:column="24">s<pos:position pos:line="2" pos:column="25"/></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">z_stream<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">z<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">int<pos:position pos:line="4" pos:column="4"/></name></type> <name pos:line="4" pos:column="5">r<pos:position pos:line="4" pos:column="6"/></name></decl>;<pos:position pos:line="4" pos:column="7"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">uInt<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">j<pos:position pos:line="6" pos:column="9"/></name></decl>;<pos:position pos:line="6" pos:column="10"/></decl_stmt>               <comment type="block" pos:line="6" pos:column="25">/* temporary storage */</comment>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">inflate_huft<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">t<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>      <comment type="block" pos:line="7" pos:column="25">/* temporary pointer */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">uInt<pos:position pos:line="8" pos:column="7"/></name></type> <name pos:line="8" pos:column="8">e<pos:position pos:line="8" pos:column="9"/></name></decl>;<pos:position pos:line="8" pos:column="10"/></decl_stmt>               <comment type="block" pos:line="8" pos:column="25">/* extra bits or operation */</comment>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">uLong<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">b<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>              <comment type="block" pos:line="9" pos:column="25">/* bit buffer */</comment>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">uInt<pos:position pos:line="10" pos:column="7"/></name></type> <name pos:line="10" pos:column="8">k<pos:position pos:line="10" pos:column="9"/></name></decl>;<pos:position pos:line="10" pos:column="10"/></decl_stmt>               <comment type="block" pos:line="10" pos:column="25">/* bits in bit buffer */</comment>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">Bytef<pos:position pos:line="11" pos:column="8"/></name> <modifier pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></modifier></type><name pos:line="11" pos:column="10">p<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>             <comment type="block" pos:line="11" pos:column="25">/* input data pointer */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">uInt<pos:position pos:line="12" pos:column="7"/></name></type> <name pos:line="12" pos:column="8">n<pos:position pos:line="12" pos:column="9"/></name></decl>;<pos:position pos:line="12" pos:column="10"/></decl_stmt>               <comment type="block" pos:line="12" pos:column="25">/* bytes available there */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">Bytef<pos:position pos:line="13" pos:column="8"/></name> <modifier pos:line="13" pos:column="9">*<pos:position pos:line="13" pos:column="10"/></modifier></type><name pos:line="13" pos:column="10">q<pos:position pos:line="13" pos:column="11"/></name></decl>;<pos:position pos:line="13" pos:column="12"/></decl_stmt>             <comment type="block" pos:line="13" pos:column="25">/* output window write pointer */</comment>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">uInt<pos:position pos:line="14" pos:column="7"/></name></type> <name pos:line="14" pos:column="8">m<pos:position pos:line="14" pos:column="9"/></name></decl>;<pos:position pos:line="14" pos:column="10"/></decl_stmt>               <comment type="block" pos:line="14" pos:column="25">/* bytes to end of window or read pointer */</comment>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">Bytef<pos:position pos:line="15" pos:column="8"/></name> <modifier pos:line="15" pos:column="9">*<pos:position pos:line="15" pos:column="10"/></modifier></type><name pos:line="15" pos:column="10">f<pos:position pos:line="15" pos:column="11"/></name></decl>;<pos:position pos:line="15" pos:column="12"/></decl_stmt>             <comment type="block" pos:line="15" pos:column="25">/* pointer to copy strings from */</comment>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">inflate_codes_statef<pos:position pos:line="16" pos:column="23"/></name> <modifier pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></modifier></type><name pos:line="16" pos:column="25">c<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><name><name pos:line="16" pos:column="29">s<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">sub<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">.<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">decode<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">.<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="43">codes<pos:position pos:line="16" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="16" pos:column="49"/></decl_stmt>  <comment type="block" pos:line="16" pos:column="51">/* codes state */</comment>

  <comment type="block" pos:line="18" pos:column="3">/* copy input/output information to locals (UPDATE macro restores) */</comment>
  <macro><name pos:line="19" pos:column="3">LOAD<pos:position pos:line="19" pos:column="7"/></name></macro>

  <comment type="block" pos:line="21" pos:column="3">/* process input and output based on current state */</comment>
  <while pos:line="22" pos:column="3">while <condition pos:line="22" pos:column="9">(<expr><literal type="number" pos:line="22" pos:column="10">1<pos:position pos:line="22" pos:column="11"/></literal></expr>)<pos:position pos:line="22" pos:column="12"/></condition> <block type="pseudo"><switch pos:line="22" pos:column="13">switch <condition pos:line="22" pos:column="20">(<expr><name><name pos:line="22" pos:column="21">c<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">-&gt;<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="24">mode<pos:position pos:line="22" pos:column="28"/></name></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition>
  <block pos:line="23" pos:column="3">{             <comment type="block" pos:line="23" pos:column="17">/* waiting for "i:"=input, "o:"=output, "x:"=nothing */</comment>
    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">START<pos:position pos:line="24" pos:column="15"/></name></expr>:<pos:position pos:line="24" pos:column="16"/></case>         <comment type="block" pos:line="24" pos:column="25">/* x: set up for LEN */</comment>
<cpp:ifndef pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">ifndef<pos:position pos:line="25" pos:column="8"/></cpp:directive> <name pos:line="25" pos:column="9">SLOW<pos:position pos:line="25" pos:column="13"/></name></cpp:ifndef>
      <if pos:line="26" pos:column="7">if <condition pos:line="26" pos:column="10">(<expr><name pos:line="26" pos:column="11">m<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">&gt;=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="16">258<pos:position pos:line="26" pos:column="19"/></literal> <operator pos:line="26" pos:column="20">&amp;&amp;<pos:position pos:line="26" pos:column="30"/></operator> <name pos:line="26" pos:column="23">n<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">&gt;=<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="28">10<pos:position pos:line="26" pos:column="30"/></literal></expr>)<pos:position pos:line="26" pos:column="31"/></condition><then pos:line="26" pos:column="31">
      <block pos:line="27" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">UPDATE<pos:position pos:line="28" pos:column="15"/></name></type>
        <name pos:line="29" pos:column="9">r<pos:position pos:line="29" pos:column="10"/></name> <init pos:line="29" pos:column="11">= <expr><call><name pos:line="29" pos:column="13">inflate_fast<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name><name pos:line="29" pos:column="26">c<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">lbits<pos:position pos:line="29" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">c<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">-&gt;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="39">dbits<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="46">c<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">ltree<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="56">c<pos:position pos:line="29" pos:column="57"/></name><operator pos:line="29" pos:column="57">-&gt;<pos:position pos:line="29" pos:column="62"/></operator><name pos:line="29" pos:column="59">dtree<pos:position pos:line="29" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">s<pos:position pos:line="29" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="69">z<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="72"/></decl_stmt>
        <macro><name pos:line="30" pos:column="9">LOAD<pos:position pos:line="30" pos:column="13"/></name></macro>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">r<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">!=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">Z_OK<pos:position pos:line="31" pos:column="22"/></name></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23">
        <block pos:line="32" pos:column="9">{
          <expr_stmt><expr><name><name pos:line="33" pos:column="11">c<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">mode<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <ternary><condition><expr><name pos:line="33" pos:column="21">r<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">==<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">Z_STREAM_END<pos:position pos:line="33" pos:column="38"/></name></expr> ?<pos:position pos:line="33" pos:column="40"/></condition><then pos:line="33" pos:column="40"> <expr><name pos:line="33" pos:column="41">WASH<pos:position pos:line="33" pos:column="45"/></name></expr> <pos:position pos:line="33" pos:column="46"/></then><else pos:line="33" pos:column="46">: <expr><name pos:line="33" pos:column="48">BADCODE<pos:position pos:line="33" pos:column="55"/></name></expr></else></ternary></expr>;<pos:position pos:line="33" pos:column="56"/></expr_stmt>
          <break pos:line="34" pos:column="11">break;<pos:position pos:line="34" pos:column="17"/></break>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
      }<pos:position pos:line="36" pos:column="8"/></block></then></if>
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="37" pos:column="8">/* !SLOW */</comment>
      <expr_stmt><expr><name><name pos:line="38" pos:column="7">c<pos:position pos:line="38" pos:column="8"/></name><operator pos:line="38" pos:column="8">-&gt;<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="10">sub<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">code<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">need<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">=<pos:position pos:line="38" pos:column="25"/></operator> <name><name pos:line="38" pos:column="26">c<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">lbits<pos:position pos:line="38" pos:column="34"/></name></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="39" pos:column="7">c<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">sub<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">.<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">code<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">.<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="19">tree<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name><name pos:line="39" pos:column="26">c<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">ltree<pos:position pos:line="39" pos:column="34"/></name></name></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="40" pos:column="7">c<pos:position pos:line="40" pos:column="8"/></name><operator pos:line="40" pos:column="8">-&gt;<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="10">mode<pos:position pos:line="40" pos:column="14"/></name></name> <operator pos:line="40" pos:column="15">=<pos:position pos:line="40" pos:column="16"/></operator> <name pos:line="40" pos:column="17">LEN<pos:position pos:line="40" pos:column="20"/></name></expr>;<pos:position pos:line="40" pos:column="21"/></expr_stmt>
    <case pos:line="41" pos:column="5">case <expr><name pos:line="41" pos:column="10">LEN<pos:position pos:line="41" pos:column="13"/></name></expr>:<pos:position pos:line="41" pos:column="14"/></case>           <comment type="block" pos:line="41" pos:column="25">/* i: get length/literal/eob next */</comment>
      <expr_stmt><expr><name pos:line="42" pos:column="7">j<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <name><name pos:line="42" pos:column="11">c<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">sub<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">.<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">code<pos:position pos:line="42" pos:column="22"/></name><operator pos:line="42" pos:column="22">.<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">need<pos:position pos:line="42" pos:column="27"/></name></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
      <macro><name pos:line="43" pos:column="7">NEEDBITS<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument pos:line="43" pos:column="16">j<pos:position pos:line="43" pos:column="17"/></argument>)<pos:position pos:line="43" pos:column="18"/></argument_list></macro>
      <expr_stmt><expr><name pos:line="44" pos:column="7">t<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <name><name pos:line="44" pos:column="11">c<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">sub<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">.<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">code<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">.<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">tree<pos:position pos:line="44" pos:column="27"/></name></name> <operator pos:line="44" pos:column="28">+<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="30">(<pos:position pos:line="44" pos:column="31"/></operator><operator pos:line="44" pos:column="31">(<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="32">uInt<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">)<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="37">b<pos:position pos:line="44" pos:column="38"/></name> <operator pos:line="44" pos:column="39">&amp;<pos:position pos:line="44" pos:column="44"/></operator> <name><name pos:line="44" pos:column="41">inflate_mask<pos:position pos:line="44" pos:column="53"/></name><index pos:line="44" pos:column="53">[<expr><name pos:line="44" pos:column="54">j<pos:position pos:line="44" pos:column="55"/></name></expr>]<pos:position pos:line="44" pos:column="56"/></index></name><operator pos:line="44" pos:column="56">)<pos:position pos:line="44" pos:column="57"/></operator></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
      <macro><name pos:line="45" pos:column="7">DUMPBITS<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument pos:line="45" pos:column="16">t-&gt;bits<pos:position pos:line="45" pos:column="23"/></argument>)<pos:position pos:line="45" pos:column="24"/></argument_list></macro>
      <expr_stmt><expr><name pos:line="46" pos:column="7">e<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <call pos:line="46" pos:column="11">(<name pos:line="46" pos:column="12">uInt<pos:position pos:line="46" pos:column="16"/></name>)<argument_list pos:line="46" pos:column="17">(<argument><expr><name><name pos:line="46" pos:column="18">t<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">exop<pos:position pos:line="46" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="27"/></expr_stmt>
      <if pos:line="47" pos:column="7">if <condition pos:line="47" pos:column="10">(<expr><name pos:line="47" pos:column="11">e<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">==<pos:position pos:line="47" pos:column="15"/></operator> <literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr>)<pos:position pos:line="47" pos:column="18"/></condition><then pos:line="47" pos:column="18">               <comment type="block" pos:line="47" pos:column="33">/* literal */</comment>
      <block pos:line="48" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">c<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">sub<pos:position pos:line="49" pos:column="15"/></name><operator pos:line="49" pos:column="15">.<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="16">lit<pos:position pos:line="49" pos:column="19"/></name></name> <operator pos:line="49" pos:column="20">=<pos:position pos:line="49" pos:column="21"/></operator> <name><name pos:line="49" pos:column="22">t<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">-&gt;<pos:position pos:line="49" pos:column="28"/></operator><name pos:line="49" pos:column="25">base<pos:position pos:line="49" pos:column="29"/></name></name></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">Tracevv<pos:position pos:line="50" pos:column="16"/></name><argument_list pos:line="50" pos:column="16">(<argument><expr><operator pos:line="50" pos:column="17">(<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">stderr<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">,<pos:position pos:line="50" pos:column="25"/></operator> <ternary><condition><expr><name><name pos:line="50" pos:column="26">t<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">base<pos:position pos:line="50" pos:column="33"/></name></name> <operator pos:line="50" pos:column="34">&gt;=<pos:position pos:line="50" pos:column="39"/></operator> <literal type="number" pos:line="50" pos:column="37">0x20<pos:position pos:line="50" pos:column="41"/></literal> <operator pos:line="50" pos:column="42">&amp;&amp;<pos:position pos:line="50" pos:column="52"/></operator> <name><name pos:line="50" pos:column="45">t<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">base<pos:position pos:line="50" pos:column="52"/></name></name> <operator pos:line="50" pos:column="53">&lt;<pos:position pos:line="50" pos:column="57"/></operator> <literal type="number" pos:line="50" pos:column="55">0x7f<pos:position pos:line="50" pos:column="59"/></literal></expr> ?<pos:position pos:line="50" pos:column="61"/></condition><then pos:line="50" pos:column="61">
                 <expr><literal type="string" pos:line="51" pos:column="18">"inflate:         literal '%c'\n"<pos:position pos:line="51" pos:column="51"/></literal></expr> <pos:position pos:line="51" pos:column="52"/></then><else pos:line="51" pos:column="52">:
                 <expr><literal type="string" pos:line="52" pos:column="18">"inflate:         literal 0x%02x\n"<pos:position pos:line="52" pos:column="53"/></literal></expr></else></ternary><operator pos:line="52" pos:column="53">,<pos:position pos:line="52" pos:column="54"/></operator> <name><name pos:line="52" pos:column="55">t<pos:position pos:line="52" pos:column="56"/></name><operator pos:line="52" pos:column="56">-&gt;<pos:position pos:line="52" pos:column="61"/></operator><name pos:line="52" pos:column="58">base<pos:position pos:line="52" pos:column="62"/></name></name><operator pos:line="52" pos:column="62">)<pos:position pos:line="52" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="52" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">c<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">mode<pos:position pos:line="53" pos:column="16"/></name></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">LIT<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>
        <break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>
      <if pos:line="56" pos:column="7">if <condition pos:line="56" pos:column="10">(<expr><name pos:line="56" pos:column="11">e<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">&amp;<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="15">16<pos:position pos:line="56" pos:column="17"/></literal></expr>)<pos:position pos:line="56" pos:column="18"/></condition><then pos:line="56" pos:column="18">               <comment type="block" pos:line="56" pos:column="33">/* length */</comment>
      <block pos:line="57" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="58" pos:column="9">c<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">sub<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">.<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">copy<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">.<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">get<pos:position pos:line="58" pos:column="24"/></name></name> <operator pos:line="58" pos:column="25">=<pos:position pos:line="58" pos:column="26"/></operator> <name pos:line="58" pos:column="27">e<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">&amp;<pos:position pos:line="58" pos:column="34"/></operator> <literal type="number" pos:line="58" pos:column="31">15<pos:position pos:line="58" pos:column="33"/></literal></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">c<pos:position pos:line="59" pos:column="10"/></name><operator pos:line="59" pos:column="10">-&gt;<pos:position pos:line="59" pos:column="15"/></operator><name pos:line="59" pos:column="12">len<pos:position pos:line="59" pos:column="15"/></name></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <name><name pos:line="59" pos:column="18">t<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">base<pos:position pos:line="59" pos:column="25"/></name></name></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">c<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">mode<pos:position pos:line="60" pos:column="16"/></name></name> <operator pos:line="60" pos:column="17">=<pos:position pos:line="60" pos:column="18"/></operator> <name pos:line="60" pos:column="19">LENEXT<pos:position pos:line="60" pos:column="25"/></name></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>
        <break pos:line="61" pos:column="9">break;<pos:position pos:line="61" pos:column="15"/></break>
      }<pos:position pos:line="62" pos:column="8"/></block></then></if>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><operator pos:line="63" pos:column="11">(<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="12">e<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">&amp;<pos:position pos:line="63" pos:column="19"/></operator> <literal type="number" pos:line="63" pos:column="16">64<pos:position pos:line="63" pos:column="18"/></literal><operator pos:line="63" pos:column="18">)<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="20">==<pos:position pos:line="63" pos:column="22"/></operator> <literal type="number" pos:line="63" pos:column="23">0<pos:position pos:line="63" pos:column="24"/></literal></expr>)<pos:position pos:line="63" pos:column="25"/></condition><then pos:line="63" pos:column="25">        <comment type="block" pos:line="63" pos:column="33">/* next table */</comment>
      <block pos:line="64" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">c<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">-&gt;<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="12">sub<pos:position pos:line="65" pos:column="15"/></name><operator pos:line="65" pos:column="15">.<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="16">code<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">.<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">need<pos:position pos:line="65" pos:column="25"/></name></name> <operator pos:line="65" pos:column="26">=<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">e<pos:position pos:line="65" pos:column="29"/></name></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">c<pos:position pos:line="66" pos:column="10"/></name><operator pos:line="66" pos:column="10">-&gt;<pos:position pos:line="66" pos:column="15"/></operator><name pos:line="66" pos:column="12">sub<pos:position pos:line="66" pos:column="15"/></name><operator pos:line="66" pos:column="15">.<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="16">code<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">.<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="21">tree<pos:position pos:line="66" pos:column="25"/></name></name> <operator pos:line="66" pos:column="26">=<pos:position pos:line="66" pos:column="27"/></operator> <name><name pos:line="66" pos:column="28">t<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">-&gt;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="31">next<pos:position pos:line="66" pos:column="35"/></name></name></expr>;<pos:position pos:line="66" pos:column="36"/></expr_stmt>
        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>
      }<pos:position pos:line="68" pos:column="8"/></block></then></if>
      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><name pos:line="69" pos:column="11">e<pos:position pos:line="69" pos:column="12"/></name> <operator pos:line="69" pos:column="13">&amp;<pos:position pos:line="69" pos:column="18"/></operator> <literal type="number" pos:line="69" pos:column="15">32<pos:position pos:line="69" pos:column="17"/></literal></expr>)<pos:position pos:line="69" pos:column="18"/></condition><then pos:line="69" pos:column="18">               <comment type="block" pos:line="69" pos:column="33">/* end of block */</comment>
      <block pos:line="70" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">Tracevv<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><operator pos:line="71" pos:column="17">(<pos:position pos:line="71" pos:column="18"/></operator><name pos:line="71" pos:column="18">stderr<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">,<pos:position pos:line="71" pos:column="25"/></operator> <literal type="string" pos:line="71" pos:column="26">"inflate:         end of block\n"<pos:position pos:line="71" pos:column="59"/></literal><operator pos:line="71" pos:column="59">)<pos:position pos:line="71" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">c<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">mode<pos:position pos:line="72" pos:column="16"/></name></name> <operator pos:line="72" pos:column="17">=<pos:position pos:line="72" pos:column="18"/></operator> <name pos:line="72" pos:column="19">WASH<pos:position pos:line="72" pos:column="23"/></name></expr>;<pos:position pos:line="72" pos:column="24"/></expr_stmt>
        <break pos:line="73" pos:column="9">break;<pos:position pos:line="73" pos:column="15"/></break>
      }<pos:position pos:line="74" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="75" pos:column="7">c<pos:position pos:line="75" pos:column="8"/></name><operator pos:line="75" pos:column="8">-&gt;<pos:position pos:line="75" pos:column="13"/></operator><name pos:line="75" pos:column="10">mode<pos:position pos:line="75" pos:column="14"/></name></name> <operator pos:line="75" pos:column="15">=<pos:position pos:line="75" pos:column="16"/></operator> <name pos:line="75" pos:column="17">BADCODE<pos:position pos:line="75" pos:column="24"/></name></expr>;<pos:position pos:line="75" pos:column="25"/></expr_stmt>        <comment type="block" pos:line="75" pos:column="33">/* invalid code */</comment>
      <expr_stmt><expr><name><name pos:line="76" pos:column="7">z<pos:position pos:line="76" pos:column="8"/></name><operator pos:line="76" pos:column="8">-&gt;<pos:position pos:line="76" pos:column="13"/></operator><name pos:line="76" pos:column="10">msg<pos:position pos:line="76" pos:column="13"/></name></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <literal type="string" pos:line="76" pos:column="16">"invalid literal/length code"<pos:position pos:line="76" pos:column="45"/></literal></expr>;<pos:position pos:line="76" pos:column="46"/></expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">r<pos:position pos:line="77" pos:column="8"/></name> <operator pos:line="77" pos:column="9">=<pos:position pos:line="77" pos:column="10"/></operator> <name pos:line="77" pos:column="11">Z_DATA_ERROR<pos:position pos:line="77" pos:column="23"/></name></expr>;<pos:position pos:line="77" pos:column="24"/></expr_stmt>
      <macro><name pos:line="78" pos:column="7">LEAVE<pos:position pos:line="78" pos:column="12"/></name></macro>
    <case pos:line="79" pos:column="5">case <expr><name pos:line="79" pos:column="10">LENEXT<pos:position pos:line="79" pos:column="16"/></name></expr>:<pos:position pos:line="79" pos:column="17"/></case>        <comment type="block" pos:line="79" pos:column="25">/* i: getting length extra (have base) */</comment>
      <expr_stmt><expr><name pos:line="80" pos:column="7">j<pos:position pos:line="80" pos:column="8"/></name> <operator pos:line="80" pos:column="9">=<pos:position pos:line="80" pos:column="10"/></operator> <name><name pos:line="80" pos:column="11">c<pos:position pos:line="80" pos:column="12"/></name><operator pos:line="80" pos:column="12">-&gt;<pos:position pos:line="80" pos:column="17"/></operator><name pos:line="80" pos:column="14">sub<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">.<pos:position pos:line="80" pos:column="18"/></operator><name pos:line="80" pos:column="18">copy<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">.<pos:position pos:line="80" pos:column="23"/></operator><name pos:line="80" pos:column="23">get<pos:position pos:line="80" pos:column="26"/></name></name></expr>;<pos:position pos:line="80" pos:column="27"/></expr_stmt>
      <macro><name pos:line="81" pos:column="7">NEEDBITS<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument pos:line="81" pos:column="16">j<pos:position pos:line="81" pos:column="17"/></argument>)<pos:position pos:line="81" pos:column="18"/></argument_list></macro>
      <expr_stmt><expr><name><name pos:line="82" pos:column="7">c<pos:position pos:line="82" pos:column="8"/></name><operator pos:line="82" pos:column="8">-&gt;<pos:position pos:line="82" pos:column="13"/></operator><name pos:line="82" pos:column="10">len<pos:position pos:line="82" pos:column="13"/></name></name> <operator pos:line="82" pos:column="14">+=<pos:position pos:line="82" pos:column="16"/></operator> <operator pos:line="82" pos:column="17">(<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">uInt<pos:position pos:line="82" pos:column="22"/></name><operator pos:line="82" pos:column="22">)<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">b<pos:position pos:line="82" pos:column="24"/></name> <operator pos:line="82" pos:column="25">&amp;<pos:position pos:line="82" pos:column="30"/></operator> <name><name pos:line="82" pos:column="27">inflate_mask<pos:position pos:line="82" pos:column="39"/></name><index pos:line="82" pos:column="39">[<expr><name pos:line="82" pos:column="40">j<pos:position pos:line="82" pos:column="41"/></name></expr>]<pos:position pos:line="82" pos:column="42"/></index></name></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt>
      <macro><name pos:line="83" pos:column="7">DUMPBITS<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument pos:line="83" pos:column="16">j<pos:position pos:line="83" pos:column="17"/></argument>)<pos:position pos:line="83" pos:column="18"/></argument_list></macro>
      <expr_stmt><expr><name><name pos:line="84" pos:column="7">c<pos:position pos:line="84" pos:column="8"/></name><operator pos:line="84" pos:column="8">-&gt;<pos:position pos:line="84" pos:column="13"/></operator><name pos:line="84" pos:column="10">sub<pos:position pos:line="84" pos:column="13"/></name><operator pos:line="84" pos:column="13">.<pos:position pos:line="84" pos:column="14"/></operator><name pos:line="84" pos:column="14">code<pos:position pos:line="84" pos:column="18"/></name><operator pos:line="84" pos:column="18">.<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="19">need<pos:position pos:line="84" pos:column="23"/></name></name> <operator pos:line="84" pos:column="24">=<pos:position pos:line="84" pos:column="25"/></operator> <name><name pos:line="84" pos:column="26">c<pos:position pos:line="84" pos:column="27"/></name><operator pos:line="84" pos:column="27">-&gt;<pos:position pos:line="84" pos:column="32"/></operator><name pos:line="84" pos:column="29">dbits<pos:position pos:line="84" pos:column="34"/></name></name></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="85" pos:column="7">c<pos:position pos:line="85" pos:column="8"/></name><operator pos:line="85" pos:column="8">-&gt;<pos:position pos:line="85" pos:column="13"/></operator><name pos:line="85" pos:column="10">sub<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">.<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">code<pos:position pos:line="85" pos:column="18"/></name><operator pos:line="85" pos:column="18">.<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="19">tree<pos:position pos:line="85" pos:column="23"/></name></name> <operator pos:line="85" pos:column="24">=<pos:position pos:line="85" pos:column="25"/></operator> <name><name pos:line="85" pos:column="26">c<pos:position pos:line="85" pos:column="27"/></name><operator pos:line="85" pos:column="27">-&gt;<pos:position pos:line="85" pos:column="32"/></operator><name pos:line="85" pos:column="29">dtree<pos:position pos:line="85" pos:column="34"/></name></name></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="86" pos:column="7">Tracevv<pos:position pos:line="86" pos:column="14"/></name><argument_list pos:line="86" pos:column="14">(<argument><expr><operator pos:line="86" pos:column="15">(<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="16">stderr<pos:position pos:line="86" pos:column="22"/></name><operator pos:line="86" pos:column="22">,<pos:position pos:line="86" pos:column="23"/></operator> <literal type="string" pos:line="86" pos:column="24">"inflate:         length %u\n"<pos:position pos:line="86" pos:column="54"/></literal><operator pos:line="86" pos:column="54">,<pos:position pos:line="86" pos:column="55"/></operator> <name><name pos:line="86" pos:column="56">c<pos:position pos:line="86" pos:column="57"/></name><operator pos:line="86" pos:column="57">-&gt;<pos:position pos:line="86" pos:column="62"/></operator><name pos:line="86" pos:column="59">len<pos:position pos:line="86" pos:column="62"/></name></name><operator pos:line="86" pos:column="62">)<pos:position pos:line="86" pos:column="63"/></operator></expr></argument>)<pos:position pos:line="86" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="87" pos:column="7">c<pos:position pos:line="87" pos:column="8"/></name><operator pos:line="87" pos:column="8">-&gt;<pos:position pos:line="87" pos:column="13"/></operator><name pos:line="87" pos:column="10">mode<pos:position pos:line="87" pos:column="14"/></name></name> <operator pos:line="87" pos:column="15">=<pos:position pos:line="87" pos:column="16"/></operator> <name pos:line="87" pos:column="17">DIST<pos:position pos:line="87" pos:column="21"/></name></expr>;<pos:position pos:line="87" pos:column="22"/></expr_stmt>
    <case pos:line="88" pos:column="5">case <expr><name pos:line="88" pos:column="10">DIST<pos:position pos:line="88" pos:column="14"/></name></expr>:<pos:position pos:line="88" pos:column="15"/></case>          <comment type="block" pos:line="88" pos:column="25">/* i: get distance next */</comment>
      <expr_stmt><expr><name pos:line="89" pos:column="7">j<pos:position pos:line="89" pos:column="8"/></name> <operator pos:line="89" pos:column="9">=<pos:position pos:line="89" pos:column="10"/></operator> <name><name pos:line="89" pos:column="11">c<pos:position pos:line="89" pos:column="12"/></name><operator pos:line="89" pos:column="12">-&gt;<pos:position pos:line="89" pos:column="17"/></operator><name pos:line="89" pos:column="14">sub<pos:position pos:line="89" pos:column="17"/></name><operator pos:line="89" pos:column="17">.<pos:position pos:line="89" pos:column="18"/></operator><name pos:line="89" pos:column="18">code<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">.<pos:position pos:line="89" pos:column="23"/></operator><name pos:line="89" pos:column="23">need<pos:position pos:line="89" pos:column="27"/></name></name></expr>;<pos:position pos:line="89" pos:column="28"/></expr_stmt>
      <macro><name pos:line="90" pos:column="7">NEEDBITS<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument pos:line="90" pos:column="16">j<pos:position pos:line="90" pos:column="17"/></argument>)<pos:position pos:line="90" pos:column="18"/></argument_list></macro>
      <expr_stmt><expr><name pos:line="91" pos:column="7">t<pos:position pos:line="91" pos:column="8"/></name> <operator pos:line="91" pos:column="9">=<pos:position pos:line="91" pos:column="10"/></operator> <name><name pos:line="91" pos:column="11">c<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">-&gt;<pos:position pos:line="91" pos:column="17"/></operator><name pos:line="91" pos:column="14">sub<pos:position pos:line="91" pos:column="17"/></name><operator pos:line="91" pos:column="17">.<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="18">code<pos:position pos:line="91" pos:column="22"/></name><operator pos:line="91" pos:column="22">.<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="23">tree<pos:position pos:line="91" pos:column="27"/></name></name> <operator pos:line="91" pos:column="28">+<pos:position pos:line="91" pos:column="29"/></operator> <operator pos:line="91" pos:column="30">(<pos:position pos:line="91" pos:column="31"/></operator><operator pos:line="91" pos:column="31">(<pos:position pos:line="91" pos:column="32"/></operator><name pos:line="91" pos:column="32">uInt<pos:position pos:line="91" pos:column="36"/></name><operator pos:line="91" pos:column="36">)<pos:position pos:line="91" pos:column="37"/></operator><name pos:line="91" pos:column="37">b<pos:position pos:line="91" pos:column="38"/></name> <operator pos:line="91" pos:column="39">&amp;<pos:position pos:line="91" pos:column="44"/></operator> <name><name pos:line="91" pos:column="41">inflate_mask<pos:position pos:line="91" pos:column="53"/></name><index pos:line="91" pos:column="53">[<expr><name pos:line="91" pos:column="54">j<pos:position pos:line="91" pos:column="55"/></name></expr>]<pos:position pos:line="91" pos:column="56"/></index></name><operator pos:line="91" pos:column="56">)<pos:position pos:line="91" pos:column="57"/></operator></expr>;<pos:position pos:line="91" pos:column="58"/></expr_stmt>
      <macro><name pos:line="92" pos:column="7">DUMPBITS<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument pos:line="92" pos:column="16">t-&gt;bits<pos:position pos:line="92" pos:column="23"/></argument>)<pos:position pos:line="92" pos:column="24"/></argument_list></macro>
      <expr_stmt><expr><name pos:line="93" pos:column="7">e<pos:position pos:line="93" pos:column="8"/></name> <operator pos:line="93" pos:column="9">=<pos:position pos:line="93" pos:column="10"/></operator> <call pos:line="93" pos:column="11">(<name pos:line="93" pos:column="12">uInt<pos:position pos:line="93" pos:column="16"/></name>)<argument_list pos:line="93" pos:column="17">(<argument><expr><name><name pos:line="93" pos:column="18">t<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">-&gt;<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="21">exop<pos:position pos:line="93" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="27"/></expr_stmt>
      <if pos:line="94" pos:column="7">if <condition pos:line="94" pos:column="10">(<expr><name pos:line="94" pos:column="11">e<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">&amp;<pos:position pos:line="94" pos:column="18"/></operator> <literal type="number" pos:line="94" pos:column="15">16<pos:position pos:line="94" pos:column="17"/></literal></expr>)<pos:position pos:line="94" pos:column="18"/></condition><then pos:line="94" pos:column="18">               <comment type="block" pos:line="94" pos:column="33">/* distance */</comment>
      <block pos:line="95" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="96" pos:column="9">c<pos:position pos:line="96" pos:column="10"/></name><operator pos:line="96" pos:column="10">-&gt;<pos:position pos:line="96" pos:column="15"/></operator><name pos:line="96" pos:column="12">sub<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">.<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">copy<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">.<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="21">get<pos:position pos:line="96" pos:column="24"/></name></name> <operator pos:line="96" pos:column="25">=<pos:position pos:line="96" pos:column="26"/></operator> <name pos:line="96" pos:column="27">e<pos:position pos:line="96" pos:column="28"/></name> <operator pos:line="96" pos:column="29">&amp;<pos:position pos:line="96" pos:column="34"/></operator> <literal type="number" pos:line="96" pos:column="31">15<pos:position pos:line="96" pos:column="33"/></literal></expr>;<pos:position pos:line="96" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="97" pos:column="9">c<pos:position pos:line="97" pos:column="10"/></name><operator pos:line="97" pos:column="10">-&gt;<pos:position pos:line="97" pos:column="15"/></operator><name pos:line="97" pos:column="12">sub<pos:position pos:line="97" pos:column="15"/></name><operator pos:line="97" pos:column="15">.<pos:position pos:line="97" pos:column="16"/></operator><name pos:line="97" pos:column="16">copy<pos:position pos:line="97" pos:column="20"/></name><operator pos:line="97" pos:column="20">.<pos:position pos:line="97" pos:column="21"/></operator><name pos:line="97" pos:column="21">dist<pos:position pos:line="97" pos:column="25"/></name></name> <operator pos:line="97" pos:column="26">=<pos:position pos:line="97" pos:column="27"/></operator> <name><name pos:line="97" pos:column="28">t<pos:position pos:line="97" pos:column="29"/></name><operator pos:line="97" pos:column="29">-&gt;<pos:position pos:line="97" pos:column="34"/></operator><name pos:line="97" pos:column="31">base<pos:position pos:line="97" pos:column="35"/></name></name></expr>;<pos:position pos:line="97" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">c<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">mode<pos:position pos:line="98" pos:column="16"/></name></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <name pos:line="98" pos:column="19">DISTEXT<pos:position pos:line="98" pos:column="26"/></name></expr>;<pos:position pos:line="98" pos:column="27"/></expr_stmt>
        <break pos:line="99" pos:column="9">break;<pos:position pos:line="99" pos:column="15"/></break>
      }<pos:position pos:line="100" pos:column="8"/></block></then></if>
      <if pos:line="101" pos:column="7">if <condition pos:line="101" pos:column="10">(<expr><operator pos:line="101" pos:column="11">(<pos:position pos:line="101" pos:column="12"/></operator><name pos:line="101" pos:column="12">e<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">&amp;<pos:position pos:line="101" pos:column="19"/></operator> <literal type="number" pos:line="101" pos:column="16">64<pos:position pos:line="101" pos:column="18"/></literal><operator pos:line="101" pos:column="18">)<pos:position pos:line="101" pos:column="19"/></operator> <operator pos:line="101" pos:column="20">==<pos:position pos:line="101" pos:column="22"/></operator> <literal type="number" pos:line="101" pos:column="23">0<pos:position pos:line="101" pos:column="24"/></literal></expr>)<pos:position pos:line="101" pos:column="25"/></condition><then pos:line="101" pos:column="25">        <comment type="block" pos:line="101" pos:column="33">/* next table */</comment>
      <block pos:line="102" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="103" pos:column="9">c<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">sub<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">.<pos:position pos:line="103" pos:column="16"/></operator><name pos:line="103" pos:column="16">code<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">.<pos:position pos:line="103" pos:column="21"/></operator><name pos:line="103" pos:column="21">need<pos:position pos:line="103" pos:column="25"/></name></name> <operator pos:line="103" pos:column="26">=<pos:position pos:line="103" pos:column="27"/></operator> <name pos:line="103" pos:column="28">e<pos:position pos:line="103" pos:column="29"/></name></expr>;<pos:position pos:line="103" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">c<pos:position pos:line="104" pos:column="10"/></name><operator pos:line="104" pos:column="10">-&gt;<pos:position pos:line="104" pos:column="15"/></operator><name pos:line="104" pos:column="12">sub<pos:position pos:line="104" pos:column="15"/></name><operator pos:line="104" pos:column="15">.<pos:position pos:line="104" pos:column="16"/></operator><name pos:line="104" pos:column="16">code<pos:position pos:line="104" pos:column="20"/></name><operator pos:line="104" pos:column="20">.<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="21">tree<pos:position pos:line="104" pos:column="25"/></name></name> <operator pos:line="104" pos:column="26">=<pos:position pos:line="104" pos:column="27"/></operator> <name><name pos:line="104" pos:column="28">t<pos:position pos:line="104" pos:column="29"/></name><operator pos:line="104" pos:column="29">-&gt;<pos:position pos:line="104" pos:column="34"/></operator><name pos:line="104" pos:column="31">next<pos:position pos:line="104" pos:column="35"/></name></name></expr>;<pos:position pos:line="104" pos:column="36"/></expr_stmt>
        <break pos:line="105" pos:column="9">break;<pos:position pos:line="105" pos:column="15"/></break>
      }<pos:position pos:line="106" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="107" pos:column="7">c<pos:position pos:line="107" pos:column="8"/></name><operator pos:line="107" pos:column="8">-&gt;<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="10">mode<pos:position pos:line="107" pos:column="14"/></name></name> <operator pos:line="107" pos:column="15">=<pos:position pos:line="107" pos:column="16"/></operator> <name pos:line="107" pos:column="17">BADCODE<pos:position pos:line="107" pos:column="24"/></name></expr>;<pos:position pos:line="107" pos:column="25"/></expr_stmt>        <comment type="block" pos:line="107" pos:column="33">/* invalid code */</comment>
      <expr_stmt><expr><name><name pos:line="108" pos:column="7">z<pos:position pos:line="108" pos:column="8"/></name><operator pos:line="108" pos:column="8">-&gt;<pos:position pos:line="108" pos:column="13"/></operator><name pos:line="108" pos:column="10">msg<pos:position pos:line="108" pos:column="13"/></name></name> <operator pos:line="108" pos:column="14">=<pos:position pos:line="108" pos:column="15"/></operator> <literal type="string" pos:line="108" pos:column="16">"invalid distance code"<pos:position pos:line="108" pos:column="39"/></literal></expr>;<pos:position pos:line="108" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name pos:line="109" pos:column="7">r<pos:position pos:line="109" pos:column="8"/></name> <operator pos:line="109" pos:column="9">=<pos:position pos:line="109" pos:column="10"/></operator> <name pos:line="109" pos:column="11">Z_DATA_ERROR<pos:position pos:line="109" pos:column="23"/></name></expr>;<pos:position pos:line="109" pos:column="24"/></expr_stmt>
      <macro><name pos:line="110" pos:column="7">LEAVE<pos:position pos:line="110" pos:column="12"/></name></macro>
    <case pos:line="111" pos:column="5">case <expr><name pos:line="111" pos:column="10">DISTEXT<pos:position pos:line="111" pos:column="17"/></name></expr>:<pos:position pos:line="111" pos:column="18"/></case>       <comment type="block" pos:line="111" pos:column="25">/* i: getting distance extra */</comment>
      <expr_stmt><expr><name pos:line="112" pos:column="7">j<pos:position pos:line="112" pos:column="8"/></name> <operator pos:line="112" pos:column="9">=<pos:position pos:line="112" pos:column="10"/></operator> <name><name pos:line="112" pos:column="11">c<pos:position pos:line="112" pos:column="12"/></name><operator pos:line="112" pos:column="12">-&gt;<pos:position pos:line="112" pos:column="17"/></operator><name pos:line="112" pos:column="14">sub<pos:position pos:line="112" pos:column="17"/></name><operator pos:line="112" pos:column="17">.<pos:position pos:line="112" pos:column="18"/></operator><name pos:line="112" pos:column="18">copy<pos:position pos:line="112" pos:column="22"/></name><operator pos:line="112" pos:column="22">.<pos:position pos:line="112" pos:column="23"/></operator><name pos:line="112" pos:column="23">get<pos:position pos:line="112" pos:column="26"/></name></name></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>
      <macro><name pos:line="113" pos:column="7">NEEDBITS<pos:position pos:line="113" pos:column="15"/></name><argument_list pos:line="113" pos:column="15">(<argument pos:line="113" pos:column="16">j<pos:position pos:line="113" pos:column="17"/></argument>)<pos:position pos:line="113" pos:column="18"/></argument_list></macro>
      <expr_stmt><expr><name><name pos:line="114" pos:column="7">c<pos:position pos:line="114" pos:column="8"/></name><operator pos:line="114" pos:column="8">-&gt;<pos:position pos:line="114" pos:column="13"/></operator><name pos:line="114" pos:column="10">sub<pos:position pos:line="114" pos:column="13"/></name><operator pos:line="114" pos:column="13">.<pos:position pos:line="114" pos:column="14"/></operator><name pos:line="114" pos:column="14">copy<pos:position pos:line="114" pos:column="18"/></name><operator pos:line="114" pos:column="18">.<pos:position pos:line="114" pos:column="19"/></operator><name pos:line="114" pos:column="19">dist<pos:position pos:line="114" pos:column="23"/></name></name> <operator pos:line="114" pos:column="24">+=<pos:position pos:line="114" pos:column="26"/></operator> <operator pos:line="114" pos:column="27">(<pos:position pos:line="114" pos:column="28"/></operator><name pos:line="114" pos:column="28">uInt<pos:position pos:line="114" pos:column="32"/></name><operator pos:line="114" pos:column="32">)<pos:position pos:line="114" pos:column="33"/></operator><name pos:line="114" pos:column="33">b<pos:position pos:line="114" pos:column="34"/></name> <operator pos:line="114" pos:column="35">&amp;<pos:position pos:line="114" pos:column="40"/></operator> <name><name pos:line="114" pos:column="37">inflate_mask<pos:position pos:line="114" pos:column="49"/></name><index pos:line="114" pos:column="49">[<expr><name pos:line="114" pos:column="50">j<pos:position pos:line="114" pos:column="51"/></name></expr>]<pos:position pos:line="114" pos:column="52"/></index></name></expr>;<pos:position pos:line="114" pos:column="53"/></expr_stmt>
      <macro><name pos:line="115" pos:column="7">DUMPBITS<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">(<argument pos:line="115" pos:column="16">j<pos:position pos:line="115" pos:column="17"/></argument>)<pos:position pos:line="115" pos:column="18"/></argument_list></macro>
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">Tracevv<pos:position pos:line="116" pos:column="14"/></name><argument_list pos:line="116" pos:column="14">(<argument><expr><operator pos:line="116" pos:column="15">(<pos:position pos:line="116" pos:column="16"/></operator><name pos:line="116" pos:column="16">stderr<pos:position pos:line="116" pos:column="22"/></name><operator pos:line="116" pos:column="22">,<pos:position pos:line="116" pos:column="23"/></operator> <literal type="string" pos:line="116" pos:column="24">"inflate:         distance %u\n"<pos:position pos:line="116" pos:column="56"/></literal><operator pos:line="116" pos:column="56">,<pos:position pos:line="116" pos:column="57"/></operator> <name><name pos:line="116" pos:column="58">c<pos:position pos:line="116" pos:column="59"/></name><operator pos:line="116" pos:column="59">-&gt;<pos:position pos:line="116" pos:column="64"/></operator><name pos:line="116" pos:column="61">sub<pos:position pos:line="116" pos:column="64"/></name><operator pos:line="116" pos:column="64">.<pos:position pos:line="116" pos:column="65"/></operator><name pos:line="116" pos:column="65">copy<pos:position pos:line="116" pos:column="69"/></name><operator pos:line="116" pos:column="69">.<pos:position pos:line="116" pos:column="70"/></operator><name pos:line="116" pos:column="70">dist<pos:position pos:line="116" pos:column="74"/></name></name><operator pos:line="116" pos:column="74">)<pos:position pos:line="116" pos:column="75"/></operator></expr></argument>)<pos:position pos:line="116" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="117" pos:column="7">c<pos:position pos:line="117" pos:column="8"/></name><operator pos:line="117" pos:column="8">-&gt;<pos:position pos:line="117" pos:column="13"/></operator><name pos:line="117" pos:column="10">mode<pos:position pos:line="117" pos:column="14"/></name></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <name pos:line="117" pos:column="17">COPY<pos:position pos:line="117" pos:column="21"/></name></expr>;<pos:position pos:line="117" pos:column="22"/></expr_stmt>
    <case pos:line="118" pos:column="5">case <expr><name pos:line="118" pos:column="10">COPY<pos:position pos:line="118" pos:column="14"/></name></expr>:<pos:position pos:line="118" pos:column="15"/></case>          <comment type="block" pos:line="118" pos:column="25">/* o: copying bytes in window, waiting for space */</comment>
<cpp:ifndef pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">ifndef<pos:position pos:line="119" pos:column="8"/></cpp:directive> <name pos:line="119" pos:column="9">__TURBOC__<pos:position pos:line="119" pos:column="19"/></name></cpp:ifndef> <comment type="block" pos:line="119" pos:column="20">/* Turbo C bug for following expression */</comment>
      <expr_stmt><expr><name pos:line="120" pos:column="7">f<pos:position pos:line="120" pos:column="8"/></name> <operator pos:line="120" pos:column="9">=<pos:position pos:line="120" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="120" pos:column="11">(<pos:position pos:line="120" pos:column="12"/></operator><name pos:line="120" pos:column="12">uInt<pos:position pos:line="120" pos:column="16"/></name><operator pos:line="120" pos:column="16">)<pos:position pos:line="120" pos:column="17"/></operator><operator pos:line="120" pos:column="17">(<pos:position pos:line="120" pos:column="18"/></operator><name pos:line="120" pos:column="18">q<pos:position pos:line="120" pos:column="19"/></name> <operator pos:line="120" pos:column="20">-<pos:position pos:line="120" pos:column="21"/></operator> <name><name pos:line="120" pos:column="22">s<pos:position pos:line="120" pos:column="23"/></name><operator pos:line="120" pos:column="23">-&gt;<pos:position pos:line="120" pos:column="28"/></operator><name pos:line="120" pos:column="25">window<pos:position pos:line="120" pos:column="31"/></name></name><operator pos:line="120" pos:column="31">)<pos:position pos:line="120" pos:column="32"/></operator> <operator pos:line="120" pos:column="33">&lt;<pos:position pos:line="120" pos:column="37"/></operator> <name><name pos:line="120" pos:column="35">c<pos:position pos:line="120" pos:column="36"/></name><operator pos:line="120" pos:column="36">-&gt;<pos:position pos:line="120" pos:column="41"/></operator><name pos:line="120" pos:column="38">sub<pos:position pos:line="120" pos:column="41"/></name><operator pos:line="120" pos:column="41">.<pos:position pos:line="120" pos:column="42"/></operator><name pos:line="120" pos:column="42">copy<pos:position pos:line="120" pos:column="46"/></name><operator pos:line="120" pos:column="46">.<pos:position pos:line="120" pos:column="47"/></operator><name pos:line="120" pos:column="47">dist<pos:position pos:line="120" pos:column="51"/></name></name></expr> ?<pos:position pos:line="120" pos:column="53"/></condition><then pos:line="120" pos:column="53">
          <expr><name><name pos:line="121" pos:column="11">s<pos:position pos:line="121" pos:column="12"/></name><operator pos:line="121" pos:column="12">-&gt;<pos:position pos:line="121" pos:column="17"/></operator><name pos:line="121" pos:column="14">end<pos:position pos:line="121" pos:column="17"/></name></name> <operator pos:line="121" pos:column="18">-<pos:position pos:line="121" pos:column="19"/></operator> <operator pos:line="121" pos:column="20">(<pos:position pos:line="121" pos:column="21"/></operator><name><name pos:line="121" pos:column="21">c<pos:position pos:line="121" pos:column="22"/></name><operator pos:line="121" pos:column="22">-&gt;<pos:position pos:line="121" pos:column="27"/></operator><name pos:line="121" pos:column="24">sub<pos:position pos:line="121" pos:column="27"/></name><operator pos:line="121" pos:column="27">.<pos:position pos:line="121" pos:column="28"/></operator><name pos:line="121" pos:column="28">copy<pos:position pos:line="121" pos:column="32"/></name><operator pos:line="121" pos:column="32">.<pos:position pos:line="121" pos:column="33"/></operator><name pos:line="121" pos:column="33">dist<pos:position pos:line="121" pos:column="37"/></name></name> <operator pos:line="121" pos:column="38">-<pos:position pos:line="121" pos:column="39"/></operator> <operator pos:line="121" pos:column="40">(<pos:position pos:line="121" pos:column="41"/></operator><name pos:line="121" pos:column="41">q<pos:position pos:line="121" pos:column="42"/></name> <operator pos:line="121" pos:column="43">-<pos:position pos:line="121" pos:column="44"/></operator> <name><name pos:line="121" pos:column="45">s<pos:position pos:line="121" pos:column="46"/></name><operator pos:line="121" pos:column="46">-&gt;<pos:position pos:line="121" pos:column="51"/></operator><name pos:line="121" pos:column="48">window<pos:position pos:line="121" pos:column="54"/></name></name><operator pos:line="121" pos:column="54">)<pos:position pos:line="121" pos:column="55"/></operator><operator pos:line="121" pos:column="55">)<pos:position pos:line="121" pos:column="56"/></operator></expr> <pos:position pos:line="121" pos:column="57"/></then><else pos:line="121" pos:column="57">:
          <expr><name pos:line="122" pos:column="11">q<pos:position pos:line="122" pos:column="12"/></name> <operator pos:line="122" pos:column="13">-<pos:position pos:line="122" pos:column="14"/></operator> <name><name pos:line="122" pos:column="15">c<pos:position pos:line="122" pos:column="16"/></name><operator pos:line="122" pos:column="16">-&gt;<pos:position pos:line="122" pos:column="21"/></operator><name pos:line="122" pos:column="18">sub<pos:position pos:line="122" pos:column="21"/></name><operator pos:line="122" pos:column="21">.<pos:position pos:line="122" pos:column="22"/></operator><name pos:line="122" pos:column="22">copy<pos:position pos:line="122" pos:column="26"/></name><operator pos:line="122" pos:column="26">.<pos:position pos:line="122" pos:column="27"/></operator><name pos:line="122" pos:column="27">dist<pos:position pos:line="122" pos:column="31"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="122" pos:column="32"/></expr_stmt>
<cpp:else pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">else<pos:position pos:line="123" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><name pos:line="124" pos:column="7">f<pos:position pos:line="124" pos:column="8"/></name> <operator pos:line="124" pos:column="9">=<pos:position pos:line="124" pos:column="10"/></operator> <name pos:line="124" pos:column="11">q<pos:position pos:line="124" pos:column="12"/></name> <operator pos:line="124" pos:column="13">-<pos:position pos:line="124" pos:column="14"/></operator> <name><name pos:line="124" pos:column="15">c<pos:position pos:line="124" pos:column="16"/></name><operator pos:line="124" pos:column="16">-&gt;<pos:position pos:line="124" pos:column="21"/></operator><name pos:line="124" pos:column="18">sub<pos:position pos:line="124" pos:column="21"/></name><operator pos:line="124" pos:column="21">.<pos:position pos:line="124" pos:column="22"/></operator><name pos:line="124" pos:column="22">copy<pos:position pos:line="124" pos:column="26"/></name><operator pos:line="124" pos:column="26">.<pos:position pos:line="124" pos:column="27"/></operator><name pos:line="124" pos:column="27">dist<pos:position pos:line="124" pos:column="31"/></name></name></expr>;<pos:position pos:line="124" pos:column="32"/></expr_stmt>
      <if pos:line="125" pos:column="7">if <condition pos:line="125" pos:column="10">(<expr><call pos:line="125" pos:column="11">(<name pos:line="125" pos:column="12">uInt<pos:position pos:line="125" pos:column="16"/></name>)<argument_list pos:line="125" pos:column="17">(<argument><expr><name pos:line="125" pos:column="18">q<pos:position pos:line="125" pos:column="19"/></name> <operator pos:line="125" pos:column="20">-<pos:position pos:line="125" pos:column="21"/></operator> <name><name pos:line="125" pos:column="22">s<pos:position pos:line="125" pos:column="23"/></name><operator pos:line="125" pos:column="23">-&gt;<pos:position pos:line="125" pos:column="28"/></operator><name pos:line="125" pos:column="25">window<pos:position pos:line="125" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="32"/></argument_list></call> <operator pos:line="125" pos:column="33">&lt;<pos:position pos:line="125" pos:column="37"/></operator> <name><name pos:line="125" pos:column="35">c<pos:position pos:line="125" pos:column="36"/></name><operator pos:line="125" pos:column="36">-&gt;<pos:position pos:line="125" pos:column="41"/></operator><name pos:line="125" pos:column="38">sub<pos:position pos:line="125" pos:column="41"/></name><operator pos:line="125" pos:column="41">.<pos:position pos:line="125" pos:column="42"/></operator><name pos:line="125" pos:column="42">copy<pos:position pos:line="125" pos:column="46"/></name><operator pos:line="125" pos:column="46">.<pos:position pos:line="125" pos:column="47"/></operator><name pos:line="125" pos:column="47">dist<pos:position pos:line="125" pos:column="51"/></name></name></expr>)<pos:position pos:line="125" pos:column="52"/></condition><then pos:line="125" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><name pos:line="126" pos:column="9">f<pos:position pos:line="126" pos:column="10"/></name> <operator pos:line="126" pos:column="11">=<pos:position pos:line="126" pos:column="12"/></operator> <name><name pos:line="126" pos:column="13">s<pos:position pos:line="126" pos:column="14"/></name><operator pos:line="126" pos:column="14">-&gt;<pos:position pos:line="126" pos:column="19"/></operator><name pos:line="126" pos:column="16">end<pos:position pos:line="126" pos:column="19"/></name></name> <operator pos:line="126" pos:column="20">-<pos:position pos:line="126" pos:column="21"/></operator> <operator pos:line="126" pos:column="22">(<pos:position pos:line="126" pos:column="23"/></operator><name><name pos:line="126" pos:column="23">c<pos:position pos:line="126" pos:column="24"/></name><operator pos:line="126" pos:column="24">-&gt;<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="26">sub<pos:position pos:line="126" pos:column="29"/></name><operator pos:line="126" pos:column="29">.<pos:position pos:line="126" pos:column="30"/></operator><name pos:line="126" pos:column="30">copy<pos:position pos:line="126" pos:column="34"/></name><operator pos:line="126" pos:column="34">.<pos:position pos:line="126" pos:column="35"/></operator><name pos:line="126" pos:column="35">dist<pos:position pos:line="126" pos:column="39"/></name></name> <operator pos:line="126" pos:column="40">-<pos:position pos:line="126" pos:column="41"/></operator> <operator pos:line="126" pos:column="42">(<pos:position pos:line="126" pos:column="43"/></operator><name pos:line="126" pos:column="43">q<pos:position pos:line="126" pos:column="44"/></name> <operator pos:line="126" pos:column="45">-<pos:position pos:line="126" pos:column="46"/></operator> <name><name pos:line="126" pos:column="47">s<pos:position pos:line="126" pos:column="48"/></name><operator pos:line="126" pos:column="48">-&gt;<pos:position pos:line="126" pos:column="53"/></operator><name pos:line="126" pos:column="50">window<pos:position pos:line="126" pos:column="56"/></name></name><operator pos:line="126" pos:column="56">)<pos:position pos:line="126" pos:column="57"/></operator><operator pos:line="126" pos:column="57">)<pos:position pos:line="126" pos:column="58"/></operator></expr>;<pos:position pos:line="126" pos:column="59"/></expr_stmt></block></then></if>
<cpp:endif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">endif<pos:position pos:line="127" pos:column="7"/></cpp:directive></cpp:endif>
      <while pos:line="128" pos:column="7">while <condition pos:line="128" pos:column="13">(<expr><name><name pos:line="128" pos:column="14">c<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">-&gt;<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="17">len<pos:position pos:line="128" pos:column="20"/></name></name></expr>)<pos:position pos:line="128" pos:column="21"/></condition>
      <block pos:line="129" pos:column="7">{
        <decl_stmt><decl><type><name pos:line="130" pos:column="9">NEEDOUT<pos:position pos:line="130" pos:column="16"/></name></type>
        <name pos:line="131" pos:column="9">OUTBYTE<pos:position pos:line="131" pos:column="16"/></name><argument_list pos:line="131" pos:column="16">(<argument><expr><operator pos:line="131" pos:column="17">*<pos:position pos:line="131" pos:column="18"/></operator><name pos:line="131" pos:column="18">f<pos:position pos:line="131" pos:column="19"/></name><operator pos:line="131" pos:column="19">++<pos:position pos:line="131" pos:column="21"/></operator></expr></argument>)<pos:position pos:line="131" pos:column="22"/></argument_list>
        if <argument_list pos:line="132" pos:column="12">(<argument><expr><name pos:line="132" pos:column="13">f<pos:position pos:line="132" pos:column="14"/></name> <operator pos:line="132" pos:column="15">==<pos:position pos:line="132" pos:column="17"/></operator> <name><name pos:line="132" pos:column="18">s<pos:position pos:line="132" pos:column="19"/></name><operator pos:line="132" pos:column="19">-&gt;<pos:position pos:line="132" pos:column="24"/></operator><name pos:line="132" pos:column="21">end<pos:position pos:line="132" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="25"/></argument_list>
          <name pos:line="133" pos:column="11">f<pos:position pos:line="133" pos:column="12"/></name> <init pos:line="133" pos:column="13">= <expr><name><name pos:line="133" pos:column="15">s<pos:position pos:line="133" pos:column="16"/></name><operator pos:line="133" pos:column="16">-&gt;<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="18">window<pos:position pos:line="133" pos:column="24"/></name></name></expr></init></decl>;<pos:position pos:line="133" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="134" pos:column="9">c<pos:position pos:line="134" pos:column="10"/></name><operator pos:line="134" pos:column="10">-&gt;<pos:position pos:line="134" pos:column="15"/></operator><name pos:line="134" pos:column="12">len<pos:position pos:line="134" pos:column="15"/></name></name><operator pos:line="134" pos:column="15">--<pos:position pos:line="134" pos:column="17"/></operator></expr>;<pos:position pos:line="134" pos:column="18"/></expr_stmt>
      }<pos:position pos:line="135" pos:column="8"/></block></while>
      <expr_stmt><expr><name><name pos:line="136" pos:column="7">c<pos:position pos:line="136" pos:column="8"/></name><operator pos:line="136" pos:column="8">-&gt;<pos:position pos:line="136" pos:column="13"/></operator><name pos:line="136" pos:column="10">mode<pos:position pos:line="136" pos:column="14"/></name></name> <operator pos:line="136" pos:column="15">=<pos:position pos:line="136" pos:column="16"/></operator> <name pos:line="136" pos:column="17">START<pos:position pos:line="136" pos:column="22"/></name></expr>;<pos:position pos:line="136" pos:column="23"/></expr_stmt>
      <break pos:line="137" pos:column="7">break;<pos:position pos:line="137" pos:column="13"/></break>
    <case pos:line="138" pos:column="5">case <expr><name pos:line="138" pos:column="10">LIT<pos:position pos:line="138" pos:column="13"/></name></expr>:<pos:position pos:line="138" pos:column="14"/></case>           <comment type="block" pos:line="138" pos:column="25">/* o: got literal, waiting for output space */</comment>
      <function_decl><type><name pos:line="139" pos:column="7">NEEDOUT<pos:position pos:line="139" pos:column="14"/></name></type>
      <name pos:line="140" pos:column="7">OUTBYTE<pos:position pos:line="140" pos:column="14"/></name><parameter_list pos:line="140" pos:column="14">(<parameter><decl><type><name><name pos:line="140" pos:column="15">c<pos:position pos:line="140" pos:column="16"/></name><operator pos:line="140" pos:column="16">-&gt;<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="18">sub<pos:position pos:line="140" pos:column="21"/></name><operator pos:line="140" pos:column="21">.<pos:position pos:line="140" pos:column="22"/></operator><name pos:line="140" pos:column="22">lit<pos:position pos:line="140" pos:column="25"/></name></name></type></decl></parameter>)<pos:position pos:line="140" pos:column="26"/></parameter_list>
      <name pos:line="141" pos:column="7">c<pos:position pos:line="141" pos:column="8"/></name>-&gt;<type><name pos:line="141" pos:column="10">mode<pos:position pos:line="141" pos:column="14"/></name></type> <init pos:line="141" pos:column="15">= <expr><name pos:line="141" pos:column="17">START<pos:position pos:line="141" pos:column="22"/></name></expr></init>;<pos:position pos:line="141" pos:column="23"/></function_decl>
      <break pos:line="142" pos:column="7">break;<pos:position pos:line="142" pos:column="13"/></break>
    <case pos:line="143" pos:column="5">case <expr><name pos:line="143" pos:column="10">WASH<pos:position pos:line="143" pos:column="14"/></name></expr>:<pos:position pos:line="143" pos:column="15"/></case>          <comment type="block" pos:line="143" pos:column="25">/* o: got eob, possibly more output */</comment>
      <macro><name pos:line="144" pos:column="7">FLUSH<pos:position pos:line="144" pos:column="12"/></name></macro>
      <if pos:line="145" pos:column="7">if <condition pos:line="145" pos:column="10">(<expr><name><name pos:line="145" pos:column="11">s<pos:position pos:line="145" pos:column="12"/></name><operator pos:line="145" pos:column="12">-&gt;<pos:position pos:line="145" pos:column="17"/></operator><name pos:line="145" pos:column="14">read<pos:position pos:line="145" pos:column="18"/></name></name> <operator pos:line="145" pos:column="19">!=<pos:position pos:line="145" pos:column="21"/></operator> <name><name pos:line="145" pos:column="22">s<pos:position pos:line="145" pos:column="23"/></name><operator pos:line="145" pos:column="23">-&gt;<pos:position pos:line="145" pos:column="28"/></operator><name pos:line="145" pos:column="25">write<pos:position pos:line="145" pos:column="30"/></name></name></expr>)<pos:position pos:line="145" pos:column="31"/></condition><then pos:line="145" pos:column="31">
        <block type="pseudo"><decl_stmt><decl><type><name pos:line="146" pos:column="9">LEAVE<pos:position pos:line="146" pos:column="14"/></name></type>
      <name><name pos:line="147" pos:column="7">c<pos:position pos:line="147" pos:column="8"/></name><operator pos:line="147" pos:column="8">-&gt;<pos:position pos:line="147" pos:column="13"/></operator><name pos:line="147" pos:column="10">mode<pos:position pos:line="147" pos:column="14"/></name></name> <init pos:line="147" pos:column="15">= <expr><name pos:line="147" pos:column="17">END<pos:position pos:line="147" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="147" pos:column="21"/></decl_stmt></block></then></if>
    <case pos:line="148" pos:column="5">case <expr><name pos:line="148" pos:column="10">END<pos:position pos:line="148" pos:column="13"/></name></expr>:<pos:position pos:line="148" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="149" pos:column="7">r<pos:position pos:line="149" pos:column="8"/></name> <operator pos:line="149" pos:column="9">=<pos:position pos:line="149" pos:column="10"/></operator> <name pos:line="149" pos:column="11">Z_STREAM_END<pos:position pos:line="149" pos:column="23"/></name></expr>;<pos:position pos:line="149" pos:column="24"/></expr_stmt>
      <macro><name pos:line="150" pos:column="7">LEAVE<pos:position pos:line="150" pos:column="12"/></name></macro>
    <case pos:line="151" pos:column="5">case <expr><name pos:line="151" pos:column="10">BADCODE<pos:position pos:line="151" pos:column="17"/></name></expr>:<pos:position pos:line="151" pos:column="18"/></case>       <comment type="block" pos:line="151" pos:column="25">/* x: got error */</comment>
      <expr_stmt><expr><name pos:line="152" pos:column="7">r<pos:position pos:line="152" pos:column="8"/></name> <operator pos:line="152" pos:column="9">=<pos:position pos:line="152" pos:column="10"/></operator> <name pos:line="152" pos:column="11">Z_DATA_ERROR<pos:position pos:line="152" pos:column="23"/></name></expr>;<pos:position pos:line="152" pos:column="24"/></expr_stmt>
      <macro><name pos:line="153" pos:column="7">LEAVE<pos:position pos:line="153" pos:column="12"/></name></macro>
    <default pos:line="154" pos:column="5">default:<pos:position pos:line="154" pos:column="13"/></default>
      <expr_stmt><expr><name pos:line="155" pos:column="7">r<pos:position pos:line="155" pos:column="8"/></name> <operator pos:line="155" pos:column="9">=<pos:position pos:line="155" pos:column="10"/></operator> <name pos:line="155" pos:column="11">Z_STREAM_ERROR<pos:position pos:line="155" pos:column="25"/></name></expr>;<pos:position pos:line="155" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="156" pos:column="7">LEAVE<pos:position pos:line="156" pos:column="12"/></name></expr></expr_stmt>
  }<pos:position pos:line="157" pos:column="4"/></block></switch></block></while>
}<pos:position pos:line="158" pos:column="2"/></block></unit>

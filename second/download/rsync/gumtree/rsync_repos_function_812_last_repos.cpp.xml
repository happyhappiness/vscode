<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_812_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">sys_acl_free_acl<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">SMB_ACL_T<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">acl_d<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list> 
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">acl_d<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">freeaclp<pos:position pos:line="3" pos:column="28"/></name></name></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29"> <block pos:line="3" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="4" pos:column="17">acl_free<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name><name pos:line="4" pos:column="26">acl_d<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">aclp<pos:position pos:line="4" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
	}<pos:position pos:line="5" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="6" pos:column="9">acl_free<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">acl_d<pos:position pos:line="6" pos:column="23"/></name></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
	<return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

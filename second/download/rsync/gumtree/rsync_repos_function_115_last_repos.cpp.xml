<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_115_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">struct<pos:position pos:line="1" pos:column="14"/></name> <name pos:line="1" pos:column="15">idlist<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">recv_add_id<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">idlist<pos:position pos:line="1" pos:column="48"/></name></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier><modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">idlist_ptr<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="63">struct<pos:position pos:line="1" pos:column="69"/></name> <name pos:line="1" pos:column="70">idlist<pos:position pos:line="1" pos:column="76"/></name></name> <modifier pos:line="1" pos:column="77">*<pos:position pos:line="1" pos:column="78"/></modifier></type><name pos:line="1" pos:column="78">idmap<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>,
				  <parameter><decl><type><name pos:line="2" pos:column="35">id_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">id<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">name<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">idlist<pos:position pos:line="4" pos:column="22"/></name></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">node<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">union<pos:position pos:line="5" pos:column="14"/></name> <name pos:line="5" pos:column="15">name_or_id<pos:position pos:line="5" pos:column="25"/></name></name></type> <name pos:line="5" pos:column="26">noiu<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">flag<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">id_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">id2<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="9" pos:column="9">noiu<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">name<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">name<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt> <comment type="block" pos:line="9" pos:column="27">/* ensure that add_to_list() gets the raw value. */</comment>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">name<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
		<block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="17">name<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <literal type="string" pos:line="11" pos:column="24">""<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt></block></then></if>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">node<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="21">idmap<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></init> <condition><expr><name pos:line="13" pos:column="28">node<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></condition> <incr><expr><name pos:line="13" pos:column="34">node<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">=<pos:position pos:line="13" pos:column="40"/></operator> <name><name pos:line="13" pos:column="41">node<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">next<pos:position pos:line="13" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="52"/></control> <block pos:line="13" pos:column="53">{
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name><name pos:line="14" pos:column="21">node<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">-&gt;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="27">flags<pos:position pos:line="14" pos:column="32"/></name></name> <operator pos:line="14" pos:column="33">&amp;<pos:position pos:line="14" pos:column="38"/></operator> <name pos:line="14" pos:column="35">NFLAGS_WILD_NAME_MATCH<pos:position pos:line="14" pos:column="57"/></name></expr>)<pos:position pos:line="14" pos:column="58"/></condition><then pos:line="14" pos:column="58"> <block pos:line="14" pos:column="59">{
			<if pos:line="15" pos:column="25">if <condition pos:line="15" pos:column="28">(<expr><operator pos:line="15" pos:column="29">!<pos:position pos:line="15" pos:column="30"/></operator><call><name pos:line="15" pos:column="30">wildmatch<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name><name pos:line="15" pos:column="40">node<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">-&gt;<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="46">u<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">.<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="48">name<pos:position pos:line="15" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">name<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="60"/></condition><then pos:line="15" pos:column="60">
				<block type="pseudo"><continue pos:line="16" pos:column="33">continue;<pos:position pos:line="16" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then> <elseif pos:line="17" pos:column="19">else <if pos:line="17" pos:column="24">if <condition pos:line="17" pos:column="27">(<expr><name><name pos:line="17" pos:column="28">node<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">flags<pos:position pos:line="17" pos:column="39"/></name></name> <operator pos:line="17" pos:column="40">&amp;<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="42">NFLAGS_NAME_MATCH<pos:position pos:line="17" pos:column="59"/></name></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60"> <block pos:line="17" pos:column="61">{
			<if pos:line="18" pos:column="25">if <condition pos:line="18" pos:column="28">(<expr><call><name pos:line="18" pos:column="29">strcmp<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">(<argument><expr><name><name pos:line="18" pos:column="36">node<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">u<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">.<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="44">name<pos:position pos:line="18" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">name<pos:position pos:line="18" pos:column="54"/></name></expr></argument>)<pos:position pos:line="18" pos:column="55"/></argument_list></call> <operator pos:line="18" pos:column="56">!=<pos:position pos:line="18" pos:column="58"/></operator> <literal type="number" pos:line="18" pos:column="59">0<pos:position pos:line="18" pos:column="60"/></literal></expr>)<pos:position pos:line="18" pos:column="61"/></condition><then pos:line="18" pos:column="61">
				<block type="pseudo"><continue pos:line="19" pos:column="33">continue;<pos:position pos:line="19" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="20" pos:column="18"/></block></then></if></elseif> <elseif pos:line="20" pos:column="19">else <if pos:line="20" pos:column="24">if <condition pos:line="20" pos:column="27">(<expr><name><name pos:line="20" pos:column="28">node<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">u<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">max_id<pos:position pos:line="20" pos:column="42"/></name></name></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><name><name pos:line="21" pos:column="29">id<pos:position pos:line="21" pos:column="31"/></name> <argument_list type="generic" pos:line="21" pos:column="32">&lt; <argument><expr><name><name pos:line="21" pos:column="34">node<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">id<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">||<pos:position pos:line="21" pos:column="45"/></operator> <name pos:line="21" pos:column="46">id<pos:position pos:line="21" pos:column="48"/></name></expr></argument> &gt;<pos:position pos:line="21" pos:column="53"/></argument_list></name> <name><name pos:line="21" pos:column="51">node<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">-&gt;<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="57">u<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">.<pos:position pos:line="21" pos:column="59"/></operator><name pos:line="21" pos:column="59">max_id<pos:position pos:line="21" pos:column="65"/></name></name></expr>)<pos:position pos:line="21" pos:column="66"/></condition><then pos:line="21" pos:column="66">
				<block type="pseudo"><continue pos:line="22" pos:column="33">continue;<pos:position pos:line="22" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="23" pos:column="18"/></block></then></if></elseif> <else pos:line="23" pos:column="19">else <block pos:line="23" pos:column="24">{
			<if pos:line="24" pos:column="25">if <condition pos:line="24" pos:column="28">(<expr><name><name pos:line="24" pos:column="29">node<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">id<pos:position pos:line="24" pos:column="37"/></name></name> <operator pos:line="24" pos:column="38">!=<pos:position pos:line="24" pos:column="40"/></operator> <name pos:line="24" pos:column="41">id<pos:position pos:line="24" pos:column="43"/></name></expr>)<pos:position pos:line="24" pos:column="44"/></condition><then pos:line="24" pos:column="44">
				<block type="pseudo"><continue pos:line="25" pos:column="33">continue;<pos:position pos:line="25" pos:column="42"/></continue></block></then></if>
		}<pos:position pos:line="26" pos:column="18"/></block></else></if>
		<break pos:line="27" pos:column="17">break;<pos:position pos:line="27" pos:column="23"/></break>
	}<pos:position pos:line="28" pos:column="10"/></block></for>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">node<pos:position pos:line="29" pos:column="17"/></name></expr>)<pos:position pos:line="29" pos:column="18"/></condition><then pos:line="29" pos:column="18">
		<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="17">id2<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">=<pos:position pos:line="30" pos:column="22"/></operator> <name><name pos:line="30" pos:column="23">node<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">id2<pos:position pos:line="30" pos:column="32"/></name></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt></block></then>
	<elseif pos:line="31" pos:column="9">else <if pos:line="31" pos:column="14">if <condition pos:line="31" pos:column="17">(<expr><operator pos:line="31" pos:column="18">*<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">name<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">&amp;&amp;<pos:position pos:line="31" pos:column="34"/></operator> <name pos:line="31" pos:column="27">id<pos:position pos:line="31" pos:column="29"/></name></expr>)<pos:position pos:line="31" pos:column="30"/></condition><then pos:line="31" pos:column="30"> <block pos:line="31" pos:column="31">{
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">idlist_ptr<pos:position pos:line="32" pos:column="31"/></name> <operator pos:line="32" pos:column="32">==<pos:position pos:line="32" pos:column="34"/></operator> <operator pos:line="32" pos:column="35">&amp;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="36">uidlist<pos:position pos:line="32" pos:column="43"/></name></expr>)<pos:position pos:line="32" pos:column="44"/></condition><then pos:line="32" pos:column="44"> <block pos:line="32" pos:column="45">{
			<decl_stmt><decl><type><name pos:line="33" pos:column="25">uid_t<pos:position pos:line="33" pos:column="30"/></name></type> <name pos:line="33" pos:column="31">uid<pos:position pos:line="33" pos:column="34"/></name></decl>;<pos:position pos:line="33" pos:column="35"/></decl_stmt>
			<expr_stmt><expr><name pos:line="34" pos:column="25">id2<pos:position pos:line="34" pos:column="28"/></name> <operator pos:line="34" pos:column="29">=<pos:position pos:line="34" pos:column="30"/></operator> <ternary><condition><expr><call><name pos:line="34" pos:column="31">user_to_uid<pos:position pos:line="34" pos:column="42"/></name><argument_list pos:line="34" pos:column="42">(<argument><expr><name pos:line="34" pos:column="43">name<pos:position pos:line="34" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="49">&amp;<pos:position pos:line="34" pos:column="54"/></operator><name pos:line="34" pos:column="50">uid<pos:position pos:line="34" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="55">False<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr> ?<pos:position pos:line="34" pos:column="63"/></condition><then pos:line="34" pos:column="63"> <expr><name pos:line="34" pos:column="64">uid<pos:position pos:line="34" pos:column="67"/></name></expr> <pos:position pos:line="34" pos:column="68"/></then><else pos:line="34" pos:column="68">: <expr><name pos:line="34" pos:column="70">id<pos:position pos:line="34" pos:column="72"/></name></expr></else></ternary></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then> <else pos:line="35" pos:column="19">else <block pos:line="35" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="36" pos:column="25">gid_t<pos:position pos:line="36" pos:column="30"/></name></type> <name pos:line="36" pos:column="31">gid<pos:position pos:line="36" pos:column="34"/></name></decl>;<pos:position pos:line="36" pos:column="35"/></decl_stmt>
			<expr_stmt><expr><name pos:line="37" pos:column="25">id2<pos:position pos:line="37" pos:column="28"/></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <ternary><condition><expr><call><name pos:line="37" pos:column="31">group_to_gid<pos:position pos:line="37" pos:column="43"/></name><argument_list pos:line="37" pos:column="43">(<argument><expr><name pos:line="37" pos:column="44">name<pos:position pos:line="37" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="50">&amp;<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="51">gid<pos:position pos:line="37" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="56">False<pos:position pos:line="37" pos:column="61"/></name></expr></argument>)<pos:position pos:line="37" pos:column="62"/></argument_list></call></expr> ?<pos:position pos:line="37" pos:column="64"/></condition><then pos:line="37" pos:column="64"> <expr><name pos:line="37" pos:column="65">gid<pos:position pos:line="37" pos:column="68"/></name></expr> <pos:position pos:line="37" pos:column="69"/></then><else pos:line="37" pos:column="69">: <expr><name pos:line="37" pos:column="71">id<pos:position pos:line="37" pos:column="73"/></name></expr></else></ternary></expr>;<pos:position pos:line="37" pos:column="74"/></expr_stmt>
		}<pos:position pos:line="38" pos:column="18"/></block></else></if>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif> <else pos:line="39" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="17">id2<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name pos:line="40" pos:column="23">id<pos:position pos:line="40" pos:column="25"/></name></expr>;<pos:position pos:line="40" pos:column="26"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name pos:line="42" pos:column="9">flag<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <ternary><condition><expr><name pos:line="42" pos:column="16">idlist_ptr<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">==<pos:position pos:line="42" pos:column="29"/></operator> <operator pos:line="42" pos:column="30">&amp;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="31">gidlist<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">&amp;&amp;<pos:position pos:line="42" pos:column="49"/></operator> <operator pos:line="42" pos:column="42">!<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">am_root<pos:position pos:line="42" pos:column="50"/></name> <operator pos:line="42" pos:column="51">&amp;&amp;<pos:position pos:line="42" pos:column="61"/></operator> <operator pos:line="42" pos:column="54">!<pos:position pos:line="42" pos:column="55"/></operator><call><name pos:line="42" pos:column="55">is_in_group<pos:position pos:line="42" pos:column="66"/></name><argument_list pos:line="42" pos:column="66">(<argument><expr><name pos:line="42" pos:column="67">id2<pos:position pos:line="42" pos:column="70"/></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr> ?<pos:position pos:line="42" pos:column="73"/></condition><then pos:line="42" pos:column="73"> <expr><name pos:line="42" pos:column="74">FLAG_SKIP_GROUP<pos:position pos:line="42" pos:column="89"/></name></expr> <pos:position pos:line="42" pos:column="90"/></then><else pos:line="42" pos:column="90">: <expr><literal type="number" pos:line="42" pos:column="92">0<pos:position pos:line="42" pos:column="93"/></literal></expr></else></ternary></expr>;<pos:position pos:line="42" pos:column="94"/></expr_stmt>
	<expr_stmt><expr><name pos:line="43" pos:column="9">node<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <call><name pos:line="43" pos:column="16">add_to_list<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">idlist_ptr<pos:position pos:line="43" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">id<pos:position pos:line="43" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">noiu<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">id2<pos:position pos:line="43" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="55">flag<pos:position pos:line="43" pos:column="59"/></name></expr></argument>)<pos:position pos:line="43" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="61"/></expr_stmt>

	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">DEBUG_GTE<pos:position pos:line="45" pos:column="22"/></name><argument_list pos:line="45" pos:column="22">(<argument><expr><name pos:line="45" pos:column="23">OWN<pos:position pos:line="45" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="28">2<pos:position pos:line="45" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="31"/></condition><then pos:line="45" pos:column="31"> <block pos:line="45" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">rprintf<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">FINFO<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="32">"%sid %u(%s) maps to %u\n"<pos:position pos:line="46" pos:column="58"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><name pos:line="47" pos:column="25">idlist_ptr<pos:position pos:line="47" pos:column="35"/></name> <operator pos:line="47" pos:column="36">==<pos:position pos:line="47" pos:column="38"/></operator> <operator pos:line="47" pos:column="39">&amp;<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="40">uidlist<pos:position pos:line="47" pos:column="47"/></name></expr> ?<pos:position pos:line="47" pos:column="49"/></condition><then pos:line="47" pos:column="49"> <expr><literal type="string" pos:line="47" pos:column="50">"u"<pos:position pos:line="47" pos:column="53"/></literal></expr> <pos:position pos:line="47" pos:column="54"/></then><else pos:line="47" pos:column="54">: <expr><literal type="string" pos:line="47" pos:column="56">"g"<pos:position pos:line="47" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
			<argument><expr><operator pos:line="48" pos:column="25">(<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="26">unsigned<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">)<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="35">id<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="39">name<pos:position pos:line="48" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="45">(<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="46">unsigned<pos:position pos:line="48" pos:column="54"/></name><operator pos:line="48" pos:column="54">)<pos:position pos:line="48" pos:column="55"/></operator><name pos:line="48" pos:column="55">id2<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<return pos:line="51" pos:column="9">return <expr><name pos:line="51" pos:column="16">node<pos:position pos:line="51" pos:column="20"/></name></expr>;<pos:position pos:line="51" pos:column="21"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

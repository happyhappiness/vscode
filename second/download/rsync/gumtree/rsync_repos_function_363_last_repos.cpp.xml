<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_363_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">make_path<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name pos:line="1" pos:column="15">char<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type><name pos:line="1" pos:column="21">fname<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">flags<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="38"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">end<pos:position pos:line="3" pos:column="18"/></name></decl>, <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="21">p<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">flags<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&amp;<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="21">MKP_SKIP_SLASH<pos:position pos:line="6" pos:column="35"/></name></expr>)<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <block pos:line="6" pos:column="37">{
		<while pos:line="7" pos:column="17">while <condition pos:line="7" pos:column="23">(<expr><operator pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">fname<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <literal type="char" pos:line="7" pos:column="34">'/'<pos:position pos:line="7" pos:column="37"/></literal></expr>)<pos:position pos:line="7" pos:column="38"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="25">fname<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">++<pos:position pos:line="8" pos:column="32"/></operator></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt></block></while>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">fname<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <literal type="char" pos:line="11" pos:column="26">'.'<pos:position pos:line="11" pos:column="29"/></literal> <operator pos:line="11" pos:column="30">&amp;&amp;<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="33">fname<pos:position pos:line="11" pos:column="38"/></name><index pos:line="11" pos:column="38">[<expr><literal type="number" pos:line="11" pos:column="39">1<pos:position pos:line="11" pos:column="40"/></literal></expr>]<pos:position pos:line="11" pos:column="41"/></index></name> <operator pos:line="11" pos:column="42">==<pos:position pos:line="11" pos:column="44"/></operator> <literal type="char" pos:line="11" pos:column="45">'/'<pos:position pos:line="11" pos:column="48"/></literal></expr>)<pos:position pos:line="11" pos:column="49"/></condition>
		<block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="17">fname<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">+=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="26">2<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt></block></while>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">flags<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">&amp;<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="21">MKP_DROP_NAME<pos:position pos:line="14" pos:column="34"/></name></expr>)<pos:position pos:line="14" pos:column="35"/></condition><then pos:line="14" pos:column="35"> <block pos:line="14" pos:column="36">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">end<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">strrchr<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">fname<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="38">'/'<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
		<if pos:line="16" pos:column="17">if <condition pos:line="16" pos:column="20">(<expr><operator pos:line="16" pos:column="21">!<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">end<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">||<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">end<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">==<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">fname<pos:position pos:line="16" pos:column="41"/></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
			<block type="pseudo"><return pos:line="17" pos:column="25">return <expr><literal type="number" pos:line="17" pos:column="32">0<pos:position pos:line="17" pos:column="33"/></literal></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then></if>
		<expr_stmt><expr><operator pos:line="18" pos:column="17">*<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">end<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="char" pos:line="18" pos:column="24">'\0'<pos:position pos:line="18" pos:column="28"/></literal></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">end<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">fname<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">+<pos:position pos:line="20" pos:column="30"/></operator> <call><name pos:line="20" pos:column="31">strlen<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name pos:line="20" pos:column="38">fname<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt></block></else></if>

	<comment type="block" pos:line="22" pos:column="9">/* Try to find an existing dir, starting from the deepest dir. */</comment>
	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><expr><name pos:line="23" pos:column="14">p<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">end<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></init> <condition pos:line="23" pos:column="23">;<pos:position pos:line="23" pos:column="24"/></condition> <incr/>)<pos:position pos:line="23" pos:column="26"/></control> <block pos:line="23" pos:column="27">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">dry_run<pos:position pos:line="24" pos:column="28"/></name></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> <block pos:line="24" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="25" pos:column="25">STRUCT_STAT<pos:position pos:line="25" pos:column="36"/></name></type> <name pos:line="25" pos:column="37">st<pos:position pos:line="25" pos:column="39"/></name></decl>;<pos:position pos:line="25" pos:column="40"/></decl_stmt>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><call><name pos:line="26" pos:column="29">do_stat<pos:position pos:line="26" pos:column="36"/></name><argument_list pos:line="26" pos:column="36">(<argument><expr><name pos:line="26" pos:column="37">fname<pos:position pos:line="26" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="44">&amp;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="45">st<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call> <operator pos:line="26" pos:column="49">==<pos:position pos:line="26" pos:column="51"/></operator> <literal type="number" pos:line="26" pos:column="52">0<pos:position pos:line="26" pos:column="53"/></literal></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
				<if pos:line="27" pos:column="33">if <condition pos:line="27" pos:column="36">(<expr><call><name pos:line="27" pos:column="37">S_ISDIR<pos:position pos:line="27" pos:column="44"/></name><argument_list pos:line="27" pos:column="44">(<argument><expr><name><name pos:line="27" pos:column="45">st<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">.<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="48">st_mode<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57">
					<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="41">errno<pos:position pos:line="28" pos:column="46"/></name> <operator pos:line="28" pos:column="47">=<pos:position pos:line="28" pos:column="48"/></operator> <name pos:line="28" pos:column="49">EEXIST<pos:position pos:line="28" pos:column="55"/></name></expr>;<pos:position pos:line="28" pos:column="56"/></expr_stmt></block></then>
				<else pos:line="29" pos:column="33">else
					<block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="41">errno<pos:position pos:line="30" pos:column="46"/></name> <operator pos:line="30" pos:column="47">=<pos:position pos:line="30" pos:column="48"/></operator> <name pos:line="30" pos:column="49">ENOTDIR<pos:position pos:line="30" pos:column="56"/></name></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt></block></else></if>
			}<pos:position pos:line="31" pos:column="26"/></block></then></if>
		}<pos:position pos:line="32" pos:column="18"/></block></then> <elseif pos:line="32" pos:column="19">else <if pos:line="32" pos:column="24">if <condition pos:line="32" pos:column="27">(<expr><call><name pos:line="32" pos:column="28">do_mkdir<pos:position pos:line="32" pos:column="36"/></name><argument_list pos:line="32" pos:column="36">(<argument><expr><name pos:line="32" pos:column="37">fname<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="44">ACCESSPERMS<pos:position pos:line="32" pos:column="55"/></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></call> <operator pos:line="32" pos:column="57">==<pos:position pos:line="32" pos:column="59"/></operator> <literal type="number" pos:line="32" pos:column="60">0<pos:position pos:line="32" pos:column="61"/></literal></expr>)<pos:position pos:line="32" pos:column="62"/></condition><then pos:line="32" pos:column="62"> <block pos:line="32" pos:column="63">{
			<expr_stmt><expr><name pos:line="33" pos:column="25">ret<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">++<pos:position pos:line="33" pos:column="30"/></operator></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
			<break pos:line="34" pos:column="25">break;<pos:position pos:line="34" pos:column="31"/></break>
		}<pos:position pos:line="35" pos:column="18"/></block></then></if></elseif></if>

		<if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><name pos:line="37" pos:column="21">errno<pos:position pos:line="37" pos:column="26"/></name> <operator pos:line="37" pos:column="27">!=<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">ENOENT<pos:position pos:line="37" pos:column="36"/></name></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37"> <block pos:line="37" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="38" pos:column="25">STRUCT_STAT<pos:position pos:line="38" pos:column="36"/></name></type> <name pos:line="38" pos:column="37">st<pos:position pos:line="38" pos:column="39"/></name></decl>;<pos:position pos:line="38" pos:column="40"/></decl_stmt>
			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><name pos:line="39" pos:column="29">errno<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">!=<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">EEXIST<pos:position pos:line="39" pos:column="44"/></name> <operator pos:line="39" pos:column="45">||<pos:position pos:line="39" pos:column="47"/></operator> <operator pos:line="39" pos:column="48">(<pos:position pos:line="39" pos:column="49"/></operator><call><name pos:line="39" pos:column="49">do_stat<pos:position pos:line="39" pos:column="56"/></name><argument_list pos:line="39" pos:column="56">(<argument><expr><name pos:line="39" pos:column="57">fname<pos:position pos:line="39" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="64">&amp;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="65">st<pos:position pos:line="39" pos:column="67"/></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call> <operator pos:line="39" pos:column="69">==<pos:position pos:line="39" pos:column="71"/></operator> <literal type="number" pos:line="39" pos:column="72">0<pos:position pos:line="39" pos:column="73"/></literal> <operator pos:line="39" pos:column="74">&amp;&amp;<pos:position pos:line="39" pos:column="84"/></operator> <operator pos:line="39" pos:column="77">!<pos:position pos:line="39" pos:column="78"/></operator><call><name pos:line="39" pos:column="78">S_ISDIR<pos:position pos:line="39" pos:column="85"/></name><argument_list pos:line="39" pos:column="85">(<argument><expr><name><name pos:line="39" pos:column="86">st<pos:position pos:line="39" pos:column="88"/></name><operator pos:line="39" pos:column="88">.<pos:position pos:line="39" pos:column="89"/></operator><name pos:line="39" pos:column="89">st_mode<pos:position pos:line="39" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="97"/></argument_list></call><operator pos:line="39" pos:column="97">)<pos:position pos:line="39" pos:column="98"/></operator></expr>)<pos:position pos:line="39" pos:column="99"/></condition><then pos:line="39" pos:column="99">
				<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="33">ret<pos:position pos:line="40" pos:column="36"/></name> <operator pos:line="40" pos:column="37">=<pos:position pos:line="40" pos:column="38"/></operator> <operator pos:line="40" pos:column="39">-<pos:position pos:line="40" pos:column="40"/></operator><name pos:line="40" pos:column="40">ret<pos:position pos:line="40" pos:column="43"/></name> <operator pos:line="40" pos:column="44">-<pos:position pos:line="40" pos:column="45"/></operator> <literal type="number" pos:line="40" pos:column="46">1<pos:position pos:line="40" pos:column="47"/></literal></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt></block></then></if>
			<break pos:line="41" pos:column="25">break;<pos:position pos:line="41" pos:column="31"/></break>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>
		<while pos:line="43" pos:column="17">while <condition pos:line="43" pos:column="23">(<expr><literal type="number" pos:line="43" pos:column="24">1<pos:position pos:line="43" pos:column="25"/></literal></expr>)<pos:position pos:line="43" pos:column="26"/></condition> <block pos:line="43" pos:column="27">{
			<if pos:line="44" pos:column="25">if <condition pos:line="44" pos:column="28">(<expr><name pos:line="44" pos:column="29">p<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">==<pos:position pos:line="44" pos:column="33"/></operator> <name pos:line="44" pos:column="34">fname<pos:position pos:line="44" pos:column="39"/></name></expr>)<pos:position pos:line="44" pos:column="40"/></condition><then pos:line="44" pos:column="40"> <block pos:line="44" pos:column="41">{
				<comment type="block" pos:line="45" pos:column="33">/* We got a relative path that doesn't exist, so assume that '.'
				 * is there and just break out and create the whole thing. */</comment>
				<expr_stmt><expr><name pos:line="47" pos:column="33">p<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">=<pos:position pos:line="47" pos:column="36"/></operator> <name pos:line="47" pos:column="37">NULL<pos:position pos:line="47" pos:column="41"/></name></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
				<goto pos:line="48" pos:column="33">goto <name pos:line="48" pos:column="38">double_break<pos:position pos:line="48" pos:column="50"/></name>;<pos:position pos:line="48" pos:column="51"/></goto>
			}<pos:position pos:line="49" pos:column="26"/></block></then></if>
			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><operator pos:line="50" pos:column="29">*<pos:position pos:line="50" pos:column="30"/></operator><operator pos:line="50" pos:column="30">--<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="32">p<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">==<pos:position pos:line="50" pos:column="36"/></operator> <literal type="char" pos:line="50" pos:column="37">'/'<pos:position pos:line="50" pos:column="40"/></literal></expr>)<pos:position pos:line="50" pos:column="41"/></condition><then pos:line="50" pos:column="41"> <block pos:line="50" pos:column="42">{
				<if pos:line="51" pos:column="33">if <condition pos:line="51" pos:column="36">(<expr><name pos:line="51" pos:column="37">p<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">==<pos:position pos:line="51" pos:column="41"/></operator> <name pos:line="51" pos:column="42">fname<pos:position pos:line="51" pos:column="47"/></name></expr>)<pos:position pos:line="51" pos:column="48"/></condition><then pos:line="51" pos:column="48"> <block pos:line="51" pos:column="49">{
					<comment type="block" pos:line="52" pos:column="41">/* We reached the "/" dir, which we assume is there. */</comment>
					<goto pos:line="53" pos:column="41">goto <name pos:line="53" pos:column="46">double_break<pos:position pos:line="53" pos:column="58"/></name>;<pos:position pos:line="53" pos:column="59"/></goto>
				}<pos:position pos:line="54" pos:column="34"/></block></then></if>
				<expr_stmt><expr><operator pos:line="55" pos:column="33">*<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="34">p<pos:position pos:line="55" pos:column="35"/></name> <operator pos:line="55" pos:column="36">=<pos:position pos:line="55" pos:column="37"/></operator> <literal type="char" pos:line="55" pos:column="38">'\0'<pos:position pos:line="55" pos:column="42"/></literal></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
				<break pos:line="56" pos:column="33">break;<pos:position pos:line="56" pos:column="39"/></break>
			}<pos:position pos:line="57" pos:column="26"/></block></then></if>
		}<pos:position pos:line="58" pos:column="18"/></block></while>
	}<pos:position pos:line="59" pos:column="10"/></block></for>
  <label><name pos:line="60" pos:column="3">double_break<pos:position pos:line="60" pos:column="15"/></name>:<pos:position pos:line="60" pos:column="16"/></label>

	<comment type="block" pos:line="62" pos:column="9">/* Make all the dirs that we didn't find on the way here. */</comment>
	<while pos:line="63" pos:column="9">while <condition pos:line="63" pos:column="15">(<expr><name pos:line="63" pos:column="16">p<pos:position pos:line="63" pos:column="17"/></name> <operator pos:line="63" pos:column="18">!=<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">end<pos:position pos:line="63" pos:column="24"/></name></expr>)<pos:position pos:line="63" pos:column="25"/></condition> <block pos:line="63" pos:column="26">{
		<if pos:line="64" pos:column="17">if <condition pos:line="64" pos:column="20">(<expr><name pos:line="64" pos:column="21">p<pos:position pos:line="64" pos:column="22"/></name></expr>)<pos:position pos:line="64" pos:column="23"/></condition><then pos:line="64" pos:column="23">
			<block type="pseudo"><expr_stmt><expr><operator pos:line="65" pos:column="25">*<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">p<pos:position pos:line="65" pos:column="27"/></name> <operator pos:line="65" pos:column="28">=<pos:position pos:line="65" pos:column="29"/></operator> <literal type="char" pos:line="65" pos:column="30">'/'<pos:position pos:line="65" pos:column="33"/></literal></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt></block></then>
		<else pos:line="66" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="67" pos:column="25">p<pos:position pos:line="67" pos:column="26"/></name> <operator pos:line="67" pos:column="27">=<pos:position pos:line="67" pos:column="28"/></operator> <name pos:line="67" pos:column="29">fname<pos:position pos:line="67" pos:column="34"/></name></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt></block></else></if>
		<expr_stmt><expr><name pos:line="68" pos:column="17">p<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">+=<pos:position pos:line="68" pos:column="21"/></operator> <call><name pos:line="68" pos:column="22">strlen<pos:position pos:line="68" pos:column="28"/></name><argument_list pos:line="68" pos:column="28">(<argument><expr><name pos:line="68" pos:column="29">p<pos:position pos:line="68" pos:column="30"/></name></expr></argument>)<pos:position pos:line="68" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="32"/></expr_stmt>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name pos:line="69" pos:column="21">ret<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">&lt;<pos:position pos:line="69" pos:column="29"/></operator> <literal type="number" pos:line="69" pos:column="27">0<pos:position pos:line="69" pos:column="28"/></literal></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29"> <comment type="block" pos:line="69" pos:column="30">/* Skip mkdir on error, but keep restoring the path. */</comment>
			<block type="pseudo"><continue pos:line="70" pos:column="25">continue;<pos:position pos:line="70" pos:column="34"/></continue></block></then></if>
		<if pos:line="71" pos:column="17">if <condition pos:line="71" pos:column="20">(<expr><call><name pos:line="71" pos:column="21">do_mkdir<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">(<argument><expr><name pos:line="71" pos:column="30">fname<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="37">ACCESSPERMS<pos:position pos:line="71" pos:column="48"/></name></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></call> <operator pos:line="71" pos:column="50">&lt;<pos:position pos:line="71" pos:column="54"/></operator> <literal type="number" pos:line="71" pos:column="52">0<pos:position pos:line="71" pos:column="53"/></literal></expr>)<pos:position pos:line="71" pos:column="54"/></condition><then pos:line="71" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="25">ret<pos:position pos:line="72" pos:column="28"/></name> <operator pos:line="72" pos:column="29">=<pos:position pos:line="72" pos:column="30"/></operator> <operator pos:line="72" pos:column="31">-<pos:position pos:line="72" pos:column="32"/></operator><name pos:line="72" pos:column="32">ret<pos:position pos:line="72" pos:column="35"/></name> <operator pos:line="72" pos:column="36">-<pos:position pos:line="72" pos:column="37"/></operator> <literal type="number" pos:line="72" pos:column="38">1<pos:position pos:line="72" pos:column="39"/></literal></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt></block></then>
		<else pos:line="73" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="25">ret<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">++<pos:position pos:line="74" pos:column="30"/></operator></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt></block></else></if>
	}<pos:position pos:line="75" pos:column="10"/></block></while>

	<if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">flags<pos:position pos:line="77" pos:column="18"/></name> <operator pos:line="77" pos:column="19">&amp;<pos:position pos:line="77" pos:column="24"/></operator> <name pos:line="77" pos:column="21">MKP_DROP_NAME<pos:position pos:line="77" pos:column="34"/></name></expr>)<pos:position pos:line="77" pos:column="35"/></condition><then pos:line="77" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><operator pos:line="78" pos:column="17">*<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">end<pos:position pos:line="78" pos:column="21"/></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <literal type="char" pos:line="78" pos:column="24">'/'<pos:position pos:line="78" pos:column="27"/></literal></expr>;<pos:position pos:line="78" pos:column="28"/></expr_stmt></block></then></if>

	<return pos:line="80" pos:column="9">return <expr><name pos:line="80" pos:column="16">ret<pos:position pos:line="80" pos:column="19"/></name></expr>;<pos:position pos:line="80" pos:column="20"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

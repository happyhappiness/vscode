<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_356_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">finish_hard_link<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name><name pos:line="1" pos:column="23">struct<pos:position pos:line="1" pos:column="29"/></name> <name pos:line="1" pos:column="30">file_struct<pos:position pos:line="1" pos:column="41"/></name></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">file<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier> <name pos:line="1" pos:column="55">char<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">fname<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="68">int<pos:position pos:line="1" pos:column="71"/></name></type> <name pos:line="1" pos:column="72">fin_ndx<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="2" pos:column="23">STRUCT_STAT<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">stp<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">itemizing<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="56">enum<pos:position pos:line="2" pos:column="60"/></name> <name pos:line="2" pos:column="61">logcode<pos:position pos:line="2" pos:column="68"/></name></name></type> <name pos:line="2" pos:column="69">code<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>,
		      <parameter><decl><type><name pos:line="3" pos:column="23">int<pos:position pos:line="3" pos:column="26"/></name></type> <name pos:line="3" pos:column="27">alt_dest<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="36"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">stat_x<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">prev_sx<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">STRUCT_STAT<pos:position pos:line="6" pos:column="20"/></name></type> <name pos:line="6" pos:column="21">st<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">prev_name<pos:position pos:line="7" pos:column="23"/></name><index pos:line="7" pos:column="23">[<expr><name pos:line="7" pos:column="24">MAXPATHLEN<pos:position pos:line="7" pos:column="34"/></name></expr>]<pos:position pos:line="7" pos:column="35"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="7" pos:column="37">alt_name<pos:position pos:line="7" pos:column="45"/></name><index pos:line="7" pos:column="45">[<expr><name pos:line="7" pos:column="46">MAXPATHLEN<pos:position pos:line="7" pos:column="56"/></name></expr>]<pos:position pos:line="7" pos:column="57"/></index></name></decl>;<pos:position pos:line="7" pos:column="58"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">our_name<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">file_list<pos:position pos:line="9" pos:column="25"/></name></name> <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier></type><name pos:line="9" pos:column="27">flist<pos:position pos:line="9" pos:column="32"/></name></decl>;<pos:position pos:line="9" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">prev_statret<pos:position pos:line="10" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="27">ndx<pos:position pos:line="10" pos:column="30"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="32">prev_ndx<pos:position pos:line="10" pos:column="40"/></name> <init pos:line="10" pos:column="41">= <expr><call><name pos:line="10" pos:column="43">F_HL_PREV<pos:position pos:line="10" pos:column="52"/></name><argument_list pos:line="10" pos:column="52">(<argument><expr><name pos:line="10" pos:column="53">file<pos:position pos:line="10" pos:column="57"/></name></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="59"/></decl_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">stp<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">==<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name> <operator pos:line="12" pos:column="25">&amp;&amp;<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="28">prev_ndx<pos:position pos:line="12" pos:column="36"/></name> <operator pos:line="12" pos:column="37">&gt;=<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">link_stat<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">fname<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="38">&amp;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="39">st<pos:position pos:line="13" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="43">0<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call> <operator pos:line="13" pos:column="46">&lt;<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="48">0<pos:position pos:line="13" pos:column="49"/></literal> <operator pos:line="13" pos:column="50">&amp;&amp;<pos:position pos:line="13" pos:column="60"/></operator> <operator pos:line="13" pos:column="53">!<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">dry_run<pos:position pos:line="13" pos:column="61"/></name></expr>)<pos:position pos:line="13" pos:column="62"/></condition><then pos:line="13" pos:column="62"> <block pos:line="13" pos:column="63">{
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">rsyserr<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">FERROR_XFER<pos:position pos:line="14" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="46">errno<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="53">"stat %s failed"<pos:position pos:line="14" pos:column="69"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="15" pos:column="33">full_fname<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">fname<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
			<return pos:line="16" pos:column="25">return;<pos:position pos:line="16" pos:column="32"/></return>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="18" pos:column="17">stp<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">st<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="21" pos:column="9">/* FIRST combined with DONE means we were the first to get done. */</comment>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">file<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">flags<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">|=<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">FLAG_HLINK_FIRST<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">|<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="43">FLAG_HLINK_DONE<pos:position pos:line="22" pos:column="58"/></name></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">F_HL_PREV<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">file<pos:position pos:line="23" pos:column="23"/></name></expr></argument>)<pos:position pos:line="23" pos:column="24"/></argument_list></call> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">alt_dest<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">alt_dest<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">&gt;=<pos:position pos:line="24" pos:column="27"/></operator> <literal type="number" pos:line="24" pos:column="25">0<pos:position pos:line="24" pos:column="26"/></literal> <operator pos:line="24" pos:column="27">&amp;&amp;<pos:position pos:line="24" pos:column="37"/></operator> <name pos:line="24" pos:column="30">dry_run<pos:position pos:line="24" pos:column="37"/></name></expr>)<pos:position pos:line="24" pos:column="38"/></condition><then pos:line="24" pos:column="38"> <block pos:line="24" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">pathjoin<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">alt_name<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="36">MAXPATHLEN<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="48">basis_dir<pos:position pos:line="25" pos:column="57"/></name><index pos:line="25" pos:column="57">[<expr><name pos:line="25" pos:column="58">alt_dest<pos:position pos:line="25" pos:column="66"/></name></expr>]<pos:position pos:line="25" pos:column="67"/></index></name></expr></argument>,
			 <argument><expr><call><name pos:line="26" pos:column="26">f_name<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">file<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">NULL<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="27" pos:column="17">our_name<pos:position pos:line="27" pos:column="25"/></name> <operator pos:line="27" pos:column="26">=<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="28">alt_name<pos:position pos:line="27" pos:column="36"/></name></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="17">our_name<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">fname<pos:position pos:line="29" pos:column="33"/></name></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">init_stat_x<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><operator pos:line="31" pos:column="21">&amp;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="22">prev_sx<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>

	<while pos:line="33" pos:column="9">while <condition pos:line="33" pos:column="15">(<expr><operator pos:line="33" pos:column="16">(<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">ndx<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">prev_ndx<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">)<pos:position pos:line="33" pos:column="32"/></operator> <operator pos:line="33" pos:column="33">&gt;=<pos:position pos:line="33" pos:column="38"/></operator> <literal type="number" pos:line="33" pos:column="36">0<pos:position pos:line="33" pos:column="37"/></literal></expr>)<pos:position pos:line="33" pos:column="38"/></condition> <block pos:line="33" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="34" pos:column="17">int<pos:position pos:line="34" pos:column="20"/></name></type> <name pos:line="34" pos:column="21">val<pos:position pos:line="34" pos:column="24"/></name></decl>;<pos:position pos:line="34" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name pos:line="35" pos:column="17">flist<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <call><name pos:line="35" pos:column="25">flist_for_ndx<pos:position pos:line="35" pos:column="38"/></name><argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">ndx<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="44">"finish_hard_link"<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><name pos:line="36" pos:column="17">file<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <name><name pos:line="36" pos:column="24">flist<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">files<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><name pos:line="36" pos:column="37">ndx<pos:position pos:line="36" pos:column="40"/></name> <operator pos:line="36" pos:column="41">-<pos:position pos:line="36" pos:column="42"/></operator> <name><name pos:line="36" pos:column="43">flist<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">ndx_start<pos:position pos:line="36" pos:column="59"/></name></name></expr>]<pos:position pos:line="36" pos:column="60"/></index></name></expr>;<pos:position pos:line="36" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="37" pos:column="17">file<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">flags<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <operator pos:line="37" pos:column="31">(<pos:position pos:line="37" pos:column="32"/></operator><name><name pos:line="37" pos:column="32">file<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">-&gt;<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="38">flags<pos:position pos:line="37" pos:column="43"/></name></name> <operator pos:line="37" pos:column="44">&amp;<pos:position pos:line="37" pos:column="49"/></operator> <operator pos:line="37" pos:column="46">~<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="47">FLAG_HLINK_FIRST<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">)<pos:position pos:line="37" pos:column="64"/></operator> <operator pos:line="37" pos:column="65">|<pos:position pos:line="37" pos:column="66"/></operator> <name pos:line="37" pos:column="67">FLAG_HLINK_DONE<pos:position pos:line="37" pos:column="82"/></name></expr>;<pos:position pos:line="37" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><name pos:line="38" pos:column="17">prev_ndx<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <call><name pos:line="38" pos:column="28">F_HL_PREV<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">file<pos:position pos:line="38" pos:column="42"/></name></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">F_HL_PREV<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">file<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call> <operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator> <name pos:line="39" pos:column="35">fin_ndx<pos:position pos:line="39" pos:column="42"/></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">prev_statret<pos:position pos:line="40" pos:column="29"/></name> <operator pos:line="40" pos:column="30">=<pos:position pos:line="40" pos:column="31"/></operator> <call><name pos:line="40" pos:column="32">link_stat<pos:position pos:line="40" pos:column="41"/></name><argument_list pos:line="40" pos:column="41">(<argument><expr><call><name pos:line="40" pos:column="42">f_name<pos:position pos:line="40" pos:column="48"/></name><argument_list pos:line="40" pos:column="48">(<argument><expr><name pos:line="40" pos:column="49">file<pos:position pos:line="40" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="55">prev_name<pos:position pos:line="40" pos:column="64"/></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="40" pos:column="67">&amp;<pos:position pos:line="40" pos:column="72"/></operator><name><name pos:line="40" pos:column="68">prev_sx<pos:position pos:line="40" pos:column="75"/></name><operator pos:line="40" pos:column="75">.<pos:position pos:line="40" pos:column="76"/></operator><name pos:line="40" pos:column="76">st<pos:position pos:line="40" pos:column="78"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="80">0<pos:position pos:line="40" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="83"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">val<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">maybe_hard_link<pos:position pos:line="41" pos:column="38"/></name><argument_list pos:line="41" pos:column="38">(<argument><expr><name pos:line="41" pos:column="39">file<pos:position pos:line="41" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="45">ndx<pos:position pos:line="41" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">prev_name<pos:position pos:line="41" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">prev_statret<pos:position pos:line="41" pos:column="73"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="75">&amp;<pos:position pos:line="41" pos:column="80"/></operator><name pos:line="41" pos:column="76">prev_sx<pos:position pos:line="41" pos:column="83"/></name></expr></argument>,
				      <argument><expr><name pos:line="42" pos:column="39">our_name<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">stp<pos:position pos:line="42" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="54">fname<pos:position pos:line="42" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="61">itemizing<pos:position pos:line="42" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="72">code<pos:position pos:line="42" pos:column="76"/></name></expr></argument>)<pos:position pos:line="42" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="78"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="43" pos:column="17">flist<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">in_progress<pos:position pos:line="43" pos:column="35"/></name></name><operator pos:line="43" pos:column="35">--<pos:position pos:line="43" pos:column="37"/></operator></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">free_stat_x<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><operator pos:line="44" pos:column="29">&amp;<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="30">prev_sx<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">val<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">&lt;<pos:position pos:line="45" pos:column="29"/></operator> <literal type="number" pos:line="45" pos:column="27">0<pos:position pos:line="45" pos:column="28"/></literal></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29">
			<block type="pseudo"><continue pos:line="46" pos:column="25">continue;<pos:position pos:line="46" pos:column="34"/></continue></block></then></if>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">remove_source_files<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">==<pos:position pos:line="47" pos:column="43"/></operator> <literal type="number" pos:line="47" pos:column="44">1<pos:position pos:line="47" pos:column="45"/></literal> <operator pos:line="47" pos:column="46">&amp;&amp;<pos:position pos:line="47" pos:column="56"/></operator> <name pos:line="47" pos:column="49">do_xfers<pos:position pos:line="47" pos:column="57"/></name></expr>)<pos:position pos:line="47" pos:column="58"/></condition><then pos:line="47" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="25">send_msg_int<pos:position pos:line="48" pos:column="37"/></name><argument_list pos:line="48" pos:column="37">(<argument><expr><name pos:line="48" pos:column="38">MSG_SUCCESS<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="51">ndx<pos:position pos:line="48" pos:column="54"/></name></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt></block></then></if>
	}<pos:position pos:line="49" pos:column="10"/></block></while>

	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">inc_recurse<pos:position pos:line="51" pos:column="24"/></name></expr>)<pos:position pos:line="51" pos:column="25"/></condition><then pos:line="51" pos:column="25"> <block pos:line="51" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="52" pos:column="17">int<pos:position pos:line="52" pos:column="20"/></name></type> <name pos:line="52" pos:column="21">gnum<pos:position pos:line="52" pos:column="25"/></name> <init pos:line="52" pos:column="26">= <expr><call><name pos:line="52" pos:column="28">F_HL_GNUM<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">file<pos:position pos:line="52" pos:column="42"/></name></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="44"/></decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="53" pos:column="17">struct<pos:position pos:line="53" pos:column="23"/></name> <name pos:line="53" pos:column="24">ht_int32_node<pos:position pos:line="53" pos:column="37"/></name></name> <modifier pos:line="53" pos:column="38">*<pos:position pos:line="53" pos:column="39"/></modifier></type><name pos:line="53" pos:column="39">node<pos:position pos:line="53" pos:column="43"/></name> <init pos:line="53" pos:column="44">= <expr><call><name pos:line="53" pos:column="46">hashtable_find<pos:position pos:line="53" pos:column="60"/></name><argument_list pos:line="53" pos:column="60">(<argument><expr><name pos:line="53" pos:column="61">prior_hlinks<pos:position pos:line="53" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="75">gnum<pos:position pos:line="53" pos:column="79"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="81">0<pos:position pos:line="53" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="84"/></decl_stmt>
		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><name pos:line="54" pos:column="21">node<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">==<pos:position pos:line="54" pos:column="28"/></operator> <name pos:line="54" pos:column="29">NULL<pos:position pos:line="54" pos:column="33"/></name></expr>)<pos:position pos:line="54" pos:column="34"/></condition><then pos:line="54" pos:column="34"> <block pos:line="54" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">rprintf<pos:position pos:line="55" pos:column="32"/></name><argument_list pos:line="55" pos:column="32">(<argument><expr><name pos:line="55" pos:column="33">FERROR<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="41">"Unable to find a hlink node for %d (%s)\n"<pos:position pos:line="55" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="86">gnum<pos:position pos:line="55" pos:column="90"/></name></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="92">f_name<pos:position pos:line="55" pos:column="98"/></name><argument_list pos:line="55" pos:column="98">(<argument><expr><name pos:line="55" pos:column="99">file<pos:position pos:line="55" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="105">prev_name<pos:position pos:line="55" pos:column="114"/></name></expr></argument>)<pos:position pos:line="55" pos:column="115"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="117"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="56" pos:column="25">exit_cleanup<pos:position pos:line="56" pos:column="37"/></name><argument_list pos:line="56" pos:column="37">(<argument><expr><name pos:line="56" pos:column="38">RERR_MESSAGEIO<pos:position pos:line="56" pos:column="52"/></name></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="57" pos:column="18"/></block></then></if>
		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><name><name pos:line="58" pos:column="21">node<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">data<pos:position pos:line="58" pos:column="31"/></name></name> <operator pos:line="58" pos:column="32">==<pos:position pos:line="58" pos:column="34"/></operator> <name pos:line="58" pos:column="35">NULL<pos:position pos:line="58" pos:column="39"/></name></expr>)<pos:position pos:line="58" pos:column="40"/></condition><then pos:line="58" pos:column="40"> <block pos:line="58" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">rprintf<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">FERROR<pos:position pos:line="59" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="41">"Hlink node data for %d is NULL (%s)\n"<pos:position pos:line="59" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="82">gnum<pos:position pos:line="59" pos:column="86"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="88">f_name<pos:position pos:line="59" pos:column="94"/></name><argument_list pos:line="59" pos:column="94">(<argument><expr><name pos:line="59" pos:column="95">file<pos:position pos:line="59" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="101">prev_name<pos:position pos:line="59" pos:column="110"/></name></expr></argument>)<pos:position pos:line="59" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="113"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">exit_cleanup<pos:position pos:line="60" pos:column="37"/></name><argument_list pos:line="60" pos:column="37">(<argument><expr><name pos:line="60" pos:column="38">RERR_MESSAGEIO<pos:position pos:line="60" pos:column="52"/></name></expr></argument>)<pos:position pos:line="60" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then></if>
		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">CVAL<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name><name pos:line="62" pos:column="26">node<pos:position pos:line="62" pos:column="30"/></name><operator pos:line="62" pos:column="30">-&gt;<pos:position pos:line="62" pos:column="35"/></operator><name pos:line="62" pos:column="32">data<pos:position pos:line="62" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="38">0<pos:position pos:line="62" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="40"/></argument_list></call> <operator pos:line="62" pos:column="41">!=<pos:position pos:line="62" pos:column="43"/></operator> <literal type="number" pos:line="62" pos:column="44">0<pos:position pos:line="62" pos:column="45"/></literal></expr>)<pos:position pos:line="62" pos:column="46"/></condition><then pos:line="62" pos:column="46"> <block pos:line="62" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">rprintf<pos:position pos:line="63" pos:column="32"/></name><argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">FERROR<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="41">"Hlink node data for %d already has path=%s (%s)\n"<pos:position pos:line="63" pos:column="92"/></literal></expr></argument>,
				<argument><expr><name pos:line="64" pos:column="33">gnum<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="39">(<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="40">char<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">*<pos:position pos:line="64" pos:column="45"/></operator><operator pos:line="64" pos:column="45">)<pos:position pos:line="64" pos:column="46"/></operator><name><name pos:line="64" pos:column="46">node<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">-&gt;<pos:position pos:line="64" pos:column="55"/></operator><name pos:line="64" pos:column="52">data<pos:position pos:line="64" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="58">f_name<pos:position pos:line="64" pos:column="64"/></name><argument_list pos:line="64" pos:column="64">(<argument><expr><name pos:line="64" pos:column="65">file<pos:position pos:line="64" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="71">prev_name<pos:position pos:line="64" pos:column="80"/></name></expr></argument>)<pos:position pos:line="64" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="83"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">exit_cleanup<pos:position pos:line="65" pos:column="37"/></name><argument_list pos:line="65" pos:column="37">(<argument><expr><name pos:line="65" pos:column="38">RERR_MESSAGEIO<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="66" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">free<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><name><name pos:line="67" pos:column="22">node<pos:position pos:line="67" pos:column="26"/></name><operator pos:line="67" pos:column="26">-&gt;<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="28">data<pos:position pos:line="67" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="34"/></expr_stmt>
		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">!<pos:position pos:line="68" pos:column="22"/></operator><operator pos:line="68" pos:column="22">(<pos:position pos:line="68" pos:column="23"/></operator><name><name pos:line="68" pos:column="23">node<pos:position pos:line="68" pos:column="27"/></name><operator pos:line="68" pos:column="27">-&gt;<pos:position pos:line="68" pos:column="32"/></operator><name pos:line="68" pos:column="29">data<pos:position pos:line="68" pos:column="33"/></name></name> <operator pos:line="68" pos:column="34">=<pos:position pos:line="68" pos:column="35"/></operator> <call><name pos:line="68" pos:column="36">strdup<pos:position pos:line="68" pos:column="42"/></name><argument_list pos:line="68" pos:column="42">(<argument><expr><name pos:line="68" pos:column="43">our_name<pos:position pos:line="68" pos:column="51"/></name></expr></argument>)<pos:position pos:line="68" pos:column="52"/></argument_list></call><operator pos:line="68" pos:column="52">)<pos:position pos:line="68" pos:column="53"/></operator></expr>)<pos:position pos:line="68" pos:column="54"/></condition><then pos:line="68" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="25">out_of_memory<pos:position pos:line="69" pos:column="38"/></name><argument_list pos:line="69" pos:column="38">(<argument><expr><literal type="string" pos:line="69" pos:column="39">"finish_hard_link"<pos:position pos:line="69" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt></block></then></if>
	}<pos:position pos:line="70" pos:column="10"/></block></then></if>
}<pos:position pos:line="71" pos:column="2"/></block></function></unit>

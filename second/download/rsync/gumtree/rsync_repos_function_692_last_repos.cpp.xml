<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_692_last_repos.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">int<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">read_buf<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">strm<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="26">buf<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="31">size<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
    <decl_stmt><decl><type><name pos:line="2" pos:column="5">z_streamp<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">strm<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">Bytef<pos:position pos:line="3" pos:column="10"/></name> <modifier pos:line="3" pos:column="11">*<pos:position pos:line="3" pos:column="12"/></modifier></type><name pos:line="3" pos:column="12">buf<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">size<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">len<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><name><name pos:line="6" pos:column="20">strm<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">-&gt;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="26">avail_in<pos:position pos:line="6" pos:column="34"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">len<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">&gt;<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="15">size<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20"> <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="21">len<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">=<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">size<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">len<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">==<pos:position pos:line="9" pos:column="15"/></operator> <literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block type="pseudo"><return pos:line="9" pos:column="19">return <expr><literal type="number" pos:line="9" pos:column="26">0<pos:position pos:line="9" pos:column="27"/></literal></expr>;<pos:position pos:line="9" pos:column="28"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">strm<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">avail_in<pos:position pos:line="11" pos:column="19"/></name></name>  <operator pos:line="11" pos:column="21">-=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">len<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">zmemcpy<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">buf<pos:position pos:line="13" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="18">strm<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">next_in<pos:position pos:line="13" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">len<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">strm<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">state<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">wrap<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <literal type="number" pos:line="14" pos:column="30">1<pos:position pos:line="14" pos:column="31"/></literal></expr>)<pos:position pos:line="14" pos:column="32"/></condition><then pos:line="14" pos:column="32"> <block pos:line="14" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">strm<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">adler<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">=<pos:position pos:line="15" pos:column="22"/></operator> <call><name pos:line="15" pos:column="23">adler32<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">(<argument><expr><name><name pos:line="15" pos:column="31">strm<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">adler<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">buf<pos:position pos:line="15" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="49">len<pos:position pos:line="15" pos:column="52"/></name></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then>
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">GZIP<pos:position pos:line="17" pos:column="12"/></name></cpp:ifdef>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><name><name pos:line="18" pos:column="14">strm<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">state<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">wrap<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">==<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="35">2<pos:position pos:line="18" pos:column="36"/></literal></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37"> <block pos:line="18" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">strm<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">adler<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <call><name pos:line="19" pos:column="23">crc32<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">strm<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">adler<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">buf<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="47">len<pos:position pos:line="19" pos:column="50"/></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">strm<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">next_in<pos:position pos:line="22" pos:column="18"/></name></name>  <operator pos:line="22" pos:column="20">+=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="23">len<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">strm<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">total_in<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">+=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">len<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>

    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">int<pos:position pos:line="25" pos:column="16"/></name><operator pos:line="25" pos:column="16">)<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">len<pos:position pos:line="25" pos:column="20"/></name></expr>;<pos:position pos:line="25" pos:column="21"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function_decl></unit>

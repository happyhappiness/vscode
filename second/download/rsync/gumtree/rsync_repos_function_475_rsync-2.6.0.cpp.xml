<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_475_rsync-2.6.0.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">get_name<pos:position pos:line="2" pos:column="9"/></name><argument_list pos:line="2" pos:column="9">(<argument><expr><name pos:line="2" pos:column="10">addr<pos:position pos:line="2" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="16">afd<pos:position pos:line="2" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="21">res<pos:position pos:line="2" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="26">numaddr<pos:position pos:line="2" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="35">pai<pos:position pos:line="2" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="40">port0<pos:position pos:line="2" pos:column="45"/></name></expr></argument>)<pos:position pos:line="2" pos:column="46"/></argument_list>
	const <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><name pos:line="3" pos:column="21">addr<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">afd<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">afd<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">addrinfo<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier><modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">res<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">numaddr<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">addrinfo<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">pai<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">port0<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
<block pos:line="9" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">u_short<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">port<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><name pos:line="10" pos:column="24">port0<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">&amp;<pos:position pos:line="10" pos:column="35"/></operator> <literal type="number" pos:line="10" pos:column="32">0xffff<pos:position pos:line="10" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">hostent<pos:position pos:line="11" pos:column="23"/></name></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">hp<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">addrinfo<pos:position pos:line="12" pos:column="24"/></name></name> <modifier pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></modifier></type><name pos:line="12" pos:column="26">cur<pos:position pos:line="12" pos:column="29"/></name></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">error<pos:position pos:line="13" pos:column="18"/></name> <init pos:line="13" pos:column="19">= <expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
	
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">INET6<pos:position pos:line="15" pos:column="13"/></name></cpp:ifdef>
	<block pos:line="16" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">int<pos:position pos:line="17" pos:column="20"/></name></type> <name pos:line="17" pos:column="21">h_error<pos:position pos:line="17" pos:column="28"/></name></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>
		<expr_stmt><expr><name pos:line="18" pos:column="17">hp<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <call><name pos:line="18" pos:column="22">getipnodebyaddr<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">addr<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="44">afd<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">a_addrlen<pos:position pos:line="18" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="60">afd<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">-&gt;<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="65">a_af<pos:position pos:line="18" pos:column="69"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="71">&amp;<pos:position pos:line="18" pos:column="76"/></operator><name pos:line="18" pos:column="72">h_error<pos:position pos:line="18" pos:column="79"/></name></expr></argument>)<pos:position pos:line="18" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="81"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="21" pos:column="9">hp<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">gethostbyaddr<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">addr<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="34">afd<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">-&gt;<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="39">a_addrlen<pos:position pos:line="21" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="50">AF_INET<pos:position pos:line="21" pos:column="57"/></name></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">hp<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">&amp;&amp;<pos:position pos:line="23" pos:column="26"/></operator> <name><name pos:line="23" pos:column="19">hp<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">h_name<pos:position pos:line="23" pos:column="29"/></name></name> <operator pos:line="23" pos:column="30">&amp;&amp;<pos:position pos:line="23" pos:column="40"/></operator> <name><name pos:line="23" pos:column="33">hp<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">h_name<pos:position pos:line="23" pos:column="43"/></name><index pos:line="23" pos:column="43">[<expr><literal type="number" pos:line="23" pos:column="44">0<pos:position pos:line="23" pos:column="45"/></literal></expr>]<pos:position pos:line="23" pos:column="46"/></index></name> <operator pos:line="23" pos:column="47">&amp;&amp;<pos:position pos:line="23" pos:column="57"/></operator> <name><name pos:line="23" pos:column="50">hp<pos:position pos:line="23" pos:column="52"/></name><operator pos:line="23" pos:column="52">-&gt;<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="54">h_addr_list<pos:position pos:line="23" pos:column="65"/></name><index pos:line="23" pos:column="65">[<expr><literal type="number" pos:line="23" pos:column="66">0<pos:position pos:line="23" pos:column="67"/></literal></expr>]<pos:position pos:line="23" pos:column="68"/></index></name></expr>)<pos:position pos:line="23" pos:column="69"/></condition><then pos:line="23" pos:column="69"> <block pos:line="23" pos:column="70">{
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">!<pos:position pos:line="24" pos:column="22"/></operator><call><name pos:line="24" pos:column="22">get_ai<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">&amp;<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="30">cur<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">pai<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">afd<pos:position pos:line="24" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="45">hp<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">h_addr_list<pos:position pos:line="24" pos:column="60"/></name><index pos:line="24" pos:column="60">[<expr><literal type="number" pos:line="24" pos:column="61">0<pos:position pos:line="24" pos:column="62"/></literal></expr>]<pos:position pos:line="24" pos:column="63"/></index></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">port<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="71"/></condition><then pos:line="24" pos:column="71">
			<block type="pseudo"><goto pos:line="25" pos:column="25">goto <name pos:line="25" pos:column="30">free<pos:position pos:line="25" pos:column="34"/></name>;<pos:position pos:line="25" pos:column="35"/></goto></block></then></if>
		<expr_stmt><expr><call><name pos:line="26" pos:column="17">GET_CANONNAME<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">cur<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="36">hp<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">h_name<pos:position pos:line="26" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else <block pos:line="27" pos:column="16">{
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><operator pos:line="28" pos:column="21">!<pos:position pos:line="28" pos:column="22"/></operator><call><name pos:line="28" pos:column="22">get_ai<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><operator pos:line="28" pos:column="29">&amp;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="30">cur<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">pai<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">afd<pos:position pos:line="28" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="45">numaddr<pos:position pos:line="28" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">port<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60">
			<block type="pseudo"><goto pos:line="29" pos:column="25">goto <name pos:line="29" pos:column="30">free<pos:position pos:line="29" pos:column="34"/></name>;<pos:position pos:line="29" pos:column="35"/></goto></block></then></if>
	}<pos:position pos:line="30" pos:column="10"/></block></else></if>
	
<cpp:ifdef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifdef<pos:position pos:line="32" pos:column="7"/></cpp:directive> <name pos:line="32" pos:column="8">INET6<pos:position pos:line="32" pos:column="13"/></name></cpp:ifdef>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">hp<pos:position pos:line="33" pos:column="15"/></name></expr>)<pos:position pos:line="33" pos:column="16"/></condition><then pos:line="33" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">freehostent<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><name pos:line="34" pos:column="29">hp<pos:position pos:line="34" pos:column="31"/></name></expr></argument>)<pos:position pos:line="34" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt></block></then></if>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif<pos:position pos:line="35" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">res<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">cur<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
	<return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">SUCCESS<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></return>
 <label><name pos:line="38" pos:column="2">free<pos:position pos:line="38" pos:column="6"/></name>:<pos:position pos:line="38" pos:column="7"/></label>
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">cur<pos:position pos:line="39" pos:column="16"/></name></expr>)<pos:position pos:line="39" pos:column="17"/></condition><then pos:line="39" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="17">freeaddrinfo<pos:position pos:line="40" pos:column="29"/></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">cur<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">ifdef<pos:position pos:line="41" pos:column="7"/></cpp:directive> <name pos:line="41" pos:column="8">INET6<pos:position pos:line="41" pos:column="13"/></name></cpp:ifdef>
	<if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">hp<pos:position pos:line="42" pos:column="15"/></name></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="17">freehostent<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">hp<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt></block></then></if>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
 <comment type="block" pos:line="45" pos:column="2">/* bad: */</comment>
	<expr_stmt><expr><operator pos:line="46" pos:column="9">*<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">res<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name pos:line="46" pos:column="16">NULL<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
	<return pos:line="47" pos:column="9">return <expr><name pos:line="47" pos:column="16">error<pos:position pos:line="47" pos:column="21"/></name></expr>;<pos:position pos:line="47" pos:column="22"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_552_rsync-2.6.8.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">get_addr<pos:position pos:line="2" pos:column="9"/></name><argument_list pos:line="2" pos:column="9">(<argument><expr><name pos:line="2" pos:column="10">hostname<pos:position pos:line="2" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="20">af<pos:position pos:line="2" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="24">res<pos:position pos:line="2" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="29">pai<pos:position pos:line="2" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="34">port0<pos:position pos:line="2" pos:column="39"/></name></expr></argument>)<pos:position pos:line="2" pos:column="40"/></argument_list>
	const <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier><name pos:line="3" pos:column="21">hostname<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">af<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">addrinfo<pos:position pos:line="5" pos:column="24"/></name></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier><modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">res<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">addrinfo<pos:position pos:line="6" pos:column="24"/></name></name> <modifier pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></modifier></type><name pos:line="6" pos:column="26">pai<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">port0<pos:position pos:line="7" pos:column="18"/></name></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
<block pos:line="8" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">u_short<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">port<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">port0<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">&amp;<pos:position pos:line="9" pos:column="35"/></operator> <literal type="number" pos:line="9" pos:column="32">0xffff<pos:position pos:line="9" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="10" pos:column="9">struct<pos:position pos:line="10" pos:column="15"/></name> <name pos:line="10" pos:column="16">addrinfo<pos:position pos:line="10" pos:column="24"/></name></name></type> <name pos:line="10" pos:column="25">sentinel<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="11" pos:column="9">struct<pos:position pos:line="11" pos:column="15"/></name> <name pos:line="11" pos:column="16">hostent<pos:position pos:line="11" pos:column="23"/></name></name> <modifier pos:line="11" pos:column="24">*<pos:position pos:line="11" pos:column="25"/></modifier></type><name pos:line="11" pos:column="25">hp<pos:position pos:line="11" pos:column="27"/></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="12" pos:column="9">struct<pos:position pos:line="12" pos:column="15"/></name> <name pos:line="12" pos:column="16">addrinfo<pos:position pos:line="12" pos:column="24"/></name></name> <modifier pos:line="12" pos:column="25">*<pos:position pos:line="12" pos:column="26"/></modifier></type><name pos:line="12" pos:column="26">top<pos:position pos:line="12" pos:column="29"/></name></decl>, <modifier pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="12" pos:column="32">cur<pos:position pos:line="12" pos:column="35"/></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">afd<pos:position pos:line="13" pos:column="19"/></name></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">afd<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="16">error<pos:position pos:line="14" pos:column="21"/></name> <init pos:line="14" pos:column="22">= <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="27">h_error<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">char<pos:position pos:line="15" pos:column="13"/></name> <modifier pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></modifier></type><name pos:line="15" pos:column="15">ap<pos:position pos:line="15" pos:column="17"/></name></decl>;<pos:position pos:line="15" pos:column="18"/></decl_stmt>
<cpp:ifndef pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">ifndef<pos:position pos:line="16" pos:column="8"/></cpp:directive> <name pos:line="16" pos:column="9">INET6<pos:position pos:line="16" pos:column="14"/></name></cpp:ifndef>
	<decl_stmt><decl><specifier pos:line="17" pos:column="9">extern<pos:position pos:line="17" pos:column="15"/></specifier> <type><name pos:line="17" pos:column="16">int<pos:position pos:line="17" pos:column="19"/></name></type> <name pos:line="17" pos:column="20">h_errno<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="20" pos:column="9">top<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <name pos:line="20" pos:column="15">NULL<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">sentinel<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">ai_next<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name pos:line="21" pos:column="28">NULL<pos:position pos:line="21" pos:column="32"/></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">cur<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <operator pos:line="22" pos:column="15">&amp;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="16">sentinel<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
<cpp:ifdef pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">ifdef<pos:position pos:line="23" pos:column="7"/></cpp:directive> <name pos:line="23" pos:column="8">INET6<pos:position pos:line="23" pos:column="13"/></name></cpp:ifdef>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">af<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">==<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">AF_UNSPEC<pos:position pos:line="24" pos:column="28"/></name></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> <block pos:line="24" pos:column="30">{
		<expr_stmt><expr><name pos:line="25" pos:column="17">hp<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">getipnodebyname<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name pos:line="25" pos:column="38">hostname<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">AF_INET6<pos:position pos:line="25" pos:column="56"/></name></expr></argument>,
				<argument><expr><name pos:line="26" pos:column="33">AI_ADDRCONFIG<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">|<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">AI_ALL<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">|<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="54">AI_V4MAPPED<pos:position pos:line="26" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="67">&amp;<pos:position pos:line="26" pos:column="72"/></operator><name pos:line="26" pos:column="68">h_error<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="27" pos:column="10"/></block></then> <else pos:line="27" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="17">hp<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <call><name pos:line="28" pos:column="22">getipnodebyname<pos:position pos:line="28" pos:column="37"/></name><argument_list pos:line="28" pos:column="37">(<argument><expr><name pos:line="28" pos:column="38">hostname<pos:position pos:line="28" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="48">af<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">AI_ADDRCONFIG<pos:position pos:line="28" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="67">&amp;<pos:position pos:line="28" pos:column="72"/></operator><name pos:line="28" pos:column="68">h_error<pos:position pos:line="28" pos:column="75"/></name></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt></block></else></if>
<cpp:else pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">else<pos:position pos:line="29" pos:column="6"/></cpp:directive></cpp:else>
	<expr_stmt><expr><name pos:line="30" pos:column="9">hp<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">gethostbyname<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name pos:line="30" pos:column="28">hostname<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name pos:line="31" pos:column="9">h_error<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">h_errno<pos:position pos:line="31" pos:column="26"/></name></expr>;<pos:position pos:line="31" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">hp<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">==<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">NULL<pos:position pos:line="33" pos:column="23"/></name></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24"> <block pos:line="33" pos:column="25">{
		<switch pos:line="34" pos:column="17">switch <condition pos:line="34" pos:column="24">(<expr><name pos:line="34" pos:column="25">h_error<pos:position pos:line="34" pos:column="32"/></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition> <block pos:line="34" pos:column="34">{
		<case pos:line="35" pos:column="17">case <expr><name pos:line="35" pos:column="22">HOST_NOT_FOUND<pos:position pos:line="35" pos:column="36"/></name></expr>:<pos:position pos:line="35" pos:column="37"/></case>
		<case pos:line="36" pos:column="17">case <expr><name pos:line="36" pos:column="22">NO_DATA<pos:position pos:line="36" pos:column="29"/></name></expr>:<pos:position pos:line="36" pos:column="30"/></case>
			<expr_stmt><expr><name pos:line="37" pos:column="25">error<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">=<pos:position pos:line="37" pos:column="32"/></operator> <name pos:line="37" pos:column="33">EAI_NODATA<pos:position pos:line="37" pos:column="43"/></name></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt>
			<break pos:line="38" pos:column="25">break;<pos:position pos:line="38" pos:column="31"/></break>
		<case pos:line="39" pos:column="17">case <expr><name pos:line="39" pos:column="22">TRY_AGAIN<pos:position pos:line="39" pos:column="31"/></name></expr>:<pos:position pos:line="39" pos:column="32"/></case>
			<expr_stmt><expr><name pos:line="40" pos:column="25">error<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <name pos:line="40" pos:column="33">EAI_AGAIN<pos:position pos:line="40" pos:column="42"/></name></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
			<break pos:line="41" pos:column="25">break;<pos:position pos:line="41" pos:column="31"/></break>
		<case pos:line="42" pos:column="17">case <expr><name pos:line="42" pos:column="22">NO_RECOVERY<pos:position pos:line="42" pos:column="33"/></name></expr>:<pos:position pos:line="42" pos:column="34"/></case>
		<default pos:line="43" pos:column="17">default:<pos:position pos:line="43" pos:column="25"/></default>
			<expr_stmt><expr><name pos:line="44" pos:column="25">error<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">=<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="33">EAI_FAIL<pos:position pos:line="44" pos:column="41"/></name></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt>
			<break pos:line="45" pos:column="25">break;<pos:position pos:line="45" pos:column="31"/></break>
		}<pos:position pos:line="46" pos:column="18"/></block></switch>
		<goto pos:line="47" pos:column="17">goto <name pos:line="47" pos:column="22">bad<pos:position pos:line="47" pos:column="25"/></name>;<pos:position pos:line="47" pos:column="26"/></goto>
	}<pos:position pos:line="48" pos:column="10"/></block></then></if>

	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name><name pos:line="50" pos:column="14">hp<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">h_name<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">==<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">NULL<pos:position pos:line="50" pos:column="32"/></name><operator pos:line="50" pos:column="32">)<pos:position pos:line="50" pos:column="33"/></operator> <operator pos:line="50" pos:column="34">||<pos:position pos:line="50" pos:column="36"/></operator> <operator pos:line="50" pos:column="37">(<pos:position pos:line="50" pos:column="38"/></operator><name><name pos:line="50" pos:column="38">hp<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">h_name<pos:position pos:line="50" pos:column="48"/></name><index pos:line="50" pos:column="48">[<expr><literal type="number" pos:line="50" pos:column="49">0<pos:position pos:line="50" pos:column="50"/></literal></expr>]<pos:position pos:line="50" pos:column="51"/></index></name> <operator pos:line="50" pos:column="52">==<pos:position pos:line="50" pos:column="54"/></operator> <literal type="number" pos:line="50" pos:column="55">0<pos:position pos:line="50" pos:column="56"/></literal><operator pos:line="50" pos:column="56">)<pos:position pos:line="50" pos:column="57"/></operator> <operator pos:line="50" pos:column="58">||<pos:position pos:line="50" pos:column="60"/></operator>
	    <operator pos:line="51" pos:column="13">(<pos:position pos:line="51" pos:column="14"/></operator><name><name pos:line="51" pos:column="14">hp<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">h_addr_list<pos:position pos:line="51" pos:column="29"/></name><index pos:line="51" pos:column="29">[<expr><literal type="number" pos:line="51" pos:column="30">0<pos:position pos:line="51" pos:column="31"/></literal></expr>]<pos:position pos:line="51" pos:column="32"/></index></name> <operator pos:line="51" pos:column="33">==<pos:position pos:line="51" pos:column="35"/></operator> <name pos:line="51" pos:column="36">NULL<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">)<pos:position pos:line="51" pos:column="41"/></operator></expr>)<pos:position pos:line="51" pos:column="42"/></condition><then pos:line="51" pos:column="42">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">ERR<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">EAI_FAIL<pos:position pos:line="52" pos:column="29"/></name></expr></argument>)<pos:position pos:line="52" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="31"/></expr_stmt></block></then></if>
	
	<for pos:line="54" pos:column="9">for <control pos:line="54" pos:column="13">(<init><expr><name pos:line="54" pos:column="14">i<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal></expr>;<pos:position pos:line="54" pos:column="20"/></init> <condition><expr><operator pos:line="54" pos:column="21">(<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="22">ap<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">=<pos:position pos:line="54" pos:column="26"/></operator> <name><name pos:line="54" pos:column="27">hp<pos:position pos:line="54" pos:column="29"/></name><operator pos:line="54" pos:column="29">-&gt;<pos:position pos:line="54" pos:column="34"/></operator><name pos:line="54" pos:column="31">h_addr_list<pos:position pos:line="54" pos:column="42"/></name><index pos:line="54" pos:column="42">[<expr><name pos:line="54" pos:column="43">i<pos:position pos:line="54" pos:column="44"/></name></expr>]<pos:position pos:line="54" pos:column="45"/></index></name><operator pos:line="54" pos:column="45">)<pos:position pos:line="54" pos:column="46"/></operator> <operator pos:line="54" pos:column="47">!=<pos:position pos:line="54" pos:column="49"/></operator> <name pos:line="54" pos:column="50">NULL<pos:position pos:line="54" pos:column="54"/></name></expr>;<pos:position pos:line="54" pos:column="55"/></condition> <incr><expr><name pos:line="54" pos:column="56">i<pos:position pos:line="54" pos:column="57"/></name><operator pos:line="54" pos:column="57">++<pos:position pos:line="54" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="54" pos:column="60"/></control> <block pos:line="54" pos:column="61">{
		<switch pos:line="55" pos:column="17">switch <condition pos:line="55" pos:column="24">(<expr><name pos:line="55" pos:column="25">af<pos:position pos:line="55" pos:column="27"/></name></expr>)<pos:position pos:line="55" pos:column="28"/></condition> <block pos:line="55" pos:column="29">{
<cpp:ifdef pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">ifdef<pos:position pos:line="56" pos:column="7"/></cpp:directive> <name pos:line="56" pos:column="8">INET6<pos:position pos:line="56" pos:column="13"/></name></cpp:ifdef>
		<case pos:line="57" pos:column="17">case <expr><name pos:line="57" pos:column="22">AF_INET6<pos:position pos:line="57" pos:column="30"/></name></expr>:<pos:position pos:line="57" pos:column="31"/></case>
			<expr_stmt><expr><name pos:line="58" pos:column="25">afd<pos:position pos:line="58" pos:column="28"/></name> <operator pos:line="58" pos:column="29">=<pos:position pos:line="58" pos:column="30"/></operator> <operator pos:line="58" pos:column="31">&amp;<pos:position pos:line="58" pos:column="36"/></operator><name><name pos:line="58" pos:column="32">afdl<pos:position pos:line="58" pos:column="36"/></name><index pos:line="58" pos:column="36">[<expr><name pos:line="58" pos:column="37">N_INET6<pos:position pos:line="58" pos:column="44"/></name></expr>]<pos:position pos:line="58" pos:column="45"/></index></name></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
			<break pos:line="59" pos:column="25">break;<pos:position pos:line="59" pos:column="31"/></break>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifndef pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">ifndef<pos:position pos:line="61" pos:column="8"/></cpp:directive> <name pos:line="61" pos:column="9">INET6<pos:position pos:line="61" pos:column="14"/></name></cpp:ifndef>
		<default pos:line="62" pos:column="17">default:<pos:position pos:line="62" pos:column="25"/></default>	<comment type="block" pos:line="62" pos:column="33">/* AF_UNSPEC */</comment>
<cpp:endif pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">endif<pos:position pos:line="63" pos:column="7"/></cpp:directive></cpp:endif>
		<case pos:line="64" pos:column="17">case <expr><name pos:line="64" pos:column="22">AF_INET<pos:position pos:line="64" pos:column="29"/></name></expr>:<pos:position pos:line="64" pos:column="30"/></case>
			<expr_stmt><expr><name pos:line="65" pos:column="25">afd<pos:position pos:line="65" pos:column="28"/></name> <operator pos:line="65" pos:column="29">=<pos:position pos:line="65" pos:column="30"/></operator> <operator pos:line="65" pos:column="31">&amp;<pos:position pos:line="65" pos:column="36"/></operator><name><name pos:line="65" pos:column="32">afdl<pos:position pos:line="65" pos:column="36"/></name><index pos:line="65" pos:column="36">[<expr><name pos:line="65" pos:column="37">N_INET<pos:position pos:line="65" pos:column="43"/></name></expr>]<pos:position pos:line="65" pos:column="44"/></index></name></expr>;<pos:position pos:line="65" pos:column="45"/></expr_stmt>
			<break pos:line="66" pos:column="25">break;<pos:position pos:line="66" pos:column="31"/></break>
<cpp:ifdef pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">ifdef<pos:position pos:line="67" pos:column="7"/></cpp:directive> <name pos:line="67" pos:column="8">INET6<pos:position pos:line="67" pos:column="13"/></name></cpp:ifdef>
		<default pos:line="68" pos:column="17">default:<pos:position pos:line="68" pos:column="25"/></default>	<comment type="block" pos:line="68" pos:column="33">/* AF_UNSPEC */</comment>
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><call><name pos:line="69" pos:column="29">IN6_IS_ADDR_V4MAPPED<pos:position pos:line="69" pos:column="49"/></name><argument_list pos:line="69" pos:column="49">(<argument><expr><operator pos:line="69" pos:column="50">(<pos:position pos:line="69" pos:column="51"/></operator>struct <name pos:line="69" pos:column="58">in6_addr<pos:position pos:line="69" pos:column="66"/></name> <operator pos:line="69" pos:column="67">*<pos:position pos:line="69" pos:column="68"/></operator><operator pos:line="69" pos:column="68">)<pos:position pos:line="69" pos:column="69"/></operator><name pos:line="69" pos:column="69">ap<pos:position pos:line="69" pos:column="71"/></name></expr></argument>)<pos:position pos:line="69" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="73"/></condition><then pos:line="69" pos:column="73"> <block pos:line="69" pos:column="74">{
				<expr_stmt><expr><name pos:line="70" pos:column="33">ap<pos:position pos:line="70" pos:column="35"/></name> <operator pos:line="70" pos:column="36">+=<pos:position pos:line="70" pos:column="38"/></operator> <sizeof pos:line="70" pos:column="39">sizeof<argument_list pos:line="70" pos:column="45">(<argument><expr pos:line="70" pos:column="46">struct <name pos:line="70" pos:column="53">in6_addr<pos:position pos:line="70" pos:column="61"/></name></expr></argument>)<pos:position pos:line="70" pos:column="62"/></argument_list></sizeof> <operator pos:line="70" pos:column="63">-<pos:position pos:line="70" pos:column="64"/></operator>
					<sizeof pos:line="71" pos:column="41">sizeof<argument_list pos:line="71" pos:column="47">(<argument><expr pos:line="71" pos:column="48">struct <name pos:line="71" pos:column="55">in_addr<pos:position pos:line="71" pos:column="62"/></name></expr></argument>)<pos:position pos:line="71" pos:column="63"/></argument_list></sizeof></expr>;<pos:position pos:line="71" pos:column="64"/></expr_stmt>
				<expr_stmt><expr><name pos:line="72" pos:column="33">afd<pos:position pos:line="72" pos:column="36"/></name> <operator pos:line="72" pos:column="37">=<pos:position pos:line="72" pos:column="38"/></operator> <operator pos:line="72" pos:column="39">&amp;<pos:position pos:line="72" pos:column="44"/></operator><name><name pos:line="72" pos:column="40">afdl<pos:position pos:line="72" pos:column="44"/></name><index pos:line="72" pos:column="44">[<expr><name pos:line="72" pos:column="45">N_INET<pos:position pos:line="72" pos:column="51"/></name></expr>]<pos:position pos:line="72" pos:column="52"/></index></name></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="73" pos:column="26"/></block></then> <else pos:line="73" pos:column="27">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="74" pos:column="33">afd<pos:position pos:line="74" pos:column="36"/></name> <operator pos:line="74" pos:column="37">=<pos:position pos:line="74" pos:column="38"/></operator> <operator pos:line="74" pos:column="39">&amp;<pos:position pos:line="74" pos:column="44"/></operator><name><name pos:line="74" pos:column="40">afdl<pos:position pos:line="74" pos:column="44"/></name><index pos:line="74" pos:column="44">[<expr><name pos:line="74" pos:column="45">N_INET6<pos:position pos:line="74" pos:column="52"/></name></expr>]<pos:position pos:line="74" pos:column="53"/></index></name></expr>;<pos:position pos:line="74" pos:column="54"/></expr_stmt></block></else></if>
			<break pos:line="75" pos:column="25">break;<pos:position pos:line="75" pos:column="31"/></break>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>
		}<pos:position pos:line="77" pos:column="18"/></block></switch>
<cpp:ifdef pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">ifdef<pos:position pos:line="78" pos:column="7"/></cpp:directive> <name pos:line="78" pos:column="8">FAITH<pos:position pos:line="78" pos:column="13"/></name></cpp:ifdef>
		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">translate<pos:position pos:line="79" pos:column="30"/></name> <operator pos:line="79" pos:column="31">&amp;&amp;<pos:position pos:line="79" pos:column="41"/></operator> <name><name pos:line="79" pos:column="34">afd<pos:position pos:line="79" pos:column="37"/></name><operator pos:line="79" pos:column="37">-&gt;<pos:position pos:line="79" pos:column="42"/></operator><name pos:line="79" pos:column="39">a_af<pos:position pos:line="79" pos:column="43"/></name></name> <operator pos:line="79" pos:column="44">==<pos:position pos:line="79" pos:column="46"/></operator> <name pos:line="79" pos:column="47">AF_INET<pos:position pos:line="79" pos:column="54"/></name></expr>)<pos:position pos:line="79" pos:column="55"/></condition><then pos:line="79" pos:column="55"> <block pos:line="79" pos:column="56">{
			<decl_stmt><decl><type><name><name pos:line="80" pos:column="25">struct<pos:position pos:line="80" pos:column="31"/></name> <name pos:line="80" pos:column="32">in6_addr<pos:position pos:line="80" pos:column="40"/></name></name> <modifier pos:line="80" pos:column="41">*<pos:position pos:line="80" pos:column="42"/></modifier></type><name pos:line="80" pos:column="42">in6<pos:position pos:line="80" pos:column="45"/></name></decl>;<pos:position pos:line="80" pos:column="46"/></decl_stmt>

			<if pos:line="82" pos:column="25">if <condition pos:line="82" pos:column="28">(<expr><operator pos:line="82" pos:column="29">!<pos:position pos:line="82" pos:column="30"/></operator><call><name pos:line="82" pos:column="30">get_ai<pos:position pos:line="82" pos:column="36"/></name><argument_list pos:line="82" pos:column="36">(<argument><expr><operator pos:line="82" pos:column="37">&amp;<pos:position pos:line="82" pos:column="42"/></operator><name><name pos:line="82" pos:column="38">cur<pos:position pos:line="82" pos:column="41"/></name><operator pos:line="82" pos:column="41">-&gt;<pos:position pos:line="82" pos:column="46"/></operator><name pos:line="82" pos:column="43">ai_next<pos:position pos:line="82" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="52">pai<pos:position pos:line="82" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="57">&amp;<pos:position pos:line="82" pos:column="62"/></operator><name><name pos:line="82" pos:column="58">afdl<pos:position pos:line="82" pos:column="62"/></name><index pos:line="82" pos:column="62">[<expr><name pos:line="82" pos:column="63">N_INET6<pos:position pos:line="82" pos:column="70"/></name></expr>]<pos:position pos:line="82" pos:column="71"/></index></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="73">ap<pos:position pos:line="82" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="77">port<pos:position pos:line="82" pos:column="81"/></name></expr></argument>)<pos:position pos:line="82" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="83"/></condition><then pos:line="82" pos:column="83">
				<block type="pseudo"><goto pos:line="83" pos:column="33">goto <name pos:line="83" pos:column="38">free<pos:position pos:line="83" pos:column="42"/></name>;<pos:position pos:line="83" pos:column="43"/></goto></block></then></if>
			<expr_stmt><expr><name pos:line="84" pos:column="25">in6<pos:position pos:line="84" pos:column="28"/></name> <operator pos:line="84" pos:column="29">=<pos:position pos:line="84" pos:column="30"/></operator> <operator pos:line="84" pos:column="31">&amp;<pos:position pos:line="84" pos:column="36"/></operator><operator pos:line="84" pos:column="32">(<pos:position pos:line="84" pos:column="33"/></operator><operator pos:line="84" pos:column="33">(<pos:position pos:line="84" pos:column="34"/></operator>struct <name pos:line="84" pos:column="41">sockaddr_in6<pos:position pos:line="84" pos:column="53"/></name> <operator pos:line="84" pos:column="54">*<pos:position pos:line="84" pos:column="55"/></operator><operator pos:line="84" pos:column="55">)<pos:position pos:line="84" pos:column="56"/></operator><name><name pos:line="84" pos:column="56">cur<pos:position pos:line="84" pos:column="59"/></name><operator pos:line="84" pos:column="59">-&gt;<pos:position pos:line="84" pos:column="64"/></operator><name pos:line="84" pos:column="61">ai_next<pos:position pos:line="84" pos:column="68"/></name><operator pos:line="84" pos:column="68">-&gt;<pos:position pos:line="84" pos:column="73"/></operator><name pos:line="84" pos:column="70">ai_addr<pos:position pos:line="84" pos:column="77"/></name></name><operator pos:line="84" pos:column="77">)<pos:position pos:line="84" pos:column="78"/></operator><operator pos:line="84" pos:column="78">-&gt;<pos:position pos:line="84" pos:column="83"/></operator><name pos:line="84" pos:column="80">sin6_addr<pos:position pos:line="84" pos:column="89"/></name></expr>;<pos:position pos:line="84" pos:column="90"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">memcpy<pos:position pos:line="85" pos:column="31"/></name><argument_list pos:line="85" pos:column="31">(<argument><expr><operator pos:line="85" pos:column="32">&amp;<pos:position pos:line="85" pos:column="37"/></operator><name><name pos:line="85" pos:column="33">in6<pos:position pos:line="85" pos:column="36"/></name><operator pos:line="85" pos:column="36">-&gt;<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="38">s6_addr32<pos:position pos:line="85" pos:column="47"/></name><index pos:line="85" pos:column="47">[<expr><literal type="number" pos:line="85" pos:column="48">0<pos:position pos:line="85" pos:column="49"/></literal></expr>]<pos:position pos:line="85" pos:column="50"/></index></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="52">&amp;<pos:position pos:line="85" pos:column="57"/></operator><name pos:line="85" pos:column="53">faith_prefix<pos:position pos:line="85" pos:column="65"/></name></expr></argument>,
			    <argument><expr><sizeof pos:line="86" pos:column="29">sizeof<argument_list pos:line="86" pos:column="35">(<argument><expr pos:line="86" pos:column="36">struct <name pos:line="86" pos:column="43">in6_addr<pos:position pos:line="86" pos:column="51"/></name></expr></argument>)<pos:position pos:line="86" pos:column="52"/></argument_list></sizeof> <operator pos:line="86" pos:column="53">-<pos:position pos:line="86" pos:column="54"/></operator> <sizeof pos:line="86" pos:column="55">sizeof<argument_list pos:line="86" pos:column="61">(<argument><expr pos:line="86" pos:column="62">struct <name pos:line="86" pos:column="69">in_addr<pos:position pos:line="86" pos:column="76"/></name></expr></argument>)<pos:position pos:line="86" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">memcpy<pos:position pos:line="87" pos:column="31"/></name><argument_list pos:line="87" pos:column="31">(<argument><expr><operator pos:line="87" pos:column="32">&amp;<pos:position pos:line="87" pos:column="37"/></operator><name><name pos:line="87" pos:column="33">in6<pos:position pos:line="87" pos:column="36"/></name><operator pos:line="87" pos:column="36">-&gt;<pos:position pos:line="87" pos:column="41"/></operator><name pos:line="87" pos:column="38">s6_addr32<pos:position pos:line="87" pos:column="47"/></name><index pos:line="87" pos:column="47">[<expr><literal type="number" pos:line="87" pos:column="48">3<pos:position pos:line="87" pos:column="49"/></literal></expr>]<pos:position pos:line="87" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="52">ap<pos:position pos:line="87" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="56">sizeof<argument_list pos:line="87" pos:column="62">(<argument><expr pos:line="87" pos:column="63">struct <name pos:line="87" pos:column="70">in_addr<pos:position pos:line="87" pos:column="77"/></name></expr></argument>)<pos:position pos:line="87" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="80"/></expr_stmt>
		}<pos:position pos:line="88" pos:column="18"/></block></then> <elseif pos:line="88" pos:column="19">else
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif<pos:position pos:line="89" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="89" pos:column="8">/* FAITH */</comment>
		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><operator pos:line="90" pos:column="21">!<pos:position pos:line="90" pos:column="22"/></operator><call><name pos:line="90" pos:column="22">get_ai<pos:position pos:line="90" pos:column="28"/></name><argument_list pos:line="90" pos:column="28">(<argument><expr><operator pos:line="90" pos:column="29">&amp;<pos:position pos:line="90" pos:column="34"/></operator><name><name pos:line="90" pos:column="30">cur<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">-&gt;<pos:position pos:line="90" pos:column="38"/></operator><name pos:line="90" pos:column="35">ai_next<pos:position pos:line="90" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="44">pai<pos:position pos:line="90" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="49">afd<pos:position pos:line="90" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="54">ap<pos:position pos:line="90" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="58">port<pos:position pos:line="90" pos:column="62"/></name></expr></argument>)<pos:position pos:line="90" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="64"/></condition><then pos:line="90" pos:column="64">
			<block type="pseudo"><goto pos:line="91" pos:column="25">goto <name pos:line="91" pos:column="30">free<pos:position pos:line="91" pos:column="34"/></name>;<pos:position pos:line="91" pos:column="35"/></goto></block></then></if></elseif></if>
		<if pos:line="92" pos:column="17">if <condition pos:line="92" pos:column="20">(<expr><name pos:line="92" pos:column="21">cur<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">==<pos:position pos:line="92" pos:column="27"/></operator> <operator pos:line="92" pos:column="28">&amp;<pos:position pos:line="92" pos:column="33"/></operator><name pos:line="92" pos:column="29">sentinel<pos:position pos:line="92" pos:column="37"/></name></expr>)<pos:position pos:line="92" pos:column="38"/></condition><then pos:line="92" pos:column="38"> <block pos:line="92" pos:column="39">{
			<expr_stmt><expr><name pos:line="93" pos:column="25">top<pos:position pos:line="93" pos:column="28"/></name> <operator pos:line="93" pos:column="29">=<pos:position pos:line="93" pos:column="30"/></operator> <name><name pos:line="93" pos:column="31">cur<pos:position pos:line="93" pos:column="34"/></name><operator pos:line="93" pos:column="34">-&gt;<pos:position pos:line="93" pos:column="39"/></operator><name pos:line="93" pos:column="36">ai_next<pos:position pos:line="93" pos:column="43"/></name></name></expr>;<pos:position pos:line="93" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">GET_CANONNAME<pos:position pos:line="94" pos:column="38"/></name><argument_list pos:line="94" pos:column="38">(<argument><expr><name pos:line="94" pos:column="39">top<pos:position pos:line="94" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="44">hp<pos:position pos:line="94" pos:column="46"/></name><operator pos:line="94" pos:column="46">-&gt;<pos:position pos:line="94" pos:column="51"/></operator><name pos:line="94" pos:column="48">h_name<pos:position pos:line="94" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="96" pos:column="17">cur<pos:position pos:line="96" pos:column="20"/></name> <operator pos:line="96" pos:column="21">=<pos:position pos:line="96" pos:column="22"/></operator> <name><name pos:line="96" pos:column="23">cur<pos:position pos:line="96" pos:column="26"/></name><operator pos:line="96" pos:column="26">-&gt;<pos:position pos:line="96" pos:column="31"/></operator><name pos:line="96" pos:column="28">ai_next<pos:position pos:line="96" pos:column="35"/></name></name></expr>;<pos:position pos:line="96" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="97" pos:column="10"/></block></for>
<cpp:ifdef pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">ifdef<pos:position pos:line="98" pos:column="7"/></cpp:directive> <name pos:line="98" pos:column="8">INET6<pos:position pos:line="98" pos:column="13"/></name></cpp:ifdef>
	<expr_stmt><expr><call><name pos:line="99" pos:column="9">freehostent<pos:position pos:line="99" pos:column="20"/></name><argument_list pos:line="99" pos:column="20">(<argument><expr><name pos:line="99" pos:column="21">hp<pos:position pos:line="99" pos:column="23"/></name></expr></argument>)<pos:position pos:line="99" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="100" pos:column="1">#<cpp:directive pos:line="100" pos:column="2">endif<pos:position pos:line="100" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><operator pos:line="101" pos:column="9">*<pos:position pos:line="101" pos:column="10"/></operator><name pos:line="101" pos:column="10">res<pos:position pos:line="101" pos:column="13"/></name> <operator pos:line="101" pos:column="14">=<pos:position pos:line="101" pos:column="15"/></operator> <name pos:line="101" pos:column="16">top<pos:position pos:line="101" pos:column="19"/></name></expr>;<pos:position pos:line="101" pos:column="20"/></expr_stmt>
	<return pos:line="102" pos:column="9">return <expr><name pos:line="102" pos:column="16">SUCCESS<pos:position pos:line="102" pos:column="23"/></name></expr>;<pos:position pos:line="102" pos:column="24"/></return>
 <label><name pos:line="103" pos:column="2">free<pos:position pos:line="103" pos:column="6"/></name>:<pos:position pos:line="103" pos:column="7"/></label>
	<if pos:line="104" pos:column="9">if <condition pos:line="104" pos:column="12">(<expr><name pos:line="104" pos:column="13">top<pos:position pos:line="104" pos:column="16"/></name></expr>)<pos:position pos:line="104" pos:column="17"/></condition><then pos:line="104" pos:column="17">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="105" pos:column="17">freeaddrinfo<pos:position pos:line="105" pos:column="29"/></name><argument_list pos:line="105" pos:column="29">(<argument><expr><name pos:line="105" pos:column="30">top<pos:position pos:line="105" pos:column="33"/></name></expr></argument>)<pos:position pos:line="105" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="35"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">ifdef<pos:position pos:line="106" pos:column="7"/></cpp:directive> <name pos:line="106" pos:column="8">INET6<pos:position pos:line="106" pos:column="13"/></name></cpp:ifdef>
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">hp<pos:position pos:line="107" pos:column="15"/></name></expr>)<pos:position pos:line="107" pos:column="16"/></condition><then pos:line="107" pos:column="16">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="17">freehostent<pos:position pos:line="108" pos:column="28"/></name><argument_list pos:line="108" pos:column="28">(<argument><expr><name pos:line="108" pos:column="29">hp<pos:position pos:line="108" pos:column="31"/></name></expr></argument>)<pos:position pos:line="108" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="33"/></expr_stmt></block></then></if>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
 <label><name pos:line="110" pos:column="2">bad<pos:position pos:line="110" pos:column="5"/></name>:<pos:position pos:line="110" pos:column="6"/></label>
	<expr_stmt><expr><operator pos:line="111" pos:column="9">*<pos:position pos:line="111" pos:column="10"/></operator><name pos:line="111" pos:column="10">res<pos:position pos:line="111" pos:column="13"/></name> <operator pos:line="111" pos:column="14">=<pos:position pos:line="111" pos:column="15"/></operator> <name pos:line="111" pos:column="16">NULL<pos:position pos:line="111" pos:column="20"/></name></expr>;<pos:position pos:line="111" pos:column="21"/></expr_stmt>
	<return pos:line="112" pos:column="9">return <expr><name pos:line="112" pos:column="16">error<pos:position pos:line="112" pos:column="21"/></name></expr>;<pos:position pos:line="112" pos:column="22"/></return>
}<pos:position pos:line="113" pos:column="2"/></block></unit>

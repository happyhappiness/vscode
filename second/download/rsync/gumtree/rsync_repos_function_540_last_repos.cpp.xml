<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_540_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">send1extra<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">f<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">file_struct<pos:position pos:line="1" pos:column="49"/></name></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">file<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="57">struct<pos:position pos:line="1" pos:column="63"/></name> <name pos:line="1" pos:column="64">file_list<pos:position pos:line="1" pos:column="73"/></name></name> <modifier pos:line="1" pos:column="74">*<pos:position pos:line="1" pos:column="75"/></modifier></type><name pos:line="1" pos:column="75">flist<pos:position pos:line="1" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="81"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">fbuf<pos:position pos:line="3" pos:column="18"/></name><index pos:line="3" pos:column="18">[<expr><name pos:line="3" pos:column="19">MAXPATHLEN<pos:position pos:line="3" pos:column="29"/></name></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">item_list<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">relname_list<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">len<pos:position pos:line="5" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="18">dlen<pos:position pos:line="5" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="24">flags<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">FLAG_DIVERT_DIRS<pos:position pos:line="5" pos:column="48"/></name> <operator pos:line="5" pos:column="49">|<pos:position pos:line="5" pos:column="50"/></operator> <name pos:line="5" pos:column="51">FLAG_CONTENT_DIR<pos:position pos:line="5" pos:column="67"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">size_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">j<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">f_name<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">file<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">fbuf<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><name pos:line="9" pos:column="9">dlen<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <call><name pos:line="9" pos:column="16">strlen<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">fbuf<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><call><name pos:line="11" pos:column="14">change_pathname<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">file<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">NULL<pos:position pos:line="11" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="42">0<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="45"/></condition><then pos:line="11" pos:column="45">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">exit_cleanup<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">RERR_FILESELECT<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">change_local_filter_dir<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">fbuf<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="39">dlen<pos:position pos:line="14" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">send_dir_depth<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">file<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">flags<pos:position pos:line="16" pos:column="24"/></name></name> <operator pos:line="16" pos:column="25">&amp;<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="27">FLAG_CONTENT_DIR<pos:position pos:line="16" pos:column="43"/></name></expr>)<pos:position pos:line="16" pos:column="44"/></condition><then pos:line="16" pos:column="44"> <block pos:line="16" pos:column="45">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">one_file_system<pos:position pos:line="17" pos:column="36"/></name></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37"> <block pos:line="17" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="18" pos:column="25">STRUCT_STAT<pos:position pos:line="18" pos:column="36"/></name></type> <name pos:line="18" pos:column="37">st<pos:position pos:line="18" pos:column="39"/></name></decl>;<pos:position pos:line="18" pos:column="40"/></decl_stmt>
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><call><name pos:line="19" pos:column="29">link_stat<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">fbuf<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="45">&amp;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="46">st<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">copy_dirlinks<pos:position pos:line="19" pos:column="63"/></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call> <operator pos:line="19" pos:column="65">!=<pos:position pos:line="19" pos:column="67"/></operator> <literal type="number" pos:line="19" pos:column="68">0<pos:position pos:line="19" pos:column="69"/></literal></expr>)<pos:position pos:line="19" pos:column="70"/></condition><then pos:line="19" pos:column="70"> <block pos:line="19" pos:column="71">{
				<expr_stmt><expr><call><name pos:line="20" pos:column="33">interpret_stat_error<pos:position pos:line="20" pos:column="53"/></name><argument_list pos:line="20" pos:column="53">(<argument><expr><name pos:line="20" pos:column="54">fbuf<pos:position pos:line="20" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">True<pos:position pos:line="20" pos:column="64"/></name></expr></argument>)<pos:position pos:line="20" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="66"/></expr_stmt>
				<return pos:line="21" pos:column="33">return;<pos:position pos:line="21" pos:column="40"/></return>
			}<pos:position pos:line="22" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="23" pos:column="25">filesystem_dev<pos:position pos:line="23" pos:column="39"/></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <name><name pos:line="23" pos:column="42">st<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">.<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="45">st_dev<pos:position pos:line="23" pos:column="51"/></name></name></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">send_directory<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">f<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">flist<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">fbuf<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">dlen<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">flags<pos:position pos:line="25" pos:column="59"/></name></expr></argument>)<pos:position pos:line="25" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>

	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">relative_paths<pos:position pos:line="28" pos:column="28"/></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29">
		<block type="pseudo"><return pos:line="29" pos:column="17">return;<pos:position pos:line="29" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="31" pos:column="9">memcpy<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><operator pos:line="31" pos:column="16">&amp;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="17">relname_list<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="31">F_DIR_RELNAMES_P<pos:position pos:line="31" pos:column="47"/></name><argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">file<pos:position pos:line="31" pos:column="52"/></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="55">sizeof <name pos:line="31" pos:column="62">relname_list<pos:position pos:line="31" pos:column="74"/></name></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="76"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">relname_list<pos:position pos:line="32" pos:column="26"/></name></expr>)<pos:position pos:line="32" pos:column="27"/></condition><then pos:line="32" pos:column="27">
		<block type="pseudo"><return pos:line="33" pos:column="17">return;<pos:position pos:line="33" pos:column="24"/></return></block></then></if>

	<for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">j<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></init> <condition><expr><name pos:line="35" pos:column="21">j<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name><name pos:line="35" pos:column="25">relname_list<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">count<pos:position pos:line="35" pos:column="44"/></name></name></expr>;<pos:position pos:line="35" pos:column="45"/></condition> <incr><expr><name pos:line="35" pos:column="46">j<pos:position pos:line="35" pos:column="47"/></name><operator pos:line="35" pos:column="47">++<pos:position pos:line="35" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="35" pos:column="50"/></control> <block pos:line="35" pos:column="51">{
		<decl_stmt><decl><type><name pos:line="36" pos:column="17">char<pos:position pos:line="36" pos:column="21"/></name> <modifier pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></modifier></type><name pos:line="36" pos:column="23">slash<pos:position pos:line="36" pos:column="28"/></name></decl>;<pos:position pos:line="36" pos:column="29"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="37" pos:column="17">relnamecache<pos:position pos:line="37" pos:column="29"/></name> <modifier pos:line="37" pos:column="30">*<pos:position pos:line="37" pos:column="31"/></modifier></type><name pos:line="37" pos:column="31">rnp<pos:position pos:line="37" pos:column="34"/></name> <init pos:line="37" pos:column="35">= <expr><operator pos:line="37" pos:column="37">(<pos:position pos:line="37" pos:column="38"/></operator><operator pos:line="37" pos:column="38">(<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">relnamecache<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">*<pos:position pos:line="37" pos:column="52"/></operator><operator pos:line="37" pos:column="52">*<pos:position pos:line="37" pos:column="53"/></operator><operator pos:line="37" pos:column="53">)<pos:position pos:line="37" pos:column="54"/></operator><name><name pos:line="37" pos:column="54">relname_list<pos:position pos:line="37" pos:column="66"/></name><operator pos:line="37" pos:column="66">-&gt;<pos:position pos:line="37" pos:column="71"/></operator><name pos:line="37" pos:column="68">items<pos:position pos:line="37" pos:column="73"/></name></name><operator pos:line="37" pos:column="73">)<pos:position pos:line="37" pos:column="74"/></operator><index pos:line="37" pos:column="74">[<expr><name pos:line="37" pos:column="75">j<pos:position pos:line="37" pos:column="76"/></name></expr>]<pos:position pos:line="37" pos:column="77"/></index></expr></init></decl>;<pos:position pos:line="37" pos:column="78"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="38" pos:column="17">char<pos:position pos:line="38" pos:column="21"/></name></type> <name pos:line="38" pos:column="22">name_type<pos:position pos:line="38" pos:column="31"/></name> <init pos:line="38" pos:column="32">= <expr><name><name pos:line="38" pos:column="34">rnp<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">-&gt;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="39">name_type<pos:position pos:line="38" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="38" pos:column="49"/></decl_stmt>

		<expr_stmt><expr><name><name pos:line="40" pos:column="17">fbuf<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><name pos:line="40" pos:column="22">dlen<pos:position pos:line="40" pos:column="26"/></name></expr>]<pos:position pos:line="40" pos:column="27"/></index></name> <operator pos:line="40" pos:column="28">=<pos:position pos:line="40" pos:column="29"/></operator> <literal type="char" pos:line="40" pos:column="30">'/'<pos:position pos:line="40" pos:column="33"/></literal></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="41" pos:column="17">len<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">=<pos:position pos:line="41" pos:column="22"/></operator> <call><name pos:line="41" pos:column="23">strlcpy<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">fbuf<pos:position pos:line="41" pos:column="35"/></name> <operator pos:line="41" pos:column="36">+<pos:position pos:line="41" pos:column="37"/></operator> <name pos:line="41" pos:column="38">dlen<pos:position pos:line="41" pos:column="42"/></name> <operator pos:line="41" pos:column="43">+<pos:position pos:line="41" pos:column="44"/></operator> <literal type="number" pos:line="41" pos:column="45">1<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="48">rnp<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">fname<pos:position pos:line="41" pos:column="58"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="60">sizeof <name pos:line="41" pos:column="67">fbuf<pos:position pos:line="41" pos:column="71"/></name></sizeof> <operator pos:line="41" pos:column="72">-<pos:position pos:line="41" pos:column="73"/></operator> <name pos:line="41" pos:column="74">dlen<pos:position pos:line="41" pos:column="78"/></name> <operator pos:line="41" pos:column="79">-<pos:position pos:line="41" pos:column="80"/></operator> <literal type="number" pos:line="41" pos:column="81">1<pos:position pos:line="41" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">free<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><name pos:line="42" pos:column="22">rnp<pos:position pos:line="42" pos:column="25"/></name></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">len<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">&gt;=<pos:position pos:line="43" pos:column="30"/></operator> <operator pos:line="43" pos:column="28">(<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="29">int<pos:position pos:line="43" pos:column="32"/></name><operator pos:line="43" pos:column="32">)<pos:position pos:line="43" pos:column="33"/></operator><sizeof pos:line="43" pos:column="33">sizeof <name pos:line="43" pos:column="40">fbuf<pos:position pos:line="43" pos:column="44"/></name></sizeof></expr>)<pos:position pos:line="43" pos:column="45"/></condition><then pos:line="43" pos:column="45">
			<block type="pseudo"><continue pos:line="44" pos:column="25">continue;<pos:position pos:line="44" pos:column="34"/></continue></block></then></if> <comment type="block" pos:line="44" pos:column="35">/* Impossible... */</comment>

		<expr_stmt><expr><name pos:line="46" pos:column="17">slash<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <call><name pos:line="46" pos:column="25">strchr<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">fbuf<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">+<pos:position pos:line="46" pos:column="37"/></operator><name pos:line="46" pos:column="37">dlen<pos:position pos:line="46" pos:column="41"/></name><operator pos:line="46" pos:column="41">+<pos:position pos:line="46" pos:column="42"/></operator><literal type="number" pos:line="46" pos:column="42">1<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="46" pos:column="45">'/'<pos:position pos:line="46" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">slash<pos:position pos:line="47" pos:column="26"/></name></expr>)<pos:position pos:line="47" pos:column="27"/></condition><then pos:line="47" pos:column="27"> <block pos:line="47" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">send_implied_dirs<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">f<pos:position pos:line="48" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">flist<pos:position pos:line="48" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="53">fbuf<pos:position pos:line="48" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="59">fbuf<pos:position pos:line="48" pos:column="63"/></name><operator pos:line="48" pos:column="63">+<pos:position pos:line="48" pos:column="64"/></operator><name pos:line="48" pos:column="64">dlen<pos:position pos:line="48" pos:column="68"/></name><operator pos:line="48" pos:column="68">+<pos:position pos:line="48" pos:column="69"/></operator><literal type="number" pos:line="48" pos:column="69">1<pos:position pos:line="48" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="72">slash<pos:position pos:line="48" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="79">flags<pos:position pos:line="48" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="86">name_type<pos:position pos:line="48" pos:column="95"/></name></expr></argument>)<pos:position pos:line="48" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="97"/></expr_stmt>
			<continue pos:line="49" pos:column="25">continue;<pos:position pos:line="49" pos:column="34"/></continue>
		}<pos:position pos:line="50" pos:column="18"/></block></then></if>

		<if pos:line="52" pos:column="17">if <condition pos:line="52" pos:column="20">(<expr><name pos:line="52" pos:column="21">name_type<pos:position pos:line="52" pos:column="30"/></name> <operator pos:line="52" pos:column="31">!=<pos:position pos:line="52" pos:column="33"/></operator> <name pos:line="52" pos:column="34">NORMAL_NAME<pos:position pos:line="52" pos:column="45"/></name></expr>)<pos:position pos:line="52" pos:column="46"/></condition><then pos:line="52" pos:column="46"> <block pos:line="52" pos:column="47">{
			<decl_stmt><decl><type><name pos:line="53" pos:column="25">STRUCT_STAT<pos:position pos:line="53" pos:column="36"/></name></type> <name pos:line="53" pos:column="37">st<pos:position pos:line="53" pos:column="39"/></name></decl>;<pos:position pos:line="53" pos:column="40"/></decl_stmt>
			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><name pos:line="54" pos:column="29">name_type<pos:position pos:line="54" pos:column="38"/></name> <operator pos:line="54" pos:column="39">==<pos:position pos:line="54" pos:column="41"/></operator> <name pos:line="54" pos:column="42">MISSING_NAME<pos:position pos:line="54" pos:column="54"/></name></expr>)<pos:position pos:line="54" pos:column="55"/></condition><then pos:line="54" pos:column="55">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="33">memset<pos:position pos:line="55" pos:column="39"/></name><argument_list pos:line="55" pos:column="39">(<argument><expr><operator pos:line="55" pos:column="40">&amp;<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="41">st<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="45">0<pos:position pos:line="55" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="48">sizeof <name pos:line="55" pos:column="55">st<pos:position pos:line="55" pos:column="57"/></name></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="59"/></expr_stmt></block></then>
			<elseif pos:line="56" pos:column="25">else <if pos:line="56" pos:column="30">if <condition pos:line="56" pos:column="33">(<expr><call><name pos:line="56" pos:column="34">link_stat<pos:position pos:line="56" pos:column="43"/></name><argument_list pos:line="56" pos:column="43">(<argument><expr><name pos:line="56" pos:column="44">fbuf<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="50">&amp;<pos:position pos:line="56" pos:column="55"/></operator><name pos:line="56" pos:column="51">st<pos:position pos:line="56" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="55">1<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call> <operator pos:line="56" pos:column="58">!=<pos:position pos:line="56" pos:column="60"/></operator> <literal type="number" pos:line="56" pos:column="61">0<pos:position pos:line="56" pos:column="62"/></literal></expr>)<pos:position pos:line="56" pos:column="63"/></condition><then pos:line="56" pos:column="63"> <block pos:line="56" pos:column="64">{
				<expr_stmt><expr><call><name pos:line="57" pos:column="33">interpret_stat_error<pos:position pos:line="57" pos:column="53"/></name><argument_list pos:line="57" pos:column="53">(<argument><expr><name pos:line="57" pos:column="54">fbuf<pos:position pos:line="57" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="60">True<pos:position pos:line="57" pos:column="64"/></name></expr></argument>)<pos:position pos:line="57" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="66"/></expr_stmt>
				<continue pos:line="58" pos:column="33">continue;<pos:position pos:line="58" pos:column="42"/></continue>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if></elseif></if>
			<expr_stmt><expr><call><name pos:line="60" pos:column="25">send_file_name<pos:position pos:line="60" pos:column="39"/></name><argument_list pos:line="60" pos:column="39">(<argument><expr><name pos:line="60" pos:column="40">f<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="43">flist<pos:position pos:line="60" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="50">fbuf<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="56">&amp;<pos:position pos:line="60" pos:column="61"/></operator><name pos:line="60" pos:column="57">st<pos:position pos:line="60" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="61">FLAG_TOP_DIR<pos:position pos:line="60" pos:column="73"/></name> <operator pos:line="60" pos:column="74">|<pos:position pos:line="60" pos:column="75"/></operator> <name pos:line="60" pos:column="76">flags<pos:position pos:line="60" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="83">ALL_FILTERS<pos:position pos:line="60" pos:column="94"/></name></expr></argument>)<pos:position pos:line="60" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="96"/></expr_stmt>
		}<pos:position pos:line="61" pos:column="18"/></block></then> <else pos:line="61" pos:column="19">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="25">send_file_name<pos:position pos:line="62" pos:column="39"/></name><argument_list pos:line="62" pos:column="39">(<argument><expr><name pos:line="62" pos:column="40">f<pos:position pos:line="62" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">flist<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">fbuf<pos:position pos:line="62" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="56">NULL<pos:position pos:line="62" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="62">FLAG_TOP_DIR<pos:position pos:line="62" pos:column="74"/></name> <operator pos:line="62" pos:column="75">|<pos:position pos:line="62" pos:column="76"/></operator> <name pos:line="62" pos:column="77">flags<pos:position pos:line="62" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="84">ALL_FILTERS<pos:position pos:line="62" pos:column="95"/></name></expr></argument>)<pos:position pos:line="62" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="97"/></expr_stmt></block></else></if>
	}<pos:position pos:line="63" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="65" pos:column="9">free<pos:position pos:line="65" pos:column="13"/></name><argument_list pos:line="65" pos:column="13">(<argument><expr><name pos:line="65" pos:column="14">relname_list<pos:position pos:line="65" pos:column="26"/></name></expr></argument>)<pos:position pos:line="65" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

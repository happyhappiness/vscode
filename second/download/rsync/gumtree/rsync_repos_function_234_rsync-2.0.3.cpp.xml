<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_234_rsync-2.0.3.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name> <parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><name pos:line="2" pos:column="7">argc<pos:position pos:line="2" pos:column="11"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="13">argv<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">int<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">argc<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">char<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier><modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">argv<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">c<pos:position pos:line="6" pos:column="8"/></name></decl>;<pos:position pos:line="6" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">digit_optind<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

  <while pos:line="9" pos:column="3">while <condition pos:line="9" pos:column="9">(<expr><literal type="number" pos:line="9" pos:column="10">1<pos:position pos:line="9" pos:column="11"/></literal></expr>)<pos:position pos:line="9" pos:column="12"/></condition>
    <block pos:line="10" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="11" pos:column="7">int<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">this_option_optind<pos:position pos:line="11" pos:column="29"/></name> <init pos:line="11" pos:column="30">= <expr><ternary><condition><expr><name pos:line="11" pos:column="32">optind<pos:position pos:line="11" pos:column="38"/></name></expr> ?<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40"> <expr><name pos:line="11" pos:column="41">optind<pos:position pos:line="11" pos:column="47"/></name></expr> <pos:position pos:line="11" pos:column="48"/></then><else pos:line="11" pos:column="48">: <expr><literal type="number" pos:line="11" pos:column="50">1<pos:position pos:line="11" pos:column="51"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>

      <expr_stmt><expr><name pos:line="13" pos:column="7">c<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <call><name pos:line="13" pos:column="11">getopt<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">argc<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="25">argv<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"abc:d:0123456789"<pos:position pos:line="13" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">c<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">EOF<pos:position pos:line="14" pos:column="19"/></name></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
	<block type="pseudo"><break pos:line="15" pos:column="9">break;<pos:position pos:line="15" pos:column="15"/></break></block></then></if>

      <switch pos:line="17" pos:column="7">switch <condition pos:line="17" pos:column="14">(<expr><name pos:line="17" pos:column="15">c<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition>
	<block pos:line="18" pos:column="9">{
	<case pos:line="19" pos:column="9">case <expr><literal type="char" pos:line="19" pos:column="14">'0'<pos:position pos:line="19" pos:column="17"/></literal></expr>:<pos:position pos:line="19" pos:column="18"/></case>
	<case pos:line="20" pos:column="9">case <expr><literal type="char" pos:line="20" pos:column="14">'1'<pos:position pos:line="20" pos:column="17"/></literal></expr>:<pos:position pos:line="20" pos:column="18"/></case>
	<case pos:line="21" pos:column="9">case <expr><literal type="char" pos:line="21" pos:column="14">'2'<pos:position pos:line="21" pos:column="17"/></literal></expr>:<pos:position pos:line="21" pos:column="18"/></case>
	<case pos:line="22" pos:column="9">case <expr><literal type="char" pos:line="22" pos:column="14">'3'<pos:position pos:line="22" pos:column="17"/></literal></expr>:<pos:position pos:line="22" pos:column="18"/></case>
	<case pos:line="23" pos:column="9">case <expr><literal type="char" pos:line="23" pos:column="14">'4'<pos:position pos:line="23" pos:column="17"/></literal></expr>:<pos:position pos:line="23" pos:column="18"/></case>
	<case pos:line="24" pos:column="9">case <expr><literal type="char" pos:line="24" pos:column="14">'5'<pos:position pos:line="24" pos:column="17"/></literal></expr>:<pos:position pos:line="24" pos:column="18"/></case>
	<case pos:line="25" pos:column="9">case <expr><literal type="char" pos:line="25" pos:column="14">'6'<pos:position pos:line="25" pos:column="17"/></literal></expr>:<pos:position pos:line="25" pos:column="18"/></case>
	<case pos:line="26" pos:column="9">case <expr><literal type="char" pos:line="26" pos:column="14">'7'<pos:position pos:line="26" pos:column="17"/></literal></expr>:<pos:position pos:line="26" pos:column="18"/></case>
	<case pos:line="27" pos:column="9">case <expr><literal type="char" pos:line="27" pos:column="14">'8'<pos:position pos:line="27" pos:column="17"/></literal></expr>:<pos:position pos:line="27" pos:column="18"/></case>
	<case pos:line="28" pos:column="9">case <expr><literal type="char" pos:line="28" pos:column="14">'9'<pos:position pos:line="28" pos:column="17"/></literal></expr>:<pos:position pos:line="28" pos:column="18"/></case>
	  <if pos:line="29" pos:column="11">if <condition pos:line="29" pos:column="14">(<expr><name pos:line="29" pos:column="15">digit_optind<pos:position pos:line="29" pos:column="27"/></name> <operator pos:line="29" pos:column="28">!=<pos:position pos:line="29" pos:column="30"/></operator> <literal type="number" pos:line="29" pos:column="31">0<pos:position pos:line="29" pos:column="32"/></literal> <operator pos:line="29" pos:column="33">&amp;&amp;<pos:position pos:line="29" pos:column="43"/></operator> <name pos:line="29" pos:column="36">digit_optind<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">!=<pos:position pos:line="29" pos:column="51"/></operator> <name pos:line="29" pos:column="52">this_option_optind<pos:position pos:line="29" pos:column="70"/></name></expr>)<pos:position pos:line="29" pos:column="71"/></condition><then pos:line="29" pos:column="71">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="13">printf<pos:position pos:line="30" pos:column="19"/></name> <argument_list pos:line="30" pos:column="20">(<argument><expr><literal type="string" pos:line="30" pos:column="21">"digits occur in two different argv-elements.\n"<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="71"/></expr_stmt></block></then></if>
	  <expr_stmt><expr><name pos:line="31" pos:column="11">digit_optind<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <name pos:line="31" pos:column="26">this_option_optind<pos:position pos:line="31" pos:column="44"/></name></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
	  <expr_stmt><expr><call><name pos:line="32" pos:column="11">printf<pos:position pos:line="32" pos:column="17"/></name> <argument_list pos:line="32" pos:column="18">(<argument><expr><literal type="string" pos:line="32" pos:column="19">"option %c\n"<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">c<pos:position pos:line="32" pos:column="35"/></name></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt>
	  <break pos:line="33" pos:column="11">break;<pos:position pos:line="33" pos:column="17"/></break>

	<case pos:line="35" pos:column="9">case <expr><literal type="char" pos:line="35" pos:column="14">'a'<pos:position pos:line="35" pos:column="17"/></literal></expr>:<pos:position pos:line="35" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="36" pos:column="11">printf<pos:position pos:line="36" pos:column="17"/></name> <argument_list pos:line="36" pos:column="18">(<argument><expr><literal type="string" pos:line="36" pos:column="19">"option a\n"<pos:position pos:line="36" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>
	  <break pos:line="37" pos:column="11">break;<pos:position pos:line="37" pos:column="17"/></break>

	<case pos:line="39" pos:column="9">case <expr><literal type="char" pos:line="39" pos:column="14">'b'<pos:position pos:line="39" pos:column="17"/></literal></expr>:<pos:position pos:line="39" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="40" pos:column="11">printf<pos:position pos:line="40" pos:column="17"/></name> <argument_list pos:line="40" pos:column="18">(<argument><expr><literal type="string" pos:line="40" pos:column="19">"option b\n"<pos:position pos:line="40" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
	  <break pos:line="41" pos:column="11">break;<pos:position pos:line="41" pos:column="17"/></break>

	<case pos:line="43" pos:column="9">case <expr><literal type="char" pos:line="43" pos:column="14">'c'<pos:position pos:line="43" pos:column="17"/></literal></expr>:<pos:position pos:line="43" pos:column="18"/></case>
	  <expr_stmt><expr><call><name pos:line="44" pos:column="11">printf<pos:position pos:line="44" pos:column="17"/></name> <argument_list pos:line="44" pos:column="18">(<argument><expr><literal type="string" pos:line="44" pos:column="19">"option c with value `%s'\n"<pos:position pos:line="44" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="49">optarg<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
	  <break pos:line="45" pos:column="11">break;<pos:position pos:line="45" pos:column="17"/></break>

	<case pos:line="47" pos:column="9">case <expr><literal type="char" pos:line="47" pos:column="14">'?'<pos:position pos:line="47" pos:column="17"/></literal></expr>:<pos:position pos:line="47" pos:column="18"/></case>
	  <break pos:line="48" pos:column="11">break;<pos:position pos:line="48" pos:column="17"/></break>

	<default pos:line="50" pos:column="9">default:<pos:position pos:line="50" pos:column="17"/></default>
	  <expr_stmt><expr><call><name pos:line="51" pos:column="11">printf<pos:position pos:line="51" pos:column="17"/></name> <argument_list pos:line="51" pos:column="18">(<argument><expr><literal type="string" pos:line="51" pos:column="19">"?? getopt returned character code 0%o ??\n"<pos:position pos:line="51" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="65">c<pos:position pos:line="51" pos:column="66"/></name></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="52" pos:column="10"/></block></switch>
    }<pos:position pos:line="53" pos:column="6"/></block></while>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">optind<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">&lt;<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="16">argc<pos:position pos:line="55" pos:column="20"/></name></expr>)<pos:position pos:line="55" pos:column="21"/></condition><then pos:line="55" pos:column="21">
    <block pos:line="56" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">printf<pos:position pos:line="57" pos:column="13"/></name> <argument_list pos:line="57" pos:column="14">(<argument><expr><literal type="string" pos:line="57" pos:column="15">"non-option ARGV-elements: "<pos:position pos:line="57" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt>
      <while pos:line="58" pos:column="7">while <condition pos:line="58" pos:column="13">(<expr><name pos:line="58" pos:column="14">optind<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">&lt;<pos:position pos:line="58" pos:column="25"/></operator> <name pos:line="58" pos:column="23">argc<pos:position pos:line="58" pos:column="27"/></name></expr>)<pos:position pos:line="58" pos:column="28"/></condition>
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="9">printf<pos:position pos:line="59" pos:column="15"/></name> <argument_list pos:line="59" pos:column="16">(<argument><expr><literal type="string" pos:line="59" pos:column="17">"%s "<pos:position pos:line="59" pos:column="22"/></literal></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="24">argv<pos:position pos:line="59" pos:column="28"/></name><index pos:line="59" pos:column="28">[<expr><name pos:line="59" pos:column="29">optind<pos:position pos:line="59" pos:column="35"/></name><operator pos:line="59" pos:column="35">++<pos:position pos:line="59" pos:column="37"/></operator></expr>]<pos:position pos:line="59" pos:column="38"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="40"/></expr_stmt></block></while>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">printf<pos:position pos:line="60" pos:column="13"/></name> <argument_list pos:line="60" pos:column="14">(<argument><expr><literal type="string" pos:line="60" pos:column="15">"\n"<pos:position pos:line="60" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="63" pos:column="3">exit<pos:position pos:line="63" pos:column="7"/></name> <argument_list pos:line="63" pos:column="8">(<argument><expr><literal type="number" pos:line="63" pos:column="9">0<pos:position pos:line="63" pos:column="10"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="12"/></expr_stmt>
}<pos:position pos:line="64" pos:column="2"/></block></function_decl></unit>

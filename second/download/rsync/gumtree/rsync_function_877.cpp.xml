<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_877.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">recv_uid_list<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="27">struct<pos:position pos:line="1" pos:column="33"/></name> <name pos:line="1" pos:column="34">file_list<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">flist<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">id<pos:position pos:line="3" pos:column="15"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="17">i<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">name<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">preserve_uid<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">&amp;&amp;<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="29">!<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">numeric_ids<pos:position pos:line="6" pos:column="41"/></name></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42"> <block pos:line="6" pos:column="43">{
		<comment type="block" pos:line="7" pos:column="17">/* read the uid list */</comment>
		<while pos:line="8" pos:column="17">while <condition pos:line="8" pos:column="23">(<expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">id<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">=<pos:position pos:line="8" pos:column="29"/></operator> <call><name pos:line="8" pos:column="30">read_int<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">f<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator> <operator pos:line="8" pos:column="43">!=<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">0<pos:position pos:line="8" pos:column="47"/></literal></expr>)<pos:position pos:line="8" pos:column="48"/></condition> <block pos:line="8" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="9" pos:column="25">int<pos:position pos:line="9" pos:column="28"/></name></type> <name pos:line="9" pos:column="29">len<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><call><name pos:line="9" pos:column="35">read_byte<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">f<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><name pos:line="10" pos:column="25">name<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">=<pos:position pos:line="10" pos:column="31"/></operator> <call><name pos:line="10" pos:column="32">new_array<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><name pos:line="10" pos:column="42">char<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">len<pos:position pos:line="10" pos:column="51"/></name><operator pos:line="10" pos:column="51">+<pos:position pos:line="10" pos:column="52"/></operator><literal type="number" pos:line="10" pos:column="52">1<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>
			<if pos:line="11" pos:column="25">if <condition pos:line="11" pos:column="28">(<expr><operator pos:line="11" pos:column="29">!<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">name<pos:position pos:line="11" pos:column="34"/></name></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="33">out_of_memory<pos:position pos:line="12" pos:column="46"/></name><argument_list pos:line="12" pos:column="46">(<argument><expr><literal type="string" pos:line="12" pos:column="47">"recv_uid_list"<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="13" pos:column="25">read_sbuf<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">(<argument><expr><name pos:line="13" pos:column="35">f<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">name<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">len<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="14" pos:column="25">recv_add_uid<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">id<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">name<pos:position pos:line="14" pos:column="46"/></name></expr></argument>)<pos:position pos:line="14" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt> <comment type="block" pos:line="14" pos:column="49">/* node keeps name's memory */</comment>
		}<pos:position pos:line="15" pos:column="18"/></block></while>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">preserve_gid<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">&amp;&amp;<pos:position pos:line="18" pos:column="36"/></operator> <operator pos:line="18" pos:column="29">!<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="30">numeric_ids<pos:position pos:line="18" pos:column="41"/></name></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42"> <block pos:line="18" pos:column="43">{
		<comment type="block" pos:line="19" pos:column="17">/* read the gid list */</comment>
		<while pos:line="20" pos:column="17">while <condition pos:line="20" pos:column="23">(<expr><operator pos:line="20" pos:column="24">(<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">id<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <call><name pos:line="20" pos:column="30">read_int<pos:position pos:line="20" pos:column="38"/></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">f<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call><operator pos:line="20" pos:column="41">)<pos:position pos:line="20" pos:column="42"/></operator> <operator pos:line="20" pos:column="43">!=<pos:position pos:line="20" pos:column="45"/></operator> <literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr>)<pos:position pos:line="20" pos:column="48"/></condition> <block pos:line="20" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="21" pos:column="25">int<pos:position pos:line="21" pos:column="28"/></name></type> <name pos:line="21" pos:column="29">len<pos:position pos:line="21" pos:column="32"/></name> <init pos:line="21" pos:column="33">= <expr><call><name pos:line="21" pos:column="35">read_byte<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">f<pos:position pos:line="21" pos:column="46"/></name></expr></argument>)<pos:position pos:line="21" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="48"/></decl_stmt>
			<expr_stmt><expr><name pos:line="22" pos:column="25">name<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">=<pos:position pos:line="22" pos:column="31"/></operator> <call><name pos:line="22" pos:column="32">new_array<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">char<pos:position pos:line="22" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">len<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">+<pos:position pos:line="22" pos:column="52"/></operator><literal type="number" pos:line="22" pos:column="52">1<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><operator pos:line="23" pos:column="29">!<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="30">name<pos:position pos:line="23" pos:column="34"/></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="33">out_of_memory<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><literal type="string" pos:line="24" pos:column="47">"recv_uid_list"<pos:position pos:line="24" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">read_sbuf<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">f<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">name<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="44">len<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="49"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">recv_add_gid<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name pos:line="26" pos:column="38">id<pos:position pos:line="26" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">name<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="48"/></expr_stmt> <comment type="block" pos:line="26" pos:column="49">/* node keeps name's memory */</comment>
		}<pos:position pos:line="27" pos:column="18"/></block></while>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="30" pos:column="9">/* Now convert all the uids/gids from sender values to our values. */</comment>
	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">am_root<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">&amp;&amp;<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="24">preserve_uid<pos:position pos:line="31" pos:column="36"/></name> <operator pos:line="31" pos:column="37">&amp;&amp;<pos:position pos:line="31" pos:column="47"/></operator> <operator pos:line="31" pos:column="40">!<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="41">numeric_ids<pos:position pos:line="31" pos:column="52"/></name></expr>)<pos:position pos:line="31" pos:column="53"/></condition><then pos:line="31" pos:column="53"> <block pos:line="31" pos:column="54">{
		<for pos:line="32" pos:column="17">for <control pos:line="32" pos:column="21">(<init><expr><name pos:line="32" pos:column="22">i<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <literal type="number" pos:line="32" pos:column="26">0<pos:position pos:line="32" pos:column="27"/></literal></expr>;<pos:position pos:line="32" pos:column="28"/></init> <condition><expr><name pos:line="32" pos:column="29">i<pos:position pos:line="32" pos:column="30"/></name> <operator pos:line="32" pos:column="31">&lt;<pos:position pos:line="32" pos:column="35"/></operator> <name><name pos:line="32" pos:column="33">flist<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">count<pos:position pos:line="32" pos:column="45"/></name></name></expr>;<pos:position pos:line="32" pos:column="46"/></condition> <incr><expr><name pos:line="32" pos:column="47">i<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">++<pos:position pos:line="32" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="51"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="33" pos:column="25">flist<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">-&gt;<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="32">files<pos:position pos:line="33" pos:column="37"/></name><index pos:line="33" pos:column="37">[<expr><name pos:line="33" pos:column="38">i<pos:position pos:line="33" pos:column="39"/></name></expr>]<pos:position pos:line="33" pos:column="40"/></index></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">uid<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">=<pos:position pos:line="33" pos:column="47"/></operator> <call><name pos:line="33" pos:column="48">match_uid<pos:position pos:line="33" pos:column="57"/></name><argument_list pos:line="33" pos:column="57">(<argument><expr><name><name pos:line="33" pos:column="58">flist<pos:position pos:line="33" pos:column="63"/></name><operator pos:line="33" pos:column="63">-&gt;<pos:position pos:line="33" pos:column="68"/></operator><name pos:line="33" pos:column="65">files<pos:position pos:line="33" pos:column="70"/></name><index pos:line="33" pos:column="70">[<expr><name pos:line="33" pos:column="71">i<pos:position pos:line="33" pos:column="72"/></name></expr>]<pos:position pos:line="33" pos:column="73"/></index></name><operator pos:line="33" pos:column="73">-&gt;<pos:position pos:line="33" pos:column="78"/></operator><name pos:line="33" pos:column="75">uid<pos:position pos:line="33" pos:column="78"/></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="80"/></expr_stmt></block></for>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>
	<if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">preserve_gid<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">&amp;&amp;<pos:position pos:line="35" pos:column="36"/></operator> <operator pos:line="35" pos:column="29">(<pos:position pos:line="35" pos:column="30"/></operator><operator pos:line="35" pos:column="30">!<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">am_root<pos:position pos:line="35" pos:column="38"/></name> <operator pos:line="35" pos:column="39">||<pos:position pos:line="35" pos:column="41"/></operator> <operator pos:line="35" pos:column="42">!<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="43">numeric_ids<pos:position pos:line="35" pos:column="54"/></name><operator pos:line="35" pos:column="54">)<pos:position pos:line="35" pos:column="55"/></operator></expr>)<pos:position pos:line="35" pos:column="56"/></condition><then pos:line="35" pos:column="56"> <block pos:line="35" pos:column="57">{
		<for pos:line="36" pos:column="17">for <control pos:line="36" pos:column="21">(<init><expr><name pos:line="36" pos:column="22">i<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="number" pos:line="36" pos:column="26">0<pos:position pos:line="36" pos:column="27"/></literal></expr>;<pos:position pos:line="36" pos:column="28"/></init> <condition><expr><name pos:line="36" pos:column="29">i<pos:position pos:line="36" pos:column="30"/></name> <operator pos:line="36" pos:column="31">&lt;<pos:position pos:line="36" pos:column="35"/></operator> <name><name pos:line="36" pos:column="33">flist<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">-&gt;<pos:position pos:line="36" pos:column="43"/></operator><name pos:line="36" pos:column="40">count<pos:position pos:line="36" pos:column="45"/></name></name></expr>;<pos:position pos:line="36" pos:column="46"/></condition> <incr><expr><name pos:line="36" pos:column="47">i<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">++<pos:position pos:line="36" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="51"/></control>
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="25">flist<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">files<pos:position pos:line="37" pos:column="37"/></name><index pos:line="37" pos:column="37">[<expr><name pos:line="37" pos:column="38">i<pos:position pos:line="37" pos:column="39"/></name></expr>]<pos:position pos:line="37" pos:column="40"/></index></name><operator pos:line="37" pos:column="40">-&gt;<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="42">gid<pos:position pos:line="37" pos:column="45"/></name> <operator pos:line="37" pos:column="46">=<pos:position pos:line="37" pos:column="47"/></operator> <call><name pos:line="37" pos:column="48">match_gid<pos:position pos:line="37" pos:column="57"/></name><argument_list pos:line="37" pos:column="57">(<argument><expr><name><name pos:line="37" pos:column="58">flist<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">-&gt;<pos:position pos:line="37" pos:column="68"/></operator><name pos:line="37" pos:column="65">files<pos:position pos:line="37" pos:column="70"/></name><index pos:line="37" pos:column="70">[<expr><name pos:line="37" pos:column="71">i<pos:position pos:line="37" pos:column="72"/></name></expr>]<pos:position pos:line="37" pos:column="73"/></index></name><operator pos:line="37" pos:column="73">-&gt;<pos:position pos:line="37" pos:column="78"/></operator><name pos:line="37" pos:column="75">gid<pos:position pos:line="37" pos:column="78"/></name></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt></block></for>
	}<pos:position pos:line="38" pos:column="10"/></block></then></if>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_656.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rsync_module<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">int<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">fd<pos:position pos:line="1" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">i<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">argc<pos:position pos:line="3" pos:column="17"/></name><init pos:line="3" pos:column="17">=<expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name><name pos:line="4" pos:column="15">argv<pos:position pos:line="4" pos:column="19"/></name><index pos:line="4" pos:column="19">[<expr><name pos:line="4" pos:column="20">MAX_ARGS<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">argp<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">line<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">MAXPATHLEN<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">uid_t<pos:position pos:line="7" pos:column="14"/></name></type> <name pos:line="7" pos:column="15">uid<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">uid_t<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator><operator pos:line="7" pos:column="28">-<pos:position pos:line="7" pos:column="29"/></operator><literal type="number" pos:line="7" pos:column="29">2<pos:position pos:line="7" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">gid_t<pos:position pos:line="8" pos:column="14"/></name></type> <name pos:line="8" pos:column="15">gid<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><operator pos:line="8" pos:column="21">(<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">gid_t<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator><operator pos:line="8" pos:column="28">-<pos:position pos:line="8" pos:column="29"/></operator><literal type="number" pos:line="8" pos:column="29">2<pos:position pos:line="8" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">p<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">addr<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><call><name pos:line="10" pos:column="22">client_addr<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">fd<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">host<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><call><name pos:line="11" pos:column="22">client_name<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name pos:line="11" pos:column="34">fd<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name> <modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">name<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><call><name pos:line="12" pos:column="22">lp_name<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">i<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">use_chroot<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><call><name pos:line="13" pos:column="26">lp_use_chroot<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">i<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">start_glob<pos:position pos:line="14" pos:column="23"/></name><init pos:line="14" pos:column="23">=<expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">ret<pos:position pos:line="15" pos:column="16"/></name></decl>;<pos:position pos:line="15" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">request<pos:position pos:line="16" pos:column="22"/></name><init pos:line="16" pos:column="22">=<expr><name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="17" pos:column="9">extern<pos:position pos:line="17" pos:column="15"/></specifier> <type><name pos:line="17" pos:column="16">int<pos:position pos:line="17" pos:column="19"/></name></type> <name pos:line="17" pos:column="20">am_sender<pos:position pos:line="17" pos:column="29"/></name></decl>;<pos:position pos:line="17" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="18" pos:column="9">extern<pos:position pos:line="18" pos:column="15"/></specifier> <type><name pos:line="18" pos:column="16">int<pos:position pos:line="18" pos:column="19"/></name></type> <name pos:line="18" pos:column="20">remote_version<pos:position pos:line="18" pos:column="34"/></name></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="19" pos:column="9">extern<pos:position pos:line="19" pos:column="15"/></specifier> <type><name pos:line="19" pos:column="16">int<pos:position pos:line="19" pos:column="19"/></name></type> <name pos:line="19" pos:column="20">am_root<pos:position pos:line="19" pos:column="27"/></name></decl>;<pos:position pos:line="19" pos:column="28"/></decl_stmt>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name pos:line="21" pos:column="14">allow_access<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">addr<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">host<pos:position pos:line="21" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="39">lp_hosts_allow<pos:position pos:line="21" pos:column="53"/></name><argument_list pos:line="21" pos:column="53">(<argument><expr><name pos:line="21" pos:column="54">i<pos:position pos:line="21" pos:column="55"/></name></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="58">lp_hosts_deny<pos:position pos:line="21" pos:column="71"/></name><argument_list pos:line="21" pos:column="71">(<argument><expr><name pos:line="21" pos:column="72">i<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="76"/></condition><then pos:line="21" pos:column="76"> <block pos:line="21" pos:column="77">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">rprintf<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">FERROR<pos:position pos:line="22" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="22" pos:column="32">"rsync denied on module %s from %s (%s)\n"<pos:position pos:line="22" pos:column="74"/></literal></expr></argument>,
			<argument><expr><name pos:line="23" pos:column="25">name<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="31">client_name<pos:position pos:line="23" pos:column="42"/></name><argument_list pos:line="23" pos:column="42">(<argument><expr><name pos:line="23" pos:column="43">fd<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="48">client_addr<pos:position pos:line="23" pos:column="59"/></name><argument_list pos:line="23" pos:column="59">(<argument><expr><name pos:line="23" pos:column="60">fd<pos:position pos:line="23" pos:column="62"/></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">io_printf<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">fd<pos:position pos:line="24" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="24" pos:column="30">"@ERROR: access denied to %s from %s (%s)\n"<pos:position pos:line="24" pos:column="74"/></literal></expr></argument>,
			  <argument><expr><name pos:line="25" pos:column="27">name<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="33">client_name<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">(<argument><expr><name pos:line="25" pos:column="45">fd<pos:position pos:line="25" pos:column="47"/></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="50">client_addr<pos:position pos:line="25" pos:column="61"/></name><argument_list pos:line="25" pos:column="61">(<argument><expr><name pos:line="25" pos:column="62">fd<pos:position pos:line="25" pos:column="64"/></name></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><operator pos:line="26" pos:column="24">-<pos:position pos:line="26" pos:column="25"/></operator><literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>;<pos:position pos:line="26" pos:column="27"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><call><name pos:line="29" pos:column="14">claim_connection<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><call><name pos:line="29" pos:column="31">lp_lock_file<pos:position pos:line="29" pos:column="43"/></name><argument_list pos:line="29" pos:column="43">()<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="47">lp_max_connections<pos:position pos:line="29" pos:column="65"/></name><argument_list pos:line="29" pos:column="65">()<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="69"/></condition><then pos:line="29" pos:column="69"> <block pos:line="29" pos:column="70">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">errno<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">rprintf<pos:position pos:line="31" pos:column="32"/></name><argument_list pos:line="31" pos:column="32">(<argument><expr><name pos:line="31" pos:column="33">FERROR<pos:position pos:line="31" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="31" pos:column="40">"failed to open lock file %s : %s\n"<pos:position pos:line="31" pos:column="76"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="32" pos:column="33">lp_lock_file<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">()<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="49">strerror<pos:position pos:line="32" pos:column="57"/></name><argument_list pos:line="32" pos:column="57">(<argument><expr><name pos:line="32" pos:column="58">errno<pos:position pos:line="32" pos:column="63"/></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="33" pos:column="25">io_printf<pos:position pos:line="33" pos:column="34"/></name><argument_list pos:line="33" pos:column="34">(<argument><expr><name pos:line="33" pos:column="35">fd<pos:position pos:line="33" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="33" pos:column="38">"@ERROR: failed to open lock file %s : %s\n"<pos:position pos:line="33" pos:column="82"/></literal></expr></argument>,
				  <argument><expr><call><name pos:line="34" pos:column="35">lp_lock_file<pos:position pos:line="34" pos:column="47"/></name><argument_list pos:line="34" pos:column="47">()<pos:position pos:line="34" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="51">strerror<pos:position pos:line="34" pos:column="59"/></name><argument_list pos:line="34" pos:column="59">(<argument><expr><name pos:line="34" pos:column="60">errno<pos:position pos:line="34" pos:column="65"/></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="35" pos:column="18"/></block></then> <else pos:line="35" pos:column="19">else <block pos:line="35" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="36" pos:column="25">rprintf<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">FERROR<pos:position pos:line="36" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="40">"max connections (%d) reached\n"<pos:position pos:line="36" pos:column="72"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="37" pos:column="33">lp_max_connections<pos:position pos:line="37" pos:column="51"/></name><argument_list pos:line="37" pos:column="51">()<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="55"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">io_printf<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">fd<pos:position pos:line="38" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="38" pos:column="38">"@ERROR: max connections (%d) reached - try again later\n"<pos:position pos:line="38" pos:column="96"/></literal></expr></argument>, <argument><expr><call><name pos:line="38" pos:column="98">lp_max_connections<pos:position pos:line="38" pos:column="116"/></name><argument_list pos:line="38" pos:column="116">()<pos:position pos:line="38" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="120"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></else></if>
		<return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">-<pos:position pos:line="40" pos:column="25"/></operator><literal type="number" pos:line="40" pos:column="25">1<pos:position pos:line="40" pos:column="26"/></literal></expr>;<pos:position pos:line="40" pos:column="27"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	
	<expr_stmt><expr><name pos:line="44" pos:column="9">auth_user<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <call><name pos:line="44" pos:column="21">auth_server<pos:position pos:line="44" pos:column="32"/></name><argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">fd<pos:position pos:line="44" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">i<pos:position pos:line="44" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="40">addr<pos:position pos:line="44" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="46">"@RSYNCD: AUTHREQD "<pos:position pos:line="44" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><operator pos:line="46" pos:column="13">!<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="14">auth_user<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">rprintf<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">FERROR<pos:position pos:line="47" pos:column="31"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="47" pos:column="32">"auth failed on module %s from %s (%s)\n"<pos:position pos:line="47" pos:column="73"/></literal></expr></argument>,
			<argument><expr><name pos:line="48" pos:column="25">name<pos:position pos:line="48" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="31">client_name<pos:position pos:line="48" pos:column="42"/></name><argument_list pos:line="48" pos:column="42">(<argument><expr><name pos:line="48" pos:column="43">fd<pos:position pos:line="48" pos:column="45"/></name></expr></argument>)<pos:position pos:line="48" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="48" pos:column="48">client_addr<pos:position pos:line="48" pos:column="59"/></name><argument_list pos:line="48" pos:column="59">(<argument><expr><name pos:line="48" pos:column="60">fd<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">io_printf<pos:position pos:line="49" pos:column="26"/></name><argument_list pos:line="49" pos:column="26">(<argument><expr><name pos:line="49" pos:column="27">fd<pos:position pos:line="49" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="49" pos:column="30">"@ERROR: auth failed on module %s\n"<pos:position pos:line="49" pos:column="66"/></literal></expr></argument>,<argument><expr><name pos:line="49" pos:column="67">name<pos:position pos:line="49" pos:column="71"/></name></expr></argument>)<pos:position pos:line="49" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="73"/></expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><operator pos:line="50" pos:column="24">-<pos:position pos:line="50" pos:column="25"/></operator><literal type="number" pos:line="50" pos:column="25">1<pos:position pos:line="50" pos:column="26"/></literal></expr>;<pos:position pos:line="50" pos:column="27"/></return>		
	}<pos:position pos:line="51" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="53" pos:column="9">module_id<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">i<pos:position pos:line="53" pos:column="22"/></name></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt>

	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">lp_read_only<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">i<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="55" pos:column="29"/></condition><then pos:line="55" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="17">read_only<pos:position pos:line="56" pos:column="26"/></name> <operator pos:line="56" pos:column="27">=<pos:position pos:line="56" pos:column="28"/></operator> <literal type="number" pos:line="56" pos:column="29">1<pos:position pos:line="56" pos:column="30"/></literal></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="58" pos:column="9">p<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">lp_uid<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">i<pos:position pos:line="58" pos:column="21"/></name></expr></argument>)<pos:position pos:line="58" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><operator pos:line="59" pos:column="13">!<pos:position pos:line="59" pos:column="14"/></operator><call><name pos:line="59" pos:column="14">name_to_uid<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">p<pos:position pos:line="59" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="59" pos:column="29">&amp;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="30">uid<pos:position pos:line="59" pos:column="33"/></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="35"/></condition><then pos:line="59" pos:column="35"> <block pos:line="59" pos:column="36">{
		<if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><operator pos:line="60" pos:column="21">!<pos:position pos:line="60" pos:column="22"/></operator><call><name pos:line="60" pos:column="22">isdigit<pos:position pos:line="60" pos:column="29"/></name><argument_list pos:line="60" pos:column="29">(<argument><expr><operator pos:line="60" pos:column="30">*<pos:position pos:line="60" pos:column="31"/></operator><name pos:line="60" pos:column="31">p<pos:position pos:line="60" pos:column="32"/></name></expr></argument>)<pos:position pos:line="60" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="34"/></condition><then pos:line="60" pos:column="34"> <block pos:line="60" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="61" pos:column="25">rprintf<pos:position pos:line="61" pos:column="32"/></name><argument_list pos:line="61" pos:column="32">(<argument><expr><name pos:line="61" pos:column="33">FERROR<pos:position pos:line="61" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="61" pos:column="40">"Invalid uid %s\n"<pos:position pos:line="61" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="60">p<pos:position pos:line="61" pos:column="61"/></name></expr></argument>)<pos:position pos:line="61" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="62" pos:column="25">io_printf<pos:position pos:line="62" pos:column="34"/></name><argument_list pos:line="62" pos:column="34">(<argument><expr><name pos:line="62" pos:column="35">fd<pos:position pos:line="62" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="62" pos:column="38">"@ERROR: invalid uid\n"<pos:position pos:line="62" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="63"/></expr_stmt>
			<return pos:line="63" pos:column="25">return <expr><operator pos:line="63" pos:column="32">-<pos:position pos:line="63" pos:column="33"/></operator><literal type="number" pos:line="63" pos:column="33">1<pos:position pos:line="63" pos:column="34"/></literal></expr>;<pos:position pos:line="63" pos:column="35"/></return>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if> 
		<expr_stmt><expr><name pos:line="65" pos:column="17">uid<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <call><name pos:line="65" pos:column="23">atoi<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name pos:line="65" pos:column="28">p<pos:position pos:line="65" pos:column="29"/></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="66" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="68" pos:column="9">p<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">=<pos:position pos:line="68" pos:column="12"/></operator> <call><name pos:line="68" pos:column="13">lp_gid<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">i<pos:position pos:line="68" pos:column="21"/></name></expr></argument>)<pos:position pos:line="68" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">!<pos:position pos:line="69" pos:column="14"/></operator><call><name pos:line="69" pos:column="14">name_to_gid<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">p<pos:position pos:line="69" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="29">&amp;<pos:position pos:line="69" pos:column="34"/></operator><name pos:line="69" pos:column="30">gid<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="35"/></condition><then pos:line="69" pos:column="35"> <block pos:line="69" pos:column="36">{
		<if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><operator pos:line="70" pos:column="21">!<pos:position pos:line="70" pos:column="22"/></operator><call><name pos:line="70" pos:column="22">isdigit<pos:position pos:line="70" pos:column="29"/></name><argument_list pos:line="70" pos:column="29">(<argument><expr><operator pos:line="70" pos:column="30">*<pos:position pos:line="70" pos:column="31"/></operator><name pos:line="70" pos:column="31">p<pos:position pos:line="70" pos:column="32"/></name></expr></argument>)<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="34"/></condition><then pos:line="70" pos:column="34"> <block pos:line="70" pos:column="35">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">rprintf<pos:position pos:line="71" pos:column="32"/></name><argument_list pos:line="71" pos:column="32">(<argument><expr><name pos:line="71" pos:column="33">FERROR<pos:position pos:line="71" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="71" pos:column="40">"Invalid gid %s\n"<pos:position pos:line="71" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="60">p<pos:position pos:line="71" pos:column="61"/></name></expr></argument>)<pos:position pos:line="71" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">io_printf<pos:position pos:line="72" pos:column="34"/></name><argument_list pos:line="72" pos:column="34">(<argument><expr><name pos:line="72" pos:column="35">fd<pos:position pos:line="72" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="72" pos:column="38">"@ERROR: invalid gid\n"<pos:position pos:line="72" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="63"/></expr_stmt>
			<return pos:line="73" pos:column="25">return <expr><operator pos:line="73" pos:column="32">-<pos:position pos:line="73" pos:column="33"/></operator><literal type="number" pos:line="73" pos:column="33">1<pos:position pos:line="73" pos:column="34"/></literal></expr>;<pos:position pos:line="73" pos:column="35"/></return>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if> 
		<expr_stmt><expr><name pos:line="75" pos:column="17">gid<pos:position pos:line="75" pos:column="20"/></name> <operator pos:line="75" pos:column="21">=<pos:position pos:line="75" pos:column="22"/></operator> <call><name pos:line="75" pos:column="23">atoi<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">p<pos:position pos:line="75" pos:column="29"/></name></expr></argument>)<pos:position pos:line="75" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="78" pos:column="9">p<pos:position pos:line="78" pos:column="10"/></name> <operator pos:line="78" pos:column="11">=<pos:position pos:line="78" pos:column="12"/></operator> <call><name pos:line="78" pos:column="13">lp_include_from<pos:position pos:line="78" pos:column="28"/></name><argument_list pos:line="78" pos:column="28">(<argument><expr><name pos:line="78" pos:column="29">i<pos:position pos:line="78" pos:column="30"/></name></expr></argument>)<pos:position pos:line="78" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">add_exclude_file<pos:position pos:line="79" pos:column="25"/></name><argument_list pos:line="79" pos:column="25">(<argument><expr><name pos:line="79" pos:column="26">p<pos:position pos:line="79" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="29">1<pos:position pos:line="79" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="32">1<pos:position pos:line="79" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="81" pos:column="9">p<pos:position pos:line="81" pos:column="10"/></name> <operator pos:line="81" pos:column="11">=<pos:position pos:line="81" pos:column="12"/></operator> <call><name pos:line="81" pos:column="13">lp_include<pos:position pos:line="81" pos:column="23"/></name><argument_list pos:line="81" pos:column="23">(<argument><expr><name pos:line="81" pos:column="24">i<pos:position pos:line="81" pos:column="25"/></name></expr></argument>)<pos:position pos:line="81" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">add_include_line<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">p<pos:position pos:line="82" pos:column="27"/></name></expr></argument>)<pos:position pos:line="82" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name pos:line="84" pos:column="9">p<pos:position pos:line="84" pos:column="10"/></name> <operator pos:line="84" pos:column="11">=<pos:position pos:line="84" pos:column="12"/></operator> <call><name pos:line="84" pos:column="13">lp_exclude_from<pos:position pos:line="84" pos:column="28"/></name><argument_list pos:line="84" pos:column="28">(<argument><expr><name pos:line="84" pos:column="29">i<pos:position pos:line="84" pos:column="30"/></name></expr></argument>)<pos:position pos:line="84" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="85" pos:column="9">add_exclude_file<pos:position pos:line="85" pos:column="25"/></name><argument_list pos:line="85" pos:column="25">(<argument><expr><name pos:line="85" pos:column="26">p<pos:position pos:line="85" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="29">1<pos:position pos:line="85" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="32">0<pos:position pos:line="85" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><name pos:line="87" pos:column="9">p<pos:position pos:line="87" pos:column="10"/></name> <operator pos:line="87" pos:column="11">=<pos:position pos:line="87" pos:column="12"/></operator> <call><name pos:line="87" pos:column="13">lp_exclude<pos:position pos:line="87" pos:column="23"/></name><argument_list pos:line="87" pos:column="23">(<argument><expr><name pos:line="87" pos:column="24">i<pos:position pos:line="87" pos:column="25"/></name></expr></argument>)<pos:position pos:line="87" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">add_exclude_line<pos:position pos:line="88" pos:column="25"/></name><argument_list pos:line="88" pos:column="25">(<argument><expr><name pos:line="88" pos:column="26">p<pos:position pos:line="88" pos:column="27"/></name></expr></argument>)<pos:position pos:line="88" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="90" pos:column="9">log_open<pos:position pos:line="90" pos:column="17"/></name><argument_list pos:line="90" pos:column="17">()<pos:position pos:line="90" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="20"/></expr_stmt>

	<if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><name pos:line="92" pos:column="13">use_chroot<pos:position pos:line="92" pos:column="23"/></name></expr>)<pos:position pos:line="92" pos:column="24"/></condition><then pos:line="92" pos:column="24"> <block pos:line="92" pos:column="25">{
		<if pos:line="93" pos:column="17">if <condition pos:line="93" pos:column="20">(<expr><call><name pos:line="93" pos:column="21">chroot<pos:position pos:line="93" pos:column="27"/></name><argument_list pos:line="93" pos:column="27">(<argument><expr><call><name pos:line="93" pos:column="28">lp_path<pos:position pos:line="93" pos:column="35"/></name><argument_list pos:line="93" pos:column="35">(<argument><expr><name pos:line="93" pos:column="36">i<pos:position pos:line="93" pos:column="37"/></name></expr></argument>)<pos:position pos:line="93" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="40"/></condition><then pos:line="93" pos:column="40"> <block pos:line="93" pos:column="41">{
			<expr_stmt><expr><call><name pos:line="94" pos:column="25">rprintf<pos:position pos:line="94" pos:column="32"/></name><argument_list pos:line="94" pos:column="32">(<argument><expr><name pos:line="94" pos:column="33">FERROR<pos:position pos:line="94" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="94" pos:column="40">"chroot %s failed\n"<pos:position pos:line="94" pos:column="60"/></literal></expr></argument>, <argument><expr><call><name pos:line="94" pos:column="62">lp_path<pos:position pos:line="94" pos:column="69"/></name><argument_list pos:line="94" pos:column="69">(<argument><expr><name pos:line="94" pos:column="70">i<pos:position pos:line="94" pos:column="71"/></name></expr></argument>)<pos:position pos:line="94" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="74"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="95" pos:column="25">io_printf<pos:position pos:line="95" pos:column="34"/></name><argument_list pos:line="95" pos:column="34">(<argument><expr><name pos:line="95" pos:column="35">fd<pos:position pos:line="95" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="95" pos:column="38">"@ERROR: chroot failed\n"<pos:position pos:line="95" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="65"/></expr_stmt>
			<return pos:line="96" pos:column="25">return <expr><operator pos:line="96" pos:column="32">-<pos:position pos:line="96" pos:column="33"/></operator><literal type="number" pos:line="96" pos:column="33">1<pos:position pos:line="96" pos:column="34"/></literal></expr>;<pos:position pos:line="96" pos:column="35"/></return>
		}<pos:position pos:line="97" pos:column="18"/></block></then></if>

		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><call><name pos:line="99" pos:column="21">chdir<pos:position pos:line="99" pos:column="26"/></name><argument_list pos:line="99" pos:column="26">(<argument><expr><literal type="string" pos:line="99" pos:column="27">"/"<pos:position pos:line="99" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="32"/></condition><then pos:line="99" pos:column="32"> <block pos:line="99" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="100" pos:column="25">rprintf<pos:position pos:line="100" pos:column="32"/></name><argument_list pos:line="100" pos:column="32">(<argument><expr><name pos:line="100" pos:column="33">FERROR<pos:position pos:line="100" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="100" pos:column="40">"chdir %s failed\n"<pos:position pos:line="100" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="61">lp_path<pos:position pos:line="100" pos:column="68"/></name><argument_list pos:line="100" pos:column="68">(<argument><expr><name pos:line="100" pos:column="69">i<pos:position pos:line="100" pos:column="70"/></name></expr></argument>)<pos:position pos:line="100" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="101" pos:column="25">io_printf<pos:position pos:line="101" pos:column="34"/></name><argument_list pos:line="101" pos:column="34">(<argument><expr><name pos:line="101" pos:column="35">fd<pos:position pos:line="101" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="101" pos:column="38">"@ERROR: chdir failed\n"<pos:position pos:line="101" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="64"/></expr_stmt>
			<return pos:line="102" pos:column="25">return <expr><operator pos:line="102" pos:column="32">-<pos:position pos:line="102" pos:column="33"/></operator><literal type="number" pos:line="102" pos:column="33">1<pos:position pos:line="102" pos:column="34"/></literal></expr>;<pos:position pos:line="102" pos:column="35"/></return>
		}<pos:position pos:line="103" pos:column="18"/></block></then></if>

		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><call><name pos:line="105" pos:column="21">setgid<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">gid<pos:position pos:line="105" pos:column="31"/></name></expr></argument>)<pos:position pos:line="105" pos:column="32"/></argument_list></call> <operator pos:line="105" pos:column="33">||<pos:position pos:line="105" pos:column="35"/></operator> <call><name pos:line="105" pos:column="36">getgid<pos:position pos:line="105" pos:column="42"/></name><argument_list pos:line="105" pos:column="42">()<pos:position pos:line="105" pos:column="44"/></argument_list></call> <operator pos:line="105" pos:column="45">!=<pos:position pos:line="105" pos:column="47"/></operator> <name pos:line="105" pos:column="48">gid<pos:position pos:line="105" pos:column="51"/></name></expr>)<pos:position pos:line="105" pos:column="52"/></condition><then pos:line="105" pos:column="52"> <block pos:line="105" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="106" pos:column="25">rprintf<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><name pos:line="106" pos:column="33">FERROR<pos:position pos:line="106" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="106" pos:column="40">"setgid %d failed\n"<pos:position pos:line="106" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="62">gid<pos:position pos:line="106" pos:column="65"/></name></expr></argument>)<pos:position pos:line="106" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="107" pos:column="25">io_printf<pos:position pos:line="107" pos:column="34"/></name><argument_list pos:line="107" pos:column="34">(<argument><expr><name pos:line="107" pos:column="35">fd<pos:position pos:line="107" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="107" pos:column="38">"@ERROR: setgid failed\n"<pos:position pos:line="107" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="65"/></expr_stmt>
			<return pos:line="108" pos:column="25">return <expr><operator pos:line="108" pos:column="32">-<pos:position pos:line="108" pos:column="33"/></operator><literal type="number" pos:line="108" pos:column="33">1<pos:position pos:line="108" pos:column="34"/></literal></expr>;<pos:position pos:line="108" pos:column="35"/></return>
		}<pos:position pos:line="109" pos:column="18"/></block></then></if>

		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><call><name pos:line="111" pos:column="21">setuid<pos:position pos:line="111" pos:column="27"/></name><argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">uid<pos:position pos:line="111" pos:column="31"/></name></expr></argument>)<pos:position pos:line="111" pos:column="32"/></argument_list></call> <operator pos:line="111" pos:column="33">||<pos:position pos:line="111" pos:column="35"/></operator> <call><name pos:line="111" pos:column="36">getuid<pos:position pos:line="111" pos:column="42"/></name><argument_list pos:line="111" pos:column="42">()<pos:position pos:line="111" pos:column="44"/></argument_list></call> <operator pos:line="111" pos:column="45">!=<pos:position pos:line="111" pos:column="47"/></operator> <name pos:line="111" pos:column="48">uid<pos:position pos:line="111" pos:column="51"/></name></expr>)<pos:position pos:line="111" pos:column="52"/></condition><then pos:line="111" pos:column="52"> <block pos:line="111" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="112" pos:column="25">rprintf<pos:position pos:line="112" pos:column="32"/></name><argument_list pos:line="112" pos:column="32">(<argument><expr><name pos:line="112" pos:column="33">FERROR<pos:position pos:line="112" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="112" pos:column="40">"setuid %d failed\n"<pos:position pos:line="112" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="62">uid<pos:position pos:line="112" pos:column="65"/></name></expr></argument>)<pos:position pos:line="112" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="113" pos:column="25">io_printf<pos:position pos:line="113" pos:column="34"/></name><argument_list pos:line="113" pos:column="34">(<argument><expr><name pos:line="113" pos:column="35">fd<pos:position pos:line="113" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="113" pos:column="38">"@ERROR: setuid failed\n"<pos:position pos:line="113" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="65"/></expr_stmt>
			<return pos:line="114" pos:column="25">return <expr><operator pos:line="114" pos:column="32">-<pos:position pos:line="114" pos:column="33"/></operator><literal type="number" pos:line="114" pos:column="33">1<pos:position pos:line="114" pos:column="34"/></literal></expr>;<pos:position pos:line="114" pos:column="35"/></return>
		}<pos:position pos:line="115" pos:column="18"/></block></then></if>

	}<pos:position pos:line="117" pos:column="10"/></block></then> <else pos:line="117" pos:column="11">else <block pos:line="117" pos:column="16">{
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><operator pos:line="118" pos:column="21">!<pos:position pos:line="118" pos:column="22"/></operator><call><name pos:line="118" pos:column="22">push_dir<pos:position pos:line="118" pos:column="30"/></name><argument_list pos:line="118" pos:column="30">(<argument><expr><call><name pos:line="118" pos:column="31">lp_path<pos:position pos:line="118" pos:column="38"/></name><argument_list pos:line="118" pos:column="38">(<argument><expr><name pos:line="118" pos:column="39">i<pos:position pos:line="118" pos:column="40"/></name></expr></argument>)<pos:position pos:line="118" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="43">0<pos:position pos:line="118" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="46"/></condition><then pos:line="118" pos:column="46"> <block pos:line="118" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="119" pos:column="25">rprintf<pos:position pos:line="119" pos:column="32"/></name><argument_list pos:line="119" pos:column="32">(<argument><expr><name pos:line="119" pos:column="33">FERROR<pos:position pos:line="119" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="119" pos:column="40">"chdir %s failed\n"<pos:position pos:line="119" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="119" pos:column="61">lp_path<pos:position pos:line="119" pos:column="68"/></name><argument_list pos:line="119" pos:column="68">(<argument><expr><name pos:line="119" pos:column="69">i<pos:position pos:line="119" pos:column="70"/></name></expr></argument>)<pos:position pos:line="119" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="73"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">io_printf<pos:position pos:line="120" pos:column="34"/></name><argument_list pos:line="120" pos:column="34">(<argument><expr><name pos:line="120" pos:column="35">fd<pos:position pos:line="120" pos:column="37"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="120" pos:column="38">"@ERROR: chdir failed\n"<pos:position pos:line="120" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="64"/></expr_stmt>
			<return pos:line="121" pos:column="25">return <expr><operator pos:line="121" pos:column="32">-<pos:position pos:line="121" pos:column="33"/></operator><literal type="number" pos:line="121" pos:column="33">1<pos:position pos:line="121" pos:column="34"/></literal></expr>;<pos:position pos:line="121" pos:column="35"/></return>
		}<pos:position pos:line="122" pos:column="18"/></block></then></if>
	}<pos:position pos:line="123" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name pos:line="125" pos:column="9">am_root<pos:position pos:line="125" pos:column="16"/></name> <operator pos:line="125" pos:column="17">=<pos:position pos:line="125" pos:column="18"/></operator> <operator pos:line="125" pos:column="19">(<pos:position pos:line="125" pos:column="20"/></operator><call><name pos:line="125" pos:column="20">getuid<pos:position pos:line="125" pos:column="26"/></name><argument_list pos:line="125" pos:column="26">()<pos:position pos:line="125" pos:column="28"/></argument_list></call> <operator pos:line="125" pos:column="29">==<pos:position pos:line="125" pos:column="31"/></operator> <literal type="number" pos:line="125" pos:column="32">0<pos:position pos:line="125" pos:column="33"/></literal><operator pos:line="125" pos:column="33">)<pos:position pos:line="125" pos:column="34"/></operator></expr>;<pos:position pos:line="125" pos:column="35"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="127" pos:column="9">io_printf<pos:position pos:line="127" pos:column="18"/></name><argument_list pos:line="127" pos:column="18">(<argument><expr><name pos:line="127" pos:column="19">fd<pos:position pos:line="127" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="127" pos:column="22">"@RSYNCD: OK\n"<pos:position pos:line="127" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="39"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="129" pos:column="9">argv<pos:position pos:line="129" pos:column="13"/></name><index pos:line="129" pos:column="13">[<expr><name pos:line="129" pos:column="14">argc<pos:position pos:line="129" pos:column="18"/></name><operator pos:line="129" pos:column="18">++<pos:position pos:line="129" pos:column="20"/></operator></expr>]<pos:position pos:line="129" pos:column="21"/></index></name> <operator pos:line="129" pos:column="22">=<pos:position pos:line="129" pos:column="23"/></operator> <literal type="string" pos:line="129" pos:column="24">"rsyncd"<pos:position pos:line="129" pos:column="32"/></literal></expr>;<pos:position pos:line="129" pos:column="33"/></expr_stmt>

	<while pos:line="131" pos:column="9">while <condition pos:line="131" pos:column="15">(<expr><literal type="number" pos:line="131" pos:column="16">1<pos:position pos:line="131" pos:column="17"/></literal></expr>)<pos:position pos:line="131" pos:column="18"/></condition> <block pos:line="131" pos:column="19">{
		<if pos:line="132" pos:column="17">if <condition pos:line="132" pos:column="20">(<expr><operator pos:line="132" pos:column="21">!<pos:position pos:line="132" pos:column="22"/></operator><call><name pos:line="132" pos:column="22">read_line<pos:position pos:line="132" pos:column="31"/></name><argument_list pos:line="132" pos:column="31">(<argument><expr><name pos:line="132" pos:column="32">fd<pos:position pos:line="132" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="36">line<pos:position pos:line="132" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="132" pos:column="42">sizeof<argument_list pos:line="132" pos:column="48">(<argument><expr><name pos:line="132" pos:column="49">line<pos:position pos:line="132" pos:column="53"/></name></expr></argument>)<pos:position pos:line="132" pos:column="54"/></argument_list></sizeof><operator pos:line="132" pos:column="54">-<pos:position pos:line="132" pos:column="55"/></operator><literal type="number" pos:line="132" pos:column="55">1<pos:position pos:line="132" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="58"/></condition><then pos:line="132" pos:column="58"> <block pos:line="132" pos:column="59">{
			<return pos:line="133" pos:column="25">return <expr><operator pos:line="133" pos:column="32">-<pos:position pos:line="133" pos:column="33"/></operator><literal type="number" pos:line="133" pos:column="33">1<pos:position pos:line="133" pos:column="34"/></literal></expr>;<pos:position pos:line="133" pos:column="35"/></return>
		}<pos:position pos:line="134" pos:column="18"/></block></then></if>

		<if pos:line="136" pos:column="17">if <condition pos:line="136" pos:column="20">(<expr><operator pos:line="136" pos:column="21">!<pos:position pos:line="136" pos:column="22"/></operator><operator pos:line="136" pos:column="22">*<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="23">line<pos:position pos:line="136" pos:column="27"/></name></expr>)<pos:position pos:line="136" pos:column="28"/></condition><then pos:line="136" pos:column="28"> <block type="pseudo"><break pos:line="136" pos:column="29">break;<pos:position pos:line="136" pos:column="35"/></break></block></then></if>

		<expr_stmt><expr><name pos:line="138" pos:column="17">p<pos:position pos:line="138" pos:column="18"/></name> <operator pos:line="138" pos:column="19">=<pos:position pos:line="138" pos:column="20"/></operator> <name pos:line="138" pos:column="21">line<pos:position pos:line="138" pos:column="25"/></name></expr>;<pos:position pos:line="138" pos:column="26"/></expr_stmt>

		<expr_stmt><expr><name><name pos:line="140" pos:column="17">argv<pos:position pos:line="140" pos:column="21"/></name><index pos:line="140" pos:column="21">[<expr><name pos:line="140" pos:column="22">argc<pos:position pos:line="140" pos:column="26"/></name></expr>]<pos:position pos:line="140" pos:column="27"/></index></name> <operator pos:line="140" pos:column="28">=<pos:position pos:line="140" pos:column="29"/></operator> <call><name pos:line="140" pos:column="30">strdup<pos:position pos:line="140" pos:column="36"/></name><argument_list pos:line="140" pos:column="36">(<argument><expr><name pos:line="140" pos:column="37">p<pos:position pos:line="140" pos:column="38"/></name></expr></argument>)<pos:position pos:line="140" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="40"/></expr_stmt>
		<if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><operator pos:line="141" pos:column="21">!<pos:position pos:line="141" pos:column="22"/></operator><name><name pos:line="141" pos:column="22">argv<pos:position pos:line="141" pos:column="26"/></name><index pos:line="141" pos:column="26">[<expr><name pos:line="141" pos:column="27">argc<pos:position pos:line="141" pos:column="31"/></name></expr>]<pos:position pos:line="141" pos:column="32"/></index></name></expr>)<pos:position pos:line="141" pos:column="33"/></condition><then pos:line="141" pos:column="33"> <block pos:line="141" pos:column="34">{
			<return pos:line="142" pos:column="25">return <expr><operator pos:line="142" pos:column="32">-<pos:position pos:line="142" pos:column="33"/></operator><literal type="number" pos:line="142" pos:column="33">1<pos:position pos:line="142" pos:column="34"/></literal></expr>;<pos:position pos:line="142" pos:column="35"/></return>
		}<pos:position pos:line="143" pos:column="18"/></block></then></if>

		<if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><name pos:line="145" pos:column="21">start_glob<pos:position pos:line="145" pos:column="31"/></name></expr>)<pos:position pos:line="145" pos:column="32"/></condition><then pos:line="145" pos:column="32"> <block pos:line="145" pos:column="33">{
			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><name pos:line="146" pos:column="29">start_glob<pos:position pos:line="146" pos:column="39"/></name> <operator pos:line="146" pos:column="40">==<pos:position pos:line="146" pos:column="42"/></operator> <literal type="number" pos:line="146" pos:column="43">1<pos:position pos:line="146" pos:column="44"/></literal></expr>)<pos:position pos:line="146" pos:column="45"/></condition><then pos:line="146" pos:column="45"> <block pos:line="146" pos:column="46">{
				<expr_stmt><expr><name pos:line="147" pos:column="33">request<pos:position pos:line="147" pos:column="40"/></name> <operator pos:line="147" pos:column="41">=<pos:position pos:line="147" pos:column="42"/></operator> <call><name pos:line="147" pos:column="43">strdup<pos:position pos:line="147" pos:column="49"/></name><argument_list pos:line="147" pos:column="49">(<argument><expr><name pos:line="147" pos:column="50">p<pos:position pos:line="147" pos:column="51"/></name></expr></argument>)<pos:position pos:line="147" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="53"/></expr_stmt>
				<expr_stmt><expr><name pos:line="148" pos:column="33">start_glob<pos:position pos:line="148" pos:column="43"/></name><operator pos:line="148" pos:column="43">++<pos:position pos:line="148" pos:column="45"/></operator></expr>;<pos:position pos:line="148" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="149" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="150" pos:column="25">glob_expand<pos:position pos:line="150" pos:column="36"/></name><argument_list pos:line="150" pos:column="36">(<argument><expr><name pos:line="150" pos:column="37">name<pos:position pos:line="150" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="43">argv<pos:position pos:line="150" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="150" pos:column="49">&amp;<pos:position pos:line="150" pos:column="54"/></operator><name pos:line="150" pos:column="50">argc<pos:position pos:line="150" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="56">MAX_ARGS<pos:position pos:line="150" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="150" pos:column="66">!<pos:position pos:line="150" pos:column="67"/></operator><name pos:line="150" pos:column="67">use_chroot<pos:position pos:line="150" pos:column="77"/></name></expr></argument>)<pos:position pos:line="150" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="79"/></expr_stmt>
		}<pos:position pos:line="151" pos:column="18"/></block></then> <else pos:line="151" pos:column="19">else <block pos:line="151" pos:column="24">{
			<expr_stmt><expr><name pos:line="152" pos:column="25">argc<pos:position pos:line="152" pos:column="29"/></name><operator pos:line="152" pos:column="29">++<pos:position pos:line="152" pos:column="31"/></operator></expr>;<pos:position pos:line="152" pos:column="32"/></expr_stmt>
		}<pos:position pos:line="153" pos:column="18"/></block></else></if>

		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><call><name pos:line="155" pos:column="21">strcmp<pos:position pos:line="155" pos:column="27"/></name><argument_list pos:line="155" pos:column="27">(<argument><expr><name pos:line="155" pos:column="28">line<pos:position pos:line="155" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="155" pos:column="33">"."<pos:position pos:line="155" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="37"/></argument_list></call> <operator pos:line="155" pos:column="38">==<pos:position pos:line="155" pos:column="40"/></operator> <literal type="number" pos:line="155" pos:column="41">0<pos:position pos:line="155" pos:column="42"/></literal></expr>)<pos:position pos:line="155" pos:column="43"/></condition><then pos:line="155" pos:column="43"> <block pos:line="155" pos:column="44">{
			<expr_stmt><expr><name pos:line="156" pos:column="25">start_glob<pos:position pos:line="156" pos:column="35"/></name> <operator pos:line="156" pos:column="36">=<pos:position pos:line="156" pos:column="37"/></operator> <literal type="number" pos:line="156" pos:column="38">1<pos:position pos:line="156" pos:column="39"/></literal></expr>;<pos:position pos:line="156" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="157" pos:column="18"/></block></then></if>

		<if pos:line="159" pos:column="17">if <condition pos:line="159" pos:column="20">(<expr><name pos:line="159" pos:column="21">argc<pos:position pos:line="159" pos:column="25"/></name> <operator pos:line="159" pos:column="26">==<pos:position pos:line="159" pos:column="28"/></operator> <name pos:line="159" pos:column="29">MAX_ARGS<pos:position pos:line="159" pos:column="37"/></name></expr>)<pos:position pos:line="159" pos:column="38"/></condition><then pos:line="159" pos:column="38"> <block pos:line="159" pos:column="39">{
			<return pos:line="160" pos:column="25">return <expr><operator pos:line="160" pos:column="32">-<pos:position pos:line="160" pos:column="33"/></operator><literal type="number" pos:line="160" pos:column="33">1<pos:position pos:line="160" pos:column="34"/></literal></expr>;<pos:position pos:line="160" pos:column="35"/></return>
		}<pos:position pos:line="161" pos:column="18"/></block></then></if>
	}<pos:position pos:line="162" pos:column="10"/></block></while>

	<if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><operator pos:line="164" pos:column="13">!<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="14">use_chroot<pos:position pos:line="164" pos:column="24"/></name></expr>)<pos:position pos:line="164" pos:column="25"/></condition><then pos:line="164" pos:column="25"> <block pos:line="164" pos:column="26">{
		<comment type="block" pos:line="165" pos:column="17">/*
		 * Note that this is applied to all parameters, whether or not
		 *    they are filenames, but no other legal parameters contain
		 *    the forms that need to be sanitized so it doesn't hurt;
		 *    it is not known at this point which parameters are files
		 *    and which aren't.
		 */</comment>
		<for pos:line="172" pos:column="17">for <control pos:line="172" pos:column="21">(<init><expr><name pos:line="172" pos:column="22">i<pos:position pos:line="172" pos:column="23"/></name> <operator pos:line="172" pos:column="24">=<pos:position pos:line="172" pos:column="25"/></operator> <literal type="number" pos:line="172" pos:column="26">1<pos:position pos:line="172" pos:column="27"/></literal></expr>;<pos:position pos:line="172" pos:column="28"/></init> <condition><expr><name pos:line="172" pos:column="29">i<pos:position pos:line="172" pos:column="30"/></name> <operator pos:line="172" pos:column="31">&lt;<pos:position pos:line="172" pos:column="35"/></operator> <name pos:line="172" pos:column="33">argc<pos:position pos:line="172" pos:column="37"/></name></expr>;<pos:position pos:line="172" pos:column="38"/></condition> <incr><expr><name pos:line="172" pos:column="39">i<pos:position pos:line="172" pos:column="40"/></name><operator pos:line="172" pos:column="40">++<pos:position pos:line="172" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="172" pos:column="43"/></control> <block pos:line="172" pos:column="44">{
			<expr_stmt><expr><call><name pos:line="173" pos:column="25">sanitize_path<pos:position pos:line="173" pos:column="38"/></name><argument_list pos:line="173" pos:column="38">(<argument><expr><name><name pos:line="173" pos:column="39">argv<pos:position pos:line="173" pos:column="43"/></name><index pos:line="173" pos:column="43">[<expr><name pos:line="173" pos:column="44">i<pos:position pos:line="173" pos:column="45"/></name></expr>]<pos:position pos:line="173" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="173" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="48"/></expr_stmt>
		}<pos:position pos:line="174" pos:column="18"/></block></for>
	}<pos:position pos:line="175" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="177" pos:column="9">ret<pos:position pos:line="177" pos:column="12"/></name> <operator pos:line="177" pos:column="13">=<pos:position pos:line="177" pos:column="14"/></operator> <call><name pos:line="177" pos:column="15">parse_arguments<pos:position pos:line="177" pos:column="30"/></name><argument_list pos:line="177" pos:column="30">(<argument><expr><name pos:line="177" pos:column="31">argc<pos:position pos:line="177" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="37">argv<pos:position pos:line="177" pos:column="41"/></name></expr></argument>)<pos:position pos:line="177" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="43"/></expr_stmt>

	<if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name pos:line="179" pos:column="13">request<pos:position pos:line="179" pos:column="20"/></name></expr>)<pos:position pos:line="179" pos:column="21"/></condition><then pos:line="179" pos:column="21"> <block pos:line="179" pos:column="22">{
		<if pos:line="180" pos:column="17">if <condition pos:line="180" pos:column="20">(<expr><operator pos:line="180" pos:column="21">*<pos:position pos:line="180" pos:column="22"/></operator><name pos:line="180" pos:column="22">auth_user<pos:position pos:line="180" pos:column="31"/></name></expr>)<pos:position pos:line="180" pos:column="32"/></condition><then pos:line="180" pos:column="32"> <block pos:line="180" pos:column="33">{
			<expr_stmt><expr><call><name pos:line="181" pos:column="25">rprintf<pos:position pos:line="181" pos:column="32"/></name><argument_list pos:line="181" pos:column="32">(<argument><expr><name pos:line="181" pos:column="33">FINFO<pos:position pos:line="181" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="181" pos:column="39">"rsync %s %s from %s@%s (%s)\n"<pos:position pos:line="181" pos:column="70"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="182" pos:column="33">am_sender<pos:position pos:line="182" pos:column="42"/></name></expr>?<pos:position pos:line="182" pos:column="43"/></condition><then><expr><literal type="string" pos:line="182" pos:column="43">"on"<pos:position pos:line="182" pos:column="47"/></literal></expr></then><else pos:line="182" pos:column="47">:<expr><literal type="string" pos:line="182" pos:column="48">"to"<pos:position pos:line="182" pos:column="52"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><name pos:line="183" pos:column="33">request<pos:position pos:line="183" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="42">auth_user<pos:position pos:line="183" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="53">host<pos:position pos:line="183" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="59">addr<pos:position pos:line="183" pos:column="63"/></name></expr></argument>)<pos:position pos:line="183" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="65"/></expr_stmt>
		}<pos:position pos:line="184" pos:column="18"/></block></then> <else pos:line="184" pos:column="19">else <block pos:line="184" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="185" pos:column="25">rprintf<pos:position pos:line="185" pos:column="32"/></name><argument_list pos:line="185" pos:column="32">(<argument><expr><name pos:line="185" pos:column="33">FINFO<pos:position pos:line="185" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="185" pos:column="39">"rsync %s %s from %s (%s)\n"<pos:position pos:line="185" pos:column="67"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><name pos:line="186" pos:column="33">am_sender<pos:position pos:line="186" pos:column="42"/></name></expr>?<pos:position pos:line="186" pos:column="43"/></condition><then><expr><literal type="string" pos:line="186" pos:column="43">"on"<pos:position pos:line="186" pos:column="47"/></literal></expr></then><else pos:line="186" pos:column="47">:<expr><literal type="string" pos:line="186" pos:column="48">"to"<pos:position pos:line="186" pos:column="52"/></literal></expr></else></ternary></expr></argument>,
				<argument><expr><name pos:line="187" pos:column="33">request<pos:position pos:line="187" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="42">host<pos:position pos:line="187" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="48">addr<pos:position pos:line="187" pos:column="52"/></name></expr></argument>)<pos:position pos:line="187" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="187" pos:column="54"/></expr_stmt>
		}<pos:position pos:line="188" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="189" pos:column="17">free<pos:position pos:line="189" pos:column="21"/></name><argument_list pos:line="189" pos:column="21">(<argument><expr><name pos:line="189" pos:column="22">request<pos:position pos:line="189" pos:column="29"/></name></expr></argument>)<pos:position pos:line="189" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="31"/></expr_stmt>
	}<pos:position pos:line="190" pos:column="10"/></block></then></if>

<cpp:if pos:line="192" pos:column="1">#<cpp:directive pos:line="192" pos:column="2">if<pos:position pos:line="192" pos:column="4"/></cpp:directive> <expr><operator pos:line="192" pos:column="5">!<pos:position pos:line="192" pos:column="6"/></operator><name pos:line="192" pos:column="6">TRIDGE<pos:position pos:line="192" pos:column="12"/></name></expr></cpp:if>
	<comment type="block" pos:line="193" pos:column="9">/* don't allow the logs to be flooded too fast */</comment>
	<if pos:line="194" pos:column="9">if <condition pos:line="194" pos:column="12">(<expr><name pos:line="194" pos:column="13">verbose<pos:position pos:line="194" pos:column="20"/></name> <operator pos:line="194" pos:column="21">&gt;<pos:position pos:line="194" pos:column="25"/></operator> <literal type="number" pos:line="194" pos:column="23">1<pos:position pos:line="194" pos:column="24"/></literal></expr>)<pos:position pos:line="194" pos:column="25"/></condition><then pos:line="194" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="194" pos:column="26">verbose<pos:position pos:line="194" pos:column="33"/></name> <operator pos:line="194" pos:column="34">=<pos:position pos:line="194" pos:column="35"/></operator> <literal type="number" pos:line="194" pos:column="36">1<pos:position pos:line="194" pos:column="37"/></literal></expr>;<pos:position pos:line="194" pos:column="38"/></expr_stmt></block></then></if>
<cpp:endif pos:line="195" pos:column="1">#<cpp:directive pos:line="195" pos:column="2">endif<pos:position pos:line="195" pos:column="7"/></cpp:directive></cpp:endif>

	<expr_stmt><expr><name pos:line="197" pos:column="9">argc<pos:position pos:line="197" pos:column="13"/></name> <operator pos:line="197" pos:column="14">-=<pos:position pos:line="197" pos:column="16"/></operator> <name pos:line="197" pos:column="17">optind<pos:position pos:line="197" pos:column="23"/></name></expr>;<pos:position pos:line="197" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="198" pos:column="9">argp<pos:position pos:line="198" pos:column="13"/></name> <operator pos:line="198" pos:column="14">=<pos:position pos:line="198" pos:column="15"/></operator> <name pos:line="198" pos:column="16">argv<pos:position pos:line="198" pos:column="20"/></name> <operator pos:line="198" pos:column="21">+<pos:position pos:line="198" pos:column="22"/></operator> <name pos:line="198" pos:column="23">optind<pos:position pos:line="198" pos:column="29"/></name></expr>;<pos:position pos:line="198" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="199" pos:column="9">optind<pos:position pos:line="199" pos:column="15"/></name> <operator pos:line="199" pos:column="16">=<pos:position pos:line="199" pos:column="17"/></operator> <literal type="number" pos:line="199" pos:column="18">0<pos:position pos:line="199" pos:column="19"/></literal></expr>;<pos:position pos:line="199" pos:column="20"/></expr_stmt>

	<if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><name pos:line="201" pos:column="13">remote_version<pos:position pos:line="201" pos:column="27"/></name> <operator pos:line="201" pos:column="28">&gt;<pos:position pos:line="201" pos:column="32"/></operator> <literal type="number" pos:line="201" pos:column="30">17<pos:position pos:line="201" pos:column="32"/></literal> <operator pos:line="201" pos:column="33">&amp;&amp;<pos:position pos:line="201" pos:column="43"/></operator> <name pos:line="201" pos:column="36">am_sender<pos:position pos:line="201" pos:column="45"/></name></expr>)<pos:position pos:line="201" pos:column="46"/></condition><then pos:line="201" pos:column="46">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="202" pos:column="17">io_start_multiplex_out<pos:position pos:line="202" pos:column="39"/></name><argument_list pos:line="202" pos:column="39">(<argument><expr><name pos:line="202" pos:column="40">fd<pos:position pos:line="202" pos:column="42"/></name></expr></argument>)<pos:position pos:line="202" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="204" pos:column="9">if <condition pos:line="204" pos:column="12">(<expr><operator pos:line="204" pos:column="13">!<pos:position pos:line="204" pos:column="14"/></operator><name pos:line="204" pos:column="14">ret<pos:position pos:line="204" pos:column="17"/></name></expr>)<pos:position pos:line="204" pos:column="18"/></condition><then pos:line="204" pos:column="18"> <block pos:line="204" pos:column="19">{
		<expr_stmt><expr><call><name pos:line="205" pos:column="17">option_error<pos:position pos:line="205" pos:column="29"/></name><argument_list pos:line="205" pos:column="29">()<pos:position pos:line="205" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="32"/></expr_stmt>
	}<pos:position pos:line="206" pos:column="10"/></block></then></if>

	<if pos:line="208" pos:column="9">if <condition pos:line="208" pos:column="12">(<expr><call><name pos:line="208" pos:column="13">lp_timeout<pos:position pos:line="208" pos:column="23"/></name><argument_list pos:line="208" pos:column="23">(<argument><expr><name pos:line="208" pos:column="24">i<pos:position pos:line="208" pos:column="25"/></name></expr></argument>)<pos:position pos:line="208" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="208" pos:column="27"/></condition><then pos:line="208" pos:column="27"> <block pos:line="208" pos:column="28">{
		<decl_stmt><decl><specifier pos:line="209" pos:column="17">extern<pos:position pos:line="209" pos:column="23"/></specifier> <type><name pos:line="209" pos:column="24">int<pos:position pos:line="209" pos:column="27"/></name></type> <name pos:line="209" pos:column="28">io_timeout<pos:position pos:line="209" pos:column="38"/></name></decl>;<pos:position pos:line="209" pos:column="39"/></decl_stmt>
		<expr_stmt><expr><name pos:line="210" pos:column="17">io_timeout<pos:position pos:line="210" pos:column="27"/></name> <operator pos:line="210" pos:column="28">=<pos:position pos:line="210" pos:column="29"/></operator> <call><name pos:line="210" pos:column="30">lp_timeout<pos:position pos:line="210" pos:column="40"/></name><argument_list pos:line="210" pos:column="40">(<argument><expr><name pos:line="210" pos:column="41">i<pos:position pos:line="210" pos:column="42"/></name></expr></argument>)<pos:position pos:line="210" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="44"/></expr_stmt>
	}<pos:position pos:line="211" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="213" pos:column="9">start_server<pos:position pos:line="213" pos:column="21"/></name><argument_list pos:line="213" pos:column="21">(<argument><expr><name pos:line="213" pos:column="22">fd<pos:position pos:line="213" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="26">fd<pos:position pos:line="213" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="30">argc<pos:position pos:line="213" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="213" pos:column="36">argp<pos:position pos:line="213" pos:column="40"/></name></expr></argument>)<pos:position pos:line="213" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="42"/></expr_stmt>

	<return pos:line="215" pos:column="9">return <expr><literal type="number" pos:line="215" pos:column="16">0<pos:position pos:line="215" pos:column="17"/></literal></expr>;<pos:position pos:line="215" pos:column="18"/></return>
}<pos:position pos:line="216" pos:column="2"/></block></function></unit>

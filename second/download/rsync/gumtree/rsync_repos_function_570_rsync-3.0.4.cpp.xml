<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_570_rsync-3.0.4.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">local<pos:position pos:line="1" pos:column="6"/></name> <name pos:line="1" pos:column="7">int<pos:position pos:line="1" pos:column="10"/></name></type> <name pos:line="1" pos:column="11">updatewindow<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">strm<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">out<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<decl_stmt><decl><type><name pos:line="2" pos:column="1">z_streamp<pos:position pos:line="2" pos:column="10"/></name></type> <name pos:line="2" pos:column="11">strm<pos:position pos:line="2" pos:column="15"/></name></decl>;<pos:position pos:line="2" pos:column="16"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="3" pos:column="1">unsigned<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">out<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">inflate_state<pos:position pos:line="5" pos:column="25"/></name></name> <name pos:line="5" pos:column="26">FAR<pos:position pos:line="5" pos:column="29"/></name> <modifier pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></modifier></type><name pos:line="5" pos:column="31">state<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">copy<pos:position pos:line="6" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="20">dist<pos:position pos:line="6" pos:column="24"/></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">state<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator>struct <name pos:line="8" pos:column="21">inflate_state<pos:position pos:line="8" pos:column="34"/></name> <name pos:line="8" pos:column="35">FAR<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">*<pos:position pos:line="8" pos:column="40"/></operator><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator><name><name pos:line="8" pos:column="41">strm<pos:position pos:line="8" pos:column="45"/></name><operator pos:line="8" pos:column="45">-&gt;<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="47">state<pos:position pos:line="8" pos:column="52"/></name></name></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* if it hasn't been done already, allocate space for the window */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">state<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">window<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">==<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">Z_NULL<pos:position pos:line="11" pos:column="32"/></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block pos:line="11" pos:column="34">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">state<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">window<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <operator pos:line="12" pos:column="25">(<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">unsigned<pos:position pos:line="12" pos:column="34"/></name> <name pos:line="12" pos:column="35">char<pos:position pos:line="12" pos:column="39"/></name> <name pos:line="12" pos:column="40">FAR<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">*<pos:position pos:line="12" pos:column="45"/></operator><operator pos:line="12" pos:column="45">)<pos:position pos:line="12" pos:column="46"/></operator>
                        <call><name pos:line="13" pos:column="25">ZALLOC<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">strm<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="38">1U<pos:position pos:line="13" pos:column="40"/></literal> <operator pos:line="13" pos:column="41">&lt;&lt;<pos:position pos:line="13" pos:column="49"/></operator> <name><name pos:line="13" pos:column="44">state<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">-&gt;<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="51">wbits<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>,
                               <argument><expr pos:line="14" pos:column="32">sizeof<operator pos:line="14" pos:column="38">(<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">unsigned<pos:position pos:line="14" pos:column="47"/></name> <name pos:line="14" pos:column="48">char<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">)<pos:position pos:line="14" pos:column="53"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">state<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">window<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">==<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">Z_NULL<pos:position pos:line="15" pos:column="36"/></name></expr>)<pos:position pos:line="15" pos:column="37"/></condition><then pos:line="15" pos:column="37"> <block type="pseudo"><return pos:line="15" pos:column="38">return <expr><literal type="number" pos:line="15" pos:column="45">1<pos:position pos:line="15" pos:column="46"/></literal></expr>;<pos:position pos:line="15" pos:column="47"/></return></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* if window not in use yet, initialize */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">state<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">wsize<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">==<pos:position pos:line="19" pos:column="24"/></operator> <literal type="number" pos:line="19" pos:column="25">0<pos:position pos:line="19" pos:column="26"/></literal></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27"> <block pos:line="19" pos:column="28">{
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">state<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">wsize<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <literal type="number" pos:line="20" pos:column="24">1U<pos:position pos:line="20" pos:column="26"/></literal> <operator pos:line="20" pos:column="27">&lt;&lt;<pos:position pos:line="20" pos:column="35"/></operator> <name><name pos:line="20" pos:column="30">state<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">-&gt;<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="37">wbits<pos:position pos:line="20" pos:column="42"/></name></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">state<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">write<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">state<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">whave<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="number" pos:line="22" pos:column="24">0<pos:position pos:line="22" pos:column="25"/></literal></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* copy state-&gt;wsize or less output bytes into the circular window */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">copy<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <name pos:line="26" pos:column="12">out<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">-<pos:position pos:line="26" pos:column="17"/></operator> <name><name pos:line="26" pos:column="18">strm<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">avail_out<pos:position pos:line="26" pos:column="33"/></name></name></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">copy<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">&gt;=<pos:position pos:line="27" pos:column="19"/></operator> <name><name pos:line="27" pos:column="17">state<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">wsize<pos:position pos:line="27" pos:column="29"/></name></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <block pos:line="27" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">zmemcpy<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name><name pos:line="28" pos:column="17">state<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">window<pos:position pos:line="28" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="32">strm<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">next_out<pos:position pos:line="28" pos:column="46"/></name></name> <operator pos:line="28" pos:column="47">-<pos:position pos:line="28" pos:column="48"/></operator> <name><name pos:line="28" pos:column="49">state<pos:position pos:line="28" pos:column="54"/></name><operator pos:line="28" pos:column="54">-&gt;<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="56">wsize<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="63">state<pos:position pos:line="28" pos:column="68"/></name><operator pos:line="28" pos:column="68">-&gt;<pos:position pos:line="28" pos:column="73"/></operator><name pos:line="28" pos:column="70">wsize<pos:position pos:line="28" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">state<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">write<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">state<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">-&gt;<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="16">whave<pos:position pos:line="30" pos:column="21"/></name></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <name><name pos:line="30" pos:column="24">state<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">wsize<pos:position pos:line="30" pos:column="36"/></name></name></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <else pos:line="32" pos:column="5">else <block pos:line="32" pos:column="10">{
        <expr_stmt><expr><name pos:line="33" pos:column="9">dist<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name><name pos:line="33" pos:column="16">state<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">wsize<pos:position pos:line="33" pos:column="28"/></name></name> <operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator> <name><name pos:line="33" pos:column="31">state<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">-&gt;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="38">write<pos:position pos:line="33" pos:column="43"/></name></name></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>
        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name pos:line="34" pos:column="13">dist<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">&gt;<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="20">copy<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="26">dist<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">=<pos:position pos:line="34" pos:column="32"/></operator> <name pos:line="34" pos:column="33">copy<pos:position pos:line="34" pos:column="37"/></name></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">zmemcpy<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name><name pos:line="35" pos:column="17">state<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">window<pos:position pos:line="35" pos:column="30"/></name></name> <operator pos:line="35" pos:column="31">+<pos:position pos:line="35" pos:column="32"/></operator> <name><name pos:line="35" pos:column="33">state<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">write<pos:position pos:line="35" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="47">strm<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">-&gt;<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="53">next_out<pos:position pos:line="35" pos:column="61"/></name></name> <operator pos:line="35" pos:column="62">-<pos:position pos:line="35" pos:column="63"/></operator> <name pos:line="35" pos:column="64">copy<pos:position pos:line="35" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="70">dist<pos:position pos:line="35" pos:column="74"/></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">copy<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">-=<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">dist<pos:position pos:line="36" pos:column="21"/></name></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">copy<pos:position pos:line="37" pos:column="17"/></name></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18"> <block pos:line="37" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">zmemcpy<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name><name pos:line="38" pos:column="21">state<pos:position pos:line="38" pos:column="26"/></name><operator pos:line="38" pos:column="26">-&gt;<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="28">window<pos:position pos:line="38" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="36">strm<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">-&gt;<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="42">next_out<pos:position pos:line="38" pos:column="50"/></name></name> <operator pos:line="38" pos:column="51">-<pos:position pos:line="38" pos:column="52"/></operator> <name pos:line="38" pos:column="53">copy<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">copy<pos:position pos:line="38" pos:column="63"/></name></expr></argument>)<pos:position pos:line="38" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">state<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">write<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="28">copy<pos:position pos:line="39" pos:column="32"/></name></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="40" pos:column="13">state<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">whave<pos:position pos:line="40" pos:column="25"/></name></name> <operator pos:line="40" pos:column="26">=<pos:position pos:line="40" pos:column="27"/></operator> <name><name pos:line="40" pos:column="28">state<pos:position pos:line="40" pos:column="33"/></name><operator pos:line="40" pos:column="33">-&gt;<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="35">wsize<pos:position pos:line="40" pos:column="40"/></name></name></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then>
        <else pos:line="42" pos:column="9">else <block pos:line="42" pos:column="14">{
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">state<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">-&gt;<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="20">write<pos:position pos:line="43" pos:column="25"/></name></name> <operator pos:line="43" pos:column="26">+=<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="29">dist<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name><name pos:line="44" pos:column="17">state<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">write<pos:position pos:line="44" pos:column="29"/></name></name> <operator pos:line="44" pos:column="30">==<pos:position pos:line="44" pos:column="32"/></operator> <name><name pos:line="44" pos:column="33">state<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">wsize<pos:position pos:line="44" pos:column="45"/></name></name></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="47">state<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">write<pos:position pos:line="44" pos:column="59"/></name></name> <operator pos:line="44" pos:column="60">=<pos:position pos:line="44" pos:column="61"/></operator> <literal type="number" pos:line="44" pos:column="62">0<pos:position pos:line="44" pos:column="63"/></literal></expr>;<pos:position pos:line="44" pos:column="64"/></expr_stmt></block></then></if>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name><name pos:line="45" pos:column="17">state<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">-&gt;<pos:position pos:line="45" pos:column="27"/></operator><name pos:line="45" pos:column="24">whave<pos:position pos:line="45" pos:column="29"/></name></name> <operator pos:line="45" pos:column="30">&lt;<pos:position pos:line="45" pos:column="34"/></operator> <name><name pos:line="45" pos:column="32">state<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">-&gt;<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="39">wsize<pos:position pos:line="45" pos:column="44"/></name></name></expr>)<pos:position pos:line="45" pos:column="45"/></condition><then pos:line="45" pos:column="45"> <block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="46">state<pos:position pos:line="45" pos:column="51"/></name><operator pos:line="45" pos:column="51">-&gt;<pos:position pos:line="45" pos:column="56"/></operator><name pos:line="45" pos:column="53">whave<pos:position pos:line="45" pos:column="58"/></name></name> <operator pos:line="45" pos:column="59">+=<pos:position pos:line="45" pos:column="61"/></operator> <name pos:line="45" pos:column="62">dist<pos:position pos:line="45" pos:column="66"/></name></expr>;<pos:position pos:line="45" pos:column="67"/></expr_stmt></block></then></if>
        }<pos:position pos:line="46" pos:column="10"/></block></else></if>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
    <return pos:line="48" pos:column="5">return <expr><literal type="number" pos:line="48" pos:column="12">0<pos:position pos:line="48" pos:column="13"/></literal></expr>;<pos:position pos:line="48" pos:column="14"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function_decl></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_184_rsync-2.6.8.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">successful_send<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">ndx<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">fname<pos:position pos:line="3" pos:column="19"/></name><index pos:line="3" pos:column="19">[<expr><name pos:line="3" pos:column="20">MAXPATHLEN<pos:position pos:line="3" pos:column="30"/></name></expr>]<pos:position pos:line="3" pos:column="31"/></index></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">file_struct<pos:position pos:line="4" pos:column="27"/></name></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">file<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">offset<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">ndx<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">&lt;<pos:position pos:line="7" pos:column="21"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal> <operator pos:line="7" pos:column="21">||<pos:position pos:line="7" pos:column="23"/></operator> <name pos:line="7" pos:column="24">ndx<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&gt;=<pos:position pos:line="7" pos:column="33"/></operator> <name><name pos:line="7" pos:column="31">the_file_list<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">count<pos:position pos:line="7" pos:column="51"/></name></name></expr>)<pos:position pos:line="7" pos:column="52"/></condition><then pos:line="7" pos:column="52">
		<block type="pseudo"><return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="10" pos:column="9">file<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name><name pos:line="10" pos:column="16">the_file_list<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">files<pos:position pos:line="10" pos:column="36"/></name><index pos:line="10" pos:column="36">[<expr><name pos:line="10" pos:column="37">ndx<pos:position pos:line="10" pos:column="40"/></name></expr>]<pos:position pos:line="10" pos:column="41"/></index></name></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
	<comment type="block" pos:line="11" pos:column="9">/* The generator might tell us about symlinks we didn't send. */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><name><name pos:line="12" pos:column="15">file<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">flags<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="29">FLAG_SENT<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="40">&amp;&amp;<pos:position pos:line="12" pos:column="50"/></operator> <operator pos:line="12" pos:column="43">!<pos:position pos:line="12" pos:column="44"/></operator><call><name pos:line="12" pos:column="44">S_ISLNK<pos:position pos:line="12" pos:column="51"/></name><argument_list pos:line="12" pos:column="51">(<argument><expr><name><name pos:line="12" pos:column="52">file<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">mode<pos:position pos:line="12" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="64"/></condition><then pos:line="12" pos:column="64">
		<block type="pseudo"><return pos:line="13" pos:column="17">return;<pos:position pos:line="13" pos:column="24"/></return></block></then></if>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name><name pos:line="14" pos:column="13">file<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">dir<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">.<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">root<pos:position pos:line="14" pos:column="27"/></name></name></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28"> <block pos:line="14" pos:column="29">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">offset<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <call><name pos:line="15" pos:column="26">stringjoin<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">fname<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="44">sizeof <name pos:line="15" pos:column="51">fname<pos:position pos:line="15" pos:column="56"/></name></sizeof></expr></argument>,
				    <argument><expr><name><name pos:line="16" pos:column="37">file<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">dir<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">.<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">root<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="53">"/"<pos:position pos:line="16" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="58">NULL<pos:position pos:line="16" pos:column="62"/></name></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">offset<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <literal type="number" pos:line="18" pos:column="26">0<pos:position pos:line="18" pos:column="27"/></literal></expr>;<pos:position pos:line="18" pos:column="28"/></expr_stmt></block></else></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">f_name<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">file<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">fname<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">+<pos:position pos:line="19" pos:column="29"/></operator> <name pos:line="19" pos:column="30">offset<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">remove_sent_files<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&amp;&amp;<pos:position pos:line="20" pos:column="41"/></operator> <call><name pos:line="20" pos:column="34">do_unlink<pos:position pos:line="20" pos:column="43"/></name><argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">fname<pos:position pos:line="20" pos:column="49"/></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call> <operator pos:line="20" pos:column="51">==<pos:position pos:line="20" pos:column="53"/></operator> <literal type="number" pos:line="20" pos:column="54">0<pos:position pos:line="20" pos:column="55"/></literal> <operator pos:line="20" pos:column="56">&amp;&amp;<pos:position pos:line="20" pos:column="66"/></operator> <name pos:line="20" pos:column="59">verbose<pos:position pos:line="20" pos:column="66"/></name> <operator pos:line="20" pos:column="67">&gt;<pos:position pos:line="20" pos:column="71"/></operator> <literal type="number" pos:line="20" pos:column="69">1<pos:position pos:line="20" pos:column="70"/></literal></expr>)<pos:position pos:line="20" pos:column="71"/></condition><then pos:line="20" pos:column="71">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="17">rprintf<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">FINFO<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="32">"sender removed %s\n"<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="55">fname<pos:position pos:line="21" pos:column="60"/></name> <operator pos:line="21" pos:column="61">+<pos:position pos:line="21" pos:column="62"/></operator> <name pos:line="21" pos:column="63">offset<pos:position pos:line="21" pos:column="69"/></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

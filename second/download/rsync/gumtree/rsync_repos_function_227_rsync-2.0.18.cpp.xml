<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_227_rsync-2.0.18.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">report<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">int<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">f<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">time_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">t<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">time<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><name pos:line="3" pos:column="25">NULL<pos:position pos:line="3" pos:column="29"/></name></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">extern<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">am_server<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="5" pos:column="9">extern<pos:position pos:line="5" pos:column="15"/></specifier> <type><name pos:line="5" pos:column="16">int<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">am_sender<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="6" pos:column="9">extern<pos:position pos:line="6" pos:column="15"/></specifier> <type><name pos:line="6" pos:column="16">int<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">am_daemon<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="7" pos:column="9">extern<pos:position pos:line="7" pos:column="15"/></specifier> <type><name pos:line="7" pos:column="16">int<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">do_stats<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">am_daemon<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">syslog<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">LOG_INFO<pos:position pos:line="10" pos:column="32"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="10" pos:column="33">"wrote %.0f bytes  read %.0f bytes  total size %.0f\n"<pos:position pos:line="10" pos:column="87"/></literal></expr></argument>,
		       <argument><expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">double<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator><name><name pos:line="11" pos:column="32">stats<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">.<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">total_written<pos:position pos:line="11" pos:column="51"/></name></name></expr></argument>,
		       <argument><expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">double<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator><name><name pos:line="12" pos:column="32">stats<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">.<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">total_read<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>,
		       <argument><expr><operator pos:line="13" pos:column="24">(<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">double<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator><name><name pos:line="13" pos:column="32">stats<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">total_size<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><name pos:line="14" pos:column="21">f<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">==<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">-<pos:position pos:line="14" pos:column="27"/></operator><literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal> <operator pos:line="14" pos:column="29">||<pos:position pos:line="14" pos:column="31"/></operator> <operator pos:line="14" pos:column="32">!<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">am_sender<pos:position pos:line="14" pos:column="42"/></name></expr>)<pos:position pos:line="14" pos:column="43"/></condition><then pos:line="14" pos:column="43"> <block type="pseudo"><return pos:line="14" pos:column="44">return;<pos:position pos:line="14" pos:column="51"/></return></block></then></if>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">verbose<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block type="pseudo"><return pos:line="17" pos:column="23">return;<pos:position pos:line="17" pos:column="30"/></return></block></then></if>

	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">am_server<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&amp;&amp;<pos:position pos:line="19" pos:column="33"/></operator> <operator pos:line="19" pos:column="26">!<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">am_sender<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block type="pseudo"><return pos:line="19" pos:column="38">return;<pos:position pos:line="19" pos:column="45"/></return></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">am_server<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&amp;&amp;<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="26">am_sender<pos:position pos:line="21" pos:column="35"/></name></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <block pos:line="21" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">write_longint<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">f<pos:position pos:line="22" pos:column="32"/></name></expr></argument>,<argument><expr><name><name pos:line="22" pos:column="33">stats<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">total_read<pos:position pos:line="22" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="23" pos:column="17">write_longint<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name pos:line="23" pos:column="31">f<pos:position pos:line="23" pos:column="32"/></name></expr></argument>,<argument><expr><name><name pos:line="23" pos:column="33">stats<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">.<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="39">total_written<pos:position pos:line="23" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">write_longint<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">f<pos:position pos:line="24" pos:column="32"/></name></expr></argument>,<argument><expr><name><name pos:line="24" pos:column="33">stats<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">.<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">total_size<pos:position pos:line="24" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
		<return pos:line="25" pos:column="17">return;<pos:position pos:line="25" pos:column="24"/></return>
	}<pos:position pos:line="26" pos:column="10"/></block></then></if>
    
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">am_sender<pos:position pos:line="28" pos:column="23"/></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24"> <block pos:line="28" pos:column="25">{
		<decl_stmt><decl><type><name pos:line="29" pos:column="17">int64<pos:position pos:line="29" pos:column="22"/></name></type> <name pos:line="29" pos:column="23">r<pos:position pos:line="29" pos:column="24"/></name></decl>;<pos:position pos:line="29" pos:column="25"/></decl_stmt>
		<expr_stmt><expr><name><name pos:line="30" pos:column="17">stats<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">.<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">total_written<pos:position pos:line="30" pos:column="36"/></name></name> <operator pos:line="30" pos:column="37">=<pos:position pos:line="30" pos:column="38"/></operator> <call><name pos:line="30" pos:column="39">read_longint<pos:position pos:line="30" pos:column="51"/></name><argument_list pos:line="30" pos:column="51">(<argument><expr><name pos:line="30" pos:column="52">f<pos:position pos:line="30" pos:column="53"/></name></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><name pos:line="31" pos:column="17">r<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <call><name pos:line="31" pos:column="21">read_longint<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">f<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="32" pos:column="17">stats<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">.<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">total_size<pos:position pos:line="32" pos:column="33"/></name></name> <operator pos:line="32" pos:column="34">=<pos:position pos:line="32" pos:column="35"/></operator> <call><name pos:line="32" pos:column="36">read_longint<pos:position pos:line="32" pos:column="48"/></name><argument_list pos:line="32" pos:column="48">(<argument><expr><name pos:line="32" pos:column="49">f<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="33" pos:column="17">stats<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">.<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">total_read<pos:position pos:line="33" pos:column="33"/></name></name> <operator pos:line="33" pos:column="34">=<pos:position pos:line="33" pos:column="35"/></operator> <name pos:line="33" pos:column="36">r<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">do_stats<pos:position pos:line="36" pos:column="21"/></name></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="37" pos:column="17">printf<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="string" pos:line="37" pos:column="24">"\nNumber of files: %d\n"<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="51">stats<pos:position pos:line="37" pos:column="56"/></name><operator pos:line="37" pos:column="56">.<pos:position pos:line="37" pos:column="57"/></operator><name pos:line="37" pos:column="57">num_files<pos:position pos:line="37" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">printf<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><literal type="string" pos:line="38" pos:column="24">"Number of files transferred: %d\n"<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>, 
		       <argument><expr><name><name pos:line="39" pos:column="24">stats<pos:position pos:line="39" pos:column="29"/></name><operator pos:line="39" pos:column="29">.<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">num_transferred_files<pos:position pos:line="39" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">printf<pos:position pos:line="40" pos:column="23"/></name><argument_list pos:line="40" pos:column="23">(<argument><expr><literal type="string" pos:line="40" pos:column="24">"Total file size: %.0f bytes\n"<pos:position pos:line="40" pos:column="55"/></literal></expr></argument>, 
		       <argument><expr><operator pos:line="41" pos:column="24">(<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">double<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">)<pos:position pos:line="41" pos:column="32"/></operator><name><name pos:line="41" pos:column="32">stats<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">.<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">total_size<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="50"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">printf<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><literal type="string" pos:line="42" pos:column="24">"Total transferred file size: %.0f bytes\n"<pos:position pos:line="42" pos:column="67"/></literal></expr></argument>, 
		       <argument><expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">double<pos:position pos:line="43" pos:column="31"/></name><operator pos:line="43" pos:column="31">)<pos:position pos:line="43" pos:column="32"/></operator><name><name pos:line="43" pos:column="32">stats<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">.<pos:position pos:line="43" pos:column="38"/></operator><name pos:line="43" pos:column="38">total_transferred_size<pos:position pos:line="43" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">printf<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">(<argument><expr><literal type="string" pos:line="44" pos:column="24">"Literal data: %.0f bytes\n"<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>, 
		       <argument><expr><operator pos:line="45" pos:column="24">(<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">double<pos:position pos:line="45" pos:column="31"/></name><operator pos:line="45" pos:column="31">)<pos:position pos:line="45" pos:column="32"/></operator><name><name pos:line="45" pos:column="32">stats<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">.<pos:position pos:line="45" pos:column="38"/></operator><name pos:line="45" pos:column="38">literal_data<pos:position pos:line="45" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">printf<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="string" pos:line="46" pos:column="24">"Matched data: %.0f bytes\n"<pos:position pos:line="46" pos:column="52"/></literal></expr></argument>, 
		       <argument><expr><operator pos:line="47" pos:column="24">(<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="25">double<pos:position pos:line="47" pos:column="31"/></name><operator pos:line="47" pos:column="31">)<pos:position pos:line="47" pos:column="32"/></operator><name><name pos:line="47" pos:column="32">stats<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">.<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">matched_data<pos:position pos:line="47" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="48" pos:column="17">printf<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><literal type="string" pos:line="48" pos:column="24">"File list size: %d\n"<pos:position pos:line="48" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="48">stats<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">.<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="54">flist_size<pos:position pos:line="48" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">printf<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><literal type="string" pos:line="49" pos:column="24">"Total bytes written: %.0f\n"<pos:position pos:line="49" pos:column="53"/></literal></expr></argument>, 
		       <argument><expr><operator pos:line="50" pos:column="24">(<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">double<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">)<pos:position pos:line="50" pos:column="32"/></operator><name><name pos:line="50" pos:column="32">stats<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">.<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="38">total_written<pos:position pos:line="50" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="51" pos:column="17">printf<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><literal type="string" pos:line="51" pos:column="24">"Total bytes read: %.0f\n\n"<pos:position pos:line="51" pos:column="52"/></literal></expr></argument>, 
		       <argument><expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><name pos:line="52" pos:column="25">double<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">)<pos:position pos:line="52" pos:column="32"/></operator><name><name pos:line="52" pos:column="32">stats<pos:position pos:line="52" pos:column="37"/></name><operator pos:line="52" pos:column="37">.<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">total_read<pos:position pos:line="52" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>
	
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">printf<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="string" pos:line="55" pos:column="16">"wrote %.0f bytes  read %.0f bytes  %.2f bytes/sec\n"<pos:position pos:line="55" pos:column="69"/></literal></expr></argument>,
	       <argument><expr><operator pos:line="56" pos:column="16">(<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="17">double<pos:position pos:line="56" pos:column="23"/></name><operator pos:line="56" pos:column="23">)<pos:position pos:line="56" pos:column="24"/></operator><name><name pos:line="56" pos:column="24">stats<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">.<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">total_written<pos:position pos:line="56" pos:column="43"/></name></name></expr></argument>,
	       <argument><expr><operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">double<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">)<pos:position pos:line="57" pos:column="24"/></operator><name><name pos:line="57" pos:column="24">stats<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">.<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="30">total_read<pos:position pos:line="57" pos:column="40"/></name></name></expr></argument>,
	       <argument><expr><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><name><name pos:line="58" pos:column="17">stats<pos:position pos:line="58" pos:column="22"/></name><operator pos:line="58" pos:column="22">.<pos:position pos:line="58" pos:column="23"/></operator><name pos:line="58" pos:column="23">total_written<pos:position pos:line="58" pos:column="36"/></name></name><operator pos:line="58" pos:column="36">+<pos:position pos:line="58" pos:column="37"/></operator><name><name pos:line="58" pos:column="37">stats<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">.<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="43">total_read<pos:position pos:line="58" pos:column="53"/></name></name><operator pos:line="58" pos:column="53">)<pos:position pos:line="58" pos:column="54"/></operator><operator pos:line="58" pos:column="54">/<pos:position pos:line="58" pos:column="55"/></operator><operator pos:line="58" pos:column="55">(<pos:position pos:line="58" pos:column="56"/></operator><literal type="number" pos:line="58" pos:column="56">0.5<pos:position pos:line="58" pos:column="59"/></literal> <operator pos:line="58" pos:column="60">+<pos:position pos:line="58" pos:column="61"/></operator> <operator pos:line="58" pos:column="62">(<pos:position pos:line="58" pos:column="63"/></operator><name pos:line="58" pos:column="63">t<pos:position pos:line="58" pos:column="64"/></name><operator pos:line="58" pos:column="64">-<pos:position pos:line="58" pos:column="65"/></operator><name pos:line="58" pos:column="65">starttime<pos:position pos:line="58" pos:column="74"/></name><operator pos:line="58" pos:column="74">)<pos:position pos:line="58" pos:column="75"/></operator><operator pos:line="58" pos:column="75">)<pos:position pos:line="58" pos:column="76"/></operator></expr></argument>)<pos:position pos:line="58" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="78"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="59" pos:column="9">printf<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="string" pos:line="59" pos:column="16">"total size is %.0f  speedup is %.2f\n"<pos:position pos:line="59" pos:column="55"/></literal></expr></argument>,
	       <argument><expr><operator pos:line="60" pos:column="16">(<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">double<pos:position pos:line="60" pos:column="23"/></name><operator pos:line="60" pos:column="23">)<pos:position pos:line="60" pos:column="24"/></operator><name><name pos:line="60" pos:column="24">stats<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">.<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="30">total_size<pos:position pos:line="60" pos:column="40"/></name></name></expr></argument>,
	       <argument><expr><operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">1.0<pos:position pos:line="61" pos:column="20"/></literal><operator pos:line="61" pos:column="20">*<pos:position pos:line="61" pos:column="21"/></operator><name><name pos:line="61" pos:column="21">stats<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">.<pos:position pos:line="61" pos:column="27"/></operator><name pos:line="61" pos:column="27">total_size<pos:position pos:line="61" pos:column="37"/></name></name><operator pos:line="61" pos:column="37">)<pos:position pos:line="61" pos:column="38"/></operator><operator pos:line="61" pos:column="38">/<pos:position pos:line="61" pos:column="39"/></operator><operator pos:line="61" pos:column="39">(<pos:position pos:line="61" pos:column="40"/></operator><name><name pos:line="61" pos:column="40">stats<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">.<pos:position pos:line="61" pos:column="46"/></operator><name pos:line="61" pos:column="46">total_written<pos:position pos:line="61" pos:column="59"/></name></name><operator pos:line="61" pos:column="59">+<pos:position pos:line="61" pos:column="60"/></operator><name><name pos:line="61" pos:column="60">stats<pos:position pos:line="61" pos:column="65"/></name><operator pos:line="61" pos:column="65">.<pos:position pos:line="61" pos:column="66"/></operator><name pos:line="61" pos:column="66">total_read<pos:position pos:line="61" pos:column="76"/></name></name><operator pos:line="61" pos:column="76">)<pos:position pos:line="61" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="61" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="79"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="63" pos:column="9">fflush<pos:position pos:line="63" pos:column="15"/></name><argument_list pos:line="63" pos:column="15">(<argument><expr><name pos:line="63" pos:column="16">stdout<pos:position pos:line="63" pos:column="22"/></name></expr></argument>)<pos:position pos:line="63" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="64" pos:column="9">fflush<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><name pos:line="64" pos:column="16">stderr<pos:position pos:line="64" pos:column="22"/></name></expr></argument>)<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_825.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">fix_basis_dirs<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier><modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">dir<pos:position pos:line="3" pos:column="19"/></name></decl>, <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier>new, <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="28">slash<pos:position pos:line="3" pos:column="33"/></name></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">len<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">dry_run<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">&lt;=<pos:position pos:line="6" pos:column="26"/></operator> <literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26">
		<block type="pseudo"><return pos:line="7" pos:column="17">return;<pos:position pos:line="7" pos:column="24"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">slash<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">strrchr<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">curr_dir<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="35">'/'<pos:position pos:line="9" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">dir<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">basis_dir<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></init> <condition><expr><operator pos:line="11" pos:column="31">*<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">dir<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></condition> <incr><expr><name pos:line="11" pos:column="37">dir<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">++<pos:position pos:line="11" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="43"/></control> <block pos:line="11" pos:column="44">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">dir<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">==<pos:position pos:line="12" pos:column="29"/></operator> <literal type="char" pos:line="12" pos:column="30">'/'<pos:position pos:line="12" pos:column="33"/></literal></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34">
			<block type="pseudo"><continue pos:line="13" pos:column="25">continue;<pos:position pos:line="13" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name pos:line="14" pos:column="17">len<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">curr_dir_len<pos:position pos:line="14" pos:column="35"/></name> <operator pos:line="14" pos:column="36">+<pos:position pos:line="14" pos:column="37"/></operator> <literal type="number" pos:line="14" pos:column="38">1<pos:position pos:line="14" pos:column="39"/></literal> <operator pos:line="14" pos:column="40">+<pos:position pos:line="14" pos:column="41"/></operator> <call><name pos:line="14" pos:column="42">strlen<pos:position pos:line="14" pos:column="48"/></name><argument_list pos:line="14" pos:column="48">(<argument><expr><operator pos:line="14" pos:column="49">*<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">dir<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call> <operator pos:line="14" pos:column="55">+<pos:position pos:line="14" pos:column="56"/></operator> <literal type="number" pos:line="14" pos:column="57">1<pos:position pos:line="14" pos:column="58"/></literal></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><operator pos:line="15" pos:column="23">new<pos:position pos:line="15" pos:column="26"/></operator> <operator pos:line="15" pos:column="27">=<pos:position pos:line="15" pos:column="28"/></operator> <call><name pos:line="15" pos:column="29">new_array<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">char<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="45">len<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call><operator pos:line="15" pos:column="49">)<pos:position pos:line="15" pos:column="50"/></operator></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="25">out_of_memory<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><literal type="string" pos:line="16" pos:column="39">"fix_basis_dirs"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt></block></then></if>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">slash<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">&amp;&amp;<pos:position pos:line="17" pos:column="37"/></operator> <call><name pos:line="17" pos:column="30">strncmp<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><operator pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">dir<pos:position pos:line="17" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="44">"../"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="51">3<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call> <operator pos:line="17" pos:column="54">==<pos:position pos:line="17" pos:column="56"/></operator> <literal type="number" pos:line="17" pos:column="57">0<pos:position pos:line="17" pos:column="58"/></literal></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59"> <block pos:line="17" pos:column="60">{
		    <comment type="block" pos:line="18" pos:column="21">/* We want to remove only one leading "../" prefix for
		     * the directory we couldn't create in dry-run mode:
		     * this ensures that any other ".." references get
		     * evaluated the same as they would for a live copy. */</comment>
		    <expr_stmt><expr><operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="22">slash<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="char" pos:line="22" pos:column="30">'\0'<pos:position pos:line="22" pos:column="34"/></literal></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
		    <expr_stmt><expr><call><name pos:line="23" pos:column="21">pathjoin<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><operator pos:line="23" pos:column="30">new<pos:position pos:line="23" pos:column="33"/></operator></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">len<pos:position pos:line="23" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="40">curr_dir<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="50">*<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="51">dir<pos:position pos:line="23" pos:column="54"/></name> <operator pos:line="23" pos:column="55">+<pos:position pos:line="23" pos:column="56"/></operator> <literal type="number" pos:line="23" pos:column="57">3<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
		    <expr_stmt><expr><operator pos:line="24" pos:column="21">*<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">slash<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <literal type="char" pos:line="24" pos:column="30">'/'<pos:position pos:line="24" pos:column="33"/></literal></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
		}<pos:position pos:line="25" pos:column="18"/></block></then> <else pos:line="25" pos:column="19">else
		    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="21">pathjoin<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><operator pos:line="26" pos:column="30">new<pos:position pos:line="26" pos:column="33"/></operator></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">len<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="40">curr_dir<pos:position pos:line="26" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="50">*<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="51">dir<pos:position pos:line="26" pos:column="54"/></name></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt></block></else></if>
		<expr_stmt><expr><operator pos:line="27" pos:column="17">*<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">dir<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <operator pos:line="27" pos:column="24">new<pos:position pos:line="27" pos:column="27"/></operator></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></for>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

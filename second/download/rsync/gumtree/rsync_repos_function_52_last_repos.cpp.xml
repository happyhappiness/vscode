<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_52_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">flush_write_file<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">f<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><literal type="number" pos:line="3" pos:column="19">0<pos:position pos:line="3" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">bp<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">wf_writeBuf<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

	<while pos:line="6" pos:column="9">while <condition pos:line="6" pos:column="15">(<expr><name pos:line="6" pos:column="16">wf_writeBufCnt<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">&gt;<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="33">0<pos:position pos:line="6" pos:column="34"/></literal></expr>)<pos:position pos:line="6" pos:column="35"/></condition> <block pos:line="6" pos:column="36">{
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><operator pos:line="7" pos:column="21">(<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">ret<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <call><name pos:line="7" pos:column="28">write<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">f<pos:position pos:line="7" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="37">bp<pos:position pos:line="7" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">wf_writeBufCnt<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call><operator pos:line="7" pos:column="56">)<pos:position pos:line="7" pos:column="57"/></operator> <operator pos:line="7" pos:column="58">&lt;<pos:position pos:line="7" pos:column="62"/></operator> <literal type="number" pos:line="7" pos:column="60">0<pos:position pos:line="7" pos:column="61"/></literal></expr>)<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62"> <block pos:line="7" pos:column="63">{
			<if pos:line="8" pos:column="25">if <condition pos:line="8" pos:column="28">(<expr><name pos:line="8" pos:column="29">errno<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">==<pos:position pos:line="8" pos:column="37"/></operator> <name pos:line="8" pos:column="38">EINTR<pos:position pos:line="8" pos:column="43"/></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
				<block type="pseudo"><continue pos:line="9" pos:column="33">continue;<pos:position pos:line="9" pos:column="42"/></continue></block></then></if>
			<return pos:line="10" pos:column="25">return <expr><name pos:line="10" pos:column="32">ret<pos:position pos:line="10" pos:column="35"/></name></expr>;<pos:position pos:line="10" pos:column="36"/></return>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="12" pos:column="17">wf_writeBufCnt<pos:position pos:line="12" pos:column="31"/></name> <operator pos:line="12" pos:column="32">-=<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="35">ret<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="13" pos:column="17">bp<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">+=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">ret<pos:position pos:line="13" pos:column="26"/></name></expr>;<pos:position pos:line="13" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></while>
	<return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">ret<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

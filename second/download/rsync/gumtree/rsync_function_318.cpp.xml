<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_function_318.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">file_list<pos:position pos:line="1" pos:column="17"/></name></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type><name pos:line="1" pos:column="19">recv_file_list<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">f<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">file_list<pos:position pos:line="3" pos:column="19"/></name></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">flist<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">unsigned<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">flags<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">verbose<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">&amp;&amp;<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="18">recurse<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">&amp;&amp;<pos:position pos:line="6" pos:column="36"/></operator> <operator pos:line="6" pos:column="29">!<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">am_server<pos:position pos:line="6" pos:column="39"/></name></expr>)<pos:position pos:line="6" pos:column="40"/></condition><then pos:line="6" pos:column="40"> <block pos:line="6" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">fprintf<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">FINFO<pos:position pos:line="7" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="7" pos:column="19">"receiving file list ... "<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">fflush<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">FINFO<pos:position pos:line="8" pos:column="17"/></name></expr></argument>)<pos:position pos:line="8" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">flist<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator>struct <name pos:line="11" pos:column="19">file_list<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">*<pos:position pos:line="11" pos:column="30"/></operator><operator pos:line="11" pos:column="30">)<pos:position pos:line="11" pos:column="31"/></operator><call><name pos:line="11" pos:column="31">malloc<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><sizeof pos:line="11" pos:column="38">sizeof<argument_list pos:line="11" pos:column="44">(<argument><expr><name><name pos:line="11" pos:column="45">flist<pos:position pos:line="11" pos:column="50"/></name><index pos:line="11" pos:column="50">[<expr><literal type="number" pos:line="11" pos:column="51">0<pos:position pos:line="11" pos:column="52"/></literal></expr>]<pos:position pos:line="11" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">flist<pos:position pos:line="12" pos:column="13"/></name></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14">
    <block type="pseudo"><goto pos:line="13" pos:column="5">goto <name pos:line="13" pos:column="10">oom<pos:position pos:line="13" pos:column="13"/></name>;<pos:position pos:line="13" pos:column="14"/></goto></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">flist<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">count<pos:position pos:line="15" pos:column="15"/></name></name><operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">flist<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">malloced<pos:position pos:line="16" pos:column="18"/></name></name><operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator><literal type="number" pos:line="16" pos:column="19">100<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">flist<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">files<pos:position pos:line="17" pos:column="15"/></name></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <operator pos:line="17" pos:column="18">(<pos:position pos:line="17" pos:column="19"/></operator>struct <name pos:line="17" pos:column="26">file_struct<pos:position pos:line="17" pos:column="37"/></name> <operator pos:line="17" pos:column="38">*<pos:position pos:line="17" pos:column="39"/></operator><operator pos:line="17" pos:column="39">)<pos:position pos:line="17" pos:column="40"/></operator><call><name pos:line="17" pos:column="40">malloc<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><sizeof pos:line="17" pos:column="47">sizeof<argument_list pos:line="17" pos:column="53">(<argument><expr><name><name pos:line="17" pos:column="54">flist<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">-&gt;<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="61">files<pos:position pos:line="17" pos:column="66"/></name><index pos:line="17" pos:column="66">[<expr><literal type="number" pos:line="17" pos:column="67">0<pos:position pos:line="17" pos:column="68"/></literal></expr>]<pos:position pos:line="17" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></sizeof><operator pos:line="17" pos:column="70">*<pos:position pos:line="17" pos:column="71"/></operator>
					      <name><name pos:line="18" pos:column="47">flist<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">-&gt;<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="54">malloced<pos:position pos:line="18" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><operator pos:line="19" pos:column="7">!<pos:position pos:line="19" pos:column="8"/></operator><name><name pos:line="19" pos:column="8">flist<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">files<pos:position pos:line="19" pos:column="20"/></name></name></expr>)<pos:position pos:line="19" pos:column="21"/></condition><then pos:line="19" pos:column="21">
    <block type="pseudo"><goto pos:line="20" pos:column="5">goto <name pos:line="20" pos:column="10">oom<pos:position pos:line="20" pos:column="13"/></name>;<pos:position pos:line="20" pos:column="14"/></goto></block></then></if>


  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><expr><name pos:line="23" pos:column="8">flags<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator><call><name pos:line="23" pos:column="14">read_byte<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">f<pos:position pos:line="23" pos:column="25"/></name></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="27"/></init> <condition><expr><name pos:line="23" pos:column="28">flags<pos:position pos:line="23" pos:column="33"/></name></expr>;<pos:position pos:line="23" pos:column="34"/></condition> <incr><expr><name pos:line="23" pos:column="35">flags<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator><call><name pos:line="23" pos:column="41">read_byte<pos:position pos:line="23" pos:column="50"/></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name pos:line="23" pos:column="51">f<pos:position pos:line="23" pos:column="52"/></name></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr></incr>)<pos:position pos:line="23" pos:column="54"/></control> <block pos:line="23" pos:column="55">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">int<pos:position pos:line="24" pos:column="8"/></name></type> <name pos:line="24" pos:column="9">i<pos:position pos:line="24" pos:column="10"/></name> <init pos:line="24" pos:column="11">= <expr><name><name pos:line="24" pos:column="13">flist<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">count<pos:position pos:line="24" pos:column="25"/></name></name></expr></init></decl>;<pos:position pos:line="24" pos:column="26"/></decl_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">i<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">&gt;=<pos:position pos:line="26" pos:column="16"/></operator> <name><name pos:line="26" pos:column="14">flist<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">malloced<pos:position pos:line="26" pos:column="29"/></name></name></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
	  <if pos:line="27" pos:column="11">if <condition pos:line="27" pos:column="14">(<expr><name><name pos:line="27" pos:column="15">flist<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">-&gt;<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="22">malloced<pos:position pos:line="27" pos:column="30"/></name></name> <operator pos:line="27" pos:column="31">&lt;<pos:position pos:line="27" pos:column="35"/></operator> <literal type="number" pos:line="27" pos:column="33">100<pos:position pos:line="27" pos:column="36"/></literal></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37">
		  <block type="pseudo"><expr_stmt><expr><name><name pos:line="28" pos:column="19">flist<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">malloced<pos:position pos:line="28" pos:column="34"/></name></name> <operator pos:line="28" pos:column="35">+=<pos:position pos:line="28" pos:column="37"/></operator> <literal type="number" pos:line="28" pos:column="38">100<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt></block></then>
	  <else pos:line="29" pos:column="11">else
		  <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="19">flist<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">malloced<pos:position pos:line="30" pos:column="34"/></name></name> <operator pos:line="30" pos:column="35">*=<pos:position pos:line="30" pos:column="37"/></operator> <literal type="number" pos:line="30" pos:column="38">1.8<pos:position pos:line="30" pos:column="41"/></literal></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt></block></else></if>
	  <expr_stmt><expr><name><name pos:line="31" pos:column="11">flist<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">-&gt;<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="18">files<pos:position pos:line="31" pos:column="23"/></name></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator><operator pos:line="31" pos:column="25">(<pos:position pos:line="31" pos:column="26"/></operator>struct <name pos:line="31" pos:column="33">file_struct<pos:position pos:line="31" pos:column="44"/></name> <operator pos:line="31" pos:column="45">*<pos:position pos:line="31" pos:column="46"/></operator><operator pos:line="31" pos:column="46">)<pos:position pos:line="31" pos:column="47"/></operator><call><name pos:line="31" pos:column="47">realloc<pos:position pos:line="31" pos:column="54"/></name><argument_list pos:line="31" pos:column="54">(<argument><expr><name><name pos:line="31" pos:column="55">flist<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">files<pos:position pos:line="31" pos:column="67"/></name></name></expr></argument>,
						      <argument><expr><sizeof pos:line="32" pos:column="55">sizeof<argument_list pos:line="32" pos:column="61">(<argument><expr><name><name pos:line="32" pos:column="62">flist<pos:position pos:line="32" pos:column="67"/></name><operator pos:line="32" pos:column="67">-&gt;<pos:position pos:line="32" pos:column="72"/></operator><name pos:line="32" pos:column="69">files<pos:position pos:line="32" pos:column="74"/></name><index pos:line="32" pos:column="74">[<expr><literal type="number" pos:line="32" pos:column="75">0<pos:position pos:line="32" pos:column="76"/></literal></expr>]<pos:position pos:line="32" pos:column="77"/></index></name></expr></argument>)<pos:position pos:line="32" pos:column="78"/></argument_list></sizeof><operator pos:line="32" pos:column="78">*<pos:position pos:line="32" pos:column="79"/></operator>
						      <name><name pos:line="33" pos:column="55">flist<pos:position pos:line="33" pos:column="60"/></name><operator pos:line="33" pos:column="60">-&gt;<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="62">malloced<pos:position pos:line="33" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="72"/></expr_stmt>
	  <if pos:line="34" pos:column="11">if <condition pos:line="34" pos:column="14">(<expr><operator pos:line="34" pos:column="15">!<pos:position pos:line="34" pos:column="16"/></operator><name><name pos:line="34" pos:column="16">flist<pos:position pos:line="34" pos:column="21"/></name><operator pos:line="34" pos:column="21">-&gt;<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="23">files<pos:position pos:line="34" pos:column="28"/></name></name></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29">
		  <block type="pseudo"><goto pos:line="35" pos:column="19">goto <name pos:line="35" pos:column="24">oom<pos:position pos:line="35" pos:column="27"/></name>;<pos:position pos:line="35" pos:column="28"/></goto></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">receive_file_entry<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><operator pos:line="38" pos:column="24">&amp;<pos:position pos:line="38" pos:column="29"/></operator><name><name pos:line="38" pos:column="25">flist<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">files<pos:position pos:line="38" pos:column="37"/></name><index pos:line="38" pos:column="37">[<expr><name pos:line="38" pos:column="38">i<pos:position pos:line="38" pos:column="39"/></name></expr>]<pos:position pos:line="38" pos:column="40"/></index></name></expr></argument>,<argument><expr><name pos:line="38" pos:column="41">flags<pos:position pos:line="38" pos:column="46"/></name></expr></argument>,<argument><expr><name pos:line="38" pos:column="47">f<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="50"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">S_ISREG<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><name><name pos:line="40" pos:column="17">flist<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">-&gt;<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="24">files<pos:position pos:line="40" pos:column="29"/></name><index pos:line="40" pos:column="29">[<expr><name pos:line="40" pos:column="30">i<pos:position pos:line="40" pos:column="31"/></name></expr>]<pos:position pos:line="40" pos:column="32"/></index></name><operator pos:line="40" pos:column="32">.<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">mode<pos:position pos:line="40" pos:column="37"/></name></expr></argument>)<pos:position pos:line="40" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="39"/></condition><then pos:line="40" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">total_size<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">+=<pos:position pos:line="41" pos:column="20"/></operator> <name><name pos:line="41" pos:column="21">flist<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">files<pos:position pos:line="41" pos:column="33"/></name><index pos:line="41" pos:column="33">[<expr><name pos:line="41" pos:column="34">i<pos:position pos:line="41" pos:column="35"/></name></expr>]<pos:position pos:line="41" pos:column="36"/></index></name><operator pos:line="41" pos:column="36">.<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="37">length<pos:position pos:line="41" pos:column="43"/></name></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">flist<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">count<pos:position pos:line="43" pos:column="17"/></name></name><operator pos:line="43" pos:column="17">++<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">verbose<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">&gt;<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="19">2<pos:position pos:line="45" pos:column="20"/></literal></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="7">fprintf<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">FERROR<pos:position pos:line="46" pos:column="21"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="46" pos:column="22">"recv_file_name(%s)\n"<pos:position pos:line="46" pos:column="44"/></literal></expr></argument>,<argument><expr><name><name pos:line="46" pos:column="45">flist<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">-&gt;<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="52">files<pos:position pos:line="46" pos:column="57"/></name><index pos:line="46" pos:column="57">[<expr><name pos:line="46" pos:column="58">i<pos:position pos:line="46" pos:column="59"/></name></expr>]<pos:position pos:line="46" pos:column="60"/></index></name><operator pos:line="46" pos:column="60">.<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="61">name<pos:position pos:line="46" pos:column="65"/></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="67"/></expr_stmt></block></then></if>
  }<pos:position pos:line="47" pos:column="4"/></block></for>


  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">verbose<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">&gt;<pos:position pos:line="50" pos:column="19"/></operator> <literal type="number" pos:line="50" pos:column="17">2<pos:position pos:line="50" pos:column="18"/></literal></expr>)<pos:position pos:line="50" pos:column="19"/></condition><then pos:line="50" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="5">fprintf<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><name pos:line="51" pos:column="13">FERROR<pos:position pos:line="51" pos:column="19"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="51" pos:column="20">"received %d names\n"<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>,<argument><expr><name><name pos:line="51" pos:column="42">flist<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">count<pos:position pos:line="51" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="56"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">clean_flist<pos:position pos:line="53" pos:column="14"/></name><argument_list pos:line="53" pos:column="14">(<argument><expr><name pos:line="53" pos:column="15">flist<pos:position pos:line="53" pos:column="20"/></name></expr></argument>)<pos:position pos:line="53" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>

  <if pos:line="55" pos:column="3">if <condition pos:line="55" pos:column="6">(<expr><name pos:line="55" pos:column="7">verbose<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">&amp;&amp;<pos:position pos:line="55" pos:column="25"/></operator> <name pos:line="55" pos:column="18">recurse<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">&amp;&amp;<pos:position pos:line="55" pos:column="36"/></operator> <operator pos:line="55" pos:column="29">!<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="30">am_server<pos:position pos:line="55" pos:column="39"/></name></expr>)<pos:position pos:line="55" pos:column="40"/></condition><then pos:line="55" pos:column="40"> <block pos:line="55" pos:column="41">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">fprintf<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">(<argument><expr><name pos:line="56" pos:column="13">FINFO<pos:position pos:line="56" pos:column="18"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="56" pos:column="19">"done\n"<pos:position pos:line="56" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="59" pos:column="3">/* now recv the uid/gid list. This was introduced in protocol version 15 */</comment>
  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">f<pos:position pos:line="60" pos:column="8"/></name> <operator pos:line="60" pos:column="9">!=<pos:position pos:line="60" pos:column="11"/></operator> <operator pos:line="60" pos:column="12">-<pos:position pos:line="60" pos:column="13"/></operator><literal type="number" pos:line="60" pos:column="13">1<pos:position pos:line="60" pos:column="14"/></literal> <operator pos:line="60" pos:column="15">&amp;&amp;<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="18">remote_version<pos:position pos:line="60" pos:column="32"/></name> <operator pos:line="60" pos:column="33">&gt;=<pos:position pos:line="60" pos:column="38"/></operator> <literal type="number" pos:line="60" pos:column="36">15<pos:position pos:line="60" pos:column="38"/></literal></expr>)<pos:position pos:line="60" pos:column="39"/></condition><then pos:line="60" pos:column="39"> <block pos:line="60" pos:column="40">{
	  <expr_stmt><expr><call><name pos:line="61" pos:column="11">recv_uid_list<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name pos:line="61" pos:column="25">f<pos:position pos:line="61" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="28">flist<pos:position pos:line="61" pos:column="33"/></name></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>

  <return pos:line="64" pos:column="3">return <expr><name pos:line="64" pos:column="10">flist<pos:position pos:line="64" pos:column="15"/></name></expr>;<pos:position pos:line="64" pos:column="16"/></return>

<label><name pos:line="66" pos:column="1">oom<pos:position pos:line="66" pos:column="4"/></name>:<pos:position pos:line="66" pos:column="5"/></label>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">out_of_memory<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><literal type="string" pos:line="67" pos:column="19">"recv_file_list"<pos:position pos:line="67" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="37"/></expr_stmt>
    <return pos:line="68" pos:column="5">return <expr><name pos:line="68" pos:column="12">NULL<pos:position pos:line="68" pos:column="16"/></name></expr>;<pos:position pos:line="68" pos:column="17"/></return> <comment type="block" pos:line="68" pos:column="18">/* not reached */</comment>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

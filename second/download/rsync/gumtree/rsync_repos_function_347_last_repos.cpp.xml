<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_347_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">ht_int64_node<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">idev_find<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">int64<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">dev<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">int64<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">ino<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name><name pos:line="3" pos:column="16">struct<pos:position pos:line="3" pos:column="22"/></name> <name pos:line="3" pos:column="23">ht_int64_node<pos:position pos:line="3" pos:column="36"/></name></name> <modifier pos:line="3" pos:column="37">*<pos:position pos:line="3" pos:column="38"/></modifier></type><name pos:line="3" pos:column="38">dev_node<pos:position pos:line="3" pos:column="46"/></name> <init pos:line="3" pos:column="47">= <expr><name pos:line="3" pos:column="49">NULL<pos:position pos:line="3" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">hashtable<pos:position pos:line="4" pos:column="25"/></name></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">tbl<pos:position pos:line="4" pos:column="30"/></name></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* Note that some OSes have a dev == 0, so increment to avoid storing a 0. */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><operator pos:line="7" pos:column="13">!<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">dev_node<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">||<pos:position pos:line="7" pos:column="25"/></operator> <name><name pos:line="7" pos:column="26">dev_node<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">key<pos:position pos:line="7" pos:column="39"/></name></name> <operator pos:line="7" pos:column="40">!=<pos:position pos:line="7" pos:column="42"/></operator> <name pos:line="7" pos:column="43">dev<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">+<pos:position pos:line="7" pos:column="47"/></operator><literal type="number" pos:line="7" pos:column="47">1<pos:position pos:line="7" pos:column="48"/></literal></expr>)<pos:position pos:line="7" pos:column="49"/></condition><then pos:line="7" pos:column="49"> <block pos:line="7" pos:column="50">{
		<comment type="block" pos:line="8" pos:column="17">/* We keep a separate hash table of inodes for every device. */</comment>
		<expr_stmt><expr><name pos:line="9" pos:column="17">dev_node<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <call><name pos:line="9" pos:column="28">hashtable_find<pos:position pos:line="9" pos:column="42"/></name><argument_list pos:line="9" pos:column="42">(<argument><expr><name pos:line="9" pos:column="43">dev_tbl<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">dev<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">+<pos:position pos:line="9" pos:column="56"/></operator><literal type="number" pos:line="9" pos:column="56">1<pos:position pos:line="9" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="59">1<pos:position pos:line="9" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><operator pos:line="10" pos:column="22">(<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="23">tbl<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <name><name pos:line="10" pos:column="29">dev_node<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">data<pos:position pos:line="10" pos:column="43"/></name></name><operator pos:line="10" pos:column="43">)<pos:position pos:line="10" pos:column="44"/></operator></expr>)<pos:position pos:line="10" pos:column="45"/></condition><then pos:line="10" pos:column="45"> <block pos:line="10" pos:column="46">{
			<expr_stmt><expr><name pos:line="11" pos:column="25">tbl<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <name><name pos:line="11" pos:column="31">dev_node<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">data<pos:position pos:line="11" pos:column="45"/></name></name> <operator pos:line="11" pos:column="46">=<pos:position pos:line="11" pos:column="47"/></operator> <call><name pos:line="11" pos:column="48">hashtable_create<pos:position pos:line="11" pos:column="64"/></name><argument_list pos:line="11" pos:column="64">(<argument><expr><literal type="number" pos:line="11" pos:column="65">512<pos:position pos:line="11" pos:column="68"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="70">1<pos:position pos:line="11" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="73"/></expr_stmt>
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><call><name pos:line="12" pos:column="29">DEBUG_GTE<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">HLINK<pos:position pos:line="12" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="46">3<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
				<expr_stmt><expr><call><name pos:line="13" pos:column="33">rprintf<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">(<argument><expr><name pos:line="13" pos:column="41">FINFO<pos:position pos:line="13" pos:column="46"/></name></expr></argument>,
				    <argument><expr><literal type="string" pos:line="14" pos:column="37">"[%s] created hashtable for dev %s\n"<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>,
				    <argument><expr><call><name pos:line="15" pos:column="37">who_am_i<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">()<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="49">big_num<pos:position pos:line="15" pos:column="56"/></name><argument_list pos:line="15" pos:column="56">(<argument><expr><name pos:line="15" pos:column="57">dev<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
			}<pos:position pos:line="16" pos:column="26"/></block></then></if>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>
	}<pos:position pos:line="18" pos:column="10"/></block></then> <else pos:line="18" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">tbl<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name><name pos:line="19" pos:column="23">dev_node<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">data<pos:position pos:line="19" pos:column="37"/></name></name></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt></block></else></if>

	<return pos:line="21" pos:column="9">return <expr><call><name pos:line="21" pos:column="16">hashtable_find<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">tbl<pos:position pos:line="21" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="36">ino<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="41">1<pos:position pos:line="21" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

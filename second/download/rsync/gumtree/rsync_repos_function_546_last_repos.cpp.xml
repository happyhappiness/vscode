<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_546_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">flist_find_name<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name><name pos:line="1" pos:column="21">struct<pos:position pos:line="1" pos:column="27"/></name> <name pos:line="1" pos:column="28">file_list<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">flist<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">fname<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="65">int<pos:position pos:line="1" pos:column="68"/></name></type> <name pos:line="1" pos:column="69">want_dir_match<pos:position pos:line="1" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="84"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<struct pos:line="3" pos:column="9">struct <block pos:line="3" pos:column="16">{<public type="default" pos:line="3" pos:column="17"> <comment type="block" pos:line="3" pos:column="18">/* We have to create a temporary file_struct for the search. */</comment>
		<decl_stmt><decl><type><name><name pos:line="4" pos:column="17">struct<pos:position pos:line="4" pos:column="23"/></name> <name pos:line="4" pos:column="24">file_struct<pos:position pos:line="4" pos:column="35"/></name></name></type> <name pos:line="4" pos:column="36">f<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name></type> <name><name pos:line="5" pos:column="22">name_space<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[<expr><name pos:line="5" pos:column="33">MAXPATHLEN<pos:position pos:line="5" pos:column="43"/></name></expr>]<pos:position pos:line="5" pos:column="44"/></index></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
	<pos:position pos:line="6" pos:column="2"/></public>}<pos:position pos:line="6" pos:column="10"/></block> <decl><name pos:line="6" pos:column="11">t<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></struct>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">fbuf<pos:position pos:line="7" pos:column="18"/></name><index pos:line="7" pos:column="18">[<expr><name pos:line="7" pos:column="19">MAXPATHLEN<pos:position pos:line="7" pos:column="29"/></name></expr>]<pos:position pos:line="7" pos:column="30"/></index></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">slash<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><call><name pos:line="8" pos:column="29">strrchr<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">fname<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="8" pos:column="44">'/'<pos:position pos:line="8" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">char<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">basename<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><ternary><condition><expr><name pos:line="9" pos:column="32">slash<pos:position pos:line="9" pos:column="37"/></name></expr> ?<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39"> <expr><name pos:line="9" pos:column="40">slash<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">+<pos:position pos:line="9" pos:column="46"/></operator><literal type="number" pos:line="9" pos:column="46">1<pos:position pos:line="9" pos:column="47"/></literal></expr> <pos:position pos:line="9" pos:column="48"/></then><else pos:line="9" pos:column="48">: <expr><name pos:line="9" pos:column="50">fname<pos:position pos:line="9" pos:column="55"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><operator pos:line="11" pos:column="16">&amp;<pos:position pos:line="11" pos:column="21"/></operator><name><name pos:line="11" pos:column="17">t<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">f<pos:position pos:line="11" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">FILE_STRUCT_LEN<pos:position pos:line="11" pos:column="40"/></name></expr></argument>)<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">memcpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">void<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="23">)<pos:position pos:line="12" pos:column="24"/></operator><name><name pos:line="12" pos:column="24">t<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">f<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">basename<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">basename<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="48">strlen<pos:position pos:line="12" pos:column="54"/></name><argument_list pos:line="12" pos:column="54">(<argument><expr><name pos:line="12" pos:column="55">basename<pos:position pos:line="12" pos:column="63"/></name></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call><operator pos:line="12" pos:column="64">+<pos:position pos:line="12" pos:column="65"/></operator><literal type="number" pos:line="12" pos:column="65">1<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">slash<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19"> <block pos:line="14" pos:column="20">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">strlcpy<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">fbuf<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">fname<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">slash<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">-<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">fname<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">+<pos:position pos:line="15" pos:column="53"/></operator> <literal type="number" pos:line="15" pos:column="54">1<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">t<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">.<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">f<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">dirname<pos:position pos:line="16" pos:column="28"/></name></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">fbuf<pos:position pos:line="16" pos:column="35"/></name></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="17" pos:column="10"/></block></then> <else pos:line="17" pos:column="11">else
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="17">t<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">f<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">.<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">dirname<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">NULL<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt></block></else></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">t<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">.<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">f<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">.<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">mode<pos:position pos:line="20" pos:column="17"/></name></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <ternary><condition><expr><name pos:line="20" pos:column="20">want_dir_match<pos:position pos:line="20" pos:column="34"/></name> <operator pos:line="20" pos:column="35">&gt;<pos:position pos:line="20" pos:column="39"/></operator> <literal type="number" pos:line="20" pos:column="37">0<pos:position pos:line="20" pos:column="38"/></literal></expr> ?<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40"> <expr><name pos:line="20" pos:column="41">S_IFDIR<pos:position pos:line="20" pos:column="48"/></name></expr> <pos:position pos:line="20" pos:column="49"/></then><else pos:line="20" pos:column="49">: <expr><name pos:line="20" pos:column="51">S_IFREG<pos:position pos:line="20" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>

	<if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name pos:line="22" pos:column="13">want_dir_match<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">&lt;<pos:position pos:line="22" pos:column="32"/></operator> <literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
		<block type="pseudo"><return pos:line="23" pos:column="17">return <expr><call><name pos:line="23" pos:column="24">flist_find_ignore_dirness<pos:position pos:line="23" pos:column="49"/></name><argument_list pos:line="23" pos:column="49">(<argument><expr><name pos:line="23" pos:column="50">flist<pos:position pos:line="23" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="57">&amp;<pos:position pos:line="23" pos:column="62"/></operator><name><name pos:line="23" pos:column="58">t<pos:position pos:line="23" pos:column="59"/></name><operator pos:line="23" pos:column="59">.<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">f<pos:position pos:line="23" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></return></block></then></if>
	<return pos:line="24" pos:column="9">return <expr><call><name pos:line="24" pos:column="16">flist_find<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">flist<pos:position pos:line="24" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="34">&amp;<pos:position pos:line="24" pos:column="39"/></operator><name><name pos:line="24" pos:column="35">t<pos:position pos:line="24" pos:column="36"/></name><operator pos:line="24" pos:column="36">.<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">f<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

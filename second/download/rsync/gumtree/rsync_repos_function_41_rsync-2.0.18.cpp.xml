<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/gumtree/rsync_repos_function_41_rsync-2.0.18.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">send_exclude_list<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">f<pos:position pos:line="1" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><specifier pos:line="4" pos:column="9">extern<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">int<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">remote_version<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">exclude_list<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="7" pos:column="17">write_int<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name pos:line="7" pos:column="27">f<pos:position pos:line="7" pos:column="28"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
		<return pos:line="8" pos:column="17">return;<pos:position pos:line="8" pos:column="24"/></return>
	}<pos:position pos:line="9" pos:column="10"/></block></then></if>

	<for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></init><condition><expr><name><name pos:line="11" pos:column="18">exclude_list<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name></expr>;<pos:position pos:line="11" pos:column="34"/></condition><incr><expr><name pos:line="11" pos:column="34">i<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">++<pos:position pos:line="11" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="11" pos:column="38"/></control> <block pos:line="11" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">pattern<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><name><name pos:line="12" pos:column="33">exclude_list<pos:position pos:line="12" pos:column="45"/></name><index pos:line="12" pos:column="45">[<expr><name pos:line="12" pos:column="46">i<pos:position pos:line="12" pos:column="47"/></name></expr>]<pos:position pos:line="12" pos:column="48"/></index></name><operator pos:line="12" pos:column="48">-&gt;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="50">orig<pos:position pos:line="12" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="55"/></decl_stmt> 
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">int<pos:position pos:line="13" pos:column="20"/></name></type> <name pos:line="13" pos:column="21">l<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">remote_version<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">&lt;<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="38">19<pos:position pos:line="15" pos:column="40"/></literal></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <block pos:line="15" pos:column="42">{
			<if pos:line="16" pos:column="25">if <condition pos:line="16" pos:column="28">(<expr><call><name pos:line="16" pos:column="29">strncmp<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">(<argument><expr><name pos:line="16" pos:column="37">pattern<pos:position pos:line="16" pos:column="44"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="16" pos:column="45">"+ "<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="51">2<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call><operator pos:line="16" pos:column="53">==<pos:position pos:line="16" pos:column="55"/></operator><literal type="number" pos:line="16" pos:column="55">0<pos:position pos:line="16" pos:column="56"/></literal></expr>)<pos:position pos:line="16" pos:column="57"/></condition><then pos:line="16" pos:column="57"> <block pos:line="16" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="17" pos:column="33">rprintf<pos:position pos:line="17" pos:column="40"/></name><argument_list pos:line="17" pos:column="40">(<argument><expr><name pos:line="17" pos:column="41">FERROR<pos:position pos:line="17" pos:column="47"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="17" pos:column="48">"remote rsync does not support include syntax - aborting\n"<pos:position pos:line="17" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="109"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="18" pos:column="33">exit_cleanup<pos:position pos:line="18" pos:column="45"/></name><argument_list pos:line="18" pos:column="45">(<argument><expr><literal type="number" pos:line="18" pos:column="46">1<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if>
			
			<if pos:line="21" pos:column="25">if <condition pos:line="21" pos:column="28">(<expr><call><name pos:line="21" pos:column="29">strncmp<pos:position pos:line="21" pos:column="36"/></name><argument_list pos:line="21" pos:column="36">(<argument><expr><name pos:line="21" pos:column="37">pattern<pos:position pos:line="21" pos:column="44"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="21" pos:column="45">"- "<pos:position pos:line="21" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="51">2<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call> <operator pos:line="21" pos:column="54">==<pos:position pos:line="21" pos:column="56"/></operator> <literal type="number" pos:line="21" pos:column="57">0<pos:position pos:line="21" pos:column="58"/></literal></expr>)<pos:position pos:line="21" pos:column="59"/></condition><then pos:line="21" pos:column="59"> <block pos:line="21" pos:column="60">{
				<expr_stmt><expr><name pos:line="22" pos:column="33">pattern<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">+=<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="44">2<pos:position pos:line="22" pos:column="45"/></literal></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>
			}<pos:position pos:line="23" pos:column="26"/></block></then></if>
		}<pos:position pos:line="24" pos:column="18"/></block></then></if>
		
		<expr_stmt><expr><name pos:line="26" pos:column="17">l<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">strlen<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">pattern<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">l<pos:position pos:line="27" pos:column="22"/></name> <operator pos:line="27" pos:column="23">==<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">0<pos:position pos:line="27" pos:column="27"/></literal></expr>)<pos:position pos:line="27" pos:column="28"/></condition><then pos:line="27" pos:column="28"> <block type="pseudo"><continue pos:line="27" pos:column="29">continue;<pos:position pos:line="27" pos:column="38"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">write_int<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">f<pos:position pos:line="28" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="28" pos:column="29">l<pos:position pos:line="28" pos:column="30"/></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">write_buf<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">f<pos:position pos:line="29" pos:column="28"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="29">pattern<pos:position pos:line="29" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="37">l<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="30" pos:column="10"/></block></for>    

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">write_int<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">f<pos:position pos:line="32" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="32" pos:column="21">0<pos:position pos:line="32" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

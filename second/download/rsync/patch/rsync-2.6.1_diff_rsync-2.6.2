diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/clientname.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/clientname.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/clientname.c	2004-04-02 05:39:35.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/clientname.c	2004-05-01 00:10:45.000000000 +0800
@@ -115,13 +115,15 @@
 		char *addr = client_addr(fd);
 		struct addrinfo hint, *answer;
 		int err;
 
 		memset(&hint, 0, sizeof hint);
 
+#ifdef AI_NUMERICHOST
 		hint.ai_flags = AI_NUMERICHOST;
+#endif
 		hint.ai_socktype = SOCK_STREAM;
 
 		if ((err = getaddrinfo(addr, NULL, &hint, &answer)) != 0) {
 			rprintf(FERROR, RSYNC_NAME ": malformed address %s: %s\n",
 			        addr, gai_strerror(err));
 			return name_buf;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/config.h.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/config.h.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/config.h.in	2004-04-10 02:09:30.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/config.h.in	2004-04-30 03:40:39.000000000 +0800
@@ -274,15 +274,12 @@
 /* Define to 1 if you have the <sys/socket.h> header file. */
 #undef HAVE_SYS_SOCKET_H
 
 /* Define to 1 if you have the <sys/stat.h> header file. */
 #undef HAVE_SYS_STAT_H
 
-/* Define to 1 if you have the <sys/sysctl.h> header file. */
-#undef HAVE_SYS_SYSCTL_H
-
 /* Define to 1 if you have the <sys/time.h> header file. */
 #undef HAVE_SYS_TIME_H
 
 /* Define to 1 if you have the <sys/types.h> header file. */
 #undef HAVE_SYS_TYPES_H
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/configure /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/configure
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/configure	2004-04-27 11:54:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/configure	2004-05-01 02:02:43.000000000 +0800
@@ -1311,13 +1311,13 @@
 
 
           ac_config_headers="$ac_config_headers config.h"
 
 
 
-RSYNC_VERSION=2.6.1
+RSYNC_VERSION=2.6.2
 
 { echo "$as_me:$LINENO: Configuring rsync $RSYNC_VERSION" >&5
 echo "$as_me: Configuring rsync $RSYNC_VERSION" >&6;}
 
 
 cat >>confdefs.h <<_ACEOF
@@ -2903,26 +2903,31 @@
 #include <sys/wait.h>
 
 int main(void)
 {
 	struct flock lock;
         int status;
-	int fd = open("conftest.dat", O_CREAT|O_RDWR, 0600);
+	char tpl[32] = "/tmp/locktest.XXXXXX";
+	int fd = mkstemp(tpl);
+	if (fd < 0) {
+		strcpy(tpl, "conftest.dat");
+		fd = open(tpl, O_CREAT|O_RDWR, 0600);
+	}
+
 	lock.l_type = F_WRLCK;
 	lock.l_whence = SEEK_SET;
 	lock.l_start = 0;
 	lock.l_len = 1;
 	lock.l_pid = 0;
-
 	fcntl(fd,F_SETLK,&lock);
 	if (fork() == 0) {
 		lock.l_start = 1;
-		exit(fcntl(fd,F_SETLK,&lock) == 0);
+		_exit(fcntl(fd,F_SETLK,&lock) == 0);
         }
         wait(&status);
-	unlink("conftest.dat");
+	unlink(tpl);
 	exit(WEXITSTATUS(status));
 }
 
 _ACEOF
 rm -f conftest$ac_exeext
 if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
@@ -4596,17 +4601,16 @@
 
 
 
 
 
 
-
 for ac_header in sys/fcntl.h sys/select.h fcntl.h sys/time.h sys/unistd.h \
     unistd.h utime.h grp.h compat.h sys/param.h ctype.h sys/wait.h \
     sys/ioctl.h sys/filio.h string.h stdlib.h sys/socket.h sys/mode.h \
-    sys/un.h glob.h mcheck.h sys/sysctl.h arpa/inet.h arpa/nameser.h \
+    sys/un.h glob.h mcheck.h arpa/inet.h arpa/nameser.h \
     netdb.h malloc.h float.h
 do
 as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
 if eval "test \"\${$as_ac_Header+set}\" = set"; then
   echo "$as_me:$LINENO: checking for $ac_header" >&5
 echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/configure.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/configure.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/configure.in	2004-04-27 11:54:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/configure.in	2004-05-01 02:02:43.000000000 +0800
@@ -2,13 +2,13 @@
 
 AC_INIT()
 AC_CONFIG_SRCDIR([byteorder.h])
 AC_CONFIG_HEADER(config.h)
 AC_PREREQ(2.52)
 
-RSYNC_VERSION=2.6.1
+RSYNC_VERSION=2.6.2
 AC_SUBST(RSYNC_VERSION)
 AC_MSG_NOTICE([Configuring rsync $RSYNC_VERSION])
 
 AC_DEFINE_UNQUOTED(RSYNC_VERSION, ["$RSYNC_VERSION"], [rsync release version])
 
 LDFLAGS=${LDFLAGS-""}
@@ -144,26 +144,31 @@
 #include <sys/wait.h>
 
 int main(void)
 {
 	struct flock lock;
         int status;
-	int fd = open("conftest.dat", O_CREAT|O_RDWR, 0600);
+	char tpl[32] = "/tmp/locktest.XXXXXX";
+	int fd = mkstemp(tpl);
+	if (fd < 0) {
+		strcpy(tpl, "conftest.dat");
+		fd = open(tpl, O_CREAT|O_RDWR, 0600);
+	}
+
 	lock.l_type = F_WRLCK;
 	lock.l_whence = SEEK_SET;
 	lock.l_start = 0;
 	lock.l_len = 1;
 	lock.l_pid = 0;
-	
 	fcntl(fd,F_SETLK,&lock);
 	if (fork() == 0) {
-		lock.l_start = 1;		
-		exit(fcntl(fd,F_SETLK,&lock) == 0);
+		lock.l_start = 1;
+		_exit(fcntl(fd,F_SETLK,&lock) == 0);
         }
         wait(&status);
-	unlink("conftest.dat");
+	unlink(tpl);
 	exit(WEXITSTATUS(status));
 }
 ],
 rsync_cv_HAVE_BROKEN_LARGEFILE=yes,rsync_cv_HAVE_BROKEN_LARGEFILE=no,rsync_cv_HAVE_BROKEN_LARGEFILE=cross)])
 if test x"$rsync_cv_HAVE_BROKEN_LARGEFILE" != x"yes"; then
    AC_SYS_LARGEFILE
@@ -279,13 +284,13 @@
 AC_HEADER_DIRENT
 AC_HEADER_TIME
 AC_HEADER_SYS_WAIT
 AC_CHECK_HEADERS(sys/fcntl.h sys/select.h fcntl.h sys/time.h sys/unistd.h \
     unistd.h utime.h grp.h compat.h sys/param.h ctype.h sys/wait.h \
     sys/ioctl.h sys/filio.h string.h stdlib.h sys/socket.h sys/mode.h \
-    sys/un.h glob.h mcheck.h sys/sysctl.h arpa/inet.h arpa/nameser.h \
+    sys/un.h glob.h mcheck.h arpa/inet.h arpa/nameser.h \
     netdb.h malloc.h float.h)
 AC_HEADER_MAJOR
 
 AC_CHECK_SIZEOF(int)
 AC_CHECK_SIZEOF(long)
 AC_CHECK_SIZEOF(short)
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/flist.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/flist.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/flist.c	2004-04-27 09:36:10.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/flist.c	2004-04-30 03:37:15.000000000 +0800
@@ -1514,17 +1514,23 @@
 	if (!f2 || !f2->basename)
 		return 1;
 
 	if (!(c1 = (uchar*)f1->dirname)) {
 		state1 = fnc_BASE;
 		c1 = (uchar*)f1->basename;
+	} else if (!*c1) {
+		state1 = fnc_SLASH;
+		c1 = (uchar*)"/";
 	} else
 		state1 = fnc_DIR;
 	if (!(c2 = (uchar*)f2->dirname)) {
 		state2 = fnc_BASE;
 		c2 = (uchar*)f2->basename;
+	} else if (!*c2) {
+		state2 = fnc_SLASH;
+		c2 = (uchar*)"/";
 	} else
 		state2 = fnc_DIR;
 
 	while (1) {
 		if ((dif = (int)*c1 - (int)*c2) != 0)
 			break;
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/log.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/log.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/log.c	2004-01-20 13:15:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/log.c	2004-04-30 03:34:31.000000000 +0800
@@ -179,13 +179,14 @@
 	if (am_server) {
 		/* Pass it to non-server side, perhaps through our sibling. */
 		if (msg_fd_out >= 0) {
 			send_msg((enum msgcode)code, buf, len);
 			return;
 		}
-		if (io_multiplex_write((enum msgcode)code, buf, len))
+		if (!am_daemon
+		    && io_multiplex_write((enum msgcode)code, buf, len))
 			return;
 	}
 
 	/* otherwise, if in daemon mode and either we are not a server
 	 *  (that is, we are not running --daemon over a remote shell) or
 	 *  the log has already been initialised, log the message on this
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/NEWS /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/NEWS
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/NEWS	2004-04-27 11:53:28.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/NEWS	2004-05-01 01:53:51.000000000 +0800
@@ -1,6 +1,45 @@
+NEWS for rsync 2.6.2 (30 Apr 2004)
+Protocol: 28 (unchanged)
+Changes since 2.6.1:
+
+  BUG FIXES:
+
+    - Fixed a major bug in the sorting of the filenames when --relative
+      is used for some sources (probably just "/", but don't depend on
+      that).  This fix ensures that we ask for the right file-list item
+      when requesting changes from the sender.
+
+    - Rsync now checks the return value of the close() function to
+      better report disk-full problems on an NFS file system.
+
+    - Restored the old daemon-server behavior of logging error messages
+      rather than returning them to the user.  (A better long-term fix
+      will be sought in the future.)
+
+    - An obscure uninitialized-variable bug was fixed in the uid/gid
+      code.  (This bug probably had no ill effects.)
+
+    - Got rid of the configure check for sys/sysctl.h (it wasn't used
+      and was causing a problem on some systems).  Also improved the
+      broken-largefile-locking test to try to avoid failure due to an
+      NFS build-dir.
+
+    - Fixed a compile problem on systems that don't define
+      AI_NUMERICHOST.
+
+    - Fixed a compile problem in the popt source for compilers that
+      don't support __attribute__.
+
+  INTERNAL:
+
+    - Improved the testsuite's "merge" test to work on OSF1.
+
+    - Two new diffs were added to the patches dir.
+
+
 NEWS for rsync 2.6.1 (26 Apr 2004)
 Protocol: 28 (changed)
 Changes since 2.6.0:
 
   SECURITY FIXES:
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/packaging/lsb/rsync.spec /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/packaging/lsb/rsync.spec
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/packaging/lsb/rsync.spec	2004-04-27 11:54:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/packaging/lsb/rsync.spec	2004-05-01 02:02:43.000000000 +0800
@@ -1,9 +1,9 @@
 Summary: Program for efficient remote updates of files.
 Name: rsync
-Version: 2.6.1
+Version: 2.6.2
 Release: 1
 Copyright: GPL
 Group: Applications/Networking
 Source:	ftp://samba.anu.edu.au/pub/rsync/rsync-%{version}.tar.gz
 URL: http://samba.anu.edu.au/rsync/
 Packager: Andrew Tridgell <tridge@samba.anu.edu.au>
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/patches: fsync.diff
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/patches: inplace.diff
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/popt/system.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/popt/system.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/popt/system.h	2004-04-27 09:36:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/popt/system.h	2004-04-29 01:35:08.000000000 +0800
@@ -16,12 +16,20 @@
 #include <string.h>
 
 #if HAVE_UNISTD_H
 #include <unistd.h>
 #endif
 
+#if !defined(__GNUC__) || defined(APPLE)
+/* Apparently the OS X port of gcc gags on __attribute__.
+ *
+ * <http://www.opensource.apple.com/bugs/X/gcc/2512150.html> */
+#define __attribute__(x) 
+
+#endif
+
 #ifdef __NeXT
 /* access macros are not declared in non posix mode in unistd.h -
  don't try to use posix on NeXTstep 3.3 ! */
 #include <libc.h>
 #endif
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/receiver.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/receiver.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/receiver.c	2004-03-24 00:50:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/receiver.c	2004-04-28 03:51:33.000000000 +0800
@@ -455,13 +455,17 @@
 		log_recv(file, &initial_stats);
 
 		if (mapbuf) unmap_file(mapbuf);
 		if (fd1 != -1) {
 			close(fd1);
 		}
-		close(fd2);
+		if (close(fd2) < 0) {
+			rprintf(FERROR, "close failed on %s: %s\n",
+				full_fname(fnametmp), strerror(errno));
+			exit_cleanup(RERR_FILEIO);
+		}
 
 		if (verbose > 2)
 			rprintf(FINFO,"renaming %s to %s\n",fnametmp,fname);
 
 		finish_transfer(fname, fnametmp, file);
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsync.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsync.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsync.1	2004-04-27 11:54:11.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsync.1	2004-05-01 02:02:48.000000000 +0800
@@ -1,7 +1,7 @@
-.TH "rsync" "1" "26 Apr 2004" "" "" 
+.TH "rsync" "1" "30 Apr 2004" "" "" 
 .SH "NAME" 
 rsync \- faster, flexible replacement for rcp
 .SH "SYNOPSIS" 
 .PP 
 rsync [OPTION]\&.\&.\&. SRC [SRC]\&.\&.\&. [USER@]HOST:DEST
 .PP 
@@ -1197,13 +1197,13 @@
 
 .PP 
 This fails because the parent directory "some" is excluded by the \&'*\&' rule,
 so rsync never visits any of the files in the "some" or "some/path"
 directories\&.  One solution is to ask for all directories in the hierarchy
 to be included by using a single rule: --include=\&'*/\&' (put it somewhere
-before the --excludde=\&'*\&' rule)\&.  Another solution is to add specific
+before the --exclude=\&'*\&' rule)\&.  Another solution is to add specific
 include rules for all the parent dirs that need to be visited\&.  For
 instance, this set of rules works fine:
 .PP 
 
 .nf 
  
@@ -1240,13 +1240,13 @@
 only foo/bar\&.c (the foo/ directory must be explicitly included or
 it would be excluded by the "*")
 .PP 
 .SH "BATCH MODE" 
 .PP 
 \fBNote:\fP Batch mode should be considered experimental in this version
-of rsync\&. The interface or behaviour may change before it stabilizes\&.
+of rsync\&. The interface or behavior may change before it stabilizes\&.
 .PP 
 Batch mode can be used to apply the same set of updates to many
 identical systems\&. Suppose one has a tree which is replicated on a
 number of hosts\&.  Now suppose some changes have been made to this
 source tree and those changes need to be propagated to the other
 hosts\&. In order to do this using batch mode, rsync is run with the
@@ -1330,13 +1330,13 @@
 .PP 
 See \fBhttp://www\&.ils\&.unc\&.edu/i2dsi/unc_rsync+\&.html\fP for papers and technical
 reports\&.
 .PP 
 .SH "SYMBOLIC LINKS" 
 .PP 
-Three basic behaviours are possible when rsync encounters a symbolic
+Three basic behaviors are possible when rsync encounters a symbolic
 link in the source directory\&.
 .PP 
 By default, symbolic links are not transferred at all\&.  A message
 "skipping non-regular" file is emitted for any symlinks that exist\&.
 .PP 
 If \fB--links\fP is specified, then symlinks are recreated with the same
@@ -1401,13 +1401,13 @@
 Protocol incompatibility 
 .IP "\fB3\fP" 
 Errors selecting input/output files, dirs
 .IP "\fB4\fP" 
 Requested action not supported: an attempt
 was made to manipulate 64-bit files on a platform that cannot support
-them; or an option was specifed that is supported by the client and
+them; or an option was specified that is supported by the client and
 not by the server\&.
 .IP "\fB5\fP" 
 Error starting client-server protocol
 .IP "\fB10\fP" 
 Error in socket I/O 
 .IP "\fB11\fP" 
@@ -1476,13 +1476,13 @@
 .SH "DIAGNOSTICS" 
 .PP 
 .SH "BUGS" 
 .PP 
 times are transferred as unix time_t values
 .PP 
-When transferring to FAT filesystems rsync may resync
+When transferring to FAT filesystems rsync may re-sync
 unmodified files\&.
 See the comments on the --modify-window option\&.
 .PP 
 file permissions, devices, etc\&. are transferred as native numerical
 values
 .PP 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsyncd.conf.5 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsyncd.conf.5
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsyncd.conf.5	2004-04-27 11:54:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsyncd.conf.5	2004-05-01 02:02:50.000000000 +0800
@@ -1,7 +1,7 @@
-.TH "rsyncd\&.conf" "5" "26 Apr 2004" "" "" 
+.TH "rsyncd\&.conf" "5" "30 Apr 2004" "" "" 
 .SH "NAME" 
 rsyncd\&.conf \- configuration file for rsync server
 .SH "SYNOPSIS" 
 .PP 
 rsyncd\&.conf
 .PP 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsyncd.conf.yo /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsyncd.conf.yo
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsyncd.conf.yo	2004-04-27 11:54:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsyncd.conf.yo	2004-05-01 02:02:43.000000000 +0800
@@ -1,8 +1,8 @@
 mailto(rsync-bugs@samba.org)
-manpage(rsyncd.conf)(5)(26 Apr 2004)()()
+manpage(rsyncd.conf)(5)(30 Apr 2004)()()
 manpagename(rsyncd.conf)(configuration file for rsync server)
 manpagesynopsis()
 
 rsyncd.conf
 
 manpagedescription()
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsync.yo /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsync.yo
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/rsync.yo	2004-04-27 11:54:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/rsync.yo	2004-05-01 02:02:43.000000000 +0800
@@ -1,8 +1,8 @@
 mailto(rsync-bugs@samba.org)
-manpage(rsync)(1)(26 Apr 2004)()()
+manpage(rsync)(1)(30 Apr 2004)()()
 manpagename(rsync)(faster, flexible replacement for rcp)
 manpagesynopsis()
 
 rsync [OPTION]... SRC [SRC]... [USER@]HOST:DEST
 
 rsync [OPTION]... [USER@]HOST:SRC DEST
@@ -1032,13 +1032,13 @@
 )
 
 This fails because the parent directory "some" is excluded by the '*' rule,
 so rsync never visits any of the files in the "some" or "some/path"
 directories.  One solution is to ask for all directories in the hierarchy
 to be included by using a single rule: --include='*/' (put it somewhere
-before the --excludde='*' rule).  Another solution is to add specific
+before the --exclude='*' rule).  Another solution is to add specific
 include rules for all the parent dirs that need to be visited.  For
 instance, this set of rules works fine:
 
 verb(
     + /some/
     + /some/path/
@@ -1064,13 +1064,13 @@
   it would be excluded by the "*")
 )
 
 manpagesection(BATCH MODE)
 
 bf(Note:) Batch mode should be considered experimental in this version
-of rsync. The interface or behaviour may change before it stabilizes.
+of rsync. The interface or behavior may change before it stabilizes.
 
 Batch mode can be used to apply the same set of updates to many
 identical systems. Suppose one has a tree which is replicated on a
 number of hosts.  Now suppose some changes have been made to this
 source tree and those changes need to be propagated to the other
 hosts. In order to do this using batch mode, rsync is run with the
@@ -1146,13 +1146,13 @@
 
 See bf(http://www.ils.unc.edu/i2dsi/unc_rsync+.html) for papers and technical
 reports.
 
 manpagesection(SYMBOLIC LINKS)
 
-Three basic behaviours are possible when rsync encounters a symbolic
+Three basic behaviors are possible when rsync encounters a symbolic
 link in the source directory.
 
 By default, symbolic links are not transferred at all.  A message
 "skipping non-regular" file is emitted for any symlinks that exist.
 
 If bf(--links) is specified, then symlinks are recreated with the same
@@ -1207,13 +1207,13 @@
 dit(bf(0)) Success
 dit(bf(1)) Syntax or usage error 
 dit(bf(2)) Protocol incompatibility 
 dit(bf(3)) Errors selecting input/output files, dirs
 dit(bf(4)) Requested action not supported: an attempt
 was made to manipulate 64-bit files on a platform that cannot support
-them; or an option was specifed that is supported by the client and
+them; or an option was specified that is supported by the client and
 not by the server.
 dit(bf(5)) Error starting client-server protocol
 dit(bf(10)) Error in socket I/O 
 dit(bf(11)) Error in file I/O 
 dit(bf(12)) Error in rsync protocol data stream 
 dit(bf(13)) Errors with program diagnostics 
@@ -1267,13 +1267,13 @@
 manpagediagnostics()
 
 manpagebugs()
 
 times are transferred as unix time_t values
 
-When transferring to FAT filesystems rsync may resync
+When transferring to FAT filesystems rsync may re-sync
 unmodified files.
 See the comments on the --modify-window option.
 
 file permissions, devices, etc. are transferred as native numerical
 values
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/testsuite/merge.test /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/testsuite/merge.test
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/testsuite/merge.test	2004-02-05 02:24:41.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/testsuite/merge.test	2004-05-01 01:24:49.000000000 +0800
@@ -40,12 +40,12 @@
 
 cp -p "$from1dir"/one "$from1dir"/two "$from2dir"/three "$from3dir"/four "$from1dir"/five "$from3dir"/six "$chkdir"
 cp -p "$from2dir"/sub1/uno "$from3dir"/sub1/dos "$from2dir"/sub1/tres "$chkdir"/sub1
 cp -p "$from3dir"/sub2/subby "$chkdir"/sub2
 
 # Get rid of any directory-time differences
-touch "$fromdir"? "$chkdir" "$fromdir"?/sub? "$chkdir"/sub?
+$RSYNC -av --existing --include='*/' --exclude='*' "$from1dir/" "$from2dir/" "$from3dir/" "$chkdir/"
 
-checkit "$RSYNC -aHvv \"$fromdir\"?/ \"$todir/\"" "$chkdir" "$todir"
+checkit "$RSYNC -aHvv \"$from1dir/\" \"$from2dir/\" \"$from3dir/\" \"$todir/\"" "$chkdir" "$todir"
 
 # The script would have aborted on error, so getting here means we've won.
 exit 0
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/TODO /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/TODO
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/TODO	2004-02-22 05:37:14.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/TODO	2004-04-30 05:12:46.000000000 +0800
@@ -422,13 +422,15 @@
   work, but it would certainly make our messages more helpful.
 
   What happens if a directory is missing -x attributes.  Do we lose
   our load?  (Debian #28416) Probably fixed now, but a test case would
   be good.
 
-
+  When running as a daemon, some errors should both be returned to the
+  user and logged.  This will make interacting with a daemon less
+  cryptic.
 
                       --          --
 
 
 Better statistics:					Rasmus	2002/03/08
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/uidlist.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/uidlist.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/uidlist.c	2004-02-21 01:09:30.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/uidlist.c	2004-04-29 01:31:31.000000000 +0800
@@ -78,21 +78,21 @@
 	return NULL;
 }
 
 static int map_uid(int id, char *name)
 {
 	uid_t uid;
-	if (uid != 0 && name_to_uid(name, &uid))
+	if (id != 0 && name_to_uid(name, &uid))
 		return uid;
 	return id;
 }
 
 static int map_gid(int id, char *name)
 {
 	gid_t gid;
-	if (gid != 0 && name_to_gid(name, &gid))
+	if (id != 0 && name_to_gid(name, &gid))
 		return gid;
 	return id;
 }
 
 static int is_in_group(gid_t gid)
 {
@@ -158,13 +158,13 @@
 /* Add a uid to the list of uids.  Only called on receiving side. */
 static struct idlist *recv_add_uid(int id, char *name)
 {
 	int id2 = name ? map_uid(id, name) : id;
 	struct idlist *node;
 
-	node = add_to_list(&uidlist, id, name, map_uid(id, name));
+	node = add_to_list(&uidlist, id, name, id2);
 
 	if (verbose > 3) {
 		rprintf(FINFO, "uid %d(%s) maps to %d\n",
 		    id, name ? name : "", id2);
 	}
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/util.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/util.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.1/util.c	2004-04-28 00:43:40.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-2.6.2/util.c	2004-04-28 03:59:37.000000000 +0800
@@ -250,46 +250,56 @@
 	char buf[1024 * 8];
 	int len;   /* Number of bytes read into `buf'. */
 
 	ifd = do_open(source, O_RDONLY, 0);
 	if (ifd == -1) {
 		rprintf(FERROR,"open %s: %s\n",
-			source,strerror(errno));
+			full_fname(source), strerror(errno));
 		return -1;
 	}
 
 	if (robust_unlink(dest) && errno != ENOENT) {
 		rprintf(FERROR,"unlink %s: %s\n",
-			dest,strerror(errno));
+			full_fname(dest), strerror(errno));
 		return -1;
 	}
 
 	ofd = do_open(dest, O_WRONLY | O_CREAT | O_TRUNC | O_EXCL, mode);
 	if (ofd == -1) {
 		rprintf(FERROR,"open %s: %s\n",
-			dest,strerror(errno));
+			full_fname(dest), strerror(errno));
 		close(ifd);
 		return -1;
 	}
 
 	while ((len = safe_read(ifd, buf, sizeof buf)) > 0) {
 		if (full_write(ofd, buf, len) < 0) {
 			rprintf(FERROR,"write %s: %s\n",
-				dest,strerror(errno));
+				full_fname(dest), strerror(errno));
 			close(ifd);
 			close(ofd);
 			return -1;
 		}
 	}
 
-	close(ifd);
-	close(ofd);
-
 	if (len < 0) {
-		rprintf(FERROR,"read %s: %s\n",
-			source,strerror(errno));
+		rprintf(FERROR, "read %s: %s\n",
+			full_fname(source), strerror(errno));
+		close(ifd);
+		close(ofd);
+		return -1;
+	}
+
+	if (close(ifd) < 0) {
+		rprintf(FINFO, "close failed on %s: %s\n",
+			full_fname(source), strerror(errno));
+	}
+
+	if (close(ofd) < 0) {
+		rprintf(FERROR, "close failed on %s: %s\n",
+			full_fname(dest), strerror(errno));
 		return -1;
 	}
 
 	return 0;
 }
 

diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/exclude.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/exclude.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/exclude.c	1996-06-21 12:29:08.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/exclude.c	1996-06-26 09:25:07.000000000 +0800
@@ -32,13 +32,12 @@
   return strchr(str, '*') || strchr(str, '[') || strchr(str, '?');
 }
 
 
 static int check_one_exclude(char *name,char *pattern)
 {
-  char *str;
   char *p;
 
   if (!strchr(pattern,'/') && (p=strrchr(name,'/')))
     name = p+1;
 
   if (!name[0]) return 0;
Only in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2: io.c
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/Makefile.in /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/Makefile.in
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/Makefile.in	1996-06-21 20:16:05.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/Makefile.in	1996-06-26 09:05:58.000000000 +0800
@@ -17,13 +17,14 @@
 
 
 .SUFFIXES:
 .SUFFIXES: .c .o
 
 LIBOBJ=lib/getopt.o lib/fnmatch.o 
-OBJS=rsync.o exclude.o util.o md4.o main.o checksum.o match.o flist.o $(LIBOBJ)
+OBJS1=rsync.o exclude.o util.o md4.o main.o checksum.o match.o 
+OBJS=$(OBJS1) flist.o io.o $(LIBOBJ)
 
 .c.o:
 	$(CC) $(CFLAGS) -c $*.c -o $*.o
 
 all: rsync
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/match.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/match.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/match.c	1996-06-25 15:15:15.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/match.c	1996-06-26 09:27:22.000000000 +0800
@@ -35,15 +35,12 @@
 static int total_false_alarms=0;
 static int total_tag_hits=0;
 static int total_matches=0;
 static int total_data_transfer=0;
 
 
-static int check_f_in;
-
-
 struct target {
   tag t;
   int i;
 };
 
 static struct target *targets=NULL;
@@ -97,13 +94,12 @@
   if (verbose > 2)
     if (i != -1)
       fprintf(stderr,"match at %d last_match=%d j=%d len=%d n=%d\n",
 	      (int)offset,(int)last_match,i,(int)s->sums[i].len,n);
 
   if (n > 0) {
-    read_check(check_f_in);
     write_int(f,n);
     write_buf(f,buf+last_match,n);
     data_transfer += n;
   }
   write_int(f,-(i+1));
   if (i != -1)
@@ -198,22 +194,20 @@
   } while (++offset < end);
 
   matched(f,s,buf,len,len,-1);
 }
 
 
-void match_sums(int f,struct sum_struct *s,char *buf,off_t len,int f_in)
+void match_sums(int f,struct sum_struct *s,char *buf,off_t len)
 {
   last_match = 0;
   false_alarms = 0;
   tag_hits = 0;
   matches=0;
   data_transfer=0;
 
-  check_f_in = f_in;
-
   if (len > 0 && s->count>0) {
     build_hash_table(s);
 
     if (verbose > 2) 
       fprintf(stderr,"built hash table\n");
 
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/proto.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/proto.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/proto.h	1996-06-25 15:19:58.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/proto.h	1996-06-26 09:29:29.000000000 +0800
@@ -12,31 +12,33 @@
 void recv_exclude_list(int f);
 void add_cvs_excludes(void);
 struct file_list *send_file_list(int f,int recurse,int argc,char *argv[]);
 struct file_list *recv_file_list(int f);
 int flist_find(struct file_list *flist,struct file_struct *f);
 void clean_flist(struct file_list *flist);
+int write_total(void);
+int read_total(void);
+void setup_nonblocking(int f_in,int f_out);
+int read_int(int f);
+void read_buf(int f,char *buf,int len);
+int read_write(int fd_in,int fd_out,int size);
+void write_int(int f,int x);
+void write_buf(int f,char *buf,int len);
+void write_flush(int f);
 int do_cmd(char *cmd,char *machine,char *user,char *path,int *f_in,int *f_out);
 void do_server_sender(int argc,char *argv[]);
 void do_server_recv(int argc,char *argv[]);
 int main(int argc,char *argv[]);
-void match_sums(int f,struct sum_struct *s,char *buf,off_t len,int f_in);
+void match_sums(int f,struct sum_struct *s,char *buf,off_t len);
 void match_report(void);
 void recv_generator(char *fname,struct file_list *flist,int i,int f_out);
 void sig_int(void);
 int recv_files(int f_in,struct file_list *flist,char *local_name);
 off_t send_files(struct file_list *flist,int f_out,int f_in);
 void generate_files(int f,struct file_list *flist,char *local_name);
-int write_total(void);
-int read_total(void);
-void write_int(int f,int x);
-void write_buf(int f,char *buf,int len);
-void write_flush(int f);
-void read_check(int f);
-int read_int(int f);
-void read_buf(int f,char *buf,int len);
+int num_waiting(int fd);
 char *map_file(int fd,off_t len);
 void unmap_file(char *buf,off_t len);
-int read_write(int fd_in,int fd_out,int size);
 int piped_child(char **command,int *f_in,int *f_out);
 void out_of_memory(char *str);
 int set_modtime(char *fname,time_t modtime);
+int set_blocking(int fd, int set);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/rsync.1 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/rsync.1
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/rsync.1	1996-06-21 20:04:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/rsync.1	1996-06-26 09:44:23.000000000 +0800
@@ -289,13 +289,13 @@
 values
 
 see also the comments on the -delete option 
 
 .SH VERSION
 
-This man page is current for version 0.8 of rsync
+This man page is current for version 1.2 of rsync
 
 .SH CREDITS
 
 rsync was written by Andrew Tridgell and Paul Mackerras. They may be
 contacted via email at Andrew.Tridgell@anu.edu.au and
 paulus@cs.anu.edu.au
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/rsync.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/rsync.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/rsync.c	1996-06-25 15:14:00.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/rsync.c	1996-06-26 09:27:35.000000000 +0800
@@ -608,16 +608,16 @@
   off_t total=0;
   int i;
 
   if (verbose > 2)
     fprintf(stderr,"send_files starting\n");
 
+  setup_nonblocking(f_in,f_out);
+
   while (1) 
     {
-      read_check(f_in);
-
       i = read_int(f_in);
       if (i == -1) break;
 
       fname[0] = 0;
       if (flist->files[i].dir) {
 	strcpy(fname,flist->files[i].dir);
@@ -677,13 +677,13 @@
       if (verbose > 2)
 	fprintf(stderr,"calling match_sums %s\n",fname);
 
       if (!am_server && verbose)
 	printf("%s\n",fname);
       
-      match_sums(f_out,s,buf,st.st_size,f_in);
+      match_sums(f_out,s,buf,st.st_size);
       write_flush(f_out);
       
       unmap_file(buf,st.st_size);
       close(fd);
 
       free_sums(s);
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/rsync.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/rsync.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/rsync.h	1996-06-25 15:22:34.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/rsync.h	1996-06-26 08:59:42.000000000 +0800
@@ -233,6 +233,10 @@
 
 #if !SUPPORT_LINKS
 #define lstat stat
 #endif
 
 #define SIGNAL_CAST (RETSIGTYPE (*)())
+
+#ifndef EWOULDBLOCK
+#define EWOULDBLOCK EAGAIN
+#endif
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/util.c /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/util.c
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/util.c	1996-06-25 21:39:13.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/util.c	1996-06-26 09:34:14.000000000 +0800
@@ -21,150 +21,19 @@
   Utilities used in rsync 
 
   tridge, June 1996
   */
 #include "rsync.h"
 
-static int total_written = 0;
-static int total_read = 0;
-
-extern int verbose;
-
-int write_total(void)
-{
-  return total_written;
-}
-
-int read_total(void)
-{
-  return total_read;
-}
-
-void write_int(int f,int x)
-{
-  char b[4];
-  SIVAL(b,0,x);
-  if (write(f,b,4) != 4) {
-    fprintf(stderr,"write_int failed : %s\n",strerror(errno));
-    exit(1);
-  }
-  total_written += 4;
-}
-
-void write_buf(int f,char *buf,int len)
-{
-  if (write(f,buf,len) != len) {
-    fprintf(stderr,"write_buf failed : %s\n",strerror(errno));
-    exit(1);
-  }
-  total_written += len;
-}
-
-static int num_waiting(int fd)
+int num_waiting(int fd)
 {
   int len=0;
-#ifdef FIONREAD
   ioctl(fd,FIONREAD,&len);
-#endif
   return(len);
 }
 
-static char *read_buffer = NULL;
-static char *read_buffer_p = NULL;
-static int read_buffer_len = 0;
-static int read_buffer_size = 0;
-
-
-void write_flush(int f)
-{
-}
-
-
-/* This function was added to overcome a deadlock problem when using
- * ssh.  It looks like we can't allow our receive queue to get full or
- * ssh will clag up. Uggh.  */
-void read_check(int f)
-{
-  int n;
-
-  if (read_buffer_len == 0) {
-    read_buffer_p = read_buffer;
-  }
-
-  if ((n=num_waiting(f)) <= 0)
-    return;
-
-  if (read_buffer_p != read_buffer) {
-    memmove(read_buffer,read_buffer_p,read_buffer_len);
-    read_buffer_p = read_buffer;
-  }
-
-  if (n > (read_buffer_size - read_buffer_len)) {
-    read_buffer_size += n;
-    if (!read_buffer)
-      read_buffer = (char *)malloc(read_buffer_size);
-    else
-      read_buffer = (char *)realloc(read_buffer,read_buffer_size);
-    if (!read_buffer) out_of_memory("read check");      
-    read_buffer_p = read_buffer;      
-  }
-
-  n = read(f,read_buffer+read_buffer_len,n);
-  if (n > 0) {
-    read_buffer_len += n;
-  }
-}
-
-
-static int readfd(int fd,char *buffer,int N)
-{
-  int  ret;
-  int total=0;  
- 
-  while (total < N)
-    {
-      if (read_buffer_len > 0) {
-	ret = MIN(read_buffer_len,N-total);
-	memcpy(buffer+total,read_buffer_p,ret);
-	read_buffer_p += ret;
-	read_buffer_len -= ret;
-      } else {
-	ret = read(fd,buffer + total,N - total);
-      }
-
-      if (ret <= 0)
-	return total;
-      total += ret;
-    }
-  return total;
-}
-
-
-int read_int(int f)
-{
-  char b[4];
-  if (readfd(f,b,4) != 4) {
-    if (verbose > 1) 
-      fprintf(stderr,"Error reading %d bytes : %s\n",4,strerror(errno));
-    exit(1);
-  }
-  total_read += 4;
-  return IVAL(b,0);
-}
-
-void read_buf(int f,char *buf,int len)
-{
-  if (readfd(f,buf,len) != len) {
-    if (verbose > 1) 
-      fprintf(stderr,"Error reading %d bytes : %s\n",len,strerror(errno));
-    exit(1);
-  }
-  total_read += len;
-}
-
-
 char *map_file(int fd,off_t len)
 {
   char *ret = (char *)mmap(NULL,len,PROT_READ,MAP_SHARED,fd,0);
   return ret;
 }
 
@@ -172,34 +41,12 @@
 {
   if (len > 0 && buf)
     munmap(buf,len);
 }
 
 
-int read_write(int fd_in,int fd_out,int size)
-{
-  static char *buf=NULL;
-  static int bufsize = WRITE_BLOCK_SIZE;
-  int total=0;
-  
-  if (!buf) {
-    buf = (char *)malloc(bufsize);
-    if (!buf) out_of_memory("read_write");
-  }
-
-  while (total < size) {
-    int n = MIN(size-total,bufsize);
-    read_buf(fd_in,buf,n);
-    if (write(fd_out,buf,n) != n)
-      return total;
-    total += n;
-  }
-  return total;
-}
-
-
 /* this is taken from CVS */
 int piped_child(char **command,int *f_in,int *f_out)
 {
   int pid;
   int to_child_pipe[2];
   int from_child_pipe[2];
@@ -283,6 +130,36 @@
   t[1].tv_sec = modtime;
   t[1].tv_usec = 0;
   return utimes(fname,t);
 #endif
 }
 
+
+
+/****************************************************************************
+Set a fd into blocking/nonblocking mode. Uses POSIX O_NONBLOCK if available,
+else
+if SYSV use O_NDELAY
+if BSD use FNDELAY
+****************************************************************************/
+int set_blocking(int fd, int set)
+{
+  int val;
+#ifdef O_NONBLOCK
+#define FLAG_TO_SET O_NONBLOCK
+#else
+#ifdef SYSV
+#define FLAG_TO_SET O_NDELAY
+#else /* BSD */
+#define FLAG_TO_SET FNDELAY
+#endif
+#endif
+
+  if((val = fcntl(fd, F_GETFL, 0)) == -1)
+	return -1;
+  if(set) /* Turn blocking on - ie. clear nonblock flag */
+	val &= ~FLAG_TO_SET;
+  else
+    val |= FLAG_TO_SET;
+  return fcntl( fd, F_SETFL, val);
+#undef FLAG_TO_SET
+}
diff -BEr -U 6 /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/version.h /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/version.h
--- /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.1/version.h	1996-06-25 15:30:37.000000000 +0800
+++ /usr/info/code/cpp/LogMonitor/LogMonitor/second/download/rsync/repos/rsync-1.2/version.h	1996-06-26 09:43:54.000000000 +0800
@@ -1 +1 @@
-#define VERSION "1.1"
+#define VERSION "1.2"

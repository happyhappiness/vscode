<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_981_collectd-4.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">__iptcc_p_del_policy<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">TC_HANDLE_T<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">h<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">unsigned<pos:position pos:line="1" pos:column="56"/></name> <name pos:line="1" pos:column="57">int<pos:position pos:line="1" pos:column="60"/></name></type> <name pos:line="1" pos:column="61">num<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name><name pos:line="3" pos:column="13">h<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">-&gt;<pos:position pos:line="3" pos:column="19"/></operator><name pos:line="3" pos:column="16">chain_iterator_cur<pos:position pos:line="3" pos:column="34"/></name></name></expr>)<pos:position pos:line="3" pos:column="35"/></condition><then pos:line="3" pos:column="35"> <block pos:line="3" pos:column="36">{
		<comment type="block" pos:line="4" pos:column="17">/* policy rule is last rule */</comment>
		<decl_stmt><decl><type><name><name pos:line="5" pos:column="17">struct<pos:position pos:line="5" pos:column="23"/></name> <name pos:line="5" pos:column="24">rule_head<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">pr<pos:position pos:line="5" pos:column="37"/></name> <init pos:line="5" pos:column="38">= <expr><operator pos:line="5" pos:column="40">(<pos:position pos:line="5" pos:column="41"/></operator>struct <name pos:line="5" pos:column="48">rule_head<pos:position pos:line="5" pos:column="57"/></name> <operator pos:line="5" pos:column="58">*<pos:position pos:line="5" pos:column="59"/></operator><operator pos:line="5" pos:column="59">)<pos:position pos:line="5" pos:column="60"/></operator>
			<name><name pos:line="6" pos:column="25">h<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">chain_iterator_cur<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">rules<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">.<pos:position pos:line="6" pos:column="54"/></operator><name pos:line="6" pos:column="54">prev<pos:position pos:line="6" pos:column="58"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="59"/></decl_stmt>

		<comment type="block" pos:line="8" pos:column="17">/* save verdict */</comment>
		<expr_stmt><expr><name><name pos:line="9" pos:column="17">h<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">chain_iterator_cur<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">verdict<pos:position pos:line="9" pos:column="47"/></name></name> <operator pos:line="9" pos:column="48">=<pos:position pos:line="9" pos:column="49"/></operator> 
			<operator pos:line="10" pos:column="25">*<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">(<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">int<pos:position pos:line="10" pos:column="30"/></name> <operator pos:line="10" pos:column="31">*<pos:position pos:line="10" pos:column="32"/></operator><operator pos:line="10" pos:column="32">)<pos:position pos:line="10" pos:column="33"/></operator><call><name pos:line="10" pos:column="33">GET_TARGET<pos:position pos:line="10" pos:column="43"/></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name><name pos:line="10" pos:column="44">pr<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">-&gt;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="48">entry<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call><operator pos:line="10" pos:column="54">-&gt;<pos:position pos:line="10" pos:column="59"/></operator><name pos:line="10" pos:column="56">data<pos:position pos:line="10" pos:column="60"/></name></expr>;<pos:position pos:line="10" pos:column="61"/></expr_stmt>

		<comment type="block" pos:line="12" pos:column="17">/* save counter and counter_map information */</comment>
		<expr_stmt><expr><name><name pos:line="13" pos:column="17">h<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">chain_iterator_cur<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">-&gt;<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="40">counter_map<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">.<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">maptype<pos:position pos:line="13" pos:column="59"/></name></name> <operator pos:line="13" pos:column="60">=<pos:position pos:line="13" pos:column="61"/></operator> 
						<name pos:line="14" pos:column="49">COUNTER_MAP_NORMAL_MAP<pos:position pos:line="14" pos:column="71"/></name></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="15" pos:column="17">h<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">chain_iterator_cur<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">counter_map<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">.<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="52">mappos<pos:position pos:line="15" pos:column="58"/></name></name> <operator pos:line="15" pos:column="59">=<pos:position pos:line="15" pos:column="60"/></operator> <name pos:line="15" pos:column="61">num<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">-<pos:position pos:line="15" pos:column="65"/></operator><literal type="number" pos:line="15" pos:column="65">1<pos:position pos:line="15" pos:column="66"/></literal></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">memcpy<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">&amp;<pos:position pos:line="16" pos:column="29"/></operator><name><name pos:line="16" pos:column="25">h<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">chain_iterator_cur<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="48">counters<pos:position pos:line="16" pos:column="56"/></name></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="58">&amp;<pos:position pos:line="16" pos:column="63"/></operator><name><name pos:line="16" pos:column="59">pr<pos:position pos:line="16" pos:column="61"/></name><operator pos:line="16" pos:column="61">-&gt;<pos:position pos:line="16" pos:column="66"/></operator><name pos:line="16" pos:column="63">entry<pos:position pos:line="16" pos:column="68"/></name><operator pos:line="16" pos:column="68">-&gt;<pos:position pos:line="16" pos:column="73"/></operator><name pos:line="16" pos:column="70">counters<pos:position pos:line="16" pos:column="78"/></name></name></expr></argument>, 
			<argument><expr><sizeof pos:line="17" pos:column="25">sizeof<argument_list pos:line="17" pos:column="31">(<argument><expr><name><name pos:line="17" pos:column="32">h<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">chain_iterator_cur<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">-&gt;<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="55">counters<pos:position pos:line="17" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>

		<comment type="block" pos:line="19" pos:column="17">/* foot_offset points to verdict rule */</comment>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">h<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">chain_iterator_cur<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">-&gt;<pos:position pos:line="20" pos:column="43"/></operator><name pos:line="20" pos:column="40">foot_index<pos:position pos:line="20" pos:column="50"/></name></name> <operator pos:line="20" pos:column="51">=<pos:position pos:line="20" pos:column="52"/></operator> <name pos:line="20" pos:column="53">num<pos:position pos:line="20" pos:column="56"/></name></expr>;<pos:position pos:line="20" pos:column="57"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">h<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">chain_iterator_cur<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">foot_offset<pos:position pos:line="21" pos:column="51"/></name></name> <operator pos:line="21" pos:column="52">=<pos:position pos:line="21" pos:column="53"/></operator> <name><name pos:line="21" pos:column="54">pr<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">-&gt;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="58">offset<pos:position pos:line="21" pos:column="64"/></name></name></expr>;<pos:position pos:line="21" pos:column="65"/></expr_stmt>

		<comment type="block" pos:line="23" pos:column="17">/* delete rule from cache */</comment>
		<expr_stmt><expr><call><name pos:line="24" pos:column="17">iptcc_delete_rule<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">pr<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="25" pos:column="17">h<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">chain_iterator_cur<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">num_rules<pos:position pos:line="25" pos:column="49"/></name></name><operator pos:line="25" pos:column="49">--<pos:position pos:line="25" pos:column="51"/></operator></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>

		<return pos:line="27" pos:column="17">return <expr><literal type="number" pos:line="27" pos:column="24">1<pos:position pos:line="27" pos:column="25"/></literal></expr>;<pos:position pos:line="27" pos:column="26"/></return>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if>
	<return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">0<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

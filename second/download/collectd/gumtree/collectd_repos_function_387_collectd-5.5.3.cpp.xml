<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_387_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_pmu<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <comment type="block" pos:line="1" pos:column="28">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">i<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="5" pos:column="9">/* The upper limit here is just a safeguard. If there is a system with
	 * more than 100 batteries, this can easily be increased. */</comment>
	<for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></init> <condition><expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="25">100<pos:position pos:line="7" pos:column="28"/></literal></expr>;<pos:position pos:line="7" pos:column="29"/></condition> <incr><expr><name pos:line="7" pos:column="30">i<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">++<pos:position pos:line="7" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="7" pos:column="34"/></control>
	<block pos:line="8" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="9" pos:column="17">FILE<pos:position pos:line="9" pos:column="21"/></name> <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier></type><name pos:line="9" pos:column="23">fh<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></type> <name><name pos:line="11" pos:column="22">buffer<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[<expr><literal type="number" pos:line="11" pos:column="29">1024<pos:position pos:line="11" pos:column="33"/></literal></expr>]<pos:position pos:line="11" pos:column="34"/></index></name></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name></type> <name><name pos:line="12" pos:column="22">filename<pos:position pos:line="12" pos:column="30"/></name><index pos:line="12" pos:column="30">[<expr><name pos:line="12" pos:column="31">PATH_MAX<pos:position pos:line="12" pos:column="39"/></name></expr>]<pos:position pos:line="12" pos:column="40"/></index></name></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name></type> <name><name pos:line="13" pos:column="22">plugin_instance<pos:position pos:line="13" pos:column="37"/></name><index pos:line="13" pos:column="37">[<expr><name pos:line="13" pos:column="38">DATA_MAX_NAME_LEN<pos:position pos:line="13" pos:column="55"/></name></expr>]<pos:position pos:line="13" pos:column="56"/></index></name></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="15" pos:column="17">gauge_t<pos:position pos:line="15" pos:column="24"/></name></type> <name pos:line="15" pos:column="25">current<pos:position pos:line="15" pos:column="32"/></name> <init pos:line="15" pos:column="33">= <expr><name pos:line="15" pos:column="35">NAN<pos:position pos:line="15" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="16" pos:column="17">gauge_t<pos:position pos:line="16" pos:column="24"/></name></type> <name pos:line="16" pos:column="25">voltage<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><name pos:line="16" pos:column="35">NAN<pos:position pos:line="16" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="39"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">gauge_t<pos:position pos:line="17" pos:column="24"/></name></type> <name pos:line="17" pos:column="25">charge<pos:position pos:line="17" pos:column="31"/></name>  <init pos:line="17" pos:column="33">= <expr><name pos:line="17" pos:column="35">NAN<pos:position pos:line="17" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="19" pos:column="17">ssnprintf<pos:position pos:line="19" pos:column="26"/></name> <argument_list pos:line="19" pos:column="27">(<argument><expr><name pos:line="19" pos:column="28">filename<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="38">sizeof <argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">filename<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="19" pos:column="57">PROC_PMU_PATH_FORMAT<pos:position pos:line="19" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="79">i<pos:position pos:line="19" pos:column="80"/></name></expr></argument>)<pos:position pos:line="19" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="82"/></expr_stmt>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><call><name pos:line="20" pos:column="21">access<pos:position pos:line="20" pos:column="27"/></name> <argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">filename<pos:position pos:line="20" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="39">R_OK<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call> <operator pos:line="20" pos:column="45">!=<pos:position pos:line="20" pos:column="47"/></operator> <literal type="number" pos:line="20" pos:column="48">0<pos:position pos:line="20" pos:column="49"/></literal></expr>)<pos:position pos:line="20" pos:column="50"/></condition><then pos:line="20" pos:column="50">
			<block type="pseudo"><break pos:line="21" pos:column="25">break;<pos:position pos:line="21" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><call><name pos:line="23" pos:column="17">ssnprintf<pos:position pos:line="23" pos:column="26"/></name> <argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">plugin_instance<pos:position pos:line="23" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="45">sizeof <argument_list pos:line="23" pos:column="52">(<argument><expr><name pos:line="23" pos:column="53">plugin_instance<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="71">"%i"<pos:position pos:line="23" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="77">i<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>

		<expr_stmt><expr><name pos:line="25" pos:column="17">fh<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">fopen<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">filename<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"r"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">fh<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">==<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">NULL<pos:position pos:line="26" pos:column="31"/></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
		<block pos:line="27" pos:column="17">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><name pos:line="28" pos:column="29">errno<pos:position pos:line="28" pos:column="34"/></name> <operator pos:line="28" pos:column="35">==<pos:position pos:line="28" pos:column="37"/></operator> <name pos:line="28" pos:column="38">ENOENT<pos:position pos:line="28" pos:column="44"/></name></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45">
				<block type="pseudo"><break pos:line="29" pos:column="33">break;<pos:position pos:line="29" pos:column="39"/></break></block></then>
			<elseif pos:line="30" pos:column="25">else <if pos:line="30" pos:column="30">if <condition pos:line="30" pos:column="33">(<expr><operator pos:line="30" pos:column="34">(<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">errno<pos:position pos:line="30" pos:column="40"/></name> <operator pos:line="30" pos:column="41">==<pos:position pos:line="30" pos:column="43"/></operator> <name pos:line="30" pos:column="44">EAGAIN<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">)<pos:position pos:line="30" pos:column="51"/></operator> <operator pos:line="30" pos:column="52">||<pos:position pos:line="30" pos:column="54"/></operator> <operator pos:line="30" pos:column="55">(<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="56">errno<pos:position pos:line="30" pos:column="61"/></name> <operator pos:line="30" pos:column="62">==<pos:position pos:line="30" pos:column="64"/></operator> <name pos:line="30" pos:column="65">EINTR<pos:position pos:line="30" pos:column="70"/></name><operator pos:line="30" pos:column="70">)<pos:position pos:line="30" pos:column="71"/></operator></expr>)<pos:position pos:line="30" pos:column="72"/></condition><then pos:line="30" pos:column="72">
				<block type="pseudo"><continue pos:line="31" pos:column="33">continue;<pos:position pos:line="31" pos:column="42"/></continue></block></then></if></elseif>
			<else pos:line="32" pos:column="25">else
				<block type="pseudo"><return pos:line="33" pos:column="33">return <expr><operator pos:line="33" pos:column="40">(<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">errno<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">)<pos:position pos:line="33" pos:column="47"/></operator></expr>;<pos:position pos:line="33" pos:column="48"/></return></block></else></if>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>

		<while pos:line="36" pos:column="17">while <condition pos:line="36" pos:column="23">(<expr><call><name pos:line="36" pos:column="24">fgets<pos:position pos:line="36" pos:column="29"/></name> <argument_list pos:line="36" pos:column="30">(<argument><expr><name pos:line="36" pos:column="31">buffer<pos:position pos:line="36" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="39">sizeof <argument_list pos:line="36" pos:column="46">(<argument><expr><name pos:line="36" pos:column="47">buffer<pos:position pos:line="36" pos:column="53"/></name></expr></argument>)<pos:position pos:line="36" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="36" pos:column="56">fh<pos:position pos:line="36" pos:column="58"/></name></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call> <operator pos:line="36" pos:column="60">!=<pos:position pos:line="36" pos:column="62"/></operator> <name pos:line="36" pos:column="63">NULL<pos:position pos:line="36" pos:column="67"/></name></expr>)<pos:position pos:line="36" pos:column="68"/></condition>
		<block pos:line="37" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="38" pos:column="25">char<pos:position pos:line="38" pos:column="29"/></name> <modifier pos:line="38" pos:column="30">*<pos:position pos:line="38" pos:column="31"/></modifier></type><name><name pos:line="38" pos:column="31">fields<pos:position pos:line="38" pos:column="37"/></name><index pos:line="38" pos:column="37">[<expr><literal type="number" pos:line="38" pos:column="38">8<pos:position pos:line="38" pos:column="39"/></literal></expr>]<pos:position pos:line="38" pos:column="40"/></index></name></decl>;<pos:position pos:line="38" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="39" pos:column="25">int<pos:position pos:line="39" pos:column="28"/></name></type> <name pos:line="39" pos:column="29">numfields<pos:position pos:line="39" pos:column="38"/></name></decl>;<pos:position pos:line="39" pos:column="39"/></decl_stmt>

			<expr_stmt><expr><name pos:line="41" pos:column="25">numfields<pos:position pos:line="41" pos:column="34"/></name> <operator pos:line="41" pos:column="35">=<pos:position pos:line="41" pos:column="36"/></operator> <call><name pos:line="41" pos:column="37">strsplit<pos:position pos:line="41" pos:column="45"/></name> <argument_list pos:line="41" pos:column="46">(<argument><expr><name pos:line="41" pos:column="47">buffer<pos:position pos:line="41" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="55">fields<pos:position pos:line="41" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="63">STATIC_ARRAY_SIZE<pos:position pos:line="41" pos:column="80"/></name> <argument_list pos:line="41" pos:column="81">(<argument><expr><name pos:line="41" pos:column="82">fields<pos:position pos:line="41" pos:column="88"/></name></expr></argument>)<pos:position pos:line="41" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="91"/></expr_stmt>
			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><name pos:line="42" pos:column="29">numfields<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">&lt;<pos:position pos:line="42" pos:column="43"/></operator> <literal type="number" pos:line="42" pos:column="41">3<pos:position pos:line="42" pos:column="42"/></literal></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43">
				<block type="pseudo"><continue pos:line="43" pos:column="33">continue;<pos:position pos:line="43" pos:column="42"/></continue></block></then></if>

			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><call><name pos:line="45" pos:column="29">strcmp<pos:position pos:line="45" pos:column="35"/></name> <argument_list pos:line="45" pos:column="36">(<argument><expr><literal type="string" pos:line="45" pos:column="37">"current"<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="48">fields<pos:position pos:line="45" pos:column="54"/></name><index pos:line="45" pos:column="54">[<expr><literal type="number" pos:line="45" pos:column="55">0<pos:position pos:line="45" pos:column="56"/></literal></expr>]<pos:position pos:line="45" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call> <operator pos:line="45" pos:column="59">==<pos:position pos:line="45" pos:column="61"/></operator> <literal type="number" pos:line="45" pos:column="62">0<pos:position pos:line="45" pos:column="63"/></literal></expr>)<pos:position pos:line="45" pos:column="64"/></condition><then pos:line="45" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="33">strtogauge<pos:position pos:line="46" pos:column="43"/></name> <argument_list pos:line="46" pos:column="44">(<argument><expr><name><name pos:line="46" pos:column="45">fields<pos:position pos:line="46" pos:column="51"/></name><index pos:line="46" pos:column="51">[<expr><literal type="number" pos:line="46" pos:column="52">2<pos:position pos:line="46" pos:column="53"/></literal></expr>]<pos:position pos:line="46" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="56">&amp;<pos:position pos:line="46" pos:column="61"/></operator><name pos:line="46" pos:column="57">current<pos:position pos:line="46" pos:column="64"/></name></expr></argument>)<pos:position pos:line="46" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="66"/></expr_stmt></block></then>
			<elseif pos:line="47" pos:column="25">else <if pos:line="47" pos:column="30">if <condition pos:line="47" pos:column="33">(<expr><call><name pos:line="47" pos:column="34">strcmp<pos:position pos:line="47" pos:column="40"/></name> <argument_list pos:line="47" pos:column="41">(<argument><expr><literal type="string" pos:line="47" pos:column="42">"voltage"<pos:position pos:line="47" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="53">fields<pos:position pos:line="47" pos:column="59"/></name><index pos:line="47" pos:column="59">[<expr><literal type="number" pos:line="47" pos:column="60">0<pos:position pos:line="47" pos:column="61"/></literal></expr>]<pos:position pos:line="47" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call> <operator pos:line="47" pos:column="64">==<pos:position pos:line="47" pos:column="66"/></operator> <literal type="number" pos:line="47" pos:column="67">0<pos:position pos:line="47" pos:column="68"/></literal></expr>)<pos:position pos:line="47" pos:column="69"/></condition><then pos:line="47" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="33">strtogauge<pos:position pos:line="48" pos:column="43"/></name> <argument_list pos:line="48" pos:column="44">(<argument><expr><name><name pos:line="48" pos:column="45">fields<pos:position pos:line="48" pos:column="51"/></name><index pos:line="48" pos:column="51">[<expr><literal type="number" pos:line="48" pos:column="52">2<pos:position pos:line="48" pos:column="53"/></literal></expr>]<pos:position pos:line="48" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="56">&amp;<pos:position pos:line="48" pos:column="61"/></operator><name pos:line="48" pos:column="57">voltage<pos:position pos:line="48" pos:column="64"/></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="49" pos:column="25">else <if pos:line="49" pos:column="30">if <condition pos:line="49" pos:column="33">(<expr><call><name pos:line="49" pos:column="34">strcmp<pos:position pos:line="49" pos:column="40"/></name> <argument_list pos:line="49" pos:column="41">(<argument><expr><literal type="string" pos:line="49" pos:column="42">"charge"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="52">fields<pos:position pos:line="49" pos:column="58"/></name><index pos:line="49" pos:column="58">[<expr><literal type="number" pos:line="49" pos:column="59">0<pos:position pos:line="49" pos:column="60"/></literal></expr>]<pos:position pos:line="49" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="62"/></argument_list></call> <operator pos:line="49" pos:column="63">==<pos:position pos:line="49" pos:column="65"/></operator> <literal type="number" pos:line="49" pos:column="66">0<pos:position pos:line="49" pos:column="67"/></literal></expr>)<pos:position pos:line="49" pos:column="68"/></condition><then pos:line="49" pos:column="68">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="33">strtogauge<pos:position pos:line="50" pos:column="43"/></name> <argument_list pos:line="50" pos:column="44">(<argument><expr><name><name pos:line="50" pos:column="45">fields<pos:position pos:line="50" pos:column="51"/></name><index pos:line="50" pos:column="51">[<expr><literal type="number" pos:line="50" pos:column="52">2<pos:position pos:line="50" pos:column="53"/></literal></expr>]<pos:position pos:line="50" pos:column="54"/></index></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="56">&amp;<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="57">charge<pos:position pos:line="50" pos:column="63"/></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="65"/></expr_stmt></block></then></if></elseif></if>
		}<pos:position pos:line="51" pos:column="18"/></block></while>

		<expr_stmt><expr><call><name pos:line="53" pos:column="17">fclose<pos:position pos:line="53" pos:column="23"/></name> <argument_list pos:line="53" pos:column="24">(<argument><expr><name pos:line="53" pos:column="25">fh<pos:position pos:line="53" pos:column="27"/></name></expr></argument>)<pos:position pos:line="53" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="54" pos:column="17">fh<pos:position pos:line="54" pos:column="19"/></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">NULL<pos:position pos:line="54" pos:column="26"/></name></expr>;<pos:position pos:line="54" pos:column="27"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="56" pos:column="17">battery_submit<pos:position pos:line="56" pos:column="31"/></name> <argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">plugin_instance<pos:position pos:line="56" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="50">"charge"<pos:position pos:line="56" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="60">charge<pos:position pos:line="56" pos:column="66"/></name> <operator pos:line="56" pos:column="67">/<pos:position pos:line="56" pos:column="68"/></operator> <literal type="number" pos:line="56" pos:column="69">1000.0<pos:position pos:line="56" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">battery_submit<pos:position pos:line="57" pos:column="31"/></name> <argument_list pos:line="57" pos:column="32">(<argument><expr><name pos:line="57" pos:column="33">plugin_instance<pos:position pos:line="57" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="50">"current"<pos:position pos:line="57" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="61">current<pos:position pos:line="57" pos:column="68"/></name> <operator pos:line="57" pos:column="69">/<pos:position pos:line="57" pos:column="70"/></operator> <literal type="number" pos:line="57" pos:column="71">1000.0<pos:position pos:line="57" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">battery_submit<pos:position pos:line="58" pos:column="31"/></name> <argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">plugin_instance<pos:position pos:line="58" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="50">"voltage"<pos:position pos:line="58" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="61">voltage<pos:position pos:line="58" pos:column="68"/></name> <operator pos:line="58" pos:column="69">/<pos:position pos:line="58" pos:column="70"/></operator> <literal type="number" pos:line="58" pos:column="71">1000.0<pos:position pos:line="58" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="79"/></expr_stmt>
	}<pos:position pos:line="59" pos:column="10"/></block></for>

	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">i<pos:position pos:line="61" pos:column="14"/></name> <operator pos:line="61" pos:column="15">==<pos:position pos:line="61" pos:column="17"/></operator> <literal type="number" pos:line="61" pos:column="18">0<pos:position pos:line="61" pos:column="19"/></literal></expr>)<pos:position pos:line="61" pos:column="20"/></condition><then pos:line="61" pos:column="20">
		<block type="pseudo"><return pos:line="62" pos:column="17">return <expr><operator pos:line="62" pos:column="24">(<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="25">ENOENT<pos:position pos:line="62" pos:column="31"/></name><operator pos:line="62" pos:column="31">)<pos:position pos:line="62" pos:column="32"/></operator></expr>;<pos:position pos:line="62" pos:column="33"/></return></block></then></if>
	<return pos:line="63" pos:column="9">return <expr><operator pos:line="63" pos:column="16">(<pos:position pos:line="63" pos:column="17"/></operator><literal type="number" pos:line="63" pos:column="17">0<pos:position pos:line="63" pos:column="18"/></literal><operator pos:line="63" pos:column="18">)<pos:position pos:line="63" pos:column="19"/></operator></expr>;<pos:position pos:line="63" pos:column="20"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_332_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rdt_config<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">oconfig_item_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ci<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><literal type="number" pos:line="2" pos:column="13">0<pos:position pos:line="2" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><name pos:line="4" pos:column="3">ret<pos:position pos:line="4" pos:column="6"/></name> <operator pos:line="4" pos:column="7">=<pos:position pos:line="4" pos:column="8"/></operator> <call><name pos:line="4" pos:column="9">rdt_preinit<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">()<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">ret<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">!=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">ret<pos:position pos:line="6" pos:column="15"/></name></expr>;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

  <for pos:line="8" pos:column="3">for <control pos:line="8" pos:column="7">(<init><decl><type><name pos:line="8" pos:column="8">int<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="18"/></init> <condition><expr><name pos:line="8" pos:column="19">i<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&lt;<pos:position pos:line="8" pos:column="25"/></operator> <name><name pos:line="8" pos:column="23">ci<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">children_num<pos:position pos:line="8" pos:column="39"/></name></name></expr>;<pos:position pos:line="8" pos:column="40"/></condition> <incr><expr><name pos:line="8" pos:column="41">i<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">++<pos:position pos:line="8" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="45"/></control> <block pos:line="8" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">oconfig_item_t<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">child<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name><name pos:line="9" pos:column="29">ci<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">children<pos:position pos:line="9" pos:column="41"/></name></name> <operator pos:line="9" pos:column="42">+<pos:position pos:line="9" pos:column="43"/></operator> <name pos:line="9" pos:column="44">i<pos:position pos:line="9" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="46"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strcasecmp<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="string" pos:line="11" pos:column="20">"Cores"<pos:position pos:line="11" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="29">child<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">-&gt;<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="36">key<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call> <operator pos:line="11" pos:column="41">==<pos:position pos:line="11" pos:column="43"/></operator> <literal type="number" pos:line="11" pos:column="44">0<pos:position pos:line="11" pos:column="45"/></literal></expr>)<pos:position pos:line="11" pos:column="46"/></condition><then pos:line="11" pos:column="46"> <block pos:line="11" pos:column="47">{

      <expr_stmt><expr><name pos:line="13" pos:column="7">ret<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">rdt_config_cgroups<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><name pos:line="13" pos:column="32">child<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><name pos:line="14" pos:column="11">ret<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">ret<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></return></block></then></if>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">COLLECT_DEBUG<pos:position pos:line="17" pos:column="18"/></name></expr></cpp:if>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">rdt_dump_cgroups<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">()<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="19" pos:column="8">/* COLLECT_DEBUG */</comment>

    }<pos:position pos:line="21" pos:column="6"/></block></then> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">ERROR<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">RDT_PLUGIN<pos:position pos:line="22" pos:column="23"/></name> <literal type="string" pos:line="22" pos:column="24">": Unknown configuration parameter \"%s\"."<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="69">child<pos:position pos:line="22" pos:column="74"/></name><operator pos:line="22" pos:column="74">-&gt;<pos:position pos:line="22" pos:column="79"/></operator><name pos:line="22" pos:column="76">key<pos:position pos:line="22" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>
  }<pos:position pos:line="24" pos:column="4"/></block></for>

  <return pos:line="26" pos:column="3">return <expr><operator pos:line="26" pos:column="10">(<pos:position pos:line="26" pos:column="11"/></operator><literal type="number" pos:line="26" pos:column="11">0<pos:position pos:line="26" pos:column="12"/></literal><operator pos:line="26" pos:column="12">)<pos:position pos:line="26" pos:column="13"/></operator></expr>;<pos:position pos:line="26" pos:column="14"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

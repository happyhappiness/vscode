<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1666_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">node_handler_fetch_data<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">void<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">arg<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">char<pos:position pos:line="1" pos:column="57"/></name> <modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">val<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                   <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">key<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list> <block pos:line="2" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">uv<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">double<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">tmp_d<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">uint64_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">tmp_u<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">values_tmp<pos:position pos:line="6" pos:column="20"/></name></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">vtmp<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator>struct <name pos:line="6" pos:column="37">values_tmp<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">*<pos:position pos:line="6" pos:column="49"/></operator><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="50">arg<pos:position pos:line="6" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">uint32_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">type<pos:position pos:line="7" pos:column="16"/></name> <init pos:line="7" pos:column="17">= <expr><name pos:line="7" pos:column="19">DSET_TYPE_UNFOUND<pos:position pos:line="7" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">index<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name><name pos:line="8" pos:column="15">vtmp<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">index<pos:position pos:line="8" pos:column="26"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name></type> <name><name pos:line="10" pos:column="8">ds_name<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">DATA_MAX_NAME_LEN<pos:position pos:line="10" pos:column="33"/></name></expr>]<pos:position pos:line="10" pos:column="34"/></index></name></decl>;<pos:position pos:line="10" pos:column="35"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">parse_keys<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">ds_name<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="27">sizeof<argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">ds_name<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="44">key<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49"> <block pos:line="12" pos:column="50">{
    <return pos:line="13" pos:column="5">return <expr><literal type="number" pos:line="13" pos:column="12">1<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">index<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">&gt;=<pos:position pos:line="16" pos:column="18"/></operator> <name><name pos:line="16" pos:column="16">vtmp<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">d<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">ds_num<pos:position pos:line="16" pos:column="31"/></name></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
    <comment type="line" pos:line="17" pos:column="5">// don't overflow bounds of array</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">index<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name><name pos:line="18" pos:column="14">vtmp<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">d<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">ds_num<pos:position pos:line="18" pos:column="29"/></name></name> <operator pos:line="18" pos:column="30">-<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="32">1<pos:position pos:line="18" pos:column="33"/></literal><operator pos:line="18" pos:column="33">)<pos:position pos:line="18" pos:column="34"/></operator></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="block" format="doxygen" pos:line="21" pos:column="3">/**
   * counters should remain in same order we parsed schema... we maintain the
   * index variable to keep track of current point in list of counters. first
   * use index to guess point in array for retrieving type. if that doesn't
   * work, use the old way to get the counter type
   */</comment>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><call><name pos:line="27" pos:column="7">strcmp<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">ds_name<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="23">vtmp<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">d<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">-&gt;<pos:position pos:line="27" pos:column="35"/></operator><name pos:line="27" pos:column="32">ds_names<pos:position pos:line="27" pos:column="40"/></name><index pos:line="27" pos:column="40">[<expr><name pos:line="27" pos:column="41">index<pos:position pos:line="27" pos:column="46"/></name></expr>]<pos:position pos:line="27" pos:column="47"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call> <operator pos:line="27" pos:column="49">==<pos:position pos:line="27" pos:column="51"/></operator> <literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal></expr>)<pos:position pos:line="27" pos:column="54"/></condition><then pos:line="27" pos:column="54"> <block pos:line="27" pos:column="55">{
    <comment type="line" pos:line="28" pos:column="5">// found match</comment>
    <expr_stmt><expr><name pos:line="29" pos:column="5">type<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <name><name pos:line="29" pos:column="12">vtmp<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">d<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">ds_types<pos:position pos:line="29" pos:column="29"/></name><index pos:line="29" pos:column="29">[<expr><name pos:line="29" pos:column="30">index<pos:position pos:line="29" pos:column="35"/></name></expr>]<pos:position pos:line="29" pos:column="36"/></index></name></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then> <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><operator pos:line="30" pos:column="14">(<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">index<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">&gt;<pos:position pos:line="30" pos:column="25"/></operator> <literal type="number" pos:line="30" pos:column="23">0<pos:position pos:line="30" pos:column="24"/></literal><operator pos:line="30" pos:column="24">)<pos:position pos:line="30" pos:column="25"/></operator> <operator pos:line="30" pos:column="26">&amp;&amp;<pos:position pos:line="30" pos:column="36"/></operator>
             <operator pos:line="31" pos:column="14">(<pos:position pos:line="31" pos:column="15"/></operator><call><name pos:line="31" pos:column="15">strcmp<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">ds_name<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="31">vtmp<pos:position pos:line="31" pos:column="35"/></name><operator pos:line="31" pos:column="35">-&gt;<pos:position pos:line="31" pos:column="40"/></operator><name pos:line="31" pos:column="37">d<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">-&gt;<pos:position pos:line="31" pos:column="43"/></operator><name pos:line="31" pos:column="40">ds_names<pos:position pos:line="31" pos:column="48"/></name><index pos:line="31" pos:column="48">[<expr><name pos:line="31" pos:column="49">index<pos:position pos:line="31" pos:column="54"/></name> <operator pos:line="31" pos:column="55">-<pos:position pos:line="31" pos:column="56"/></operator> <literal type="number" pos:line="31" pos:column="57">1<pos:position pos:line="31" pos:column="58"/></literal></expr>]<pos:position pos:line="31" pos:column="59"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call> <operator pos:line="31" pos:column="61">==<pos:position pos:line="31" pos:column="63"/></operator> <literal type="number" pos:line="31" pos:column="64">0<pos:position pos:line="31" pos:column="65"/></literal><operator pos:line="31" pos:column="65">)<pos:position pos:line="31" pos:column="66"/></operator></expr>)<pos:position pos:line="31" pos:column="67"/></condition><then pos:line="31" pos:column="67"> <block pos:line="31" pos:column="68">{
    <comment type="line" pos:line="32" pos:column="5">// try previous key</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">type<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <name><name pos:line="33" pos:column="12">vtmp<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">d<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">ds_types<pos:position pos:line="33" pos:column="29"/></name><index pos:line="33" pos:column="29">[<expr><name pos:line="33" pos:column="30">index<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">-<pos:position pos:line="33" pos:column="37"/></operator> <literal type="number" pos:line="33" pos:column="38">1<pos:position pos:line="33" pos:column="39"/></literal></expr>]<pos:position pos:line="33" pos:column="40"/></index></name></expr>;<pos:position pos:line="33" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if></elseif></if>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">type<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">==<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">DSET_TYPE_UNFOUND<pos:position pos:line="36" pos:column="32"/></name></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33"> <block pos:line="36" pos:column="34">{
    <comment type="line" pos:line="37" pos:column="5">// couldn't find right type by guessing, check the old way</comment>
    <expr_stmt><expr><name pos:line="38" pos:column="5">type<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">backup_search_for_type<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name><name pos:line="38" pos:column="35">vtmp<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">d<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="44">ds_name<pos:position pos:line="38" pos:column="51"/></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if>

  <switch pos:line="41" pos:column="3">switch <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">type<pos:position pos:line="41" pos:column="15"/></name></expr>)<pos:position pos:line="41" pos:column="16"/></condition> <block pos:line="41" pos:column="17">{
  <case pos:line="42" pos:column="3">case <expr><name pos:line="42" pos:column="8">DSET_LATENCY<pos:position pos:line="42" pos:column="20"/></name></expr>:<pos:position pos:line="42" pos:column="21"/></case>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">vtmp<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">avgcount_exists<pos:position pos:line="43" pos:column="30"/></name></name> <operator pos:line="43" pos:column="31">==<pos:position pos:line="43" pos:column="33"/></operator> <operator pos:line="43" pos:column="34">-<pos:position pos:line="43" pos:column="35"/></operator><literal type="number" pos:line="43" pos:column="35">1<pos:position pos:line="43" pos:column="36"/></literal></expr>)<pos:position pos:line="43" pos:column="37"/></condition><then pos:line="43" pos:column="37"> <block pos:line="43" pos:column="38">{
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">sscanf<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><name pos:line="44" pos:column="14">val<pos:position pos:line="44" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="19">"%"<pos:position pos:line="44" pos:column="22"/></literal> <name pos:line="44" pos:column="23">PRIu64<pos:position pos:line="44" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="31">&amp;<pos:position pos:line="44" pos:column="36"/></operator><name><name pos:line="44" pos:column="32">vtmp<pos:position pos:line="44" pos:column="36"/></name><operator pos:line="44" pos:column="36">-&gt;<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="38">avgcount<pos:position pos:line="44" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="45" pos:column="7">vtmp<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">avgcount_exists<pos:position pos:line="45" pos:column="28"/></name></name> <operator pos:line="45" pos:column="29">=<pos:position pos:line="45" pos:column="30"/></operator> <literal type="number" pos:line="45" pos:column="31">0<pos:position pos:line="45" pos:column="32"/></literal></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
      <comment type="line" pos:line="46" pos:column="7">// return after saving avgcount - don't dispatch value</comment>
      <comment type="line" pos:line="47" pos:column="7">// until latency calculation</comment>
      <return pos:line="48" pos:column="7">return <expr><literal type="number" pos:line="48" pos:column="14">0<pos:position pos:line="48" pos:column="15"/></literal></expr>;<pos:position pos:line="48" pos:column="16"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then> <else pos:line="49" pos:column="7">else <block pos:line="49" pos:column="12">{
      <decl_stmt><decl><type><name pos:line="50" pos:column="7">double<pos:position pos:line="50" pos:column="13"/></name></type> <name pos:line="50" pos:column="14">sum<pos:position pos:line="50" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="50" pos:column="19">result<pos:position pos:line="50" pos:column="25"/></name></decl>;<pos:position pos:line="50" pos:column="26"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">sscanf<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">val<pos:position pos:line="51" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="19">"%lf"<pos:position pos:line="51" pos:column="24"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="26">&amp;<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="27">sum<pos:position pos:line="51" pos:column="30"/></name></expr></argument>)<pos:position pos:line="51" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>

      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><name><name pos:line="53" pos:column="11">vtmp<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">avgcount<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">==<pos:position pos:line="53" pos:column="28"/></operator> <literal type="number" pos:line="53" pos:column="29">0<pos:position pos:line="53" pos:column="30"/></literal></expr>)<pos:position pos:line="53" pos:column="31"/></condition><then pos:line="53" pos:column="31"> <block pos:line="53" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">vtmp<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">-&gt;<pos:position pos:line="54" pos:column="18"/></operator><name pos:line="54" pos:column="15">avgcount<pos:position pos:line="54" pos:column="23"/></name></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="55" pos:column="8"/></block></then></if>

      <comment type="block" format="doxygen" pos:line="57" pos:column="7">/** User wants latency values as long run avg */</comment>
      <if pos:line="58" pos:column="7">if <condition pos:line="58" pos:column="10">(<expr><name pos:line="58" pos:column="11">long_run_latency_avg<pos:position pos:line="58" pos:column="31"/></name></expr>)<pos:position pos:line="58" pos:column="32"/></condition><then pos:line="58" pos:column="32"> <block pos:line="58" pos:column="33">{
        <expr_stmt><expr><name pos:line="59" pos:column="9">result<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <operator pos:line="59" pos:column="18">(<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">sum<pos:position pos:line="59" pos:column="22"/></name> <operator pos:line="59" pos:column="23">/<pos:position pos:line="59" pos:column="24"/></operator> <name><name pos:line="59" pos:column="25">vtmp<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">-&gt;<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="31">avgcount<pos:position pos:line="59" pos:column="39"/></name></name><operator pos:line="59" pos:column="39">)<pos:position pos:line="59" pos:column="40"/></operator></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
      }<pos:position pos:line="60" pos:column="8"/></block></then> <else pos:line="60" pos:column="9">else <block pos:line="60" pos:column="14">{
        <expr_stmt><expr><name pos:line="61" pos:column="9">result<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">=<pos:position pos:line="61" pos:column="17"/></operator> <call><name pos:line="61" pos:column="18">get_last_avg<pos:position pos:line="61" pos:column="30"/></name><argument_list pos:line="61" pos:column="30">(<argument><expr><name><name pos:line="61" pos:column="31">vtmp<pos:position pos:line="61" pos:column="35"/></name><operator pos:line="61" pos:column="35">-&gt;<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="37">d<pos:position pos:line="61" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="40">ds_name<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="49">vtmp<pos:position pos:line="61" pos:column="53"/></name><operator pos:line="61" pos:column="53">-&gt;<pos:position pos:line="61" pos:column="58"/></operator><name pos:line="61" pos:column="55">latency_index<pos:position pos:line="61" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="70">sum<pos:position pos:line="61" pos:column="73"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="62" pos:column="31">vtmp<pos:position pos:line="62" pos:column="35"/></name><operator pos:line="62" pos:column="35">-&gt;<pos:position pos:line="62" pos:column="40"/></operator><name pos:line="62" pos:column="37">avgcount<pos:position pos:line="62" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="47"/></expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">result<pos:position pos:line="63" pos:column="19"/></name> <operator pos:line="63" pos:column="20">==<pos:position pos:line="63" pos:column="22"/></operator> <operator pos:line="63" pos:column="23">-<pos:position pos:line="63" pos:column="24"/></operator><name pos:line="63" pos:column="24">ENOMEM<pos:position pos:line="63" pos:column="30"/></name></expr>)<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31"> <block pos:line="63" pos:column="32">{
          <return pos:line="64" pos:column="11">return <expr><operator pos:line="64" pos:column="18">-<pos:position pos:line="64" pos:column="19"/></operator><name pos:line="64" pos:column="19">ENOMEM<pos:position pos:line="64" pos:column="25"/></name></expr>;<pos:position pos:line="64" pos:column="26"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
      }<pos:position pos:line="66" pos:column="8"/></block></else></if>

      <expr_stmt><expr><name><name pos:line="68" pos:column="7">uv<pos:position pos:line="68" pos:column="9"/></name><operator pos:line="68" pos:column="9">.<pos:position pos:line="68" pos:column="10"/></operator><name pos:line="68" pos:column="10">gauge<pos:position pos:line="68" pos:column="15"/></name></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <name pos:line="68" pos:column="18">result<pos:position pos:line="68" pos:column="24"/></name></expr>;<pos:position pos:line="68" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="69" pos:column="7">vtmp<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">-&gt;<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="13">avgcount_exists<pos:position pos:line="69" pos:column="28"/></name></name> <operator pos:line="69" pos:column="29">=<pos:position pos:line="69" pos:column="30"/></operator> <operator pos:line="69" pos:column="31">-<pos:position pos:line="69" pos:column="32"/></operator><literal type="number" pos:line="69" pos:column="32">1<pos:position pos:line="69" pos:column="33"/></literal></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="70" pos:column="7">vtmp<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">latency_index<pos:position pos:line="70" pos:column="26"/></name></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <operator pos:line="70" pos:column="29">(<pos:position pos:line="70" pos:column="30"/></operator><name><name pos:line="70" pos:column="30">vtmp<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">-&gt;<pos:position pos:line="70" pos:column="39"/></operator><name pos:line="70" pos:column="36">latency_index<pos:position pos:line="70" pos:column="49"/></name></name> <operator pos:line="70" pos:column="50">+<pos:position pos:line="70" pos:column="51"/></operator> <literal type="number" pos:line="70" pos:column="52">1<pos:position pos:line="70" pos:column="53"/></literal><operator pos:line="70" pos:column="53">)<pos:position pos:line="70" pos:column="54"/></operator></expr>;<pos:position pos:line="70" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></else></if>
    <break pos:line="72" pos:column="5">break;<pos:position pos:line="72" pos:column="11"/></break>
  <case pos:line="73" pos:column="3">case <expr><name pos:line="73" pos:column="8">DSET_BYTES<pos:position pos:line="73" pos:column="18"/></name></expr>:<pos:position pos:line="73" pos:column="19"/></case>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">sscanf<pos:position pos:line="74" pos:column="11"/></name><argument_list pos:line="74" pos:column="11">(<argument><expr><name pos:line="74" pos:column="12">val<pos:position pos:line="74" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="17">"%lf"<pos:position pos:line="74" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="74" pos:column="24">&amp;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="25">tmp_d<pos:position pos:line="74" pos:column="30"/></name></expr></argument>)<pos:position pos:line="74" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="75" pos:column="5">uv<pos:position pos:line="75" pos:column="7"/></name><operator pos:line="75" pos:column="7">.<pos:position pos:line="75" pos:column="8"/></operator><name pos:line="75" pos:column="8">gauge<pos:position pos:line="75" pos:column="13"/></name></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <name pos:line="75" pos:column="16">tmp_d<pos:position pos:line="75" pos:column="21"/></name></expr>;<pos:position pos:line="75" pos:column="22"/></expr_stmt>
    <break pos:line="76" pos:column="5">break;<pos:position pos:line="76" pos:column="11"/></break>
  <case pos:line="77" pos:column="3">case <expr><name pos:line="77" pos:column="8">DSET_RATE<pos:position pos:line="77" pos:column="17"/></name></expr>:<pos:position pos:line="77" pos:column="18"/></case>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">sscanf<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">val<pos:position pos:line="78" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="17">"%"<pos:position pos:line="78" pos:column="20"/></literal> <name pos:line="78" pos:column="21">PRIu64<pos:position pos:line="78" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="78" pos:column="29">&amp;<pos:position pos:line="78" pos:column="34"/></operator><name pos:line="78" pos:column="30">tmp_u<pos:position pos:line="78" pos:column="35"/></name></expr></argument>)<pos:position pos:line="78" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="79" pos:column="5">uv<pos:position pos:line="79" pos:column="7"/></name><operator pos:line="79" pos:column="7">.<pos:position pos:line="79" pos:column="8"/></operator><name pos:line="79" pos:column="8">derive<pos:position pos:line="79" pos:column="14"/></name></name> <operator pos:line="79" pos:column="15">=<pos:position pos:line="79" pos:column="16"/></operator> <name pos:line="79" pos:column="17">tmp_u<pos:position pos:line="79" pos:column="22"/></name></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>
    <break pos:line="80" pos:column="5">break;<pos:position pos:line="80" pos:column="11"/></break>
  <case pos:line="81" pos:column="3">case <expr><name pos:line="81" pos:column="8">DSET_TYPE_UNFOUND<pos:position pos:line="81" pos:column="25"/></name></expr>:<pos:position pos:line="81" pos:column="26"/></case>
  <default pos:line="82" pos:column="3">default:<pos:position pos:line="82" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">ERROR<pos:position pos:line="83" pos:column="10"/></name><argument_list pos:line="83" pos:column="10">(<argument><expr><literal type="string" pos:line="83" pos:column="11">"ceph plugin: ds %s was not properly initialized."<pos:position pos:line="83" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="83" pos:column="63">ds_name<pos:position pos:line="83" pos:column="70"/></name></expr></argument>)<pos:position pos:line="83" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="72"/></expr_stmt>
    <return pos:line="84" pos:column="5">return <expr><operator pos:line="84" pos:column="12">-<pos:position pos:line="84" pos:column="13"/></operator><literal type="number" pos:line="84" pos:column="13">1<pos:position pos:line="84" pos:column="14"/></literal></expr>;<pos:position pos:line="84" pos:column="15"/></return>
  }<pos:position pos:line="85" pos:column="4"/></block></switch>

  <expr_stmt><expr><call><name pos:line="87" pos:column="3">sstrncpy<pos:position pos:line="87" pos:column="11"/></name><argument_list pos:line="87" pos:column="11">(<argument><expr><name><name pos:line="87" pos:column="12">vtmp<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">-&gt;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="18">vlist<pos:position pos:line="87" pos:column="23"/></name><operator pos:line="87" pos:column="23">.<pos:position pos:line="87" pos:column="24"/></operator><name pos:line="87" pos:column="24">type<pos:position pos:line="87" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="30">ceph_dset_types<pos:position pos:line="87" pos:column="45"/></name><index pos:line="87" pos:column="45">[<expr><name pos:line="87" pos:column="46">type<pos:position pos:line="87" pos:column="50"/></name></expr>]<pos:position pos:line="87" pos:column="51"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="87" pos:column="53">sizeof<argument_list pos:line="87" pos:column="59">(<argument><expr><name><name pos:line="87" pos:column="60">vtmp<pos:position pos:line="87" pos:column="64"/></name><operator pos:line="87" pos:column="64">-&gt;<pos:position pos:line="87" pos:column="69"/></operator><name pos:line="87" pos:column="66">vlist<pos:position pos:line="87" pos:column="71"/></name><operator pos:line="87" pos:column="71">.<pos:position pos:line="87" pos:column="72"/></operator><name pos:line="87" pos:column="72">type<pos:position pos:line="87" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="79"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="88" pos:column="3">sstrncpy<pos:position pos:line="88" pos:column="11"/></name><argument_list pos:line="88" pos:column="11">(<argument><expr><name><name pos:line="88" pos:column="12">vtmp<pos:position pos:line="88" pos:column="16"/></name><operator pos:line="88" pos:column="16">-&gt;<pos:position pos:line="88" pos:column="21"/></operator><name pos:line="88" pos:column="18">vlist<pos:position pos:line="88" pos:column="23"/></name><operator pos:line="88" pos:column="23">.<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="24">type_instance<pos:position pos:line="88" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">ds_name<pos:position pos:line="88" pos:column="46"/></name></expr></argument>,
           <argument><expr><sizeof pos:line="89" pos:column="12">sizeof<argument_list pos:line="89" pos:column="18">(<argument><expr><name><name pos:line="89" pos:column="19">vtmp<pos:position pos:line="89" pos:column="23"/></name><operator pos:line="89" pos:column="23">-&gt;<pos:position pos:line="89" pos:column="28"/></operator><name pos:line="89" pos:column="25">vlist<pos:position pos:line="89" pos:column="30"/></name><operator pos:line="89" pos:column="30">.<pos:position pos:line="89" pos:column="31"/></operator><name pos:line="89" pos:column="31">type_instance<pos:position pos:line="89" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="89" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="90" pos:column="3">vtmp<pos:position pos:line="90" pos:column="7"/></name><operator pos:line="90" pos:column="7">-&gt;<pos:position pos:line="90" pos:column="12"/></operator><name pos:line="90" pos:column="9">vlist<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">.<pos:position pos:line="90" pos:column="15"/></operator><name pos:line="90" pos:column="15">values<pos:position pos:line="90" pos:column="21"/></name></name> <operator pos:line="90" pos:column="22">=<pos:position pos:line="90" pos:column="23"/></operator> <operator pos:line="90" pos:column="24">&amp;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="25">uv<pos:position pos:line="90" pos:column="27"/></name></expr>;<pos:position pos:line="90" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="91" pos:column="3">vtmp<pos:position pos:line="91" pos:column="7"/></name><operator pos:line="91" pos:column="7">-&gt;<pos:position pos:line="91" pos:column="12"/></operator><name pos:line="91" pos:column="9">vlist<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">.<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="15">values_len<pos:position pos:line="91" pos:column="25"/></name></name> <operator pos:line="91" pos:column="26">=<pos:position pos:line="91" pos:column="27"/></operator> <literal type="number" pos:line="91" pos:column="28">1<pos:position pos:line="91" pos:column="29"/></literal></expr>;<pos:position pos:line="91" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="93" pos:column="3">vtmp<pos:position pos:line="93" pos:column="7"/></name><operator pos:line="93" pos:column="7">-&gt;<pos:position pos:line="93" pos:column="12"/></operator><name pos:line="93" pos:column="9">index<pos:position pos:line="93" pos:column="14"/></name></name> <operator pos:line="93" pos:column="15">=<pos:position pos:line="93" pos:column="16"/></operator> <operator pos:line="93" pos:column="17">(<pos:position pos:line="93" pos:column="18"/></operator><name><name pos:line="93" pos:column="18">vtmp<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">index<pos:position pos:line="93" pos:column="29"/></name></name> <operator pos:line="93" pos:column="30">+<pos:position pos:line="93" pos:column="31"/></operator> <literal type="number" pos:line="93" pos:column="32">1<pos:position pos:line="93" pos:column="33"/></literal><operator pos:line="93" pos:column="33">)<pos:position pos:line="93" pos:column="34"/></operator></expr>;<pos:position pos:line="93" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="94" pos:column="3">plugin_dispatch_values<pos:position pos:line="94" pos:column="25"/></name><argument_list pos:line="94" pos:column="25">(<argument><expr><operator pos:line="94" pos:column="26">&amp;<pos:position pos:line="94" pos:column="31"/></operator><name><name pos:line="94" pos:column="27">vtmp<pos:position pos:line="94" pos:column="31"/></name><operator pos:line="94" pos:column="31">-&gt;<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="33">vlist<pos:position pos:line="94" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="40"/></expr_stmt>

  <return pos:line="96" pos:column="3">return <expr><literal type="number" pos:line="96" pos:column="10">0<pos:position pos:line="96" pos:column="11"/></literal></expr>;<pos:position pos:line="96" pos:column="12"/></return>
}<pos:position pos:line="97" pos:column="2"/></block></function></unit>

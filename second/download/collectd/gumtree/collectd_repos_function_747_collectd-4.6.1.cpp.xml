<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_747_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_ipmi_init<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* Don't send `ADD' notifications during startup (~ 1 minute) */</comment>
  <expr_stmt><expr><name pos:line="6" pos:column="3">c_ipmi_init_in_progress<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal> <operator pos:line="6" pos:column="31">+<pos:position pos:line="6" pos:column="32"/></operator> <operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><literal type="number" pos:line="6" pos:column="34">60<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">/<pos:position pos:line="6" pos:column="38"/></operator> <name pos:line="6" pos:column="39">interval_g<pos:position pos:line="6" pos:column="49"/></name><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">c_ipmi_active<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <literal type="number" pos:line="8" pos:column="19">1<pos:position pos:line="8" pos:column="20"/></literal></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="10" pos:column="3">status<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">pthread_create<pos:position pos:line="10" pos:column="26"/></name> <argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">&amp;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="29">thread_id<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <comment type="block" pos:line="10" pos:column="40">/* attr = */</comment> <argument><expr><name pos:line="10" pos:column="53">NULL<pos:position pos:line="10" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="59">thread_main<pos:position pos:line="10" pos:column="70"/></name></expr></argument>,
      <comment type="block" pos:line="11" pos:column="7">/* user data = */</comment> <argument><expr><name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">status<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
  <block pos:line="13" pos:column="3">{
    <expr_stmt><expr><name pos:line="14" pos:column="5">c_ipmi_active<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">thread_id<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">pthread_t<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name> <argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="string" pos:line="16" pos:column="12">"ipmi plugin: pthread_create failed."<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="51"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <return pos:line="20" pos:column="3">return <expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><literal type="number" pos:line="20" pos:column="11">0<pos:position pos:line="20" pos:column="12"/></literal><operator pos:line="20" pos:column="12">)<pos:position pos:line="20" pos:column="13"/></operator></expr>;<pos:position pos:line="20" pos:column="14"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

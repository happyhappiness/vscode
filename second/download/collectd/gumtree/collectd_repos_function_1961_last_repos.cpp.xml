<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1961_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lua_config_base_path<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">oconfig_item_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ci<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="58"/></parameter_list> <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="3" pos:column="41"/></name><argument_list pos:line="3" pos:column="41">(<argument><expr><name pos:line="3" pos:column="42">ci<pos:position pos:line="3" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="46">base_path<pos:position pos:line="3" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="57">sizeof<argument_list pos:line="3" pos:column="63">(<argument><expr><name pos:line="3" pos:column="64">base_path<pos:position pos:line="3" pos:column="73"/></name></expr></argument>)<pos:position pos:line="3" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="76"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">!=<pos:position pos:line="4" pos:column="16"/></operator> <literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><name pos:line="5" pos:column="12">status<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">len<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><call><name pos:line="7" pos:column="16">strlen<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">base_path<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
  <while pos:line="8" pos:column="3">while <condition pos:line="8" pos:column="9">(<expr><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">len<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">&gt;<pos:position pos:line="8" pos:column="19"/></operator> <literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="20">&amp;&amp;<pos:position pos:line="8" pos:column="30"/></operator> <operator pos:line="8" pos:column="23">(<pos:position pos:line="8" pos:column="24"/></operator><name><name pos:line="8" pos:column="24">base_path<pos:position pos:line="8" pos:column="33"/></name><index pos:line="8" pos:column="33">[<expr><name pos:line="8" pos:column="34">len<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">-<pos:position pos:line="8" pos:column="39"/></operator> <literal type="number" pos:line="8" pos:column="40">1<pos:position pos:line="8" pos:column="41"/></literal></expr>]<pos:position pos:line="8" pos:column="42"/></index></name> <operator pos:line="8" pos:column="43">==<pos:position pos:line="8" pos:column="45"/></operator> <literal type="char" pos:line="8" pos:column="46">'/'<pos:position pos:line="8" pos:column="49"/></literal><operator pos:line="8" pos:column="49">)<pos:position pos:line="8" pos:column="50"/></operator></expr>)<pos:position pos:line="8" pos:column="51"/></condition> <block pos:line="8" pos:column="52">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">len<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">--<pos:position pos:line="9" pos:column="10"/></operator></expr>;<pos:position pos:line="9" pos:column="11"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">base_path<pos:position pos:line="10" pos:column="14"/></name><index pos:line="10" pos:column="14">[<expr><name pos:line="10" pos:column="15">len<pos:position pos:line="10" pos:column="18"/></name></expr>]<pos:position pos:line="10" pos:column="19"/></index></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="char" pos:line="10" pos:column="22">'\0'<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUG<pos:position pos:line="13" pos:column="8"/></name><argument_list pos:line="13" pos:column="8">(<argument><expr><literal type="string" pos:line="13" pos:column="9">"Lua plugin: base_path = \"%s\";"<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">base_path<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>

  <return pos:line="15" pos:column="3">return <expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>;<pos:position pos:line="15" pos:column="12"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

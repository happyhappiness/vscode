<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_296_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">kafka_write<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">data_set_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ds<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="46">/* {{{ */</comment>
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">value_list_t<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">vl<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">user_data_t<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">ud<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list> <block pos:line="2" pos:column="65">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">void<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">key<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">keylen<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">8192<pos:position pos:line="6" pos:column="19"/></literal></expr>]<pos:position pos:line="6" pos:column="20"/></index></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">bfree<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><sizeof pos:line="7" pos:column="18">sizeof<argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">buffer<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">bfill<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">size_t<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">blen<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="10" pos:column="3">struct<pos:position pos:line="10" pos:column="9"/></name> <name pos:line="10" pos:column="10">kafka_topic_context<pos:position pos:line="10" pos:column="29"/></name></name> <modifier pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></modifier></type><name pos:line="10" pos:column="31">ctx<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><name><name pos:line="10" pos:column="37">ud<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">data<pos:position pos:line="10" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="46"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">ds<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">==<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">NULL<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">)<pos:position pos:line="12" pos:column="19"/></operator> <operator pos:line="12" pos:column="20">||<pos:position pos:line="12" pos:column="22"/></operator> <operator pos:line="12" pos:column="23">(<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">vl<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">==<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">NULL<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">)<pos:position pos:line="12" pos:column="35"/></operator> <operator pos:line="12" pos:column="36">||<pos:position pos:line="12" pos:column="38"/></operator> <operator pos:line="12" pos:column="39">(<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">ctx<pos:position pos:line="12" pos:column="43"/></name> <operator pos:line="12" pos:column="44">==<pos:position pos:line="12" pos:column="46"/></operator> <name pos:line="12" pos:column="47">NULL<pos:position pos:line="12" pos:column="51"/></name><operator pos:line="12" pos:column="51">)<pos:position pos:line="12" pos:column="52"/></operator></expr>)<pos:position pos:line="12" pos:column="53"/></condition><then pos:line="12" pos:column="53">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">EINVAL<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">pthread_mutex_lock<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator><name><name pos:line="15" pos:column="23">ctx<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">lock<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">kafka_handle<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">ctx<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">pthread_mutex_unlock<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><operator pos:line="17" pos:column="24">&amp;<pos:position pos:line="17" pos:column="29"/></operator><name><name pos:line="17" pos:column="25">ctx<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">lock<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">status<pos:position pos:line="19" pos:column="18"/></name></expr>;<pos:position pos:line="19" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">bzero<pos:position pos:line="21" pos:column="8"/></name><argument_list pos:line="21" pos:column="8">(<argument><expr><name pos:line="21" pos:column="9">buffer<pos:position pos:line="21" pos:column="15"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="17">sizeof<argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">buffer<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

  <switch pos:line="23" pos:column="3">switch <condition pos:line="23" pos:column="10">(<expr><name><name pos:line="23" pos:column="11">ctx<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">format<pos:position pos:line="23" pos:column="22"/></name></name></expr>)<pos:position pos:line="23" pos:column="23"/></condition> <block pos:line="23" pos:column="24">{
  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">KAFKA_FORMAT_COMMAND<pos:position pos:line="24" pos:column="28"/></name></expr>:<pos:position pos:line="24" pos:column="29"/></case>
    <expr_stmt><expr><name pos:line="25" pos:column="5">status<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">create_putval<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">buffer<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="36">sizeof<argument_list pos:line="25" pos:column="42">(<argument><expr><name pos:line="25" pos:column="43">buffer<pos:position pos:line="25" pos:column="49"/></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">ds<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">vl<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">status<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">!=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21"> <block pos:line="26" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ERROR<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><literal type="string" pos:line="27" pos:column="13">"write_kafka plugin: create_putval failed with status %i."<pos:position pos:line="27" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="73">status<pos:position pos:line="27" pos:column="79"/></name></expr></argument>)<pos:position pos:line="27" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="81"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><name pos:line="28" pos:column="14">status<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="30" pos:column="5">blen<pos:position pos:line="30" pos:column="9"/></name> <operator pos:line="30" pos:column="10">=<pos:position pos:line="30" pos:column="11"/></operator> <call><name pos:line="30" pos:column="12">strlen<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">buffer<pos:position pos:line="30" pos:column="25"/></name></expr></argument>)<pos:position pos:line="30" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
    <break pos:line="31" pos:column="5">break;<pos:position pos:line="31" pos:column="11"/></break>
  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">KAFKA_FORMAT_JSON<pos:position pos:line="32" pos:column="25"/></name></expr>:<pos:position pos:line="32" pos:column="26"/></case>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">format_json_initialize<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">buffer<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="36">&amp;<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="37">bfill<pos:position pos:line="33" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="44">&amp;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="45">bfree<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">format_json_value_list<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">buffer<pos:position pos:line="34" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="36">&amp;<pos:position pos:line="34" pos:column="41"/></operator><name pos:line="34" pos:column="37">bfill<pos:position pos:line="34" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="44">&amp;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="45">bfree<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="52">ds<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="56">vl<pos:position pos:line="34" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="60">ctx<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">-&gt;<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="65">store_rates<pos:position pos:line="34" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">format_json_finalize<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">buffer<pos:position pos:line="35" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="34">&amp;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="35">bfill<pos:position pos:line="35" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="42">&amp;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="43">bfree<pos:position pos:line="35" pos:column="48"/></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">blen<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">strlen<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name pos:line="36" pos:column="19">buffer<pos:position pos:line="36" pos:column="25"/></name></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
    <break pos:line="37" pos:column="5">break;<pos:position pos:line="37" pos:column="11"/></break>
  <case pos:line="38" pos:column="3">case <expr><name pos:line="38" pos:column="8">KAFKA_FORMAT_GRAPHITE<pos:position pos:line="38" pos:column="29"/></name></expr>:<pos:position pos:line="38" pos:column="30"/></case>
    <expr_stmt><expr><name pos:line="39" pos:column="5">status<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator>
        <call><name pos:line="40" pos:column="9">format_graphite<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">buffer<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="33">sizeof<argument_list pos:line="40" pos:column="39">(<argument><expr><name pos:line="40" pos:column="40">buffer<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">ds<pos:position pos:line="40" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">vl<pos:position pos:line="40" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="57">ctx<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">-&gt;<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="62">prefix<pos:position pos:line="40" pos:column="68"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="41" pos:column="25">ctx<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">postfix<pos:position pos:line="41" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">ctx<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">-&gt;<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="44">escape_char<pos:position pos:line="41" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="57">ctx<pos:position pos:line="41" pos:column="60"/></name><operator pos:line="41" pos:column="60">-&gt;<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="62">graphite_flags<pos:position pos:line="41" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="78"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">status<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">!=<pos:position pos:line="42" pos:column="18"/></operator> <literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr>)<pos:position pos:line="42" pos:column="21"/></condition><then pos:line="42" pos:column="21"> <block pos:line="42" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">ERROR<pos:position pos:line="43" pos:column="12"/></name><argument_list pos:line="43" pos:column="12">(<argument><expr><literal type="string" pos:line="43" pos:column="13">"write_kafka plugin: format_graphite failed with status %i."<pos:position pos:line="43" pos:column="73"/></literal></expr></argument>,
            <argument><expr><name pos:line="44" pos:column="13">status<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>
      <return pos:line="45" pos:column="7">return <expr><name pos:line="45" pos:column="14">status<pos:position pos:line="45" pos:column="20"/></name></expr>;<pos:position pos:line="45" pos:column="21"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="47" pos:column="5">blen<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <call><name pos:line="47" pos:column="12">strlen<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">buffer<pos:position pos:line="47" pos:column="25"/></name></expr></argument>)<pos:position pos:line="47" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt>
    <break pos:line="48" pos:column="5">break;<pos:position pos:line="48" pos:column="11"/></break>
  <default pos:line="49" pos:column="3">default:<pos:position pos:line="49" pos:column="11"/></default>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><literal type="string" pos:line="50" pos:column="11">"write_kafka plugin: invalid format %i."<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="53">ctx<pos:position pos:line="50" pos:column="56"/></name><operator pos:line="50" pos:column="56">-&gt;<pos:position pos:line="50" pos:column="61"/></operator><name pos:line="50" pos:column="58">format<pos:position pos:line="50" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="66"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><operator pos:line="51" pos:column="12">-<pos:position pos:line="51" pos:column="13"/></operator><literal type="number" pos:line="51" pos:column="13">1<pos:position pos:line="51" pos:column="14"/></literal></expr>;<pos:position pos:line="51" pos:column="15"/></return>
  }<pos:position pos:line="52" pos:column="4"/></block></switch>

  <expr_stmt><expr><name pos:line="54" pos:column="3">key<pos:position pos:line="54" pos:column="6"/></name> <operator pos:line="54" pos:column="7">=<pos:position pos:line="54" pos:column="8"/></operator>
      <ternary><condition><expr><operator pos:line="55" pos:column="7">(<pos:position pos:line="55" pos:column="8"/></operator><name><name pos:line="55" pos:column="8">ctx<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">key<pos:position pos:line="55" pos:column="16"/></name></name> <operator pos:line="55" pos:column="17">!=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">NULL<pos:position pos:line="55" pos:column="24"/></name><operator pos:line="55" pos:column="24">)<pos:position pos:line="55" pos:column="25"/></operator></expr> ?<pos:position pos:line="55" pos:column="27"/></condition><then pos:line="55" pos:column="27"> <expr><name><name pos:line="55" pos:column="28">ctx<pos:position pos:line="55" pos:column="31"/></name><operator pos:line="55" pos:column="31">-&gt;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="33">key<pos:position pos:line="55" pos:column="36"/></name></name></expr> <pos:position pos:line="55" pos:column="37"/></then><else pos:line="55" pos:column="37">: <expr><call><name pos:line="55" pos:column="39">kafka_random_key<pos:position pos:line="55" pos:column="55"/></name><argument_list pos:line="55" pos:column="55">(<argument><expr><name pos:line="55" pos:column="56">KAFKA_RANDOM_KEY_BUFFER<pos:position pos:line="55" pos:column="79"/></name></expr></argument>)<pos:position pos:line="55" pos:column="80"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="55" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><name pos:line="56" pos:column="3">keylen<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">=<pos:position pos:line="56" pos:column="11"/></operator> <call><name pos:line="56" pos:column="12">strlen<pos:position pos:line="56" pos:column="18"/></name><argument_list pos:line="56" pos:column="18">(<argument><expr><name pos:line="56" pos:column="19">key<pos:position pos:line="56" pos:column="22"/></name></expr></argument>)<pos:position pos:line="56" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="58" pos:column="3">rd_kafka_produce<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name><name pos:line="58" pos:column="20">ctx<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">topic<pos:position pos:line="58" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="32">RD_KAFKA_PARTITION_UA<pos:position pos:line="58" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="55">RD_KAFKA_MSG_F_COPY<pos:position pos:line="58" pos:column="74"/></name></expr></argument>,
                   <argument><expr><name pos:line="59" pos:column="20">buffer<pos:position pos:line="59" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="28">blen<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">key<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="39">keylen<pos:position pos:line="59" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="47">NULL<pos:position pos:line="59" pos:column="51"/></name></expr></argument>)<pos:position pos:line="59" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="53"/></expr_stmt>

  <return pos:line="61" pos:column="3">return <expr><name pos:line="61" pos:column="10">status<pos:position pos:line="61" pos:column="16"/></name></expr>;<pos:position pos:line="61" pos:column="17"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

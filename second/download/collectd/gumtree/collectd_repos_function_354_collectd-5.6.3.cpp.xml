<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_354_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">camqp_setup_queue<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">camqp_config_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">conf<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">amqp_queue_declare_ok_t<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">qd_ret<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">amqp_basic_consume_ok_t<pos:position pos:line="4" pos:column="26"/></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">cm_ret<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">qd_ret<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <call><name pos:line="6" pos:column="12">amqp_queue_declare<pos:position pos:line="6" pos:column="30"/></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name><name pos:line="6" pos:column="31">conf<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">connection<pos:position pos:line="6" pos:column="47"/></name></name></expr></argument>,
                              <comment type="block" pos:line="7" pos:column="31">/* channel     = */</comment> <argument><expr><name pos:line="7" pos:column="51">CAMQP_CHANNEL<pos:position pos:line="7" pos:column="64"/></name></expr></argument>,
                              <comment type="block" pos:line="8" pos:column="31">/* queue       = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="8" pos:column="51">(<pos:position pos:line="8" pos:column="52"/></operator><name><name pos:line="8" pos:column="52">conf<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">-&gt;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="58">queue<pos:position pos:line="8" pos:column="63"/></name></name> <operator pos:line="8" pos:column="64">!=<pos:position pos:line="8" pos:column="66"/></operator> <name pos:line="8" pos:column="67">NULL<pos:position pos:line="8" pos:column="71"/></name><operator pos:line="8" pos:column="71">)<pos:position pos:line="8" pos:column="72"/></operator></expr>
                                  ?<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <expr><call><name pos:line="9" pos:column="37">amqp_cstring_bytes<pos:position pos:line="9" pos:column="55"/></name><argument_list pos:line="9" pos:column="55">(<argument><expr><name><name pos:line="9" pos:column="56">conf<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">-&gt;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="62">queue<pos:position pos:line="9" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr>
                                  <pos:position pos:line="10" pos:column="35"/></then><else pos:line="10" pos:column="35">: <expr><name pos:line="10" pos:column="37">AMQP_EMPTY_BYTES<pos:position pos:line="10" pos:column="53"/></name></expr></else></ternary></expr></argument>,
                              <comment type="block" pos:line="11" pos:column="31">/* passive     = */</comment> <argument><expr><literal type="number" pos:line="11" pos:column="51">0<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>,
                              <comment type="block" pos:line="12" pos:column="31">/* durable     = */</comment> <argument><expr><name><name pos:line="12" pos:column="51">conf<pos:position pos:line="12" pos:column="55"/></name><operator pos:line="12" pos:column="55">-&gt;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="57">queue_durable<pos:position pos:line="12" pos:column="70"/></name></name></expr></argument>,
                              <comment type="block" pos:line="13" pos:column="31">/* exclusive   = */</comment> <argument><expr><literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr></argument>,
                              <comment type="block" pos:line="14" pos:column="31">/* auto_delete = */</comment> <argument><expr><name><name pos:line="14" pos:column="51">conf<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">queue_auto_delete<pos:position pos:line="14" pos:column="74"/></name></name></expr></argument>,
                              <comment type="block" pos:line="15" pos:column="31">/* arguments   = */</comment> <argument><expr><name pos:line="15" pos:column="51">AMQP_EMPTY_TABLE<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">qd_ret<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">==<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">NULL<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"amqp plugin: amqp_queue_declare failed."<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">camqp_close_connection<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">conf<pos:position pos:line="18" pos:column="32"/></name></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="34"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">conf<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">queue<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">==<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name></expr>)<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <block pos:line="22" pos:column="28">{
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">conf<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">queue<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">camqp_bytes_cstring<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator><name><name pos:line="23" pos:column="40">qd_ret<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">-&gt;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="48">queue<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="55"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">conf<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">queue<pos:position pos:line="24" pos:column="20"/></name></name> <operator pos:line="24" pos:column="21">==<pos:position pos:line="24" pos:column="23"/></operator> <name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>)<pos:position pos:line="24" pos:column="29"/></condition><then pos:line="24" pos:column="29"> <block pos:line="24" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">ERROR<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">(<argument><expr><literal type="string" pos:line="25" pos:column="13">"amqp plugin: camqp_bytes_cstring failed."<pos:position pos:line="25" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">camqp_close_connection<pos:position pos:line="26" pos:column="29"/></name><argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">conf<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">(<pos:position pos:line="27" pos:column="15"/></operator><operator pos:line="27" pos:column="15">-<pos:position pos:line="27" pos:column="16"/></operator><literal type="number" pos:line="27" pos:column="16">1<pos:position pos:line="27" pos:column="17"/></literal><operator pos:line="27" pos:column="17">)<pos:position pos:line="27" pos:column="18"/></operator></expr>;<pos:position pos:line="27" pos:column="19"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">INFO<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><literal type="string" pos:line="30" pos:column="10">"amqp plugin: Created queue \"%s\"."<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="48">conf<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">-&gt;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="54">queue<pos:position pos:line="30" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="61"/></expr_stmt>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="32" pos:column="3">DEBUG<pos:position pos:line="32" pos:column="8"/></name><argument_list pos:line="32" pos:column="8">(<argument><expr><literal type="string" pos:line="32" pos:column="9">"amqp plugin: Successfully created queue \"%s\"."<pos:position pos:line="32" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="60">conf<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">-&gt;<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="66">queue<pos:position pos:line="32" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="73"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* bind to an exchange */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name><name pos:line="35" pos:column="7">conf<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">-&gt;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="13">exchange<pos:position pos:line="35" pos:column="21"/></name></name> <operator pos:line="35" pos:column="22">!=<pos:position pos:line="35" pos:column="24"/></operator> <name pos:line="35" pos:column="25">NULL<pos:position pos:line="35" pos:column="29"/></name></expr>)<pos:position pos:line="35" pos:column="30"/></condition><then pos:line="35" pos:column="30"> <block pos:line="35" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">amqp_queue_bind_ok_t<pos:position pos:line="36" pos:column="25"/></name> <modifier pos:line="36" pos:column="26">*<pos:position pos:line="36" pos:column="27"/></modifier></type><name pos:line="36" pos:column="27">qb_ret<pos:position pos:line="36" pos:column="33"/></name></decl>;<pos:position pos:line="36" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">assert<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">conf<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">queue<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">!=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">NULL<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">qb_ret<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator>
        <call><name pos:line="40" pos:column="9">amqp_queue_bind<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name><name pos:line="40" pos:column="25">conf<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">connection<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>,
                        <comment type="block" pos:line="41" pos:column="25">/* channel     = */</comment> <argument><expr><name pos:line="41" pos:column="45">CAMQP_CHANNEL<pos:position pos:line="41" pos:column="58"/></name></expr></argument>,
                        <comment type="block" pos:line="42" pos:column="25">/* queue       = */</comment> <argument><expr><call><name pos:line="42" pos:column="45">amqp_cstring_bytes<pos:position pos:line="42" pos:column="63"/></name><argument_list pos:line="42" pos:column="63">(<argument><expr><name><name pos:line="42" pos:column="64">conf<pos:position pos:line="42" pos:column="68"/></name><operator pos:line="42" pos:column="68">-&gt;<pos:position pos:line="42" pos:column="73"/></operator><name pos:line="42" pos:column="70">queue<pos:position pos:line="42" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr></argument>,
                        <comment type="block" pos:line="43" pos:column="25">/* exchange    = */</comment> <argument><expr><call><name pos:line="43" pos:column="45">amqp_cstring_bytes<pos:position pos:line="43" pos:column="63"/></name><argument_list pos:line="43" pos:column="63">(<argument><expr><name><name pos:line="43" pos:column="64">conf<pos:position pos:line="43" pos:column="68"/></name><operator pos:line="43" pos:column="68">-&gt;<pos:position pos:line="43" pos:column="73"/></operator><name pos:line="43" pos:column="70">exchange<pos:position pos:line="43" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="79"/></argument_list></call></expr></argument>,
                        <comment type="block" pos:line="44" pos:column="25">/* routing_key = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="44" pos:column="45">(<pos:position pos:line="44" pos:column="46"/></operator><name><name pos:line="44" pos:column="46">conf<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">routing_key<pos:position pos:line="44" pos:column="63"/></name></name> <operator pos:line="44" pos:column="64">!=<pos:position pos:line="44" pos:column="66"/></operator> <name pos:line="44" pos:column="67">NULL<pos:position pos:line="44" pos:column="71"/></name><operator pos:line="44" pos:column="71">)<pos:position pos:line="44" pos:column="72"/></operator></expr>
                            ?<pos:position pos:line="45" pos:column="30"/></condition><then pos:line="45" pos:column="30"> <expr><call><name pos:line="45" pos:column="31">amqp_cstring_bytes<pos:position pos:line="45" pos:column="49"/></name><argument_list pos:line="45" pos:column="49">(<argument><expr><name><name pos:line="45" pos:column="50">conf<pos:position pos:line="45" pos:column="54"/></name><operator pos:line="45" pos:column="54">-&gt;<pos:position pos:line="45" pos:column="59"/></operator><name pos:line="45" pos:column="56">routing_key<pos:position pos:line="45" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>
                            <pos:position pos:line="46" pos:column="29"/></then><else pos:line="46" pos:column="29">: <expr><name pos:line="46" pos:column="31">AMQP_EMPTY_BYTES<pos:position pos:line="46" pos:column="47"/></name></expr></else></ternary></expr></argument>,
                        <comment type="block" pos:line="47" pos:column="25">/* arguments   = */</comment> <argument><expr><name pos:line="47" pos:column="45">AMQP_EMPTY_TABLE<pos:position pos:line="47" pos:column="61"/></name></expr></argument>)<pos:position pos:line="47" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="63"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">(<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">qb_ret<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">==<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">NULL<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">)<pos:position pos:line="48" pos:column="25"/></operator> <operator pos:line="48" pos:column="26">&amp;&amp;<pos:position pos:line="48" pos:column="36"/></operator> <call><name pos:line="48" pos:column="29">camqp_is_error<pos:position pos:line="48" pos:column="43"/></name><argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">conf<pos:position pos:line="48" pos:column="48"/></name></expr></argument>)<pos:position pos:line="48" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="50"/></condition><then pos:line="48" pos:column="50"> <block pos:line="48" pos:column="51">{
      <decl_stmt><decl><type><name pos:line="49" pos:column="7">char<pos:position pos:line="49" pos:column="11"/></name></type> <name><name pos:line="49" pos:column="12">errbuf<pos:position pos:line="49" pos:column="18"/></name><index pos:line="49" pos:column="18">[<expr><literal type="number" pos:line="49" pos:column="19">1024<pos:position pos:line="49" pos:column="23"/></literal></expr>]<pos:position pos:line="49" pos:column="24"/></index></name></decl>;<pos:position pos:line="49" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">ERROR<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><literal type="string" pos:line="50" pos:column="13">"amqp plugin: amqp_queue_bind failed: %s"<pos:position pos:line="50" pos:column="54"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="51" pos:column="13">camqp_strerror<pos:position pos:line="51" pos:column="27"/></name><argument_list pos:line="51" pos:column="27">(<argument><expr><name pos:line="51" pos:column="28">conf<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="34">errbuf<pos:position pos:line="51" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="42">sizeof<argument_list pos:line="51" pos:column="48">(<argument><expr><name pos:line="51" pos:column="49">errbuf<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">camqp_close_connection<pos:position pos:line="52" pos:column="29"/></name><argument_list pos:line="52" pos:column="29">(<argument><expr><name pos:line="52" pos:column="30">conf<pos:position pos:line="52" pos:column="34"/></name></expr></argument>)<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
      <return pos:line="53" pos:column="7">return <expr><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><operator pos:line="53" pos:column="15">-<pos:position pos:line="53" pos:column="16"/></operator><literal type="number" pos:line="53" pos:column="16">1<pos:position pos:line="53" pos:column="17"/></literal><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator></expr>;<pos:position pos:line="53" pos:column="19"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">DEBUG<pos:position pos:line="56" pos:column="10"/></name><argument_list pos:line="56" pos:column="10">(<argument><expr><literal type="string" pos:line="56" pos:column="11">"amqp plugin: Successfully bound queue \"%s\" to exchange \"%s\"."<pos:position pos:line="56" pos:column="77"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="57" pos:column="11">conf<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">queue<pos:position pos:line="57" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="24">conf<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">-&gt;<pos:position pos:line="57" pos:column="33"/></operator><name pos:line="57" pos:column="30">exchange<pos:position pos:line="57" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if> <comment type="block" pos:line="58" pos:column="5">/* if (conf-&gt;exchange != NULL) */</comment>

  <expr_stmt><expr><name pos:line="60" pos:column="3">cm_ret<pos:position pos:line="60" pos:column="9"/></name> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator>
      <call><name pos:line="61" pos:column="7">amqp_basic_consume<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name><name pos:line="61" pos:column="26">conf<pos:position pos:line="61" pos:column="30"/></name><operator pos:line="61" pos:column="30">-&gt;<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="32">connection<pos:position pos:line="61" pos:column="42"/></name></name></expr></argument>,
                         <comment type="block" pos:line="62" pos:column="26">/* channel      = */</comment> <argument><expr><name pos:line="62" pos:column="47">CAMQP_CHANNEL<pos:position pos:line="62" pos:column="60"/></name></expr></argument>,
                         <comment type="block" pos:line="63" pos:column="26">/* queue        = */</comment> <argument><expr><call><name pos:line="63" pos:column="47">amqp_cstring_bytes<pos:position pos:line="63" pos:column="65"/></name><argument_list pos:line="63" pos:column="65">(<argument><expr><name><name pos:line="63" pos:column="66">conf<pos:position pos:line="63" pos:column="70"/></name><operator pos:line="63" pos:column="70">-&gt;<pos:position pos:line="63" pos:column="75"/></operator><name pos:line="63" pos:column="72">queue<pos:position pos:line="63" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr></argument>,
                         <comment type="block" pos:line="64" pos:column="26">/* consumer_tag = */</comment> <argument><expr><name pos:line="64" pos:column="47">AMQP_EMPTY_BYTES<pos:position pos:line="64" pos:column="63"/></name></expr></argument>,
                         <comment type="block" pos:line="65" pos:column="26">/* no_local     = */</comment> <argument><expr><literal type="number" pos:line="65" pos:column="47">0<pos:position pos:line="65" pos:column="48"/></literal></expr></argument>,
                         <comment type="block" pos:line="66" pos:column="26">/* no_ack       = */</comment> <argument><expr><literal type="number" pos:line="66" pos:column="47">1<pos:position pos:line="66" pos:column="48"/></literal></expr></argument>,
                         <comment type="block" pos:line="67" pos:column="26">/* exclusive    = */</comment> <argument><expr><literal type="number" pos:line="67" pos:column="47">0<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>,
                         <comment type="block" pos:line="68" pos:column="26">/* arguments    = */</comment> <argument><expr><name pos:line="68" pos:column="47">AMQP_EMPTY_TABLE<pos:position pos:line="68" pos:column="63"/></name></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="65"/></expr_stmt>
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><operator pos:line="69" pos:column="7">(<pos:position pos:line="69" pos:column="8"/></operator><name pos:line="69" pos:column="8">cm_ret<pos:position pos:line="69" pos:column="14"/></name> <operator pos:line="69" pos:column="15">==<pos:position pos:line="69" pos:column="17"/></operator> <name pos:line="69" pos:column="18">NULL<pos:position pos:line="69" pos:column="22"/></name><operator pos:line="69" pos:column="22">)<pos:position pos:line="69" pos:column="23"/></operator> <operator pos:line="69" pos:column="24">&amp;&amp;<pos:position pos:line="69" pos:column="34"/></operator> <call><name pos:line="69" pos:column="27">camqp_is_error<pos:position pos:line="69" pos:column="41"/></name><argument_list pos:line="69" pos:column="41">(<argument><expr><name pos:line="69" pos:column="42">conf<pos:position pos:line="69" pos:column="46"/></name></expr></argument>)<pos:position pos:line="69" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="48"/></condition><then pos:line="69" pos:column="48"> <block pos:line="69" pos:column="49">{
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">char<pos:position pos:line="70" pos:column="9"/></name></type> <name><name pos:line="70" pos:column="10">errbuf<pos:position pos:line="70" pos:column="16"/></name><index pos:line="70" pos:column="16">[<expr><literal type="number" pos:line="70" pos:column="17">1024<pos:position pos:line="70" pos:column="21"/></literal></expr>]<pos:position pos:line="70" pos:column="22"/></index></name></decl>;<pos:position pos:line="70" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ERROR<pos:position pos:line="71" pos:column="10"/></name><argument_list pos:line="71" pos:column="10">(<argument><expr><literal type="string" pos:line="71" pos:column="11">"amqp plugin: amqp_basic_consume failed: %s"<pos:position pos:line="71" pos:column="55"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="72" pos:column="11">camqp_strerror<pos:position pos:line="72" pos:column="25"/></name><argument_list pos:line="72" pos:column="25">(<argument><expr><name pos:line="72" pos:column="26">conf<pos:position pos:line="72" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="32">errbuf<pos:position pos:line="72" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="40">sizeof<argument_list pos:line="72" pos:column="46">(<argument><expr><name pos:line="72" pos:column="47">errbuf<pos:position pos:line="72" pos:column="53"/></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">camqp_close_connection<pos:position pos:line="73" pos:column="27"/></name><argument_list pos:line="73" pos:column="27">(<argument><expr><name pos:line="73" pos:column="28">conf<pos:position pos:line="73" pos:column="32"/></name></expr></argument>)<pos:position pos:line="73" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="34"/></expr_stmt>
    <return pos:line="74" pos:column="5">return <expr><operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><operator pos:line="74" pos:column="13">-<pos:position pos:line="74" pos:column="14"/></operator><literal type="number" pos:line="74" pos:column="14">1<pos:position pos:line="74" pos:column="15"/></literal><operator pos:line="74" pos:column="15">)<pos:position pos:line="74" pos:column="16"/></operator></expr>;<pos:position pos:line="74" pos:column="17"/></return>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <return pos:line="77" pos:column="3">return <expr><operator pos:line="77" pos:column="10">(<pos:position pos:line="77" pos:column="11"/></operator><literal type="number" pos:line="77" pos:column="11">0<pos:position pos:line="77" pos:column="12"/></literal><operator pos:line="77" pos:column="12">)<pos:position pos:line="77" pos:column="13"/></operator></expr>;<pos:position pos:line="77" pos:column="14"/></return>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_822_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">multi1_read<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <modifier pos:line="1" pos:column="30">*<pos:position pos:line="1" pos:column="31"/></modifier></type><name pos:line="1" pos:column="31">name<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">FILE<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">fh<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">buffer<pos:position pos:line="3" pos:column="20"/></name><index pos:line="3" pos:column="20">[<expr><literal type="number" pos:line="3" pos:column="21">1024<pos:position pos:line="3" pos:column="25"/></literal></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name><name pos:line="4" pos:column="15">fields<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><literal type="number" pos:line="4" pos:column="22">10<pos:position pos:line="4" pos:column="24"/></literal></expr>]<pos:position pos:line="4" pos:column="25"/></index></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>  <name pos:line="5" pos:column="14">fields_num<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">read<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><literal type="number" pos:line="5" pos:column="33">0<pos:position pos:line="5" pos:column="34"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="36">found_header<pos:position pos:line="5" pos:column="48"/></name> <init pos:line="5" pos:column="49">= <expr><literal type="number" pos:line="5" pos:column="51">0<pos:position pos:line="5" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* read the file until the "ROUTING TABLE" line is found (no more info after) */</comment>
	<while pos:line="8" pos:column="9">while <condition pos:line="8" pos:column="15">(<expr><call><name pos:line="8" pos:column="16">fgets<pos:position pos:line="8" pos:column="21"/></name> <argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">buffer<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="31">sizeof <argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">buffer<pos:position pos:line="8" pos:column="45"/></name></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">fh<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call> <operator pos:line="8" pos:column="52">!=<pos:position pos:line="8" pos:column="54"/></operator> <name pos:line="8" pos:column="55">NULL<pos:position pos:line="8" pos:column="59"/></name></expr>)<pos:position pos:line="8" pos:column="60"/></condition>
	<block pos:line="9" pos:column="9">{
		<if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><call><name pos:line="10" pos:column="21">strcmp<pos:position pos:line="10" pos:column="27"/></name> <argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">buffer<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="37">"ROUTING TABLE\n"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call> <operator pos:line="10" pos:column="56">==<pos:position pos:line="10" pos:column="58"/></operator> <literal type="number" pos:line="10" pos:column="59">0<pos:position pos:line="10" pos:column="60"/></literal></expr>)<pos:position pos:line="10" pos:column="61"/></condition><then pos:line="10" pos:column="61">
			<block type="pseudo"><break pos:line="11" pos:column="25">break;<pos:position pos:line="11" pos:column="31"/></break></block></then></if>

		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><call><name pos:line="13" pos:column="21">strcmp<pos:position pos:line="13" pos:column="27"/></name> <argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">buffer<pos:position pos:line="13" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">V1STRING<pos:position pos:line="13" pos:column="45"/></name></expr></argument>)<pos:position pos:line="13" pos:column="46"/></argument_list></call> <operator pos:line="13" pos:column="47">==<pos:position pos:line="13" pos:column="49"/></operator> <literal type="number" pos:line="13" pos:column="50">0<pos:position pos:line="13" pos:column="51"/></literal></expr>)<pos:position pos:line="13" pos:column="52"/></condition><then pos:line="13" pos:column="52">
		<block pos:line="14" pos:column="17">{
			<expr_stmt><expr><name pos:line="15" pos:column="25">found_header<pos:position pos:line="15" pos:column="37"/></name> <operator pos:line="15" pos:column="38">=<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="40">1<pos:position pos:line="15" pos:column="41"/></literal></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>
			<continue pos:line="16" pos:column="25">continue;<pos:position pos:line="16" pos:column="34"/></continue>
		}<pos:position pos:line="17" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="19" pos:column="17">/* skip the first lines until the client list section is found */</comment>
		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">found_header<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">==<pos:position pos:line="20" pos:column="36"/></operator> <literal type="number" pos:line="20" pos:column="37">0<pos:position pos:line="20" pos:column="38"/></literal></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39">
			<comment type="block" pos:line="21" pos:column="25">/* we can't start reading data until this string is found */</comment>
			<block type="pseudo"><continue pos:line="22" pos:column="25">continue;<pos:position pos:line="22" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="24" pos:column="17">fields_num<pos:position pos:line="24" pos:column="27"/></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <call><name pos:line="24" pos:column="30">openvpn_strsplit<pos:position pos:line="24" pos:column="46"/></name> <argument_list pos:line="24" pos:column="47">(<argument><expr><name pos:line="24" pos:column="48">buffer<pos:position pos:line="24" pos:column="54"/></name></expr></argument>,
				<argument><expr><name pos:line="25" pos:column="33">fields<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="41">STATIC_ARRAY_SIZE<pos:position pos:line="25" pos:column="58"/></name> <argument_list pos:line="25" pos:column="59">(<argument><expr><name pos:line="25" pos:column="60">fields<pos:position pos:line="25" pos:column="66"/></name></expr></argument>)<pos:position pos:line="25" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><name pos:line="26" pos:column="21">fields_num<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&lt;<pos:position pos:line="26" pos:column="36"/></operator> <literal type="number" pos:line="26" pos:column="34">4<pos:position pos:line="26" pos:column="35"/></literal></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><name pos:line="29" pos:column="21">new_naming_schema<pos:position pos:line="29" pos:column="38"/></name></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39">
		<block pos:line="30" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">iostats_submit<pos:position pos:line="31" pos:column="39"/></name> <argument_list pos:line="31" pos:column="40">(<argument><expr><name><name pos:line="31" pos:column="41">fields<pos:position pos:line="31" pos:column="47"/></name><index pos:line="31" pos:column="47">[<expr><literal type="number" pos:line="31" pos:column="48">0<pos:position pos:line="31" pos:column="49"/></literal></expr>]<pos:position pos:line="31" pos:column="50"/></index></name></expr></argument>,          <comment type="block" pos:line="31" pos:column="61">/* "Common Name" */</comment>
					<argument><expr><name pos:line="32" pos:column="41">NULL<pos:position pos:line="32" pos:column="45"/></name></expr></argument>,               <comment type="block" pos:line="32" pos:column="61">/* unused when in multimode */</comment>
					<argument><expr><call><name pos:line="33" pos:column="41">atoll<pos:position pos:line="33" pos:column="46"/></name> <argument_list pos:line="33" pos:column="47">(<argument><expr><name><name pos:line="33" pos:column="48">fields<pos:position pos:line="33" pos:column="54"/></name><index pos:line="33" pos:column="54">[<expr><literal type="number" pos:line="33" pos:column="55">2<pos:position pos:line="33" pos:column="56"/></literal></expr>]<pos:position pos:line="33" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="33" pos:column="61">/* "Bytes Received" */</comment>
					<argument><expr><call><name pos:line="34" pos:column="41">atoll<pos:position pos:line="34" pos:column="46"/></name> <argument_list pos:line="34" pos:column="47">(<argument><expr><name><name pos:line="34" pos:column="48">fields<pos:position pos:line="34" pos:column="54"/></name><index pos:line="34" pos:column="54">[<expr><literal type="number" pos:line="34" pos:column="55">3<pos:position pos:line="34" pos:column="56"/></literal></expr>]<pos:position pos:line="34" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="60"/></expr_stmt> <comment type="block" pos:line="34" pos:column="61">/* "Bytes Sent" */</comment>
		}<pos:position pos:line="35" pos:column="18"/></block></then>
		<else pos:line="36" pos:column="17">else
		<block pos:line="37" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">iostats_submit<pos:position pos:line="38" pos:column="39"/></name> <argument_list pos:line="38" pos:column="40">(<argument><expr><name pos:line="38" pos:column="41">name<pos:position pos:line="38" pos:column="45"/></name></expr></argument>,               <comment type="block" pos:line="38" pos:column="61">/* vpn instance */</comment>
					<argument><expr><name><name pos:line="39" pos:column="41">fields<pos:position pos:line="39" pos:column="47"/></name><index pos:line="39" pos:column="47">[<expr><literal type="number" pos:line="39" pos:column="48">0<pos:position pos:line="39" pos:column="49"/></literal></expr>]<pos:position pos:line="39" pos:column="50"/></index></name></expr></argument>,          <comment type="block" pos:line="39" pos:column="61">/* "Common Name" */</comment>
					<argument><expr><call><name pos:line="40" pos:column="41">atoll<pos:position pos:line="40" pos:column="46"/></name> <argument_list pos:line="40" pos:column="47">(<argument><expr><name><name pos:line="40" pos:column="48">fields<pos:position pos:line="40" pos:column="54"/></name><index pos:line="40" pos:column="54">[<expr><literal type="number" pos:line="40" pos:column="55">2<pos:position pos:line="40" pos:column="56"/></literal></expr>]<pos:position pos:line="40" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="58"/></argument_list></call></expr></argument>,  <comment type="block" pos:line="40" pos:column="61">/* "Bytes Received" */</comment>
					<argument><expr><call><name pos:line="41" pos:column="41">atoll<pos:position pos:line="41" pos:column="46"/></name> <argument_list pos:line="41" pos:column="47">(<argument><expr><name><name pos:line="41" pos:column="48">fields<pos:position pos:line="41" pos:column="54"/></name><index pos:line="41" pos:column="54">[<expr><literal type="number" pos:line="41" pos:column="55">3<pos:position pos:line="41" pos:column="56"/></literal></expr>]<pos:position pos:line="41" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt> <comment type="block" pos:line="41" pos:column="61">/* "Bytes Sent" */</comment>
		}<pos:position pos:line="42" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="44" pos:column="17">read<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="24">1<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
	}<pos:position pos:line="45" pos:column="10"/></block></while>

	<return pos:line="47" pos:column="9">return <expr><operator pos:line="47" pos:column="16">(<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">read<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">)<pos:position pos:line="47" pos:column="22"/></operator></expr>;<pos:position pos:line="47" pos:column="23"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

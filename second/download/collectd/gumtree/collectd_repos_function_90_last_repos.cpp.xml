<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_90_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_memory_stats<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">virDomainPtr<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">domain<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">virDomainMemoryStatPtr<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">minfo<pos:position pos:line="2" pos:column="31"/></name> <init pos:line="2" pos:column="32">=
      <expr><call><name pos:line="3" pos:column="7">calloc<pos:position pos:line="3" pos:column="13"/></name><argument_list pos:line="3" pos:column="13">(<argument><expr><name pos:line="3" pos:column="14">VIR_DOMAIN_MEMORY_STAT_NR<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="41">sizeof<argument_list pos:line="3" pos:column="47">(<argument><expr><name pos:line="3" pos:column="48">virDomainMemoryStatStruct<pos:position pos:line="3" pos:column="73"/></name></expr></argument>)<pos:position pos:line="3" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="76"/></decl_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">minfo<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr>)<pos:position pos:line="4" pos:column="21"/></condition><then pos:line="4" pos:column="21"> <block pos:line="4" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><literal type="string" pos:line="5" pos:column="11">"virt plugin: malloc failed."<pos:position pos:line="5" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">mem_stats<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">=
      <expr><call><name pos:line="10" pos:column="7">virDomainMemoryStats<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">domain<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">minfo<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">VIR_DOMAIN_MEMORY_STAT_NR<pos:position pos:line="10" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="70">0<pos:position pos:line="10" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="73"/></decl_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">mem_stats<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&lt;<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"virt plugin: virDomainMemoryStats failed with mem_stats %i."<pos:position pos:line="12" pos:column="72"/></literal></expr></argument>,
          <argument><expr><name pos:line="13" pos:column="11">mem_stats<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">sfree<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><name pos:line="14" pos:column="11">minfo<pos:position pos:line="14" pos:column="16"/></name></expr></argument>)<pos:position pos:line="14" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">mem_stats<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <for pos:line="18" pos:column="3">for <control pos:line="18" pos:column="7">(<init><decl><type><name pos:line="18" pos:column="8">int<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">i<pos:position pos:line="18" pos:column="13"/></name> <init pos:line="18" pos:column="14">= <expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="18"/></init> <condition><expr><name pos:line="18" pos:column="19">i<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">&lt;<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="23">mem_stats<pos:position pos:line="18" pos:column="32"/></name></expr>;<pos:position pos:line="18" pos:column="33"/></condition> <incr><expr><name pos:line="18" pos:column="34">i<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">++<pos:position pos:line="18" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">memory_stats_submit<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">gauge_t<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">)<pos:position pos:line="19" pos:column="34"/></operator><name><name pos:line="19" pos:column="34">minfo<pos:position pos:line="19" pos:column="39"/></name><index pos:line="19" pos:column="39">[<expr><name pos:line="19" pos:column="40">i<pos:position pos:line="19" pos:column="41"/></name></expr>]<pos:position pos:line="19" pos:column="42"/></index></name><operator pos:line="19" pos:column="42">.<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">val<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">*<pos:position pos:line="19" pos:column="48"/></operator> <literal type="number" pos:line="19" pos:column="49">1024<pos:position pos:line="19" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="55">domain<pos:position pos:line="19" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="63">minfo<pos:position pos:line="19" pos:column="68"/></name><index pos:line="19" pos:column="68">[<expr><name pos:line="19" pos:column="69">i<pos:position pos:line="19" pos:column="70"/></name></expr>]<pos:position pos:line="19" pos:column="71"/></index></name><operator pos:line="19" pos:column="71">.<pos:position pos:line="19" pos:column="72"/></operator><name pos:line="19" pos:column="72">tag<pos:position pos:line="19" pos:column="75"/></name></expr></argument>)<pos:position pos:line="19" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="77"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">sfree<pos:position pos:line="21" pos:column="8"/></name><argument_list pos:line="21" pos:column="8">(<argument><expr><name pos:line="21" pos:column="9">minfo<pos:position pos:line="21" pos:column="14"/></name></expr></argument>)<pos:position pos:line="21" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
  <return pos:line="22" pos:column="3">return <expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>;<pos:position pos:line="22" pos:column="12"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

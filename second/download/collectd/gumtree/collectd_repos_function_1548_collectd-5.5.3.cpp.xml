<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1548_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cc_add_daemon_config<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">oconfig_item_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ci<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">ret<pos:position pos:line="3" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="14">i<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">ceph_daemon<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">nd<pos:position pos:line="4" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="29">cd<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">ceph_daemon<pos:position pos:line="5" pos:column="23"/></name></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier><modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">tmp<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">memset<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><operator pos:line="6" pos:column="12">&amp;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="13">cd<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="20">sizeof<argument_list pos:line="6" pos:column="26">(<argument><expr pos:line="6" pos:column="27">struct <name pos:line="6" pos:column="34">ceph_daemon<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt>

    <if pos:line="8" pos:column="5">if<condition pos:line="8" pos:column="7">(<expr><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name><name pos:line="8" pos:column="9">ci<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">values_num<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">!=<pos:position pos:line="8" pos:column="26"/></operator> <literal type="number" pos:line="8" pos:column="27">1<pos:position pos:line="8" pos:column="28"/></literal><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">||<pos:position pos:line="8" pos:column="32"/></operator> <operator pos:line="8" pos:column="33">(<pos:position pos:line="8" pos:column="34"/></operator><name><name pos:line="8" pos:column="34">ci<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">values<pos:position pos:line="8" pos:column="44"/></name><index pos:line="8" pos:column="44">[<expr><literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr>]<pos:position pos:line="8" pos:column="47"/></index></name><operator pos:line="8" pos:column="47">.<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">type<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">!=<pos:position pos:line="8" pos:column="55"/></operator> <name pos:line="8" pos:column="56">OCONFIG_TYPE_STRING<pos:position pos:line="8" pos:column="75"/></name><operator pos:line="8" pos:column="75">)<pos:position pos:line="8" pos:column="76"/></operator></expr>)<pos:position pos:line="8" pos:column="77"/></condition><then pos:line="8" pos:column="77">
    <block pos:line="9" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">WARNING<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><literal type="string" pos:line="10" pos:column="17">"ceph plugin: `Daemon' blocks need exactly one string "<pos:position pos:line="10" pos:column="72"/></literal>
                <literal type="string" pos:line="11" pos:column="17">"argument."<pos:position pos:line="11" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><operator pos:line="12" pos:column="17">-<pos:position pos:line="12" pos:column="18"/></operator><literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal><operator pos:line="12" pos:column="19">)<pos:position pos:line="12" pos:column="20"/></operator></expr>;<pos:position pos:line="12" pos:column="21"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">ret<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <call><name pos:line="15" pos:column="11">cc_handle_str<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">ci<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="29">cd<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="32">name<pos:position pos:line="15" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">DATA_MAX_NAME_LEN<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
    <if pos:line="16" pos:column="5">if<condition pos:line="16" pos:column="7">(<expr><name pos:line="16" pos:column="8">ret<pos:position pos:line="16" pos:column="11"/></name></expr>)<pos:position pos:line="16" pos:column="12"/></condition><then pos:line="16" pos:column="12">
    <block pos:line="17" pos:column="5">{
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">ret<pos:position pos:line="18" pos:column="19"/></name></expr>;<pos:position pos:line="18" pos:column="20"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <for pos:line="21" pos:column="5">for<control pos:line="21" pos:column="8">(<init><expr><name pos:line="21" pos:column="9">i<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator><literal type="number" pos:line="21" pos:column="11">0<pos:position pos:line="21" pos:column="12"/></literal></expr>;<pos:position pos:line="21" pos:column="13"/></init> <condition><expr><name pos:line="21" pos:column="14">i<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">&lt;<pos:position pos:line="21" pos:column="20"/></operator> <name><name pos:line="21" pos:column="18">ci<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">children_num<pos:position pos:line="21" pos:column="34"/></name></name></expr>;<pos:position pos:line="21" pos:column="35"/></condition> <incr><expr><name pos:line="21" pos:column="36">i<pos:position pos:line="21" pos:column="37"/></name><operator pos:line="21" pos:column="37">++<pos:position pos:line="21" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="40"/></control>
    <block pos:line="22" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">oconfig_item_t<pos:position pos:line="23" pos:column="23"/></name> <modifier pos:line="23" pos:column="24">*<pos:position pos:line="23" pos:column="25"/></modifier></type><name pos:line="23" pos:column="25">child<pos:position pos:line="23" pos:column="30"/></name> <init pos:line="23" pos:column="31">= <expr><name><name pos:line="23" pos:column="33">ci<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">children<pos:position pos:line="23" pos:column="45"/></name></name> <operator pos:line="23" pos:column="46">+<pos:position pos:line="23" pos:column="47"/></operator> <name pos:line="23" pos:column="48">i<pos:position pos:line="23" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="50"/></decl_stmt>

        <if pos:line="25" pos:column="9">if<condition pos:line="25" pos:column="11">(<expr><call><name pos:line="25" pos:column="12">strcasecmp<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><literal type="string" pos:line="25" pos:column="23">"SocketPath"<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="37">child<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">key<pos:position pos:line="25" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="48"/></argument_list></call> <operator pos:line="25" pos:column="49">==<pos:position pos:line="25" pos:column="51"/></operator> <literal type="number" pos:line="25" pos:column="52">0<pos:position pos:line="25" pos:column="53"/></literal></expr>)<pos:position pos:line="25" pos:column="54"/></condition><then pos:line="25" pos:column="54">
        <block pos:line="26" pos:column="9">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">ret<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">cc_handle_str<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">child<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="40">cd<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">.<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">asok_path<pos:position pos:line="27" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="54">sizeof<argument_list pos:line="27" pos:column="60">(<argument><expr><name><name pos:line="27" pos:column="61">cd<pos:position pos:line="27" pos:column="63"/></name><operator pos:line="27" pos:column="63">.<pos:position pos:line="27" pos:column="64"/></operator><name pos:line="27" pos:column="64">asok_path<pos:position pos:line="27" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="76"/></expr_stmt>
            <if pos:line="28" pos:column="13">if<condition pos:line="28" pos:column="15">(<expr><name pos:line="28" pos:column="16">ret<pos:position pos:line="28" pos:column="19"/></name></expr>)<pos:position pos:line="28" pos:column="20"/></condition><then pos:line="28" pos:column="20">
            <block pos:line="29" pos:column="13">{
                <return pos:line="30" pos:column="17">return <expr><name pos:line="30" pos:column="24">ret<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></return>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then>
        <else pos:line="33" pos:column="9">else
        <block pos:line="34" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">WARNING<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><literal type="string" pos:line="35" pos:column="21">"ceph plugin: ignoring unknown option %s"<pos:position pos:line="35" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="64">child<pos:position pos:line="35" pos:column="69"/></name><operator pos:line="35" pos:column="69">-&gt;<pos:position pos:line="35" pos:column="74"/></operator><name pos:line="35" pos:column="71">key<pos:position pos:line="35" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></for>
    <if pos:line="38" pos:column="5">if<condition pos:line="38" pos:column="7">(<expr><name><name pos:line="38" pos:column="8">cd<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">.<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">name<pos:position pos:line="38" pos:column="15"/></name><index pos:line="38" pos:column="15">[<expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr>]<pos:position pos:line="38" pos:column="18"/></index></name> <operator pos:line="38" pos:column="19">==<pos:position pos:line="38" pos:column="21"/></operator> <literal type="char" pos:line="38" pos:column="22">'\0'<pos:position pos:line="38" pos:column="26"/></literal></expr>)<pos:position pos:line="38" pos:column="27"/></condition><then pos:line="38" pos:column="27">
    <block pos:line="39" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">ERROR<pos:position pos:line="40" pos:column="14"/></name><argument_list pos:line="40" pos:column="14">(<argument><expr><literal type="string" pos:line="40" pos:column="15">"ceph plugin: you must configure a daemon name.\n"<pos:position pos:line="40" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="67"/></expr_stmt>
        <return pos:line="41" pos:column="9">return <expr><operator pos:line="41" pos:column="16">-<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">EINVAL<pos:position pos:line="41" pos:column="23"/></name></expr>;<pos:position pos:line="41" pos:column="24"/></return>
    }<pos:position pos:line="42" pos:column="6"/></block></then>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if<condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">cd<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">.<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">asok_path<pos:position pos:line="43" pos:column="25"/></name><index pos:line="43" pos:column="25">[<expr><literal type="number" pos:line="43" pos:column="26">0<pos:position pos:line="43" pos:column="27"/></literal></expr>]<pos:position pos:line="43" pos:column="28"/></index></name> <operator pos:line="43" pos:column="29">==<pos:position pos:line="43" pos:column="31"/></operator> <literal type="char" pos:line="43" pos:column="32">'\0'<pos:position pos:line="43" pos:column="36"/></literal></expr>)<pos:position pos:line="43" pos:column="37"/></condition><then pos:line="43" pos:column="37">
    <block pos:line="44" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">ERROR<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><literal type="string" pos:line="45" pos:column="15">"ceph plugin(name=%s): you must configure an administrative "<pos:position pos:line="45" pos:column="76"/></literal>
        <literal type="string" pos:line="46" pos:column="9">"socket path.\n"<pos:position pos:line="46" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="27">cd<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">.<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="30">name<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
        <return pos:line="47" pos:column="9">return <expr><operator pos:line="47" pos:column="16">-<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">EINVAL<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if<condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><operator pos:line="49" pos:column="14">(<pos:position pos:line="49" pos:column="15"/></operator><operator pos:line="49" pos:column="15">(<pos:position pos:line="49" pos:column="16"/></operator><name><name pos:line="49" pos:column="16">cd<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">.<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">asok_path<pos:position pos:line="49" pos:column="28"/></name><index pos:line="49" pos:column="28">[<expr><literal type="number" pos:line="49" pos:column="29">0<pos:position pos:line="49" pos:column="30"/></literal></expr>]<pos:position pos:line="49" pos:column="31"/></index></name> <operator pos:line="49" pos:column="32">==<pos:position pos:line="49" pos:column="34"/></operator> <literal type="char" pos:line="49" pos:column="35">'/'<pos:position pos:line="49" pos:column="38"/></literal><operator pos:line="49" pos:column="38">)<pos:position pos:line="49" pos:column="39"/></operator> <operator pos:line="49" pos:column="40">||<pos:position pos:line="49" pos:column="42"/></operator>
            <operator pos:line="50" pos:column="13">(<pos:position pos:line="50" pos:column="14"/></operator><name><name pos:line="50" pos:column="14">cd<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">asok_path<pos:position pos:line="50" pos:column="26"/></name><index pos:line="50" pos:column="26">[<expr><literal type="number" pos:line="50" pos:column="27">0<pos:position pos:line="50" pos:column="28"/></literal></expr>]<pos:position pos:line="50" pos:column="29"/></index></name> <operator pos:line="50" pos:column="30">==<pos:position pos:line="50" pos:column="32"/></operator> <literal type="char" pos:line="50" pos:column="33">'.'<pos:position pos:line="50" pos:column="36"/></literal> <operator pos:line="50" pos:column="37">&amp;&amp;<pos:position pos:line="50" pos:column="47"/></operator> <name><name pos:line="50" pos:column="40">cd<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">.<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="43">asok_path<pos:position pos:line="50" pos:column="52"/></name><index pos:line="50" pos:column="52">[<expr><literal type="number" pos:line="50" pos:column="53">1<pos:position pos:line="50" pos:column="54"/></literal></expr>]<pos:position pos:line="50" pos:column="55"/></index></name> <operator pos:line="50" pos:column="56">==<pos:position pos:line="50" pos:column="58"/></operator> <literal type="char" pos:line="50" pos:column="59">'/'<pos:position pos:line="50" pos:column="62"/></literal><operator pos:line="50" pos:column="62">)<pos:position pos:line="50" pos:column="63"/></operator><operator pos:line="50" pos:column="63">)<pos:position pos:line="50" pos:column="64"/></operator></expr>)<pos:position pos:line="50" pos:column="65"/></condition><then pos:line="50" pos:column="65">
    <block pos:line="51" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">ERROR<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(<argument><expr><literal type="string" pos:line="52" pos:column="15">"ceph plugin(name=%s): administrative socket paths must begin "<pos:position pos:line="52" pos:column="78"/></literal>
                <literal type="string" pos:line="53" pos:column="17">"with '/' or './' Can't parse: '%s'\n"<pos:position pos:line="53" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="57">cd<pos:position pos:line="53" pos:column="59"/></name><operator pos:line="53" pos:column="59">.<pos:position pos:line="53" pos:column="60"/></operator><name pos:line="53" pos:column="60">name<pos:position pos:line="53" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="66">cd<pos:position pos:line="53" pos:column="68"/></name><operator pos:line="53" pos:column="68">.<pos:position pos:line="53" pos:column="69"/></operator><name pos:line="53" pos:column="69">asok_path<pos:position pos:line="53" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="80"/></expr_stmt>
        <return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">-<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="17">EINVAL<pos:position pos:line="54" pos:column="23"/></name></expr>;<pos:position pos:line="54" pos:column="24"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="57" pos:column="5">tmp<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">=<pos:position pos:line="57" pos:column="10"/></operator> <call><name pos:line="57" pos:column="11">realloc<pos:position pos:line="57" pos:column="18"/></name><argument_list pos:line="57" pos:column="18">(<argument><expr><name pos:line="57" pos:column="19">g_daemons<pos:position pos:line="57" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="30">(<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="31">g_num_daemons<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">+<pos:position pos:line="57" pos:column="45"/></operator><literal type="number" pos:line="57" pos:column="45">1<pos:position pos:line="57" pos:column="46"/></literal><operator pos:line="57" pos:column="46">)<pos:position pos:line="57" pos:column="47"/></operator> <operator pos:line="57" pos:column="48">*<pos:position pos:line="57" pos:column="49"/></operator> <sizeof pos:line="57" pos:column="50">sizeof<argument_list pos:line="57" pos:column="56">(<argument><expr><operator pos:line="57" pos:column="57">*<pos:position pos:line="57" pos:column="58"/></operator><name pos:line="57" pos:column="58">g_daemons<pos:position pos:line="57" pos:column="67"/></name></expr></argument>)<pos:position pos:line="57" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="57" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="70"/></expr_stmt>
    <if pos:line="58" pos:column="5">if<condition pos:line="58" pos:column="7">(<expr><name pos:line="58" pos:column="8">tmp<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">==<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">NULL<pos:position pos:line="58" pos:column="19"/></name></expr>)<pos:position pos:line="58" pos:column="20"/></condition><then pos:line="58" pos:column="20">
    <block pos:line="59" pos:column="5">{
        <comment type="block" pos:line="60" pos:column="9">/* The positive return value here indicates that this is a
         * runtime error, not a configuration error.  */</comment>
        <return pos:line="62" pos:column="9">return <expr><name pos:line="62" pos:column="16">ENOMEM<pos:position pos:line="62" pos:column="22"/></name></expr>;<pos:position pos:line="62" pos:column="23"/></return>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="64" pos:column="5">g_daemons<pos:position pos:line="64" pos:column="14"/></name> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <name pos:line="64" pos:column="17">tmp<pos:position pos:line="64" pos:column="20"/></name></expr>;<pos:position pos:line="64" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="66" pos:column="5">nd<pos:position pos:line="66" pos:column="7"/></name> <operator pos:line="66" pos:column="8">=<pos:position pos:line="66" pos:column="9"/></operator> <call><name pos:line="66" pos:column="10">malloc<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><sizeof pos:line="66" pos:column="17">sizeof<argument_list pos:line="66" pos:column="23">(<argument><expr><operator pos:line="66" pos:column="24">*<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="25">nd<pos:position pos:line="66" pos:column="27"/></name></expr></argument>)<pos:position pos:line="66" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>
    <if pos:line="67" pos:column="5">if<condition pos:line="67" pos:column="7">(<expr><operator pos:line="67" pos:column="8">!<pos:position pos:line="67" pos:column="9"/></operator><name pos:line="67" pos:column="9">nd<pos:position pos:line="67" pos:column="11"/></name></expr>)<pos:position pos:line="67" pos:column="12"/></condition><then pos:line="67" pos:column="12">
    <block pos:line="68" pos:column="5">{
        <return pos:line="69" pos:column="9">return <expr><name pos:line="69" pos:column="16">ENOMEM<pos:position pos:line="69" pos:column="22"/></name></expr>;<pos:position pos:line="69" pos:column="23"/></return>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">memcpy<pos:position pos:line="71" pos:column="11"/></name><argument_list pos:line="71" pos:column="11">(<argument><expr><name pos:line="71" pos:column="12">nd<pos:position pos:line="71" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="71" pos:column="16">&amp;<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="17">cd<pos:position pos:line="71" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="21">sizeof<argument_list pos:line="71" pos:column="27">(<argument><expr><operator pos:line="71" pos:column="28">*<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="29">nd<pos:position pos:line="71" pos:column="31"/></name></expr></argument>)<pos:position pos:line="71" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">g_daemons<pos:position pos:line="72" pos:column="14"/></name><index pos:line="72" pos:column="14">[<expr><name pos:line="72" pos:column="15">g_num_daemons<pos:position pos:line="72" pos:column="28"/></name><operator pos:line="72" pos:column="28">++<pos:position pos:line="72" pos:column="30"/></operator></expr>]<pos:position pos:line="72" pos:column="31"/></index></name> <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <name pos:line="72" pos:column="34">nd<pos:position pos:line="72" pos:column="36"/></name></expr>;<pos:position pos:line="72" pos:column="37"/></expr_stmt>
    <return pos:line="73" pos:column="5">return <expr><literal type="number" pos:line="73" pos:column="12">0<pos:position pos:line="73" pos:column="13"/></literal></expr>;<pos:position pos:line="73" pos:column="14"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

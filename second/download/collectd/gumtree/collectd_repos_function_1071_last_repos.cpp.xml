<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1071_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">socket_close<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">socket_adapter_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">self<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name> <init pos:line="2" pos:column="11">= <expr><literal type="number" pos:line="2" pos:column="13">0<pos:position pos:line="2" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="15"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">pthread_rwlock_rdlock<pos:position pos:line="3" pos:column="24"/></name><argument_list pos:line="3" pos:column="24">(<argument><expr><operator pos:line="3" pos:column="25">&amp;<pos:position pos:line="3" pos:column="30"/></operator><name><name pos:line="3" pos:column="26">self<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">-&gt;<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="32">lock<pos:position pos:line="3" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="38"/></expr_stmt>
  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">fcntl<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name><name pos:line="4" pos:column="13">self<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">sock_fd<pos:position pos:line="4" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">F_GETFL<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call> <operator pos:line="4" pos:column="37">!=<pos:position pos:line="4" pos:column="39"/></operator> <operator pos:line="4" pos:column="40">-<pos:position pos:line="4" pos:column="41"/></operator><literal type="number" pos:line="4" pos:column="41">1<pos:position pos:line="4" pos:column="42"/></literal></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <block pos:line="4" pos:column="44">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">errbuf<pos:position pos:line="5" pos:column="16"/></name><index pos:line="5" pos:column="16">[<expr><name pos:line="5" pos:column="17">MCELOG_BUFF_SIZE<pos:position pos:line="5" pos:column="33"/></name></expr>]<pos:position pos:line="5" pos:column="34"/></index></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">shutdown<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name><name pos:line="6" pos:column="18">self<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">sock_fd<pos:position pos:line="6" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">SHUT_RDWR<pos:position pos:line="6" pos:column="42"/></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call> <operator pos:line="6" pos:column="44">!=<pos:position pos:line="6" pos:column="46"/></operator> <literal type="number" pos:line="6" pos:column="47">0<pos:position pos:line="6" pos:column="48"/></literal></expr>)<pos:position pos:line="6" pos:column="49"/></condition><then pos:line="6" pos:column="49"> <block pos:line="6" pos:column="50">{
      <expr_stmt><expr><call><name pos:line="7" pos:column="7">ERROR<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">MCELOG_PLUGIN<pos:position pos:line="7" pos:column="26"/></name> <literal type="string" pos:line="7" pos:column="27">": Socket shutdown failed: %s"<pos:position pos:line="7" pos:column="57"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="8" pos:column="13">sstrerror<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">errno<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">errbuf<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="38">sizeof<argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">errbuf<pos:position pos:line="8" pos:column="51"/></name></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="9" pos:column="7">ret<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">close<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">self<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">sock_fd<pos:position pos:line="11" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call> <operator pos:line="11" pos:column="30">!=<pos:position pos:line="11" pos:column="32"/></operator> <literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35"> <block pos:line="11" pos:column="36">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">ERROR<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">MCELOG_PLUGIN<pos:position pos:line="12" pos:column="26"/></name> <literal type="string" pos:line="12" pos:column="27">": Socket close failed: %s"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="13" pos:column="13">sstrerror<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">errno<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">errbuf<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="38">sizeof<argument_list pos:line="13" pos:column="44">(<argument><expr><name pos:line="13" pos:column="45">errbuf<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">ret<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">pthread_rwlock_unlock<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><operator pos:line="17" pos:column="25">&amp;<pos:position pos:line="17" pos:column="30"/></operator><name><name pos:line="17" pos:column="26">self<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">lock<pos:position pos:line="17" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
  <return pos:line="18" pos:column="3">return <expr><name pos:line="18" pos:column="10">ret<pos:position pos:line="18" pos:column="13"/></name></expr>;<pos:position pos:line="18" pos:column="14"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_746_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mach_get_task_name<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">task_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">t<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">pid<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">name<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">size_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">name_max_len<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list> <block pos:line="2" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name><name pos:line="3" pos:column="7">mib<pos:position pos:line="3" pos:column="10"/></name><index pos:line="3" pos:column="10">[<expr><literal type="number" pos:line="3" pos:column="11">4<pos:position pos:line="3" pos:column="12"/></literal></expr>]<pos:position pos:line="3" pos:column="13"/></index></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">kinfo_proc<pos:position pos:line="5" pos:column="20"/></name></name></type> <name pos:line="5" pos:column="21">kp<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">kp_size<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="8" pos:column="3">mib<pos:position pos:line="8" pos:column="6"/></name><index pos:line="8" pos:column="6">[<expr><literal type="number" pos:line="8" pos:column="7">0<pos:position pos:line="8" pos:column="8"/></literal></expr>]<pos:position pos:line="8" pos:column="9"/></index></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <name pos:line="8" pos:column="12">CTL_KERN<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">mib<pos:position pos:line="9" pos:column="6"/></name><index pos:line="9" pos:column="6">[<expr><literal type="number" pos:line="9" pos:column="7">1<pos:position pos:line="9" pos:column="8"/></literal></expr>]<pos:position pos:line="9" pos:column="9"/></index></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">KERN_PROC<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">mib<pos:position pos:line="10" pos:column="6"/></name><index pos:line="10" pos:column="6">[<expr><literal type="number" pos:line="10" pos:column="7">2<pos:position pos:line="10" pos:column="8"/></literal></expr>]<pos:position pos:line="10" pos:column="9"/></index></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">KERN_PROC_PID<pos:position pos:line="10" pos:column="25"/></name></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">pid_for_task<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">t<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">pid<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call> <operator pos:line="12" pos:column="28">!=<pos:position pos:line="12" pos:column="30"/></operator> <name pos:line="12" pos:column="31">KERN_SUCCESS<pos:position pos:line="12" pos:column="43"/></name></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">mib<pos:position pos:line="14" pos:column="6"/></name><index pos:line="14" pos:column="6">[<expr><literal type="number" pos:line="14" pos:column="7">3<pos:position pos:line="14" pos:column="8"/></literal></expr>]<pos:position pos:line="14" pos:column="9"/></index></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <operator pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">pid<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">kp_size<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <sizeof pos:line="16" pos:column="13">sizeof<argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">kp<pos:position pos:line="16" pos:column="22"/></name></expr></argument>)<pos:position pos:line="16" pos:column="23"/></argument_list></sizeof></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><call><name pos:line="17" pos:column="7">sysctl<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">mib<pos:position pos:line="17" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="19">4<pos:position pos:line="17" pos:column="20"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="22">&amp;<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="23">kp<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="27">&amp;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="28">kp_size<pos:position pos:line="17" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="37">NULL<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="43">0<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call> <operator pos:line="17" pos:column="46">!=<pos:position pos:line="17" pos:column="48"/></operator> <literal type="number" pos:line="17" pos:column="49">0<pos:position pos:line="17" pos:column="50"/></literal></expr>)<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator><literal type="number" pos:line="18" pos:column="14">1<pos:position pos:line="18" pos:column="15"/></literal><operator pos:line="18" pos:column="15">)<pos:position pos:line="18" pos:column="16"/></operator></expr>;<pos:position pos:line="18" pos:column="17"/></return></block></then></if>

  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">name_max_len<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&gt;<pos:position pos:line="20" pos:column="24"/></operator> <operator pos:line="20" pos:column="22">(<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">MAXCOMLEN<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">+<pos:position pos:line="20" pos:column="34"/></operator> <literal type="number" pos:line="20" pos:column="35">1<pos:position pos:line="20" pos:column="36"/></literal><operator pos:line="20" pos:column="36">)<pos:position pos:line="20" pos:column="37"/></operator></expr>)<pos:position pos:line="20" pos:column="38"/></condition><then pos:line="20" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="5">name_max_len<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">MAXCOMLEN<pos:position pos:line="21" pos:column="29"/></name> <operator pos:line="21" pos:column="30">+<pos:position pos:line="21" pos:column="31"/></operator> <literal type="number" pos:line="21" pos:column="32">1<pos:position pos:line="21" pos:column="33"/></literal></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">strncpy<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><name pos:line="23" pos:column="11">name<pos:position pos:line="23" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="17">kp<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">.<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">kp_proc<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">.<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="28">p_comm<pos:position pos:line="23" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">name_max_len<pos:position pos:line="23" pos:column="48"/></name> <operator pos:line="23" pos:column="49">-<pos:position pos:line="23" pos:column="50"/></operator> <literal type="number" pos:line="23" pos:column="51">1<pos:position pos:line="23" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="24" pos:column="3">name<pos:position pos:line="24" pos:column="7"/></name><index pos:line="24" pos:column="7">[<expr><name pos:line="24" pos:column="8">name_max_len<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">-<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="23">1<pos:position pos:line="24" pos:column="24"/></literal></expr>]<pos:position pos:line="24" pos:column="25"/></index></name> <operator pos:line="24" pos:column="26">=<pos:position pos:line="24" pos:column="27"/></operator> <literal type="char" pos:line="24" pos:column="28">'\0'<pos:position pos:line="24" pos:column="32"/></literal></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">DEBUG<pos:position pos:line="26" pos:column="8"/></name><argument_list pos:line="26" pos:column="8">(<argument><expr><literal type="string" pos:line="26" pos:column="9">"pid = %i; name = %s;"<pos:position pos:line="26" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="33">*<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="34">pid<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="39">name<pos:position pos:line="26" pos:column="43"/></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* We don't do the special handling for `p_comm == "LaunchCFMApp"' as
   * `top' does it, because it is a lot of work and only used when
   * debugging. -octo */</comment>

  <return pos:line="32" pos:column="3">return <expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><literal type="number" pos:line="32" pos:column="11">0<pos:position pos:line="32" pos:column="12"/></literal><operator pos:line="32" pos:column="12">)<pos:position pos:line="32" pos:column="13"/></operator></expr>;<pos:position pos:line="32" pos:column="14"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

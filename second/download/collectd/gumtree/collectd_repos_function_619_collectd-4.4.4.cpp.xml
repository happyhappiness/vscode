<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_619_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_cache_insert<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">filename<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">value<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">time_t<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">value_time<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">rrd_cache_t<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">rc<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">new_rc<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><literal type="number" pos:line="5" pos:column="22">0<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier><modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">values_new<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">pthread_mutex_lock<pos:position pos:line="8" pos:column="27"/></name> <argument_list pos:line="8" pos:column="28">(<argument><expr><operator pos:line="8" pos:column="29">&amp;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="30">cache_lock<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="10" pos:column="9">c_avl_get<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">cache<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="27">filename<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="37">(<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">void<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">*<pos:position pos:line="10" pos:column="44"/></operator><operator pos:line="10" pos:column="44">)<pos:position pos:line="10" pos:column="45"/></operator> <operator pos:line="10" pos:column="46">&amp;<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="47">rc<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">rc<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">NULL<pos:position pos:line="12" pos:column="23"/></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
	<block pos:line="13" pos:column="9">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">rc<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">(<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">rrd_cache_t<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">*<pos:position pos:line="14" pos:column="36"/></operator><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator> <call><name pos:line="14" pos:column="38">malloc<pos:position pos:line="14" pos:column="44"/></name> <argument_list pos:line="14" pos:column="45">(<argument><expr><sizeof pos:line="14" pos:column="46">sizeof <argument_list pos:line="14" pos:column="53">(<argument><expr><name pos:line="14" pos:column="54">rrd_cache_t<pos:position pos:line="14" pos:column="65"/></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
		<if pos:line="15" pos:column="17">if <condition pos:line="15" pos:column="20">(<expr><name pos:line="15" pos:column="21">rc<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">==<pos:position pos:line="15" pos:column="26"/></operator> <name pos:line="15" pos:column="27">NULL<pos:position pos:line="15" pos:column="31"/></name></expr>)<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32">
			<block type="pseudo"><return pos:line="16" pos:column="25">return <expr><operator pos:line="16" pos:column="32">(<pos:position pos:line="16" pos:column="33"/></operator><operator pos:line="16" pos:column="33">-<pos:position pos:line="16" pos:column="34"/></operator><literal type="number" pos:line="16" pos:column="34">1<pos:position pos:line="16" pos:column="35"/></literal><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator></expr>;<pos:position pos:line="16" pos:column="37"/></return></block></then></if>
		<expr_stmt><expr><name><name pos:line="17" pos:column="17">rc<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">values_num<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <literal type="number" pos:line="17" pos:column="34">0<pos:position pos:line="17" pos:column="35"/></literal></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="18" pos:column="17">rc<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">values<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="30">NULL<pos:position pos:line="18" pos:column="34"/></name></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="19" pos:column="17">rc<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">first_value<pos:position pos:line="19" pos:column="32"/></name></name> <operator pos:line="19" pos:column="33">=<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="20" pos:column="17">rc<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">-&gt;<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="21">last_value<pos:position pos:line="20" pos:column="31"/></name></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <literal type="number" pos:line="20" pos:column="34">0<pos:position pos:line="20" pos:column="35"/></literal></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="21" pos:column="17">rc<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">flags<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name pos:line="21" pos:column="29">FLAG_NONE<pos:position pos:line="21" pos:column="38"/></name></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">new_rc<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">rc<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">last_value<pos:position pos:line="25" pos:column="27"/></name></name> <operator pos:line="25" pos:column="28">&gt;=<pos:position pos:line="25" pos:column="33"/></operator> <name pos:line="25" pos:column="31">value_time<pos:position pos:line="25" pos:column="41"/></name></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42">
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">pthread_mutex_unlock<pos:position pos:line="27" pos:column="37"/></name> <argument_list pos:line="27" pos:column="38">(<argument><expr><operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="40">cache_lock<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="28" pos:column="17">WARNING<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="string" pos:line="28" pos:column="26">"rrdtool plugin: (rc-&gt;last_value = %u) &gt;= (value_time = %u)"<pos:position pos:line="28" pos:column="92"/></literal></expr></argument>,
				<argument><expr><operator pos:line="29" pos:column="33">(<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">unsigned<pos:position pos:line="29" pos:column="42"/></name> <name pos:line="29" pos:column="43">int<pos:position pos:line="29" pos:column="46"/></name><operator pos:line="29" pos:column="46">)<pos:position pos:line="29" pos:column="47"/></operator> <name><name pos:line="29" pos:column="48">rc<pos:position pos:line="29" pos:column="50"/></name><operator pos:line="29" pos:column="50">-&gt;<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="52">last_value<pos:position pos:line="29" pos:column="62"/></name></name></expr></argument>,
				<argument><expr><operator pos:line="30" pos:column="33">(<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">unsigned<pos:position pos:line="30" pos:column="42"/></name> <name pos:line="30" pos:column="43">int<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">)<pos:position pos:line="30" pos:column="47"/></operator> <name pos:line="30" pos:column="48">value_time<pos:position pos:line="30" pos:column="58"/></name></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="60"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><operator pos:line="31" pos:column="25">-<pos:position pos:line="31" pos:column="26"/></operator><literal type="number" pos:line="31" pos:column="26">1<pos:position pos:line="31" pos:column="27"/></literal><operator pos:line="31" pos:column="27">)<pos:position pos:line="31" pos:column="28"/></operator></expr>;<pos:position pos:line="31" pos:column="29"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="34" pos:column="9">values_new<pos:position pos:line="34" pos:column="19"/></name> <operator pos:line="34" pos:column="20">=<pos:position pos:line="34" pos:column="21"/></operator> <operator pos:line="34" pos:column="22">(<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">char<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></operator><operator pos:line="34" pos:column="29">*<pos:position pos:line="34" pos:column="30"/></operator><operator pos:line="34" pos:column="30">)<pos:position pos:line="34" pos:column="31"/></operator> <call><name pos:line="34" pos:column="32">realloc<pos:position pos:line="34" pos:column="39"/></name> <argument_list pos:line="34" pos:column="40">(<argument><expr><operator pos:line="34" pos:column="41">(<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="42">void<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">*<pos:position pos:line="34" pos:column="48"/></operator><operator pos:line="34" pos:column="48">)<pos:position pos:line="34" pos:column="49"/></operator> <name><name pos:line="34" pos:column="50">rc<pos:position pos:line="34" pos:column="52"/></name><operator pos:line="34" pos:column="52">-&gt;<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="54">values<pos:position pos:line="34" pos:column="60"/></name></name></expr></argument>,
			<argument><expr><operator pos:line="35" pos:column="25">(<pos:position pos:line="35" pos:column="26"/></operator><name><name pos:line="35" pos:column="26">rc<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">-&gt;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="30">values_num<pos:position pos:line="35" pos:column="40"/></name></name> <operator pos:line="35" pos:column="41">+<pos:position pos:line="35" pos:column="42"/></operator> <literal type="number" pos:line="35" pos:column="43">1<pos:position pos:line="35" pos:column="44"/></literal><operator pos:line="35" pos:column="44">)<pos:position pos:line="35" pos:column="45"/></operator> <operator pos:line="35" pos:column="46">*<pos:position pos:line="35" pos:column="47"/></operator> <sizeof pos:line="35" pos:column="48">sizeof <argument_list pos:line="35" pos:column="55">(<argument><expr><name pos:line="35" pos:column="56">char<pos:position pos:line="35" pos:column="60"/></name> <operator pos:line="35" pos:column="61">*<pos:position pos:line="35" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">values_new<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">==<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">NULL<pos:position pos:line="36" pos:column="31"/></name></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32">
	<block pos:line="37" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="38" pos:column="17">char<pos:position pos:line="38" pos:column="21"/></name></type> <name><name pos:line="38" pos:column="22">errbuf<pos:position pos:line="38" pos:column="28"/></name><index pos:line="38" pos:column="28">[<expr><literal type="number" pos:line="38" pos:column="29">1024<pos:position pos:line="38" pos:column="33"/></literal></expr>]<pos:position pos:line="38" pos:column="34"/></index></name></decl>;<pos:position pos:line="38" pos:column="35"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="39" pos:column="17">void<pos:position pos:line="39" pos:column="21"/></name> <modifier pos:line="39" pos:column="22">*<pos:position pos:line="39" pos:column="23"/></modifier></type><name pos:line="39" pos:column="23">cache_key<pos:position pos:line="39" pos:column="32"/></name> <init pos:line="39" pos:column="33">= <expr><name pos:line="39" pos:column="35">NULL<pos:position pos:line="39" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="40"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="41" pos:column="17">sstrerror<pos:position pos:line="41" pos:column="26"/></name> <argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">errno<pos:position pos:line="41" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="35">errbuf<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="43">sizeof <argument_list pos:line="41" pos:column="50">(<argument><expr><name pos:line="41" pos:column="51">errbuf<pos:position pos:line="41" pos:column="57"/></name></expr></argument>)<pos:position pos:line="41" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="43" pos:column="17">c_avl_remove<pos:position pos:line="43" pos:column="29"/></name> <argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">cache<pos:position pos:line="43" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="38">filename<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="48">&amp;<pos:position pos:line="43" pos:column="53"/></operator><name pos:line="43" pos:column="49">cache_key<pos:position pos:line="43" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="60">NULL<pos:position pos:line="43" pos:column="64"/></name></expr></argument>)<pos:position pos:line="43" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="66"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="44" pos:column="17">pthread_mutex_unlock<pos:position pos:line="44" pos:column="37"/></name> <argument_list pos:line="44" pos:column="38">(<argument><expr><operator pos:line="44" pos:column="39">&amp;<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="40">cache_lock<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="46" pos:column="17">ERROR<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="string" pos:line="46" pos:column="24">"rrdtool plugin: realloc failed: %s"<pos:position pos:line="46" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="62">errbuf<pos:position pos:line="46" pos:column="68"/></name></expr></argument>)<pos:position pos:line="46" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="70"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="48" pos:column="17">sfree<pos:position pos:line="48" pos:column="22"/></name> <argument_list pos:line="48" pos:column="23">(<argument><expr><name pos:line="48" pos:column="24">cache_key<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">sfree<pos:position pos:line="49" pos:column="22"/></name> <argument_list pos:line="49" pos:column="23">(<argument><expr><name><name pos:line="49" pos:column="24">rc<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">-&gt;<pos:position pos:line="49" pos:column="31"/></operator><name pos:line="49" pos:column="28">values<pos:position pos:line="49" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">sfree<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">rc<pos:position pos:line="50" pos:column="26"/></name></expr></argument>)<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
		<return pos:line="51" pos:column="17">return <expr><operator pos:line="51" pos:column="24">(<pos:position pos:line="51" pos:column="25"/></operator><operator pos:line="51" pos:column="25">-<pos:position pos:line="51" pos:column="26"/></operator><literal type="number" pos:line="51" pos:column="26">1<pos:position pos:line="51" pos:column="27"/></literal><operator pos:line="51" pos:column="27">)<pos:position pos:line="51" pos:column="28"/></operator></expr>;<pos:position pos:line="51" pos:column="29"/></return>
	}<pos:position pos:line="52" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">rc<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">values<pos:position pos:line="53" pos:column="19"/></name></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <name pos:line="53" pos:column="22">values_new<pos:position pos:line="53" pos:column="32"/></name></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="55" pos:column="9">rc<pos:position pos:line="55" pos:column="11"/></name><operator pos:line="55" pos:column="11">-&gt;<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="13">values<pos:position pos:line="55" pos:column="19"/></name><index pos:line="55" pos:column="19">[<expr><name><name pos:line="55" pos:column="20">rc<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">values_num<pos:position pos:line="55" pos:column="34"/></name></name></expr>]<pos:position pos:line="55" pos:column="35"/></index></name> <operator pos:line="55" pos:column="36">=<pos:position pos:line="55" pos:column="37"/></operator> <call><name pos:line="55" pos:column="38">strdup<pos:position pos:line="55" pos:column="44"/></name> <argument_list pos:line="55" pos:column="45">(<argument><expr><name pos:line="55" pos:column="46">value<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="53"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">rc<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">values<pos:position pos:line="56" pos:column="23"/></name><index pos:line="56" pos:column="23">[<expr><name><name pos:line="56" pos:column="24">rc<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">-&gt;<pos:position pos:line="56" pos:column="31"/></operator><name pos:line="56" pos:column="28">values_num<pos:position pos:line="56" pos:column="38"/></name></name></expr>]<pos:position pos:line="56" pos:column="39"/></index></name> <operator pos:line="56" pos:column="40">!=<pos:position pos:line="56" pos:column="42"/></operator> <name pos:line="56" pos:column="43">NULL<pos:position pos:line="56" pos:column="47"/></name></expr>)<pos:position pos:line="56" pos:column="48"/></condition><then pos:line="56" pos:column="48">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="17">rc<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">-&gt;<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="21">values_num<pos:position pos:line="57" pos:column="31"/></name></name><operator pos:line="57" pos:column="31">++<pos:position pos:line="57" pos:column="33"/></operator></expr>;<pos:position pos:line="57" pos:column="34"/></expr_stmt></block></then></if>

	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><name><name pos:line="59" pos:column="13">rc<pos:position pos:line="59" pos:column="15"/></name><operator pos:line="59" pos:column="15">-&gt;<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="17">values_num<pos:position pos:line="59" pos:column="27"/></name></name> <operator pos:line="59" pos:column="28">==<pos:position pos:line="59" pos:column="30"/></operator> <literal type="number" pos:line="59" pos:column="31">1<pos:position pos:line="59" pos:column="32"/></literal></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="17">rc<pos:position pos:line="60" pos:column="19"/></name><operator pos:line="60" pos:column="19">-&gt;<pos:position pos:line="60" pos:column="24"/></operator><name pos:line="60" pos:column="21">first_value<pos:position pos:line="60" pos:column="32"/></name></name> <operator pos:line="60" pos:column="33">=<pos:position pos:line="60" pos:column="34"/></operator> <name pos:line="60" pos:column="35">value_time<pos:position pos:line="60" pos:column="45"/></name></expr>;<pos:position pos:line="60" pos:column="46"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name><name pos:line="61" pos:column="9">rc<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">last_value<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <name pos:line="61" pos:column="26">value_time<pos:position pos:line="61" pos:column="36"/></name></expr>;<pos:position pos:line="61" pos:column="37"/></expr_stmt>

	<comment type="block" pos:line="63" pos:column="9">/* Insert if this is the first value */</comment>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><name pos:line="64" pos:column="13">new_rc<pos:position pos:line="64" pos:column="19"/></name> <operator pos:line="64" pos:column="20">==<pos:position pos:line="64" pos:column="22"/></operator> <literal type="number" pos:line="64" pos:column="23">1<pos:position pos:line="64" pos:column="24"/></literal></expr>)<pos:position pos:line="64" pos:column="25"/></condition><then pos:line="64" pos:column="25">
	<block pos:line="65" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="66" pos:column="17">void<pos:position pos:line="66" pos:column="21"/></name> <modifier pos:line="66" pos:column="22">*<pos:position pos:line="66" pos:column="23"/></modifier></type><name pos:line="66" pos:column="23">cache_key<pos:position pos:line="66" pos:column="32"/></name> <init pos:line="66" pos:column="33">= <expr><call><name pos:line="66" pos:column="35">strdup<pos:position pos:line="66" pos:column="41"/></name> <argument_list pos:line="66" pos:column="42">(<argument><expr><name pos:line="66" pos:column="43">filename<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="66" pos:column="53"/></decl_stmt>

		<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">cache_key<pos:position pos:line="68" pos:column="30"/></name> <operator pos:line="68" pos:column="31">==<pos:position pos:line="68" pos:column="33"/></operator> <name pos:line="68" pos:column="34">NULL<pos:position pos:line="68" pos:column="38"/></name></expr>)<pos:position pos:line="68" pos:column="39"/></condition><then pos:line="68" pos:column="39">
		<block pos:line="69" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="70" pos:column="25">char<pos:position pos:line="70" pos:column="29"/></name></type> <name><name pos:line="70" pos:column="30">errbuf<pos:position pos:line="70" pos:column="36"/></name><index pos:line="70" pos:column="36">[<expr><literal type="number" pos:line="70" pos:column="37">1024<pos:position pos:line="70" pos:column="41"/></literal></expr>]<pos:position pos:line="70" pos:column="42"/></index></name></decl>;<pos:position pos:line="70" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">sstrerror<pos:position pos:line="71" pos:column="34"/></name> <argument_list pos:line="71" pos:column="35">(<argument><expr><name pos:line="71" pos:column="36">errno<pos:position pos:line="71" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="43">errbuf<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="51">sizeof <argument_list pos:line="71" pos:column="58">(<argument><expr><name pos:line="71" pos:column="59">errbuf<pos:position pos:line="71" pos:column="65"/></name></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="68"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="73" pos:column="25">pthread_mutex_unlock<pos:position pos:line="73" pos:column="45"/></name> <argument_list pos:line="73" pos:column="46">(<argument><expr><operator pos:line="73" pos:column="47">&amp;<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="48">cache_lock<pos:position pos:line="73" pos:column="58"/></name></expr></argument>)<pos:position pos:line="73" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="60"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="75" pos:column="25">ERROR<pos:position pos:line="75" pos:column="30"/></name> <argument_list pos:line="75" pos:column="31">(<argument><expr><literal type="string" pos:line="75" pos:column="32">"rrdtool plugin: strdup failed: %s"<pos:position pos:line="75" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="69">errbuf<pos:position pos:line="75" pos:column="75"/></name></expr></argument>)<pos:position pos:line="75" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="77"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="77" pos:column="25">sfree<pos:position pos:line="77" pos:column="30"/></name> <argument_list pos:line="77" pos:column="31">(<argument><expr><name><name pos:line="77" pos:column="32">rc<pos:position pos:line="77" pos:column="34"/></name><operator pos:line="77" pos:column="34">-&gt;<pos:position pos:line="77" pos:column="39"/></operator><name pos:line="77" pos:column="36">values<pos:position pos:line="77" pos:column="42"/></name><index pos:line="77" pos:column="42">[<expr><literal type="number" pos:line="77" pos:column="43">0<pos:position pos:line="77" pos:column="44"/></literal></expr>]<pos:position pos:line="77" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="47"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="78" pos:column="25">sfree<pos:position pos:line="78" pos:column="30"/></name> <argument_list pos:line="78" pos:column="31">(<argument><expr><name><name pos:line="78" pos:column="32">rc<pos:position pos:line="78" pos:column="34"/></name><operator pos:line="78" pos:column="34">-&gt;<pos:position pos:line="78" pos:column="39"/></operator><name pos:line="78" pos:column="36">values<pos:position pos:line="78" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="44"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">sfree<pos:position pos:line="79" pos:column="30"/></name> <argument_list pos:line="79" pos:column="31">(<argument><expr><name pos:line="79" pos:column="32">rc<pos:position pos:line="79" pos:column="34"/></name></expr></argument>)<pos:position pos:line="79" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="36"/></expr_stmt>
			<return pos:line="80" pos:column="25">return <expr><operator pos:line="80" pos:column="32">(<pos:position pos:line="80" pos:column="33"/></operator><operator pos:line="80" pos:column="33">-<pos:position pos:line="80" pos:column="34"/></operator><literal type="number" pos:line="80" pos:column="34">1<pos:position pos:line="80" pos:column="35"/></literal><operator pos:line="80" pos:column="35">)<pos:position pos:line="80" pos:column="36"/></operator></expr>;<pos:position pos:line="80" pos:column="37"/></return>
		}<pos:position pos:line="81" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="83" pos:column="17">c_avl_insert<pos:position pos:line="83" pos:column="29"/></name> <argument_list pos:line="83" pos:column="30">(<argument><expr><name pos:line="83" pos:column="31">cache<pos:position pos:line="83" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="38">cache_key<pos:position pos:line="83" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="49">rc<pos:position pos:line="83" pos:column="51"/></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="53"/></expr_stmt>
	}<pos:position pos:line="84" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="86" pos:column="9">DEBUG<pos:position pos:line="86" pos:column="14"/></name> <argument_list pos:line="86" pos:column="15">(<argument><expr><literal type="string" pos:line="86" pos:column="16">"rrdtool plugin: rrd_cache_insert: file = %s; "<pos:position pos:line="86" pos:column="63"/></literal>
			<literal type="string" pos:line="87" pos:column="25">"values_num = %i; age = %u;"<pos:position pos:line="87" pos:column="53"/></literal></expr></argument>,
			<argument><expr><name pos:line="88" pos:column="25">filename<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="35">rc<pos:position pos:line="88" pos:column="37"/></name><operator pos:line="88" pos:column="37">-&gt;<pos:position pos:line="88" pos:column="42"/></operator><name pos:line="88" pos:column="39">values_num<pos:position pos:line="88" pos:column="49"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="89" pos:column="25">rc<pos:position pos:line="89" pos:column="27"/></name><operator pos:line="89" pos:column="27">-&gt;<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="29">last_value<pos:position pos:line="89" pos:column="39"/></name></name> <operator pos:line="89" pos:column="40">-<pos:position pos:line="89" pos:column="41"/></operator> <name><name pos:line="89" pos:column="42">rc<pos:position pos:line="89" pos:column="44"/></name><operator pos:line="89" pos:column="44">-&gt;<pos:position pos:line="89" pos:column="49"/></operator><name pos:line="89" pos:column="46">first_value<pos:position pos:line="89" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="59"/></expr_stmt>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">(<pos:position pos:line="91" pos:column="14"/></operator><name><name pos:line="91" pos:column="14">rc<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">-&gt;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="18">last_value<pos:position pos:line="91" pos:column="28"/></name></name> <operator pos:line="91" pos:column="29">-<pos:position pos:line="91" pos:column="30"/></operator> <name><name pos:line="91" pos:column="31">rc<pos:position pos:line="91" pos:column="33"/></name><operator pos:line="91" pos:column="33">-&gt;<pos:position pos:line="91" pos:column="38"/></operator><name pos:line="91" pos:column="35">first_value<pos:position pos:line="91" pos:column="46"/></name></name><operator pos:line="91" pos:column="46">)<pos:position pos:line="91" pos:column="47"/></operator> <operator pos:line="91" pos:column="48">&gt;=<pos:position pos:line="91" pos:column="53"/></operator> <name pos:line="91" pos:column="51">cache_timeout<pos:position pos:line="91" pos:column="64"/></name></expr>)<pos:position pos:line="91" pos:column="65"/></condition><then pos:line="91" pos:column="65">
	<block pos:line="92" pos:column="9">{
		<comment type="block" pos:line="93" pos:column="17">/* XXX: If you need to lock both, cache_lock and queue_lock, at
		 * the same time, ALWAYS lock `cache_lock' first! */</comment>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name><name pos:line="95" pos:column="21">rc<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">-&gt;<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="25">flags<pos:position pos:line="95" pos:column="30"/></name></name> <operator pos:line="95" pos:column="31">!=<pos:position pos:line="95" pos:column="33"/></operator> <name pos:line="95" pos:column="34">FLAG_QUEUED<pos:position pos:line="95" pos:column="45"/></name></expr>)<pos:position pos:line="95" pos:column="46"/></condition><then pos:line="95" pos:column="46">
		<block pos:line="96" pos:column="17">{
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><call><name pos:line="97" pos:column="29">rrd_queue_cache_entry<pos:position pos:line="97" pos:column="50"/></name> <argument_list pos:line="97" pos:column="51">(<argument><expr><name pos:line="97" pos:column="52">filename<pos:position pos:line="97" pos:column="60"/></name></expr></argument>)<pos:position pos:line="97" pos:column="61"/></argument_list></call> <operator pos:line="97" pos:column="62">==<pos:position pos:line="97" pos:column="64"/></operator> <literal type="number" pos:line="97" pos:column="65">0<pos:position pos:line="97" pos:column="66"/></literal></expr>)<pos:position pos:line="97" pos:column="67"/></condition><then pos:line="97" pos:column="67">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="98" pos:column="33">rc<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">-&gt;<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="37">flags<pos:position pos:line="98" pos:column="42"/></name></name> <operator pos:line="98" pos:column="43">=<pos:position pos:line="98" pos:column="44"/></operator> <name pos:line="98" pos:column="45">FLAG_QUEUED<pos:position pos:line="98" pos:column="56"/></name></expr>;<pos:position pos:line="98" pos:column="57"/></expr_stmt></block></then></if>
		}<pos:position pos:line="99" pos:column="18"/></block></then>
		<else pos:line="100" pos:column="17">else
		<block pos:line="101" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="102" pos:column="25">DEBUG<pos:position pos:line="102" pos:column="30"/></name> <argument_list pos:line="102" pos:column="31">(<argument><expr><literal type="string" pos:line="102" pos:column="32">"rrdtool plugin: `%s' is already queued."<pos:position pos:line="102" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="75">filename<pos:position pos:line="102" pos:column="83"/></name></expr></argument>)<pos:position pos:line="102" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="85"/></expr_stmt>
		}<pos:position pos:line="103" pos:column="18"/></block></else></if>
	}<pos:position pos:line="104" pos:column="10"/></block></then></if>

	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><operator pos:line="106" pos:column="13">(<pos:position pos:line="106" pos:column="14"/></operator><name pos:line="106" pos:column="14">cache_timeout<pos:position pos:line="106" pos:column="27"/></name> <operator pos:line="106" pos:column="28">&gt;<pos:position pos:line="106" pos:column="32"/></operator> <literal type="number" pos:line="106" pos:column="30">0<pos:position pos:line="106" pos:column="31"/></literal><operator pos:line="106" pos:column="31">)<pos:position pos:line="106" pos:column="32"/></operator> <operator pos:line="106" pos:column="33">&amp;&amp;<pos:position pos:line="106" pos:column="43"/></operator>
			<operator pos:line="107" pos:column="25">(<pos:position pos:line="107" pos:column="26"/></operator><operator pos:line="107" pos:column="26">(<pos:position pos:line="107" pos:column="27"/></operator><call><name pos:line="107" pos:column="27">time<pos:position pos:line="107" pos:column="31"/></name> <argument_list pos:line="107" pos:column="32">(<argument><expr><name pos:line="107" pos:column="33">NULL<pos:position pos:line="107" pos:column="37"/></name></expr></argument>)<pos:position pos:line="107" pos:column="38"/></argument_list></call> <operator pos:line="107" pos:column="39">-<pos:position pos:line="107" pos:column="40"/></operator> <name pos:line="107" pos:column="41">cache_flush_last<pos:position pos:line="107" pos:column="57"/></name><operator pos:line="107" pos:column="57">)<pos:position pos:line="107" pos:column="58"/></operator> <operator pos:line="107" pos:column="59">&gt;<pos:position pos:line="107" pos:column="63"/></operator> <name pos:line="107" pos:column="61">cache_flush_timeout<pos:position pos:line="107" pos:column="80"/></name><operator pos:line="107" pos:column="80">)<pos:position pos:line="107" pos:column="81"/></operator></expr>)<pos:position pos:line="107" pos:column="82"/></condition><then pos:line="107" pos:column="82">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="17">rrd_cache_flush<pos:position pos:line="108" pos:column="32"/></name> <argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">cache_flush_timeout<pos:position pos:line="108" pos:column="53"/></name></expr></argument>)<pos:position pos:line="108" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="55"/></expr_stmt></block></then></if>


	<expr_stmt><expr><call><name pos:line="111" pos:column="9">pthread_mutex_unlock<pos:position pos:line="111" pos:column="29"/></name> <argument_list pos:line="111" pos:column="30">(<argument><expr><operator pos:line="111" pos:column="31">&amp;<pos:position pos:line="111" pos:column="36"/></operator><name pos:line="111" pos:column="32">cache_lock<pos:position pos:line="111" pos:column="42"/></name></expr></argument>)<pos:position pos:line="111" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="44"/></expr_stmt>

	<return pos:line="113" pos:column="9">return <expr><operator pos:line="113" pos:column="16">(<pos:position pos:line="113" pos:column="17"/></operator><literal type="number" pos:line="113" pos:column="17">0<pos:position pos:line="113" pos:column="18"/></literal><operator pos:line="113" pos:column="18">)<pos:position pos:line="113" pos:column="19"/></operator></expr>;<pos:position pos:line="113" pos:column="20"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

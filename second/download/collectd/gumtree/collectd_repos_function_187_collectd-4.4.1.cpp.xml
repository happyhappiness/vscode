<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_187_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">get_via_generic_iokit<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">double<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ret_charge<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">double<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">ret_current<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">double<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">ret_voltage<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="37"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">kern_return_t<pos:position pos:line="5" pos:column="22"/></name></type>   <name pos:line="5" pos:column="25">status<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">io_iterator_t<pos:position pos:line="6" pos:column="22"/></name></type>   <name pos:line="6" pos:column="25">iterator<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">io_object_t<pos:position pos:line="7" pos:column="20"/></name></type>     <name pos:line="7" pos:column="25">io_obj<pos:position pos:line="7" pos:column="31"/></name></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">CFDictionaryRef<pos:position pos:line="9" pos:column="24"/></name></type> <name pos:line="9" pos:column="25">bat_root_dict<pos:position pos:line="9" pos:column="38"/></name></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">CFArrayRef<pos:position pos:line="10" pos:column="19"/></name></type>      <name pos:line="10" pos:column="25">bat_info_arry<pos:position pos:line="10" pos:column="38"/></name></decl>;<pos:position pos:line="10" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">CFIndex<pos:position pos:line="11" pos:column="16"/></name></type>         <name pos:line="11" pos:column="25">bat_info_arry_len<pos:position pos:line="11" pos:column="42"/></name></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">CFIndex<pos:position pos:line="12" pos:column="16"/></name></type>         <name pos:line="12" pos:column="25">bat_info_arry_pos<pos:position pos:line="12" pos:column="42"/></name></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">CFDictionaryRef<pos:position pos:line="13" pos:column="24"/></name></type> <name pos:line="13" pos:column="25">bat_info_dict<pos:position pos:line="13" pos:column="38"/></name></decl>;<pos:position pos:line="13" pos:column="39"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="15" pos:column="9">double<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">temp_double<pos:position pos:line="15" pos:column="27"/></name></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">IOServiceGetMatchingServices<pos:position pos:line="17" pos:column="46"/></name> <argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">kIOMasterPortDefault<pos:position pos:line="17" pos:column="68"/></name></expr></argument>,
			<argument><expr><call><name pos:line="18" pos:column="25">IOServiceNameMatching<pos:position pos:line="18" pos:column="46"/></name> <argument_list pos:line="18" pos:column="47">(<argument><expr><literal type="string" pos:line="18" pos:column="48">"battery"<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr></argument>,
			<argument><expr><operator pos:line="19" pos:column="25">&amp;<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="26">iterator<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">status<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">!=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">kIOReturnSuccess<pos:position pos:line="20" pos:column="39"/></name></expr>)<pos:position pos:line="20" pos:column="40"/></condition><then pos:line="20" pos:column="40">
	<block pos:line="21" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="22" pos:column="17">DEBUG<pos:position pos:line="22" pos:column="22"/></name> <argument_list pos:line="22" pos:column="23">(<argument><expr><literal type="string" pos:line="22" pos:column="24">"IOServiceGetMatchingServices failed."<pos:position pos:line="22" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="64"/></expr_stmt>
		<return pos:line="23" pos:column="17">return;<pos:position pos:line="23" pos:column="24"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if>

	<while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">io_obj<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">IOIteratorNext<pos:position pos:line="26" pos:column="40"/></name> <argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">iterator<pos:position pos:line="26" pos:column="50"/></name></expr></argument>)<pos:position pos:line="26" pos:column="51"/></argument_list></call><operator pos:line="26" pos:column="51">)<pos:position pos:line="26" pos:column="52"/></operator></expr>)<pos:position pos:line="26" pos:column="53"/></condition>
	<block pos:line="27" pos:column="9">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">status<pos:position pos:line="28" pos:column="23"/></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <call><name pos:line="28" pos:column="26">IORegistryEntryCreateCFProperties<pos:position pos:line="28" pos:column="59"/></name> <argument_list pos:line="28" pos:column="60">(<argument><expr><name pos:line="28" pos:column="61">io_obj<pos:position pos:line="28" pos:column="67"/></name></expr></argument>,
				<argument><expr><operator pos:line="29" pos:column="33">(<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="34">CFMutableDictionaryRef<pos:position pos:line="29" pos:column="56"/></name> <operator pos:line="29" pos:column="57">*<pos:position pos:line="29" pos:column="58"/></operator><operator pos:line="29" pos:column="58">)<pos:position pos:line="29" pos:column="59"/></operator> <operator pos:line="29" pos:column="60">&amp;<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="61">bat_root_dict<pos:position pos:line="29" pos:column="74"/></name></expr></argument>,
				<argument><expr><name pos:line="30" pos:column="33">kCFAllocatorDefault<pos:position pos:line="30" pos:column="52"/></name></expr></argument>,
				<argument><expr><name pos:line="31" pos:column="33">kNilOptions<pos:position pos:line="31" pos:column="44"/></name></expr></argument>)<pos:position pos:line="31" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="46"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><name pos:line="32" pos:column="21">status<pos:position pos:line="32" pos:column="27"/></name> <operator pos:line="32" pos:column="28">!=<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">kIOReturnSuccess<pos:position pos:line="32" pos:column="47"/></name></expr>)<pos:position pos:line="32" pos:column="48"/></condition><then pos:line="32" pos:column="48">
		<block pos:line="33" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">DEBUG<pos:position pos:line="34" pos:column="30"/></name> <argument_list pos:line="34" pos:column="31">(<argument><expr><literal type="string" pos:line="34" pos:column="32">"IORegistryEntryCreateCFProperties failed."<pos:position pos:line="34" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="77"/></expr_stmt>
			<continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="38" pos:column="17">bat_info_arry<pos:position pos:line="38" pos:column="30"/></name> <operator pos:line="38" pos:column="31">=<pos:position pos:line="38" pos:column="32"/></operator> <operator pos:line="38" pos:column="33">(<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="34">CFArrayRef<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">)<pos:position pos:line="38" pos:column="45"/></operator> <call><name pos:line="38" pos:column="46">CFDictionaryGetValue<pos:position pos:line="38" pos:column="66"/></name> <argument_list pos:line="38" pos:column="67">(<argument><expr><name pos:line="38" pos:column="68">bat_root_dict<pos:position pos:line="38" pos:column="81"/></name></expr></argument>,
				<argument><expr><call><name pos:line="39" pos:column="33">CFSTR<pos:position pos:line="39" pos:column="38"/></name> <argument_list pos:line="39" pos:column="39">(<argument><expr><literal type="string" pos:line="39" pos:column="40">"IOBatteryInfo"<pos:position pos:line="39" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
		<if pos:line="40" pos:column="17">if <condition pos:line="40" pos:column="20">(<expr><name pos:line="40" pos:column="21">bat_info_arry<pos:position pos:line="40" pos:column="34"/></name> <operator pos:line="40" pos:column="35">==<pos:position pos:line="40" pos:column="37"/></operator> <name pos:line="40" pos:column="38">NULL<pos:position pos:line="40" pos:column="42"/></name></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43">
		<block pos:line="41" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">CFRelease<pos:position pos:line="42" pos:column="34"/></name> <argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">bat_root_dict<pos:position pos:line="42" pos:column="49"/></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="51"/></expr_stmt>
			<continue pos:line="43" pos:column="25">continue;<pos:position pos:line="43" pos:column="34"/></continue>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="45" pos:column="17">bat_info_arry_len<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">=<pos:position pos:line="45" pos:column="36"/></operator> <call><name pos:line="45" pos:column="37">CFArrayGetCount<pos:position pos:line="45" pos:column="52"/></name> <argument_list pos:line="45" pos:column="53">(<argument><expr><name pos:line="45" pos:column="54">bat_info_arry<pos:position pos:line="45" pos:column="67"/></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="69"/></expr_stmt>

		<for pos:line="47" pos:column="17">for <control pos:line="47" pos:column="21">(<init><expr><name pos:line="47" pos:column="22">bat_info_arry_pos<pos:position pos:line="47" pos:column="39"/></name> <operator pos:line="47" pos:column="40">=<pos:position pos:line="47" pos:column="41"/></operator> <literal type="number" pos:line="47" pos:column="42">0<pos:position pos:line="47" pos:column="43"/></literal></expr>;<pos:position pos:line="47" pos:column="44"/></init>
			       	<condition><expr><name pos:line="48" pos:column="33">bat_info_arry_pos<pos:position pos:line="48" pos:column="50"/></name> <operator pos:line="48" pos:column="51">&lt;<pos:position pos:line="48" pos:column="55"/></operator> <name pos:line="48" pos:column="53">bat_info_arry_len<pos:position pos:line="48" pos:column="70"/></name></expr>;<pos:position pos:line="48" pos:column="71"/></condition>
			       	<incr><expr><name pos:line="49" pos:column="33">bat_info_arry_pos<pos:position pos:line="49" pos:column="50"/></name><operator pos:line="49" pos:column="50">++<pos:position pos:line="49" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="49" pos:column="53"/></control>
		<block pos:line="50" pos:column="17">{
			<expr_stmt><expr><name pos:line="51" pos:column="25">bat_info_dict<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">=<pos:position pos:line="51" pos:column="40"/></operator> <operator pos:line="51" pos:column="41">(<pos:position pos:line="51" pos:column="42"/></operator><name pos:line="51" pos:column="42">CFDictionaryRef<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">)<pos:position pos:line="51" pos:column="58"/></operator> <call><name pos:line="51" pos:column="59">CFArrayGetValueAtIndex<pos:position pos:line="51" pos:column="81"/></name> <argument_list pos:line="51" pos:column="82">(<argument><expr><name pos:line="51" pos:column="83">bat_info_arry<pos:position pos:line="51" pos:column="96"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="98">bat_info_arry_pos<pos:position pos:line="51" pos:column="115"/></name></expr></argument>)<pos:position pos:line="51" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="117"/></expr_stmt>

			<if pos:line="53" pos:column="25">if <condition pos:line="53" pos:column="28">(<expr><operator pos:line="53" pos:column="29">*<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">ret_charge<pos:position pos:line="53" pos:column="40"/></name> <operator pos:line="53" pos:column="41">==<pos:position pos:line="53" pos:column="43"/></operator> <name pos:line="53" pos:column="44">INVALID_VALUE<pos:position pos:line="53" pos:column="57"/></name></expr>)<pos:position pos:line="53" pos:column="58"/></condition><then pos:line="53" pos:column="58">
			<block pos:line="54" pos:column="25">{
				<expr_stmt><expr><name pos:line="55" pos:column="33">temp_double<pos:position pos:line="55" pos:column="44"/></name> <operator pos:line="55" pos:column="45">=<pos:position pos:line="55" pos:column="46"/></operator> <call><name pos:line="55" pos:column="47">dict_get_double<pos:position pos:line="55" pos:column="62"/></name> <argument_list pos:line="55" pos:column="63">(<argument><expr><name pos:line="55" pos:column="64">bat_info_dict<pos:position pos:line="55" pos:column="77"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="56" pos:column="49">"Capacity"<pos:position pos:line="56" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="61"/></expr_stmt>
				<if pos:line="57" pos:column="33">if <condition pos:line="57" pos:column="36">(<expr><name pos:line="57" pos:column="37">temp_double<pos:position pos:line="57" pos:column="48"/></name> <operator pos:line="57" pos:column="49">!=<pos:position pos:line="57" pos:column="51"/></operator> <name pos:line="57" pos:column="52">INVALID_VALUE<pos:position pos:line="57" pos:column="65"/></name></expr>)<pos:position pos:line="57" pos:column="66"/></condition><then pos:line="57" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="58" pos:column="41">*<pos:position pos:line="58" pos:column="42"/></operator><name pos:line="58" pos:column="42">ret_charge<pos:position pos:line="58" pos:column="52"/></name> <operator pos:line="58" pos:column="53">=<pos:position pos:line="58" pos:column="54"/></operator> <name pos:line="58" pos:column="55">temp_double<pos:position pos:line="58" pos:column="66"/></name> <operator pos:line="58" pos:column="67">/<pos:position pos:line="58" pos:column="68"/></operator> <literal type="number" pos:line="58" pos:column="69">1000.0<pos:position pos:line="58" pos:column="75"/></literal></expr>;<pos:position pos:line="58" pos:column="76"/></expr_stmt></block></then></if>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if>

			<if pos:line="61" pos:column="25">if <condition pos:line="61" pos:column="28">(<expr><operator pos:line="61" pos:column="29">*<pos:position pos:line="61" pos:column="30"/></operator><name pos:line="61" pos:column="30">ret_current<pos:position pos:line="61" pos:column="41"/></name> <operator pos:line="61" pos:column="42">==<pos:position pos:line="61" pos:column="44"/></operator> <name pos:line="61" pos:column="45">INVALID_VALUE<pos:position pos:line="61" pos:column="58"/></name></expr>)<pos:position pos:line="61" pos:column="59"/></condition><then pos:line="61" pos:column="59">
			<block pos:line="62" pos:column="25">{
				<expr_stmt><expr><name pos:line="63" pos:column="33">temp_double<pos:position pos:line="63" pos:column="44"/></name> <operator pos:line="63" pos:column="45">=<pos:position pos:line="63" pos:column="46"/></operator> <call><name pos:line="63" pos:column="47">dict_get_double<pos:position pos:line="63" pos:column="62"/></name> <argument_list pos:line="63" pos:column="63">(<argument><expr><name pos:line="63" pos:column="64">bat_info_dict<pos:position pos:line="63" pos:column="77"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="64" pos:column="49">"Current"<pos:position pos:line="64" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="60"/></expr_stmt>
				<if pos:line="65" pos:column="33">if <condition pos:line="65" pos:column="36">(<expr><name pos:line="65" pos:column="37">temp_double<pos:position pos:line="65" pos:column="48"/></name> <operator pos:line="65" pos:column="49">!=<pos:position pos:line="65" pos:column="51"/></operator> <name pos:line="65" pos:column="52">INVALID_VALUE<pos:position pos:line="65" pos:column="65"/></name></expr>)<pos:position pos:line="65" pos:column="66"/></condition><then pos:line="65" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="66" pos:column="41">*<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="42">ret_current<pos:position pos:line="66" pos:column="53"/></name> <operator pos:line="66" pos:column="54">=<pos:position pos:line="66" pos:column="55"/></operator> <name pos:line="66" pos:column="56">temp_double<pos:position pos:line="66" pos:column="67"/></name> <operator pos:line="66" pos:column="68">/<pos:position pos:line="66" pos:column="69"/></operator> <literal type="number" pos:line="66" pos:column="70">1000.0<pos:position pos:line="66" pos:column="76"/></literal></expr>;<pos:position pos:line="66" pos:column="77"/></expr_stmt></block></then></if>
			}<pos:position pos:line="67" pos:column="26"/></block></then></if>

			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><operator pos:line="69" pos:column="29">*<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">ret_voltage<pos:position pos:line="69" pos:column="41"/></name> <operator pos:line="69" pos:column="42">==<pos:position pos:line="69" pos:column="44"/></operator> <name pos:line="69" pos:column="45">INVALID_VALUE<pos:position pos:line="69" pos:column="58"/></name></expr>)<pos:position pos:line="69" pos:column="59"/></condition><then pos:line="69" pos:column="59">
			<block pos:line="70" pos:column="25">{
				<expr_stmt><expr><name pos:line="71" pos:column="33">temp_double<pos:position pos:line="71" pos:column="44"/></name> <operator pos:line="71" pos:column="45">=<pos:position pos:line="71" pos:column="46"/></operator> <call><name pos:line="71" pos:column="47">dict_get_double<pos:position pos:line="71" pos:column="62"/></name> <argument_list pos:line="71" pos:column="63">(<argument><expr><name pos:line="71" pos:column="64">bat_info_dict<pos:position pos:line="71" pos:column="77"/></name></expr></argument>,
						<argument><expr><literal type="string" pos:line="72" pos:column="49">"Voltage"<pos:position pos:line="72" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt>
				<if pos:line="73" pos:column="33">if <condition pos:line="73" pos:column="36">(<expr><name pos:line="73" pos:column="37">temp_double<pos:position pos:line="73" pos:column="48"/></name> <operator pos:line="73" pos:column="49">!=<pos:position pos:line="73" pos:column="51"/></operator> <name pos:line="73" pos:column="52">INVALID_VALUE<pos:position pos:line="73" pos:column="65"/></name></expr>)<pos:position pos:line="73" pos:column="66"/></condition><then pos:line="73" pos:column="66">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="74" pos:column="41">*<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="42">ret_voltage<pos:position pos:line="74" pos:column="53"/></name> <operator pos:line="74" pos:column="54">=<pos:position pos:line="74" pos:column="55"/></operator> <name pos:line="74" pos:column="56">temp_double<pos:position pos:line="74" pos:column="67"/></name> <operator pos:line="74" pos:column="68">/<pos:position pos:line="74" pos:column="69"/></operator> <literal type="number" pos:line="74" pos:column="70">1000.0<pos:position pos:line="74" pos:column="76"/></literal></expr>;<pos:position pos:line="74" pos:column="77"/></expr_stmt></block></then></if>
			}<pos:position pos:line="75" pos:column="26"/></block></then></if>
		}<pos:position pos:line="76" pos:column="18"/></block></for>
		
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">CFRelease<pos:position pos:line="78" pos:column="26"/></name> <argument_list pos:line="78" pos:column="27">(<argument><expr><name pos:line="78" pos:column="28">bat_root_dict<pos:position pos:line="78" pos:column="41"/></name></expr></argument>)<pos:position pos:line="78" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="79" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="81" pos:column="9">IOObjectRelease<pos:position pos:line="81" pos:column="24"/></name> <argument_list pos:line="81" pos:column="25">(<argument><expr><name pos:line="81" pos:column="26">iterator<pos:position pos:line="81" pos:column="34"/></name></expr></argument>)<pos:position pos:line="81" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="36"/></expr_stmt>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

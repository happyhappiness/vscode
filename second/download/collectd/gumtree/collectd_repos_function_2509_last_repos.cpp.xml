<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2509_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">buffer_next<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">buffer_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">b<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">void<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">out<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="48">size_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">n<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name><name pos:line="2" pos:column="7">b<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">-&gt;<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="10">len<pos:position pos:line="2" pos:column="13"/></name></name> <operator pos:line="2" pos:column="14">&lt;<pos:position pos:line="2" pos:column="18"/></operator> <name pos:line="2" pos:column="16">n<pos:position pos:line="2" pos:column="17"/></name></expr>)<pos:position pos:line="2" pos:column="18"/></condition><then pos:line="2" pos:column="18"> <block pos:line="2" pos:column="19">{
    <return pos:line="3" pos:column="5">return <expr><operator pos:line="3" pos:column="12">-<pos:position pos:line="3" pos:column="13"/></operator><literal type="number" pos:line="3" pos:column="13">1<pos:position pos:line="3" pos:column="14"/></literal></expr>;<pos:position pos:line="3" pos:column="15"/></return>
  }<pos:position pos:line="4" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memmove<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">out<pos:position pos:line="5" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="16">b<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">data<pos:position pos:line="5" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">n<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="7" pos:column="3">b<pos:position pos:line="7" pos:column="4"/></name><operator pos:line="7" pos:column="4">-&gt;<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="6">data<pos:position pos:line="7" pos:column="10"/></name></name> <operator pos:line="7" pos:column="11">+=<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">n<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">b<pos:position pos:line="8" pos:column="4"/></name><operator pos:line="8" pos:column="4">-&gt;<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="6">len<pos:position pos:line="8" pos:column="9"/></name></name> <operator pos:line="8" pos:column="10">-=<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">n<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>

  <return pos:line="10" pos:column="3">return <expr><literal type="number" pos:line="10" pos:column="10">0<pos:position pos:line="10" pos:column="11"/></literal></expr>;<pos:position pos:line="10" pos:column="12"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

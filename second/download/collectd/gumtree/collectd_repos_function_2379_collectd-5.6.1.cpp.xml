<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2379_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">strjoin<pos:position pos:line="1" pos:column="12"/></name> <parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">buffer<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">size_t<pos:position pos:line="1" pos:column="34"/></name></type> <name pos:line="1" pos:column="35">buffer_size<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">fields<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">fields_num<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">sep<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="33"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">avail<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ptr<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">sep_len<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">buffer_size<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">&lt;<pos:position pos:line="9" pos:column="30"/></operator> <literal type="number" pos:line="9" pos:column="28">1<pos:position pos:line="9" pos:column="29"/></literal><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator> <operator pos:line="9" pos:column="31">||<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="34">(<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">fields_num<pos:position pos:line="9" pos:column="45"/></name> <operator pos:line="9" pos:column="46">==<pos:position pos:line="9" pos:column="48"/></operator> <literal type="number" pos:line="9" pos:column="49">0<pos:position pos:line="9" pos:column="50"/></literal><operator pos:line="9" pos:column="50">)<pos:position pos:line="9" pos:column="51"/></operator></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="12" pos:column="9">memset<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">buffer<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">buffer_size<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name pos:line="13" pos:column="9">ptr<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">buffer<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">avail<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">buffer_size<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">-<pos:position pos:line="14" pos:column="30"/></operator> <literal type="number" pos:line="14" pos:column="31">1<pos:position pos:line="14" pos:column="32"/></literal></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

	<expr_stmt><expr><name pos:line="16" pos:column="9">sep_len<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <literal type="number" pos:line="16" pos:column="19">0<pos:position pos:line="16" pos:column="20"/></literal></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">sep<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">!=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">NULL<pos:position pos:line="17" pos:column="24"/></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">sep_len<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <call><name pos:line="18" pos:column="27">strlen<pos:position pos:line="18" pos:column="33"/></name> <argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">sep<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt></block></then></if>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><decl><type><name pos:line="20" pos:column="14">size_t<pos:position pos:line="20" pos:column="20"/></name></type> <name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="27"/></init> <condition><expr><name pos:line="20" pos:column="28">i<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">&lt;<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="32">fields_num<pos:position pos:line="20" pos:column="42"/></name></expr>;<pos:position pos:line="20" pos:column="43"/></condition> <incr><expr><name pos:line="20" pos:column="44">i<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">++<pos:position pos:line="20" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="48"/></control>
	<block pos:line="21" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">size_t<pos:position pos:line="22" pos:column="23"/></name></type> <name pos:line="22" pos:column="24">field_len<pos:position pos:line="22" pos:column="33"/></name></decl>;<pos:position pos:line="22" pos:column="34"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><operator pos:line="24" pos:column="21">(<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">i<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&gt;<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator> <operator pos:line="24" pos:column="29">&amp;&amp;<pos:position pos:line="24" pos:column="39"/></operator> <operator pos:line="24" pos:column="32">(<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">sep_len<pos:position pos:line="24" pos:column="40"/></name> <operator pos:line="24" pos:column="41">&gt;<pos:position pos:line="24" pos:column="45"/></operator> <literal type="number" pos:line="24" pos:column="43">0<pos:position pos:line="24" pos:column="44"/></literal><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator></expr>)<pos:position pos:line="24" pos:column="46"/></condition><then pos:line="24" pos:column="46">
		<block pos:line="25" pos:column="17">{
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">avail<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">&lt;<pos:position pos:line="26" pos:column="39"/></operator> <name pos:line="26" pos:column="37">sep_len<pos:position pos:line="26" pos:column="44"/></name></expr>)<pos:position pos:line="26" pos:column="45"/></condition><then pos:line="26" pos:column="45">
				<block type="pseudo"><return pos:line="27" pos:column="33">return <expr><operator pos:line="27" pos:column="40">(<pos:position pos:line="27" pos:column="41"/></operator><operator pos:line="27" pos:column="41">-<pos:position pos:line="27" pos:column="42"/></operator><literal type="number" pos:line="27" pos:column="42">1<pos:position pos:line="27" pos:column="43"/></literal><operator pos:line="27" pos:column="43">)<pos:position pos:line="27" pos:column="44"/></operator></expr>;<pos:position pos:line="27" pos:column="45"/></return></block></then></if>

			<expr_stmt><expr><call><name pos:line="29" pos:column="25">memcpy<pos:position pos:line="29" pos:column="31"/></name> <argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">ptr<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">sep<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="43">sep_len<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><name pos:line="30" pos:column="25">ptr<pos:position pos:line="30" pos:column="28"/></name> <operator pos:line="30" pos:column="29">+=<pos:position pos:line="30" pos:column="31"/></operator> <name pos:line="30" pos:column="32">sep_len<pos:position pos:line="30" pos:column="39"/></name></expr>;<pos:position pos:line="30" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="31" pos:column="25">avail<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">-=<pos:position pos:line="31" pos:column="33"/></operator> <name pos:line="31" pos:column="34">sep_len<pos:position pos:line="31" pos:column="41"/></name></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="34" pos:column="17">field_len<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">=<pos:position pos:line="34" pos:column="28"/></operator> <call><name pos:line="34" pos:column="29">strlen<pos:position pos:line="34" pos:column="35"/></name> <argument_list pos:line="34" pos:column="36">(<argument><expr><name><name pos:line="34" pos:column="37">fields<pos:position pos:line="34" pos:column="43"/></name><index pos:line="34" pos:column="43">[<expr><name pos:line="34" pos:column="44">i<pos:position pos:line="34" pos:column="45"/></name></expr>]<pos:position pos:line="34" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">avail<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&lt;<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="29">field_len<pos:position pos:line="35" pos:column="38"/></name></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39">
			<block type="pseudo"><return pos:line="36" pos:column="25">return <expr><operator pos:line="36" pos:column="32">(<pos:position pos:line="36" pos:column="33"/></operator><operator pos:line="36" pos:column="33">-<pos:position pos:line="36" pos:column="34"/></operator><literal type="number" pos:line="36" pos:column="34">1<pos:position pos:line="36" pos:column="35"/></literal><operator pos:line="36" pos:column="35">)<pos:position pos:line="36" pos:column="36"/></operator></expr>;<pos:position pos:line="36" pos:column="37"/></return></block></then></if>

		<expr_stmt><expr><call><name pos:line="38" pos:column="17">memcpy<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">ptr<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="30">fields<pos:position pos:line="38" pos:column="36"/></name><index pos:line="38" pos:column="36">[<expr><name pos:line="38" pos:column="37">i<pos:position pos:line="38" pos:column="38"/></name></expr>]<pos:position pos:line="38" pos:column="39"/></index></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">field_len<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">ptr<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">+=<pos:position pos:line="39" pos:column="23"/></operator> <name pos:line="39" pos:column="24">field_len<pos:position pos:line="39" pos:column="33"/></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
		<expr_stmt><expr><name pos:line="40" pos:column="17">avail<pos:position pos:line="40" pos:column="22"/></name> <operator pos:line="40" pos:column="23">-=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">field_len<pos:position pos:line="40" pos:column="35"/></name></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
	}<pos:position pos:line="41" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="43" pos:column="9">assert<pos:position pos:line="43" pos:column="15"/></name> <argument_list pos:line="43" pos:column="16">(<argument><expr><name><name pos:line="43" pos:column="17">buffer<pos:position pos:line="43" pos:column="23"/></name><index pos:line="43" pos:column="23">[<expr><name pos:line="43" pos:column="24">buffer_size<pos:position pos:line="43" pos:column="35"/></name> <operator pos:line="43" pos:column="36">-<pos:position pos:line="43" pos:column="37"/></operator> <literal type="number" pos:line="43" pos:column="38">1<pos:position pos:line="43" pos:column="39"/></literal></expr>]<pos:position pos:line="43" pos:column="40"/></index></name> <operator pos:line="43" pos:column="41">==<pos:position pos:line="43" pos:column="43"/></operator> <literal type="number" pos:line="43" pos:column="44">0<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>
	<return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><operator pos:line="44" pos:column="17">(<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">int<pos:position pos:line="44" pos:column="21"/></name><operator pos:line="44" pos:column="21">)<pos:position pos:line="44" pos:column="22"/></operator> <call><name pos:line="44" pos:column="23">strlen<pos:position pos:line="44" pos:column="29"/></name> <argument_list pos:line="44" pos:column="30">(<argument><expr><name pos:line="44" pos:column="31">buffer<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call><operator pos:line="44" pos:column="38">)<pos:position pos:line="44" pos:column="39"/></operator></expr>;<pos:position pos:line="44" pos:column="40"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

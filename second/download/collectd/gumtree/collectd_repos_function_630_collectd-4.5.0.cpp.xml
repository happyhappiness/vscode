<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_630_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensor_list_add<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ipmi_sensor_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">sensor<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">ipmi_sensor_id_t<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">sensor_id<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">c_ipmi_sensor_list_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">list_item<pos:position pos:line="4" pos:column="34"/></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">c_ipmi_sensor_list_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">list_prev<pos:position pos:line="5" pos:column="34"/></name></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name></type> <name><name pos:line="7" pos:column="8">sensor_name<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><name pos:line="7" pos:column="20">DATA_MAX_NAME_LEN<pos:position pos:line="7" pos:column="37"/></name></expr>]<pos:position pos:line="7" pos:column="38"/></index></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">sensor_name_ptr<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">sensor_type<pos:position pos:line="9" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="9" pos:column="20">len<pos:position pos:line="9" pos:column="23"/></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="10" pos:column="3">const<pos:position pos:line="10" pos:column="8"/></specifier> <name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">type<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">ipmi_entity_t<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">ent<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><call><name pos:line="11" pos:column="24">ipmi_sensor_get_entity<pos:position pos:line="11" pos:column="46"/></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">sensor<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">sensor_id<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name pos:line="13" pos:column="15">ipmi_sensor_convert_to_id<pos:position pos:line="13" pos:column="40"/></name> <argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">sensor<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">sensor_name<pos:position pos:line="15" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="27">sizeof <argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">sensor_name<pos:position pos:line="15" pos:column="46"/></name></expr></argument>)<pos:position pos:line="15" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">ipmi_sensor_get_name<pos:position pos:line="16" pos:column="23"/></name> <argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">sensor<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">sensor_name<pos:position pos:line="16" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="46">sizeof <argument_list pos:line="16" pos:column="53">(<argument><expr><name pos:line="16" pos:column="54">sensor_name<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">sensor_name<pos:position pos:line="17" pos:column="14"/></name><index pos:line="17" pos:column="14">[<expr><sizeof pos:line="17" pos:column="15">sizeof <argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">sensor_name<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></sizeof> <operator pos:line="17" pos:column="36">-<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">1<pos:position pos:line="17" pos:column="39"/></literal></expr>]<pos:position pos:line="17" pos:column="40"/></index></name> <operator pos:line="17" pos:column="41">=<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="43">0<pos:position pos:line="17" pos:column="44"/></literal></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">len<pos:position pos:line="19" pos:column="6"/></name> <operator pos:line="19" pos:column="7">=<pos:position pos:line="19" pos:column="8"/></operator> <name pos:line="19" pos:column="9">DATA_MAX_NAME_LEN<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">-<pos:position pos:line="19" pos:column="28"/></operator> <call><name pos:line="19" pos:column="29">strlen<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">sensor_name<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">strncat<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><name pos:line="20" pos:column="11">sensor_name<pos:position pos:line="20" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="24">" "<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="29">len<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">--<pos:position pos:line="20" pos:column="34"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">strncat<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><name pos:line="21" pos:column="11">sensor_name<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="24">ipmi_entity_get_entity_id_string<pos:position pos:line="21" pos:column="56"/></name><argument_list pos:line="21" pos:column="56">(<argument><expr><name pos:line="21" pos:column="57">ent<pos:position pos:line="21" pos:column="60"/></name></expr></argument>)<pos:position pos:line="21" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="21" pos:column="63">len<pos:position pos:line="21" pos:column="66"/></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">sensor_name_ptr<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">strstr<pos:position pos:line="23" pos:column="27"/></name> <argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">sensor_name<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="42">")."<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">sensor_name_ptr<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">==<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">NULL<pos:position pos:line="24" pos:column="30"/></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="5">sensor_name_ptr<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="23">sensor_name<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt></block></then>
  <else pos:line="26" pos:column="3">else
  <block pos:line="27" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">char<pos:position pos:line="28" pos:column="9"/></name> <modifier pos:line="28" pos:column="10">*<pos:position pos:line="28" pos:column="11"/></modifier></type><name pos:line="28" pos:column="11">sensor_name_ptr_id<pos:position pos:line="28" pos:column="29"/></name> <init pos:line="28" pos:column="30">= <expr><call><name pos:line="28" pos:column="32">strstr<pos:position pos:line="28" pos:column="38"/></name> <argument_list pos:line="28" pos:column="39">(<argument><expr><name pos:line="28" pos:column="40">sensor_name<pos:position pos:line="28" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="53">"("<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="58"/></decl_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">sensor_name_ptr<pos:position pos:line="30" pos:column="20"/></name> <operator pos:line="30" pos:column="21">+=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="24">2<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">len<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">=<pos:position pos:line="31" pos:column="10"/></operator> <name pos:line="31" pos:column="11">DATA_MAX_NAME_LEN<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">-<pos:position pos:line="31" pos:column="30"/></operator> <call><name pos:line="31" pos:column="31">strlen<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">sensor_name<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">strncat<pos:position pos:line="32" pos:column="12"/></name><argument_list pos:line="32" pos:column="12">(<argument><expr><name pos:line="32" pos:column="13">sensor_name<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="26">" "<pos:position pos:line="32" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="31">len<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">--<pos:position pos:line="32" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">strncat<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name pos:line="33" pos:column="13">sensor_name<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="26">sensor_name_ptr_id<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, 
      <argument><expr><call><name pos:line="34" pos:column="7">MIN<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><name pos:line="34" pos:column="11">sensor_name_ptr<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">-<pos:position pos:line="34" pos:column="28"/></operator> <name pos:line="34" pos:column="29">sensor_name_ptr_id<pos:position pos:line="34" pos:column="47"/></name> <operator pos:line="34" pos:column="48">-<pos:position pos:line="34" pos:column="49"/></operator> <literal type="number" pos:line="34" pos:column="50">1<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="53">len<pos:position pos:line="34" pos:column="56"/></name></expr></argument>)<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="37" pos:column="3">/* Both `ignorelist' and `plugin_instance' may be NULL. */</comment>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><call><name pos:line="38" pos:column="7">ignorelist_match<pos:position pos:line="38" pos:column="23"/></name> <argument_list pos:line="38" pos:column="24">(<argument><expr><name pos:line="38" pos:column="25">ignorelist<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">sensor_name_ptr<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call> <operator pos:line="38" pos:column="54">!=<pos:position pos:line="38" pos:column="56"/></operator> <literal type="number" pos:line="38" pos:column="57">0<pos:position pos:line="38" pos:column="58"/></literal></expr>)<pos:position pos:line="38" pos:column="59"/></condition><then pos:line="38" pos:column="59">
    <block type="pseudo"><return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><literal type="number" pos:line="39" pos:column="13">0<pos:position pos:line="39" pos:column="14"/></literal><operator pos:line="39" pos:column="14">)<pos:position pos:line="39" pos:column="15"/></operator></expr>;<pos:position pos:line="39" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="41" pos:column="3">/* FIXME: Use rate unit or base unit to scale the value */</comment>

  <expr_stmt><expr><name pos:line="43" pos:column="3">sensor_type<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">=<pos:position pos:line="43" pos:column="16"/></operator> <call><name pos:line="43" pos:column="17">ipmi_sensor_get_sensor_type<pos:position pos:line="43" pos:column="44"/></name> <argument_list pos:line="43" pos:column="45">(<argument><expr><name pos:line="43" pos:column="46">sensor<pos:position pos:line="43" pos:column="52"/></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>
  <switch pos:line="44" pos:column="3">switch <condition pos:line="44" pos:column="10">(<expr><name pos:line="44" pos:column="11">sensor_type<pos:position pos:line="44" pos:column="22"/></name></expr>)<pos:position pos:line="44" pos:column="23"/></condition>
  <block pos:line="45" pos:column="3">{
    <case pos:line="46" pos:column="5">case <expr><name pos:line="46" pos:column="10">IPMI_SENSOR_TYPE_TEMPERATURE<pos:position pos:line="46" pos:column="38"/></name></expr>:<pos:position pos:line="46" pos:column="39"/></case>
      <expr_stmt><expr><name pos:line="47" pos:column="7">type<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <literal type="string" pos:line="47" pos:column="14">"temperature"<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>
      <break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break>

    <case pos:line="50" pos:column="5">case <expr><name pos:line="50" pos:column="10">IPMI_SENSOR_TYPE_VOLTAGE<pos:position pos:line="50" pos:column="34"/></name></expr>:<pos:position pos:line="50" pos:column="35"/></case>
      <expr_stmt><expr><name pos:line="51" pos:column="7">type<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">=<pos:position pos:line="51" pos:column="13"/></operator> <literal type="string" pos:line="51" pos:column="14">"voltage"<pos:position pos:line="51" pos:column="23"/></literal></expr>;<pos:position pos:line="51" pos:column="24"/></expr_stmt>
      <break pos:line="52" pos:column="7">break;<pos:position pos:line="52" pos:column="13"/></break>

    <case pos:line="54" pos:column="5">case <expr><name pos:line="54" pos:column="10">IPMI_SENSOR_TYPE_CURRENT<pos:position pos:line="54" pos:column="34"/></name></expr>:<pos:position pos:line="54" pos:column="35"/></case>
      <expr_stmt><expr><name pos:line="55" pos:column="7">type<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <literal type="string" pos:line="55" pos:column="14">"current"<pos:position pos:line="55" pos:column="23"/></literal></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
      <break pos:line="56" pos:column="7">break;<pos:position pos:line="56" pos:column="13"/></break>

    <case pos:line="58" pos:column="5">case <expr><name pos:line="58" pos:column="10">IPMI_SENSOR_TYPE_FAN<pos:position pos:line="58" pos:column="30"/></name></expr>:<pos:position pos:line="58" pos:column="31"/></case>
      <expr_stmt><expr><name pos:line="59" pos:column="7">type<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <literal type="string" pos:line="59" pos:column="14">"fanspeed"<pos:position pos:line="59" pos:column="24"/></literal></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt>
      <break pos:line="60" pos:column="7">break;<pos:position pos:line="60" pos:column="13"/></break>

    <default pos:line="62" pos:column="5">default:<pos:position pos:line="62" pos:column="13"/></default>
      <block pos:line="63" pos:column="7">{
        <decl_stmt><decl><type><specifier pos:line="64" pos:column="9">const<pos:position pos:line="64" pos:column="14"/></specifier> <name pos:line="64" pos:column="15">char<pos:position pos:line="64" pos:column="19"/></name> <modifier pos:line="64" pos:column="20">*<pos:position pos:line="64" pos:column="21"/></modifier></type><name pos:line="64" pos:column="21">sensor_type_str<pos:position pos:line="64" pos:column="36"/></name></decl>;<pos:position pos:line="64" pos:column="37"/></decl_stmt>

        <expr_stmt><expr><name pos:line="66" pos:column="9">sensor_type_str<pos:position pos:line="66" pos:column="24"/></name> <operator pos:line="66" pos:column="25">=<pos:position pos:line="66" pos:column="26"/></operator> <call><name pos:line="66" pos:column="27">ipmi_sensor_get_sensor_type_string<pos:position pos:line="66" pos:column="61"/></name> <argument_list pos:line="66" pos:column="62">(<argument><expr><name pos:line="66" pos:column="63">sensor<pos:position pos:line="66" pos:column="69"/></name></expr></argument>)<pos:position pos:line="66" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">INFO<pos:position pos:line="67" pos:column="13"/></name> <argument_list pos:line="67" pos:column="14">(<argument><expr><literal type="string" pos:line="67" pos:column="15">"ipmi plugin: sensor_list_add: Ignore sensor %s, "<pos:position pos:line="67" pos:column="65"/></literal>
            <literal type="string" pos:line="68" pos:column="13">"because I don't know how to handle its type (%#x, %s). "<pos:position pos:line="68" pos:column="70"/></literal>
            <literal type="string" pos:line="69" pos:column="13">"If you need this sensor, please file a bug report."<pos:position pos:line="69" pos:column="65"/></literal></expr></argument>,
            <argument><expr><name pos:line="70" pos:column="13">sensor_name_ptr<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="30">sensor_type<pos:position pos:line="70" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="43">sensor_type_str<pos:position pos:line="70" pos:column="58"/></name></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt>
        <return pos:line="71" pos:column="9">return <expr><operator pos:line="71" pos:column="16">(<pos:position pos:line="71" pos:column="17"/></operator><operator pos:line="71" pos:column="17">-<pos:position pos:line="71" pos:column="18"/></operator><literal type="number" pos:line="71" pos:column="18">1<pos:position pos:line="71" pos:column="19"/></literal><operator pos:line="71" pos:column="19">)<pos:position pos:line="71" pos:column="20"/></operator></expr>;<pos:position pos:line="71" pos:column="21"/></return>
      }<pos:position pos:line="72" pos:column="8"/></block>
  }<pos:position pos:line="73" pos:column="4"/></block></switch> <comment type="block" pos:line="73" pos:column="5">/* switch (sensor_type) */</comment>

  <expr_stmt><expr><call><name pos:line="75" pos:column="3">pthread_mutex_lock<pos:position pos:line="75" pos:column="21"/></name> <argument_list pos:line="75" pos:column="22">(<argument><expr><operator pos:line="75" pos:column="23">&amp;<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="24">sensor_list_lock<pos:position pos:line="75" pos:column="40"/></name></expr></argument>)<pos:position pos:line="75" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name pos:line="77" pos:column="3">list_prev<pos:position pos:line="77" pos:column="12"/></name> <operator pos:line="77" pos:column="13">=<pos:position pos:line="77" pos:column="14"/></operator> <name pos:line="77" pos:column="15">NULL<pos:position pos:line="77" pos:column="19"/></name></expr>;<pos:position pos:line="77" pos:column="20"/></expr_stmt>
  <for pos:line="78" pos:column="3">for <control pos:line="78" pos:column="7">(<init><expr><name pos:line="78" pos:column="8">list_item<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">=<pos:position pos:line="78" pos:column="19"/></operator> <name pos:line="78" pos:column="20">sensor_list<pos:position pos:line="78" pos:column="31"/></name></expr>;<pos:position pos:line="78" pos:column="32"/></init>
      <condition><expr><name pos:line="79" pos:column="7">list_item<pos:position pos:line="79" pos:column="16"/></name> <operator pos:line="79" pos:column="17">!=<pos:position pos:line="79" pos:column="19"/></operator> <name pos:line="79" pos:column="20">NULL<pos:position pos:line="79" pos:column="24"/></name></expr>;<pos:position pos:line="79" pos:column="25"/></condition>
      <incr><expr><name pos:line="80" pos:column="7">list_item<pos:position pos:line="80" pos:column="16"/></name> <operator pos:line="80" pos:column="17">=<pos:position pos:line="80" pos:column="18"/></operator> <name><name pos:line="80" pos:column="19">list_item<pos:position pos:line="80" pos:column="28"/></name><operator pos:line="80" pos:column="28">-&gt;<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="30">next<pos:position pos:line="80" pos:column="34"/></name></name></expr></incr>)<pos:position pos:line="80" pos:column="35"/></control>
  <block pos:line="81" pos:column="3">{
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><call><name pos:line="82" pos:column="9">ipmi_cmp_sensor_id<pos:position pos:line="82" pos:column="27"/></name> <argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">sensor_id<pos:position pos:line="82" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="40">list_item<pos:position pos:line="82" pos:column="49"/></name><operator pos:line="82" pos:column="49">-&gt;<pos:position pos:line="82" pos:column="54"/></operator><name pos:line="82" pos:column="51">sensor_id<pos:position pos:line="82" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="61"/></argument_list></call> <operator pos:line="82" pos:column="62">==<pos:position pos:line="82" pos:column="64"/></operator> <literal type="number" pos:line="82" pos:column="65">0<pos:position pos:line="82" pos:column="66"/></literal></expr>)<pos:position pos:line="82" pos:column="67"/></condition><then pos:line="82" pos:column="67">
      <block type="pseudo"><break pos:line="83" pos:column="7">break;<pos:position pos:line="83" pos:column="13"/></break></block></then></if>
    <expr_stmt><expr><name pos:line="84" pos:column="5">list_prev<pos:position pos:line="84" pos:column="14"/></name> <operator pos:line="84" pos:column="15">=<pos:position pos:line="84" pos:column="16"/></operator> <name pos:line="84" pos:column="17">list_item<pos:position pos:line="84" pos:column="26"/></name></expr>;<pos:position pos:line="84" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="85" pos:column="4"/></block></for> <comment type="block" pos:line="85" pos:column="5">/* for (list_item) */</comment>

  <if pos:line="87" pos:column="3">if <condition pos:line="87" pos:column="6">(<expr><name pos:line="87" pos:column="7">list_item<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">!=<pos:position pos:line="87" pos:column="19"/></operator> <name pos:line="87" pos:column="20">NULL<pos:position pos:line="87" pos:column="24"/></name></expr>)<pos:position pos:line="87" pos:column="25"/></condition><then pos:line="87" pos:column="25">
  <block pos:line="88" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="89" pos:column="5">pthread_mutex_unlock<pos:position pos:line="89" pos:column="25"/></name> <argument_list pos:line="89" pos:column="26">(<argument><expr><operator pos:line="89" pos:column="27">&amp;<pos:position pos:line="89" pos:column="32"/></operator><name pos:line="89" pos:column="28">sensor_list_lock<pos:position pos:line="89" pos:column="44"/></name></expr></argument>)<pos:position pos:line="89" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="46"/></expr_stmt>
    <return pos:line="90" pos:column="5">return <expr><operator pos:line="90" pos:column="12">(<pos:position pos:line="90" pos:column="13"/></operator><literal type="number" pos:line="90" pos:column="13">0<pos:position pos:line="90" pos:column="14"/></literal><operator pos:line="90" pos:column="14">)<pos:position pos:line="90" pos:column="15"/></operator></expr>;<pos:position pos:line="90" pos:column="16"/></return>
  }<pos:position pos:line="91" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="93" pos:column="3">list_item<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">=<pos:position pos:line="93" pos:column="14"/></operator> <operator pos:line="93" pos:column="15">(<pos:position pos:line="93" pos:column="16"/></operator><name pos:line="93" pos:column="16">c_ipmi_sensor_list_t<pos:position pos:line="93" pos:column="36"/></name> <operator pos:line="93" pos:column="37">*<pos:position pos:line="93" pos:column="38"/></operator><operator pos:line="93" pos:column="38">)<pos:position pos:line="93" pos:column="39"/></operator> <call><name pos:line="93" pos:column="40">calloc<pos:position pos:line="93" pos:column="46"/></name> <argument_list pos:line="93" pos:column="47">(<argument><expr><literal type="number" pos:line="93" pos:column="48">1<pos:position pos:line="93" pos:column="49"/></literal></expr></argument>, <argument><expr><sizeof pos:line="93" pos:column="51">sizeof <argument_list pos:line="93" pos:column="58">(<argument><expr><name pos:line="93" pos:column="59">c_ipmi_sensor_list_t<pos:position pos:line="93" pos:column="79"/></name></expr></argument>)<pos:position pos:line="93" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="93" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="82"/></expr_stmt>
  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><name pos:line="94" pos:column="7">list_item<pos:position pos:line="94" pos:column="16"/></name> <operator pos:line="94" pos:column="17">==<pos:position pos:line="94" pos:column="19"/></operator> <name pos:line="94" pos:column="20">NULL<pos:position pos:line="94" pos:column="24"/></name></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25">
  <block pos:line="95" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">pthread_mutex_unlock<pos:position pos:line="96" pos:column="25"/></name> <argument_list pos:line="96" pos:column="26">(<argument><expr><operator pos:line="96" pos:column="27">&amp;<pos:position pos:line="96" pos:column="32"/></operator><name pos:line="96" pos:column="28">sensor_list_lock<pos:position pos:line="96" pos:column="44"/></name></expr></argument>)<pos:position pos:line="96" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="46"/></expr_stmt>
    <return pos:line="97" pos:column="5">return <expr><operator pos:line="97" pos:column="12">(<pos:position pos:line="97" pos:column="13"/></operator><operator pos:line="97" pos:column="13">-<pos:position pos:line="97" pos:column="14"/></operator><literal type="number" pos:line="97" pos:column="14">1<pos:position pos:line="97" pos:column="15"/></literal><operator pos:line="97" pos:column="15">)<pos:position pos:line="97" pos:column="16"/></operator></expr>;<pos:position pos:line="97" pos:column="17"/></return>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="100" pos:column="3">list_item<pos:position pos:line="100" pos:column="12"/></name><operator pos:line="100" pos:column="12">-&gt;<pos:position pos:line="100" pos:column="17"/></operator><name pos:line="100" pos:column="14">sensor_id<pos:position pos:line="100" pos:column="23"/></name></name> <operator pos:line="100" pos:column="24">=<pos:position pos:line="100" pos:column="25"/></operator> <call><name pos:line="100" pos:column="26">ipmi_sensor_convert_to_id<pos:position pos:line="100" pos:column="51"/></name> <argument_list pos:line="100" pos:column="52">(<argument><expr><name pos:line="100" pos:column="53">sensor<pos:position pos:line="100" pos:column="59"/></name></expr></argument>)<pos:position pos:line="100" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="61"/></expr_stmt>

  <if pos:line="102" pos:column="3">if <condition pos:line="102" pos:column="6">(<expr><name pos:line="102" pos:column="7">list_prev<pos:position pos:line="102" pos:column="16"/></name> <operator pos:line="102" pos:column="17">!=<pos:position pos:line="102" pos:column="19"/></operator> <name pos:line="102" pos:column="20">NULL<pos:position pos:line="102" pos:column="24"/></name></expr>)<pos:position pos:line="102" pos:column="25"/></condition><then pos:line="102" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="103" pos:column="5">list_prev<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">-&gt;<pos:position pos:line="103" pos:column="19"/></operator><name pos:line="103" pos:column="16">next<pos:position pos:line="103" pos:column="20"/></name></name> <operator pos:line="103" pos:column="21">=<pos:position pos:line="103" pos:column="22"/></operator> <name pos:line="103" pos:column="23">list_item<pos:position pos:line="103" pos:column="32"/></name></expr>;<pos:position pos:line="103" pos:column="33"/></expr_stmt></block></then>
  <else pos:line="104" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="5">sensor_list<pos:position pos:line="105" pos:column="16"/></name> <operator pos:line="105" pos:column="17">=<pos:position pos:line="105" pos:column="18"/></operator> <name pos:line="105" pos:column="19">list_item<pos:position pos:line="105" pos:column="28"/></name></expr>;<pos:position pos:line="105" pos:column="29"/></expr_stmt></block></else></if>

  <expr_stmt><expr><call><name pos:line="107" pos:column="3">sstrncpy<pos:position pos:line="107" pos:column="11"/></name> <argument_list pos:line="107" pos:column="12">(<argument><expr><name><name pos:line="107" pos:column="13">list_item<pos:position pos:line="107" pos:column="22"/></name><operator pos:line="107" pos:column="22">-&gt;<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="24">sensor_name<pos:position pos:line="107" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="37">sensor_name_ptr<pos:position pos:line="107" pos:column="52"/></name></expr></argument>,
            <argument><expr><sizeof pos:line="108" pos:column="13">sizeof <argument_list pos:line="108" pos:column="20">(<argument><expr><name><name pos:line="108" pos:column="21">list_item<pos:position pos:line="108" pos:column="30"/></name><operator pos:line="108" pos:column="30">-&gt;<pos:position pos:line="108" pos:column="35"/></operator><name pos:line="108" pos:column="32">sensor_name<pos:position pos:line="108" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="108" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="46"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="109" pos:column="3">sstrncpy<pos:position pos:line="109" pos:column="11"/></name> <argument_list pos:line="109" pos:column="12">(<argument><expr><name><name pos:line="109" pos:column="13">list_item<pos:position pos:line="109" pos:column="22"/></name><operator pos:line="109" pos:column="22">-&gt;<pos:position pos:line="109" pos:column="27"/></operator><name pos:line="109" pos:column="24">sensor_type<pos:position pos:line="109" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="109" pos:column="37">type<pos:position pos:line="109" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="109" pos:column="43">sizeof <argument_list pos:line="109" pos:column="50">(<argument><expr><name><name pos:line="109" pos:column="51">list_item<pos:position pos:line="109" pos:column="60"/></name><operator pos:line="109" pos:column="60">-&gt;<pos:position pos:line="109" pos:column="65"/></operator><name pos:line="109" pos:column="62">sensor_type<pos:position pos:line="109" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="109" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="76"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="111" pos:column="3">pthread_mutex_unlock<pos:position pos:line="111" pos:column="23"/></name> <argument_list pos:line="111" pos:column="24">(<argument><expr><operator pos:line="111" pos:column="25">&amp;<pos:position pos:line="111" pos:column="30"/></operator><name pos:line="111" pos:column="26">sensor_list_lock<pos:position pos:line="111" pos:column="42"/></name></expr></argument>)<pos:position pos:line="111" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="44"/></expr_stmt>

  <if pos:line="113" pos:column="3">if <condition pos:line="113" pos:column="6">(<expr><name pos:line="113" pos:column="7">c_ipmi_nofiy_add<pos:position pos:line="113" pos:column="23"/></name> <operator pos:line="113" pos:column="24">&amp;&amp;<pos:position pos:line="113" pos:column="34"/></operator> <operator pos:line="113" pos:column="27">(<pos:position pos:line="113" pos:column="28"/></operator><name pos:line="113" pos:column="28">c_ipmi_init_in_progress<pos:position pos:line="113" pos:column="51"/></name> <operator pos:line="113" pos:column="52">==<pos:position pos:line="113" pos:column="54"/></operator> <literal type="number" pos:line="113" pos:column="55">0<pos:position pos:line="113" pos:column="56"/></literal><operator pos:line="113" pos:column="56">)<pos:position pos:line="113" pos:column="57"/></operator></expr>)<pos:position pos:line="113" pos:column="58"/></condition><then pos:line="113" pos:column="58">
  <block pos:line="114" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="115" pos:column="5">notification_t<pos:position pos:line="115" pos:column="19"/></name></type> <name pos:line="115" pos:column="20">n<pos:position pos:line="115" pos:column="21"/></name> <init pos:line="115" pos:column="22">= <expr><block pos:line="115" pos:column="24">{ <expr><name pos:line="115" pos:column="26">NOTIF_OKAY<pos:position pos:line="115" pos:column="36"/></name></expr>, <expr><call><name pos:line="115" pos:column="38">time<pos:position pos:line="115" pos:column="42"/></name><argument_list pos:line="115" pos:column="42">(<argument><expr><name pos:line="115" pos:column="43">NULL<pos:position pos:line="115" pos:column="47"/></name></expr></argument>)<pos:position pos:line="115" pos:column="48"/></argument_list></call></expr>, <expr><literal type="string" pos:line="115" pos:column="50">""<pos:position pos:line="115" pos:column="52"/></literal></expr>, <expr><literal type="string" pos:line="115" pos:column="54">""<pos:position pos:line="115" pos:column="56"/></literal></expr>, <expr><literal type="string" pos:line="115" pos:column="58">"ipmi"<pos:position pos:line="115" pos:column="64"/></literal></expr>,
                         <expr><literal type="string" pos:line="116" pos:column="26">""<pos:position pos:line="116" pos:column="28"/></literal></expr>, <expr><literal type="string" pos:line="116" pos:column="30">""<pos:position pos:line="116" pos:column="32"/></literal></expr>, <expr><literal type="string" pos:line="116" pos:column="34">""<pos:position pos:line="116" pos:column="36"/></literal></expr>, <expr><name pos:line="116" pos:column="38">NULL<pos:position pos:line="116" pos:column="42"/></name></expr> }<pos:position pos:line="116" pos:column="44"/></block></expr></init></decl>;<pos:position pos:line="116" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="118" pos:column="5">sstrncpy<pos:position pos:line="118" pos:column="13"/></name> <argument_list pos:line="118" pos:column="14">(<argument><expr><name><name pos:line="118" pos:column="15">n<pos:position pos:line="118" pos:column="16"/></name><operator pos:line="118" pos:column="16">.<pos:position pos:line="118" pos:column="17"/></operator><name pos:line="118" pos:column="17">host<pos:position pos:line="118" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="23">hostname_g<pos:position pos:line="118" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="118" pos:column="35">sizeof <argument_list pos:line="118" pos:column="42">(<argument><expr><name><name pos:line="118" pos:column="43">n<pos:position pos:line="118" pos:column="44"/></name><operator pos:line="118" pos:column="44">.<pos:position pos:line="118" pos:column="45"/></operator><name pos:line="118" pos:column="45">host<pos:position pos:line="118" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="118" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="119" pos:column="5">sstrncpy<pos:position pos:line="119" pos:column="13"/></name> <argument_list pos:line="119" pos:column="14">(<argument><expr><name><name pos:line="119" pos:column="15">n<pos:position pos:line="119" pos:column="16"/></name><operator pos:line="119" pos:column="16">.<pos:position pos:line="119" pos:column="17"/></operator><name pos:line="119" pos:column="17">type_instance<pos:position pos:line="119" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="32">list_item<pos:position pos:line="119" pos:column="41"/></name><operator pos:line="119" pos:column="41">-&gt;<pos:position pos:line="119" pos:column="46"/></operator><name pos:line="119" pos:column="43">sensor_name<pos:position pos:line="119" pos:column="54"/></name></name></expr></argument>,
              <argument><expr><sizeof pos:line="120" pos:column="15">sizeof <argument_list pos:line="120" pos:column="22">(<argument><expr><name><name pos:line="120" pos:column="23">n<pos:position pos:line="120" pos:column="24"/></name><operator pos:line="120" pos:column="24">.<pos:position pos:line="120" pos:column="25"/></operator><name pos:line="120" pos:column="25">type_instance<pos:position pos:line="120" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="120" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="121" pos:column="5">sstrncpy<pos:position pos:line="121" pos:column="13"/></name> <argument_list pos:line="121" pos:column="14">(<argument><expr><name><name pos:line="121" pos:column="15">n<pos:position pos:line="121" pos:column="16"/></name><operator pos:line="121" pos:column="16">.<pos:position pos:line="121" pos:column="17"/></operator><name pos:line="121" pos:column="17">type<pos:position pos:line="121" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="23">list_item<pos:position pos:line="121" pos:column="32"/></name><operator pos:line="121" pos:column="32">-&gt;<pos:position pos:line="121" pos:column="37"/></operator><name pos:line="121" pos:column="34">sensor_type<pos:position pos:line="121" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="121" pos:column="47">sizeof <argument_list pos:line="121" pos:column="54">(<argument><expr><name><name pos:line="121" pos:column="55">n<pos:position pos:line="121" pos:column="56"/></name><operator pos:line="121" pos:column="56">.<pos:position pos:line="121" pos:column="57"/></operator><name pos:line="121" pos:column="57">type<pos:position pos:line="121" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="121" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">ssnprintf<pos:position pos:line="122" pos:column="14"/></name> <argument_list pos:line="122" pos:column="15">(<argument><expr><name><name pos:line="122" pos:column="16">n<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">.<pos:position pos:line="122" pos:column="18"/></operator><name pos:line="122" pos:column="18">message<pos:position pos:line="122" pos:column="25"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="27">sizeof <argument_list pos:line="122" pos:column="34">(<argument><expr><name><name pos:line="122" pos:column="35">n<pos:position pos:line="122" pos:column="36"/></name><operator pos:line="122" pos:column="36">.<pos:position pos:line="122" pos:column="37"/></operator><name pos:line="122" pos:column="37">message<pos:position pos:line="122" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="45"/></argument_list></sizeof></expr></argument>,
              <argument><expr><literal type="string" pos:line="123" pos:column="15">"sensor %s added"<pos:position pos:line="123" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="34">list_item<pos:position pos:line="123" pos:column="43"/></name><operator pos:line="123" pos:column="43">-&gt;<pos:position pos:line="123" pos:column="48"/></operator><name pos:line="123" pos:column="45">sensor_name<pos:position pos:line="123" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="125" pos:column="5">plugin_dispatch_notification<pos:position pos:line="125" pos:column="33"/></name> <argument_list pos:line="125" pos:column="34">(<argument><expr><operator pos:line="125" pos:column="35">&amp;<pos:position pos:line="125" pos:column="40"/></operator><name pos:line="125" pos:column="36">n<pos:position pos:line="125" pos:column="37"/></name></expr></argument>)<pos:position pos:line="125" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="39"/></expr_stmt>
  }<pos:position pos:line="126" pos:column="4"/></block></then></if>

  <return pos:line="128" pos:column="3">return <expr><operator pos:line="128" pos:column="10">(<pos:position pos:line="128" pos:column="11"/></operator><literal type="number" pos:line="128" pos:column="11">0<pos:position pos:line="128" pos:column="12"/></literal><operator pos:line="128" pos:column="12">)<pos:position pos:line="128" pos:column="13"/></operator></expr>;<pos:position pos:line="128" pos:column="14"/></return>
}<pos:position pos:line="129" pos:column="2"/></block></function></unit>

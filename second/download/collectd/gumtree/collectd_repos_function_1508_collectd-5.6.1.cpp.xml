<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1508_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_json_notification<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buffer<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">size_t<pos:position pos:line="1" pos:column="51"/></name></type> <name pos:line="1" pos:column="52">buffer_size<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="65">/* {{{ */</comment>
                              <parameter><decl><type><name pos:line="2" pos:column="31">notification_t<pos:position pos:line="2" pos:column="45"/></name> <specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">n<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">yajl_gen<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">g<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">unsigned<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">char<pos:position pos:line="5" pos:column="16"/></name> <specifier pos:line="5" pos:column="17">const<pos:position pos:line="5" pos:column="22"/></specifier> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">out<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">HAVE_YAJL_V2<pos:position pos:line="6" pos:column="17"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">unused_out_len<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">unsigned<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">int<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">unused_out_len<pos:position pos:line="9" pos:column="30"/></name></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">buffer<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">==<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <operator pos:line="12" pos:column="24">||<pos:position pos:line="12" pos:column="26"/></operator> <operator pos:line="12" pos:column="27">(<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">n<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">==<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="33">NULL<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">)<pos:position pos:line="12" pos:column="38"/></operator></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">EINVAL<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then></if>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">HAVE_YAJL_V2<pos:position pos:line="15" pos:column="17"/></name></expr></cpp:if>
  <expr_stmt><expr><name pos:line="16" pos:column="3">g<pos:position pos:line="16" pos:column="4"/></name> <operator pos:line="16" pos:column="5">=<pos:position pos:line="16" pos:column="6"/></operator> <call><name pos:line="16" pos:column="7">yajl_gen_alloc<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="29"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">g<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">==<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return></block></then></if>
<cpp:if pos:line="19" pos:column="1"># <cpp:directive pos:line="19" pos:column="3">if<pos:position pos:line="19" pos:column="5"/></cpp:directive> <expr><name pos:line="19" pos:column="6">COLLECT_DEBUG<pos:position pos:line="19" pos:column="19"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">yajl_gen_config<pos:position pos:line="20" pos:column="18"/></name> <argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">g<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="23">yajl_gen_beautify<pos:position pos:line="20" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="42">1<pos:position pos:line="20" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">yajl_gen_config<pos:position pos:line="21" pos:column="18"/></name> <argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">g<pos:position pos:line="21" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="23">yajl_gen_validate_utf8<pos:position pos:line="21" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="47">1<pos:position pos:line="21" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1"># <cpp:directive pos:line="22" pos:column="3">endif<pos:position pos:line="22" pos:column="8"/></cpp:directive></cpp:endif>

<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else<pos:position pos:line="24" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="24" pos:column="7">/* !HAVE_YAJL_V2 */</comment>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">yajl_gen_config<pos:position pos:line="25" pos:column="18"/></name></type> <name pos:line="25" pos:column="19">conf<pos:position pos:line="25" pos:column="23"/></name> <init pos:line="25" pos:column="24">= <expr><block pos:line="25" pos:column="26">{ <expr><literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal></expr> }<pos:position pos:line="25" pos:column="31"/></block></expr></init></decl>;<pos:position pos:line="25" pos:column="32"/></decl_stmt>
<cpp:if pos:line="26" pos:column="1"># <cpp:directive pos:line="26" pos:column="3">if<pos:position pos:line="26" pos:column="5"/></cpp:directive> <expr><name pos:line="26" pos:column="6">COLLECT_DEBUG<pos:position pos:line="26" pos:column="19"/></name></expr></cpp:if>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">conf<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">.<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">beautify<pos:position pos:line="27" pos:column="16"/></name></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="number" pos:line="27" pos:column="19">1<pos:position pos:line="27" pos:column="20"/></literal></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">conf<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">.<pos:position pos:line="28" pos:column="8"/></operator><name pos:line="28" pos:column="8">indentString<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="string" pos:line="28" pos:column="23">"  "<pos:position pos:line="28" pos:column="27"/></literal></expr>;<pos:position pos:line="28" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="29" pos:column="1"># <cpp:directive pos:line="29" pos:column="3">endif<pos:position pos:line="29" pos:column="8"/></cpp:directive></cpp:endif>
  <expr_stmt><expr><name pos:line="30" pos:column="3">g<pos:position pos:line="30" pos:column="4"/></name> <operator pos:line="30" pos:column="5">=<pos:position pos:line="30" pos:column="6"/></operator> <call><name pos:line="30" pos:column="7">yajl_gen_alloc<pos:position pos:line="30" pos:column="21"/></name> <argument_list pos:line="30" pos:column="22">(<argument><expr><operator pos:line="30" pos:column="23">&amp;<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="24">conf<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">NULL<pos:position pos:line="30" pos:column="34"/></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">g<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">==<pos:position pos:line="31" pos:column="11"/></operator> <name pos:line="31" pos:column="12">NULL<pos:position pos:line="31" pos:column="16"/></name></expr>)<pos:position pos:line="31" pos:column="17"/></condition><then pos:line="31" pos:column="17">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">-<pos:position pos:line="32" pos:column="13"/></operator><literal type="number" pos:line="32" pos:column="13">1<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></return></block></then></if>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><call><name pos:line="35" pos:column="7">format_alert<pos:position pos:line="35" pos:column="19"/></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">g<pos:position pos:line="35" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">n<pos:position pos:line="35" pos:column="25"/></name></expr></argument>)<pos:position pos:line="35" pos:column="26"/></argument_list></call> <operator pos:line="35" pos:column="27">!=<pos:position pos:line="35" pos:column="29"/></operator> <literal type="number" pos:line="35" pos:column="30">0<pos:position pos:line="35" pos:column="31"/></literal></expr>)<pos:position pos:line="35" pos:column="32"/></condition><then pos:line="35" pos:column="32">
  <block pos:line="36" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">yajl_gen_clear<pos:position pos:line="37" pos:column="19"/></name> <argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">g<pos:position pos:line="37" pos:column="22"/></name></expr></argument>)<pos:position pos:line="37" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">yajl_gen_free<pos:position pos:line="38" pos:column="18"/></name> <argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">g<pos:position pos:line="38" pos:column="21"/></name></expr></argument>)<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">-<pos:position pos:line="39" pos:column="13"/></operator><literal type="number" pos:line="39" pos:column="13">1<pos:position pos:line="39" pos:column="14"/></literal></expr>;<pos:position pos:line="39" pos:column="15"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="42" pos:column="3">/* copy to output buffer */</comment>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">yajl_gen_get_buf<pos:position pos:line="43" pos:column="19"/></name> <argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">g<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">out<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="30">&amp;<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="31">unused_out_len<pos:position pos:line="43" pos:column="45"/></name></expr></argument>)<pos:position pos:line="43" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">sstrncpy<pos:position pos:line="44" pos:column="11"/></name> <argument_list pos:line="44" pos:column="12">(<argument><expr><name pos:line="44" pos:column="13">buffer<pos:position pos:line="44" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="21">(<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">void<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">*<pos:position pos:line="44" pos:column="28"/></operator><operator pos:line="44" pos:column="28">)<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">out<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="35">buffer_size<pos:position pos:line="44" pos:column="46"/></name></expr></argument>)<pos:position pos:line="44" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="48"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="46" pos:column="3">yajl_gen_clear<pos:position pos:line="46" pos:column="17"/></name> <argument_list pos:line="46" pos:column="18">(<argument><expr><name pos:line="46" pos:column="19">g<pos:position pos:line="46" pos:column="20"/></name></expr></argument>)<pos:position pos:line="46" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">yajl_gen_free<pos:position pos:line="47" pos:column="16"/></name> <argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">g<pos:position pos:line="47" pos:column="19"/></name></expr></argument>)<pos:position pos:line="47" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
  <return pos:line="48" pos:column="3">return <expr><literal type="number" pos:line="48" pos:column="10">0<pos:position pos:line="48" pos:column="11"/></literal></expr>;<pos:position pos:line="48" pos:column="12"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

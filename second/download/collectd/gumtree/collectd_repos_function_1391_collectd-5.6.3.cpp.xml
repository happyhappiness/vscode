<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1391_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dns_sleep_one_interval<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">void<pos:position pos:line="1" pos:column="39"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cdtime_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">interval<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">timespec<pos:position pos:line="4" pos:column="18"/></name></name></type> <name pos:line="4" pos:column="19">ts<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><block pos:line="4" pos:column="24">{<expr><literal type="number" pos:line="4" pos:column="25">0<pos:position pos:line="4" pos:column="26"/></literal></expr>, <expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr>}<pos:position pos:line="4" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">interval<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">plugin_get_interval<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">()<pos:position pos:line="7" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">CDTIME_T_TO_TIMESPEC<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">interval<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="35">ts<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>

  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><literal type="number" pos:line="10" pos:column="10">42<pos:position pos:line="10" pos:column="12"/></literal></expr>)<pos:position pos:line="10" pos:column="13"/></condition> <block pos:line="10" pos:column="14">{
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">timespec<pos:position pos:line="11" pos:column="20"/></name></name></type> <name pos:line="11" pos:column="21">rem<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><block pos:line="11" pos:column="27">{<expr><literal type="number" pos:line="11" pos:column="28">0<pos:position pos:line="11" pos:column="29"/></literal></expr>, <expr><literal type="number" pos:line="11" pos:column="31">0<pos:position pos:line="11" pos:column="32"/></literal></expr>}<pos:position pos:line="11" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">status<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">nanosleep<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><operator pos:line="13" pos:column="24">&amp;<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="25">ts<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="29">&amp;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="30">rem<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21">
      <block type="pseudo"><break pos:line="15" pos:column="7">break;<pos:position pos:line="15" pos:column="13"/></break></block></then>
    <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">errno<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">==<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">EINTR<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">)<pos:position pos:line="16" pos:column="30"/></operator> <operator pos:line="16" pos:column="31">||<pos:position pos:line="16" pos:column="33"/></operator> <operator pos:line="16" pos:column="34">(<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">errno<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">==<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">EAGAIN<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">)<pos:position pos:line="16" pos:column="51"/></operator></expr>)<pos:position pos:line="16" pos:column="52"/></condition><then pos:line="16" pos:column="52"> <block pos:line="16" pos:column="53">{
      <expr_stmt><expr><name pos:line="17" pos:column="7">ts<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">rem<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>
      <continue pos:line="18" pos:column="7">continue;<pos:position pos:line="18" pos:column="16"/></continue>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif> <else pos:line="19" pos:column="7">else
      <block type="pseudo"><break pos:line="20" pos:column="7">break;<pos:position pos:line="20" pos:column="13"/></break></block></else></if>
  }<pos:position pos:line="21" pos:column="4"/></block></while>

  <return pos:line="23" pos:column="3">return <expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">status<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">)<pos:position pos:line="23" pos:column="18"/></operator></expr>;<pos:position pos:line="23" pos:column="19"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

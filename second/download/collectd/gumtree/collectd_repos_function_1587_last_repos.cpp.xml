<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1587_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">time_t<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">uptime_get_sys<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">void<pos:position pos:line="1" pos:column="34"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list> <block pos:line="1" pos:column="36">{ <comment type="block" pos:line="1" pos:column="38">/* {{{ */</comment>
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">time_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">result<pos:position pos:line="2" pos:column="16"/></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">KERNEL_LINUX<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sysinfo<pos:position pos:line="4" pos:column="17"/></name></name></type> <name pos:line="4" pos:column="18">info<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">status<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <call><name pos:line="7" pos:column="12">sysinfo<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><operator pos:line="7" pos:column="20">&amp;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="21">info<pos:position pos:line="7" pos:column="25"/></name></expr></argument>)<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">status<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">!=<pos:position pos:line="8" pos:column="16"/></operator> <literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19"> <block pos:line="8" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type> <name><name pos:line="9" pos:column="10">errbuf<pos:position pos:line="9" pos:column="16"/></name><index pos:line="9" pos:column="16">[<expr><literal type="number" pos:line="9" pos:column="17">1024<pos:position pos:line="9" pos:column="21"/></literal></expr>]<pos:position pos:line="9" pos:column="22"/></index></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"uptime plugin: Error calling sysinfo: %s"<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="11" pos:column="11">sstrerror<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">errno<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">errbuf<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="36">sizeof<argument_list pos:line="11" pos:column="42">(<argument><expr><name pos:line="11" pos:column="43">errbuf<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="53"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">result<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">time_t<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator><name><name pos:line="15" pos:column="20">info<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">uptime<pos:position pos:line="15" pos:column="31"/></name></name></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt>
<comment type="block" pos:line="16" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">elif<pos:position pos:line="18" pos:column="6"/></cpp:directive> <expr><name pos:line="18" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="18" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">kstat_t<pos:position pos:line="19" pos:column="10"/></name> <modifier pos:line="19" pos:column="11">*<pos:position pos:line="19" pos:column="12"/></modifier></type><name pos:line="19" pos:column="12">ksp<pos:position pos:line="19" pos:column="15"/></name></decl>;<pos:position pos:line="19" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">kstat_named_t<pos:position pos:line="20" pos:column="16"/></name> <modifier pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></modifier></type><name pos:line="20" pos:column="18">knp<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="22" pos:column="3">ksp<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <name pos:line="22" pos:column="9">NULL<pos:position pos:line="22" pos:column="13"/></name></expr>;<pos:position pos:line="22" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">knp<pos:position pos:line="23" pos:column="6"/></name> <operator pos:line="23" pos:column="7">=<pos:position pos:line="23" pos:column="8"/></operator> <name pos:line="23" pos:column="9">NULL<pos:position pos:line="23" pos:column="13"/></name></expr>;<pos:position pos:line="23" pos:column="14"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* kstats chain already opened by update_kstat (using *kc), verify everything
   * went fine. */</comment>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">kc<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">==<pos:position pos:line="27" pos:column="12"/></operator> <name pos:line="27" pos:column="13">NULL<pos:position pos:line="27" pos:column="17"/></name></expr>)<pos:position pos:line="27" pos:column="18"/></condition><then pos:line="27" pos:column="18"> <block pos:line="27" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"uptime plugin: kstat chain control structure not available."<pos:position pos:line="28" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="74"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">-<pos:position pos:line="29" pos:column="13"/></operator><literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">ksp<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <call><name pos:line="32" pos:column="9">kstat_lookup<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">kc<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="26">"unix"<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="34">0<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="37">"system_misc"<pos:position pos:line="32" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name pos:line="33" pos:column="7">ksp<pos:position pos:line="33" pos:column="10"/></name> <operator pos:line="33" pos:column="11">==<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">NULL<pos:position pos:line="33" pos:column="18"/></name></expr>)<pos:position pos:line="33" pos:column="19"/></condition><then pos:line="33" pos:column="19"> <block pos:line="33" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ERROR<pos:position pos:line="34" pos:column="10"/></name><argument_list pos:line="34" pos:column="10">(<argument><expr><literal type="string" pos:line="34" pos:column="11">"uptime plugin: Cannot find unix:0:system_misc kstat."<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">-<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">1<pos:position pos:line="35" pos:column="14"/></literal></expr>;<pos:position pos:line="35" pos:column="15"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><call><name pos:line="38" pos:column="7">kstat_read<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">kc<pos:position pos:line="38" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="22">ksp<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">NULL<pos:position pos:line="38" pos:column="31"/></name></expr></argument>)<pos:position pos:line="38" pos:column="32"/></argument_list></call> <operator pos:line="38" pos:column="33">&lt;<pos:position pos:line="38" pos:column="37"/></operator> <literal type="number" pos:line="38" pos:column="35">0<pos:position pos:line="38" pos:column="36"/></literal></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37"> <block pos:line="38" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">ERROR<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><literal type="string" pos:line="39" pos:column="11">"uptime plugin: kstat_read failed."<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">-<pos:position pos:line="40" pos:column="13"/></operator><literal type="number" pos:line="40" pos:column="13">1<pos:position pos:line="40" pos:column="14"/></literal></expr>;<pos:position pos:line="40" pos:column="15"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="43" pos:column="3">knp<pos:position pos:line="43" pos:column="6"/></name> <operator pos:line="43" pos:column="7">=<pos:position pos:line="43" pos:column="8"/></operator> <operator pos:line="43" pos:column="9">(<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">kstat_named_t<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">*<pos:position pos:line="43" pos:column="25"/></operator><operator pos:line="43" pos:column="25">)<pos:position pos:line="43" pos:column="26"/></operator><call><name pos:line="43" pos:column="26">kstat_data_lookup<pos:position pos:line="43" pos:column="43"/></name><argument_list pos:line="43" pos:column="43">(<argument><expr><name pos:line="43" pos:column="44">ksp<pos:position pos:line="43" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="49">"boot_time"<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="62"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">knp<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">==<pos:position pos:line="44" pos:column="13"/></operator> <name pos:line="44" pos:column="14">NULL<pos:position pos:line="44" pos:column="18"/></name></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block pos:line="44" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ERROR<pos:position pos:line="45" pos:column="10"/></name><argument_list pos:line="45" pos:column="10">(<argument><expr><literal type="string" pos:line="45" pos:column="11">"uptime plugin: kstat_data_lookup (boot_time) failed."<pos:position pos:line="45" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="67"/></expr_stmt>
    <return pos:line="46" pos:column="5">return <expr><operator pos:line="46" pos:column="12">-<pos:position pos:line="46" pos:column="13"/></operator><literal type="number" pos:line="46" pos:column="13">1<pos:position pos:line="46" pos:column="14"/></literal></expr>;<pos:position pos:line="46" pos:column="15"/></return>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name><name pos:line="49" pos:column="7">knp<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">value<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">.<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">ui32<pos:position pos:line="49" pos:column="22"/></name></name> <operator pos:line="49" pos:column="23">==<pos:position pos:line="49" pos:column="25"/></operator> <literal type="number" pos:line="49" pos:column="26">0<pos:position pos:line="49" pos:column="27"/></literal></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28"> <block pos:line="49" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name><argument_list pos:line="50" pos:column="10">(<argument><expr><literal type="string" pos:line="50" pos:column="11">"uptime plugin: kstat_data_lookup returned success, "<pos:position pos:line="50" pos:column="64"/></literal>
          <literal type="string" pos:line="51" pos:column="11">"but `boottime' is zero!"<pos:position pos:line="51" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="38"/></expr_stmt>
    <return pos:line="52" pos:column="5">return <expr><operator pos:line="52" pos:column="12">-<pos:position pos:line="52" pos:column="13"/></operator><literal type="number" pos:line="52" pos:column="13">1<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="55" pos:column="3">result<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <call><name pos:line="55" pos:column="12">time<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">NULL<pos:position pos:line="55" pos:column="21"/></name></expr></argument>)<pos:position pos:line="55" pos:column="22"/></argument_list></call> <operator pos:line="55" pos:column="23">-<pos:position pos:line="55" pos:column="24"/></operator> <operator pos:line="55" pos:column="25">(<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">time_t<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">)<pos:position pos:line="55" pos:column="33"/></operator><name><name pos:line="55" pos:column="33">knp<pos:position pos:line="55" pos:column="36"/></name><operator pos:line="55" pos:column="36">-&gt;<pos:position pos:line="55" pos:column="41"/></operator><name pos:line="55" pos:column="38">value<pos:position pos:line="55" pos:column="43"/></name><operator pos:line="55" pos:column="43">.<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="44">ui32<pos:position pos:line="55" pos:column="48"/></name></name></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
<comment type="block" pos:line="56" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">elif<pos:position pos:line="58" pos:column="6"/></cpp:directive> <expr><name pos:line="58" pos:column="7">HAVE_SYS_SYSCTL_H<pos:position pos:line="58" pos:column="24"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name><name pos:line="59" pos:column="3">struct<pos:position pos:line="59" pos:column="9"/></name> <name pos:line="59" pos:column="10">timeval<pos:position pos:line="59" pos:column="17"/></name></name></type> <name pos:line="59" pos:column="18">boottv<pos:position pos:line="59" pos:column="24"/></name> <init pos:line="59" pos:column="25">= <expr><block pos:line="59" pos:column="27">{<expr><literal type="number" pos:line="59" pos:column="28">0<pos:position pos:line="59" pos:column="29"/></literal></expr>}<pos:position pos:line="59" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="59" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="60" pos:column="3">size_t<pos:position pos:line="60" pos:column="9"/></name></type> <name pos:line="60" pos:column="10">boottv_len<pos:position pos:line="60" pos:column="20"/></name></decl>;<pos:position pos:line="60" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="61" pos:column="3">int<pos:position pos:line="61" pos:column="6"/></name></type> <name pos:line="61" pos:column="7">status<pos:position pos:line="61" pos:column="13"/></name></decl>;<pos:position pos:line="61" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="63" pos:column="3">int<pos:position pos:line="63" pos:column="6"/></name></type> <name><name pos:line="63" pos:column="7">mib<pos:position pos:line="63" pos:column="10"/></name><index pos:line="63" pos:column="10">[]<pos:position pos:line="63" pos:column="12"/></index></name> <init pos:line="63" pos:column="13">= <expr><block pos:line="63" pos:column="15">{<expr><name pos:line="63" pos:column="16">CTL_KERN<pos:position pos:line="63" pos:column="24"/></name></expr>, <expr><name pos:line="63" pos:column="26">KERN_BOOTTIME<pos:position pos:line="63" pos:column="39"/></name></expr>}<pos:position pos:line="63" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="63" pos:column="41"/></decl_stmt>

  <expr_stmt><expr><name pos:line="65" pos:column="3">boottv_len<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">=<pos:position pos:line="65" pos:column="15"/></operator> <sizeof pos:line="65" pos:column="16">sizeof<argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">boottv<pos:position pos:line="65" pos:column="29"/></name></expr></argument>)<pos:position pos:line="65" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="65" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="67" pos:column="3">status<pos:position pos:line="67" pos:column="9"/></name> <operator pos:line="67" pos:column="10">=<pos:position pos:line="67" pos:column="11"/></operator> <call><name pos:line="67" pos:column="12">sysctl<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><name pos:line="67" pos:column="19">mib<pos:position pos:line="67" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="24">STATIC_ARRAY_SIZE<pos:position pos:line="67" pos:column="41"/></name><argument_list pos:line="67" pos:column="41">(<argument><expr><name pos:line="67" pos:column="42">mib<pos:position pos:line="67" pos:column="45"/></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="67" pos:column="48">&amp;<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="49">boottv<pos:position pos:line="67" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="57">&amp;<pos:position pos:line="67" pos:column="62"/></operator><name pos:line="67" pos:column="58">boottv_len<pos:position pos:line="67" pos:column="68"/></name></expr></argument>,
                  <comment type="block" pos:line="68" pos:column="19">/* new_value = */</comment> <argument><expr><name pos:line="68" pos:column="37">NULL<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="68" pos:column="43">/* new_length = */</comment> <argument><expr><literal type="number" pos:line="68" pos:column="62">0<pos:position pos:line="68" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="65"/></expr_stmt>
  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><name pos:line="69" pos:column="7">status<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">!=<pos:position pos:line="69" pos:column="16"/></operator> <literal type="number" pos:line="69" pos:column="17">0<pos:position pos:line="69" pos:column="18"/></literal></expr>)<pos:position pos:line="69" pos:column="19"/></condition><then pos:line="69" pos:column="19"> <block pos:line="69" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">char<pos:position pos:line="70" pos:column="9"/></name></type> <name><name pos:line="70" pos:column="10">errbuf<pos:position pos:line="70" pos:column="16"/></name><index pos:line="70" pos:column="16">[<expr><literal type="number" pos:line="70" pos:column="17">1024<pos:position pos:line="70" pos:column="21"/></literal></expr>]<pos:position pos:line="70" pos:column="22"/></index></name></decl>;<pos:position pos:line="70" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">ERROR<pos:position pos:line="71" pos:column="10"/></name><argument_list pos:line="71" pos:column="10">(<argument><expr><literal type="string" pos:line="71" pos:column="11">"uptime plugin: No value read from sysctl interface: %s"<pos:position pos:line="71" pos:column="67"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="72" pos:column="11">sstrerror<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name pos:line="72" pos:column="21">errno<pos:position pos:line="72" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="28">errbuf<pos:position pos:line="72" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="72" pos:column="36">sizeof<argument_list pos:line="72" pos:column="42">(<argument><expr><name pos:line="72" pos:column="43">errbuf<pos:position pos:line="72" pos:column="49"/></name></expr></argument>)<pos:position pos:line="72" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="72" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="53"/></expr_stmt>
    <return pos:line="73" pos:column="5">return <expr><operator pos:line="73" pos:column="12">-<pos:position pos:line="73" pos:column="13"/></operator><literal type="number" pos:line="73" pos:column="13">1<pos:position pos:line="73" pos:column="14"/></literal></expr>;<pos:position pos:line="73" pos:column="15"/></return>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name><name pos:line="76" pos:column="7">boottv<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">.<pos:position pos:line="76" pos:column="14"/></operator><name pos:line="76" pos:column="14">tv_sec<pos:position pos:line="76" pos:column="20"/></name></name> <operator pos:line="76" pos:column="21">==<pos:position pos:line="76" pos:column="23"/></operator> <literal type="number" pos:line="76" pos:column="24">0<pos:position pos:line="76" pos:column="25"/></literal></expr>)<pos:position pos:line="76" pos:column="26"/></condition><then pos:line="76" pos:column="26"> <block pos:line="76" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="77" pos:column="5">ERROR<pos:position pos:line="77" pos:column="10"/></name><argument_list pos:line="77" pos:column="10">(<argument><expr><literal type="string" pos:line="77" pos:column="11">"uptime plugin: sysctl(3) returned success, "<pos:position pos:line="77" pos:column="56"/></literal>
          <literal type="string" pos:line="78" pos:column="11">"but `boottime' is zero!"<pos:position pos:line="78" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>
    <return pos:line="79" pos:column="5">return <expr><operator pos:line="79" pos:column="12">-<pos:position pos:line="79" pos:column="13"/></operator><literal type="number" pos:line="79" pos:column="13">1<pos:position pos:line="79" pos:column="14"/></literal></expr>;<pos:position pos:line="79" pos:column="15"/></return>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="82" pos:column="3">result<pos:position pos:line="82" pos:column="9"/></name> <operator pos:line="82" pos:column="10">=<pos:position pos:line="82" pos:column="11"/></operator> <call><name pos:line="82" pos:column="12">time<pos:position pos:line="82" pos:column="16"/></name><argument_list pos:line="82" pos:column="16">(<argument><expr><name pos:line="82" pos:column="17">NULL<pos:position pos:line="82" pos:column="21"/></name></expr></argument>)<pos:position pos:line="82" pos:column="22"/></argument_list></call> <operator pos:line="82" pos:column="23">-<pos:position pos:line="82" pos:column="24"/></operator> <name><name pos:line="82" pos:column="25">boottv<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">.<pos:position pos:line="82" pos:column="32"/></operator><name pos:line="82" pos:column="32">tv_sec<pos:position pos:line="82" pos:column="38"/></name></name></expr>;<pos:position pos:line="82" pos:column="39"/></expr_stmt>
<comment type="block" pos:line="83" pos:column="1">/* #endif HAVE_SYS_SYSCTL_H */</comment>

<cpp:elif pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">elif<pos:position pos:line="85" pos:column="6"/></cpp:directive> <expr><name pos:line="85" pos:column="7">HAVE_PERFSTAT<pos:position pos:line="85" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="86" pos:column="3">int<pos:position pos:line="86" pos:column="6"/></name></type> <name pos:line="86" pos:column="7">status<pos:position pos:line="86" pos:column="13"/></name></decl>;<pos:position pos:line="86" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="87" pos:column="3">perfstat_cpu_total_t<pos:position pos:line="87" pos:column="23"/></name></type> <name pos:line="87" pos:column="24">cputotal<pos:position pos:line="87" pos:column="32"/></name></decl>;<pos:position pos:line="87" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="88" pos:column="3">int<pos:position pos:line="88" pos:column="6"/></name></type> <name pos:line="88" pos:column="7">hertz<pos:position pos:line="88" pos:column="12"/></name></decl>;<pos:position pos:line="88" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="90" pos:column="3">status<pos:position pos:line="90" pos:column="9"/></name> <operator pos:line="90" pos:column="10">=<pos:position pos:line="90" pos:column="11"/></operator> <call><name pos:line="90" pos:column="12">perfstat_cpu_total<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">NULL<pos:position pos:line="90" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="37">&amp;<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="38">cputotal<pos:position pos:line="90" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="48">sizeof<argument_list pos:line="90" pos:column="54">(<argument><expr><name pos:line="90" pos:column="55">perfstat_cpu_total_t<pos:position pos:line="90" pos:column="75"/></name></expr></argument>)<pos:position pos:line="90" pos:column="76"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="78">1<pos:position pos:line="90" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="81"/></expr_stmt>
  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name pos:line="91" pos:column="7">status<pos:position pos:line="91" pos:column="13"/></name> <operator pos:line="91" pos:column="14">&lt;<pos:position pos:line="91" pos:column="18"/></operator> <literal type="number" pos:line="91" pos:column="16">0<pos:position pos:line="91" pos:column="17"/></literal></expr>)<pos:position pos:line="91" pos:column="18"/></condition><then pos:line="91" pos:column="18"> <block pos:line="91" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="92" pos:column="5">char<pos:position pos:line="92" pos:column="9"/></name></type> <name><name pos:line="92" pos:column="10">errbuf<pos:position pos:line="92" pos:column="16"/></name><index pos:line="92" pos:column="16">[<expr><literal type="number" pos:line="92" pos:column="17">1024<pos:position pos:line="92" pos:column="21"/></literal></expr>]<pos:position pos:line="92" pos:column="22"/></index></name></decl>;<pos:position pos:line="92" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="93" pos:column="5">ERROR<pos:position pos:line="93" pos:column="10"/></name><argument_list pos:line="93" pos:column="10">(<argument><expr><literal type="string" pos:line="93" pos:column="11">"uptime plugin: perfstat_cpu_total: %s"<pos:position pos:line="93" pos:column="50"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="94" pos:column="11">sstrerror<pos:position pos:line="94" pos:column="20"/></name><argument_list pos:line="94" pos:column="20">(<argument><expr><name pos:line="94" pos:column="21">errno<pos:position pos:line="94" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="28">errbuf<pos:position pos:line="94" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="94" pos:column="36">sizeof<argument_list pos:line="94" pos:column="42">(<argument><expr><name pos:line="94" pos:column="43">errbuf<pos:position pos:line="94" pos:column="49"/></name></expr></argument>)<pos:position pos:line="94" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="94" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="94" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="53"/></expr_stmt>
    <return pos:line="95" pos:column="5">return <expr><operator pos:line="95" pos:column="12">-<pos:position pos:line="95" pos:column="13"/></operator><literal type="number" pos:line="95" pos:column="13">1<pos:position pos:line="95" pos:column="14"/></literal></expr>;<pos:position pos:line="95" pos:column="15"/></return>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="98" pos:column="3">hertz<pos:position pos:line="98" pos:column="8"/></name> <operator pos:line="98" pos:column="9">=<pos:position pos:line="98" pos:column="10"/></operator> <call><name pos:line="98" pos:column="11">sysconf<pos:position pos:line="98" pos:column="18"/></name><argument_list pos:line="98" pos:column="18">(<argument><expr><name pos:line="98" pos:column="19">_SC_CLK_TCK<pos:position pos:line="98" pos:column="30"/></name></expr></argument>)<pos:position pos:line="98" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
  <if pos:line="99" pos:column="3">if <condition pos:line="99" pos:column="6">(<expr><name pos:line="99" pos:column="7">hertz<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">&lt;=<pos:position pos:line="99" pos:column="18"/></operator> <literal type="number" pos:line="99" pos:column="16">0<pos:position pos:line="99" pos:column="17"/></literal></expr>)<pos:position pos:line="99" pos:column="18"/></condition><then pos:line="99" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="5">hertz<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">=<pos:position pos:line="100" pos:column="12"/></operator> <name pos:line="100" pos:column="13">HZ<pos:position pos:line="100" pos:column="15"/></name></expr>;<pos:position pos:line="100" pos:column="16"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="102" pos:column="3">result<pos:position pos:line="102" pos:column="9"/></name> <operator pos:line="102" pos:column="10">=<pos:position pos:line="102" pos:column="11"/></operator> <name><name pos:line="102" pos:column="12">cputotal<pos:position pos:line="102" pos:column="20"/></name><operator pos:line="102" pos:column="20">.<pos:position pos:line="102" pos:column="21"/></operator><name pos:line="102" pos:column="21">lbolt<pos:position pos:line="102" pos:column="26"/></name></name> <operator pos:line="102" pos:column="27">/<pos:position pos:line="102" pos:column="28"/></operator> <name pos:line="102" pos:column="29">hertz<pos:position pos:line="102" pos:column="34"/></name></expr>;<pos:position pos:line="102" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">endif<pos:position pos:line="103" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="103" pos:column="8">/* HAVE_PERFSTAT */</comment>

  <return pos:line="105" pos:column="3">return <expr><name pos:line="105" pos:column="10">result<pos:position pos:line="105" pos:column="16"/></name></expr>;<pos:position pos:line="105" pos:column="17"/></return>
}<pos:position pos:line="106" pos:column="2"/></block></function></unit>

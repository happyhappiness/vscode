<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2302_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lcc_putval<pos:position pos:line="1" pos:column="15"/></name><parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">lcc_connection_t<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">c<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">lcc_value_list_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">vl<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> <comment type="block" pos:line="1" pos:column="65">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">ident_str<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">6<pos:position pos:line="3" pos:column="19"/></literal> <operator pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="22">LCC_NAME_LEN<pos:position pos:line="3" pos:column="34"/></name></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">ident_esc<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><literal type="number" pos:line="4" pos:column="18">12<pos:position pos:line="4" pos:column="20"/></literal> <operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">LCC_NAME_LEN<pos:position pos:line="4" pos:column="35"/></name></expr>]<pos:position pos:line="4" pos:column="36"/></index></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">command<pos:position pos:line="5" pos:column="15"/></name><index pos:line="5" pos:column="15">[<expr><literal type="number" pos:line="5" pos:column="16">1024<pos:position pos:line="5" pos:column="20"/></literal></expr>]<pos:position pos:line="5" pos:column="21"/></index></name> <init pos:line="5" pos:column="22">= <expr><literal type="string" pos:line="5" pos:column="24">""<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lcc_response_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">res<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">c<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="19">||<pos:position pos:line="9" pos:column="21"/></operator> <operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">vl<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">==<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">)<pos:position pos:line="9" pos:column="34"/></operator> <operator pos:line="9" pos:column="35">||<pos:position pos:line="9" pos:column="37"/></operator> <operator pos:line="9" pos:column="38">(<pos:position pos:line="9" pos:column="39"/></operator><name><name pos:line="9" pos:column="39">vl<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">values_len<pos:position pos:line="9" pos:column="53"/></name></name> <operator pos:line="9" pos:column="54">&lt;<pos:position pos:line="9" pos:column="58"/></operator> <literal type="number" pos:line="9" pos:column="56">1<pos:position pos:line="9" pos:column="57"/></literal><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator> <operator pos:line="9" pos:column="59">||<pos:position pos:line="9" pos:column="61"/></operator>
      <operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name><name pos:line="10" pos:column="8">vl<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">values<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">)<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">||<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="31">(<pos:position pos:line="10" pos:column="32"/></operator><name><name pos:line="10" pos:column="32">vl<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">values_types<pos:position pos:line="10" pos:column="48"/></name></name> <operator pos:line="10" pos:column="49">==<pos:position pos:line="10" pos:column="51"/></operator> <name pos:line="10" pos:column="52">NULL<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">)<pos:position pos:line="10" pos:column="57"/></operator></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58"> <block pos:line="10" pos:column="59">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">lcc_set_errno<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">c<pos:position pos:line="11" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="22">EINVAL<pos:position pos:line="11" pos:column="28"/></name></expr></argument>)<pos:position pos:line="11" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><operator pos:line="12" pos:column="13">-<pos:position pos:line="12" pos:column="14"/></operator><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal><operator pos:line="12" pos:column="15">)<pos:position pos:line="12" pos:column="16"/></operator></expr>;<pos:position pos:line="12" pos:column="17"/></return>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">lcc_identifier_to_string<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">c<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">ident_str<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="51">sizeof<argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">ident_str<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></sizeof></expr></argument>,
                                    <argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name><name pos:line="16" pos:column="38">vl<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">-&gt;<pos:position pos:line="16" pos:column="45"/></operator><name pos:line="16" pos:column="42">identifier<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">status<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">!=<pos:position pos:line="17" pos:column="16"/></operator> <literal type="number" pos:line="17" pos:column="17">0<pos:position pos:line="17" pos:column="18"/></literal></expr>)<pos:position pos:line="17" pos:column="19"/></condition><then pos:line="17" pos:column="19">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">status<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">SSTRCATF<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">command<pos:position pos:line="20" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="21">"PUTVAL %s"<pos:position pos:line="20" pos:column="32"/></literal></expr></argument>,
           <argument><expr><call><name pos:line="21" pos:column="12">lcc_strescape<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">ident_esc<pos:position pos:line="21" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="37">ident_str<pos:position pos:line="21" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="48">sizeof<argument_list pos:line="21" pos:column="54">(<argument><expr><name pos:line="21" pos:column="55">ident_esc<pos:position pos:line="21" pos:column="64"/></name></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="68"/></expr_stmt>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><name><name pos:line="23" pos:column="7">vl<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">interval<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">&gt;<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="22">0.0<pos:position pos:line="23" pos:column="25"/></literal></expr>)<pos:position pos:line="23" pos:column="26"/></condition><then pos:line="23" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">SSTRCATF<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name pos:line="24" pos:column="14">command<pos:position pos:line="24" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">" interval=%.3f"<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="41">vl<pos:position pos:line="24" pos:column="43"/></name><operator pos:line="24" pos:column="43">-&gt;<pos:position pos:line="24" pos:column="48"/></operator><name pos:line="24" pos:column="45">interval<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="55"/></expr_stmt></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">vl<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">time<pos:position pos:line="26" pos:column="15"/></name></name> <operator pos:line="26" pos:column="16">&gt;<pos:position pos:line="26" pos:column="20"/></operator> <literal type="number" pos:line="26" pos:column="18">0.0<pos:position pos:line="26" pos:column="21"/></literal></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="5">SSTRCATF<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">command<pos:position pos:line="27" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">" %.3f"<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="32">vl<pos:position pos:line="27" pos:column="34"/></name><operator pos:line="27" pos:column="34">-&gt;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="36">time<pos:position pos:line="27" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="42"/></expr_stmt></block></then>
  <else pos:line="28" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">SSTRCAT<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><name pos:line="29" pos:column="13">command<pos:position pos:line="29" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="22">" N"<pos:position pos:line="29" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt></block></else></if>

  <for pos:line="31" pos:column="3">for <control pos:line="31" pos:column="7">(<init><decl><type><name pos:line="31" pos:column="8">size_t<pos:position pos:line="31" pos:column="14"/></name></type> <name pos:line="31" pos:column="15">i<pos:position pos:line="31" pos:column="16"/></name> <init pos:line="31" pos:column="17">= <expr><literal type="number" pos:line="31" pos:column="19">0<pos:position pos:line="31" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="21"/></init> <condition><expr><name pos:line="31" pos:column="22">i<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">&lt;<pos:position pos:line="31" pos:column="28"/></operator> <name><name pos:line="31" pos:column="26">vl<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">values_len<pos:position pos:line="31" pos:column="40"/></name></name></expr>;<pos:position pos:line="31" pos:column="41"/></condition> <incr><expr><name pos:line="31" pos:column="42">i<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">++<pos:position pos:line="31" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="31" pos:column="46"/></control> <block pos:line="31" pos:column="47">{
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">vl<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">-&gt;<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="13">values_types<pos:position pos:line="32" pos:column="25"/></name><index pos:line="32" pos:column="25">[<expr><name pos:line="32" pos:column="26">i<pos:position pos:line="32" pos:column="27"/></name></expr>]<pos:position pos:line="32" pos:column="28"/></index></name> <operator pos:line="32" pos:column="29">==<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">LCC_TYPE_COUNTER<pos:position pos:line="32" pos:column="48"/></name></expr>)<pos:position pos:line="32" pos:column="49"/></condition><then pos:line="32" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="7">SSTRCATF<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">command<pos:position pos:line="33" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="25">":%"<pos:position pos:line="33" pos:column="29"/></literal> <name pos:line="33" pos:column="30">PRIu64<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="38">vl<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">values<pos:position pos:line="33" pos:column="48"/></name><index pos:line="33" pos:column="48">[<expr><name pos:line="33" pos:column="49">i<pos:position pos:line="33" pos:column="50"/></name></expr>]<pos:position pos:line="33" pos:column="51"/></index></name><operator pos:line="33" pos:column="51">.<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">counter<pos:position pos:line="33" pos:column="59"/></name></expr></argument>)<pos:position pos:line="33" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt></block></then>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><name><name pos:line="34" pos:column="14">vl<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">values_types<pos:position pos:line="34" pos:column="30"/></name><index pos:line="34" pos:column="30">[<expr><name pos:line="34" pos:column="31">i<pos:position pos:line="34" pos:column="32"/></name></expr>]<pos:position pos:line="34" pos:column="33"/></index></name> <operator pos:line="34" pos:column="34">==<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="37">LCC_TYPE_GAUGE<pos:position pos:line="34" pos:column="51"/></name></expr>)<pos:position pos:line="34" pos:column="52"/></condition><then pos:line="34" pos:column="52"> <block pos:line="34" pos:column="53">{
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><call><name pos:line="35" pos:column="11">isnan<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><name><name pos:line="35" pos:column="17">vl<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">values<pos:position pos:line="35" pos:column="27"/></name><index pos:line="35" pos:column="27">[<expr><name pos:line="35" pos:column="28">i<pos:position pos:line="35" pos:column="29"/></name></expr>]<pos:position pos:line="35" pos:column="30"/></index></name><operator pos:line="35" pos:column="30">.<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">gauge<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="38"/></condition><then pos:line="35" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="9">SSTRCATF<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">command<pos:position pos:line="36" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="27">":U"<pos:position pos:line="36" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt></block></then>
      <else pos:line="37" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="9">SSTRCATF<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">command<pos:position pos:line="38" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">":%g"<pos:position pos:line="38" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="34">vl<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">-&gt;<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="38">values<pos:position pos:line="38" pos:column="44"/></name><index pos:line="38" pos:column="44">[<expr><name pos:line="38" pos:column="45">i<pos:position pos:line="38" pos:column="46"/></name></expr>]<pos:position pos:line="38" pos:column="47"/></index></name><operator pos:line="38" pos:column="47">.<pos:position pos:line="38" pos:column="48"/></operator><name pos:line="38" pos:column="48">gauge<pos:position pos:line="38" pos:column="53"/></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt></block></else></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if></elseif> <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if <condition pos:line="39" pos:column="15">(<expr><name><name pos:line="39" pos:column="16">vl<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">values_types<pos:position pos:line="39" pos:column="32"/></name><index pos:line="39" pos:column="32">[<expr><name pos:line="39" pos:column="33">i<pos:position pos:line="39" pos:column="34"/></name></expr>]<pos:position pos:line="39" pos:column="35"/></index></name> <operator pos:line="39" pos:column="36">==<pos:position pos:line="39" pos:column="38"/></operator> <name pos:line="39" pos:column="39">LCC_TYPE_DERIVE<pos:position pos:line="39" pos:column="54"/></name></expr>)<pos:position pos:line="39" pos:column="55"/></condition><then pos:line="39" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">SSTRCATF<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">command<pos:position pos:line="40" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="25">":%"<pos:position pos:line="40" pos:column="29"/></literal> <name pos:line="40" pos:column="30">PRIu64<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="38">vl<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">values<pos:position pos:line="40" pos:column="48"/></name><index pos:line="40" pos:column="48">[<expr><name pos:line="40" pos:column="49">i<pos:position pos:line="40" pos:column="50"/></name></expr>]<pos:position pos:line="40" pos:column="51"/></index></name><operator pos:line="40" pos:column="51">.<pos:position pos:line="40" pos:column="52"/></operator><name pos:line="40" pos:column="52">derive<pos:position pos:line="40" pos:column="58"/></name></expr></argument>)<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="60"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><name><name pos:line="41" pos:column="14">vl<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">values_types<pos:position pos:line="41" pos:column="30"/></name><index pos:line="41" pos:column="30">[<expr><name pos:line="41" pos:column="31">i<pos:position pos:line="41" pos:column="32"/></name></expr>]<pos:position pos:line="41" pos:column="33"/></index></name> <operator pos:line="41" pos:column="34">==<pos:position pos:line="41" pos:column="36"/></operator> <name pos:line="41" pos:column="37">LCC_TYPE_ABSOLUTE<pos:position pos:line="41" pos:column="54"/></name></expr>)<pos:position pos:line="41" pos:column="55"/></condition><then pos:line="41" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">SSTRCATF<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><name pos:line="42" pos:column="16">command<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="25">":%"<pos:position pos:line="42" pos:column="29"/></literal> <name pos:line="42" pos:column="30">PRIu64<pos:position pos:line="42" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="38">vl<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">values<pos:position pos:line="42" pos:column="48"/></name><index pos:line="42" pos:column="48">[<expr><name pos:line="42" pos:column="49">i<pos:position pos:line="42" pos:column="50"/></name></expr>]<pos:position pos:line="42" pos:column="51"/></index></name><operator pos:line="42" pos:column="51">.<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">absolute<pos:position pos:line="42" pos:column="60"/></name></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt></block></then></if></elseif></if>

  }<pos:position pos:line="44" pos:column="4"/></block></for> <comment type="block" pos:line="44" pos:column="5">/* for (i = 0; i &lt; vl-&gt;values_len; i++) */</comment>

  <expr_stmt><expr><name pos:line="46" pos:column="3">status<pos:position pos:line="46" pos:column="9"/></name> <operator pos:line="46" pos:column="10">=<pos:position pos:line="46" pos:column="11"/></operator> <call><name pos:line="46" pos:column="12">lcc_sendreceive<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">c<pos:position pos:line="46" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="31">command<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="41">res<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">!=<pos:position pos:line="47" pos:column="16"/></operator> <literal type="number" pos:line="47" pos:column="17">0<pos:position pos:line="47" pos:column="18"/></literal></expr>)<pos:position pos:line="47" pos:column="19"/></condition><then pos:line="47" pos:column="19">
    <block type="pseudo"><return pos:line="48" pos:column="5">return <expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">status<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">)<pos:position pos:line="48" pos:column="20"/></operator></expr>;<pos:position pos:line="48" pos:column="21"/></return></block></then></if>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name><name pos:line="50" pos:column="7">res<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">.<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">status<pos:position pos:line="50" pos:column="17"/></name></name> <operator pos:line="50" pos:column="18">!=<pos:position pos:line="50" pos:column="20"/></operator> <literal type="number" pos:line="50" pos:column="21">0<pos:position pos:line="50" pos:column="22"/></literal></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <block pos:line="50" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">LCC_SET_ERRSTR<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">c<pos:position pos:line="51" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="23">"Server error: %s"<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="43">res<pos:position pos:line="51" pos:column="46"/></name><operator pos:line="51" pos:column="46">.<pos:position pos:line="51" pos:column="47"/></operator><name pos:line="51" pos:column="47">message<pos:position pos:line="51" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">lcc_response_free<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><operator pos:line="52" pos:column="23">&amp;<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="24">res<pos:position pos:line="52" pos:column="27"/></name></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><operator pos:line="53" pos:column="13">-<pos:position pos:line="53" pos:column="14"/></operator><literal type="number" pos:line="53" pos:column="14">1<pos:position pos:line="53" pos:column="15"/></literal><operator pos:line="53" pos:column="15">)<pos:position pos:line="53" pos:column="16"/></operator></expr>;<pos:position pos:line="53" pos:column="17"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="56" pos:column="3">lcc_response_free<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><operator pos:line="56" pos:column="21">&amp;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="22">res<pos:position pos:line="56" pos:column="25"/></name></expr></argument>)<pos:position pos:line="56" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="27"/></expr_stmt>
  <return pos:line="57" pos:column="3">return <expr><operator pos:line="57" pos:column="10">(<pos:position pos:line="57" pos:column="11"/></operator><literal type="number" pos:line="57" pos:column="11">0<pos:position pos:line="57" pos:column="12"/></literal><operator pos:line="57" pos:column="12">)<pos:position pos:line="57" pos:column="13"/></operator></expr>;<pos:position pos:line="57" pos:column="14"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2637_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cf_util_get_flag<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
                     <parameter><decl><type><name pos:line="2" pos:column="22">unsigned<pos:position pos:line="2" pos:column="30"/></name> <name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">ret_value<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">unsigned<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">flag<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list> <block pos:line="2" pos:column="66">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">_Bool<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">b<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">ret_value<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">EINVAL<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">)<pos:position pos:line="7" pos:column="20"/></operator></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">b<pos:position pos:line="9" pos:column="4"/></name> <operator pos:line="9" pos:column="5">=<pos:position pos:line="9" pos:column="6"/></operator> <literal type="number" pos:line="9" pos:column="7">0<pos:position pos:line="9" pos:column="8"/></literal></expr>;<pos:position pos:line="9" pos:column="9"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">status<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <call><name pos:line="10" pos:column="12">cf_util_get_boolean<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">(<argument><expr><name pos:line="10" pos:column="32">ci<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="36">&amp;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="37">b<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">!=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">status<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">)<pos:position pos:line="12" pos:column="20"/></operator></expr>;<pos:position pos:line="12" pos:column="21"/></return></block></then></if>

  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">b<pos:position pos:line="14" pos:column="8"/></name></expr>)<pos:position pos:line="14" pos:column="9"/></condition><then pos:line="14" pos:column="9"> <block pos:line="14" pos:column="10">{
    <expr_stmt><expr><operator pos:line="15" pos:column="5">*<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">ret_value<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">|=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">flag<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then> <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><name pos:line="17" pos:column="6">ret_value<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">&amp;=<pos:position pos:line="17" pos:column="22"/></operator> <operator pos:line="17" pos:column="19">~<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">flag<pos:position pos:line="17" pos:column="24"/></name></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></else></if>

  <return pos:line="20" pos:column="3">return <expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><literal type="number" pos:line="20" pos:column="11">0<pos:position pos:line="20" pos:column="12"/></literal><operator pos:line="20" pos:column="12">)<pos:position pos:line="20" pos:column="13"/></operator></expr>;<pos:position pos:line="20" pos:column="14"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

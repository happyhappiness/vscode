<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1678_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">snmp_agent_table_row_remove<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">table_definition_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">td<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>,
                                       <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">instance<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list> <block pos:line="2" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name> <modifier pos:line="3" pos:column="7">*<pos:position pos:line="3" pos:column="8"/></modifier></type><name pos:line="3" pos:column="8">index<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name pos:line="3" pos:column="16">NULL<pos:position pos:line="3" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">ins<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">td<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">index_oid<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">oid_len<pos:position pos:line="6" pos:column="28"/></name></name></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29"> <block pos:line="6" pos:column="30">{
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">c_avl_get<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name><name pos:line="7" pos:column="20">td<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">-&gt;<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="24">instance_index<pos:position pos:line="7" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">instance<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="50">(<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">void<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">*<pos:position pos:line="7" pos:column="57"/></operator><operator pos:line="7" pos:column="57">*<pos:position pos:line="7" pos:column="58"/></operator><operator pos:line="7" pos:column="58">)<pos:position pos:line="7" pos:column="59"/></operator><operator pos:line="7" pos:column="59">&amp;<pos:position pos:line="7" pos:column="64"/></operator><name pos:line="7" pos:column="60">index<pos:position pos:line="7" pos:column="65"/></name></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call> <operator pos:line="7" pos:column="67">!=<pos:position pos:line="7" pos:column="69"/></operator> <literal type="number" pos:line="7" pos:column="70">0<pos:position pos:line="7" pos:column="71"/></literal><operator pos:line="7" pos:column="71">)<pos:position pos:line="7" pos:column="72"/></operator> <operator pos:line="7" pos:column="73">||<pos:position pos:line="7" pos:column="75"/></operator>
        <operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">c_avl_get<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name><name pos:line="8" pos:column="20">td<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">index_instance<pos:position pos:line="8" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="40">index<pos:position pos:line="8" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="47">(<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">void<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">*<pos:position pos:line="8" pos:column="54"/></operator><operator pos:line="8" pos:column="54">*<pos:position pos:line="8" pos:column="55"/></operator><operator pos:line="8" pos:column="55">)<pos:position pos:line="8" pos:column="56"/></operator><operator pos:line="8" pos:column="56">&amp;<pos:position pos:line="8" pos:column="61"/></operator><name pos:line="8" pos:column="57">ins<pos:position pos:line="8" pos:column="60"/></name></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call> <operator pos:line="8" pos:column="62">!=<pos:position pos:line="8" pos:column="64"/></operator> <literal type="number" pos:line="8" pos:column="65">0<pos:position pos:line="8" pos:column="66"/></literal><operator pos:line="8" pos:column="66">)<pos:position pos:line="8" pos:column="67"/></operator></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68">
      <block type="pseudo"><return pos:line="9" pos:column="7">return <expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="10" pos:column="4"/></block></then> <else pos:line="10" pos:column="5">else <block pos:line="10" pos:column="10">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">c_avl_get<pos:position pos:line="11" pos:column="18"/></name><argument_list pos:line="11" pos:column="18">(<argument><expr><name><name pos:line="11" pos:column="19">td<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">instance_index<pos:position pos:line="11" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">instance<pos:position pos:line="11" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="49">(<pos:position pos:line="11" pos:column="50"/></operator><name pos:line="11" pos:column="50">void<pos:position pos:line="11" pos:column="54"/></name> <operator pos:line="11" pos:column="55">*<pos:position pos:line="11" pos:column="56"/></operator><operator pos:line="11" pos:column="56">*<pos:position pos:line="11" pos:column="57"/></operator><operator pos:line="11" pos:column="57">)<pos:position pos:line="11" pos:column="58"/></operator><operator pos:line="11" pos:column="58">&amp;<pos:position pos:line="11" pos:column="63"/></operator><name pos:line="11" pos:column="59">ins<pos:position pos:line="11" pos:column="62"/></name></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call> <operator pos:line="11" pos:column="64">!=<pos:position pos:line="11" pos:column="66"/></operator> <literal type="number" pos:line="11" pos:column="67">0<pos:position pos:line="11" pos:column="68"/></literal></expr>)<pos:position pos:line="11" pos:column="69"/></condition><then pos:line="11" pos:column="69">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">pthread_mutex_lock<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator><name><name pos:line="15" pos:column="23">g_agent<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">-&gt;<pos:position pos:line="15" pos:column="35"/></operator><name pos:line="15" pos:column="32">agentx_lock<pos:position pos:line="15" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name><name pos:line="17" pos:column="7">td<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">index_oid<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">oid_len<pos:position pos:line="17" pos:column="28"/></name></name></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="5">snmp_agent_unregister_oid_index<pos:position pos:line="18" pos:column="36"/></name><argument_list pos:line="18" pos:column="36">(<argument><expr><operator pos:line="18" pos:column="37">&amp;<pos:position pos:line="18" pos:column="42"/></operator><name><name pos:line="18" pos:column="38">td<pos:position pos:line="18" pos:column="40"/></name><operator pos:line="18" pos:column="40">-&gt;<pos:position pos:line="18" pos:column="45"/></operator><name pos:line="18" pos:column="42">index_oid<pos:position pos:line="18" pos:column="51"/></name></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="53">*<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="54">index<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt></block></then></if>

  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><decl><type><name pos:line="20" pos:column="8">llentry_t<pos:position pos:line="20" pos:column="17"/></name> <modifier pos:line="20" pos:column="18">*<pos:position pos:line="20" pos:column="19"/></modifier></type><name pos:line="20" pos:column="19">de<pos:position pos:line="20" pos:column="21"/></name> <init pos:line="20" pos:column="22">= <expr><call><name pos:line="20" pos:column="24">llist_head<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name><name pos:line="20" pos:column="35">td<pos:position pos:line="20" pos:column="37"/></name><operator pos:line="20" pos:column="37">-&gt;<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="39">columns<pos:position pos:line="20" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="48"/></init> <condition><expr><name pos:line="20" pos:column="49">de<pos:position pos:line="20" pos:column="51"/></name> <operator pos:line="20" pos:column="52">!=<pos:position pos:line="20" pos:column="54"/></operator> <name pos:line="20" pos:column="55">NULL<pos:position pos:line="20" pos:column="59"/></name></expr>;<pos:position pos:line="20" pos:column="60"/></condition> <incr><expr><name pos:line="20" pos:column="61">de<pos:position pos:line="20" pos:column="63"/></name> <operator pos:line="20" pos:column="64">=<pos:position pos:line="20" pos:column="65"/></operator> <name><name pos:line="20" pos:column="66">de<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">-&gt;<pos:position pos:line="20" pos:column="73"/></operator><name pos:line="20" pos:column="70">next<pos:position pos:line="20" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="75"/></control> <block pos:line="20" pos:column="76">{
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">data_definition_t<pos:position pos:line="21" pos:column="22"/></name> <modifier pos:line="21" pos:column="23">*<pos:position pos:line="21" pos:column="24"/></modifier></type><name pos:line="21" pos:column="24">dd<pos:position pos:line="21" pos:column="26"/></name> <init pos:line="21" pos:column="27">= <expr><name><name pos:line="21" pos:column="29">de<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">-&gt;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="33">value<pos:position pos:line="21" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="39"/></decl_stmt>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><decl><type><name pos:line="23" pos:column="10">size_t<pos:position pos:line="23" pos:column="16"/></name></type> <name pos:line="23" pos:column="17">i<pos:position pos:line="23" pos:column="18"/></name> <init pos:line="23" pos:column="19">= <expr><literal type="number" pos:line="23" pos:column="21">0<pos:position pos:line="23" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="23"/></init> <condition><expr><name pos:line="23" pos:column="24">i<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">&lt;<pos:position pos:line="23" pos:column="30"/></operator> <name><name pos:line="23" pos:column="28">dd<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">oids_len<pos:position pos:line="23" pos:column="40"/></name></name></expr>;<pos:position pos:line="23" pos:column="41"/></condition> <incr><expr><name pos:line="23" pos:column="42">i<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">++<pos:position pos:line="23" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="46"/></control>
      <block type="pseudo"><if pos:line="24" pos:column="7">if <condition pos:line="24" pos:column="10">(<expr><name><name pos:line="24" pos:column="11">td<pos:position pos:line="24" pos:column="13"/></name><operator pos:line="24" pos:column="13">-&gt;<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="15">index_oid<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">oid_len<pos:position pos:line="24" pos:column="32"/></name></name></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="9">snmp_agent_unregister_oid_index<pos:position pos:line="25" pos:column="40"/></name><argument_list pos:line="25" pos:column="40">(<argument><expr><operator pos:line="25" pos:column="41">&amp;<pos:position pos:line="25" pos:column="46"/></operator><name><name pos:line="25" pos:column="42">dd<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">oids<pos:position pos:line="25" pos:column="50"/></name><index pos:line="25" pos:column="50">[<expr><name pos:line="25" pos:column="51">i<pos:position pos:line="25" pos:column="52"/></name></expr>]<pos:position pos:line="25" pos:column="53"/></index></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="55">*<pos:position pos:line="25" pos:column="56"/></operator><name pos:line="25" pos:column="56">index<pos:position pos:line="25" pos:column="61"/></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="63"/></expr_stmt></block></then>
      <else pos:line="26" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="9">snmp_agent_unregister_oid_string<pos:position pos:line="27" pos:column="41"/></name><argument_list pos:line="27" pos:column="41">(<argument><expr><operator pos:line="27" pos:column="42">&amp;<pos:position pos:line="27" pos:column="47"/></operator><name><name pos:line="27" pos:column="43">dd<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">-&gt;<pos:position pos:line="27" pos:column="50"/></operator><name pos:line="27" pos:column="47">oids<pos:position pos:line="27" pos:column="51"/></name><index pos:line="27" pos:column="51">[<expr><name pos:line="27" pos:column="52">i<pos:position pos:line="27" pos:column="53"/></name></expr>]<pos:position pos:line="27" pos:column="54"/></index></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="56">ins<pos:position pos:line="27" pos:column="59"/></name></expr></argument>)<pos:position pos:line="27" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="61"/></expr_stmt></block></else></if></block></for>
  }<pos:position pos:line="28" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="30" pos:column="3">pthread_mutex_unlock<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name><name pos:line="30" pos:column="25">g_agent<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">-&gt;<pos:position pos:line="30" pos:column="37"/></operator><name pos:line="30" pos:column="34">agentx_lock<pos:position pos:line="30" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="32" pos:column="3">DEBUG<pos:position pos:line="32" pos:column="8"/></name><argument_list pos:line="32" pos:column="8">(<argument><expr><name pos:line="32" pos:column="9">PLUGIN_NAME<pos:position pos:line="32" pos:column="20"/></name> <literal type="string" pos:line="32" pos:column="21">": Removed row for '%s' table [%d, %s]"<pos:position pos:line="32" pos:column="60"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="62">td<pos:position pos:line="32" pos:column="64"/></name><operator pos:line="32" pos:column="64">-&gt;<pos:position pos:line="32" pos:column="69"/></operator><name pos:line="32" pos:column="66">name<pos:position pos:line="32" pos:column="70"/></name></name></expr></argument>,
        <argument><expr><ternary><condition><expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">index<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">!=<pos:position pos:line="33" pos:column="18"/></operator> <name pos:line="33" pos:column="19">NULL<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">)<pos:position pos:line="33" pos:column="24"/></operator></expr> ?<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26"> <expr><operator pos:line="33" pos:column="27">*<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="28">index<pos:position pos:line="33" pos:column="33"/></name></expr> <pos:position pos:line="33" pos:column="34"/></then><else pos:line="33" pos:column="34">: <expr><operator pos:line="33" pos:column="36">-<pos:position pos:line="33" pos:column="37"/></operator><literal type="number" pos:line="33" pos:column="37">1<pos:position pos:line="33" pos:column="38"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="33" pos:column="40">ins<pos:position pos:line="33" pos:column="43"/></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="45"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="35" pos:column="3">notification_t<pos:position pos:line="35" pos:column="17"/></name></type> <name pos:line="35" pos:column="18">n<pos:position pos:line="35" pos:column="19"/></name> <init pos:line="35" pos:column="20">= <expr><block pos:line="35" pos:column="22">{
      <expr><operator pos:line="36" pos:column="7">.<pos:position pos:line="36" pos:column="8"/></operator><name pos:line="36" pos:column="8">severity<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <name pos:line="36" pos:column="19">NOTIF_WARNING<pos:position pos:line="36" pos:column="32"/></name></expr>, <expr><operator pos:line="36" pos:column="34">.<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="35">time<pos:position pos:line="36" pos:column="39"/></name> <operator pos:line="36" pos:column="40">=<pos:position pos:line="36" pos:column="41"/></operator> <call><name pos:line="36" pos:column="42">cdtime<pos:position pos:line="36" pos:column="48"/></name><argument_list pos:line="36" pos:column="48">()<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>, <expr><operator pos:line="36" pos:column="52">.<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="53">plugin<pos:position pos:line="36" pos:column="59"/></name> <operator pos:line="36" pos:column="60">=<pos:position pos:line="36" pos:column="61"/></operator> <name pos:line="36" pos:column="62">PLUGIN_NAME<pos:position pos:line="36" pos:column="73"/></name></expr>}<pos:position pos:line="36" pos:column="74"/></block></expr></init></decl>;<pos:position pos:line="36" pos:column="75"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="37" pos:column="3">sstrncpy<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name><name pos:line="37" pos:column="12">n<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">.<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">host<pos:position pos:line="37" pos:column="18"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="20">hostname_g<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="32">sizeof<argument_list pos:line="37" pos:column="38">(<argument><expr><name><name pos:line="37" pos:column="39">n<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">.<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">host<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">sstrncpy<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><name><name pos:line="38" pos:column="12">n<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">.<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">plugin_instance<pos:position pos:line="38" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="31">ins<pos:position pos:line="38" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="36">sizeof<argument_list pos:line="38" pos:column="42">(<argument><expr><name><name pos:line="38" pos:column="43">n<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">.<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">plugin_instance<pos:position pos:line="38" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">snprintf<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">n<pos:position pos:line="39" pos:column="13"/></name><operator pos:line="39" pos:column="13">.<pos:position pos:line="39" pos:column="14"/></operator><name pos:line="39" pos:column="14">message<pos:position pos:line="39" pos:column="21"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="23">sizeof<argument_list pos:line="39" pos:column="29">(<argument><expr><name><name pos:line="39" pos:column="30">n<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">.<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="32">message<pos:position pos:line="39" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></sizeof></expr></argument>,
           <argument><expr><literal type="string" pos:line="40" pos:column="12">"Removed data row from table %s instance %s index %d"<pos:position pos:line="40" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="67">td<pos:position pos:line="40" pos:column="69"/></name><operator pos:line="40" pos:column="69">-&gt;<pos:position pos:line="40" pos:column="74"/></operator><name pos:line="40" pos:column="71">name<pos:position pos:line="40" pos:column="75"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="77">ins<pos:position pos:line="40" pos:column="80"/></name></expr></argument>,
           <argument><expr><ternary><condition><expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">index<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">!=<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">NULL<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">)<pos:position pos:line="41" pos:column="27"/></operator></expr> ?<pos:position pos:line="41" pos:column="29"/></condition><then pos:line="41" pos:column="29"> <expr><operator pos:line="41" pos:column="30">*<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="31">index<pos:position pos:line="41" pos:column="36"/></name></expr> <pos:position pos:line="41" pos:column="37"/></then><else pos:line="41" pos:column="37">: <expr><operator pos:line="41" pos:column="39">-<pos:position pos:line="41" pos:column="40"/></operator><literal type="number" pos:line="41" pos:column="40">1<pos:position pos:line="41" pos:column="41"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">plugin_dispatch_notification<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><operator pos:line="42" pos:column="32">&amp;<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="33">n<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="36"/></expr_stmt>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name><name pos:line="44" pos:column="7">td<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">index_oid<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">.<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">oid_len<pos:position pos:line="44" pos:column="28"/></name></name></expr>)<pos:position pos:line="44" pos:column="29"/></condition><then pos:line="44" pos:column="29"> <block pos:line="44" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">c_avl_remove<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name><name pos:line="45" pos:column="18">td<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">index_instance<pos:position pos:line="45" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="38">index<pos:position pos:line="45" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="45">NULL<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="51">(<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="52">void<pos:position pos:line="45" pos:column="56"/></name> <operator pos:line="45" pos:column="57">*<pos:position pos:line="45" pos:column="58"/></operator><operator pos:line="45" pos:column="58">*<pos:position pos:line="45" pos:column="59"/></operator><operator pos:line="45" pos:column="59">)<pos:position pos:line="45" pos:column="60"/></operator><operator pos:line="45" pos:column="60">&amp;<pos:position pos:line="45" pos:column="65"/></operator><name pos:line="45" pos:column="61">ins<pos:position pos:line="45" pos:column="64"/></name></expr></argument>)<pos:position pos:line="45" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">c_avl_remove<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name><name pos:line="46" pos:column="18">td<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">instance_index<pos:position pos:line="46" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">instance<pos:position pos:line="46" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="48">NULL<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="54">(<pos:position pos:line="46" pos:column="55"/></operator><name pos:line="46" pos:column="55">void<pos:position pos:line="46" pos:column="59"/></name> <operator pos:line="46" pos:column="60">*<pos:position pos:line="46" pos:column="61"/></operator><operator pos:line="46" pos:column="61">*<pos:position pos:line="46" pos:column="62"/></operator><operator pos:line="46" pos:column="62">)<pos:position pos:line="46" pos:column="63"/></operator><operator pos:line="46" pos:column="63">&amp;<pos:position pos:line="46" pos:column="68"/></operator><name pos:line="46" pos:column="64">index<pos:position pos:line="46" pos:column="69"/></name></expr></argument>)<pos:position pos:line="46" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="71"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">sfree<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><name pos:line="47" pos:column="11">index<pos:position pos:line="47" pos:column="16"/></name></expr></argument>)<pos:position pos:line="47" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">sfree<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><name pos:line="48" pos:column="11">ins<pos:position pos:line="48" pos:column="14"/></name></expr></argument>)<pos:position pos:line="48" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then> <else pos:line="49" pos:column="5">else <block pos:line="49" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">c_avl_remove<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">td<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">-&gt;<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="22">instance_index<pos:position pos:line="50" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="38">instance<pos:position pos:line="50" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="48">NULL<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="54">(<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="55">void<pos:position pos:line="50" pos:column="59"/></name> <operator pos:line="50" pos:column="60">*<pos:position pos:line="50" pos:column="61"/></operator><operator pos:line="50" pos:column="61">*<pos:position pos:line="50" pos:column="62"/></operator><operator pos:line="50" pos:column="62">)<pos:position pos:line="50" pos:column="63"/></operator><operator pos:line="50" pos:column="63">&amp;<pos:position pos:line="50" pos:column="68"/></operator><name pos:line="50" pos:column="64">ins<pos:position pos:line="50" pos:column="67"/></name></expr></argument>)<pos:position pos:line="50" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">sfree<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><name pos:line="51" pos:column="11">ins<pos:position pos:line="51" pos:column="14"/></name></expr></argument>)<pos:position pos:line="51" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="16"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></else></if>

  <return pos:line="54" pos:column="3">return <expr><literal type="number" pos:line="54" pos:column="10">0<pos:position pos:line="54" pos:column="11"/></literal></expr>;<pos:position pos:line="54" pos:column="12"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

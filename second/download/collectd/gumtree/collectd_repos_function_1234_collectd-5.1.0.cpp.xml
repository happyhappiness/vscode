<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1234_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int64_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">rrd_get_random_variation<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">void<pos:position pos:line="1" pos:column="46"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">double<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">dbl_timeout<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cdtime_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">ctm_timeout<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">double<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">rand_fact<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">_Bool<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">negative<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int64_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">ret<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">random_timeout<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">&lt;=<pos:position pos:line="9" pos:column="27"/></operator> <literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">0<pos:position pos:line="10" pos:column="14"/></literal><operator pos:line="10" pos:column="14">)<pos:position pos:line="10" pos:column="15"/></operator></expr>;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Assure that "cache_timeout + random_variation" is never negative. */</comment>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">random_timeout<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&gt;<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="24">cache_timeout<pos:position pos:line="13" pos:column="37"/></name></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38">
  <block pos:line="14" pos:column="3">{
	  <expr_stmt><expr><call><name pos:line="15" pos:column="11">INFO<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><literal type="string" pos:line="15" pos:column="17">"rrdtool plugin: Adjusting \"RandomTimeout\" to %.3f seconds."<pos:position pos:line="15" pos:column="79"/></literal></expr></argument>,
			  <argument><expr><call><name pos:line="16" pos:column="27">CDTIME_T_TO_DOUBLE<pos:position pos:line="16" pos:column="45"/></name> <argument_list pos:line="16" pos:column="46">(<argument><expr><name pos:line="16" pos:column="47">cache_timeout<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="17" pos:column="11">random_timeout<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">=<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">cache_timeout<pos:position pos:line="17" pos:column="41"/></name></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="20" pos:column="3">/* This seems a bit complicated, but "random_timeout" is likely larger than
   * RAND_MAX, so we can't simply use modulo here. */</comment>
  <expr_stmt><expr><name pos:line="22" pos:column="3">dbl_timeout<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">CDTIME_T_TO_DOUBLE<pos:position pos:line="22" pos:column="35"/></name> <argument_list pos:line="22" pos:column="36">(<argument><expr><name pos:line="22" pos:column="37">random_timeout<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">rand_fact<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <operator pos:line="23" pos:column="15">(<pos:position pos:line="23" pos:column="16"/></operator><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">double<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">)<pos:position pos:line="23" pos:column="24"/></operator> <call><name pos:line="23" pos:column="25">random<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">()<pos:position pos:line="23" pos:column="34"/></argument_list></call><operator pos:line="23" pos:column="34">)<pos:position pos:line="23" pos:column="35"/></operator>
    <operator pos:line="24" pos:column="5">/<pos:position pos:line="24" pos:column="6"/></operator> <operator pos:line="24" pos:column="7">(<pos:position pos:line="24" pos:column="8"/></operator><operator pos:line="24" pos:column="8">(<pos:position pos:line="24" pos:column="9"/></operator><name pos:line="24" pos:column="9">double<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">)<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">RAND_MAX<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">)<pos:position pos:line="24" pos:column="26"/></operator></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name pos:line="25" pos:column="3">negative<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call pos:line="25" pos:column="14">(<name pos:line="25" pos:column="15">_Bool<pos:position pos:line="25" pos:column="20"/></name>) <argument_list pos:line="25" pos:column="22">(<argument><expr><call><name pos:line="25" pos:column="23">random<pos:position pos:line="25" pos:column="29"/></name> <argument_list pos:line="25" pos:column="30">()<pos:position pos:line="25" pos:column="32"/></argument_list></call> <operator pos:line="25" pos:column="33">%<pos:position pos:line="25" pos:column="34"/></operator> <literal type="number" pos:line="25" pos:column="35">2<pos:position pos:line="25" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="38"/></expr_stmt>

  <expr_stmt><expr><name pos:line="27" pos:column="3">ctm_timeout<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">DOUBLE_TO_CDTIME_T<pos:position pos:line="27" pos:column="35"/></name> <argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">dbl_timeout<pos:position pos:line="27" pos:column="48"/></name> <operator pos:line="27" pos:column="49">*<pos:position pos:line="27" pos:column="50"/></operator> <name pos:line="27" pos:column="51">rand_fact<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>

  <expr_stmt><expr><name pos:line="29" pos:column="3">ret<pos:position pos:line="29" pos:column="6"/></name> <operator pos:line="29" pos:column="7">=<pos:position pos:line="29" pos:column="8"/></operator> <operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">int64_t<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">)<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">ctm_timeout<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">negative<pos:position pos:line="30" pos:column="15"/></name></expr>)<pos:position pos:line="30" pos:column="16"/></condition><then pos:line="30" pos:column="16">
    <block type="pseudo"><expr_stmt><expr><name pos:line="31" pos:column="5">ret<pos:position pos:line="31" pos:column="8"/></name> <operator pos:line="31" pos:column="9">*=<pos:position pos:line="31" pos:column="11"/></operator> <operator pos:line="31" pos:column="12">-<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">1<pos:position pos:line="31" pos:column="14"/></literal></expr>;<pos:position pos:line="31" pos:column="15"/></expr_stmt></block></then></if>

  <return pos:line="33" pos:column="3">return <expr><operator pos:line="33" pos:column="10">(<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">ret<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">)<pos:position pos:line="33" pos:column="15"/></operator></expr>;<pos:position pos:line="33" pos:column="16"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

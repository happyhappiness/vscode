<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2513_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_identifier<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">uint16_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">type<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">payload<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="59">size_t<pos:position pos:line="1" pos:column="65"/></name></type> <name pos:line="1" pos:column="66">payload_size<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">lcc_value_list_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">state<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list> <block pos:line="2" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">LCC_NAME_LEN<pos:position pos:line="3" pos:column="24"/></name></expr>]<pos:position pos:line="3" pos:column="25"/></index></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">parse_string<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">payload<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">payload_size<pos:position pos:line="5" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">buf<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="48">sizeof<argument_list pos:line="5" pos:column="54">(<argument><expr><name pos:line="5" pos:column="55">buf<pos:position pos:line="5" pos:column="58"/></name></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call> <operator pos:line="5" pos:column="61">!=<pos:position pos:line="5" pos:column="63"/></operator> <literal type="number" pos:line="5" pos:column="64">0<pos:position pos:line="5" pos:column="65"/></literal></expr>)<pos:position pos:line="5" pos:column="66"/></condition><then pos:line="5" pos:column="66">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">EINVAL<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return></block></then></if>

  <switch pos:line="8" pos:column="3">switch <condition pos:line="8" pos:column="10">(<expr><name pos:line="8" pos:column="11">type<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition> <block pos:line="8" pos:column="17">{
  <case pos:line="9" pos:column="3">case <expr><name pos:line="9" pos:column="8">TYPE_HOST<pos:position pos:line="9" pos:column="17"/></name></expr>:<pos:position pos:line="9" pos:column="18"/></case>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">memmove<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name><name pos:line="10" pos:column="13">state<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">identifier<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">host<pos:position pos:line="10" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">buf<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">LCC_NAME_LEN<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
    <break pos:line="11" pos:column="5">break;<pos:position pos:line="11" pos:column="11"/></break>
  <case pos:line="12" pos:column="3">case <expr><name pos:line="12" pos:column="8">TYPE_PLUGIN<pos:position pos:line="12" pos:column="19"/></name></expr>:<pos:position pos:line="12" pos:column="20"/></case>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memmove<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name><name pos:line="13" pos:column="13">state<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">-&gt;<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="20">identifier<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">plugin<pos:position pos:line="13" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">buf<pos:position pos:line="13" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">LCC_NAME_LEN<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
    <break pos:line="14" pos:column="5">break;<pos:position pos:line="14" pos:column="11"/></break>
  <case pos:line="15" pos:column="3">case <expr><name pos:line="15" pos:column="8">TYPE_PLUGIN_INSTANCE<pos:position pos:line="15" pos:column="28"/></name></expr>:<pos:position pos:line="15" pos:column="29"/></case>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">memmove<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name><name pos:line="16" pos:column="13">state<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">identifier<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">plugin_instance<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="48">buf<pos:position pos:line="16" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="53">LCC_NAME_LEN<pos:position pos:line="16" pos:column="65"/></name></expr></argument>)<pos:position pos:line="16" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
    <break pos:line="17" pos:column="5">break;<pos:position pos:line="17" pos:column="11"/></break>
  <case pos:line="18" pos:column="3">case <expr><name pos:line="18" pos:column="8">TYPE_TYPE<pos:position pos:line="18" pos:column="17"/></name></expr>:<pos:position pos:line="18" pos:column="18"/></case>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">memmove<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name><name pos:line="19" pos:column="13">state<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">identifier<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">.<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">type<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="37">buf<pos:position pos:line="19" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="42">LCC_NAME_LEN<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
    <break pos:line="20" pos:column="5">break;<pos:position pos:line="20" pos:column="11"/></break>
  <case pos:line="21" pos:column="3">case <expr><name pos:line="21" pos:column="8">TYPE_TYPE_INSTANCE<pos:position pos:line="21" pos:column="26"/></name></expr>:<pos:position pos:line="21" pos:column="27"/></case>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memmove<pos:position pos:line="22" pos:column="12"/></name><argument_list pos:line="22" pos:column="12">(<argument><expr><name><name pos:line="22" pos:column="13">state<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">identifier<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">.<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="31">type_instance<pos:position pos:line="22" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">buf<pos:position pos:line="22" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="51">LCC_NAME_LEN<pos:position pos:line="22" pos:column="63"/></name></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
    <break pos:line="23" pos:column="5">break;<pos:position pos:line="23" pos:column="11"/></break>
  <default pos:line="24" pos:column="3">default:<pos:position pos:line="24" pos:column="11"/></default>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">EINVAL<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></switch>

  <return pos:line="28" pos:column="3">return <expr><literal type="number" pos:line="28" pos:column="10">0<pos:position pos:line="28" pos:column="11"/></literal></expr>;<pos:position pos:line="28" pos:column="12"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

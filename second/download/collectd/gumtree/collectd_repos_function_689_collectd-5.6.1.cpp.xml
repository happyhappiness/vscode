<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_689_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">procstat_t<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type><name pos:line="1" pos:column="20">ps_read_tasks_status<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">long<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">pid<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">procstat_t<pos:position pos:line="1" pos:column="62"/></name> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">ps<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type>           <name><name pos:line="3" pos:column="24">dirname<pos:position pos:line="3" pos:column="31"/></name><index pos:line="3" pos:column="31">[<expr><literal type="number" pos:line="3" pos:column="32">64<pos:position pos:line="3" pos:column="34"/></literal></expr>]<pos:position pos:line="3" pos:column="35"/></index></name></decl>;<pos:position pos:line="3" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">DIR<pos:position pos:line="4" pos:column="12"/></name>           <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">dh<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type>           <name><name pos:line="5" pos:column="24">filename<pos:position pos:line="5" pos:column="32"/></name><index pos:line="5" pos:column="32">[<expr><literal type="number" pos:line="5" pos:column="33">64<pos:position pos:line="5" pos:column="35"/></literal></expr>]<pos:position pos:line="5" pos:column="36"/></index></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name>          <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">fh<pos:position pos:line="6" pos:column="26"/></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">dirent<pos:position pos:line="7" pos:column="22"/></name></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">ent<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">derive_t<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">cswitch_vol<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><literal type="number" pos:line="8" pos:column="32">0<pos:position pos:line="8" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">derive_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">cswitch_invol<pos:position pos:line="9" pos:column="31"/></name> <init pos:line="9" pos:column="32">= <expr><literal type="number" pos:line="9" pos:column="34">0<pos:position pos:line="9" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">buffer<pos:position pos:line="10" pos:column="20"/></name><index pos:line="10" pos:column="20">[<expr><literal type="number" pos:line="10" pos:column="21">1024<pos:position pos:line="10" pos:column="25"/></literal></expr>]<pos:position pos:line="10" pos:column="26"/></index></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name><name pos:line="11" pos:column="15">fields<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><literal type="number" pos:line="11" pos:column="22">8<pos:position pos:line="11" pos:column="23"/></literal></expr>]<pos:position pos:line="11" pos:column="24"/></index></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">numfields<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">ssnprintf<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><name pos:line="14" pos:column="20">dirname<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="29">sizeof <argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">dirname<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="47">"/proc/%li/task"<pos:position pos:line="14" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="65">pid<pos:position pos:line="14" pos:column="68"/></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">dh<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">opendir<pos:position pos:line="16" pos:column="26"/></name> <argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">dirname<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call><operator pos:line="16" pos:column="36">)<pos:position pos:line="16" pos:column="37"/></operator> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="41">NULL<pos:position pos:line="16" pos:column="45"/></name></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">DEBUG<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"Failed to open directory `%s'"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="57">dirname<pos:position pos:line="18" pos:column="64"/></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">NULL<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">)<pos:position pos:line="19" pos:column="30"/></operator></expr>;<pos:position pos:line="19" pos:column="31"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<while pos:line="22" pos:column="9">while <condition pos:line="22" pos:column="15">(<expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">ent<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">readdir<pos:position pos:line="22" pos:column="30"/></name> <argument_list pos:line="22" pos:column="31">(<argument><expr><name pos:line="22" pos:column="32">dh<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call><operator pos:line="22" pos:column="35">)<pos:position pos:line="22" pos:column="36"/></operator> <operator pos:line="22" pos:column="37">!=<pos:position pos:line="22" pos:column="39"/></operator> <name pos:line="22" pos:column="40">NULL<pos:position pos:line="22" pos:column="44"/></name></expr>)<pos:position pos:line="22" pos:column="45"/></condition>
	<block pos:line="23" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="24" pos:column="17">char<pos:position pos:line="24" pos:column="21"/></name> <modifier pos:line="24" pos:column="22">*<pos:position pos:line="24" pos:column="23"/></modifier></type><name pos:line="24" pos:column="23">tpid<pos:position pos:line="24" pos:column="27"/></name></decl>;<pos:position pos:line="24" pos:column="28"/></decl_stmt>

		<if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><call><name pos:line="26" pos:column="22">isdigit<pos:position pos:line="26" pos:column="29"/></name> <argument_list pos:line="26" pos:column="30">(<argument><expr><operator pos:line="26" pos:column="31">(<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">int<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator> <name><name pos:line="26" pos:column="37">ent<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">d_name<pos:position pos:line="26" pos:column="48"/></name><index pos:line="26" pos:column="48">[<expr><literal type="number" pos:line="26" pos:column="49">0<pos:position pos:line="26" pos:column="50"/></literal></expr>]<pos:position pos:line="26" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="53"/></condition><then pos:line="26" pos:column="53">
			<block type="pseudo"><continue pos:line="27" pos:column="25">continue;<pos:position pos:line="27" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="29" pos:column="17">tpid<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">=<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="24">ent<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">d_name<pos:position pos:line="29" pos:column="35"/></name></name></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="31" pos:column="17">ssnprintf<pos:position pos:line="31" pos:column="26"/></name> <argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">filename<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="38">sizeof <argument_list pos:line="31" pos:column="45">(<argument><expr><name pos:line="31" pos:column="46">filename<pos:position pos:line="31" pos:column="54"/></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="57">"/proc/%li/task/%s/status"<pos:position pos:line="31" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="85">pid<pos:position pos:line="31" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="90">tpid<pos:position pos:line="31" pos:column="94"/></name></expr></argument>)<pos:position pos:line="31" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="96"/></expr_stmt>
		<if pos:line="32" pos:column="17">if <condition pos:line="32" pos:column="20">(<expr><operator pos:line="32" pos:column="21">(<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">fh<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <call><name pos:line="32" pos:column="27">fopen<pos:position pos:line="32" pos:column="32"/></name> <argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">filename<pos:position pos:line="32" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="44">"r"<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call><operator pos:line="32" pos:column="48">)<pos:position pos:line="32" pos:column="49"/></operator> <operator pos:line="32" pos:column="50">==<pos:position pos:line="32" pos:column="52"/></operator> <name pos:line="32" pos:column="53">NULL<pos:position pos:line="32" pos:column="57"/></name></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58">
		<block pos:line="33" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="34" pos:column="25">DEBUG<pos:position pos:line="34" pos:column="30"/></name> <argument_list pos:line="34" pos:column="31">(<argument><expr><literal type="string" pos:line="34" pos:column="32">"Failed to open file `%s'"<pos:position pos:line="34" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="60">filename<pos:position pos:line="34" pos:column="68"/></name></expr></argument>)<pos:position pos:line="34" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="70"/></expr_stmt>
			<continue pos:line="35" pos:column="25">continue;<pos:position pos:line="35" pos:column="34"/></continue>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if>

		<while pos:line="38" pos:column="17">while <condition pos:line="38" pos:column="23">(<expr><call><name pos:line="38" pos:column="24">fgets<pos:position pos:line="38" pos:column="29"/></name> <argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">buffer<pos:position pos:line="38" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="39">sizeof<argument_list pos:line="38" pos:column="45">(<argument><expr><name pos:line="38" pos:column="46">buffer<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">fh<pos:position pos:line="38" pos:column="57"/></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call> <operator pos:line="38" pos:column="59">!=<pos:position pos:line="38" pos:column="61"/></operator> <name pos:line="38" pos:column="62">NULL<pos:position pos:line="38" pos:column="66"/></name></expr>)<pos:position pos:line="38" pos:column="67"/></condition>
		<block pos:line="39" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="40" pos:column="25">derive_t<pos:position pos:line="40" pos:column="33"/></name></type> <name pos:line="40" pos:column="34">tmp<pos:position pos:line="40" pos:column="37"/></name></decl>;<pos:position pos:line="40" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="41" pos:column="25">char<pos:position pos:line="41" pos:column="29"/></name> <modifier pos:line="41" pos:column="30">*<pos:position pos:line="41" pos:column="31"/></modifier></type><name pos:line="41" pos:column="31">endptr<pos:position pos:line="41" pos:column="37"/></name></decl>;<pos:position pos:line="41" pos:column="38"/></decl_stmt>

			<if pos:line="43" pos:column="25">if <condition pos:line="43" pos:column="28">(<expr><call><name pos:line="43" pos:column="29">strncmp<pos:position pos:line="43" pos:column="36"/></name> <argument_list pos:line="43" pos:column="37">(<argument><expr><name pos:line="43" pos:column="38">buffer<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="46">"voluntary_ctxt_switches"<pos:position pos:line="43" pos:column="71"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="73">23<pos:position pos:line="43" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call> <operator pos:line="43" pos:column="77">!=<pos:position pos:line="43" pos:column="79"/></operator> <literal type="number" pos:line="43" pos:column="80">0<pos:position pos:line="43" pos:column="81"/></literal>
				<operator pos:line="44" pos:column="33">&amp;&amp;<pos:position pos:line="44" pos:column="43"/></operator> <call><name pos:line="44" pos:column="36">strncmp<pos:position pos:line="44" pos:column="43"/></name> <argument_list pos:line="44" pos:column="44">(<argument><expr><name pos:line="44" pos:column="45">buffer<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="53">"nonvoluntary_ctxt_switches"<pos:position pos:line="44" pos:column="81"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="83">26<pos:position pos:line="44" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="86"/></argument_list></call> <operator pos:line="44" pos:column="87">!=<pos:position pos:line="44" pos:column="89"/></operator> <literal type="number" pos:line="44" pos:column="90">0<pos:position pos:line="44" pos:column="91"/></literal></expr>)<pos:position pos:line="44" pos:column="92"/></condition><then pos:line="44" pos:column="92">
				<block type="pseudo"><continue pos:line="45" pos:column="33">continue;<pos:position pos:line="45" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="47" pos:column="25">numfields<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">=<pos:position pos:line="47" pos:column="36"/></operator> <call><name pos:line="47" pos:column="37">strsplit<pos:position pos:line="47" pos:column="45"/></name> <argument_list pos:line="47" pos:column="46">(<argument><expr><name pos:line="47" pos:column="47">buffer<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">fields<pos:position pos:line="47" pos:column="61"/></name></expr></argument>,
				<argument><expr><call><name pos:line="48" pos:column="33">STATIC_ARRAY_SIZE<pos:position pos:line="48" pos:column="50"/></name> <argument_list pos:line="48" pos:column="51">(<argument><expr><name pos:line="48" pos:column="52">fields<pos:position pos:line="48" pos:column="58"/></name></expr></argument>)<pos:position pos:line="48" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="61"/></expr_stmt>

			<if pos:line="50" pos:column="25">if <condition pos:line="50" pos:column="28">(<expr><name pos:line="50" pos:column="29">numfields<pos:position pos:line="50" pos:column="38"/></name> <operator pos:line="50" pos:column="39">&lt;<pos:position pos:line="50" pos:column="43"/></operator> <literal type="number" pos:line="50" pos:column="41">2<pos:position pos:line="50" pos:column="42"/></literal></expr>)<pos:position pos:line="50" pos:column="43"/></condition><then pos:line="50" pos:column="43">
				<block type="pseudo"><continue pos:line="51" pos:column="33">continue;<pos:position pos:line="51" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><name pos:line="53" pos:column="25">errno<pos:position pos:line="53" pos:column="30"/></name> <operator pos:line="53" pos:column="31">=<pos:position pos:line="53" pos:column="32"/></operator> <literal type="number" pos:line="53" pos:column="33">0<pos:position pos:line="53" pos:column="34"/></literal></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="54" pos:column="25">endptr<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <name pos:line="54" pos:column="34">NULL<pos:position pos:line="54" pos:column="38"/></name></expr>;<pos:position pos:line="54" pos:column="39"/></expr_stmt>
			<expr_stmt><expr><name pos:line="55" pos:column="25">tmp<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <operator pos:line="55" pos:column="31">(<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="32">derive_t<pos:position pos:line="55" pos:column="40"/></name><operator pos:line="55" pos:column="40">)<pos:position pos:line="55" pos:column="41"/></operator> <call><name pos:line="55" pos:column="42">strtoll<pos:position pos:line="55" pos:column="49"/></name> <argument_list pos:line="55" pos:column="50">(<argument><expr><name><name pos:line="55" pos:column="51">fields<pos:position pos:line="55" pos:column="57"/></name><index pos:line="55" pos:column="57">[<expr><literal type="number" pos:line="55" pos:column="58">1<pos:position pos:line="55" pos:column="59"/></literal></expr>]<pos:position pos:line="55" pos:column="60"/></index></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="62">&amp;<pos:position pos:line="55" pos:column="67"/></operator><name pos:line="55" pos:column="63">endptr<pos:position pos:line="55" pos:column="69"/></name></expr></argument>, <comment type="block" pos:line="55" pos:column="71">/* base = */</comment> <argument><expr><literal type="number" pos:line="55" pos:column="84">10<pos:position pos:line="55" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="88"/></expr_stmt>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><operator pos:line="56" pos:column="29">(<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">errno<pos:position pos:line="56" pos:column="35"/></name> <operator pos:line="56" pos:column="36">==<pos:position pos:line="56" pos:column="38"/></operator> <literal type="number" pos:line="56" pos:column="39">0<pos:position pos:line="56" pos:column="40"/></literal><operator pos:line="56" pos:column="40">)<pos:position pos:line="56" pos:column="41"/></operator> <operator pos:line="56" pos:column="42">&amp;&amp;<pos:position pos:line="56" pos:column="52"/></operator> <operator pos:line="56" pos:column="45">(<pos:position pos:line="56" pos:column="46"/></operator><name pos:line="56" pos:column="46">endptr<pos:position pos:line="56" pos:column="52"/></name> <operator pos:line="56" pos:column="53">!=<pos:position pos:line="56" pos:column="55"/></operator> <name><name pos:line="56" pos:column="56">fields<pos:position pos:line="56" pos:column="62"/></name><index pos:line="56" pos:column="62">[<expr><literal type="number" pos:line="56" pos:column="63">1<pos:position pos:line="56" pos:column="64"/></literal></expr>]<pos:position pos:line="56" pos:column="65"/></index></name><operator pos:line="56" pos:column="65">)<pos:position pos:line="56" pos:column="66"/></operator></expr>)<pos:position pos:line="56" pos:column="67"/></condition><then pos:line="56" pos:column="67">
			<block pos:line="57" pos:column="25">{
				<if pos:line="58" pos:column="33">if <condition pos:line="58" pos:column="36">(<expr><call><name pos:line="58" pos:column="37">strncmp<pos:position pos:line="58" pos:column="44"/></name> <argument_list pos:line="58" pos:column="45">(<argument><expr><name pos:line="58" pos:column="46">buffer<pos:position pos:line="58" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="54">"voluntary_ctxt_switches"<pos:position pos:line="58" pos:column="79"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="81">23<pos:position pos:line="58" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call> <operator pos:line="58" pos:column="85">==<pos:position pos:line="58" pos:column="87"/></operator> <literal type="number" pos:line="58" pos:column="88">0<pos:position pos:line="58" pos:column="89"/></literal></expr>)<pos:position pos:line="58" pos:column="90"/></condition><then pos:line="58" pos:column="90">
				<block pos:line="59" pos:column="33">{
					<expr_stmt><expr><name pos:line="60" pos:column="41">cswitch_vol<pos:position pos:line="60" pos:column="52"/></name> <operator pos:line="60" pos:column="53">+=<pos:position pos:line="60" pos:column="55"/></operator> <name pos:line="60" pos:column="56">tmp<pos:position pos:line="60" pos:column="59"/></name></expr>;<pos:position pos:line="60" pos:column="60"/></expr_stmt>
				}<pos:position pos:line="61" pos:column="34"/></block></then>
				<elseif pos:line="62" pos:column="33">else <if pos:line="62" pos:column="38">if <condition pos:line="62" pos:column="41">(<expr><call><name pos:line="62" pos:column="42">strncmp<pos:position pos:line="62" pos:column="49"/></name> <argument_list pos:line="62" pos:column="50">(<argument><expr><name pos:line="62" pos:column="51">buffer<pos:position pos:line="62" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="59">"nonvoluntary_ctxt_switches"<pos:position pos:line="62" pos:column="87"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="89">26<pos:position pos:line="62" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="92"/></argument_list></call> <operator pos:line="62" pos:column="93">==<pos:position pos:line="62" pos:column="95"/></operator> <literal type="number" pos:line="62" pos:column="96">0<pos:position pos:line="62" pos:column="97"/></literal></expr>)<pos:position pos:line="62" pos:column="98"/></condition><then pos:line="62" pos:column="98">
				<block pos:line="63" pos:column="33">{
					<expr_stmt><expr><name pos:line="64" pos:column="41">cswitch_invol<pos:position pos:line="64" pos:column="54"/></name> <operator pos:line="64" pos:column="55">+=<pos:position pos:line="64" pos:column="57"/></operator> <name pos:line="64" pos:column="58">tmp<pos:position pos:line="64" pos:column="61"/></name></expr>;<pos:position pos:line="64" pos:column="62"/></expr_stmt>
				}<pos:position pos:line="65" pos:column="34"/></block></then></if></elseif></if>
			}<pos:position pos:line="66" pos:column="26"/></block></then></if>
		}<pos:position pos:line="67" pos:column="18"/></block></while> <comment type="block" pos:line="67" pos:column="19">/* while (fgets) */</comment>

		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><call><name pos:line="69" pos:column="21">fclose<pos:position pos:line="69" pos:column="27"/></name> <argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">fh<pos:position pos:line="69" pos:column="31"/></name></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="33"/></condition><then pos:line="69" pos:column="33">
		<block pos:line="70" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="71" pos:column="25">char<pos:position pos:line="71" pos:column="29"/></name></type> <name><name pos:line="71" pos:column="30">errbuf<pos:position pos:line="71" pos:column="36"/></name><index pos:line="71" pos:column="36">[<expr><literal type="number" pos:line="71" pos:column="37">1024<pos:position pos:line="71" pos:column="41"/></literal></expr>]<pos:position pos:line="71" pos:column="42"/></index></name></decl>;<pos:position pos:line="71" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="72" pos:column="25">WARNING<pos:position pos:line="72" pos:column="32"/></name> <argument_list pos:line="72" pos:column="33">(<argument><expr><literal type="string" pos:line="72" pos:column="34">"processes: fclose: %s"<pos:position pos:line="72" pos:column="57"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="73" pos:column="33">sstrerror<pos:position pos:line="73" pos:column="42"/></name> <argument_list pos:line="73" pos:column="43">(<argument><expr><name pos:line="73" pos:column="44">errno<pos:position pos:line="73" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="51">errbuf<pos:position pos:line="73" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="73" pos:column="59">sizeof <argument_list pos:line="73" pos:column="66">(<argument><expr><name pos:line="73" pos:column="67">errbuf<pos:position pos:line="73" pos:column="73"/></name></expr></argument>)<pos:position pos:line="73" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="73" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="77"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if>
	}<pos:position pos:line="75" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">closedir<pos:position pos:line="76" pos:column="17"/></name> <argument_list pos:line="76" pos:column="18">(<argument><expr><name pos:line="76" pos:column="19">dh<pos:position pos:line="76" pos:column="21"/></name></expr></argument>)<pos:position pos:line="76" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="78" pos:column="9">ps<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">-&gt;<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="13">cswitch_vol<pos:position pos:line="78" pos:column="24"/></name></name> <operator pos:line="78" pos:column="25">=<pos:position pos:line="78" pos:column="26"/></operator> <name pos:line="78" pos:column="27">cswitch_vol<pos:position pos:line="78" pos:column="38"/></name></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="79" pos:column="9">ps<pos:position pos:line="79" pos:column="11"/></name><operator pos:line="79" pos:column="11">-&gt;<pos:position pos:line="79" pos:column="16"/></operator><name pos:line="79" pos:column="13">cswitch_invol<pos:position pos:line="79" pos:column="26"/></name></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <name pos:line="79" pos:column="29">cswitch_invol<pos:position pos:line="79" pos:column="42"/></name></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>

	<return pos:line="81" pos:column="9">return <expr><operator pos:line="81" pos:column="16">(<pos:position pos:line="81" pos:column="17"/></operator><name pos:line="81" pos:column="17">ps<pos:position pos:line="81" pos:column="19"/></name><operator pos:line="81" pos:column="19">)<pos:position pos:line="81" pos:column="20"/></operator></expr>;<pos:position pos:line="81" pos:column="21"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

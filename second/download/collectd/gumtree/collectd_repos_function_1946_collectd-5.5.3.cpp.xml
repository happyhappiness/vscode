<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1946_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wt_format_name<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">char<pos:position pos:line="1" pos:column="31"/></name> <modifier pos:line="1" pos:column="32">*<pos:position pos:line="1" pos:column="33"/></modifier></type><name pos:line="1" pos:column="33">ret<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="38">int<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">ret_len<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">value_list_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">vl<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="3" pos:column="27">const<pos:position pos:line="3" pos:column="32"/></specifier> <name><name pos:line="3" pos:column="33">struct<pos:position pos:line="3" pos:column="39"/></name> <name pos:line="3" pos:column="40">wt_callback<pos:position pos:line="3" pos:column="51"/></name></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">cb<pos:position pos:line="3" pos:column="55"/></name></decl></parameter>,
                          <parameter><decl><type><specifier pos:line="4" pos:column="27">const<pos:position pos:line="4" pos:column="32"/></specifier> <name pos:line="4" pos:column="33">char<pos:position pos:line="4" pos:column="37"/></name> <modifier pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="39">ds_name<pos:position pos:line="4" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="47"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">temp<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">prefix<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="string" pos:line="8" pos:column="20">""<pos:position pos:line="8" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">meta_prefix<pos:position pos:line="9" pos:column="28"/></name> <init pos:line="9" pos:column="29">= <expr><literal type="string" pos:line="9" pos:column="31">"tsdb_prefix"<pos:position pos:line="9" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">vl<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">meta<pos:position pos:line="11" pos:column="17"/></name></name></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18"> <block pos:line="11" pos:column="19">{
        <expr_stmt><expr><name pos:line="12" pos:column="9">status<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">meta_data_get_string<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name><name pos:line="12" pos:column="39">vl<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">meta<pos:position pos:line="12" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">meta_prefix<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="62">&amp;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="63">temp<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">status<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">==<pos:position pos:line="13" pos:column="22"/></operator> <operator pos:line="13" pos:column="23">-<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">ENOENT<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
            <comment type="block" pos:line="14" pos:column="13">/* defaults to empty string */</comment>
        }<pos:position pos:line="15" pos:column="10"/></block></then> <elseif pos:line="15" pos:column="11">else <if pos:line="15" pos:column="16">if <condition pos:line="15" pos:column="19">(<expr><name pos:line="15" pos:column="20">status<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">&lt;<pos:position pos:line="15" pos:column="31"/></operator> <literal type="number" pos:line="15" pos:column="29">0<pos:position pos:line="15" pos:column="30"/></literal></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">sfree<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name pos:line="16" pos:column="19">temp<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
            <return pos:line="17" pos:column="13">return <expr><name pos:line="17" pos:column="20">status<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if></elseif> <else pos:line="18" pos:column="11">else <block pos:line="18" pos:column="16">{
            <expr_stmt><expr><name pos:line="19" pos:column="13">prefix<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">temp<pos:position pos:line="19" pos:column="26"/></name></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></else></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">ds_name<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">!=<pos:position pos:line="23" pos:column="19"/></operator> <name pos:line="23" pos:column="20">NULL<pos:position pos:line="23" pos:column="24"/></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">vl<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">plugin_instance<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><literal type="number" pos:line="24" pos:column="33">0<pos:position pos:line="24" pos:column="34"/></literal></expr>]<pos:position pos:line="24" pos:column="35"/></index></name> <operator pos:line="24" pos:column="36">==<pos:position pos:line="24" pos:column="38"/></operator> <literal type="char" pos:line="24" pos:column="39">'\0'<pos:position pos:line="24" pos:column="43"/></literal></expr>)<pos:position pos:line="24" pos:column="44"/></condition><then pos:line="24" pos:column="44"> <block pos:line="24" pos:column="45">{
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">vl<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">type_instance<pos:position pos:line="25" pos:column="34"/></name><index pos:line="25" pos:column="34">[<expr><literal type="number" pos:line="25" pos:column="35">0<pos:position pos:line="25" pos:column="36"/></literal></expr>]<pos:position pos:line="25" pos:column="37"/></index></name> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <literal type="char" pos:line="25" pos:column="41">'\0'<pos:position pos:line="25" pos:column="45"/></literal></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46"> <block pos:line="25" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">ssnprintf<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">ret<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">ret_len<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="41">"%s%s.%s.%s"<pos:position pos:line="26" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="55">prefix<pos:position pos:line="26" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="63">vl<pos:position pos:line="26" pos:column="65"/></name><operator pos:line="26" pos:column="65">-&gt;<pos:position pos:line="26" pos:column="70"/></operator><name pos:line="26" pos:column="67">plugin<pos:position pos:line="26" pos:column="73"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="27" pos:column="25">vl<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">type<pos:position pos:line="27" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">ds_name<pos:position pos:line="27" pos:column="42"/></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then> <else pos:line="28" pos:column="15">else <block pos:line="28" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">ssnprintf<pos:position pos:line="29" pos:column="26"/></name><argument_list pos:line="29" pos:column="26">(<argument><expr><name pos:line="29" pos:column="27">ret<pos:position pos:line="29" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="32">ret_len<pos:position pos:line="29" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="41">"%s%s.%s.%s.%s"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">prefix<pos:position pos:line="29" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="66">vl<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">-&gt;<pos:position pos:line="29" pos:column="73"/></operator><name pos:line="29" pos:column="70">plugin<pos:position pos:line="29" pos:column="76"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="30" pos:column="25">vl<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">type<pos:position pos:line="30" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="35">vl<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">-&gt;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="39">type_instance<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">ds_name<pos:position pos:line="30" pos:column="61"/></name></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></else></if>
        }<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{ <comment type="block" pos:line="32" pos:column="18">/* vl-&gt;plugin_instance != "" */</comment>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name><name pos:line="33" pos:column="17">vl<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">type_instance<pos:position pos:line="33" pos:column="34"/></name><index pos:line="33" pos:column="34">[<expr><literal type="number" pos:line="33" pos:column="35">0<pos:position pos:line="33" pos:column="36"/></literal></expr>]<pos:position pos:line="33" pos:column="37"/></index></name> <operator pos:line="33" pos:column="38">==<pos:position pos:line="33" pos:column="40"/></operator> <literal type="char" pos:line="33" pos:column="41">'\0'<pos:position pos:line="33" pos:column="45"/></literal></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46"> <block pos:line="33" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">ssnprintf<pos:position pos:line="34" pos:column="26"/></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">ret<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">ret_len<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="41">"%s%s.%s.%s.%s"<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="58">prefix<pos:position pos:line="34" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="66">vl<pos:position pos:line="34" pos:column="68"/></name><operator pos:line="34" pos:column="68">-&gt;<pos:position pos:line="34" pos:column="73"/></operator><name pos:line="34" pos:column="70">plugin<pos:position pos:line="34" pos:column="76"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="35" pos:column="25">vl<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">-&gt;<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="29">plugin_instance<pos:position pos:line="35" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="46">vl<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">type<pos:position pos:line="35" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="56">ds_name<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></then> <else pos:line="36" pos:column="15">else <block pos:line="36" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">ssnprintf<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">ret<pos:position pos:line="37" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="32">ret_len<pos:position pos:line="37" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="41">"%s%s.%s.%s.%s.%s"<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">prefix<pos:position pos:line="37" pos:column="67"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="38" pos:column="25">vl<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">plugin<pos:position pos:line="38" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="37">vl<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">plugin_instance<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="58">vl<pos:position pos:line="38" pos:column="60"/></name><operator pos:line="38" pos:column="60">-&gt;<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="62">type<pos:position pos:line="38" pos:column="66"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="39" pos:column="25">vl<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">type_instance<pos:position pos:line="39" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="44">ds_name<pos:position pos:line="39" pos:column="51"/></name></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="53"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></else></if>
        }<pos:position pos:line="41" pos:column="10"/></block></else></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then> <else pos:line="42" pos:column="7">else <block pos:line="42" pos:column="12">{ <comment type="block" pos:line="42" pos:column="14">/* ds_name == NULL */</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name><name pos:line="43" pos:column="13">vl<pos:position pos:line="43" pos:column="15"/></name><operator pos:line="43" pos:column="15">-&gt;<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="17">plugin_instance<pos:position pos:line="43" pos:column="32"/></name><index pos:line="43" pos:column="32">[<expr><literal type="number" pos:line="43" pos:column="33">0<pos:position pos:line="43" pos:column="34"/></literal></expr>]<pos:position pos:line="43" pos:column="35"/></index></name> <operator pos:line="43" pos:column="36">==<pos:position pos:line="43" pos:column="38"/></operator> <literal type="char" pos:line="43" pos:column="39">'\0'<pos:position pos:line="43" pos:column="43"/></literal></expr>)<pos:position pos:line="43" pos:column="44"/></condition><then pos:line="43" pos:column="44"> <block pos:line="43" pos:column="45">{
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name><name pos:line="44" pos:column="17">vl<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">-&gt;<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="21">type_instance<pos:position pos:line="44" pos:column="34"/></name><index pos:line="44" pos:column="34">[<expr><literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr>]<pos:position pos:line="44" pos:column="37"/></index></name> <operator pos:line="44" pos:column="38">==<pos:position pos:line="44" pos:column="40"/></operator> <literal type="char" pos:line="44" pos:column="41">'\0'<pos:position pos:line="44" pos:column="45"/></literal></expr>)<pos:position pos:line="44" pos:column="46"/></condition><then pos:line="44" pos:column="46"> <block pos:line="44" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">ssnprintf<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">ret<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="32">ret_len<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="41">"%s%s.%s"<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="52">prefix<pos:position pos:line="45" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="60">vl<pos:position pos:line="45" pos:column="62"/></name><operator pos:line="45" pos:column="62">-&gt;<pos:position pos:line="45" pos:column="67"/></operator><name pos:line="45" pos:column="64">plugin<pos:position pos:line="45" pos:column="70"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="46" pos:column="25">vl<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">type<pos:position pos:line="46" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then> <else pos:line="47" pos:column="15">else <block pos:line="47" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="48" pos:column="17">ssnprintf<pos:position pos:line="48" pos:column="26"/></name><argument_list pos:line="48" pos:column="26">(<argument><expr><name pos:line="48" pos:column="27">ret<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="32">ret_len<pos:position pos:line="48" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="41">"%s%s.%s.%s"<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="55">prefix<pos:position pos:line="48" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="63">vl<pos:position pos:line="48" pos:column="65"/></name><operator pos:line="48" pos:column="65">-&gt;<pos:position pos:line="48" pos:column="70"/></operator><name pos:line="48" pos:column="67">plugin<pos:position pos:line="48" pos:column="73"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="49" pos:column="25">vl<pos:position pos:line="49" pos:column="27"/></name><operator pos:line="49" pos:column="27">-&gt;<pos:position pos:line="49" pos:column="32"/></operator><name pos:line="49" pos:column="29">type_instance<pos:position pos:line="49" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="44">vl<pos:position pos:line="49" pos:column="46"/></name><operator pos:line="49" pos:column="46">-&gt;<pos:position pos:line="49" pos:column="51"/></operator><name pos:line="49" pos:column="48">type<pos:position pos:line="49" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>
            }<pos:position pos:line="50" pos:column="14"/></block></else></if>
        }<pos:position pos:line="51" pos:column="10"/></block></then> <else pos:line="51" pos:column="11">else <block pos:line="51" pos:column="16">{ <comment type="block" pos:line="51" pos:column="18">/* vl-&gt;plugin_instance != "" */</comment>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name><name pos:line="52" pos:column="17">vl<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">-&gt;<pos:position pos:line="52" pos:column="24"/></operator><name pos:line="52" pos:column="21">type_instance<pos:position pos:line="52" pos:column="34"/></name><index pos:line="52" pos:column="34">[<expr><literal type="number" pos:line="52" pos:column="35">0<pos:position pos:line="52" pos:column="36"/></literal></expr>]<pos:position pos:line="52" pos:column="37"/></index></name> <operator pos:line="52" pos:column="38">==<pos:position pos:line="52" pos:column="40"/></operator> <literal type="char" pos:line="52" pos:column="41">'\0'<pos:position pos:line="52" pos:column="45"/></literal></expr>)<pos:position pos:line="52" pos:column="46"/></condition><then pos:line="52" pos:column="46"> <block pos:line="52" pos:column="47">{
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">ssnprintf<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">ret<pos:position pos:line="53" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="32">ret_len<pos:position pos:line="53" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="41">"%s%s.%s.%s"<pos:position pos:line="53" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="55">prefix<pos:position pos:line="53" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="63">vl<pos:position pos:line="53" pos:column="65"/></name><operator pos:line="53" pos:column="65">-&gt;<pos:position pos:line="53" pos:column="70"/></operator><name pos:line="53" pos:column="67">plugin<pos:position pos:line="53" pos:column="73"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="54" pos:column="25">vl<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">-&gt;<pos:position pos:line="54" pos:column="32"/></operator><name pos:line="54" pos:column="29">plugin_instance<pos:position pos:line="54" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="46">vl<pos:position pos:line="54" pos:column="48"/></name><operator pos:line="54" pos:column="48">-&gt;<pos:position pos:line="54" pos:column="53"/></operator><name pos:line="54" pos:column="50">type<pos:position pos:line="54" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="56"/></expr_stmt>
            }<pos:position pos:line="55" pos:column="14"/></block></then> <else pos:line="55" pos:column="15">else <block pos:line="55" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="56" pos:column="17">ssnprintf<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">ret<pos:position pos:line="56" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="32">ret_len<pos:position pos:line="56" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="41">"%s%s.%s.%s.%s"<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="56" pos:column="58">prefix<pos:position pos:line="56" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="66">vl<pos:position pos:line="56" pos:column="68"/></name><operator pos:line="56" pos:column="68">-&gt;<pos:position pos:line="56" pos:column="73"/></operator><name pos:line="56" pos:column="70">plugin<pos:position pos:line="56" pos:column="76"/></name></name></expr></argument>,
                        <argument><expr><name><name pos:line="57" pos:column="25">vl<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">-&gt;<pos:position pos:line="57" pos:column="32"/></operator><name pos:line="57" pos:column="29">plugin_instance<pos:position pos:line="57" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="46">vl<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">-&gt;<pos:position pos:line="57" pos:column="53"/></operator><name pos:line="57" pos:column="50">type<pos:position pos:line="57" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="56">vl<pos:position pos:line="57" pos:column="58"/></name><operator pos:line="57" pos:column="58">-&gt;<pos:position pos:line="57" pos:column="63"/></operator><name pos:line="57" pos:column="60">type_instance<pos:position pos:line="57" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="75"/></expr_stmt>
            }<pos:position pos:line="58" pos:column="14"/></block></else></if>
        }<pos:position pos:line="59" pos:column="10"/></block></else></if>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">sfree<pos:position pos:line="62" pos:column="10"/></name><argument_list pos:line="62" pos:column="10">(<argument><expr><name pos:line="62" pos:column="11">temp<pos:position pos:line="62" pos:column="15"/></name></expr></argument>)<pos:position pos:line="62" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="17"/></expr_stmt>
    <return pos:line="63" pos:column="5">return <expr><literal type="number" pos:line="63" pos:column="12">0<pos:position pos:line="63" pos:column="13"/></literal></expr>;<pos:position pos:line="63" pos:column="14"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

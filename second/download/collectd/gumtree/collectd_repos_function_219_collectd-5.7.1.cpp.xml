<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_219_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cpu_submit<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">unsigned<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">long<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">long<pos:position pos:line="1" pos:column="42"/></name></type> <name pos:line="1" pos:column="43">value<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">virDomainPtr<pos:position pos:line="1" pos:column="62"/></name></type> <name pos:line="1" pos:column="63">dom<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
                       <parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">type<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list> <block pos:line="2" pos:column="42">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">submit<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">dom<pos:position pos:line="3" pos:column="13"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="15">type<pos:position pos:line="3" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="3" pos:column="27">&amp;<pos:position pos:line="3" pos:column="32"/></operator><operator pos:line="3" pos:column="28">(<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">value_t<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">)<pos:position pos:line="3" pos:column="37"/></operator><block pos:line="3" pos:column="37">{<expr><operator pos:line="3" pos:column="38">.<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">derive<pos:position pos:line="3" pos:column="45"/></name> <operator pos:line="3" pos:column="46">=<pos:position pos:line="3" pos:column="47"/></operator> <operator pos:line="3" pos:column="48">(<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">derive_t<pos:position pos:line="3" pos:column="57"/></name><operator pos:line="3" pos:column="57">)<pos:position pos:line="3" pos:column="58"/></operator><name pos:line="3" pos:column="58">value<pos:position pos:line="3" pos:column="63"/></name></expr>}<pos:position pos:line="3" pos:column="64"/></block></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="66">1<pos:position pos:line="3" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="69"/></expr_stmt>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

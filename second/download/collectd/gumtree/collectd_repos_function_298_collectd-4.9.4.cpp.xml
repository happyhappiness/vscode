<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_298_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">battery_read<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="31"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_IOKIT_IOKITLIB_H<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">||<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="30">HAVE_IOKIT_PS_IOPOWERSOURCES_H<pos:position pos:line="3" pos:column="60"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">double<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">charge<pos:position pos:line="4" pos:column="22"/></name>  <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">INVALID_VALUE<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt> <comment type="block" pos:line="4" pos:column="41">/* Current charge in Ah */</comment>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">double<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">current<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><name pos:line="5" pos:column="26">INVALID_VALUE<pos:position pos:line="5" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt> <comment type="block" pos:line="5" pos:column="41">/* Current in A */</comment>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">double<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">voltage<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><name pos:line="6" pos:column="26">INVALID_VALUE<pos:position pos:line="6" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt> <comment type="block" pos:line="6" pos:column="41">/* Voltage in V */</comment>

	<decl_stmt><decl><type><name pos:line="8" pos:column="9">double<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">charge_rel<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><name pos:line="8" pos:column="29">INVALID_VALUE<pos:position pos:line="8" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt> <comment type="block" pos:line="8" pos:column="44">/* Current charge in percent */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">double<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">charge_abs<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">INVALID_VALUE<pos:position pos:line="9" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt> <comment type="block" pos:line="9" pos:column="44">/* Total capacity */</comment>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">HAVE_IOKIT_PS_IOPOWERSOURCES_H<pos:position pos:line="11" pos:column="35"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">get_via_io_power_sources<pos:position pos:line="12" pos:column="33"/></name> <argument_list pos:line="12" pos:column="34">(<argument><expr><operator pos:line="12" pos:column="35">&amp;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="36">charge_rel<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="48">&amp;<pos:position pos:line="12" pos:column="53"/></operator><name pos:line="12" pos:column="49">current<pos:position pos:line="12" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="58">&amp;<pos:position pos:line="12" pos:column="63"/></operator><name pos:line="12" pos:column="59">voltage<pos:position pos:line="12" pos:column="66"/></name></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">HAVE_IOKIT_IOKITLIB_H<pos:position pos:line="14" pos:column="26"/></name></expr></cpp:if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">get_via_generic_iokit<pos:position pos:line="15" pos:column="30"/></name> <argument_list pos:line="15" pos:column="31">(<argument><expr><operator pos:line="15" pos:column="32">&amp;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="33">charge_abs<pos:position pos:line="15" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="45">&amp;<pos:position pos:line="15" pos:column="50"/></operator><name pos:line="15" pos:column="46">current<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="55">&amp;<pos:position pos:line="15" pos:column="60"/></operator><name pos:line="15" pos:column="56">voltage<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">(<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">charge_rel<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">!=<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="28">INVALID_VALUE<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">)<pos:position pos:line="18" pos:column="42"/></operator> <operator pos:line="18" pos:column="43">&amp;&amp;<pos:position pos:line="18" pos:column="53"/></operator> <operator pos:line="18" pos:column="46">(<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">charge_abs<pos:position pos:line="18" pos:column="57"/></name> <operator pos:line="18" pos:column="58">!=<pos:position pos:line="18" pos:column="60"/></operator> <name pos:line="18" pos:column="61">INVALID_VALUE<pos:position pos:line="18" pos:column="74"/></name><operator pos:line="18" pos:column="74">)<pos:position pos:line="18" pos:column="75"/></operator></expr>)<pos:position pos:line="18" pos:column="76"/></condition><then pos:line="18" pos:column="76">
		<block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="17">charge<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">charge_abs<pos:position pos:line="19" pos:column="36"/></name> <operator pos:line="19" pos:column="37">*<pos:position pos:line="19" pos:column="38"/></operator> <name pos:line="19" pos:column="39">charge_rel<pos:position pos:line="19" pos:column="49"/></name> <operator pos:line="19" pos:column="50">/<pos:position pos:line="19" pos:column="51"/></operator> <literal type="number" pos:line="19" pos:column="52">100.0<pos:position pos:line="19" pos:column="57"/></literal></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt></block></then></if>

	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">charge<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">!=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">INVALID_VALUE<pos:position pos:line="21" pos:column="36"/></name></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">battery_submit<pos:position pos:line="22" pos:column="31"/></name> <argument_list pos:line="22" pos:column="32">(<argument><expr><literal type="string" pos:line="22" pos:column="33">"0"<pos:position pos:line="22" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="38">"charge"<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="48">charge<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt></block></then></if>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">current<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">!=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="24">INVALID_VALUE<pos:position pos:line="23" pos:column="37"/></name></expr>)<pos:position pos:line="23" pos:column="38"/></condition><then pos:line="23" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">battery_submit<pos:position pos:line="24" pos:column="31"/></name> <argument_list pos:line="24" pos:column="32">(<argument><expr><literal type="string" pos:line="24" pos:column="33">"0"<pos:position pos:line="24" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="38">"current"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="49">current<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt></block></then></if>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">voltage<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">!=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">INVALID_VALUE<pos:position pos:line="25" pos:column="37"/></name></expr>)<pos:position pos:line="25" pos:column="38"/></condition><then pos:line="25" pos:column="38">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="17">battery_submit<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">(<argument><expr><literal type="string" pos:line="26" pos:column="33">"0"<pos:position pos:line="26" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="38">"voltage"<pos:position pos:line="26" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">voltage<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt></block></then></if>
<comment type="block" pos:line="27" pos:column="1">/* #endif HAVE_IOKIT_IOKITLIB_H || HAVE_IOKIT_PS_IOPOWERSOURCES_H */</comment>

<cpp:elif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">elif<pos:position pos:line="29" pos:column="6"/></cpp:directive> <expr><name pos:line="29" pos:column="7">KERNEL_LINUX<pos:position pos:line="29" pos:column="19"/></name></expr></cpp:elif>
	<decl_stmt><decl><specifier pos:line="30" pos:column="9">static<pos:position pos:line="30" pos:column="15"/></specifier> <type><name pos:line="30" pos:column="16">c_complain_t<pos:position pos:line="30" pos:column="28"/></name></type> <name pos:line="30" pos:column="29">acpi_dir_complaint<pos:position pos:line="30" pos:column="47"/></name> <init pos:line="30" pos:column="48">= <expr><name pos:line="30" pos:column="50">C_COMPLAIN_INIT_STATIC<pos:position pos:line="30" pos:column="72"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="73"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="32" pos:column="9">FILE<pos:position pos:line="32" pos:column="13"/></name> <modifier pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></modifier></type><name pos:line="32" pos:column="15">fh<pos:position pos:line="32" pos:column="17"/></name></decl>;<pos:position pos:line="32" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="33" pos:column="9">char<pos:position pos:line="33" pos:column="13"/></name></type> <name><name pos:line="33" pos:column="14">buffer<pos:position pos:line="33" pos:column="20"/></name><index pos:line="33" pos:column="20">[<expr><literal type="number" pos:line="33" pos:column="21">1024<pos:position pos:line="33" pos:column="25"/></literal></expr>]<pos:position pos:line="33" pos:column="26"/></index></name></decl>;<pos:position pos:line="33" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="34" pos:column="9">char<pos:position pos:line="34" pos:column="13"/></name></type> <name><name pos:line="34" pos:column="14">filename<pos:position pos:line="34" pos:column="22"/></name><index pos:line="34" pos:column="22">[<expr><literal type="number" pos:line="34" pos:column="23">256<pos:position pos:line="34" pos:column="26"/></literal></expr>]<pos:position pos:line="34" pos:column="27"/></index></name></decl>;<pos:position pos:line="34" pos:column="28"/></decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="36" pos:column="9">char<pos:position pos:line="36" pos:column="13"/></name> <modifier pos:line="36" pos:column="14">*<pos:position pos:line="36" pos:column="15"/></modifier></type><name><name pos:line="36" pos:column="15">fields<pos:position pos:line="36" pos:column="21"/></name><index pos:line="36" pos:column="21">[<expr><literal type="number" pos:line="36" pos:column="22">8<pos:position pos:line="36" pos:column="23"/></literal></expr>]<pos:position pos:line="36" pos:column="24"/></index></name></decl>;<pos:position pos:line="36" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="37" pos:column="9">int<pos:position pos:line="37" pos:column="12"/></name></type> <name pos:line="37" pos:column="13">numfields<pos:position pos:line="37" pos:column="22"/></name></decl>;<pos:position pos:line="37" pos:column="23"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="39" pos:column="9">int<pos:position pos:line="39" pos:column="12"/></name></type> <name pos:line="39" pos:column="13">i<pos:position pos:line="39" pos:column="14"/></name></decl>;<pos:position pos:line="39" pos:column="15"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">int<pos:position pos:line="40" pos:column="12"/></name></type> <name pos:line="40" pos:column="13">len<pos:position pos:line="40" pos:column="16"/></name></decl>;<pos:position pos:line="40" pos:column="17"/></decl_stmt>

	<for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">i<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal></expr>;<pos:position pos:line="42" pos:column="20"/></init> <condition><expr><name pos:line="42" pos:column="21">i<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">&lt;<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="25">battery_pmu_num<pos:position pos:line="42" pos:column="40"/></name></expr>;<pos:position pos:line="42" pos:column="41"/></condition> <incr><expr><name pos:line="42" pos:column="42">i<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">++<pos:position pos:line="42" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="46"/></control>
	<block pos:line="43" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">char<pos:position pos:line="44" pos:column="21"/></name></type>    <name><name pos:line="44" pos:column="25">batnum_str<pos:position pos:line="44" pos:column="35"/></name><index pos:line="44" pos:column="35">[<expr><literal type="number" pos:line="44" pos:column="36">256<pos:position pos:line="44" pos:column="39"/></literal></expr>]<pos:position pos:line="44" pos:column="40"/></index></name></decl>;<pos:position pos:line="44" pos:column="41"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="45" pos:column="17">double<pos:position pos:line="45" pos:column="23"/></name></type>  <name pos:line="45" pos:column="25">current<pos:position pos:line="45" pos:column="32"/></name> <init pos:line="45" pos:column="33">= <expr><name pos:line="45" pos:column="35">INVALID_VALUE<pos:position pos:line="45" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="45" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">double<pos:position pos:line="46" pos:column="23"/></name></type>  <name pos:line="46" pos:column="25">voltage<pos:position pos:line="46" pos:column="32"/></name> <init pos:line="46" pos:column="33">= <expr><name pos:line="46" pos:column="35">INVALID_VALUE<pos:position pos:line="46" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="46" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">double<pos:position pos:line="47" pos:column="23"/></name></type>  <name pos:line="47" pos:column="25">charge<pos:position pos:line="47" pos:column="31"/></name>  <init pos:line="47" pos:column="33">= <expr><name pos:line="47" pos:column="35">INVALID_VALUE<pos:position pos:line="47" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="47" pos:column="49"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">double<pos:position pos:line="48" pos:column="23"/></name> <modifier pos:line="48" pos:column="24">*<pos:position pos:line="48" pos:column="25"/></modifier></type><name pos:line="48" pos:column="25">valptr<pos:position pos:line="48" pos:column="31"/></name> <init pos:line="48" pos:column="32">= <expr><name pos:line="48" pos:column="34">NULL<pos:position pos:line="48" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="48" pos:column="39"/></decl_stmt>

		<expr_stmt><expr><name pos:line="50" pos:column="17">len<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <call><name pos:line="50" pos:column="23">ssnprintf<pos:position pos:line="50" pos:column="32"/></name> <argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">filename<pos:position pos:line="50" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="44">sizeof <argument_list pos:line="50" pos:column="51">(<argument><expr><name pos:line="50" pos:column="52">filename<pos:position pos:line="50" pos:column="60"/></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="50" pos:column="63">battery_pmu_file<pos:position pos:line="50" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="81">i<pos:position pos:line="50" pos:column="82"/></name></expr></argument>)<pos:position pos:line="50" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="84"/></expr_stmt>
		<if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">len<pos:position pos:line="51" pos:column="25"/></name> <operator pos:line="51" pos:column="26">&lt;<pos:position pos:line="51" pos:column="30"/></operator> <literal type="number" pos:line="51" pos:column="28">0<pos:position pos:line="51" pos:column="29"/></literal><operator pos:line="51" pos:column="29">)<pos:position pos:line="51" pos:column="30"/></operator> <operator pos:line="51" pos:column="31">||<pos:position pos:line="51" pos:column="33"/></operator> <operator pos:line="51" pos:column="34">(<pos:position pos:line="51" pos:column="35"/></operator><operator pos:line="51" pos:column="35">(<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">unsigned<pos:position pos:line="51" pos:column="44"/></name> <name pos:line="51" pos:column="45">int<pos:position pos:line="51" pos:column="48"/></name><operator pos:line="51" pos:column="48">)<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="49">len<pos:position pos:line="51" pos:column="52"/></name> <operator pos:line="51" pos:column="53">&gt;=<pos:position pos:line="51" pos:column="58"/></operator> <sizeof pos:line="51" pos:column="56">sizeof <argument_list pos:line="51" pos:column="63">(<argument><expr><name pos:line="51" pos:column="64">filename<pos:position pos:line="51" pos:column="72"/></name></expr></argument>)<pos:position pos:line="51" pos:column="73"/></argument_list></sizeof><operator pos:line="51" pos:column="73">)<pos:position pos:line="51" pos:column="74"/></operator></expr>)<pos:position pos:line="51" pos:column="75"/></condition><then pos:line="51" pos:column="75">
			<block type="pseudo"><continue pos:line="52" pos:column="25">continue;<pos:position pos:line="52" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="54" pos:column="17">len<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">=<pos:position pos:line="54" pos:column="22"/></operator> <call><name pos:line="54" pos:column="23">ssnprintf<pos:position pos:line="54" pos:column="32"/></name> <argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">batnum_str<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><sizeof pos:line="54" pos:column="46">sizeof <argument_list pos:line="54" pos:column="53">(<argument><expr><name pos:line="54" pos:column="54">batnum_str<pos:position pos:line="54" pos:column="64"/></name></expr></argument>)<pos:position pos:line="54" pos:column="65"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="67">"%i"<pos:position pos:line="54" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="73">i<pos:position pos:line="54" pos:column="74"/></name></expr></argument>)<pos:position pos:line="54" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="76"/></expr_stmt>
		<if pos:line="55" pos:column="17">if <condition pos:line="55" pos:column="20">(<expr><operator pos:line="55" pos:column="21">(<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="22">len<pos:position pos:line="55" pos:column="25"/></name> <operator pos:line="55" pos:column="26">&lt;<pos:position pos:line="55" pos:column="30"/></operator> <literal type="number" pos:line="55" pos:column="28">0<pos:position pos:line="55" pos:column="29"/></literal><operator pos:line="55" pos:column="29">)<pos:position pos:line="55" pos:column="30"/></operator> <operator pos:line="55" pos:column="31">||<pos:position pos:line="55" pos:column="33"/></operator> <operator pos:line="55" pos:column="34">(<pos:position pos:line="55" pos:column="35"/></operator><operator pos:line="55" pos:column="35">(<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="36">unsigned<pos:position pos:line="55" pos:column="44"/></name> <name pos:line="55" pos:column="45">int<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">)<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="49">len<pos:position pos:line="55" pos:column="52"/></name> <operator pos:line="55" pos:column="53">&gt;=<pos:position pos:line="55" pos:column="58"/></operator> <sizeof pos:line="55" pos:column="56">sizeof <argument_list pos:line="55" pos:column="63">(<argument><expr><name pos:line="55" pos:column="64">batnum_str<pos:position pos:line="55" pos:column="74"/></name></expr></argument>)<pos:position pos:line="55" pos:column="75"/></argument_list></sizeof><operator pos:line="55" pos:column="75">)<pos:position pos:line="55" pos:column="76"/></operator></expr>)<pos:position pos:line="55" pos:column="77"/></condition><then pos:line="55" pos:column="77">
			<block type="pseudo"><continue pos:line="56" pos:column="25">continue;<pos:position pos:line="56" pos:column="34"/></continue></block></then></if>

		<if pos:line="58" pos:column="17">if <condition pos:line="58" pos:column="20">(<expr><operator pos:line="58" pos:column="21">(<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="22">fh<pos:position pos:line="58" pos:column="24"/></name> <operator pos:line="58" pos:column="25">=<pos:position pos:line="58" pos:column="26"/></operator> <call><name pos:line="58" pos:column="27">fopen<pos:position pos:line="58" pos:column="32"/></name> <argument_list pos:line="58" pos:column="33">(<argument><expr><name pos:line="58" pos:column="34">filename<pos:position pos:line="58" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="44">"r"<pos:position pos:line="58" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call><operator pos:line="58" pos:column="48">)<pos:position pos:line="58" pos:column="49"/></operator> <operator pos:line="58" pos:column="50">==<pos:position pos:line="58" pos:column="52"/></operator> <name pos:line="58" pos:column="53">NULL<pos:position pos:line="58" pos:column="57"/></name></expr>)<pos:position pos:line="58" pos:column="58"/></condition><then pos:line="58" pos:column="58">
			<block type="pseudo"><continue pos:line="59" pos:column="25">continue;<pos:position pos:line="59" pos:column="34"/></continue></block></then></if>

		<while pos:line="61" pos:column="17">while <condition pos:line="61" pos:column="23">(<expr><call><name pos:line="61" pos:column="24">fgets<pos:position pos:line="61" pos:column="29"/></name> <argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">buffer<pos:position pos:line="61" pos:column="37"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="39">sizeof <argument_list pos:line="61" pos:column="46">(<argument><expr><name pos:line="61" pos:column="47">buffer<pos:position pos:line="61" pos:column="53"/></name></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">fh<pos:position pos:line="61" pos:column="58"/></name></expr></argument>)<pos:position pos:line="61" pos:column="59"/></argument_list></call> <operator pos:line="61" pos:column="60">!=<pos:position pos:line="61" pos:column="62"/></operator> <name pos:line="61" pos:column="63">NULL<pos:position pos:line="61" pos:column="67"/></name></expr>)<pos:position pos:line="61" pos:column="68"/></condition>
		<block pos:line="62" pos:column="17">{
			<expr_stmt><expr><name pos:line="63" pos:column="25">numfields<pos:position pos:line="63" pos:column="34"/></name> <operator pos:line="63" pos:column="35">=<pos:position pos:line="63" pos:column="36"/></operator> <call><name pos:line="63" pos:column="37">strsplit<pos:position pos:line="63" pos:column="45"/></name> <argument_list pos:line="63" pos:column="46">(<argument><expr><name pos:line="63" pos:column="47">buffer<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="55">fields<pos:position pos:line="63" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="63">8<pos:position pos:line="63" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>

			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">numfields<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">&lt;<pos:position pos:line="65" pos:column="43"/></operator> <literal type="number" pos:line="65" pos:column="41">3<pos:position pos:line="65" pos:column="42"/></literal></expr>)<pos:position pos:line="65" pos:column="43"/></condition><then pos:line="65" pos:column="43">
				<block type="pseudo"><continue pos:line="66" pos:column="33">continue;<pos:position pos:line="66" pos:column="42"/></continue></block></then></if>

			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><call><name pos:line="68" pos:column="29">strcmp<pos:position pos:line="68" pos:column="35"/></name> <argument_list pos:line="68" pos:column="36">(<argument><expr><literal type="string" pos:line="68" pos:column="37">"current"<pos:position pos:line="68" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="48">fields<pos:position pos:line="68" pos:column="54"/></name><index pos:line="68" pos:column="54">[<expr><literal type="number" pos:line="68" pos:column="55">0<pos:position pos:line="68" pos:column="56"/></literal></expr>]<pos:position pos:line="68" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="68" pos:column="58"/></argument_list></call> <operator pos:line="68" pos:column="59">==<pos:position pos:line="68" pos:column="61"/></operator> <literal type="number" pos:line="68" pos:column="62">0<pos:position pos:line="68" pos:column="63"/></literal></expr>)<pos:position pos:line="68" pos:column="64"/></condition><then pos:line="68" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="33">valptr<pos:position pos:line="69" pos:column="39"/></name> <operator pos:line="69" pos:column="40">=<pos:position pos:line="69" pos:column="41"/></operator> <operator pos:line="69" pos:column="42">&amp;<pos:position pos:line="69" pos:column="47"/></operator><name pos:line="69" pos:column="43">current<pos:position pos:line="69" pos:column="50"/></name></expr>;<pos:position pos:line="69" pos:column="51"/></expr_stmt></block></then>
			<elseif pos:line="70" pos:column="25">else <if pos:line="70" pos:column="30">if <condition pos:line="70" pos:column="33">(<expr><call><name pos:line="70" pos:column="34">strcmp<pos:position pos:line="70" pos:column="40"/></name> <argument_list pos:line="70" pos:column="41">(<argument><expr><literal type="string" pos:line="70" pos:column="42">"voltage"<pos:position pos:line="70" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="53">fields<pos:position pos:line="70" pos:column="59"/></name><index pos:line="70" pos:column="59">[<expr><literal type="number" pos:line="70" pos:column="60">0<pos:position pos:line="70" pos:column="61"/></literal></expr>]<pos:position pos:line="70" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="70" pos:column="63"/></argument_list></call> <operator pos:line="70" pos:column="64">==<pos:position pos:line="70" pos:column="66"/></operator> <literal type="number" pos:line="70" pos:column="67">0<pos:position pos:line="70" pos:column="68"/></literal></expr>)<pos:position pos:line="70" pos:column="69"/></condition><then pos:line="70" pos:column="69">
				<block type="pseudo"><expr_stmt><expr><name pos:line="71" pos:column="33">valptr<pos:position pos:line="71" pos:column="39"/></name> <operator pos:line="71" pos:column="40">=<pos:position pos:line="71" pos:column="41"/></operator> <operator pos:line="71" pos:column="42">&amp;<pos:position pos:line="71" pos:column="47"/></operator><name pos:line="71" pos:column="43">voltage<pos:position pos:line="71" pos:column="50"/></name></expr>;<pos:position pos:line="71" pos:column="51"/></expr_stmt></block></then></if></elseif>
			<elseif pos:line="72" pos:column="25">else <if pos:line="72" pos:column="30">if <condition pos:line="72" pos:column="33">(<expr><call><name pos:line="72" pos:column="34">strcmp<pos:position pos:line="72" pos:column="40"/></name> <argument_list pos:line="72" pos:column="41">(<argument><expr><literal type="string" pos:line="72" pos:column="42">"charge"<pos:position pos:line="72" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="52">fields<pos:position pos:line="72" pos:column="58"/></name><index pos:line="72" pos:column="58">[<expr><literal type="number" pos:line="72" pos:column="59">0<pos:position pos:line="72" pos:column="60"/></literal></expr>]<pos:position pos:line="72" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="72" pos:column="62"/></argument_list></call> <operator pos:line="72" pos:column="63">==<pos:position pos:line="72" pos:column="65"/></operator> <literal type="number" pos:line="72" pos:column="66">0<pos:position pos:line="72" pos:column="67"/></literal></expr>)<pos:position pos:line="72" pos:column="68"/></condition><then pos:line="72" pos:column="68">
				<block type="pseudo"><expr_stmt><expr><name pos:line="73" pos:column="33">valptr<pos:position pos:line="73" pos:column="39"/></name> <operator pos:line="73" pos:column="40">=<pos:position pos:line="73" pos:column="41"/></operator> <operator pos:line="73" pos:column="42">&amp;<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="43">charge<pos:position pos:line="73" pos:column="49"/></name></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt></block></then></if></elseif>
			<else pos:line="74" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="33">valptr<pos:position pos:line="75" pos:column="39"/></name> <operator pos:line="75" pos:column="40">=<pos:position pos:line="75" pos:column="41"/></operator> <name pos:line="75" pos:column="42">NULL<pos:position pos:line="75" pos:column="46"/></name></expr>;<pos:position pos:line="75" pos:column="47"/></expr_stmt></block></else></if>

			<if pos:line="77" pos:column="25">if <condition pos:line="77" pos:column="28">(<expr><name pos:line="77" pos:column="29">valptr<pos:position pos:line="77" pos:column="35"/></name> <operator pos:line="77" pos:column="36">!=<pos:position pos:line="77" pos:column="38"/></operator> <name pos:line="77" pos:column="39">NULL<pos:position pos:line="77" pos:column="43"/></name></expr>)<pos:position pos:line="77" pos:column="44"/></condition><then pos:line="77" pos:column="44">
			<block pos:line="78" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="79" pos:column="33">char<pos:position pos:line="79" pos:column="37"/></name> <modifier pos:line="79" pos:column="38">*<pos:position pos:line="79" pos:column="39"/></modifier></type><name pos:line="79" pos:column="39">endptr<pos:position pos:line="79" pos:column="45"/></name></decl>;<pos:position pos:line="79" pos:column="46"/></decl_stmt>

				<expr_stmt><expr><name pos:line="81" pos:column="33">endptr<pos:position pos:line="81" pos:column="39"/></name> <operator pos:line="81" pos:column="40">=<pos:position pos:line="81" pos:column="41"/></operator> <name pos:line="81" pos:column="42">NULL<pos:position pos:line="81" pos:column="46"/></name></expr>;<pos:position pos:line="81" pos:column="47"/></expr_stmt>
				<expr_stmt><expr><name pos:line="82" pos:column="33">errno<pos:position pos:line="82" pos:column="38"/></name>  <operator pos:line="82" pos:column="40">=<pos:position pos:line="82" pos:column="41"/></operator> <literal type="number" pos:line="82" pos:column="42">0<pos:position pos:line="82" pos:column="43"/></literal></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>

				<expr_stmt><expr><operator pos:line="84" pos:column="33">*<pos:position pos:line="84" pos:column="34"/></operator><name pos:line="84" pos:column="34">valptr<pos:position pos:line="84" pos:column="40"/></name> <operator pos:line="84" pos:column="41">=<pos:position pos:line="84" pos:column="42"/></operator> <call><name pos:line="84" pos:column="43">strtod<pos:position pos:line="84" pos:column="49"/></name> <argument_list pos:line="84" pos:column="50">(<argument><expr><name><name pos:line="84" pos:column="51">fields<pos:position pos:line="84" pos:column="57"/></name><index pos:line="84" pos:column="57">[<expr><literal type="number" pos:line="84" pos:column="58">2<pos:position pos:line="84" pos:column="59"/></literal></expr>]<pos:position pos:line="84" pos:column="60"/></index></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="62">&amp;<pos:position pos:line="84" pos:column="67"/></operator><name pos:line="84" pos:column="63">endptr<pos:position pos:line="84" pos:column="69"/></name></expr></argument>)<pos:position pos:line="84" pos:column="70"/></argument_list></call> <operator pos:line="84" pos:column="71">/<pos:position pos:line="84" pos:column="72"/></operator> <literal type="number" pos:line="84" pos:column="73">1000.0<pos:position pos:line="84" pos:column="79"/></literal></expr>;<pos:position pos:line="84" pos:column="80"/></expr_stmt>

				<if pos:line="86" pos:column="33">if <condition pos:line="86" pos:column="36">(<expr><operator pos:line="86" pos:column="37">(<pos:position pos:line="86" pos:column="38"/></operator><name><name pos:line="86" pos:column="38">fields<pos:position pos:line="86" pos:column="44"/></name><index pos:line="86" pos:column="44">[<expr><literal type="number" pos:line="86" pos:column="45">2<pos:position pos:line="86" pos:column="46"/></literal></expr>]<pos:position pos:line="86" pos:column="47"/></index></name> <operator pos:line="86" pos:column="48">==<pos:position pos:line="86" pos:column="50"/></operator> <name pos:line="86" pos:column="51">endptr<pos:position pos:line="86" pos:column="57"/></name><operator pos:line="86" pos:column="57">)<pos:position pos:line="86" pos:column="58"/></operator> <operator pos:line="86" pos:column="59">||<pos:position pos:line="86" pos:column="61"/></operator> <operator pos:line="86" pos:column="62">(<pos:position pos:line="86" pos:column="63"/></operator><name pos:line="86" pos:column="63">errno<pos:position pos:line="86" pos:column="68"/></name> <operator pos:line="86" pos:column="69">!=<pos:position pos:line="86" pos:column="71"/></operator> <literal type="number" pos:line="86" pos:column="72">0<pos:position pos:line="86" pos:column="73"/></literal><operator pos:line="86" pos:column="73">)<pos:position pos:line="86" pos:column="74"/></operator></expr>)<pos:position pos:line="86" pos:column="75"/></condition><then pos:line="86" pos:column="75">
					<block type="pseudo"><expr_stmt><expr><operator pos:line="87" pos:column="41">*<pos:position pos:line="87" pos:column="42"/></operator><name pos:line="87" pos:column="42">valptr<pos:position pos:line="87" pos:column="48"/></name> <operator pos:line="87" pos:column="49">=<pos:position pos:line="87" pos:column="50"/></operator> <name pos:line="87" pos:column="51">INVALID_VALUE<pos:position pos:line="87" pos:column="64"/></name></expr>;<pos:position pos:line="87" pos:column="65"/></expr_stmt></block></then></if>
			}<pos:position pos:line="88" pos:column="26"/></block></then></if>
		}<pos:position pos:line="89" pos:column="18"/></block></while>

		<expr_stmt><expr><call><name pos:line="91" pos:column="17">fclose<pos:position pos:line="91" pos:column="23"/></name> <argument_list pos:line="91" pos:column="24">(<argument><expr><name pos:line="91" pos:column="25">fh<pos:position pos:line="91" pos:column="27"/></name></expr></argument>)<pos:position pos:line="91" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="92" pos:column="17">fh<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">=<pos:position pos:line="92" pos:column="21"/></operator> <name pos:line="92" pos:column="22">NULL<pos:position pos:line="92" pos:column="26"/></name></expr>;<pos:position pos:line="92" pos:column="27"/></expr_stmt>

		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><name pos:line="94" pos:column="21">charge<pos:position pos:line="94" pos:column="27"/></name> <operator pos:line="94" pos:column="28">!=<pos:position pos:line="94" pos:column="30"/></operator> <name pos:line="94" pos:column="31">INVALID_VALUE<pos:position pos:line="94" pos:column="44"/></name></expr>)<pos:position pos:line="94" pos:column="45"/></condition><then pos:line="94" pos:column="45">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="25">battery_submit<pos:position pos:line="95" pos:column="39"/></name> <argument_list pos:line="95" pos:column="40">(<argument><expr><literal type="string" pos:line="95" pos:column="41">"0"<pos:position pos:line="95" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="46">"charge"<pos:position pos:line="95" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="56">charge<pos:position pos:line="95" pos:column="62"/></name></expr></argument>)<pos:position pos:line="95" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="64"/></expr_stmt></block></then></if>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><name pos:line="96" pos:column="21">current<pos:position pos:line="96" pos:column="28"/></name> <operator pos:line="96" pos:column="29">!=<pos:position pos:line="96" pos:column="31"/></operator> <name pos:line="96" pos:column="32">INVALID_VALUE<pos:position pos:line="96" pos:column="45"/></name></expr>)<pos:position pos:line="96" pos:column="46"/></condition><then pos:line="96" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="25">battery_submit<pos:position pos:line="97" pos:column="39"/></name> <argument_list pos:line="97" pos:column="40">(<argument><expr><literal type="string" pos:line="97" pos:column="41">"0"<pos:position pos:line="97" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="46">"current"<pos:position pos:line="97" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="57">current<pos:position pos:line="97" pos:column="64"/></name></expr></argument>)<pos:position pos:line="97" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="66"/></expr_stmt></block></then></if>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">voltage<pos:position pos:line="98" pos:column="28"/></name> <operator pos:line="98" pos:column="29">!=<pos:position pos:line="98" pos:column="31"/></operator> <name pos:line="98" pos:column="32">INVALID_VALUE<pos:position pos:line="98" pos:column="45"/></name></expr>)<pos:position pos:line="98" pos:column="46"/></condition><then pos:line="98" pos:column="46">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="25">battery_submit<pos:position pos:line="99" pos:column="39"/></name> <argument_list pos:line="99" pos:column="40">(<argument><expr><literal type="string" pos:line="99" pos:column="41">"0"<pos:position pos:line="99" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="46">"voltage"<pos:position pos:line="99" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="57">voltage<pos:position pos:line="99" pos:column="64"/></name></expr></argument>)<pos:position pos:line="99" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="66"/></expr_stmt></block></then></if>
	}<pos:position pos:line="100" pos:column="10"/></block></for>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><literal type="number" pos:line="102" pos:column="13">0<pos:position pos:line="102" pos:column="14"/></literal> <operator pos:line="102" pos:column="15">==<pos:position pos:line="102" pos:column="17"/></operator> <call><name pos:line="102" pos:column="18">access<pos:position pos:line="102" pos:column="24"/></name> <argument_list pos:line="102" pos:column="25">(<argument><expr><name pos:line="102" pos:column="26">battery_acpi_dir<pos:position pos:line="102" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="44">R_OK<pos:position pos:line="102" pos:column="48"/></name></expr></argument>)<pos:position pos:line="102" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="50"/></condition><then pos:line="102" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="103" pos:column="17">walk_directory<pos:position pos:line="103" pos:column="31"/></name> <argument_list pos:line="103" pos:column="32">(<argument><expr><name pos:line="103" pos:column="33">battery_acpi_dir<pos:position pos:line="103" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="51">battery_read_acpi<pos:position pos:line="103" pos:column="68"/></name></expr></argument>,
				<comment type="block" pos:line="104" pos:column="33">/* user_data = */</comment> <argument><expr><name pos:line="104" pos:column="51">NULL<pos:position pos:line="104" pos:column="55"/></name></expr></argument>)<pos:position pos:line="104" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="57"/></expr_stmt></block></then>
	<else pos:line="105" pos:column="9">else
	<block pos:line="106" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="107" pos:column="17">char<pos:position pos:line="107" pos:column="21"/></name></type> <name><name pos:line="107" pos:column="22">errbuf<pos:position pos:line="107" pos:column="28"/></name><index pos:line="107" pos:column="28">[<expr><literal type="number" pos:line="107" pos:column="29">1024<pos:position pos:line="107" pos:column="33"/></literal></expr>]<pos:position pos:line="107" pos:column="34"/></index></name></decl>;<pos:position pos:line="107" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="108" pos:column="17">c_complain_once<pos:position pos:line="108" pos:column="32"/></name> <argument_list pos:line="108" pos:column="33">(<argument><expr><name pos:line="108" pos:column="34">LOG_WARNING<pos:position pos:line="108" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="47">&amp;<pos:position pos:line="108" pos:column="52"/></operator><name pos:line="108" pos:column="48">acpi_dir_complaint<pos:position pos:line="108" pos:column="66"/></name></expr></argument>,
				<argument><expr><literal type="string" pos:line="109" pos:column="33">"battery plugin: Failed to access `%s': %s"<pos:position pos:line="109" pos:column="76"/></literal></expr></argument>,
				<argument><expr><name pos:line="110" pos:column="33">battery_acpi_dir<pos:position pos:line="110" pos:column="49"/></name></expr></argument>,
				<argument><expr><call><name pos:line="111" pos:column="33">sstrerror<pos:position pos:line="111" pos:column="42"/></name> <argument_list pos:line="111" pos:column="43">(<argument><expr><name pos:line="111" pos:column="44">errno<pos:position pos:line="111" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="51">errbuf<pos:position pos:line="111" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="59">sizeof <argument_list pos:line="111" pos:column="66">(<argument><expr><name pos:line="111" pos:column="67">errbuf<pos:position pos:line="111" pos:column="73"/></name></expr></argument>)<pos:position pos:line="111" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="111" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="77"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="10"/></block></else></if>

<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="114" pos:column="8">/* KERNEL_LINUX */</comment>

	<return pos:line="116" pos:column="9">return <expr><operator pos:line="116" pos:column="16">(<pos:position pos:line="116" pos:column="17"/></operator><literal type="number" pos:line="116" pos:column="17">0<pos:position pos:line="116" pos:column="18"/></literal><operator pos:line="116" pos:column="18">)<pos:position pos:line="116" pos:column="19"/></operator></expr>;<pos:position pos:line="116" pos:column="20"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

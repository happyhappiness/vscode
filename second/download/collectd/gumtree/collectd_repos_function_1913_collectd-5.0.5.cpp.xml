<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1913_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier> <type><name pos:line="1" pos:column="15">void<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">iptc_insert_chain<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">TC_HANDLE_T<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">h<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="53">struct<pos:position pos:line="1" pos:column="59"/></name> <name pos:line="1" pos:column="60">chain_head<pos:position pos:line="1" pos:column="70"/></name></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">c<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">chain_head<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">tmp<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">list_head<pos:position pos:line="4" pos:column="25"/></name></name>  <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">list_start_pos<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">unsigned<pos:position pos:line="5" pos:column="17"/></name> <name pos:line="5" pos:column="18">int<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">i<pos:position pos:line="5" pos:column="23"/></name><init pos:line="5" pos:column="23">=<expr><literal type="number" pos:line="5" pos:column="24">1<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Find a smart place to start the insert search */</comment>
  	<expr_stmt><expr><name pos:line="8" pos:column="9">list_start_pos<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <call><name pos:line="8" pos:column="26">iptcc_bsearch_chain_index<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name><name pos:line="8" pos:column="52">c<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">-&gt;<pos:position pos:line="8" pos:column="58"/></operator><name pos:line="8" pos:column="55">name<pos:position pos:line="8" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="61">&amp;<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="62">i<pos:position pos:line="8" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="65">h<pos:position pos:line="8" pos:column="66"/></name></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="68"/></expr_stmt>

	<comment type="block" pos:line="10" pos:column="9">/* Handle the case, where chain.name is smaller than index[0] */</comment>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal> <operator pos:line="11" pos:column="18">&amp;&amp;<pos:position pos:line="11" pos:column="28"/></operator> <call><name pos:line="11" pos:column="21">strcmp<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name><name pos:line="11" pos:column="28">c<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">name<pos:position pos:line="11" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="37">h<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">chain_index<pos:position pos:line="11" pos:column="51"/></name><index pos:line="11" pos:column="51">[<expr><literal type="number" pos:line="11" pos:column="52">0<pos:position pos:line="11" pos:column="53"/></literal></expr>]<pos:position pos:line="11" pos:column="54"/></index></name><operator pos:line="11" pos:column="54">-&gt;<pos:position pos:line="11" pos:column="59"/></operator><name pos:line="11" pos:column="56">name<pos:position pos:line="11" pos:column="60"/></name></expr></argument>)<pos:position pos:line="11" pos:column="61"/></argument_list></call> <operator pos:line="11" pos:column="62">&lt;=<pos:position pos:line="11" pos:column="67"/></operator> <literal type="number" pos:line="11" pos:column="65">0<pos:position pos:line="11" pos:column="66"/></literal></expr>)<pos:position pos:line="11" pos:column="67"/></condition><then pos:line="11" pos:column="67"> <block pos:line="11" pos:column="68">{
		<expr_stmt><expr><name><name pos:line="12" pos:column="17">h<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">chain_index<pos:position pos:line="12" pos:column="31"/></name><index pos:line="12" pos:column="31">[<expr><literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>]<pos:position pos:line="12" pos:column="34"/></index></name> <operator pos:line="12" pos:column="35">=<pos:position pos:line="12" pos:column="36"/></operator> <name pos:line="12" pos:column="37">c<pos:position pos:line="12" pos:column="38"/></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt> <comment type="block" pos:line="12" pos:column="40">/* Update chain index head */</comment>
		<expr_stmt><expr><name pos:line="13" pos:column="17">list_start_pos<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <name><name pos:line="13" pos:column="34">h<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">chains<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">.<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="44">next<pos:position pos:line="13" pos:column="48"/></name></name></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">debug<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"Update chain_index[0] with %s\n"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="58">c<pos:position pos:line="14" pos:column="59"/></name><operator pos:line="14" pos:column="59">-&gt;<pos:position pos:line="14" pos:column="64"/></operator><name pos:line="14" pos:column="61">name<pos:position pos:line="14" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="17" pos:column="9">/* Handel if bsearch bails out early */</comment>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">list_start_pos<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="31">&amp;<pos:position pos:line="18" pos:column="36"/></operator><name><name pos:line="18" pos:column="32">h<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">chains<pos:position pos:line="18" pos:column="41"/></name></name></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42"> <block pos:line="18" pos:column="43">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">list_start_pos<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">=<pos:position pos:line="19" pos:column="33"/></operator> <name><name pos:line="19" pos:column="34">h<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">chains<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">.<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">next<pos:position pos:line="19" pos:column="48"/></name></name></expr>;<pos:position pos:line="19" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="22" pos:column="9">/* sort only user defined chains */</comment>
	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">c<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">hooknum<pos:position pos:line="23" pos:column="24"/></name></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25"> <block pos:line="23" pos:column="26">{
		<macro><name pos:line="24" pos:column="17">list_for_each_entry<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument pos:line="24" pos:column="37">tmp<pos:position pos:line="24" pos:column="40"/></argument>, <argument pos:line="24" pos:column="42">list_start_pos-&gt;prev<pos:position pos:line="24" pos:column="62"/></argument>, <argument pos:line="24" pos:column="64">list<pos:position pos:line="24" pos:column="68"/></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></macro> <block pos:line="24" pos:column="70">{
			<if pos:line="25" pos:column="25">if <condition pos:line="25" pos:column="28">(<expr><operator pos:line="25" pos:column="29">!<pos:position pos:line="25" pos:column="30"/></operator><name><name pos:line="25" pos:column="30">tmp<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">hooknum<pos:position pos:line="25" pos:column="42"/></name></name> <operator pos:line="25" pos:column="43">&amp;&amp;<pos:position pos:line="25" pos:column="53"/></operator> <call><name pos:line="25" pos:column="46">strcmp<pos:position pos:line="25" pos:column="52"/></name><argument_list pos:line="25" pos:column="52">(<argument><expr><name><name pos:line="25" pos:column="53">c<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">name<pos:position pos:line="25" pos:column="60"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="62">tmp<pos:position pos:line="25" pos:column="65"/></name><operator pos:line="25" pos:column="65">-&gt;<pos:position pos:line="25" pos:column="70"/></operator><name pos:line="25" pos:column="67">name<pos:position pos:line="25" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call> <operator pos:line="25" pos:column="73">&lt;=<pos:position pos:line="25" pos:column="78"/></operator> <literal type="number" pos:line="25" pos:column="76">0<pos:position pos:line="25" pos:column="77"/></literal></expr>)<pos:position pos:line="25" pos:column="78"/></condition><then pos:line="25" pos:column="78"> <block pos:line="25" pos:column="79">{
				<expr_stmt><expr><call><name pos:line="26" pos:column="33">list_add<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">(<argument><expr><operator pos:line="26" pos:column="42">&amp;<pos:position pos:line="26" pos:column="47"/></operator><name><name pos:line="26" pos:column="43">c<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">-&gt;<pos:position pos:line="26" pos:column="49"/></operator><name pos:line="26" pos:column="46">list<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="52">tmp<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">-&gt;<pos:position pos:line="26" pos:column="60"/></operator><name pos:line="26" pos:column="57">list<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">.<pos:position pos:line="26" pos:column="62"/></operator><name pos:line="26" pos:column="62">prev<pos:position pos:line="26" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
				<return pos:line="27" pos:column="33">return;<pos:position pos:line="27" pos:column="40"/></return>
			}<pos:position pos:line="28" pos:column="26"/></block></then></if>

			<comment type="block" pos:line="30" pos:column="25">/* Stop if list head is reached */</comment>
			<if pos:line="31" pos:column="25">if <condition pos:line="31" pos:column="28">(<expr><operator pos:line="31" pos:column="29">&amp;<pos:position pos:line="31" pos:column="34"/></operator><name><name pos:line="31" pos:column="30">tmp<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">list<pos:position pos:line="31" pos:column="39"/></name></name> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <operator pos:line="31" pos:column="43">&amp;<pos:position pos:line="31" pos:column="48"/></operator><name><name pos:line="31" pos:column="44">h<pos:position pos:line="31" pos:column="45"/></name><operator pos:line="31" pos:column="45">-&gt;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="47">chains<pos:position pos:line="31" pos:column="53"/></name></name></expr>)<pos:position pos:line="31" pos:column="54"/></condition><then pos:line="31" pos:column="54"> <block pos:line="31" pos:column="55">{
				<expr_stmt><expr><call><name pos:line="32" pos:column="33">debug<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><literal type="string" pos:line="32" pos:column="39">"Insert, list head reached add to tail\n"<pos:position pos:line="32" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="82"/></expr_stmt>
				<break pos:line="33" pos:column="33">break;<pos:position pos:line="33" pos:column="39"/></break>
			}<pos:position pos:line="34" pos:column="26"/></block></then></if>
		}<pos:position pos:line="35" pos:column="18"/></block>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="38" pos:column="9">/* survived till end of list: add at tail */</comment>
	<expr_stmt><expr><call><name pos:line="39" pos:column="9">list_add_tail<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><operator pos:line="39" pos:column="23">&amp;<pos:position pos:line="39" pos:column="28"/></operator><name><name pos:line="39" pos:column="24">c<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">list<pos:position pos:line="39" pos:column="31"/></name></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="33">&amp;<pos:position pos:line="39" pos:column="38"/></operator><name><name pos:line="39" pos:column="34">h<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">chains<pos:position pos:line="39" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="45"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

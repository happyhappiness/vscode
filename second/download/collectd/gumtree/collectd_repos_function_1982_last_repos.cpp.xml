<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1982_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cmd_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cmd_handle_putval<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">FILE<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">fh<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">buffer<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list> <block pos:line="1" pos:column="56">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cmd_error_handler_t<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">err<pos:position pos:line="2" pos:column="26"/></name> <init pos:line="2" pos:column="27">= <expr><block pos:line="2" pos:column="29">{<expr><name pos:line="2" pos:column="30">cmd_error_fh<pos:position pos:line="2" pos:column="42"/></name></expr>, <expr><name pos:line="2" pos:column="44">fh<pos:position pos:line="2" pos:column="46"/></name></expr>}<pos:position pos:line="2" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cmd_t<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">cmd<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">DEBUG<pos:position pos:line="7" pos:column="8"/></name><argument_list pos:line="7" pos:column="8">(<argument><expr><literal type="string" pos:line="7" pos:column="9">"utils_cmd_putval: cmd_handle_putval (fh = %p, buffer = %s);"<pos:position pos:line="7" pos:column="70"/></literal></expr></argument>,
        <argument><expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">void<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></operator><operator pos:line="8" pos:column="16">)<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">fh<pos:position pos:line="8" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="21">buffer<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">status<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <call><name pos:line="10" pos:column="17">cmd_parse<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">buffer<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="36">cmd<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">NULL<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="48">err<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call><operator pos:line="10" pos:column="52">)<pos:position pos:line="10" pos:column="53"/></operator> <operator pos:line="10" pos:column="54">!=<pos:position pos:line="10" pos:column="56"/></operator> <name pos:line="10" pos:column="57">CMD_OK<pos:position pos:line="10" pos:column="63"/></name></expr>)<pos:position pos:line="10" pos:column="64"/></condition><then pos:line="10" pos:column="64">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">status<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">cmd<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">.<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">type<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">!=<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">CMD_PUTVAL<pos:position pos:line="12" pos:column="29"/></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30"> <block pos:line="12" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">cmd_error<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">CMD_UNKNOWN_COMMAND<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="36">&amp;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="37">err<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="42">"Unexpected command: `%s'."<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="14" pos:column="15">CMD_TO_STRING<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name><name pos:line="14" pos:column="29">cmd<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">type<pos:position pos:line="14" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">cmd_destroy<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><operator pos:line="15" pos:column="17">&amp;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="18">cmd<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">CMD_UNKNOWN_COMMAND<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><decl><type><name pos:line="19" pos:column="8">size_t<pos:position pos:line="19" pos:column="14"/></name></type> <name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name> <init pos:line="19" pos:column="17">= <expr><literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="21"/></init> <condition><expr><name pos:line="19" pos:column="22">i<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&lt;<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="26">cmd<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">cmd<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">.<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="34">putval<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">vl_num<pos:position pos:line="19" pos:column="47"/></name></name></expr>;<pos:position pos:line="19" pos:column="48"/></condition> <incr><expr><operator pos:line="19" pos:column="49">++<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">i<pos:position pos:line="19" pos:column="52"/></name></expr></incr>)<pos:position pos:line="19" pos:column="53"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="5">plugin_dispatch_values<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name><name pos:line="20" pos:column="29">cmd<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">.<pos:position pos:line="20" pos:column="33"/></operator><name pos:line="20" pos:column="33">cmd<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">putval<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">vl<pos:position pos:line="20" pos:column="46"/></name><index pos:line="20" pos:column="46">[<expr><name pos:line="20" pos:column="47">i<pos:position pos:line="20" pos:column="48"/></name></expr>]<pos:position pos:line="20" pos:column="49"/></index></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt></block></for>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">fh<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">!=<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">stdout<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">cmd_error<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">CMD_OK<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="23">&amp;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="24">err<pos:position pos:line="23" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="29">"Success: %i %s been dispatched."<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>,
              <argument><expr><operator pos:line="24" pos:column="15">(<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">int<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">)<pos:position pos:line="24" pos:column="20"/></operator><name><name pos:line="24" pos:column="20">cmd<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">cmd<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">.<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">putval<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">vl_num<pos:position pos:line="24" pos:column="41"/></name></name></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="15">(<pos:position pos:line="25" pos:column="16"/></operator><name><name pos:line="25" pos:column="16">cmd<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">cmd<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">.<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">putval<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">.<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="31">vl_num<pos:position pos:line="25" pos:column="37"/></name></name> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <literal type="number" pos:line="25" pos:column="41">1<pos:position pos:line="25" pos:column="42"/></literal><operator pos:line="25" pos:column="42">)<pos:position pos:line="25" pos:column="43"/></operator></expr> ?<pos:position pos:line="25" pos:column="45"/></condition><then pos:line="25" pos:column="45"> <expr><literal type="string" pos:line="25" pos:column="46">"value has"<pos:position pos:line="25" pos:column="57"/></literal></expr> <pos:position pos:line="25" pos:column="58"/></then><else pos:line="25" pos:column="58">: <expr><literal type="string" pos:line="25" pos:column="60">"values have"<pos:position pos:line="25" pos:column="73"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">cmd_destroy<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><operator pos:line="27" pos:column="15">&amp;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="16">cmd<pos:position pos:line="27" pos:column="19"/></name></expr></argument>)<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
  <return pos:line="28" pos:column="3">return <expr><name pos:line="28" pos:column="10">CMD_OK<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

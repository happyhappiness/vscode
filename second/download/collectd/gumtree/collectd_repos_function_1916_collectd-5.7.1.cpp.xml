<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1916_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">o_read_database_query<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">o_database_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">db<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
                                 <parameter><decl><type><name pos:line="2" pos:column="34">udb_query_t<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">q<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>,
                                 <parameter><decl><type><name pos:line="3" pos:column="34">udb_query_preparation_area_t<pos:position pos:line="3" pos:column="62"/></name> <modifier pos:line="3" pos:column="63">*<pos:position pos:line="3" pos:column="64"/></modifier></type><name pos:line="3" pos:column="64">prep_area<pos:position pos:line="3" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="74"/></parameter_list> <block pos:line="3" pos:column="75">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier><modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">column_names<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier><modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">column_values<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">column_num<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">OCIStmt<pos:position pos:line="8" pos:column="10"/></name> <modifier pos:line="8" pos:column="11">*<pos:position pos:line="8" pos:column="12"/></modifier></type><name pos:line="8" pos:column="12">oci_statement<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* List of `OCIDefine' pointers. These defines map columns to the buffer
   * space declared above. */</comment>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">OCIDefine<pos:position pos:line="12" pos:column="12"/></name> <modifier pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></modifier><modifier pos:line="12" pos:column="14">*<pos:position pos:line="12" pos:column="15"/></modifier></type><name pos:line="12" pos:column="15">oci_defines<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">oci_statement<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <call><name pos:line="16" pos:column="19">udb_query_get_user_data<pos:position pos:line="16" pos:column="42"/></name><argument_list pos:line="16" pos:column="42">(<argument><expr><name pos:line="16" pos:column="43">q<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* Prepare the statement */</comment>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">oci_statement<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">NULL<pos:position pos:line="19" pos:column="28"/></name></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29"> <comment type="block" pos:line="19" pos:column="30">/* {{{ */</comment>
  <block pos:line="20" pos:column="3">{
    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">char<pos:position pos:line="21" pos:column="15"/></name> <modifier pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></modifier></type><name pos:line="21" pos:column="17">statement<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">statement<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">udb_query_get_statement<pos:position pos:line="23" pos:column="40"/></name><argument_list pos:line="23" pos:column="40">(<argument><expr><name pos:line="23" pos:column="41">q<pos:position pos:line="23" pos:column="42"/></name></expr></argument>)<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">statement<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">!=<pos:position pos:line="24" pos:column="24"/></operator> <name pos:line="24" pos:column="25">NULL<pos:position pos:line="24" pos:column="29"/></name></expr></argument>)<pos:position pos:line="24" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">status<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">OCIHandleAlloc<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">oci_env<pos:position pos:line="26" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="38">(<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="39">void<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">*<pos:position pos:line="26" pos:column="45"/></operator><operator pos:line="26" pos:column="45">)<pos:position pos:line="26" pos:column="46"/></operator><operator pos:line="26" pos:column="46">&amp;<pos:position pos:line="26" pos:column="51"/></operator><name pos:line="26" pos:column="47">oci_statement<pos:position pos:line="26" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="62">OCI_HTYPE_STMT<pos:position pos:line="26" pos:column="76"/></name></expr></argument>,
                            <comment type="block" pos:line="27" pos:column="29">/* user_data_size = */</comment> <argument><expr><literal type="number" pos:line="27" pos:column="52">0<pos:position pos:line="27" pos:column="53"/></literal></expr></argument>, <comment type="block" pos:line="27" pos:column="55">/* user_data = */</comment> <argument><expr><name pos:line="27" pos:column="73">NULL<pos:position pos:line="27" pos:column="77"/></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">status<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">!=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">OCI_SUCCESS<pos:position pos:line="28" pos:column="30"/></name></expr>)<pos:position pos:line="28" pos:column="31"/></condition><then pos:line="28" pos:column="31"> <block pos:line="28" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">o_report_error<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">(<argument><expr><literal type="string" pos:line="29" pos:column="22">"o_read_database_query"<pos:position pos:line="29" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="47">db<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">name<pos:position pos:line="29" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="57">udb_query_get_name<pos:position pos:line="29" pos:column="75"/></name><argument_list pos:line="29" pos:column="75">(<argument><expr><name pos:line="29" pos:column="76">q<pos:position pos:line="29" pos:column="77"/></name></expr></argument>)<pos:position pos:line="29" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><literal type="string" pos:line="30" pos:column="22">"OCIHandleAlloc"<pos:position pos:line="30" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">oci_error<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><name pos:line="31" pos:column="7">oci_statement<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="23">NULL<pos:position pos:line="31" pos:column="27"/></name></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
      <return pos:line="32" pos:column="7">return <expr><operator pos:line="32" pos:column="14">(<pos:position pos:line="32" pos:column="15"/></operator><operator pos:line="32" pos:column="15">-<pos:position pos:line="32" pos:column="16"/></operator><literal type="number" pos:line="32" pos:column="16">1<pos:position pos:line="32" pos:column="17"/></literal><operator pos:line="32" pos:column="17">)<pos:position pos:line="32" pos:column="18"/></operator></expr>;<pos:position pos:line="32" pos:column="19"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">status<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <call><name pos:line="35" pos:column="14">OCIStmtPrepare<pos:position pos:line="35" pos:column="28"/></name><argument_list pos:line="35" pos:column="28">(<argument><expr><name pos:line="35" pos:column="29">oci_statement<pos:position pos:line="35" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">oci_error<pos:position pos:line="35" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="55">(<pos:position pos:line="35" pos:column="56"/></operator><name pos:line="35" pos:column="56">text<pos:position pos:line="35" pos:column="60"/></name> <operator pos:line="35" pos:column="61">*<pos:position pos:line="35" pos:column="62"/></operator><operator pos:line="35" pos:column="62">)<pos:position pos:line="35" pos:column="63"/></operator><name pos:line="35" pos:column="63">statement<pos:position pos:line="35" pos:column="72"/></name></expr></argument>,
                            <argument><expr><operator pos:line="36" pos:column="29">(<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">ub4<pos:position pos:line="36" pos:column="33"/></name><operator pos:line="36" pos:column="33">)<pos:position pos:line="36" pos:column="34"/></operator><call><name pos:line="36" pos:column="34">strlen<pos:position pos:line="36" pos:column="40"/></name><argument_list pos:line="36" pos:column="40">(<argument><expr><name pos:line="36" pos:column="41">statement<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call></expr></argument>,
                            <comment type="block" pos:line="37" pos:column="29">/* language = */</comment> <argument><expr><name pos:line="37" pos:column="46">OCI_NTV_SYNTAX<pos:position pos:line="37" pos:column="60"/></name></expr></argument>,
                            <comment type="block" pos:line="38" pos:column="29">/* mode     = */</comment> <argument><expr><name pos:line="38" pos:column="46">OCI_DEFAULT<pos:position pos:line="38" pos:column="57"/></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">status<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">!=<pos:position pos:line="39" pos:column="18"/></operator> <name pos:line="39" pos:column="19">OCI_SUCCESS<pos:position pos:line="39" pos:column="30"/></name></expr>)<pos:position pos:line="39" pos:column="31"/></condition><then pos:line="39" pos:column="31"> <block pos:line="39" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">o_report_error<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><literal type="string" pos:line="40" pos:column="22">"o_read_database_query"<pos:position pos:line="40" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="47">db<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">name<pos:position pos:line="40" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="57">udb_query_get_name<pos:position pos:line="40" pos:column="75"/></name><argument_list pos:line="40" pos:column="75">(<argument><expr><name pos:line="40" pos:column="76">q<pos:position pos:line="40" pos:column="77"/></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><literal type="string" pos:line="41" pos:column="22">"OCIStmtPrepare"<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="40">oci_error<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">OCIHandleFree<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">oci_statement<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="36">OCI_HTYPE_STMT<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">oci_statement<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">=<pos:position pos:line="43" pos:column="22"/></operator> <name pos:line="43" pos:column="23">NULL<pos:position pos:line="43" pos:column="27"/></name></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
      <return pos:line="44" pos:column="7">return <expr><operator pos:line="44" pos:column="14">(<pos:position pos:line="44" pos:column="15"/></operator><operator pos:line="44" pos:column="15">-<pos:position pos:line="44" pos:column="16"/></operator><literal type="number" pos:line="44" pos:column="16">1<pos:position pos:line="44" pos:column="17"/></literal><operator pos:line="44" pos:column="17">)<pos:position pos:line="44" pos:column="18"/></operator></expr>;<pos:position pos:line="44" pos:column="19"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">udb_query_set_user_data<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">q<pos:position pos:line="46" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="32">oci_statement<pos:position pos:line="46" pos:column="45"/></name></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">DEBUG<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><literal type="string" pos:line="48" pos:column="11">"oracle plugin: o_read_database_query (%s, %s): "<pos:position pos:line="48" pos:column="60"/></literal>
          <literal type="string" pos:line="49" pos:column="11">"Successfully allocated statement handle."<pos:position pos:line="49" pos:column="53"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="50" pos:column="11">db<pos:position pos:line="50" pos:column="13"/></name><operator pos:line="50" pos:column="13">-&gt;<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="15">name<pos:position pos:line="50" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="50" pos:column="21">udb_query_get_name<pos:position pos:line="50" pos:column="39"/></name><argument_list pos:line="50" pos:column="39">(<argument><expr><name pos:line="50" pos:column="40">q<pos:position pos:line="50" pos:column="41"/></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if> <comment type="block" pos:line="51" pos:column="5">/* }}} */</comment>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">assert<pos:position pos:line="53" pos:column="9"/></name><argument_list pos:line="53" pos:column="9">(<argument><expr><name pos:line="53" pos:column="10">oci_statement<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">!=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">NULL<pos:position pos:line="53" pos:column="31"/></name></expr></argument>)<pos:position pos:line="53" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="33"/></expr_stmt>

  <comment type="block" pos:line="55" pos:column="3">/* Execute the statement */</comment>
  <expr_stmt><expr><name pos:line="56" pos:column="3">status<pos:position pos:line="56" pos:column="9"/></name> <operator pos:line="56" pos:column="10">=<pos:position pos:line="56" pos:column="11"/></operator> <call><name pos:line="56" pos:column="12">OCIStmtExecute<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name><name pos:line="56" pos:column="27">db<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">-&gt;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="31">oci_service_context<pos:position pos:line="56" pos:column="50"/></name></name></expr></argument>, <comment type="block" pos:line="56" pos:column="52">/* {{{ */</comment>
                          <argument><expr><name pos:line="57" pos:column="27">oci_statement<pos:position pos:line="57" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="42">oci_error<pos:position pos:line="57" pos:column="51"/></name></expr></argument>,
                          <comment type="block" pos:line="58" pos:column="27">/* iters = */</comment> <argument><expr><literal type="number" pos:line="58" pos:column="41">0<pos:position pos:line="58" pos:column="42"/></literal></expr></argument>,
                          <comment type="block" pos:line="59" pos:column="27">/* rowoff = */</comment> <argument><expr><literal type="number" pos:line="59" pos:column="42">0<pos:position pos:line="59" pos:column="43"/></literal></expr></argument>,
                          <comment type="block" pos:line="60" pos:column="27">/* snap_in = */</comment> <argument><expr><name pos:line="60" pos:column="43">NULL<pos:position pos:line="60" pos:column="47"/></name></expr></argument>, <comment type="block" pos:line="60" pos:column="49">/* snap_out = */</comment> <argument><expr><name pos:line="60" pos:column="66">NULL<pos:position pos:line="60" pos:column="70"/></name></expr></argument>,
                          <comment type="block" pos:line="61" pos:column="27">/* mode = */</comment> <argument><expr><name pos:line="61" pos:column="40">OCI_DEFAULT<pos:position pos:line="61" pos:column="51"/></name></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="53"/></expr_stmt>
  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><name pos:line="62" pos:column="7">status<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">!=<pos:position pos:line="62" pos:column="16"/></operator> <name pos:line="62" pos:column="17">OCI_SUCCESS<pos:position pos:line="62" pos:column="28"/></name></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29"> <block pos:line="62" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">o_report_error<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">(<argument><expr><literal type="string" pos:line="63" pos:column="20">"o_read_database_query"<pos:position pos:line="63" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="45">db<pos:position pos:line="63" pos:column="47"/></name><operator pos:line="63" pos:column="47">-&gt;<pos:position pos:line="63" pos:column="52"/></operator><name pos:line="63" pos:column="49">name<pos:position pos:line="63" pos:column="53"/></name></name></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="55">udb_query_get_name<pos:position pos:line="63" pos:column="73"/></name><argument_list pos:line="63" pos:column="73">(<argument><expr><name pos:line="63" pos:column="74">q<pos:position pos:line="63" pos:column="75"/></name></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr></argument>,
                   <argument><expr><literal type="string" pos:line="64" pos:column="20">"OCIStmtExecute"<pos:position pos:line="64" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="38">oci_error<pos:position pos:line="64" pos:column="47"/></name></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
    <return pos:line="65" pos:column="5">return <expr><operator pos:line="65" pos:column="12">(<pos:position pos:line="65" pos:column="13"/></operator><operator pos:line="65" pos:column="13">-<pos:position pos:line="65" pos:column="14"/></operator><literal type="number" pos:line="65" pos:column="14">1<pos:position pos:line="65" pos:column="15"/></literal><operator pos:line="65" pos:column="15">)<pos:position pos:line="65" pos:column="16"/></operator></expr>;<pos:position pos:line="65" pos:column="17"/></return>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if> <comment type="block" pos:line="66" pos:column="5">/* }}} */</comment>

  <comment type="block" pos:line="68" pos:column="3">/* Acquire the number of columns returned. */</comment>
  <do pos:line="69" pos:column="3">do <comment type="block" pos:line="69" pos:column="6">/* {{{ */</comment>
  <block pos:line="70" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="71" pos:column="5">ub4<pos:position pos:line="71" pos:column="8"/></name></type> <name pos:line="71" pos:column="9">param_counter<pos:position pos:line="71" pos:column="22"/></name> <init pos:line="71" pos:column="23">= <expr><literal type="number" pos:line="71" pos:column="25">0<pos:position pos:line="71" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="71" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name pos:line="72" pos:column="5">status<pos:position pos:line="72" pos:column="11"/></name> <operator pos:line="72" pos:column="12">=<pos:position pos:line="72" pos:column="13"/></operator> <call><name pos:line="72" pos:column="14">OCIAttrGet<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">oci_statement<pos:position pos:line="72" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="40">OCI_HTYPE_STMT<pos:position pos:line="72" pos:column="54"/></name></expr></argument>, <comment type="block" pos:line="72" pos:column="56">/* {{{ */</comment>
                        <argument><expr><operator pos:line="73" pos:column="25">&amp;<pos:position pos:line="73" pos:column="30"/></operator><name pos:line="73" pos:column="26">param_counter<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="73" pos:column="41">/* size pointer = */</comment> <argument><expr><name pos:line="73" pos:column="62">NULL<pos:position pos:line="73" pos:column="66"/></name></expr></argument>,
                        <argument><expr><name pos:line="74" pos:column="25">OCI_ATTR_PARAM_COUNT<pos:position pos:line="74" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="47">oci_error<pos:position pos:line="74" pos:column="56"/></name></expr></argument>)<pos:position pos:line="74" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="58"/></expr_stmt>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">status<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">!=<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="19">OCI_SUCCESS<pos:position pos:line="75" pos:column="30"/></name></expr>)<pos:position pos:line="75" pos:column="31"/></condition><then pos:line="75" pos:column="31"> <block pos:line="75" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="76" pos:column="7">o_report_error<pos:position pos:line="76" pos:column="21"/></name><argument_list pos:line="76" pos:column="21">(<argument><expr><literal type="string" pos:line="76" pos:column="22">"o_read_database_query"<pos:position pos:line="76" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="47">db<pos:position pos:line="76" pos:column="49"/></name><operator pos:line="76" pos:column="49">-&gt;<pos:position pos:line="76" pos:column="54"/></operator><name pos:line="76" pos:column="51">name<pos:position pos:line="76" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="57">udb_query_get_name<pos:position pos:line="76" pos:column="75"/></name><argument_list pos:line="76" pos:column="75">(<argument><expr><name pos:line="76" pos:column="76">q<pos:position pos:line="76" pos:column="77"/></name></expr></argument>)<pos:position pos:line="76" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><literal type="string" pos:line="77" pos:column="22">"OCIAttrGet"<pos:position pos:line="77" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="36">oci_error<pos:position pos:line="77" pos:column="45"/></name></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="47"/></expr_stmt>
      <return pos:line="78" pos:column="7">return <expr><operator pos:line="78" pos:column="14">(<pos:position pos:line="78" pos:column="15"/></operator><operator pos:line="78" pos:column="15">-<pos:position pos:line="78" pos:column="16"/></operator><literal type="number" pos:line="78" pos:column="16">1<pos:position pos:line="78" pos:column="17"/></literal><operator pos:line="78" pos:column="17">)<pos:position pos:line="78" pos:column="18"/></operator></expr>;<pos:position pos:line="78" pos:column="19"/></return>
    }<pos:position pos:line="79" pos:column="6"/></block></then></if> <comment type="block" pos:line="79" pos:column="7">/* }}} */</comment>

    <expr_stmt><expr><name pos:line="81" pos:column="5">column_num<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <operator pos:line="81" pos:column="18">(<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="19">size_t<pos:position pos:line="81" pos:column="25"/></name><operator pos:line="81" pos:column="25">)<pos:position pos:line="81" pos:column="26"/></operator><name pos:line="81" pos:column="26">param_counter<pos:position pos:line="81" pos:column="39"/></name></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="82" pos:column="4"/></block> while <condition pos:line="82" pos:column="11">(<expr><literal type="number" pos:line="82" pos:column="12">0<pos:position pos:line="82" pos:column="13"/></literal></expr>)<pos:position pos:line="82" pos:column="14"/></condition>;<pos:position pos:line="82" pos:column="15"/></do> <comment type="block" pos:line="82" pos:column="16">/* }}} */</comment>

<comment type="block" pos:line="84" pos:column="1">/* Allocate the following buffers:
 *
 *  +---------------+-----------------------------------+
 *  ! Name          ! Size                              !
 *  +---------------+-----------------------------------+
 *  ! column_names  ! column_num x DATA_MAX_NAME_LEN    !
 *  ! column_values ! column_num x DATA_MAX_NAME_LEN    !
 *  ! oci_defines   ! column_num x sizeof (OCIDefine *) !
 *  +---------------+-----------------------------------+
 *
 * {{{ */</comment>
<cpp:define pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">define<pos:position pos:line="95" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="95" pos:column="9">NUMBER_BUFFER_SIZE<pos:position pos:line="95" pos:column="27"/></name></cpp:macro> <cpp:value pos:line="95" pos:column="28">64<pos:position pos:line="95" pos:column="30"/></cpp:value></cpp:define>

<cpp:define pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">define<pos:position pos:line="97" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="97" pos:column="9">FREE_ALL<pos:position pos:line="97" pos:column="17"/></name></cpp:macro>                                                               \
  <cpp:value pos:line="98" pos:column="3">if (column_names != NULL) {                                                  \
    sfree(column_names[0]);                                                    \
    sfree(column_names);                                                       \
  }                                                                            \
  if (column_values != NULL) {                                                 \
    sfree(column_values[0]);                                                   \
    sfree(column_values);                                                      \
  }                                                                            \
  sfree(oci_defines)<pos:position pos:line="106" pos:column="21"/></cpp:value></cpp:define>

<cpp:define pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">define<pos:position pos:line="108" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="108" pos:column="9">ALLOC_OR_FAIL<pos:position pos:line="108" pos:column="22"/></name><parameter_list pos:line="108" pos:column="22">(<parameter><type><name pos:line="108" pos:column="23">ptr<pos:position pos:line="108" pos:column="26"/></name></type></parameter>, <parameter><type><name pos:line="108" pos:column="28">ptr_size<pos:position pos:line="108" pos:column="36"/></name></type></parameter>)<pos:position pos:line="108" pos:column="37"/></parameter_list></cpp:macro>                                           \
  <cpp:value pos:line="109" pos:column="3">do {                                                                         \
    size_t alloc_size = (size_t)((ptr_size));                                  \
    (ptr) = calloc(1, alloc_size);                                             \
    if ((ptr) == NULL) {                                                       \
      FREE_ALL;                                                                \
      ERROR("oracle plugin: o_read_database_query: calloc failed.");           \
      return (-1);                                                             \
    }                                                                          \
  } while (0)<pos:position pos:line="117" pos:column="14"/></cpp:value></cpp:define>

  <comment type="block" pos:line="119" pos:column="3">/* Initialize everything to NULL so the above works. */</comment>
  <expr_stmt><expr><name pos:line="120" pos:column="3">column_names<pos:position pos:line="120" pos:column="15"/></name> <operator pos:line="120" pos:column="16">=<pos:position pos:line="120" pos:column="17"/></operator> <name pos:line="120" pos:column="18">NULL<pos:position pos:line="120" pos:column="22"/></name></expr>;<pos:position pos:line="120" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="121" pos:column="3">column_values<pos:position pos:line="121" pos:column="16"/></name> <operator pos:line="121" pos:column="17">=<pos:position pos:line="121" pos:column="18"/></operator> <name pos:line="121" pos:column="19">NULL<pos:position pos:line="121" pos:column="23"/></name></expr>;<pos:position pos:line="121" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="122" pos:column="3">oci_defines<pos:position pos:line="122" pos:column="14"/></name> <operator pos:line="122" pos:column="15">=<pos:position pos:line="122" pos:column="16"/></operator> <name pos:line="122" pos:column="17">NULL<pos:position pos:line="122" pos:column="21"/></name></expr>;<pos:position pos:line="122" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="124" pos:column="3">ALLOC_OR_FAIL<pos:position pos:line="124" pos:column="16"/></name><argument_list pos:line="124" pos:column="16">(<argument><expr><name pos:line="124" pos:column="17">column_names<pos:position pos:line="124" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="31">column_num<pos:position pos:line="124" pos:column="41"/></name> <operator pos:line="124" pos:column="42">*<pos:position pos:line="124" pos:column="43"/></operator> <sizeof pos:line="124" pos:column="44">sizeof<argument_list pos:line="124" pos:column="50">(<argument><expr><name pos:line="124" pos:column="51">char<pos:position pos:line="124" pos:column="55"/></name> <operator pos:line="124" pos:column="56">*<pos:position pos:line="124" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="124" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="124" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="125" pos:column="3">ALLOC_OR_FAIL<pos:position pos:line="125" pos:column="16"/></name><argument_list pos:line="125" pos:column="16">(<argument><expr><name><name pos:line="125" pos:column="17">column_names<pos:position pos:line="125" pos:column="29"/></name><index pos:line="125" pos:column="29">[<expr><literal type="number" pos:line="125" pos:column="30">0<pos:position pos:line="125" pos:column="31"/></literal></expr>]<pos:position pos:line="125" pos:column="32"/></index></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="34">column_num<pos:position pos:line="125" pos:column="44"/></name> <operator pos:line="125" pos:column="45">*<pos:position pos:line="125" pos:column="46"/></operator> <name pos:line="125" pos:column="47">DATA_MAX_NAME_LEN<pos:position pos:line="125" pos:column="64"/></name> <operator pos:line="125" pos:column="65">*<pos:position pos:line="125" pos:column="66"/></operator> <sizeof pos:line="125" pos:column="67">sizeof<argument_list pos:line="125" pos:column="73">(<argument><expr><name pos:line="125" pos:column="74">char<pos:position pos:line="125" pos:column="78"/></name></expr></argument>)<pos:position pos:line="125" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="125" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="81"/></expr_stmt>
  <for pos:line="126" pos:column="3">for <control pos:line="126" pos:column="7">(<init><decl><type><name pos:line="126" pos:column="8">size_t<pos:position pos:line="126" pos:column="14"/></name></type> <name pos:line="126" pos:column="15">i<pos:position pos:line="126" pos:column="16"/></name> <init pos:line="126" pos:column="17">= <expr><literal type="number" pos:line="126" pos:column="19">1<pos:position pos:line="126" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="126" pos:column="21"/></init> <condition><expr><name pos:line="126" pos:column="22">i<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">&lt;<pos:position pos:line="126" pos:column="28"/></operator> <name pos:line="126" pos:column="26">column_num<pos:position pos:line="126" pos:column="36"/></name></expr>;<pos:position pos:line="126" pos:column="37"/></condition> <incr><expr><name pos:line="126" pos:column="38">i<pos:position pos:line="126" pos:column="39"/></name><operator pos:line="126" pos:column="39">++<pos:position pos:line="126" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="126" pos:column="42"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="127" pos:column="5">column_names<pos:position pos:line="127" pos:column="17"/></name><index pos:line="127" pos:column="17">[<expr><name pos:line="127" pos:column="18">i<pos:position pos:line="127" pos:column="19"/></name></expr>]<pos:position pos:line="127" pos:column="20"/></index></name> <operator pos:line="127" pos:column="21">=<pos:position pos:line="127" pos:column="22"/></operator> <name><name pos:line="127" pos:column="23">column_names<pos:position pos:line="127" pos:column="35"/></name><index pos:line="127" pos:column="35">[<expr><name pos:line="127" pos:column="36">i<pos:position pos:line="127" pos:column="37"/></name> <operator pos:line="127" pos:column="38">-<pos:position pos:line="127" pos:column="39"/></operator> <literal type="number" pos:line="127" pos:column="40">1<pos:position pos:line="127" pos:column="41"/></literal></expr>]<pos:position pos:line="127" pos:column="42"/></index></name> <operator pos:line="127" pos:column="43">+<pos:position pos:line="127" pos:column="44"/></operator> <name pos:line="127" pos:column="45">DATA_MAX_NAME_LEN<pos:position pos:line="127" pos:column="62"/></name></expr>;<pos:position pos:line="127" pos:column="63"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="129" pos:column="3">ALLOC_OR_FAIL<pos:position pos:line="129" pos:column="16"/></name><argument_list pos:line="129" pos:column="16">(<argument><expr><name pos:line="129" pos:column="17">column_values<pos:position pos:line="129" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="32">column_num<pos:position pos:line="129" pos:column="42"/></name> <operator pos:line="129" pos:column="43">*<pos:position pos:line="129" pos:column="44"/></operator> <sizeof pos:line="129" pos:column="45">sizeof<argument_list pos:line="129" pos:column="51">(<argument><expr><name pos:line="129" pos:column="52">char<pos:position pos:line="129" pos:column="56"/></name> <operator pos:line="129" pos:column="57">*<pos:position pos:line="129" pos:column="58"/></operator></expr></argument>)<pos:position pos:line="129" pos:column="59"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="129" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="130" pos:column="3">ALLOC_OR_FAIL<pos:position pos:line="130" pos:column="16"/></name><argument_list pos:line="130" pos:column="16">(<argument><expr><name><name pos:line="130" pos:column="17">column_values<pos:position pos:line="130" pos:column="30"/></name><index pos:line="130" pos:column="30">[<expr><literal type="number" pos:line="130" pos:column="31">0<pos:position pos:line="130" pos:column="32"/></literal></expr>]<pos:position pos:line="130" pos:column="33"/></index></name></expr></argument>,
                <argument><expr><name pos:line="131" pos:column="17">column_num<pos:position pos:line="131" pos:column="27"/></name> <operator pos:line="131" pos:column="28">*<pos:position pos:line="131" pos:column="29"/></operator> <name pos:line="131" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="131" pos:column="47"/></name> <operator pos:line="131" pos:column="48">*<pos:position pos:line="131" pos:column="49"/></operator> <sizeof pos:line="131" pos:column="50">sizeof<argument_list pos:line="131" pos:column="56">(<argument><expr><name pos:line="131" pos:column="57">char<pos:position pos:line="131" pos:column="61"/></name></expr></argument>)<pos:position pos:line="131" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="131" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="64"/></expr_stmt>
  <for pos:line="132" pos:column="3">for <control pos:line="132" pos:column="7">(<init><decl><type><name pos:line="132" pos:column="8">size_t<pos:position pos:line="132" pos:column="14"/></name></type> <name pos:line="132" pos:column="15">i<pos:position pos:line="132" pos:column="16"/></name> <init pos:line="132" pos:column="17">= <expr><literal type="number" pos:line="132" pos:column="19">1<pos:position pos:line="132" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="132" pos:column="21"/></init> <condition><expr><name pos:line="132" pos:column="22">i<pos:position pos:line="132" pos:column="23"/></name> <operator pos:line="132" pos:column="24">&lt;<pos:position pos:line="132" pos:column="28"/></operator> <name pos:line="132" pos:column="26">column_num<pos:position pos:line="132" pos:column="36"/></name></expr>;<pos:position pos:line="132" pos:column="37"/></condition> <incr><expr><name pos:line="132" pos:column="38">i<pos:position pos:line="132" pos:column="39"/></name><operator pos:line="132" pos:column="39">++<pos:position pos:line="132" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="132" pos:column="42"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="133" pos:column="5">column_values<pos:position pos:line="133" pos:column="18"/></name><index pos:line="133" pos:column="18">[<expr><name pos:line="133" pos:column="19">i<pos:position pos:line="133" pos:column="20"/></name></expr>]<pos:position pos:line="133" pos:column="21"/></index></name> <operator pos:line="133" pos:column="22">=<pos:position pos:line="133" pos:column="23"/></operator> <name><name pos:line="133" pos:column="24">column_values<pos:position pos:line="133" pos:column="37"/></name><index pos:line="133" pos:column="37">[<expr><name pos:line="133" pos:column="38">i<pos:position pos:line="133" pos:column="39"/></name> <operator pos:line="133" pos:column="40">-<pos:position pos:line="133" pos:column="41"/></operator> <literal type="number" pos:line="133" pos:column="42">1<pos:position pos:line="133" pos:column="43"/></literal></expr>]<pos:position pos:line="133" pos:column="44"/></index></name> <operator pos:line="133" pos:column="45">+<pos:position pos:line="133" pos:column="46"/></operator> <name pos:line="133" pos:column="47">DATA_MAX_NAME_LEN<pos:position pos:line="133" pos:column="64"/></name></expr>;<pos:position pos:line="133" pos:column="65"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="135" pos:column="3">ALLOC_OR_FAIL<pos:position pos:line="135" pos:column="16"/></name><argument_list pos:line="135" pos:column="16">(<argument><expr><name pos:line="135" pos:column="17">oci_defines<pos:position pos:line="135" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="30">column_num<pos:position pos:line="135" pos:column="40"/></name> <operator pos:line="135" pos:column="41">*<pos:position pos:line="135" pos:column="42"/></operator> <sizeof pos:line="135" pos:column="43">sizeof<argument_list pos:line="135" pos:column="49">(<argument><expr><name pos:line="135" pos:column="50">OCIDefine<pos:position pos:line="135" pos:column="59"/></name> <operator pos:line="135" pos:column="60">*<pos:position pos:line="135" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="135" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="135" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="64"/></expr_stmt>
  <comment type="block" pos:line="136" pos:column="3">/* }}} End of buffer allocations. */</comment>

  <comment type="block" pos:line="138" pos:column="3">/* ``Define'' the returned data, i. e. bind the columns to the buffers
   * allocated above. */</comment>
  <for pos:line="140" pos:column="3">for <control pos:line="140" pos:column="7">(<init><decl><type><name pos:line="140" pos:column="8">size_t<pos:position pos:line="140" pos:column="14"/></name></type> <name pos:line="140" pos:column="15">i<pos:position pos:line="140" pos:column="16"/></name> <init pos:line="140" pos:column="17">= <expr><literal type="number" pos:line="140" pos:column="19">0<pos:position pos:line="140" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="140" pos:column="21"/></init> <condition><expr><name pos:line="140" pos:column="22">i<pos:position pos:line="140" pos:column="23"/></name> <operator pos:line="140" pos:column="24">&lt;<pos:position pos:line="140" pos:column="28"/></operator> <name pos:line="140" pos:column="26">column_num<pos:position pos:line="140" pos:column="36"/></name></expr>;<pos:position pos:line="140" pos:column="37"/></condition> <incr><expr><name pos:line="140" pos:column="38">i<pos:position pos:line="140" pos:column="39"/></name><operator pos:line="140" pos:column="39">++<pos:position pos:line="140" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="140" pos:column="42"/></control> <comment type="block" pos:line="140" pos:column="43">/* {{{ */</comment>
  <block pos:line="141" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="142" pos:column="5">char<pos:position pos:line="142" pos:column="9"/></name> <modifier pos:line="142" pos:column="10">*<pos:position pos:line="142" pos:column="11"/></modifier></type><name pos:line="142" pos:column="11">column_name<pos:position pos:line="142" pos:column="22"/></name></decl>;<pos:position pos:line="142" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="143" pos:column="5">ub4<pos:position pos:line="143" pos:column="8"/></name></type> <name pos:line="143" pos:column="9">column_name_length<pos:position pos:line="143" pos:column="27"/></name></decl>;<pos:position pos:line="143" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="144" pos:column="5">OCIParam<pos:position pos:line="144" pos:column="13"/></name> <modifier pos:line="144" pos:column="14">*<pos:position pos:line="144" pos:column="15"/></modifier></type><name pos:line="144" pos:column="15">oci_param<pos:position pos:line="144" pos:column="24"/></name></decl>;<pos:position pos:line="144" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="146" pos:column="5">oci_param<pos:position pos:line="146" pos:column="14"/></name> <operator pos:line="146" pos:column="15">=<pos:position pos:line="146" pos:column="16"/></operator> <name pos:line="146" pos:column="17">NULL<pos:position pos:line="146" pos:column="21"/></name></expr>;<pos:position pos:line="146" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="148" pos:column="5">status<pos:position pos:line="148" pos:column="11"/></name> <operator pos:line="148" pos:column="12">=<pos:position pos:line="148" pos:column="13"/></operator> <call><name pos:line="148" pos:column="14">OCIParamGet<pos:position pos:line="148" pos:column="25"/></name><argument_list pos:line="148" pos:column="25">(<argument><expr><name pos:line="148" pos:column="26">oci_statement<pos:position pos:line="148" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="41">OCI_HTYPE_STMT<pos:position pos:line="148" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="148" pos:column="57">oci_error<pos:position pos:line="148" pos:column="66"/></name></expr></argument>,
                         <argument><expr><operator pos:line="149" pos:column="26">(<pos:position pos:line="149" pos:column="27"/></operator><name pos:line="149" pos:column="27">void<pos:position pos:line="149" pos:column="31"/></name> <operator pos:line="149" pos:column="32">*<pos:position pos:line="149" pos:column="33"/></operator><operator pos:line="149" pos:column="33">)<pos:position pos:line="149" pos:column="34"/></operator><operator pos:line="149" pos:column="34">&amp;<pos:position pos:line="149" pos:column="39"/></operator><name pos:line="149" pos:column="35">oci_param<pos:position pos:line="149" pos:column="44"/></name></expr></argument>, <argument><expr><call pos:line="149" pos:column="46">(<name pos:line="149" pos:column="47">ub4<pos:position pos:line="149" pos:column="50"/></name>)<argument_list pos:line="149" pos:column="51">(<argument><expr><name pos:line="149" pos:column="52">i<pos:position pos:line="149" pos:column="53"/></name> <operator pos:line="149" pos:column="54">+<pos:position pos:line="149" pos:column="55"/></operator> <literal type="number" pos:line="149" pos:column="56">1<pos:position pos:line="149" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="60"/></expr_stmt>
    <if pos:line="150" pos:column="5">if <condition pos:line="150" pos:column="8">(<expr><name pos:line="150" pos:column="9">status<pos:position pos:line="150" pos:column="15"/></name> <operator pos:line="150" pos:column="16">!=<pos:position pos:line="150" pos:column="18"/></operator> <name pos:line="150" pos:column="19">OCI_SUCCESS<pos:position pos:line="150" pos:column="30"/></name></expr>)<pos:position pos:line="150" pos:column="31"/></condition><then pos:line="150" pos:column="31"> <block pos:line="150" pos:column="32">{
      <comment type="block" pos:line="151" pos:column="7">/* This is probably alright */</comment>
      <expr_stmt><expr><call><name pos:line="152" pos:column="7">DEBUG<pos:position pos:line="152" pos:column="12"/></name><argument_list pos:line="152" pos:column="12">(<argument><expr><literal type="string" pos:line="152" pos:column="13">"oracle plugin: o_read_database_query: status = %#x (= %i);"<pos:position pos:line="152" pos:column="73"/></literal></expr></argument>,
            <argument><expr><name pos:line="153" pos:column="13">status<pos:position pos:line="153" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="21">status<pos:position pos:line="153" pos:column="27"/></name></expr></argument>)<pos:position pos:line="153" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="154" pos:column="7">o_report_error<pos:position pos:line="154" pos:column="21"/></name><argument_list pos:line="154" pos:column="21">(<argument><expr><literal type="string" pos:line="154" pos:column="22">"o_read_database_query"<pos:position pos:line="154" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="154" pos:column="47">db<pos:position pos:line="154" pos:column="49"/></name><operator pos:line="154" pos:column="49">-&gt;<pos:position pos:line="154" pos:column="54"/></operator><name pos:line="154" pos:column="51">name<pos:position pos:line="154" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="154" pos:column="57">udb_query_get_name<pos:position pos:line="154" pos:column="75"/></name><argument_list pos:line="154" pos:column="75">(<argument><expr><name pos:line="154" pos:column="76">q<pos:position pos:line="154" pos:column="77"/></name></expr></argument>)<pos:position pos:line="154" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><literal type="string" pos:line="155" pos:column="22">"OCIParamGet"<pos:position pos:line="155" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="37">oci_error<pos:position pos:line="155" pos:column="46"/></name></expr></argument>)<pos:position pos:line="155" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="156" pos:column="7">status<pos:position pos:line="156" pos:column="13"/></name> <operator pos:line="156" pos:column="14">=<pos:position pos:line="156" pos:column="15"/></operator> <name pos:line="156" pos:column="16">OCI_SUCCESS<pos:position pos:line="156" pos:column="27"/></name></expr>;<pos:position pos:line="156" pos:column="28"/></expr_stmt>
      <break pos:line="157" pos:column="7">break;<pos:position pos:line="157" pos:column="13"/></break>
    }<pos:position pos:line="158" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="160" pos:column="5">column_name<pos:position pos:line="160" pos:column="16"/></name> <operator pos:line="160" pos:column="17">=<pos:position pos:line="160" pos:column="18"/></operator> <name pos:line="160" pos:column="19">NULL<pos:position pos:line="160" pos:column="23"/></name></expr>;<pos:position pos:line="160" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="161" pos:column="5">column_name_length<pos:position pos:line="161" pos:column="23"/></name> <operator pos:line="161" pos:column="24">=<pos:position pos:line="161" pos:column="25"/></operator> <literal type="number" pos:line="161" pos:column="26">0<pos:position pos:line="161" pos:column="27"/></literal></expr>;<pos:position pos:line="161" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="162" pos:column="5">status<pos:position pos:line="162" pos:column="11"/></name> <operator pos:line="162" pos:column="12">=<pos:position pos:line="162" pos:column="13"/></operator> <call><name pos:line="162" pos:column="14">OCIAttrGet<pos:position pos:line="162" pos:column="24"/></name><argument_list pos:line="162" pos:column="24">(<argument><expr><name pos:line="162" pos:column="25">oci_param<pos:position pos:line="162" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="36">OCI_DTYPE_PARAM<pos:position pos:line="162" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="53">&amp;<pos:position pos:line="162" pos:column="58"/></operator><name pos:line="162" pos:column="54">column_name<pos:position pos:line="162" pos:column="65"/></name></expr></argument>,
                        <argument><expr><operator pos:line="163" pos:column="25">&amp;<pos:position pos:line="163" pos:column="30"/></operator><name pos:line="163" pos:column="26">column_name_length<pos:position pos:line="163" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="46">OCI_ATTR_NAME<pos:position pos:line="163" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="61">oci_error<pos:position pos:line="163" pos:column="70"/></name></expr></argument>)<pos:position pos:line="163" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="72"/></expr_stmt>
    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><name pos:line="164" pos:column="9">status<pos:position pos:line="164" pos:column="15"/></name> <operator pos:line="164" pos:column="16">!=<pos:position pos:line="164" pos:column="18"/></operator> <name pos:line="164" pos:column="19">OCI_SUCCESS<pos:position pos:line="164" pos:column="30"/></name></expr>)<pos:position pos:line="164" pos:column="31"/></condition><then pos:line="164" pos:column="31"> <block pos:line="164" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="165" pos:column="7">OCIDescriptorFree<pos:position pos:line="165" pos:column="24"/></name><argument_list pos:line="165" pos:column="24">(<argument><expr><name pos:line="165" pos:column="25">oci_param<pos:position pos:line="165" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="36">OCI_DTYPE_PARAM<pos:position pos:line="165" pos:column="51"/></name></expr></argument>)<pos:position pos:line="165" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="166" pos:column="7">o_report_error<pos:position pos:line="166" pos:column="21"/></name><argument_list pos:line="166" pos:column="21">(<argument><expr><literal type="string" pos:line="166" pos:column="22">"o_read_database_query"<pos:position pos:line="166" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="47">db<pos:position pos:line="166" pos:column="49"/></name><operator pos:line="166" pos:column="49">-&gt;<pos:position pos:line="166" pos:column="54"/></operator><name pos:line="166" pos:column="51">name<pos:position pos:line="166" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="166" pos:column="57">udb_query_get_name<pos:position pos:line="166" pos:column="75"/></name><argument_list pos:line="166" pos:column="75">(<argument><expr><name pos:line="166" pos:column="76">q<pos:position pos:line="166" pos:column="77"/></name></expr></argument>)<pos:position pos:line="166" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><literal type="string" pos:line="167" pos:column="22">"OCIAttrGet (OCI_ATTR_NAME)"<pos:position pos:line="167" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="52">oci_error<pos:position pos:line="167" pos:column="61"/></name></expr></argument>)<pos:position pos:line="167" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="63"/></expr_stmt>
      <continue pos:line="168" pos:column="7">continue;<pos:position pos:line="168" pos:column="16"/></continue>
    }<pos:position pos:line="169" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="171" pos:column="5">OCIDescriptorFree<pos:position pos:line="171" pos:column="22"/></name><argument_list pos:line="171" pos:column="22">(<argument><expr><name pos:line="171" pos:column="23">oci_param<pos:position pos:line="171" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="171" pos:column="34">OCI_DTYPE_PARAM<pos:position pos:line="171" pos:column="49"/></name></expr></argument>)<pos:position pos:line="171" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="172" pos:column="5">oci_param<pos:position pos:line="172" pos:column="14"/></name> <operator pos:line="172" pos:column="15">=<pos:position pos:line="172" pos:column="16"/></operator> <name pos:line="172" pos:column="17">NULL<pos:position pos:line="172" pos:column="21"/></name></expr>;<pos:position pos:line="172" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="174" pos:column="5">/* Copy the name to column_names. Warning: The ``string'' returned by OCI
     * may not be null terminated! */</comment>
    <expr_stmt><expr><call><name pos:line="176" pos:column="5">memset<pos:position pos:line="176" pos:column="11"/></name><argument_list pos:line="176" pos:column="11">(<argument><expr><name><name pos:line="176" pos:column="12">column_names<pos:position pos:line="176" pos:column="24"/></name><index pos:line="176" pos:column="24">[<expr><name pos:line="176" pos:column="25">i<pos:position pos:line="176" pos:column="26"/></name></expr>]<pos:position pos:line="176" pos:column="27"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="176" pos:column="29">0<pos:position pos:line="176" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="176" pos:column="32">DATA_MAX_NAME_LEN<pos:position pos:line="176" pos:column="49"/></name></expr></argument>)<pos:position pos:line="176" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="51"/></expr_stmt>
    <if pos:line="177" pos:column="5">if <condition pos:line="177" pos:column="8">(<expr><name pos:line="177" pos:column="9">column_name_length<pos:position pos:line="177" pos:column="27"/></name> <operator pos:line="177" pos:column="28">&gt;=<pos:position pos:line="177" pos:column="33"/></operator> <name pos:line="177" pos:column="31">DATA_MAX_NAME_LEN<pos:position pos:line="177" pos:column="48"/></name></expr>)<pos:position pos:line="177" pos:column="49"/></condition><then pos:line="177" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="178" pos:column="7">column_name_length<pos:position pos:line="178" pos:column="25"/></name> <operator pos:line="178" pos:column="26">=<pos:position pos:line="178" pos:column="27"/></operator> <name pos:line="178" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="178" pos:column="45"/></name> <operator pos:line="178" pos:column="46">-<pos:position pos:line="178" pos:column="47"/></operator> <literal type="number" pos:line="178" pos:column="48">1<pos:position pos:line="178" pos:column="49"/></literal></expr>;<pos:position pos:line="178" pos:column="50"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="179" pos:column="5">memcpy<pos:position pos:line="179" pos:column="11"/></name><argument_list pos:line="179" pos:column="11">(<argument><expr><name><name pos:line="179" pos:column="12">column_names<pos:position pos:line="179" pos:column="24"/></name><index pos:line="179" pos:column="24">[<expr><name pos:line="179" pos:column="25">i<pos:position pos:line="179" pos:column="26"/></name></expr>]<pos:position pos:line="179" pos:column="27"/></index></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="29">column_name<pos:position pos:line="179" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="179" pos:column="42">column_name_length<pos:position pos:line="179" pos:column="60"/></name></expr></argument>)<pos:position pos:line="179" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="180" pos:column="5">column_names<pos:position pos:line="180" pos:column="17"/></name><index pos:line="180" pos:column="17">[<expr><name pos:line="180" pos:column="18">i<pos:position pos:line="180" pos:column="19"/></name></expr>]<pos:position pos:line="180" pos:column="20"/></index><index pos:line="180" pos:column="20">[<expr><name pos:line="180" pos:column="21">column_name_length<pos:position pos:line="180" pos:column="39"/></name></expr>]<pos:position pos:line="180" pos:column="40"/></index></name> <operator pos:line="180" pos:column="41">=<pos:position pos:line="180" pos:column="42"/></operator> <literal type="number" pos:line="180" pos:column="43">0<pos:position pos:line="180" pos:column="44"/></literal></expr>;<pos:position pos:line="180" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="182" pos:column="5">DEBUG<pos:position pos:line="182" pos:column="10"/></name><argument_list pos:line="182" pos:column="10">(<argument><expr><literal type="string" pos:line="182" pos:column="11">"oracle plugin: o_read_database_query: column_names[%zu] = %s; "<pos:position pos:line="182" pos:column="75"/></literal>
          <literal type="string" pos:line="183" pos:column="11">"column_name_length = %"<pos:position pos:line="183" pos:column="35"/></literal> <name pos:line="183" pos:column="36">PRIu32<pos:position pos:line="183" pos:column="42"/></name> <literal type="string" pos:line="183" pos:column="43">";"<pos:position pos:line="183" pos:column="46"/></literal></expr></argument>,
          <argument><expr><name pos:line="184" pos:column="11">i<pos:position pos:line="184" pos:column="12"/></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="14">column_names<pos:position pos:line="184" pos:column="26"/></name><index pos:line="184" pos:column="26">[<expr><name pos:line="184" pos:column="27">i<pos:position pos:line="184" pos:column="28"/></name></expr>]<pos:position pos:line="184" pos:column="29"/></index></name></expr></argument>, <argument><expr><operator pos:line="184" pos:column="31">(<pos:position pos:line="184" pos:column="32"/></operator><name pos:line="184" pos:column="32">uint32_t<pos:position pos:line="184" pos:column="40"/></name><operator pos:line="184" pos:column="40">)<pos:position pos:line="184" pos:column="41"/></operator><name pos:line="184" pos:column="41">column_name_length<pos:position pos:line="184" pos:column="59"/></name></expr></argument>)<pos:position pos:line="184" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="61"/></expr_stmt>

    <expr_stmt><expr><name pos:line="186" pos:column="5">status<pos:position pos:line="186" pos:column="11"/></name> <operator pos:line="186" pos:column="12">=<pos:position pos:line="186" pos:column="13"/></operator> <call><name pos:line="186" pos:column="14">OCIDefineByPos<pos:position pos:line="186" pos:column="28"/></name><argument_list pos:line="186" pos:column="28">(<argument><expr><name pos:line="186" pos:column="29">oci_statement<pos:position pos:line="186" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="186" pos:column="44">&amp;<pos:position pos:line="186" pos:column="49"/></operator><name><name pos:line="186" pos:column="45">oci_defines<pos:position pos:line="186" pos:column="56"/></name><index pos:line="186" pos:column="56">[<expr><name pos:line="186" pos:column="57">i<pos:position pos:line="186" pos:column="58"/></name></expr>]<pos:position pos:line="186" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="61">oci_error<pos:position pos:line="186" pos:column="70"/></name></expr></argument>,
                            <argument><expr><call pos:line="187" pos:column="29">(<name pos:line="187" pos:column="30">ub4<pos:position pos:line="187" pos:column="33"/></name>)<argument_list pos:line="187" pos:column="34">(<argument><expr><name pos:line="187" pos:column="35">i<pos:position pos:line="187" pos:column="36"/></name> <operator pos:line="187" pos:column="37">+<pos:position pos:line="187" pos:column="38"/></operator> <literal type="number" pos:line="187" pos:column="39">1<pos:position pos:line="187" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="187" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="43">column_values<pos:position pos:line="187" pos:column="56"/></name><index pos:line="187" pos:column="56">[<expr><name pos:line="187" pos:column="57">i<pos:position pos:line="187" pos:column="58"/></name></expr>]<pos:position pos:line="187" pos:column="59"/></index></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="61">DATA_MAX_NAME_LEN<pos:position pos:line="187" pos:column="78"/></name></expr></argument>,
                            <argument><expr><name pos:line="188" pos:column="29">SQLT_STR<pos:position pos:line="188" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="39">NULL<pos:position pos:line="188" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="45">NULL<pos:position pos:line="188" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="51">NULL<pos:position pos:line="188" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="57">OCI_DEFAULT<pos:position pos:line="188" pos:column="68"/></name></expr></argument>)<pos:position pos:line="188" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="70"/></expr_stmt>
    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><name pos:line="189" pos:column="9">status<pos:position pos:line="189" pos:column="15"/></name> <operator pos:line="189" pos:column="16">!=<pos:position pos:line="189" pos:column="18"/></operator> <name pos:line="189" pos:column="19">OCI_SUCCESS<pos:position pos:line="189" pos:column="30"/></name></expr>)<pos:position pos:line="189" pos:column="31"/></condition><then pos:line="189" pos:column="31"> <block pos:line="189" pos:column="32">{
      <expr_stmt><expr><call><name pos:line="190" pos:column="7">o_report_error<pos:position pos:line="190" pos:column="21"/></name><argument_list pos:line="190" pos:column="21">(<argument><expr><literal type="string" pos:line="190" pos:column="22">"o_read_database_query"<pos:position pos:line="190" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="190" pos:column="47">db<pos:position pos:line="190" pos:column="49"/></name><operator pos:line="190" pos:column="49">-&gt;<pos:position pos:line="190" pos:column="54"/></operator><name pos:line="190" pos:column="51">name<pos:position pos:line="190" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="190" pos:column="57">udb_query_get_name<pos:position pos:line="190" pos:column="75"/></name><argument_list pos:line="190" pos:column="75">(<argument><expr><name pos:line="190" pos:column="76">q<pos:position pos:line="190" pos:column="77"/></name></expr></argument>)<pos:position pos:line="190" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><literal type="string" pos:line="191" pos:column="22">"OCIDefineByPos"<pos:position pos:line="191" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="40">oci_error<pos:position pos:line="191" pos:column="49"/></name></expr></argument>)<pos:position pos:line="191" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="51"/></expr_stmt>
      <continue pos:line="192" pos:column="7">continue;<pos:position pos:line="192" pos:column="16"/></continue>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>
  }<pos:position pos:line="194" pos:column="4"/></block></for> <comment type="block" pos:line="194" pos:column="5">/* for (j = 1; j &lt;= param_counter; j++) */</comment>
  <comment type="block" pos:line="195" pos:column="3">/* }}} End of the ``define'' stuff. */</comment>

  <expr_stmt><expr><name pos:line="197" pos:column="3">status<pos:position pos:line="197" pos:column="9"/></name> <operator pos:line="197" pos:column="10">=<pos:position pos:line="197" pos:column="11"/></operator> <call><name pos:line="197" pos:column="12">udb_query_prepare_result<pos:position pos:line="197" pos:column="36"/></name><argument_list pos:line="197" pos:column="36">(
      <argument><expr><name pos:line="198" pos:column="7">q<pos:position pos:line="198" pos:column="8"/></name></expr></argument>, <argument><expr><name pos:line="198" pos:column="10">prep_area<pos:position pos:line="198" pos:column="19"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="198" pos:column="21">(<pos:position pos:line="198" pos:column="22"/></operator><name><name pos:line="198" pos:column="22">db<pos:position pos:line="198" pos:column="24"/></name><operator pos:line="198" pos:column="24">-&gt;<pos:position pos:line="198" pos:column="29"/></operator><name pos:line="198" pos:column="26">host<pos:position pos:line="198" pos:column="30"/></name></name> <operator pos:line="198" pos:column="31">!=<pos:position pos:line="198" pos:column="33"/></operator> <name pos:line="198" pos:column="34">NULL<pos:position pos:line="198" pos:column="38"/></name><operator pos:line="198" pos:column="38">)<pos:position pos:line="198" pos:column="39"/></operator></expr> ?<pos:position pos:line="198" pos:column="41"/></condition><then pos:line="198" pos:column="41"> <expr><name><name pos:line="198" pos:column="42">db<pos:position pos:line="198" pos:column="44"/></name><operator pos:line="198" pos:column="44">-&gt;<pos:position pos:line="198" pos:column="49"/></operator><name pos:line="198" pos:column="46">host<pos:position pos:line="198" pos:column="50"/></name></name></expr> <pos:position pos:line="198" pos:column="51"/></then><else pos:line="198" pos:column="51">: <expr><name pos:line="198" pos:column="53">hostname_g<pos:position pos:line="198" pos:column="63"/></name></expr></else></ternary></expr></argument>,
      <comment type="block" pos:line="199" pos:column="7">/* plugin = */</comment> <argument><expr><literal type="string" pos:line="199" pos:column="22">"oracle"<pos:position pos:line="199" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="199" pos:column="32">db<pos:position pos:line="199" pos:column="34"/></name><operator pos:line="199" pos:column="34">-&gt;<pos:position pos:line="199" pos:column="39"/></operator><name pos:line="199" pos:column="36">name<pos:position pos:line="199" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="42">column_names<pos:position pos:line="199" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="199" pos:column="56">column_num<pos:position pos:line="199" pos:column="66"/></name></expr></argument>,
      <comment type="block" pos:line="200" pos:column="7">/* interval = */</comment> <argument><expr><literal type="number" pos:line="200" pos:column="24">0<pos:position pos:line="200" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="27"/></expr_stmt>
  <if pos:line="201" pos:column="3">if <condition pos:line="201" pos:column="6">(<expr><name pos:line="201" pos:column="7">status<pos:position pos:line="201" pos:column="13"/></name> <operator pos:line="201" pos:column="14">!=<pos:position pos:line="201" pos:column="16"/></operator> <literal type="number" pos:line="201" pos:column="17">0<pos:position pos:line="201" pos:column="18"/></literal></expr>)<pos:position pos:line="201" pos:column="19"/></condition><then pos:line="201" pos:column="19"> <block pos:line="201" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="202" pos:column="5">ERROR<pos:position pos:line="202" pos:column="10"/></name><argument_list pos:line="202" pos:column="10">(<argument><expr><literal type="string" pos:line="202" pos:column="11">"oracle plugin: o_read_database_query (%s, %s): "<pos:position pos:line="202" pos:column="60"/></literal>
          <literal type="string" pos:line="203" pos:column="11">"udb_query_prepare_result failed."<pos:position pos:line="203" pos:column="45"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="204" pos:column="11">db<pos:position pos:line="204" pos:column="13"/></name><operator pos:line="204" pos:column="13">-&gt;<pos:position pos:line="204" pos:column="18"/></operator><name pos:line="204" pos:column="15">name<pos:position pos:line="204" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="204" pos:column="21">udb_query_get_name<pos:position pos:line="204" pos:column="39"/></name><argument_list pos:line="204" pos:column="39">(<argument><expr><name pos:line="204" pos:column="40">q<pos:position pos:line="204" pos:column="41"/></name></expr></argument>)<pos:position pos:line="204" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="204" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="205" pos:column="5">FREE_ALL<pos:position pos:line="205" pos:column="13"/></name></expr>;<pos:position pos:line="205" pos:column="14"/></expr_stmt>
    <return pos:line="206" pos:column="5">return <expr><operator pos:line="206" pos:column="12">(<pos:position pos:line="206" pos:column="13"/></operator><operator pos:line="206" pos:column="13">-<pos:position pos:line="206" pos:column="14"/></operator><literal type="number" pos:line="206" pos:column="14">1<pos:position pos:line="206" pos:column="15"/></literal><operator pos:line="206" pos:column="15">)<pos:position pos:line="206" pos:column="16"/></operator></expr>;<pos:position pos:line="206" pos:column="17"/></return>
  }<pos:position pos:line="207" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="209" pos:column="3">/* Fetch and handle all the rows that matched the query. */</comment>
  <while pos:line="210" pos:column="3">while <condition pos:line="210" pos:column="9">(<expr><literal type="number" pos:line="210" pos:column="10">42<pos:position pos:line="210" pos:column="12"/></literal></expr>)<pos:position pos:line="210" pos:column="13"/></condition> <comment type="block" pos:line="210" pos:column="14">/* {{{ */</comment>
  <block pos:line="211" pos:column="3">{
    <expr_stmt><expr><name pos:line="212" pos:column="5">status<pos:position pos:line="212" pos:column="11"/></name> <operator pos:line="212" pos:column="12">=<pos:position pos:line="212" pos:column="13"/></operator> <call><name pos:line="212" pos:column="14">OCIStmtFetch2<pos:position pos:line="212" pos:column="27"/></name><argument_list pos:line="212" pos:column="27">(<argument><expr><name pos:line="212" pos:column="28">oci_statement<pos:position pos:line="212" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="212" pos:column="43">oci_error<pos:position pos:line="212" pos:column="52"/></name></expr></argument>,
                           <comment type="block" pos:line="213" pos:column="28">/* nrows = */</comment> <argument><expr><literal type="number" pos:line="213" pos:column="42">1<pos:position pos:line="213" pos:column="43"/></literal></expr></argument>, <comment type="block" pos:line="213" pos:column="45">/* orientation = */</comment> <argument><expr><name pos:line="213" pos:column="65">OCI_FETCH_NEXT<pos:position pos:line="213" pos:column="79"/></name></expr></argument>,
                           <comment type="block" pos:line="214" pos:column="28">/* fetch offset = */</comment> <argument><expr><literal type="number" pos:line="214" pos:column="49">0<pos:position pos:line="214" pos:column="50"/></literal></expr></argument>, <comment type="block" pos:line="214" pos:column="52">/* mode = */</comment> <argument><expr><name pos:line="214" pos:column="65">OCI_DEFAULT<pos:position pos:line="214" pos:column="76"/></name></expr></argument>)<pos:position pos:line="214" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="78"/></expr_stmt>
    <if pos:line="215" pos:column="5">if <condition pos:line="215" pos:column="8">(<expr><name pos:line="215" pos:column="9">status<pos:position pos:line="215" pos:column="15"/></name> <operator pos:line="215" pos:column="16">==<pos:position pos:line="215" pos:column="18"/></operator> <name pos:line="215" pos:column="19">OCI_NO_DATA<pos:position pos:line="215" pos:column="30"/></name></expr>)<pos:position pos:line="215" pos:column="31"/></condition><then pos:line="215" pos:column="31"> <block pos:line="215" pos:column="32">{
      <expr_stmt><expr><name pos:line="216" pos:column="7">status<pos:position pos:line="216" pos:column="13"/></name> <operator pos:line="216" pos:column="14">=<pos:position pos:line="216" pos:column="15"/></operator> <name pos:line="216" pos:column="16">OCI_SUCCESS<pos:position pos:line="216" pos:column="27"/></name></expr>;<pos:position pos:line="216" pos:column="28"/></expr_stmt>
      <break pos:line="217" pos:column="7">break;<pos:position pos:line="217" pos:column="13"/></break>
    }<pos:position pos:line="218" pos:column="6"/></block></then> <elseif pos:line="218" pos:column="7">else <if pos:line="218" pos:column="12">if <condition pos:line="218" pos:column="15">(<expr><operator pos:line="218" pos:column="16">(<pos:position pos:line="218" pos:column="17"/></operator><name pos:line="218" pos:column="17">status<pos:position pos:line="218" pos:column="23"/></name> <operator pos:line="218" pos:column="24">!=<pos:position pos:line="218" pos:column="26"/></operator> <name pos:line="218" pos:column="27">OCI_SUCCESS<pos:position pos:line="218" pos:column="38"/></name><operator pos:line="218" pos:column="38">)<pos:position pos:line="218" pos:column="39"/></operator> <operator pos:line="218" pos:column="40">&amp;&amp;<pos:position pos:line="218" pos:column="50"/></operator> <operator pos:line="218" pos:column="43">(<pos:position pos:line="218" pos:column="44"/></operator><name pos:line="218" pos:column="44">status<pos:position pos:line="218" pos:column="50"/></name> <operator pos:line="218" pos:column="51">!=<pos:position pos:line="218" pos:column="53"/></operator> <name pos:line="218" pos:column="54">OCI_SUCCESS_WITH_INFO<pos:position pos:line="218" pos:column="75"/></name><operator pos:line="218" pos:column="75">)<pos:position pos:line="218" pos:column="76"/></operator></expr>)<pos:position pos:line="218" pos:column="77"/></condition><then pos:line="218" pos:column="77"> <block pos:line="218" pos:column="78">{
      <expr_stmt><expr><call><name pos:line="219" pos:column="7">o_report_error<pos:position pos:line="219" pos:column="21"/></name><argument_list pos:line="219" pos:column="21">(<argument><expr><literal type="string" pos:line="219" pos:column="22">"o_read_database_query"<pos:position pos:line="219" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="219" pos:column="47">db<pos:position pos:line="219" pos:column="49"/></name><operator pos:line="219" pos:column="49">-&gt;<pos:position pos:line="219" pos:column="54"/></operator><name pos:line="219" pos:column="51">name<pos:position pos:line="219" pos:column="55"/></name></name></expr></argument>, <argument><expr><call><name pos:line="219" pos:column="57">udb_query_get_name<pos:position pos:line="219" pos:column="75"/></name><argument_list pos:line="219" pos:column="75">(<argument><expr><name pos:line="219" pos:column="76">q<pos:position pos:line="219" pos:column="77"/></name></expr></argument>)<pos:position pos:line="219" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><literal type="string" pos:line="220" pos:column="22">"OCIStmtFetch2"<pos:position pos:line="220" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="220" pos:column="39">oci_error<pos:position pos:line="220" pos:column="48"/></name></expr></argument>)<pos:position pos:line="220" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="50"/></expr_stmt>
      <break pos:line="221" pos:column="7">break;<pos:position pos:line="221" pos:column="13"/></break>
    }<pos:position pos:line="222" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="224" pos:column="5">status<pos:position pos:line="224" pos:column="11"/></name> <operator pos:line="224" pos:column="12">=<pos:position pos:line="224" pos:column="13"/></operator> <call><name pos:line="224" pos:column="14">udb_query_handle_result<pos:position pos:line="224" pos:column="37"/></name><argument_list pos:line="224" pos:column="37">(<argument><expr><name pos:line="224" pos:column="38">q<pos:position pos:line="224" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="41">prep_area<pos:position pos:line="224" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="52">column_values<pos:position pos:line="224" pos:column="65"/></name></expr></argument>)<pos:position pos:line="224" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="67"/></expr_stmt>
    <if pos:line="225" pos:column="5">if <condition pos:line="225" pos:column="8">(<expr><name pos:line="225" pos:column="9">status<pos:position pos:line="225" pos:column="15"/></name> <operator pos:line="225" pos:column="16">!=<pos:position pos:line="225" pos:column="18"/></operator> <literal type="number" pos:line="225" pos:column="19">0<pos:position pos:line="225" pos:column="20"/></literal></expr>)<pos:position pos:line="225" pos:column="21"/></condition><then pos:line="225" pos:column="21"> <block pos:line="225" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="226" pos:column="7">WARNING<pos:position pos:line="226" pos:column="14"/></name><argument_list pos:line="226" pos:column="14">(<argument><expr><literal type="string" pos:line="226" pos:column="15">"oracle plugin: o_read_database_query (%s, %s): "<pos:position pos:line="226" pos:column="64"/></literal>
              <literal type="string" pos:line="227" pos:column="15">"udb_query_handle_result failed."<pos:position pos:line="227" pos:column="48"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="228" pos:column="15">db<pos:position pos:line="228" pos:column="17"/></name><operator pos:line="228" pos:column="17">-&gt;<pos:position pos:line="228" pos:column="22"/></operator><name pos:line="228" pos:column="19">name<pos:position pos:line="228" pos:column="23"/></name></name></expr></argument>, <argument><expr><call><name pos:line="228" pos:column="25">udb_query_get_name<pos:position pos:line="228" pos:column="43"/></name><argument_list pos:line="228" pos:column="43">(<argument><expr><name pos:line="228" pos:column="44">q<pos:position pos:line="228" pos:column="45"/></name></expr></argument>)<pos:position pos:line="228" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="228" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="229" pos:column="6"/></block></then></if>
  }<pos:position pos:line="230" pos:column="4"/></block></while> <comment type="block" pos:line="230" pos:column="5">/* }}} while (42) */</comment>

  <comment type="block" pos:line="232" pos:column="3">/* DEBUG ("oracle plugin: o_read_database_query: This statement succeeded:
   * %s", q-&gt;statement); */</comment>
  <expr_stmt><expr><name pos:line="234" pos:column="3">FREE_ALL<pos:position pos:line="234" pos:column="11"/></name></expr>;<pos:position pos:line="234" pos:column="12"/></expr_stmt>

  <return pos:line="236" pos:column="3">return <expr><operator pos:line="236" pos:column="10">(<pos:position pos:line="236" pos:column="11"/></operator><literal type="number" pos:line="236" pos:column="11">0<pos:position pos:line="236" pos:column="12"/></literal><operator pos:line="236" pos:column="12">)<pos:position pos:line="236" pos:column="13"/></operator></expr>;<pos:position pos:line="236" pos:column="14"/></return>
<cpp:undef pos:line="237" pos:column="1">#<cpp:directive pos:line="237" pos:column="2">undef<pos:position pos:line="237" pos:column="7"/></cpp:directive> <name pos:line="237" pos:column="8">FREE_ALL<pos:position pos:line="237" pos:column="16"/></name></cpp:undef>
<cpp:undef pos:line="238" pos:column="1">#<cpp:directive pos:line="238" pos:column="2">undef<pos:position pos:line="238" pos:column="7"/></cpp:directive> <name pos:line="238" pos:column="8">ALLOC_OR_FAIL<pos:position pos:line="238" pos:column="21"/></name></cpp:undef>
}<pos:position pos:line="239" pos:column="2"/></block></function></unit>

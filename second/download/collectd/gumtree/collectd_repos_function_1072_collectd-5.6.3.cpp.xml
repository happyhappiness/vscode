<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1072_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">openvpn_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">key<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><literal type="string" pos:line="2" pos:column="18">"StatusFile"<pos:position pos:line="2" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="2" pos:column="32">key<pos:position pos:line="2" pos:column="35"/></name></expr></argument>)<pos:position pos:line="2" pos:column="36"/></argument_list></call> <operator pos:line="2" pos:column="37">==<pos:position pos:line="2" pos:column="39"/></operator> <literal type="number" pos:line="2" pos:column="40">0<pos:position pos:line="2" pos:column="41"/></literal></expr>)<pos:position pos:line="2" pos:column="42"/></condition><then pos:line="2" pos:column="42"> <block pos:line="2" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">status_file<pos:position pos:line="3" pos:column="22"/></name></decl>, <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="25">status_name<pos:position pos:line="3" pos:column="36"/></name></decl>, <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="39">filename<pos:position pos:line="3" pos:column="47"/></name></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">status_version<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">vpn_status_t<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">temp<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <comment type="block" pos:line="7" pos:column="5">/* try to detect the status file format */</comment>
    <expr_stmt><expr><name pos:line="8" pos:column="5">status_version<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <call><name pos:line="8" pos:column="22">version_detect<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">value<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">status_version<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29"> <block pos:line="10" pos:column="30">{
      <expr_stmt><expr><call><name pos:line="11" pos:column="7">WARNING<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><literal type="string" pos:line="11" pos:column="15">"openvpn plugin: unable to detect status version, "<pos:position pos:line="11" pos:column="66"/></literal>
              <literal type="string" pos:line="12" pos:column="15">"discarding status file \"%s\"."<pos:position pos:line="12" pos:column="47"/></literal></expr></argument>,
              <argument><expr><name pos:line="13" pos:column="15">value<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
      <return pos:line="14" pos:column="7">return <expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator></expr>;<pos:position pos:line="14" pos:column="18"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="17" pos:column="5">status_file<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">sstrdup<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">value<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status_file<pos:position pos:line="18" pos:column="20"/></name> <operator pos:line="18" pos:column="21">==<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">NULL<pos:position pos:line="18" pos:column="28"/></name></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block pos:line="18" pos:column="30">{
      <decl_stmt><decl><type><name pos:line="19" pos:column="7">char<pos:position pos:line="19" pos:column="11"/></name></type> <name><name pos:line="19" pos:column="12">errbuf<pos:position pos:line="19" pos:column="18"/></name><index pos:line="19" pos:column="18">[<expr><literal type="number" pos:line="19" pos:column="19">1024<pos:position pos:line="19" pos:column="23"/></literal></expr>]<pos:position pos:line="19" pos:column="24"/></index></name></decl>;<pos:position pos:line="19" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">WARNING<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><literal type="string" pos:line="20" pos:column="15">"openvpn plugin: sstrdup failed: %s"<pos:position pos:line="20" pos:column="51"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="21" pos:column="15">sstrerror<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">errno<pos:position pos:line="21" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="32">errbuf<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="40">sizeof<argument_list pos:line="21" pos:column="46">(<argument><expr><name pos:line="21" pos:column="47">errbuf<pos:position pos:line="21" pos:column="53"/></name></expr></argument>)<pos:position pos:line="21" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><literal type="number" pos:line="22" pos:column="15">1<pos:position pos:line="22" pos:column="16"/></literal><operator pos:line="22" pos:column="16">)<pos:position pos:line="22" pos:column="17"/></operator></expr>;<pos:position pos:line="22" pos:column="18"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* it determines the file name as string starting at location filename + 1
     */</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">filename<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">strrchr<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">status_file<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="37">(<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">int<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator><literal type="char" pos:line="27" pos:column="42">'/'<pos:position pos:line="27" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">filename<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">==<pos:position pos:line="28" pos:column="20"/></operator> <name pos:line="28" pos:column="21">NULL<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26"> <block pos:line="28" pos:column="27">{
      <comment type="block" pos:line="29" pos:column="7">/* status_file is already the file name only */</comment>
      <expr_stmt><expr><name pos:line="30" pos:column="7">status_name<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <name pos:line="30" pos:column="21">status_file<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then> <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
      <comment type="block" pos:line="32" pos:column="7">/* doesn't waste memory, uses status_file starting at filename + 1 */</comment>
      <expr_stmt><expr><name pos:line="33" pos:column="7">status_name<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">filename<pos:position pos:line="33" pos:column="29"/></name> <operator pos:line="33" pos:column="30">+<pos:position pos:line="33" pos:column="31"/></operator> <literal type="number" pos:line="33" pos:column="32">1<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="36" pos:column="5">/* scan the list looking for a clone */</comment>
    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><decl><type><name pos:line="37" pos:column="10">int<pos:position pos:line="37" pos:column="13"/></name></type> <name pos:line="37" pos:column="14">i<pos:position pos:line="37" pos:column="15"/></name> <init pos:line="37" pos:column="16">= <expr><literal type="number" pos:line="37" pos:column="18">0<pos:position pos:line="37" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="20"/></init> <condition><expr><name pos:line="37" pos:column="21">i<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&lt;<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="25">vpn_num<pos:position pos:line="37" pos:column="32"/></name></expr>;<pos:position pos:line="37" pos:column="33"/></condition> <incr><expr><name pos:line="37" pos:column="34">i<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">++<pos:position pos:line="37" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="38"/></control> <block pos:line="37" pos:column="39">{
      <if pos:line="38" pos:column="7">if <condition pos:line="38" pos:column="10">(<expr><call><name pos:line="38" pos:column="11">strcasecmp<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name><name pos:line="38" pos:column="22">vpn_list<pos:position pos:line="38" pos:column="30"/></name><index pos:line="38" pos:column="30">[<expr><name pos:line="38" pos:column="31">i<pos:position pos:line="38" pos:column="32"/></name></expr>]<pos:position pos:line="38" pos:column="33"/></index></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">name<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">status_name<pos:position pos:line="38" pos:column="52"/></name></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call> <operator pos:line="38" pos:column="54">==<pos:position pos:line="38" pos:column="56"/></operator> <literal type="number" pos:line="38" pos:column="57">0<pos:position pos:line="38" pos:column="58"/></literal></expr>)<pos:position pos:line="38" pos:column="59"/></condition><then pos:line="38" pos:column="59"> <block pos:line="38" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">WARNING<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><literal type="string" pos:line="39" pos:column="17">"openvpn plugin: status filename \"%s\" "<pos:position pos:line="39" pos:column="58"/></literal>
                <literal type="string" pos:line="40" pos:column="17">"already used, please choose a "<pos:position pos:line="40" pos:column="49"/></literal>
                <literal type="string" pos:line="41" pos:column="17">"different one."<pos:position pos:line="41" pos:column="33"/></literal></expr></argument>,
                <argument><expr><name pos:line="42" pos:column="17">status_name<pos:position pos:line="42" pos:column="28"/></name></expr></argument>)<pos:position pos:line="42" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">sfree<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name pos:line="43" pos:column="15">status_file<pos:position pos:line="43" pos:column="26"/></name></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">1<pos:position pos:line="44" pos:column="18"/></literal><operator pos:line="44" pos:column="18">)<pos:position pos:line="44" pos:column="19"/></operator></expr>;<pos:position pos:line="44" pos:column="20"/></return>
      }<pos:position pos:line="45" pos:column="8"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></for>

    <comment type="block" pos:line="48" pos:column="5">/* create a new vpn element since file, version and name are ok */</comment>
    <expr_stmt><expr><name pos:line="49" pos:column="5">temp<pos:position pos:line="49" pos:column="9"/></name> <operator pos:line="49" pos:column="10">=<pos:position pos:line="49" pos:column="11"/></operator> <call><name pos:line="49" pos:column="12">malloc<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><sizeof pos:line="49" pos:column="19">sizeof<argument_list pos:line="49" pos:column="25">(<argument><expr><operator pos:line="49" pos:column="26">*<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">temp<pos:position pos:line="49" pos:column="31"/></name></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="34"/></expr_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">temp<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">==<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">NULL<pos:position pos:line="50" pos:column="21"/></name></expr>)<pos:position pos:line="50" pos:column="22"/></condition><then pos:line="50" pos:column="22"> <block pos:line="50" pos:column="23">{
      <decl_stmt><decl><type><name pos:line="51" pos:column="7">char<pos:position pos:line="51" pos:column="11"/></name></type> <name><name pos:line="51" pos:column="12">errbuf<pos:position pos:line="51" pos:column="18"/></name><index pos:line="51" pos:column="18">[<expr><literal type="number" pos:line="51" pos:column="19">1024<pos:position pos:line="51" pos:column="23"/></literal></expr>]<pos:position pos:line="51" pos:column="24"/></index></name></decl>;<pos:position pos:line="51" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">ERROR<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="string" pos:line="52" pos:column="13">"openvpn plugin: malloc failed: %s"<pos:position pos:line="52" pos:column="48"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="53" pos:column="13">sstrerror<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">errno<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="30">errbuf<pos:position pos:line="53" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="38">sizeof<argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">errbuf<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">sfree<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">status_file<pos:position pos:line="54" pos:column="24"/></name></expr></argument>)<pos:position pos:line="54" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="26"/></expr_stmt>
      <return pos:line="55" pos:column="7">return <expr><operator pos:line="55" pos:column="14">(<pos:position pos:line="55" pos:column="15"/></operator><literal type="number" pos:line="55" pos:column="15">1<pos:position pos:line="55" pos:column="16"/></literal><operator pos:line="55" pos:column="16">)<pos:position pos:line="55" pos:column="17"/></operator></expr>;<pos:position pos:line="55" pos:column="18"/></return>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">temp<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">file<pos:position pos:line="57" pos:column="15"/></name></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">status_file<pos:position pos:line="57" pos:column="29"/></name></expr>;<pos:position pos:line="57" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">temp<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">-&gt;<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="11">version<pos:position pos:line="58" pos:column="18"/></name></name> <operator pos:line="58" pos:column="19">=<pos:position pos:line="58" pos:column="20"/></operator> <name pos:line="58" pos:column="21">status_version<pos:position pos:line="58" pos:column="35"/></name></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">temp<pos:position pos:line="59" pos:column="9"/></name><operator pos:line="59" pos:column="9">-&gt;<pos:position pos:line="59" pos:column="14"/></operator><name pos:line="59" pos:column="11">name<pos:position pos:line="59" pos:column="15"/></name></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <name pos:line="59" pos:column="18">status_name<pos:position pos:line="59" pos:column="29"/></name></expr>;<pos:position pos:line="59" pos:column="30"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="61" pos:column="5">vpn_status_t<pos:position pos:line="61" pos:column="17"/></name> <modifier pos:line="61" pos:column="18">*<pos:position pos:line="61" pos:column="19"/></modifier><modifier pos:line="61" pos:column="19">*<pos:position pos:line="61" pos:column="20"/></modifier></type><name pos:line="61" pos:column="20">tmp_list<pos:position pos:line="61" pos:column="28"/></name> <init pos:line="61" pos:column="29">=
        <expr><call><name pos:line="62" pos:column="9">realloc<pos:position pos:line="62" pos:column="16"/></name><argument_list pos:line="62" pos:column="16">(<argument><expr><name pos:line="62" pos:column="17">vpn_list<pos:position pos:line="62" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="27">(<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="28">vpn_num<pos:position pos:line="62" pos:column="35"/></name> <operator pos:line="62" pos:column="36">+<pos:position pos:line="62" pos:column="37"/></operator> <literal type="number" pos:line="62" pos:column="38">1<pos:position pos:line="62" pos:column="39"/></literal><operator pos:line="62" pos:column="39">)<pos:position pos:line="62" pos:column="40"/></operator> <operator pos:line="62" pos:column="41">*<pos:position pos:line="62" pos:column="42"/></operator> <sizeof pos:line="62" pos:column="43">sizeof<argument_list pos:line="62" pos:column="49">(<argument><expr><operator pos:line="62" pos:column="50">*<pos:position pos:line="62" pos:column="51"/></operator><name pos:line="62" pos:column="51">vpn_list<pos:position pos:line="62" pos:column="59"/></name></expr></argument>)<pos:position pos:line="62" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="62" pos:column="62"/></decl_stmt>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">tmp_list<pos:position pos:line="63" pos:column="17"/></name> <operator pos:line="63" pos:column="18">==<pos:position pos:line="63" pos:column="20"/></operator> <name pos:line="63" pos:column="21">NULL<pos:position pos:line="63" pos:column="25"/></name></expr>)<pos:position pos:line="63" pos:column="26"/></condition><then pos:line="63" pos:column="26"> <block pos:line="63" pos:column="27">{
      <decl_stmt><decl><type><name pos:line="64" pos:column="7">char<pos:position pos:line="64" pos:column="11"/></name></type> <name><name pos:line="64" pos:column="12">errbuf<pos:position pos:line="64" pos:column="18"/></name><index pos:line="64" pos:column="18">[<expr><literal type="number" pos:line="64" pos:column="19">1024<pos:position pos:line="64" pos:column="23"/></literal></expr>]<pos:position pos:line="64" pos:column="24"/></index></name></decl>;<pos:position pos:line="64" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="65" pos:column="7">ERROR<pos:position pos:line="65" pos:column="12"/></name><argument_list pos:line="65" pos:column="12">(<argument><expr><literal type="string" pos:line="65" pos:column="13">"openvpn plugin: realloc failed: %s"<pos:position pos:line="65" pos:column="49"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="66" pos:column="13">sstrerror<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name pos:line="66" pos:column="23">errno<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="30">errbuf<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="38">sizeof<argument_list pos:line="66" pos:column="44">(<argument><expr><name pos:line="66" pos:column="45">errbuf<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="68" pos:column="7">sfree<pos:position pos:line="68" pos:column="12"/></name><argument_list pos:line="68" pos:column="12">(<argument><expr><name pos:line="68" pos:column="13">vpn_list<pos:position pos:line="68" pos:column="21"/></name></expr></argument>)<pos:position pos:line="68" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">sfree<pos:position pos:line="69" pos:column="12"/></name><argument_list pos:line="69" pos:column="12">(<argument><expr><name><name pos:line="69" pos:column="13">temp<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">-&gt;<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="19">file<pos:position pos:line="69" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">sfree<pos:position pos:line="70" pos:column="12"/></name><argument_list pos:line="70" pos:column="12">(<argument><expr><name pos:line="70" pos:column="13">temp<pos:position pos:line="70" pos:column="17"/></name></expr></argument>)<pos:position pos:line="70" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="19"/></expr_stmt>
      <return pos:line="71" pos:column="7">return <expr><operator pos:line="71" pos:column="14">(<pos:position pos:line="71" pos:column="15"/></operator><literal type="number" pos:line="71" pos:column="15">1<pos:position pos:line="71" pos:column="16"/></literal><operator pos:line="71" pos:column="16">)<pos:position pos:line="71" pos:column="17"/></operator></expr>;<pos:position pos:line="71" pos:column="18"/></return>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="73" pos:column="5">vpn_list<pos:position pos:line="73" pos:column="13"/></name> <operator pos:line="73" pos:column="14">=<pos:position pos:line="73" pos:column="15"/></operator> <name pos:line="73" pos:column="16">tmp_list<pos:position pos:line="73" pos:column="24"/></name></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="75" pos:column="5">vpn_list<pos:position pos:line="75" pos:column="13"/></name><index pos:line="75" pos:column="13">[<expr><name pos:line="75" pos:column="14">vpn_num<pos:position pos:line="75" pos:column="21"/></name></expr>]<pos:position pos:line="75" pos:column="22"/></index></name> <operator pos:line="75" pos:column="23">=<pos:position pos:line="75" pos:column="24"/></operator> <name pos:line="75" pos:column="25">temp<pos:position pos:line="75" pos:column="29"/></name></expr>;<pos:position pos:line="75" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="76" pos:column="5">vpn_num<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">++<pos:position pos:line="76" pos:column="14"/></operator></expr>;<pos:position pos:line="76" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">DEBUG<pos:position pos:line="78" pos:column="10"/></name><argument_list pos:line="78" pos:column="10">(<argument><expr><literal type="string" pos:line="78" pos:column="11">"openvpn plugin: status file \"%s\" added"<pos:position pos:line="78" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="55">temp<pos:position pos:line="78" pos:column="59"/></name><operator pos:line="78" pos:column="59">-&gt;<pos:position pos:line="78" pos:column="64"/></operator><name pos:line="78" pos:column="61">file<pos:position pos:line="78" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="67"/></expr_stmt>

  }<pos:position pos:line="80" pos:column="4"/></block></then> <comment type="block" pos:line="80" pos:column="5">/* if (strcasecmp ("StatusFile", key) == 0) */</comment>
  <elseif pos:line="81" pos:column="3">else <if pos:line="81" pos:column="8">if <condition pos:line="81" pos:column="11">(<expr><operator pos:line="81" pos:column="12">(<pos:position pos:line="81" pos:column="13"/></operator><call><name pos:line="81" pos:column="13">strcasecmp<pos:position pos:line="81" pos:column="23"/></name><argument_list pos:line="81" pos:column="23">(<argument><expr><literal type="string" pos:line="81" pos:column="24">"CollectCompression"<pos:position pos:line="81" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="46">key<pos:position pos:line="81" pos:column="49"/></name></expr></argument>)<pos:position pos:line="81" pos:column="50"/></argument_list></call> <operator pos:line="81" pos:column="51">==<pos:position pos:line="81" pos:column="53"/></operator> <literal type="number" pos:line="81" pos:column="54">0<pos:position pos:line="81" pos:column="55"/></literal><operator pos:line="81" pos:column="55">)<pos:position pos:line="81" pos:column="56"/></operator> <operator pos:line="81" pos:column="57">||<pos:position pos:line="81" pos:column="59"/></operator>
           <operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><call><name pos:line="82" pos:column="13">strcasecmp<pos:position pos:line="82" pos:column="23"/></name><argument_list pos:line="82" pos:column="23">(<argument><expr><literal type="string" pos:line="82" pos:column="24">"Compression"<pos:position pos:line="82" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="39">key<pos:position pos:line="82" pos:column="42"/></name></expr></argument>)<pos:position pos:line="82" pos:column="43"/></argument_list></call> <operator pos:line="82" pos:column="44">==<pos:position pos:line="82" pos:column="46"/></operator> <literal type="number" pos:line="82" pos:column="47">0<pos:position pos:line="82" pos:column="48"/></literal><operator pos:line="82" pos:column="48">)<pos:position pos:line="82" pos:column="49"/></operator></expr>)<pos:position pos:line="82" pos:column="50"/></condition><then pos:line="82" pos:column="50"> <comment type="block" pos:line="82" pos:column="51">/* old, deprecated name */</comment>
  <block pos:line="83" pos:column="3">{
    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><call><name pos:line="84" pos:column="9">IS_FALSE<pos:position pos:line="84" pos:column="17"/></name><argument_list pos:line="84" pos:column="17">(<argument><expr><name pos:line="84" pos:column="18">value<pos:position pos:line="84" pos:column="23"/></name></expr></argument>)<pos:position pos:line="84" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="84" pos:column="25"/></condition><then pos:line="84" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="85" pos:column="7">collect_compression<pos:position pos:line="85" pos:column="26"/></name> <operator pos:line="85" pos:column="27">=<pos:position pos:line="85" pos:column="28"/></operator> <literal type="number" pos:line="85" pos:column="29">0<pos:position pos:line="85" pos:column="30"/></literal></expr>;<pos:position pos:line="85" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="86" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="87" pos:column="7">collect_compression<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <literal type="number" pos:line="87" pos:column="29">1<pos:position pos:line="87" pos:column="30"/></literal></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt></block></else></if>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if></elseif> <comment type="block" pos:line="88" pos:column="5">/* if (strcasecmp ("CollectCompression", key) == 0) */</comment>
  <elseif pos:line="89" pos:column="3">else <if pos:line="89" pos:column="8">if <condition pos:line="89" pos:column="11">(<expr><call><name pos:line="89" pos:column="12">strcasecmp<pos:position pos:line="89" pos:column="22"/></name><argument_list pos:line="89" pos:column="22">(<argument><expr><literal type="string" pos:line="89" pos:column="23">"ImprovedNamingSchema"<pos:position pos:line="89" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="47">key<pos:position pos:line="89" pos:column="50"/></name></expr></argument>)<pos:position pos:line="89" pos:column="51"/></argument_list></call> <operator pos:line="89" pos:column="52">==<pos:position pos:line="89" pos:column="54"/></operator> <literal type="number" pos:line="89" pos:column="55">0<pos:position pos:line="89" pos:column="56"/></literal></expr>)<pos:position pos:line="89" pos:column="57"/></condition><then pos:line="89" pos:column="57"> <block pos:line="89" pos:column="58">{
    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><call><name pos:line="90" pos:column="9">IS_TRUE<pos:position pos:line="90" pos:column="16"/></name><argument_list pos:line="90" pos:column="16">(<argument><expr><name pos:line="90" pos:column="17">value<pos:position pos:line="90" pos:column="22"/></name></expr></argument>)<pos:position pos:line="90" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="24"/></condition><then pos:line="90" pos:column="24"> <block pos:line="90" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="91" pos:column="7">DEBUG<pos:position pos:line="91" pos:column="12"/></name><argument_list pos:line="91" pos:column="12">(<argument><expr><literal type="string" pos:line="91" pos:column="13">"openvpn plugin: using the new naming schema"<pos:position pos:line="91" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><name pos:line="92" pos:column="7">new_naming_schema<pos:position pos:line="92" pos:column="24"/></name> <operator pos:line="92" pos:column="25">=<pos:position pos:line="92" pos:column="26"/></operator> <literal type="number" pos:line="92" pos:column="27">1<pos:position pos:line="92" pos:column="28"/></literal></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></then> <else pos:line="93" pos:column="7">else <block pos:line="93" pos:column="12">{
      <expr_stmt><expr><name pos:line="94" pos:column="7">new_naming_schema<pos:position pos:line="94" pos:column="24"/></name> <operator pos:line="94" pos:column="25">=<pos:position pos:line="94" pos:column="26"/></operator> <literal type="number" pos:line="94" pos:column="27">0<pos:position pos:line="94" pos:column="28"/></literal></expr>;<pos:position pos:line="94" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></else></if>
  }<pos:position pos:line="96" pos:column="4"/></block></then></if></elseif> <comment type="block" pos:line="96" pos:column="5">/* if (strcasecmp ("ImprovedNamingSchema", key) == 0) */</comment>
  <elseif pos:line="97" pos:column="3">else <if pos:line="97" pos:column="8">if <condition pos:line="97" pos:column="11">(<expr><call><name pos:line="97" pos:column="12">strcasecmp<pos:position pos:line="97" pos:column="22"/></name><argument_list pos:line="97" pos:column="22">(<argument><expr><literal type="string" pos:line="97" pos:column="23">"CollectUserCount"<pos:position pos:line="97" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="97" pos:column="43">key<pos:position pos:line="97" pos:column="46"/></name></expr></argument>)<pos:position pos:line="97" pos:column="47"/></argument_list></call> <operator pos:line="97" pos:column="48">==<pos:position pos:line="97" pos:column="50"/></operator> <literal type="number" pos:line="97" pos:column="51">0<pos:position pos:line="97" pos:column="52"/></literal></expr>)<pos:position pos:line="97" pos:column="53"/></condition><then pos:line="97" pos:column="53"> <block pos:line="97" pos:column="54">{
    <if pos:line="98" pos:column="5">if <condition pos:line="98" pos:column="8">(<expr><call><name pos:line="98" pos:column="9">IS_TRUE<pos:position pos:line="98" pos:column="16"/></name><argument_list pos:line="98" pos:column="16">(<argument><expr><name pos:line="98" pos:column="17">value<pos:position pos:line="98" pos:column="22"/></name></expr></argument>)<pos:position pos:line="98" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="24"/></condition><then pos:line="98" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="7">collect_user_count<pos:position pos:line="99" pos:column="25"/></name> <operator pos:line="99" pos:column="26">=<pos:position pos:line="99" pos:column="27"/></operator> <literal type="number" pos:line="99" pos:column="28">1<pos:position pos:line="99" pos:column="29"/></literal></expr>;<pos:position pos:line="99" pos:column="30"/></expr_stmt></block></then>
    <else pos:line="100" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="7">collect_user_count<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">=<pos:position pos:line="101" pos:column="27"/></operator> <literal type="number" pos:line="101" pos:column="28">0<pos:position pos:line="101" pos:column="29"/></literal></expr>;<pos:position pos:line="101" pos:column="30"/></expr_stmt></block></else></if>
  }<pos:position pos:line="102" pos:column="4"/></block></then></if></elseif> <comment type="block" pos:line="102" pos:column="5">/* if (strcasecmp("CollectUserCount", key) == 0) */</comment>
  <elseif pos:line="103" pos:column="3">else <if pos:line="103" pos:column="8">if <condition pos:line="103" pos:column="11">(<expr><call><name pos:line="103" pos:column="12">strcasecmp<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><literal type="string" pos:line="103" pos:column="23">"CollectIndividualUsers"<pos:position pos:line="103" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="49">key<pos:position pos:line="103" pos:column="52"/></name></expr></argument>)<pos:position pos:line="103" pos:column="53"/></argument_list></call> <operator pos:line="103" pos:column="54">==<pos:position pos:line="103" pos:column="56"/></operator> <literal type="number" pos:line="103" pos:column="57">0<pos:position pos:line="103" pos:column="58"/></literal></expr>)<pos:position pos:line="103" pos:column="59"/></condition><then pos:line="103" pos:column="59"> <block pos:line="103" pos:column="60">{
    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><call><name pos:line="104" pos:column="9">IS_FALSE<pos:position pos:line="104" pos:column="17"/></name><argument_list pos:line="104" pos:column="17">(<argument><expr><name pos:line="104" pos:column="18">value<pos:position pos:line="104" pos:column="23"/></name></expr></argument>)<pos:position pos:line="104" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="104" pos:column="25"/></condition><then pos:line="104" pos:column="25">
      <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="7">collect_individual_users<pos:position pos:line="105" pos:column="31"/></name> <operator pos:line="105" pos:column="32">=<pos:position pos:line="105" pos:column="33"/></operator> <literal type="number" pos:line="105" pos:column="34">0<pos:position pos:line="105" pos:column="35"/></literal></expr>;<pos:position pos:line="105" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="106" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="107" pos:column="7">collect_individual_users<pos:position pos:line="107" pos:column="31"/></name> <operator pos:line="107" pos:column="32">=<pos:position pos:line="107" pos:column="33"/></operator> <literal type="number" pos:line="107" pos:column="34">1<pos:position pos:line="107" pos:column="35"/></literal></expr>;<pos:position pos:line="107" pos:column="36"/></expr_stmt></block></else></if>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if></elseif> <comment type="block" pos:line="108" pos:column="5">/* if (strcasecmp("CollectIndividualUsers", key) == 0) */</comment>
  <else pos:line="109" pos:column="3">else <block pos:line="109" pos:column="8">{
    <return pos:line="110" pos:column="5">return <expr><operator pos:line="110" pos:column="12">(<pos:position pos:line="110" pos:column="13"/></operator><operator pos:line="110" pos:column="13">-<pos:position pos:line="110" pos:column="14"/></operator><literal type="number" pos:line="110" pos:column="14">1<pos:position pos:line="110" pos:column="15"/></literal><operator pos:line="110" pos:column="15">)<pos:position pos:line="110" pos:column="16"/></operator></expr>;<pos:position pos:line="110" pos:column="17"/></return>
  }<pos:position pos:line="111" pos:column="4"/></block></else></if>

  <return pos:line="113" pos:column="3">return <expr><operator pos:line="113" pos:column="10">(<pos:position pos:line="113" pos:column="11"/></operator><literal type="number" pos:line="113" pos:column="11">0<pos:position pos:line="113" pos:column="12"/></literal><operator pos:line="113" pos:column="12">)<pos:position pos:line="113" pos:column="13"/></operator></expr>;<pos:position pos:line="113" pos:column="14"/></return>
}<pos:position pos:line="114" pos:column="2"/></block></function></unit>

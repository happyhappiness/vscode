<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2045_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_send_buffer<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">wg_callback<pos:position pos:line="1" pos:column="46"/></name></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">cb<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ssize_t<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">status<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">cb<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">-&gt;<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="13">sock_fd<pos:position pos:line="5" pos:column="20"/></name></name> <operator pos:line="5" pos:column="21">&lt;<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><operator pos:line="6" pos:column="17">-<pos:position pos:line="6" pos:column="18"/></operator><literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="8" pos:column="5">status<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">swrite<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><name><name pos:line="8" pos:column="22">cb<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">-&gt;<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="26">sock_fd<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="35">cb<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">-&gt;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="39">send_buf<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="49">strlen<pos:position pos:line="8" pos:column="55"/></name> <argument_list pos:line="8" pos:column="56">(<argument><expr><name><name pos:line="8" pos:column="57">cb<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">-&gt;<pos:position pos:line="8" pos:column="64"/></operator><name pos:line="8" pos:column="61">send_buf<pos:position pos:line="8" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">status<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">!=<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21">
    <block pos:line="10" pos:column="5">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">cb<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">log_send_errors<pos:position pos:line="11" pos:column="32"/></name></name></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
        <block pos:line="12" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="13" pos:column="13">char<pos:position pos:line="13" pos:column="17"/></name></type> <name><name pos:line="13" pos:column="18">errbuf<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><literal type="number" pos:line="13" pos:column="25">1024<pos:position pos:line="13" pos:column="29"/></literal></expr>]<pos:position pos:line="13" pos:column="30"/></index></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">ERROR<pos:position pos:line="14" pos:column="18"/></name> <argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="string" pos:line="14" pos:column="20">"write_graphite plugin: send to %s:%s (%s) failed with status %zi (%s)"<pos:position pos:line="14" pos:column="91"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="15" pos:column="21">cb<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">node<pos:position pos:line="15" pos:column="29"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="31">cb<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">service<pos:position pos:line="15" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="44">cb<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">protocol<pos:position pos:line="15" pos:column="56"/></name></name></expr></argument>,
                    <argument><expr><name pos:line="16" pos:column="21">status<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="29">sstrerror<pos:position pos:line="16" pos:column="38"/></name> <argument_list pos:line="16" pos:column="39">(<argument><expr><name pos:line="16" pos:column="40">errno<pos:position pos:line="16" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">errbuf<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="55">sizeof <argument_list pos:line="16" pos:column="62">(<argument><expr><name pos:line="16" pos:column="63">errbuf<pos:position pos:line="16" pos:column="69"/></name></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="19" pos:column="9">close<pos:position pos:line="19" pos:column="14"/></name> <argument_list pos:line="19" pos:column="15">(<argument><expr><name><name pos:line="19" pos:column="16">cb<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">sock_fd<pos:position pos:line="19" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">cb<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">sock_fd<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <operator pos:line="20" pos:column="23">-<pos:position pos:line="20" pos:column="24"/></operator><literal type="number" pos:line="20" pos:column="24">1<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>

        <return pos:line="22" pos:column="9">return <expr><operator pos:line="22" pos:column="16">(<pos:position pos:line="22" pos:column="17"/></operator><operator pos:line="22" pos:column="17">-<pos:position pos:line="22" pos:column="18"/></operator><literal type="number" pos:line="22" pos:column="18">1<pos:position pos:line="22" pos:column="19"/></literal><operator pos:line="22" pos:column="19">)<pos:position pos:line="22" pos:column="20"/></operator></expr>;<pos:position pos:line="22" pos:column="21"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">0<pos:position pos:line="25" pos:column="14"/></literal><operator pos:line="25" pos:column="14">)<pos:position pos:line="25" pos:column="15"/></operator></expr>;<pos:position pos:line="25" pos:column="16"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

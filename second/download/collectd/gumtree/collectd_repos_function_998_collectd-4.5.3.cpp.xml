<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_998_collectd-4.5.3.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">TC_FIRST_CHAIN<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">TC_HANDLE_T<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">handle<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">chain_head<pos:position pos:line="4" pos:column="26"/></name></name> <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier></type><name pos:line="4" pos:column="28">c<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><call><name pos:line="4" pos:column="32">list_entry<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><name><operator pos:line="4" pos:column="43">(<pos:position pos:line="4" pos:column="44"/></operator><operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">handle<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator><operator pos:line="4" pos:column="52">-&gt;<pos:position pos:line="4" pos:column="57"/></operator><name><name pos:line="4" pos:column="54">chains<pos:position pos:line="4" pos:column="60"/></name><operator pos:line="4" pos:column="60">.<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="61">next<pos:position pos:line="4" pos:column="65"/></name></name></name></expr></argument>,
					  <argument><expr pos:line="5" pos:column="43">struct <name pos:line="5" pos:column="50">chain_head<pos:position pos:line="5" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="62">list<pos:position pos:line="5" pos:column="66"/></name></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="68"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">iptc_fn<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">TC_FIRST_CHAIN<pos:position pos:line="7" pos:column="33"/></name></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>


	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">list_empty<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name><operator pos:line="10" pos:column="25">(<pos:position pos:line="10" pos:column="26"/></operator><operator pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">handle<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">)<pos:position pos:line="10" pos:column="34"/></operator><operator pos:line="10" pos:column="34">-&gt;<pos:position pos:line="10" pos:column="39"/></operator><name pos:line="10" pos:column="36">chains<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44"> <block pos:line="10" pos:column="45">{
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">DEBUGP<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">": no chains\n"<pos:position pos:line="11" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">handle<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">)<pos:position pos:line="15" pos:column="18"/></operator><operator pos:line="15" pos:column="18">-&gt;<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="20">chain_iterator_cur<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">=<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="41">c<pos:position pos:line="15" pos:column="42"/></name></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">iptcc_chain_iterator_advance<pos:position pos:line="16" pos:column="37"/></name><argument_list pos:line="16" pos:column="37">(<argument><expr><operator pos:line="16" pos:column="38">*<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="39">handle<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">DEBUGP<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">": returning `%s'\n"<pos:position pos:line="18" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="38">c<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">-&gt;<pos:position pos:line="18" pos:column="44"/></operator><name pos:line="18" pos:column="41">name<pos:position pos:line="18" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
	<return pos:line="19" pos:column="9">return <expr><name><name pos:line="19" pos:column="16">c<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">-&gt;<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="19">name<pos:position pos:line="19" pos:column="23"/></name></name></expr>;<pos:position pos:line="19" pos:column="24"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

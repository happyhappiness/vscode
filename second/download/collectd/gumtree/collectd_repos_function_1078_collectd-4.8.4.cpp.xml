<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1078_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_value_list_to_string<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">buffer<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
                <parameter><decl><type><name pos:line="2" pos:column="17">size_t<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">buffer_size<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>,
                <parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">data_set_t<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="35">ds<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="39">const<pos:position pos:line="3" pos:column="44"/></specifier> <name pos:line="3" pos:column="45">value_list_t<pos:position pos:line="3" pos:column="57"/></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">vl<pos:position pos:line="3" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="62"/></parameter_list>
<block pos:line="4" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">size_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">offset<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">i<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><literal type="number" pos:line="9" pos:column="17">0<pos:position pos:line="9" pos:column="18"/></literal> <operator pos:line="9" pos:column="19">==<pos:position pos:line="9" pos:column="21"/></operator> <call><name pos:line="9" pos:column="22">strcmp<pos:position pos:line="9" pos:column="28"/></name> <argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">ds<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">type<pos:position pos:line="9" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="40">vl<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">type<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">buffer<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">buffer_size<pos:position pos:line="11" pos:column="39"/></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>

<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define<pos:position pos:line="13" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">BUFFER_ADD<pos:position pos:line="13" pos:column="19"/></name><parameter_list pos:line="13" pos:column="19">(<parameter><type><modifier pos:line="13" pos:column="20">...<pos:position pos:line="13" pos:column="23"/></modifier></type></parameter>)<pos:position pos:line="13" pos:column="24"/></parameter_list></cpp:macro> <cpp:value pos:line="13" pos:column="25">do { \
        status = ssnprintf (buffer + offset, buffer_size - offset, \
                        __VA_ARGS__); \
        if (status &lt; 1) \
                return (-1); \
        else if (((size_t) status) &gt;= (buffer_size - offset)) \
                return (-1); \
        else \
                offset += ((size_t) status); \
} while (0)<pos:position pos:line="22" pos:column="12"/></cpp:value></cpp:define>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">BUFFER_ADD<pos:position pos:line="24" pos:column="19"/></name> <argument_list pos:line="24" pos:column="20">(<argument><expr><literal type="string" pos:line="24" pos:column="21">"%lu"<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="28">(<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">unsigned<pos:position pos:line="24" pos:column="37"/></name> <name pos:line="24" pos:column="38">long<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">)<pos:position pos:line="24" pos:column="43"/></operator> <name><name pos:line="24" pos:column="44">vl<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">-&gt;<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="48">time<pos:position pos:line="24" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>

        <for pos:line="26" pos:column="9">for <control pos:line="26" pos:column="13">(<init><expr><name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name pos:line="26" pos:column="21">i<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <name><name pos:line="26" pos:column="25">ds<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">ds_num<pos:position pos:line="26" pos:column="35"/></name></name></expr>;<pos:position pos:line="26" pos:column="36"/></condition> <incr><expr><name pos:line="26" pos:column="37">i<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">++<pos:position pos:line="26" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="41"/></control>
<block pos:line="27" pos:column="1">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">ds<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">ds<pos:position pos:line="28" pos:column="19"/></name><index pos:line="28" pos:column="19">[<expr><name pos:line="28" pos:column="20">i<pos:position pos:line="28" pos:column="21"/></name></expr>]<pos:position pos:line="28" pos:column="22"/></index></name><operator pos:line="28" pos:column="22">.<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="23">type<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">==<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">DS_TYPE_GAUGE<pos:position pos:line="28" pos:column="44"/></name></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="17">BUFFER_ADD<pos:position pos:line="29" pos:column="27"/></name> <argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">":%f"<pos:position pos:line="29" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="36">vl<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">values<pos:position pos:line="29" pos:column="46"/></name><index pos:line="29" pos:column="46">[<expr><name pos:line="29" pos:column="47">i<pos:position pos:line="29" pos:column="48"/></name></expr>]<pos:position pos:line="29" pos:column="49"/></index></name><operator pos:line="29" pos:column="49">.<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">gauge<pos:position pos:line="29" pos:column="55"/></name></expr></argument>)<pos:position pos:line="29" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="57"/></expr_stmt></block></then>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if <condition pos:line="30" pos:column="17">(<expr><name><name pos:line="30" pos:column="18">ds<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">ds<pos:position pos:line="30" pos:column="24"/></name><index pos:line="30" pos:column="24">[<expr><name pos:line="30" pos:column="25">i<pos:position pos:line="30" pos:column="26"/></name></expr>]<pos:position pos:line="30" pos:column="27"/></index></name><operator pos:line="30" pos:column="27">.<pos:position pos:line="30" pos:column="28"/></operator><name pos:line="30" pos:column="28">type<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">==<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">DS_TYPE_COUNTER<pos:position pos:line="30" pos:column="51"/></name></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">BUFFER_ADD<pos:position pos:line="31" pos:column="27"/></name> <argument_list pos:line="31" pos:column="28">(<argument><expr><literal type="string" pos:line="31" pos:column="29">":%llu"<pos:position pos:line="31" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="38">vl<pos:position pos:line="31" pos:column="40"/></name><operator pos:line="31" pos:column="40">-&gt;<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="42">values<pos:position pos:line="31" pos:column="48"/></name><index pos:line="31" pos:column="48">[<expr><name pos:line="31" pos:column="49">i<pos:position pos:line="31" pos:column="50"/></name></expr>]<pos:position pos:line="31" pos:column="51"/></index></name><operator pos:line="31" pos:column="51">.<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">counter<pos:position pos:line="31" pos:column="59"/></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="32" pos:column="9">else <if pos:line="32" pos:column="14">if <condition pos:line="32" pos:column="17">(<expr><name><name pos:line="32" pos:column="18">ds<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">ds<pos:position pos:line="32" pos:column="24"/></name><index pos:line="32" pos:column="24">[<expr><name pos:line="32" pos:column="25">i<pos:position pos:line="32" pos:column="26"/></name></expr>]<pos:position pos:line="32" pos:column="27"/></index></name><operator pos:line="32" pos:column="27">.<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="28">type<pos:position pos:line="32" pos:column="32"/></name> <operator pos:line="32" pos:column="33">==<pos:position pos:line="32" pos:column="35"/></operator> <name pos:line="32" pos:column="36">DS_TYPE_DERIVE<pos:position pos:line="32" pos:column="50"/></name></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="17">BUFFER_ADD<pos:position pos:line="33" pos:column="27"/></name> <argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">":%"<pos:position pos:line="33" pos:column="33"/></literal><name pos:line="33" pos:column="33">PRIi64<pos:position pos:line="33" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="41">vl<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">values<pos:position pos:line="33" pos:column="51"/></name><index pos:line="33" pos:column="51">[<expr><name pos:line="33" pos:column="52">i<pos:position pos:line="33" pos:column="53"/></name></expr>]<pos:position pos:line="33" pos:column="54"/></index></name><operator pos:line="33" pos:column="54">.<pos:position pos:line="33" pos:column="55"/></operator><name pos:line="33" pos:column="55">derive<pos:position pos:line="33" pos:column="61"/></name></expr></argument>)<pos:position pos:line="33" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="34" pos:column="9">else <if pos:line="34" pos:column="14">if <condition pos:line="34" pos:column="17">(<expr><name><name pos:line="34" pos:column="18">ds<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">ds<pos:position pos:line="34" pos:column="24"/></name><index pos:line="34" pos:column="24">[<expr><name pos:line="34" pos:column="25">i<pos:position pos:line="34" pos:column="26"/></name></expr>]<pos:position pos:line="34" pos:column="27"/></index></name><operator pos:line="34" pos:column="27">.<pos:position pos:line="34" pos:column="28"/></operator><name pos:line="34" pos:column="28">type<pos:position pos:line="34" pos:column="32"/></name> <operator pos:line="34" pos:column="33">==<pos:position pos:line="34" pos:column="35"/></operator> <name pos:line="34" pos:column="36">DS_TYPE_ABSOLUTE<pos:position pos:line="34" pos:column="52"/></name></expr>)<pos:position pos:line="34" pos:column="53"/></condition><then pos:line="34" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="17">BUFFER_ADD<pos:position pos:line="35" pos:column="27"/></name> <argument_list pos:line="35" pos:column="28">(<argument><expr><literal type="string" pos:line="35" pos:column="29">":%"<pos:position pos:line="35" pos:column="33"/></literal><name pos:line="35" pos:column="33">PRIu64<pos:position pos:line="35" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="41">vl<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">values<pos:position pos:line="35" pos:column="51"/></name><index pos:line="35" pos:column="51">[<expr><name pos:line="35" pos:column="52">i<pos:position pos:line="35" pos:column="53"/></name></expr>]<pos:position pos:line="35" pos:column="54"/></index></name><operator pos:line="35" pos:column="54">.<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="55">absolute<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt></block></then></if></elseif>
        <else pos:line="36" pos:column="9">else
        <block pos:line="37" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">ERROR<pos:position pos:line="38" pos:column="22"/></name> <argument_list pos:line="38" pos:column="23">(<argument><expr><literal type="string" pos:line="38" pos:column="24">"write_http plugin: Unknown data source type: %i"<pos:position pos:line="38" pos:column="73"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="39" pos:column="33">ds<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">ds<pos:position pos:line="39" pos:column="39"/></name><index pos:line="39" pos:column="39">[<expr><name pos:line="39" pos:column="40">i<pos:position pos:line="39" pos:column="41"/></name></expr>]<pos:position pos:line="39" pos:column="42"/></index></name><operator pos:line="39" pos:column="42">.<pos:position pos:line="39" pos:column="43"/></operator><name pos:line="39" pos:column="43">type<pos:position pos:line="39" pos:column="47"/></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="49"/></expr_stmt>
                <return pos:line="40" pos:column="17">return <expr><operator pos:line="40" pos:column="24">(<pos:position pos:line="40" pos:column="25"/></operator><operator pos:line="40" pos:column="25">-<pos:position pos:line="40" pos:column="26"/></operator><literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal><operator pos:line="40" pos:column="27">)<pos:position pos:line="40" pos:column="28"/></operator></expr>;<pos:position pos:line="40" pos:column="29"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></else></if>
}<pos:position pos:line="42" pos:column="2"/></block></for> <comment type="block" pos:line="42" pos:column="3">/* for ds-&gt;ds_num */</comment>

<cpp:undef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">undef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">BUFFER_ADD<pos:position pos:line="44" pos:column="18"/></name></cpp:undef>

<return pos:line="46" pos:column="1">return <expr><operator pos:line="46" pos:column="8">(<pos:position pos:line="46" pos:column="9"/></operator><literal type="number" pos:line="46" pos:column="9">0<pos:position pos:line="46" pos:column="10"/></literal><operator pos:line="46" pos:column="10">)<pos:position pos:line="46" pos:column="11"/></operator></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

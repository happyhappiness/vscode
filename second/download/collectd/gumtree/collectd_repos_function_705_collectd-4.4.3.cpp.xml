<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_705_collectd-4.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_option<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">value_list_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">vl<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="44">char<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">buffer<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">option<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><name pos:line="3" pos:column="24">buffer<pos:position pos:line="3" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">value<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">vl<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">==<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">)<pos:position pos:line="6" pos:column="25"/></operator> <operator pos:line="6" pos:column="26">||<pos:position pos:line="6" pos:column="28"/></operator> <operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">option<pos:position pos:line="6" pos:column="36"/></name> <operator pos:line="6" pos:column="37">==<pos:position pos:line="6" pos:column="39"/></operator> <name pos:line="6" pos:column="40">NULL<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">)<pos:position pos:line="6" pos:column="45"/></operator></expr>)<pos:position pos:line="6" pos:column="46"/></condition><then pos:line="6" pos:column="46">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator><literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">value<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">strchr<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">option<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="33">'='<pos:position pos:line="9" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">value<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">==<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>
	<expr_stmt><expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">value<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <literal type="char" pos:line="12" pos:column="18">'\0'<pos:position pos:line="12" pos:column="22"/></literal></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt> <expr_stmt><expr><name pos:line="12" pos:column="24">value<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">++<pos:position pos:line="12" pos:column="31"/></operator></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><call><name pos:line="14" pos:column="13">strcasecmp<pos:position pos:line="14" pos:column="23"/></name> <argument_list pos:line="14" pos:column="24">(<argument><expr><literal type="string" pos:line="14" pos:column="25">"interval"<pos:position pos:line="14" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="37">option<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call> <operator pos:line="14" pos:column="45">==<pos:position pos:line="14" pos:column="47"/></operator> <literal type="number" pos:line="14" pos:column="48">0<pos:position pos:line="14" pos:column="49"/></literal></expr>)<pos:position pos:line="14" pos:column="50"/></condition><then pos:line="14" pos:column="50">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="16" pos:column="17">vl<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">-&gt;<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="21">interval<pos:position pos:line="16" pos:column="29"/></name></name> <operator pos:line="16" pos:column="30">=<pos:position pos:line="16" pos:column="31"/></operator> <call><name pos:line="16" pos:column="32">atoi<pos:position pos:line="16" pos:column="36"/></name> <argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">value<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">vl<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">interval<pos:position pos:line="17" pos:column="33"/></name></name> <operator pos:line="17" pos:column="34">&lt;=<pos:position pos:line="17" pos:column="39"/></operator> <literal type="number" pos:line="17" pos:column="37">0<pos:position pos:line="17" pos:column="38"/></literal></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="18" pos:column="25">vl<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">interval<pos:position pos:line="18" pos:column="37"/></name></name> <operator pos:line="18" pos:column="38">=<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="40">interval_g<pos:position pos:line="18" pos:column="50"/></name></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt></block></then></if>
	}<pos:position pos:line="19" pos:column="10"/></block></then>
	<else pos:line="20" pos:column="9">else
		<block type="pseudo"><return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal><operator pos:line="21" pos:column="26">)<pos:position pos:line="21" pos:column="27"/></operator></expr>;<pos:position pos:line="21" pos:column="28"/></return></block></else></if>

	<return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator></expr>;<pos:position pos:line="23" pos:column="20"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

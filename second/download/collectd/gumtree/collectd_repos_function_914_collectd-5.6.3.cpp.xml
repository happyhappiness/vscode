<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_914_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">powerdns_update_recursor_command<pos:position pos:line="1" pos:column="44"/></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">list_item_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">li<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">4096<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">li<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">==<pos:position pos:line="6" pos:column="12"/></operator> <name pos:line="6" pos:column="13">NULL<pos:position pos:line="6" pos:column="17"/></name></expr>)<pos:position pos:line="6" pos:column="18"/></condition><then pos:line="6" pos:column="18">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name><name pos:line="9" pos:column="7">li<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">fields_num<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">&lt;<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">sstrncpy<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">buffer<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="22">RECURSOR_COMMAND<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="40">sizeof<argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">buffer<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
  }<pos:position pos:line="11" pos:column="4"/></block></then> <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sstrncpy<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">buffer<pos:position pos:line="12" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="22">"get "<pos:position pos:line="12" pos:column="28"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="30">sizeof<argument_list pos:line="12" pos:column="36">(<argument><expr><name pos:line="12" pos:column="37">buffer<pos:position pos:line="12" pos:column="43"/></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">status<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">strjoin<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><operator pos:line="13" pos:column="22">&amp;<pos:position pos:line="13" pos:column="27"/></operator><name><name pos:line="13" pos:column="23">buffer<pos:position pos:line="13" pos:column="29"/></name><index pos:line="13" pos:column="29">[<expr><call><name pos:line="13" pos:column="30">strlen<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><literal type="string" pos:line="13" pos:column="37">"get "<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>]<pos:position pos:line="13" pos:column="45"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="47">sizeof<argument_list pos:line="13" pos:column="53">(<argument><expr><name pos:line="13" pos:column="54">buffer<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></sizeof> <operator pos:line="13" pos:column="62">-<pos:position pos:line="13" pos:column="63"/></operator> <call><name pos:line="13" pos:column="64">strlen<pos:position pos:line="13" pos:column="70"/></name><argument_list pos:line="13" pos:column="70">(<argument><expr><literal type="string" pos:line="13" pos:column="71">"get "<pos:position pos:line="13" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr></argument>,
                     <argument><expr><name><name pos:line="14" pos:column="22">li<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">-&gt;<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="26">fields<pos:position pos:line="14" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="34">li<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">-&gt;<pos:position pos:line="14" pos:column="41"/></operator><name pos:line="14" pos:column="38">fields_num<pos:position pos:line="14" pos:column="48"/></name></name></expr></argument>,
                     <comment type="block" pos:line="15" pos:column="22">/* seperator = */</comment> <argument><expr><literal type="string" pos:line="15" pos:column="40">" "<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">&lt;<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20"> <block pos:line="16" pos:column="21">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">ERROR<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><literal type="string" pos:line="17" pos:column="13">"powerdns plugin: strjoin failed."<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><operator pos:line="18" pos:column="15">-<pos:position pos:line="18" pos:column="16"/></operator><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal><operator pos:line="18" pos:column="17">)<pos:position pos:line="18" pos:column="18"/></operator></expr>;<pos:position pos:line="18" pos:column="19"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">buffer<pos:position pos:line="20" pos:column="11"/></name><index pos:line="20" pos:column="11">[<expr><sizeof pos:line="20" pos:column="12">sizeof<argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">buffer<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></sizeof> <operator pos:line="20" pos:column="27">-<pos:position pos:line="20" pos:column="28"/></operator> <literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal></expr>]<pos:position pos:line="20" pos:column="31"/></index></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <literal type="number" pos:line="20" pos:column="34">0<pos:position pos:line="20" pos:column="35"/></literal></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">size_t<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">len<pos:position pos:line="21" pos:column="15"/></name> <init pos:line="21" pos:column="16">= <expr><call><name pos:line="21" pos:column="18">strlen<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">buffer<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="33"/></decl_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">len<pos:position pos:line="22" pos:column="12"/></name> <operator pos:line="22" pos:column="13">&lt;<pos:position pos:line="22" pos:column="17"/></operator> <sizeof pos:line="22" pos:column="15">sizeof<argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">buffer<pos:position pos:line="22" pos:column="28"/></name></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></sizeof> <operator pos:line="22" pos:column="30">-<pos:position pos:line="22" pos:column="31"/></operator> <literal type="number" pos:line="22" pos:column="32">2<pos:position pos:line="22" pos:column="33"/></literal></expr>)<pos:position pos:line="22" pos:column="34"/></condition><then pos:line="22" pos:column="34"> <block pos:line="22" pos:column="35">{
      <expr_stmt><expr><name><name pos:line="23" pos:column="7">buffer<pos:position pos:line="23" pos:column="13"/></name><index pos:line="23" pos:column="13">[<expr><name pos:line="23" pos:column="14">len<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">++<pos:position pos:line="23" pos:column="19"/></operator></expr>]<pos:position pos:line="23" pos:column="20"/></index></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <literal type="char" pos:line="23" pos:column="23">' '<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="24" pos:column="7">buffer<pos:position pos:line="24" pos:column="13"/></name><index pos:line="24" pos:column="13">[<expr><name pos:line="24" pos:column="14">len<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">++<pos:position pos:line="24" pos:column="19"/></operator></expr>]<pos:position pos:line="24" pos:column="20"/></index></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <literal type="char" pos:line="24" pos:column="23">'\n'<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">buffer<pos:position pos:line="25" pos:column="13"/></name><index pos:line="25" pos:column="13">[<expr><name pos:line="25" pos:column="14">len<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">++<pos:position pos:line="25" pos:column="19"/></operator></expr>]<pos:position pos:line="25" pos:column="20"/></index></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <literal type="char" pos:line="25" pos:column="23">'\0'<pos:position pos:line="25" pos:column="27"/></literal></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></else></if>

  <expr_stmt><expr><name><name pos:line="29" pos:column="3">buffer<pos:position pos:line="29" pos:column="9"/></name><index pos:line="29" pos:column="9">[<expr><sizeof pos:line="29" pos:column="10">sizeof<argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">buffer<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></sizeof> <operator pos:line="29" pos:column="25">-<pos:position pos:line="29" pos:column="26"/></operator> <literal type="number" pos:line="29" pos:column="27">1<pos:position pos:line="29" pos:column="28"/></literal></expr>]<pos:position pos:line="29" pos:column="29"/></index></name> <operator pos:line="29" pos:column="30">=<pos:position pos:line="29" pos:column="31"/></operator> <literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">li<pos:position pos:line="30" pos:column="5"/></name><operator pos:line="30" pos:column="5">-&gt;<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="7">command<pos:position pos:line="30" pos:column="14"/></name></name> <operator pos:line="30" pos:column="15">=<pos:position pos:line="30" pos:column="16"/></operator> <call><name pos:line="30" pos:column="17">strdup<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">buffer<pos:position pos:line="30" pos:column="30"/></name></expr></argument>)<pos:position pos:line="30" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="32"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">li<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">command<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">NULL<pos:position pos:line="31" pos:column="26"/></name></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27"> <block pos:line="31" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"powerdns plugin: strdup failed."<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <return pos:line="36" pos:column="3">return <expr><operator pos:line="36" pos:column="10">(<pos:position pos:line="36" pos:column="11"/></operator><literal type="number" pos:line="36" pos:column="11">0<pos:position pos:line="36" pos:column="12"/></literal><operator pos:line="36" pos:column="12">)<pos:position pos:line="36" pos:column="13"/></operator></expr>;<pos:position pos:line="36" pos:column="14"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1239_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">chrony_read<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* collectd read callback: Perform data acquisition */</comment>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">rc<pos:position pos:line="5" pos:column="9"/></name></decl>;<pos:position pos:line="5" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">unsigned<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">int<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">n_sources<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">g_chrony_seq_is_initialized<pos:position pos:line="8" pos:column="34"/></name> <operator pos:line="8" pos:column="35">==<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="38">0<pos:position pos:line="8" pos:column="39"/></literal></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40">
  <block pos:line="9" pos:column="3">{
    <comment type="block" pos:line="10" pos:column="5">/* Seed RNG for sequence number generation */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">rc<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">chrony_init_seq<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">()<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">rc<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">!=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">CHRONY_RC_OK<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><name pos:line="13" pos:column="14">rc<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">g_chrony_seq_is_initialized<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">=<pos:position pos:line="15" pos:column="34"/></operator> <literal type="number" pos:line="15" pos:column="35">1<pos:position pos:line="15" pos:column="36"/></literal></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* Get daemon stats */</comment>
  <expr_stmt><expr><name pos:line="19" pos:column="3">rc<pos:position pos:line="19" pos:column="5"/></name> <operator pos:line="19" pos:column="6">=<pos:position pos:line="19" pos:column="7"/></operator> <call><name pos:line="19" pos:column="8">chrony_request_daemon_stats<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">()<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">rc<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">!=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">CHRONY_RC_OK<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">rc<pos:position pos:line="21" pos:column="14"/></name></expr>;<pos:position pos:line="21" pos:column="15"/></return></block></then></if>

  <comment type="block" pos:line="23" pos:column="3">/* Get number of time sources, then check every source for status */</comment>
  <expr_stmt><expr><name pos:line="24" pos:column="3">rc<pos:position pos:line="24" pos:column="5"/></name> <operator pos:line="24" pos:column="6">=<pos:position pos:line="24" pos:column="7"/></operator> <call><name pos:line="24" pos:column="8">chrony_request_sources_count<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><operator pos:line="24" pos:column="37">&amp;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="38">n_sources<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="49"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">rc<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">!=<pos:position pos:line="25" pos:column="12"/></operator> <name pos:line="25" pos:column="13">CHRONY_RC_OK<pos:position pos:line="25" pos:column="25"/></name></expr>)<pos:position pos:line="25" pos:column="26"/></condition><then pos:line="25" pos:column="26">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">rc<pos:position pos:line="26" pos:column="14"/></name></expr>;<pos:position pos:line="26" pos:column="15"/></return></block></then></if>

  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><decl><type><name pos:line="28" pos:column="8">unsigned<pos:position pos:line="28" pos:column="16"/></name> <name pos:line="28" pos:column="17">int<pos:position pos:line="28" pos:column="20"/></name></type> <name pos:line="28" pos:column="21">now_src<pos:position pos:line="28" pos:column="28"/></name> <init pos:line="28" pos:column="29">= <expr><literal type="number" pos:line="28" pos:column="31">0<pos:position pos:line="28" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="33"/></init> <condition><expr><name pos:line="28" pos:column="34">now_src<pos:position pos:line="28" pos:column="41"/></name> <operator pos:line="28" pos:column="42">&lt;<pos:position pos:line="28" pos:column="46"/></operator> <name pos:line="28" pos:column="44">n_sources<pos:position pos:line="28" pos:column="53"/></name></expr>;<pos:position pos:line="28" pos:column="54"/></condition> <incr><expr><operator pos:line="28" pos:column="55">++<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">now_src<pos:position pos:line="28" pos:column="64"/></name></expr></incr>)<pos:position pos:line="28" pos:column="65"/></control>
  <block pos:line="29" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">is_reachable<pos:position pos:line="30" pos:column="21"/></name></decl>;<pos:position pos:line="30" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">rc<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">chrony_request_source_data<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">now_src<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="46">&amp;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="47">is_reachable<pos:position pos:line="31" pos:column="59"/></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">rc<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">!=<pos:position pos:line="32" pos:column="14"/></operator> <name pos:line="32" pos:column="15">CHRONY_RC_OK<pos:position pos:line="32" pos:column="27"/></name></expr>)<pos:position pos:line="32" pos:column="28"/></condition><then pos:line="32" pos:column="28">
      <block type="pseudo"><return pos:line="33" pos:column="7">return <expr><name pos:line="33" pos:column="14">rc<pos:position pos:line="33" pos:column="16"/></name></expr>;<pos:position pos:line="33" pos:column="17"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="35" pos:column="5">rc<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <call><name pos:line="35" pos:column="10">chrony_request_source_stats<pos:position pos:line="35" pos:column="37"/></name><argument_list pos:line="35" pos:column="37">(<argument><expr><name pos:line="35" pos:column="38">now_src<pos:position pos:line="35" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="47">&amp;<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="48">is_reachable<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="62"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">rc<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">!=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">CHRONY_RC_OK<pos:position pos:line="36" pos:column="27"/></name></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">
      <block type="pseudo"><return pos:line="37" pos:column="7">return <expr><name pos:line="37" pos:column="14">rc<pos:position pos:line="37" pos:column="16"/></name></expr>;<pos:position pos:line="37" pos:column="17"/></return></block></then></if>

  }<pos:position pos:line="39" pos:column="4"/></block></for>
  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">CHRONY_RC_OK<pos:position pos:line="40" pos:column="22"/></name></expr>;<pos:position pos:line="40" pos:column="23"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

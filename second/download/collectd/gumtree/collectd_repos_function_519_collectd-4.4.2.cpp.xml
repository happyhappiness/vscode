<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_519_collectd-4.4.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_putnotif<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">FILE<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">fh<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier><modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">fields<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">int<pos:position pos:line="1" pos:column="50"/></name></type> <name pos:line="1" pos:column="51">fields_num<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">notification_t<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">n<pos:position pos:line="3" pos:column="19"/></name></decl>;<pos:position pos:line="3" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Required fields: `PUTNOTIF', severity, time, message */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">fields_num<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&lt;<pos:position pos:line="8" pos:column="22"/></operator> <literal type="number" pos:line="8" pos:column="20">4<pos:position pos:line="8" pos:column="21"/></literal></expr>)<pos:position pos:line="8" pos:column="22"/></condition><then pos:line="8" pos:column="22">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">DEBUG<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"cmd putnotif: Wrong number of fields: %i"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="56">fields_num<pos:position pos:line="10" pos:column="66"/></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">print_to_socket<pos:position pos:line="11" pos:column="20"/></name> <argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">fh<pos:position pos:line="11" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="26">"-1 Wrong number of fields: Got %i, "<pos:position pos:line="11" pos:column="63"/></literal>
	<literal type="string" pos:line="12" pos:column="9">"expected at least 4.\n"<pos:position pos:line="12" pos:column="33"/></literal></expr></argument>,
	<argument><expr><name pos:line="13" pos:column="9">fields_num<pos:position pos:line="13" pos:column="19"/></name></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">memset<pos:position pos:line="17" pos:column="9"/></name> <argument_list pos:line="17" pos:column="10">(<argument><expr><operator pos:line="17" pos:column="11">&amp;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="12">n<pos:position pos:line="17" pos:column="13"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="15">'\0'<pos:position pos:line="17" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="21">sizeof <argument_list pos:line="17" pos:column="28">(<argument><expr><name pos:line="17" pos:column="29">n<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">status<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></expr_stmt>
  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><expr><name pos:line="20" pos:column="8">i<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <literal type="number" pos:line="20" pos:column="12">1<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></init> <condition><expr><name pos:line="20" pos:column="15">i<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">&lt;<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="19">fields_num<pos:position pos:line="20" pos:column="29"/></name></expr>;<pos:position pos:line="20" pos:column="30"/></condition> <incr><expr><name pos:line="20" pos:column="31">i<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">++<pos:position pos:line="20" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="20" pos:column="35"/></control>
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">strncasecmp<pos:position pos:line="22" pos:column="20"/></name> <argument_list pos:line="22" pos:column="21">(<argument><expr><name><name pos:line="22" pos:column="22">fields<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><name pos:line="22" pos:column="29">i<pos:position pos:line="22" pos:column="30"/></name></expr>]<pos:position pos:line="22" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="33">"message="<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="45">strlen<pos:position pos:line="22" pos:column="51"/></name> <argument_list pos:line="22" pos:column="52">(<argument><expr><literal type="string" pos:line="22" pos:column="53">"message="<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call> <operator pos:line="22" pos:column="66">==<pos:position pos:line="22" pos:column="68"/></operator> <literal type="number" pos:line="22" pos:column="69">0<pos:position pos:line="22" pos:column="70"/></literal></expr>)<pos:position pos:line="22" pos:column="71"/></condition><then pos:line="22" pos:column="71">
    <block pos:line="23" pos:column="5">{
      <expr_stmt><expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">parse_message<pos:position pos:line="24" pos:column="29"/></name> <argument_list pos:line="24" pos:column="30">(<argument><expr><operator pos:line="24" pos:column="31">&amp;<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="32">n<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">fields<pos:position pos:line="24" pos:column="41"/></name> <operator pos:line="24" pos:column="42">+<pos:position pos:line="24" pos:column="43"/></operator> <name pos:line="24" pos:column="44">i<pos:position pos:line="24" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="47">fields_num<pos:position pos:line="24" pos:column="57"/></name> <operator pos:line="24" pos:column="58">-<pos:position pos:line="24" pos:column="59"/></operator> <name pos:line="24" pos:column="60">i<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>
      <if pos:line="25" pos:column="7">if <condition pos:line="25" pos:column="10">(<expr><name pos:line="25" pos:column="11">status<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">!=<pos:position pos:line="25" pos:column="20"/></operator> <literal type="number" pos:line="25" pos:column="21">0<pos:position pos:line="25" pos:column="22"/></literal></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23">
      <block pos:line="26" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">print_to_socket<pos:position pos:line="27" pos:column="24"/></name> <argument_list pos:line="27" pos:column="25">(<argument><expr><name pos:line="27" pos:column="26">fh<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="30">"-1 Error parsing the message. Have you hit the "<pos:position pos:line="27" pos:column="79"/></literal>
	    <literal type="string" pos:line="28" pos:column="13">"limit of %u bytes?\n"<pos:position pos:line="28" pos:column="35"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="37">(<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">unsigned<pos:position pos:line="28" pos:column="46"/></name> <name pos:line="28" pos:column="47">int<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">)<pos:position pos:line="28" pos:column="51"/></operator> <sizeof pos:line="28" pos:column="52">sizeof <argument_list pos:line="28" pos:column="59">(<argument><expr><name><name pos:line="28" pos:column="60">n<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">.<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="62">message<pos:position pos:line="28" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
      }<pos:position pos:line="29" pos:column="8"/></block></then></if>
      <break pos:line="30" pos:column="7">break;<pos:position pos:line="30" pos:column="13"/></break>
    }<pos:position pos:line="31" pos:column="6"/></block></then>
    <else pos:line="32" pos:column="5">else
    <block pos:line="33" pos:column="5">{
      <expr_stmt><expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <call><name pos:line="34" pos:column="16">parse_option<pos:position pos:line="34" pos:column="28"/></name> <argument_list pos:line="34" pos:column="29">(<argument><expr><operator pos:line="34" pos:column="30">&amp;<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="31">n<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="34">fields<pos:position pos:line="34" pos:column="40"/></name><index pos:line="34" pos:column="40">[<expr><name pos:line="34" pos:column="41">i<pos:position pos:line="34" pos:column="42"/></name></expr>]<pos:position pos:line="34" pos:column="43"/></index></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name pos:line="35" pos:column="11">status<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">!=<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">0<pos:position pos:line="35" pos:column="22"/></literal></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23">
      <block pos:line="36" pos:column="7">{
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">print_to_socket<pos:position pos:line="37" pos:column="24"/></name> <argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">fh<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="30">"-1 Error parsing option `%s'\n"<pos:position pos:line="37" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="64">fields<pos:position pos:line="37" pos:column="70"/></name><index pos:line="37" pos:column="70">[<expr><name pos:line="37" pos:column="71">i<pos:position pos:line="37" pos:column="72"/></name></expr>]<pos:position pos:line="37" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="75"/></expr_stmt>
	<break pos:line="38" pos:column="9">break;<pos:position pos:line="38" pos:column="15"/></break>
      }<pos:position pos:line="39" pos:column="8"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>
  }<pos:position pos:line="41" pos:column="4"/></block></for> <comment type="block" pos:line="41" pos:column="5">/* for (i) */</comment>

  <comment type="block" pos:line="43" pos:column="3">/* Check for required fields and complain if anything is missing. */</comment>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><operator pos:line="44" pos:column="7">(<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">status<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">==<pos:position pos:line="44" pos:column="17"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal><operator pos:line="44" pos:column="19">)<pos:position pos:line="44" pos:column="20"/></operator> <operator pos:line="44" pos:column="21">&amp;&amp;<pos:position pos:line="44" pos:column="31"/></operator> <operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><name><name pos:line="44" pos:column="25">n<pos:position pos:line="44" pos:column="26"/></name><operator pos:line="44" pos:column="26">.<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="27">severity<pos:position pos:line="44" pos:column="35"/></name></name> <operator pos:line="44" pos:column="36">==<pos:position pos:line="44" pos:column="38"/></operator> <literal type="number" pos:line="44" pos:column="39">0<pos:position pos:line="44" pos:column="40"/></literal><operator pos:line="44" pos:column="40">)<pos:position pos:line="44" pos:column="41"/></operator></expr>)<pos:position pos:line="44" pos:column="42"/></condition><then pos:line="44" pos:column="42">
  <block pos:line="45" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">print_to_socket<pos:position pos:line="46" pos:column="20"/></name> <argument_list pos:line="46" pos:column="21">(<argument><expr><name pos:line="46" pos:column="22">fh<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="26">"-1 Option `severity' missing.\n"<pos:position pos:line="46" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">status<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <operator pos:line="47" pos:column="14">-<pos:position pos:line="47" pos:column="15"/></operator><literal type="number" pos:line="47" pos:column="15">1<pos:position pos:line="47" pos:column="16"/></literal></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><operator pos:line="49" pos:column="7">(<pos:position pos:line="49" pos:column="8"/></operator><name pos:line="49" pos:column="8">status<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">==<pos:position pos:line="49" pos:column="17"/></operator> <literal type="number" pos:line="49" pos:column="18">0<pos:position pos:line="49" pos:column="19"/></literal><operator pos:line="49" pos:column="19">)<pos:position pos:line="49" pos:column="20"/></operator> <operator pos:line="49" pos:column="21">&amp;&amp;<pos:position pos:line="49" pos:column="31"/></operator> <operator pos:line="49" pos:column="24">(<pos:position pos:line="49" pos:column="25"/></operator><name><name pos:line="49" pos:column="25">n<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">.<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">time<pos:position pos:line="49" pos:column="31"/></name></name> <operator pos:line="49" pos:column="32">==<pos:position pos:line="49" pos:column="34"/></operator> <literal type="number" pos:line="49" pos:column="35">0<pos:position pos:line="49" pos:column="36"/></literal><operator pos:line="49" pos:column="36">)<pos:position pos:line="49" pos:column="37"/></operator></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
  <block pos:line="50" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">print_to_socket<pos:position pos:line="51" pos:column="20"/></name> <argument_list pos:line="51" pos:column="21">(<argument><expr><name pos:line="51" pos:column="22">fh<pos:position pos:line="51" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="26">"-1 Option `time' missing.\n"<pos:position pos:line="51" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="52" pos:column="5">status<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <operator pos:line="52" pos:column="14">-<pos:position pos:line="52" pos:column="15"/></operator><literal type="number" pos:line="52" pos:column="15">1<pos:position pos:line="52" pos:column="16"/></literal></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><operator pos:line="54" pos:column="7">(<pos:position pos:line="54" pos:column="8"/></operator><name pos:line="54" pos:column="8">status<pos:position pos:line="54" pos:column="14"/></name> <operator pos:line="54" pos:column="15">==<pos:position pos:line="54" pos:column="17"/></operator> <literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal><operator pos:line="54" pos:column="19">)<pos:position pos:line="54" pos:column="20"/></operator> <operator pos:line="54" pos:column="21">&amp;&amp;<pos:position pos:line="54" pos:column="31"/></operator> <operator pos:line="54" pos:column="24">(<pos:position pos:line="54" pos:column="25"/></operator><call><name pos:line="54" pos:column="25">strlen<pos:position pos:line="54" pos:column="31"/></name> <argument_list pos:line="54" pos:column="32">(<argument><expr><name><name pos:line="54" pos:column="33">n<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">.<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="35">message<pos:position pos:line="54" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call> <operator pos:line="54" pos:column="44">==<pos:position pos:line="54" pos:column="46"/></operator> <literal type="number" pos:line="54" pos:column="47">0<pos:position pos:line="54" pos:column="48"/></literal><operator pos:line="54" pos:column="48">)<pos:position pos:line="54" pos:column="49"/></operator></expr>)<pos:position pos:line="54" pos:column="50"/></condition><then pos:line="54" pos:column="50">
  <block pos:line="55" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">print_to_socket<pos:position pos:line="56" pos:column="20"/></name> <argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">fh<pos:position pos:line="56" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="26">"-1 No message or message of length 0 given.\n"<pos:position pos:line="56" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><name pos:line="57" pos:column="5">status<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <operator pos:line="57" pos:column="14">-<pos:position pos:line="57" pos:column="15"/></operator><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="60" pos:column="3">/* If status is still zero the notification is fine and we can finally
   * dispatch it. */</comment>
  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><name pos:line="62" pos:column="7">status<pos:position pos:line="62" pos:column="13"/></name> <operator pos:line="62" pos:column="14">==<pos:position pos:line="62" pos:column="16"/></operator> <literal type="number" pos:line="62" pos:column="17">0<pos:position pos:line="62" pos:column="18"/></literal></expr>)<pos:position pos:line="62" pos:column="19"/></condition><then pos:line="62" pos:column="19">
  <block pos:line="63" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">plugin_dispatch_notification<pos:position pos:line="64" pos:column="33"/></name> <argument_list pos:line="64" pos:column="34">(<argument><expr><operator pos:line="64" pos:column="35">&amp;<pos:position pos:line="64" pos:column="40"/></operator><name pos:line="64" pos:column="36">n<pos:position pos:line="64" pos:column="37"/></name></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">print_to_socket<pos:position pos:line="65" pos:column="20"/></name> <argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">fh<pos:position pos:line="65" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="26">"0 Success\n"<pos:position pos:line="65" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="66" pos:column="4"/></block></then></if>

  <return pos:line="68" pos:column="3">return <expr><operator pos:line="68" pos:column="10">(<pos:position pos:line="68" pos:column="11"/></operator><literal type="number" pos:line="68" pos:column="11">0<pos:position pos:line="68" pos:column="12"/></literal><operator pos:line="68" pos:column="12">)<pos:position pos:line="68" pos:column="13"/></operator></expr>;<pos:position pos:line="68" pos:column="14"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

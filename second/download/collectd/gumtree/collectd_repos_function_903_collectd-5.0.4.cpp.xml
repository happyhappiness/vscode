<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_903_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_wafl_data<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">hostname<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">cfg_wafl_t<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">cfg_wafl<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="78">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">na_elem_t<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">data<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">interval<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">cfg_wafl_t<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">perf_data<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">char<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">plugin_inst<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">na_elem_t<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">instances<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">na_elem_t<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">counter<pos:position pos:line="8" pos:column="27"/></name></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">na_elem_iter_t<pos:position pos:line="9" pos:column="23"/></name></type> <name pos:line="9" pos:column="24">counter_iter<pos:position pos:line="9" pos:column="36"/></name></decl>;<pos:position pos:line="9" pos:column="37"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">memset<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><operator pos:line="11" pos:column="17">&amp;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="18">perf_data<pos:position pos:line="11" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="29">0<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="32">sizeof <argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">perf_data<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="13" pos:column="9">perf_data<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">timestamp<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <call><name pos:line="13" pos:column="31">cna_child_get_cdtime<pos:position pos:line="13" pos:column="51"/></name> <argument_list pos:line="13" pos:column="52">(<argument><expr><name pos:line="13" pos:column="53">data<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>

	<expr_stmt><expr><name pos:line="15" pos:column="9">instances<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">na_elem_child<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><call><name pos:line="15" pos:column="35">na_elem_child<pos:position pos:line="15" pos:column="48"/></name> <argument_list pos:line="15" pos:column="49">(<argument><expr><name pos:line="15" pos:column="50">data<pos:position pos:line="15" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="56">"instances"<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="70">"instance-data"<pos:position pos:line="15" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="87"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">instances<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">NULL<pos:position pos:line="16" pos:column="30"/></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
	<block pos:line="17" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">ERROR<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><literal type="string" pos:line="18" pos:column="24">"netapp plugin: cna_handle_wafl_data: "<pos:position pos:line="18" pos:column="63"/></literal>
				<literal type="string" pos:line="19" pos:column="33">"na_elem_child (\"instances\") failed "<pos:position pos:line="19" pos:column="72"/></literal>
				<literal type="string" pos:line="20" pos:column="33">"for host %s."<pos:position pos:line="20" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="49">hostname<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator><literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="24" pos:column="9">plugin_inst<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <call><name pos:line="24" pos:column="23">na_child_get_string<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><name pos:line="24" pos:column="43">instances<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="54">"name"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name pos:line="25" pos:column="13">plugin_inst<pos:position pos:line="25" pos:column="24"/></name> <operator pos:line="25" pos:column="25">==<pos:position pos:line="25" pos:column="27"/></operator> <name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr>)<pos:position pos:line="25" pos:column="33"/></condition><then pos:line="25" pos:column="33">
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">ERROR<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"netapp plugin: cna_handle_wafl_data: "<pos:position pos:line="27" pos:column="63"/></literal>
				<literal type="string" pos:line="28" pos:column="33">"na_child_get_string (\"name\") failed "<pos:position pos:line="28" pos:column="73"/></literal>
				<literal type="string" pos:line="29" pos:column="33">"for host %s."<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">hostname<pos:position pos:line="29" pos:column="57"/></name></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="59"/></expr_stmt>
		<return pos:line="30" pos:column="17">return <expr><operator pos:line="30" pos:column="24">(<pos:position pos:line="30" pos:column="25"/></operator><operator pos:line="30" pos:column="25">-<pos:position pos:line="30" pos:column="26"/></operator><literal type="number" pos:line="30" pos:column="26">1<pos:position pos:line="30" pos:column="27"/></literal><operator pos:line="30" pos:column="27">)<pos:position pos:line="30" pos:column="28"/></operator></expr>;<pos:position pos:line="30" pos:column="29"/></return>
	}<pos:position pos:line="31" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="33" pos:column="9">/* Iterate over all counters */</comment>
	<expr_stmt><expr><name pos:line="34" pos:column="9">counter_iter<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <call><name pos:line="34" pos:column="24">na_child_iterator<pos:position pos:line="34" pos:column="41"/></name> <argument_list pos:line="34" pos:column="42">(<argument><expr><call><name pos:line="34" pos:column="43">na_elem_child<pos:position pos:line="34" pos:column="56"/></name> <argument_list pos:line="34" pos:column="57">(<argument><expr><name pos:line="34" pos:column="58">instances<pos:position pos:line="34" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="69">"counters"<pos:position pos:line="34" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="82"/></expr_stmt>
	<for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">counter<pos:position pos:line="35" pos:column="21"/></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <call><name pos:line="35" pos:column="24">na_iterator_next<pos:position pos:line="35" pos:column="40"/></name> <argument_list pos:line="35" pos:column="41">(<argument><expr><operator pos:line="35" pos:column="42">&amp;<pos:position pos:line="35" pos:column="47"/></operator><name pos:line="35" pos:column="43">counter_iter<pos:position pos:line="35" pos:column="55"/></name></expr></argument>)<pos:position pos:line="35" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="57"/></init>
			<condition><expr><name pos:line="36" pos:column="25">counter<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">!=<pos:position pos:line="36" pos:column="35"/></operator> <name pos:line="36" pos:column="36">NULL<pos:position pos:line="36" pos:column="40"/></name></expr>;<pos:position pos:line="36" pos:column="41"/></condition>
			<incr><expr><name pos:line="37" pos:column="25">counter<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">=<pos:position pos:line="37" pos:column="34"/></operator> <call><name pos:line="37" pos:column="35">na_iterator_next<pos:position pos:line="37" pos:column="51"/></name> <argument_list pos:line="37" pos:column="52">(<argument><expr><operator pos:line="37" pos:column="53">&amp;<pos:position pos:line="37" pos:column="58"/></operator><name pos:line="37" pos:column="54">counter_iter<pos:position pos:line="37" pos:column="66"/></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr></incr>)<pos:position pos:line="37" pos:column="68"/></control>
	<block pos:line="38" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="39" pos:column="17">const<pos:position pos:line="39" pos:column="22"/></specifier> <name pos:line="39" pos:column="23">char<pos:position pos:line="39" pos:column="27"/></name> <modifier pos:line="39" pos:column="28">*<pos:position pos:line="39" pos:column="29"/></modifier></type><name pos:line="39" pos:column="29">name<pos:position pos:line="39" pos:column="33"/></name></decl>;<pos:position pos:line="39" pos:column="34"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">uint64_t<pos:position pos:line="40" pos:column="25"/></name></type> <name pos:line="40" pos:column="26">value<pos:position pos:line="40" pos:column="31"/></name></decl>;<pos:position pos:line="40" pos:column="32"/></decl_stmt>

		<expr_stmt><expr><name pos:line="42" pos:column="17">name<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">=<pos:position pos:line="42" pos:column="23"/></operator> <call><name pos:line="42" pos:column="24">na_child_get_string<pos:position pos:line="42" pos:column="43"/></name><argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">counter<pos:position pos:line="42" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="53">"name"<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt>
		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><name pos:line="43" pos:column="21">name<pos:position pos:line="43" pos:column="25"/></name> <operator pos:line="43" pos:column="26">==<pos:position pos:line="43" pos:column="28"/></operator> <name pos:line="43" pos:column="29">NULL<pos:position pos:line="43" pos:column="33"/></name></expr>)<pos:position pos:line="43" pos:column="34"/></condition><then pos:line="43" pos:column="34">
			<block type="pseudo"><continue pos:line="44" pos:column="25">continue;<pos:position pos:line="44" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="46" pos:column="17">value<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <call><name pos:line="46" pos:column="25">na_child_get_uint64<pos:position pos:line="46" pos:column="44"/></name><argument_list pos:line="46" pos:column="44">(<argument><expr><name pos:line="46" pos:column="45">counter<pos:position pos:line="46" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="54">"value"<pos:position pos:line="46" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="63">UINT64_MAX<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="75"/></expr_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><name pos:line="47" pos:column="21">value<pos:position pos:line="47" pos:column="26"/></name> <operator pos:line="47" pos:column="27">==<pos:position pos:line="47" pos:column="29"/></operator> <name pos:line="47" pos:column="30">UINT64_MAX<pos:position pos:line="47" pos:column="40"/></name></expr>)<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41">
			<block type="pseudo"><continue pos:line="48" pos:column="25">continue;<pos:position pos:line="48" pos:column="34"/></continue></block></then></if>

		<if pos:line="50" pos:column="17">if <condition pos:line="50" pos:column="20">(<expr><operator pos:line="50" pos:column="21">!<pos:position pos:line="50" pos:column="22"/></operator><call><name pos:line="50" pos:column="22">strcmp<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">name<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="35">"name_cache_hit"<pos:position pos:line="50" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="53"/></condition><then pos:line="50" pos:column="53"> <block pos:line="50" pos:column="54">{
			<expr_stmt><expr><name><name pos:line="51" pos:column="25">perf_data<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">.<pos:position pos:line="51" pos:column="35"/></operator><name pos:line="51" pos:column="35">name_cache_hit<pos:position pos:line="51" pos:column="49"/></name></name> <operator pos:line="51" pos:column="50">=<pos:position pos:line="51" pos:column="51"/></operator> <name pos:line="51" pos:column="52">value<pos:position pos:line="51" pos:column="57"/></name></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="52" pos:column="25">perf_data<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">.<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="35">flags<pos:position pos:line="52" pos:column="40"/></name></name> <operator pos:line="52" pos:column="41">|=<pos:position pos:line="52" pos:column="43"/></operator> <name pos:line="52" pos:column="44">HAVE_WAFL_NAME_CACHE_HIT<pos:position pos:line="52" pos:column="68"/></name></expr>;<pos:position pos:line="52" pos:column="69"/></expr_stmt>
		}<pos:position pos:line="53" pos:column="18"/></block></then> <elseif pos:line="53" pos:column="19">else <if pos:line="53" pos:column="24">if <condition pos:line="53" pos:column="27">(<expr><operator pos:line="53" pos:column="28">!<pos:position pos:line="53" pos:column="29"/></operator><call><name pos:line="53" pos:column="29">strcmp<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><name pos:line="53" pos:column="36">name<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="42">"name_cache_miss"<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="61"/></condition><then pos:line="53" pos:column="61"> <block pos:line="53" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="54" pos:column="25">perf_data<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">.<pos:position pos:line="54" pos:column="35"/></operator><name pos:line="54" pos:column="35">name_cache_miss<pos:position pos:line="54" pos:column="50"/></name></name> <operator pos:line="54" pos:column="51">=<pos:position pos:line="54" pos:column="52"/></operator> <name pos:line="54" pos:column="53">value<pos:position pos:line="54" pos:column="58"/></name></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="55" pos:column="25">perf_data<pos:position pos:line="55" pos:column="34"/></name><operator pos:line="55" pos:column="34">.<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="35">flags<pos:position pos:line="55" pos:column="40"/></name></name> <operator pos:line="55" pos:column="41">|=<pos:position pos:line="55" pos:column="43"/></operator> <name pos:line="55" pos:column="44">HAVE_WAFL_NAME_CACHE_MISS<pos:position pos:line="55" pos:column="69"/></name></expr>;<pos:position pos:line="55" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif> <elseif pos:line="56" pos:column="19">else <if pos:line="56" pos:column="24">if <condition pos:line="56" pos:column="27">(<expr><operator pos:line="56" pos:column="28">!<pos:position pos:line="56" pos:column="29"/></operator><call><name pos:line="56" pos:column="29">strcmp<pos:position pos:line="56" pos:column="35"/></name><argument_list pos:line="56" pos:column="35">(<argument><expr><name pos:line="56" pos:column="36">name<pos:position pos:line="56" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="42">"find_dir_hit"<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="58"/></condition><then pos:line="56" pos:column="58"> <block pos:line="56" pos:column="59">{
			<expr_stmt><expr><name><name pos:line="57" pos:column="25">perf_data<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">.<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">find_dir_hit<pos:position pos:line="57" pos:column="47"/></name></name> <operator pos:line="57" pos:column="48">=<pos:position pos:line="57" pos:column="49"/></operator> <name pos:line="57" pos:column="50">value<pos:position pos:line="57" pos:column="55"/></name></expr>;<pos:position pos:line="57" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="58" pos:column="25">perf_data<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">.<pos:position pos:line="58" pos:column="35"/></operator><name pos:line="58" pos:column="35">flags<pos:position pos:line="58" pos:column="40"/></name></name> <operator pos:line="58" pos:column="41">|=<pos:position pos:line="58" pos:column="43"/></operator> <name pos:line="58" pos:column="44">HAVE_WAFL_FIND_DIR_HIT<pos:position pos:line="58" pos:column="66"/></name></expr>;<pos:position pos:line="58" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="59" pos:column="18"/></block></then></if></elseif> <elseif pos:line="59" pos:column="19">else <if pos:line="59" pos:column="24">if <condition pos:line="59" pos:column="27">(<expr><operator pos:line="59" pos:column="28">!<pos:position pos:line="59" pos:column="29"/></operator><call><name pos:line="59" pos:column="29">strcmp<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">name<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="42">"find_dir_miss"<pos:position pos:line="59" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="59"/></condition><then pos:line="59" pos:column="59"> <block pos:line="59" pos:column="60">{
			<expr_stmt><expr><name><name pos:line="60" pos:column="25">perf_data<pos:position pos:line="60" pos:column="34"/></name><operator pos:line="60" pos:column="34">.<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="35">find_dir_miss<pos:position pos:line="60" pos:column="48"/></name></name> <operator pos:line="60" pos:column="49">=<pos:position pos:line="60" pos:column="50"/></operator> <name pos:line="60" pos:column="51">value<pos:position pos:line="60" pos:column="56"/></name></expr>;<pos:position pos:line="60" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="61" pos:column="25">perf_data<pos:position pos:line="61" pos:column="34"/></name><operator pos:line="61" pos:column="34">.<pos:position pos:line="61" pos:column="35"/></operator><name pos:line="61" pos:column="35">flags<pos:position pos:line="61" pos:column="40"/></name></name> <operator pos:line="61" pos:column="41">|=<pos:position pos:line="61" pos:column="43"/></operator> <name pos:line="61" pos:column="44">HAVE_WAFL_FIND_DIR_MISS<pos:position pos:line="61" pos:column="67"/></name></expr>;<pos:position pos:line="61" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="62" pos:column="18"/></block></then></if></elseif> <elseif pos:line="62" pos:column="19">else <if pos:line="62" pos:column="24">if <condition pos:line="62" pos:column="27">(<expr><operator pos:line="62" pos:column="28">!<pos:position pos:line="62" pos:column="29"/></operator><call><name pos:line="62" pos:column="29">strcmp<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">name<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="42">"buf_hash_hit"<pos:position pos:line="62" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="58"/></condition><then pos:line="62" pos:column="58"> <block pos:line="62" pos:column="59">{
			<expr_stmt><expr><name><name pos:line="63" pos:column="25">perf_data<pos:position pos:line="63" pos:column="34"/></name><operator pos:line="63" pos:column="34">.<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="35">buf_hash_hit<pos:position pos:line="63" pos:column="47"/></name></name> <operator pos:line="63" pos:column="48">=<pos:position pos:line="63" pos:column="49"/></operator> <name pos:line="63" pos:column="50">value<pos:position pos:line="63" pos:column="55"/></name></expr>;<pos:position pos:line="63" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="64" pos:column="25">perf_data<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">.<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="35">flags<pos:position pos:line="64" pos:column="40"/></name></name> <operator pos:line="64" pos:column="41">|=<pos:position pos:line="64" pos:column="43"/></operator> <name pos:line="64" pos:column="44">HAVE_WAFL_BUF_HASH_HIT<pos:position pos:line="64" pos:column="66"/></name></expr>;<pos:position pos:line="64" pos:column="67"/></expr_stmt>
		}<pos:position pos:line="65" pos:column="18"/></block></then></if></elseif> <elseif pos:line="65" pos:column="19">else <if pos:line="65" pos:column="24">if <condition pos:line="65" pos:column="27">(<expr><operator pos:line="65" pos:column="28">!<pos:position pos:line="65" pos:column="29"/></operator><call><name pos:line="65" pos:column="29">strcmp<pos:position pos:line="65" pos:column="35"/></name><argument_list pos:line="65" pos:column="35">(<argument><expr><name pos:line="65" pos:column="36">name<pos:position pos:line="65" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="42">"buf_hash_miss"<pos:position pos:line="65" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="59"/></condition><then pos:line="65" pos:column="59"> <block pos:line="65" pos:column="60">{
			<expr_stmt><expr><name><name pos:line="66" pos:column="25">perf_data<pos:position pos:line="66" pos:column="34"/></name><operator pos:line="66" pos:column="34">.<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="35">buf_hash_miss<pos:position pos:line="66" pos:column="48"/></name></name> <operator pos:line="66" pos:column="49">=<pos:position pos:line="66" pos:column="50"/></operator> <name pos:line="66" pos:column="51">value<pos:position pos:line="66" pos:column="56"/></name></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="67" pos:column="25">perf_data<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">.<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">flags<pos:position pos:line="67" pos:column="40"/></name></name> <operator pos:line="67" pos:column="41">|=<pos:position pos:line="67" pos:column="43"/></operator> <name pos:line="67" pos:column="44">HAVE_WAFL_BUF_HASH_MISS<pos:position pos:line="67" pos:column="67"/></name></expr>;<pos:position pos:line="67" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if></elseif> <elseif pos:line="68" pos:column="19">else <if pos:line="68" pos:column="24">if <condition pos:line="68" pos:column="27">(<expr><operator pos:line="68" pos:column="28">!<pos:position pos:line="68" pos:column="29"/></operator><call><name pos:line="68" pos:column="29">strcmp<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(<argument><expr><name pos:line="68" pos:column="36">name<pos:position pos:line="68" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="42">"inode_cache_hit"<pos:position pos:line="68" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="61"/></condition><then pos:line="68" pos:column="61"> <block pos:line="68" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="69" pos:column="25">perf_data<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">.<pos:position pos:line="69" pos:column="35"/></operator><name pos:line="69" pos:column="35">inode_cache_hit<pos:position pos:line="69" pos:column="50"/></name></name> <operator pos:line="69" pos:column="51">=<pos:position pos:line="69" pos:column="52"/></operator> <name pos:line="69" pos:column="53">value<pos:position pos:line="69" pos:column="58"/></name></expr>;<pos:position pos:line="69" pos:column="59"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="70" pos:column="25">perf_data<pos:position pos:line="70" pos:column="34"/></name><operator pos:line="70" pos:column="34">.<pos:position pos:line="70" pos:column="35"/></operator><name pos:line="70" pos:column="35">flags<pos:position pos:line="70" pos:column="40"/></name></name> <operator pos:line="70" pos:column="41">|=<pos:position pos:line="70" pos:column="43"/></operator> <name pos:line="70" pos:column="44">HAVE_WAFL_INODE_CACHE_HIT<pos:position pos:line="70" pos:column="69"/></name></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
		}<pos:position pos:line="71" pos:column="18"/></block></then></if></elseif> <elseif pos:line="71" pos:column="19">else <if pos:line="71" pos:column="24">if <condition pos:line="71" pos:column="27">(<expr><operator pos:line="71" pos:column="28">!<pos:position pos:line="71" pos:column="29"/></operator><call><name pos:line="71" pos:column="29">strcmp<pos:position pos:line="71" pos:column="35"/></name><argument_list pos:line="71" pos:column="35">(<argument><expr><name pos:line="71" pos:column="36">name<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">"inode_cache_miss"<pos:position pos:line="71" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="62"/></condition><then pos:line="71" pos:column="62"> <block pos:line="71" pos:column="63">{
			<expr_stmt><expr><name><name pos:line="72" pos:column="25">perf_data<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">.<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="35">inode_cache_miss<pos:position pos:line="72" pos:column="51"/></name></name> <operator pos:line="72" pos:column="52">=<pos:position pos:line="72" pos:column="53"/></operator> <name pos:line="72" pos:column="54">value<pos:position pos:line="72" pos:column="59"/></name></expr>;<pos:position pos:line="72" pos:column="60"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">perf_data<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">.<pos:position pos:line="73" pos:column="35"/></operator><name pos:line="73" pos:column="35">flags<pos:position pos:line="73" pos:column="40"/></name></name> <operator pos:line="73" pos:column="41">|=<pos:position pos:line="73" pos:column="43"/></operator> <name pos:line="73" pos:column="44">HAVE_WAFL_INODE_CACHE_MISS<pos:position pos:line="73" pos:column="70"/></name></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>
		}<pos:position pos:line="74" pos:column="18"/></block></then></if></elseif> <else pos:line="74" pos:column="19">else <block pos:line="74" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">DEBUG<pos:position pos:line="75" pos:column="30"/></name><argument_list pos:line="75" pos:column="30">(<argument><expr><literal type="string" pos:line="75" pos:column="31">"netapp plugin: cna_handle_wafl_data: "<pos:position pos:line="75" pos:column="70"/></literal>
					<literal type="string" pos:line="76" pos:column="41">"Found unexpected child: %s "<pos:position pos:line="76" pos:column="70"/></literal>
					<literal type="string" pos:line="77" pos:column="41">"for host %s."<pos:position pos:line="77" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="57">name<pos:position pos:line="77" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="63">hostname<pos:position pos:line="77" pos:column="71"/></name></expr></argument>)<pos:position pos:line="77" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="73"/></expr_stmt>
		}<pos:position pos:line="78" pos:column="18"/></block></else></if>
	}<pos:position pos:line="79" pos:column="10"/></block></for>

	<return pos:line="81" pos:column="9">return <expr><operator pos:line="81" pos:column="16">(<pos:position pos:line="81" pos:column="17"/></operator><call><name pos:line="81" pos:column="17">submit_wafl_data<pos:position pos:line="81" pos:column="33"/></name> <argument_list pos:line="81" pos:column="34">(<argument><expr><name pos:line="81" pos:column="35">hostname<pos:position pos:line="81" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="45">plugin_inst<pos:position pos:line="81" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="58">cfg_wafl<pos:position pos:line="81" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="68">&amp;<pos:position pos:line="81" pos:column="73"/></operator><name pos:line="81" pos:column="69">perf_data<pos:position pos:line="81" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="80">interval<pos:position pos:line="81" pos:column="88"/></name></expr></argument>)<pos:position pos:line="81" pos:column="89"/></argument_list></call><operator pos:line="81" pos:column="89">)<pos:position pos:line="81" pos:column="90"/></operator></expr>;<pos:position pos:line="81" pos:column="91"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

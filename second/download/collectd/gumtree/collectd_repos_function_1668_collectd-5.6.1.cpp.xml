<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1668_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cconn_validate_revents<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name><name pos:line="1" pos:column="35">struct<pos:position pos:line="1" pos:column="41"/></name> <name pos:line="1" pos:column="42">cconn<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">io<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="53">int<pos:position pos:line="1" pos:column="56"/></name></type> <name pos:line="1" pos:column="57">revents<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if<condition pos:line="3" pos:column="7">(<expr><name pos:line="3" pos:column="8">revents<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">&amp;<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="18">POLLERR<pos:position pos:line="3" pos:column="25"/></name></expr>)<pos:position pos:line="3" pos:column="26"/></condition><then pos:line="3" pos:column="26">
    <block pos:line="4" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">ERROR<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><literal type="string" pos:line="5" pos:column="15">"ceph plugin: cconn_validate_revents(name=%s): got POLLERR"<pos:position pos:line="5" pos:column="74"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="6" pos:column="13">io<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">d<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">name<pos:position pos:line="6" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><operator pos:line="7" pos:column="16">-<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">EIO<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">io<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">state<pos:position pos:line="9" pos:column="22"/></name></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition>
    <block pos:line="10" pos:column="5">{
        <case pos:line="11" pos:column="9">case <expr><name pos:line="11" pos:column="14">CSTATE_WRITE_REQUEST<pos:position pos:line="11" pos:column="34"/></name></expr>:<pos:position pos:line="11" pos:column="35"/></case>
            <return pos:line="12" pos:column="13">return <expr><ternary><condition><expr><operator pos:line="12" pos:column="20">(<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">revents<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&amp;<pos:position pos:line="12" pos:column="34"/></operator> <name pos:line="12" pos:column="31">POLLOUT<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator></expr> ?<pos:position pos:line="12" pos:column="41"/></condition><then pos:line="12" pos:column="41"> <expr><literal type="number" pos:line="12" pos:column="42">0<pos:position pos:line="12" pos:column="43"/></literal></expr> <pos:position pos:line="12" pos:column="44"/></then><else pos:line="12" pos:column="44">: <expr><operator pos:line="12" pos:column="46">-<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="47">EINVAL<pos:position pos:line="12" pos:column="53"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="54"/></return>
        <case pos:line="13" pos:column="9">case <expr><name pos:line="13" pos:column="14">CSTATE_READ_VERSION<pos:position pos:line="13" pos:column="33"/></name></expr>:<pos:position pos:line="13" pos:column="34"/></case>
        <case pos:line="14" pos:column="9">case <expr><name pos:line="14" pos:column="14">CSTATE_READ_AMT<pos:position pos:line="14" pos:column="29"/></name></expr>:<pos:position pos:line="14" pos:column="30"/></case>
        <case pos:line="15" pos:column="9">case <expr><name pos:line="15" pos:column="14">CSTATE_READ_JSON<pos:position pos:line="15" pos:column="30"/></name></expr>:<pos:position pos:line="15" pos:column="31"/></case>
            <return pos:line="16" pos:column="13">return <expr><ternary><condition><expr><operator pos:line="16" pos:column="20">(<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">revents<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">&amp;<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="31">POLLIN<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">)<pos:position pos:line="16" pos:column="38"/></operator></expr> ?<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <expr><literal type="number" pos:line="16" pos:column="41">0<pos:position pos:line="16" pos:column="42"/></literal></expr> <pos:position pos:line="16" pos:column="43"/></then><else pos:line="16" pos:column="43">: <expr><operator pos:line="16" pos:column="45">-<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="46">EINVAL<pos:position pos:line="16" pos:column="52"/></name></expr></else></ternary></expr>;<pos:position pos:line="16" pos:column="53"/></return>
        <default pos:line="17" pos:column="9">default:<pos:position pos:line="17" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">ERROR<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><literal type="string" pos:line="18" pos:column="19">"ceph plugin: cconn_validate_revents(name=%s) got to "<pos:position pos:line="18" pos:column="73"/></literal>
                <literal type="string" pos:line="19" pos:column="17">"illegal state on line %d"<pos:position pos:line="19" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="45">io<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">d<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">-&gt;<pos:position pos:line="19" pos:column="55"/></operator><name pos:line="19" pos:column="52">name<pos:position pos:line="19" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">__LINE__<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><operator pos:line="20" pos:column="20">-<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">EDOM<pos:position pos:line="20" pos:column="25"/></name></expr>;<pos:position pos:line="20" pos:column="26"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></switch>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

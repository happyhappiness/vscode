<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_699_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ps_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
<cpp:if pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">if<pos:position pos:line="2" pos:column="4"/></cpp:directive> <expr><name pos:line="2" pos:column="5">HAVE_THREAD_INFO<pos:position pos:line="2" pos:column="21"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">kern_return_t<pos:position pos:line="3" pos:column="16"/></name></type> <name pos:line="3" pos:column="17">status<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="5" pos:column="3">processor_set_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">port_pset_priv<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">task_array_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">task_list<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">mach_msg_type_number_t<pos:position pos:line="8" pos:column="25"/></name></type> <name pos:line="8" pos:column="26">task_list_len<pos:position pos:line="8" pos:column="39"/></name></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">task_pid<pos:position pos:line="10" pos:column="15"/></name></decl>;<pos:position pos:line="10" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type> <name><name pos:line="11" pos:column="8">task_name<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><name pos:line="11" pos:column="18">MAXCOMLEN<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">+<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="30">1<pos:position pos:line="11" pos:column="31"/></literal></expr>]<pos:position pos:line="11" pos:column="32"/></index></name></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="13" pos:column="3">thread_act_array_t<pos:position pos:line="13" pos:column="21"/></name></type> <name pos:line="13" pos:column="22">thread_list<pos:position pos:line="13" pos:column="33"/></name></decl>;<pos:position pos:line="13" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">mach_msg_type_number_t<pos:position pos:line="14" pos:column="25"/></name></type> <name pos:line="14" pos:column="26">thread_list_len<pos:position pos:line="14" pos:column="41"/></name></decl>;<pos:position pos:line="14" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">thread_basic_info_data_t<pos:position pos:line="15" pos:column="27"/></name></type> <name pos:line="15" pos:column="28">thread_data<pos:position pos:line="15" pos:column="39"/></name></decl>;<pos:position pos:line="15" pos:column="40"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">mach_msg_type_number_t<pos:position pos:line="16" pos:column="25"/></name></type> <name pos:line="16" pos:column="26">thread_data_len<pos:position pos:line="16" pos:column="41"/></name></decl>;<pos:position pos:line="16" pos:column="42"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="18" pos:column="3">int<pos:position pos:line="18" pos:column="6"/></name></type> <name pos:line="18" pos:column="7">running<pos:position pos:line="18" pos:column="14"/></name> <init pos:line="18" pos:column="15">= <expr><literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="19" pos:column="3">int<pos:position pos:line="19" pos:column="6"/></name></type> <name pos:line="19" pos:column="7">sleeping<pos:position pos:line="19" pos:column="15"/></name> <init pos:line="19" pos:column="16">= <expr><literal type="number" pos:line="19" pos:column="18">0<pos:position pos:line="19" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">int<pos:position pos:line="20" pos:column="6"/></name></type> <name pos:line="20" pos:column="7">zombies<pos:position pos:line="20" pos:column="14"/></name> <init pos:line="20" pos:column="15">= <expr><literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">stopped<pos:position pos:line="21" pos:column="14"/></name> <init pos:line="21" pos:column="15">= <expr><literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">int<pos:position pos:line="22" pos:column="6"/></name></type> <name pos:line="22" pos:column="7">blocked<pos:position pos:line="22" pos:column="14"/></name> <init pos:line="22" pos:column="15">= <expr><literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="24" pos:column="3">procstat_t<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">ps<pos:position pos:line="24" pos:column="17"/></name></decl>;<pos:position pos:line="24" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="25" pos:column="3">process_entry_t<pos:position pos:line="25" pos:column="18"/></name></type> <name pos:line="25" pos:column="19">pse<pos:position pos:line="25" pos:column="22"/></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="27" pos:column="3">ps_list_reset<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">()<pos:position pos:line="27" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="29" pos:column="3">/*
   * The Mach-concept is a little different from the traditional UNIX
   * concept: All the work is done in threads. Threads are contained in
   * `tasks'. Therefore, `task status' doesn't make much sense, since
   * it's actually a `thread status'.
   * Tasks are assigned to sets of processors, so that's where you go to
   * get a list.
   */</comment>
  <for pos:line="37" pos:column="3">for <control pos:line="37" pos:column="7">(<init><decl><type><name pos:line="37" pos:column="8">mach_msg_type_number_t<pos:position pos:line="37" pos:column="30"/></name></type> <name pos:line="37" pos:column="31">pset<pos:position pos:line="37" pos:column="35"/></name> <init pos:line="37" pos:column="36">= <expr><literal type="number" pos:line="37" pos:column="38">0<pos:position pos:line="37" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="40"/></init> <condition><expr><name pos:line="37" pos:column="41">pset<pos:position pos:line="37" pos:column="45"/></name> <operator pos:line="37" pos:column="46">&lt;<pos:position pos:line="37" pos:column="50"/></operator> <name pos:line="37" pos:column="48">pset_list_len<pos:position pos:line="37" pos:column="61"/></name></expr>;<pos:position pos:line="37" pos:column="62"/></condition> <incr><expr><name pos:line="37" pos:column="63">pset<pos:position pos:line="37" pos:column="67"/></name><operator pos:line="37" pos:column="67">++<pos:position pos:line="37" pos:column="69"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="70"/></control> <block pos:line="37" pos:column="71">{
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">status<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <call><name pos:line="38" pos:column="19">host_processor_set_priv<pos:position pos:line="38" pos:column="42"/></name><argument_list pos:line="38" pos:column="42">(<argument><expr><name pos:line="38" pos:column="43">port_host_self<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="59">pset_list<pos:position pos:line="38" pos:column="68"/></name><index pos:line="38" pos:column="68">[<expr><name pos:line="38" pos:column="69">pset<pos:position pos:line="38" pos:column="73"/></name></expr>]<pos:position pos:line="38" pos:column="74"/></index></name></expr></argument>,
                                          <argument><expr><operator pos:line="39" pos:column="43">&amp;<pos:position pos:line="39" pos:column="48"/></operator><name pos:line="39" pos:column="44">port_pset_priv<pos:position pos:line="39" pos:column="58"/></name></expr></argument>)<pos:position pos:line="39" pos:column="59"/></argument_list></call><operator pos:line="39" pos:column="59">)<pos:position pos:line="39" pos:column="60"/></operator> <operator pos:line="39" pos:column="61">!=<pos:position pos:line="39" pos:column="63"/></operator> <name pos:line="39" pos:column="64">KERN_SUCCESS<pos:position pos:line="39" pos:column="76"/></name></expr>)<pos:position pos:line="39" pos:column="77"/></condition><then pos:line="39" pos:column="77"> <block pos:line="39" pos:column="78">{
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">ERROR<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><literal type="string" pos:line="40" pos:column="13">"host_processor_set_priv failed: %s\n"<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="53">mach_error_string<pos:position pos:line="40" pos:column="70"/></name><argument_list pos:line="40" pos:column="70">(<argument><expr><name pos:line="40" pos:column="71">status<pos:position pos:line="40" pos:column="77"/></name></expr></argument>)<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="80"/></expr_stmt>
      <continue pos:line="41" pos:column="7">continue;<pos:position pos:line="41" pos:column="16"/></continue>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">(<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">status<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">processor_set_tasks<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">port_pset_priv<pos:position pos:line="44" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="55">&amp;<pos:position pos:line="44" pos:column="60"/></operator><name pos:line="44" pos:column="56">task_list<pos:position pos:line="44" pos:column="65"/></name></expr></argument>,
                                      <argument><expr><operator pos:line="45" pos:column="39">&amp;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="40">task_list_len<pos:position pos:line="45" pos:column="53"/></name></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call><operator pos:line="45" pos:column="54">)<pos:position pos:line="45" pos:column="55"/></operator> <operator pos:line="45" pos:column="56">!=<pos:position pos:line="45" pos:column="58"/></operator> <name pos:line="45" pos:column="59">KERN_SUCCESS<pos:position pos:line="45" pos:column="71"/></name></expr>)<pos:position pos:line="45" pos:column="72"/></condition><then pos:line="45" pos:column="72"> <block pos:line="45" pos:column="73">{
      <expr_stmt><expr><call><name pos:line="46" pos:column="7">ERROR<pos:position pos:line="46" pos:column="12"/></name><argument_list pos:line="46" pos:column="12">(<argument><expr><literal type="string" pos:line="46" pos:column="13">"processor_set_tasks failed: %s\n"<pos:position pos:line="46" pos:column="47"/></literal></expr></argument>, <argument><expr><call><name pos:line="46" pos:column="49">mach_error_string<pos:position pos:line="46" pos:column="66"/></name><argument_list pos:line="46" pos:column="66">(<argument><expr><name pos:line="46" pos:column="67">status<pos:position pos:line="46" pos:column="73"/></name></expr></argument>)<pos:position pos:line="46" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">mach_port_deallocate<pos:position pos:line="47" pos:column="27"/></name><argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">port_task_self<pos:position pos:line="47" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="44">port_pset_priv<pos:position pos:line="47" pos:column="58"/></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="60"/></expr_stmt>
      <continue pos:line="48" pos:column="7">continue;<pos:position pos:line="48" pos:column="16"/></continue>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <for pos:line="51" pos:column="5">for <control pos:line="51" pos:column="9">(<init><decl><type><name pos:line="51" pos:column="10">mach_msg_type_number_t<pos:position pos:line="51" pos:column="32"/></name></type> <name pos:line="51" pos:column="33">task<pos:position pos:line="51" pos:column="37"/></name> <init pos:line="51" pos:column="38">= <expr><literal type="number" pos:line="51" pos:column="40">0<pos:position pos:line="51" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="51" pos:column="42"/></init> <condition><expr><name pos:line="51" pos:column="43">task<pos:position pos:line="51" pos:column="47"/></name> <operator pos:line="51" pos:column="48">&lt;<pos:position pos:line="51" pos:column="52"/></operator> <name pos:line="51" pos:column="50">task_list_len<pos:position pos:line="51" pos:column="63"/></name></expr>;<pos:position pos:line="51" pos:column="64"/></condition> <incr><expr><name pos:line="51" pos:column="65">task<pos:position pos:line="51" pos:column="69"/></name><operator pos:line="51" pos:column="69">++<pos:position pos:line="51" pos:column="71"/></operator></expr></incr>)<pos:position pos:line="51" pos:column="72"/></control> <block pos:line="51" pos:column="73">{
      <expr_stmt><expr><name pos:line="52" pos:column="7">ps<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <name pos:line="52" pos:column="12">NULL<pos:position pos:line="52" pos:column="16"/></name></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>
      <if pos:line="53" pos:column="7">if <condition pos:line="53" pos:column="10">(<expr><call><name pos:line="53" pos:column="11">mach_get_task_name<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><name><name pos:line="53" pos:column="30">task_list<pos:position pos:line="53" pos:column="39"/></name><index pos:line="53" pos:column="39">[<expr><name pos:line="53" pos:column="40">task<pos:position pos:line="53" pos:column="44"/></name></expr>]<pos:position pos:line="53" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="47">&amp;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="48">task_pid<pos:position pos:line="53" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="58">task_name<pos:position pos:line="53" pos:column="67"/></name></expr></argument>,
                             <argument><expr><name pos:line="54" pos:column="30">PROCSTAT_NAME_LEN<pos:position pos:line="54" pos:column="47"/></name></expr></argument>)<pos:position pos:line="54" pos:column="48"/></argument_list></call> <operator pos:line="54" pos:column="49">==<pos:position pos:line="54" pos:column="51"/></operator> <literal type="number" pos:line="54" pos:column="52">0<pos:position pos:line="54" pos:column="53"/></literal></expr>)<pos:position pos:line="54" pos:column="54"/></condition><then pos:line="54" pos:column="54"> <block pos:line="54" pos:column="55">{
        <comment type="block" pos:line="55" pos:column="9">/* search for at least one match */</comment>
        <for pos:line="56" pos:column="9">for <control pos:line="56" pos:column="13">(<init><expr><name pos:line="56" pos:column="14">ps<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">=<pos:position pos:line="56" pos:column="18"/></operator> <name pos:line="56" pos:column="19">list_head_g<pos:position pos:line="56" pos:column="30"/></name></expr>;<pos:position pos:line="56" pos:column="31"/></init> <condition><expr><name pos:line="56" pos:column="32">ps<pos:position pos:line="56" pos:column="34"/></name> <operator pos:line="56" pos:column="35">!=<pos:position pos:line="56" pos:column="37"/></operator> <name pos:line="56" pos:column="38">NULL<pos:position pos:line="56" pos:column="42"/></name></expr>;<pos:position pos:line="56" pos:column="43"/></condition> <incr><expr><name pos:line="56" pos:column="44">ps<pos:position pos:line="56" pos:column="46"/></name> <operator pos:line="56" pos:column="47">=<pos:position pos:line="56" pos:column="48"/></operator> <name><name pos:line="56" pos:column="49">ps<pos:position pos:line="56" pos:column="51"/></name><operator pos:line="56" pos:column="51">-&gt;<pos:position pos:line="56" pos:column="56"/></operator><name pos:line="56" pos:column="53">next<pos:position pos:line="56" pos:column="57"/></name></name></expr></incr>)<pos:position pos:line="56" pos:column="58"/></control>
          <comment type="block" pos:line="57" pos:column="11">/* FIXME: cmdline should be here instead of NULL */</comment>
          <block type="pseudo"><if pos:line="58" pos:column="11">if <condition pos:line="58" pos:column="14">(<expr><call><name pos:line="58" pos:column="15">ps_list_match<pos:position pos:line="58" pos:column="28"/></name><argument_list pos:line="58" pos:column="28">(<argument><expr><name pos:line="58" pos:column="29">task_name<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">NULL<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="46">ps<pos:position pos:line="58" pos:column="48"/></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call> <operator pos:line="58" pos:column="50">==<pos:position pos:line="58" pos:column="52"/></operator> <literal type="number" pos:line="58" pos:column="53">1<pos:position pos:line="58" pos:column="54"/></literal></expr>)<pos:position pos:line="58" pos:column="55"/></condition><then pos:line="58" pos:column="55">
            <block type="pseudo"><break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break></block></then></if></block></for>
      }<pos:position pos:line="60" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="62" pos:column="7">/* Collect more detailed statistics for this process */</comment>
      <if pos:line="63" pos:column="7">if <condition pos:line="63" pos:column="10">(<expr><name pos:line="63" pos:column="11">ps<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">!=<pos:position pos:line="63" pos:column="16"/></operator> <name pos:line="63" pos:column="17">NULL<pos:position pos:line="63" pos:column="21"/></name></expr>)<pos:position pos:line="63" pos:column="22"/></condition><then pos:line="63" pos:column="22"> <block pos:line="63" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="64" pos:column="9">task_basic_info_data_t<pos:position pos:line="64" pos:column="31"/></name></type> <name pos:line="64" pos:column="32">task_basic_info<pos:position pos:line="64" pos:column="47"/></name></decl>;<pos:position pos:line="64" pos:column="48"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">mach_msg_type_number_t<pos:position pos:line="65" pos:column="31"/></name></type> <name pos:line="65" pos:column="32">task_basic_info_len<pos:position pos:line="65" pos:column="51"/></name></decl>;<pos:position pos:line="65" pos:column="52"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="66" pos:column="9">task_events_info_data_t<pos:position pos:line="66" pos:column="32"/></name></type> <name pos:line="66" pos:column="33">task_events_info<pos:position pos:line="66" pos:column="49"/></name></decl>;<pos:position pos:line="66" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">mach_msg_type_number_t<pos:position pos:line="67" pos:column="31"/></name></type> <name pos:line="67" pos:column="32">task_events_info_len<pos:position pos:line="67" pos:column="52"/></name></decl>;<pos:position pos:line="67" pos:column="53"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">task_absolutetime_info_data_t<pos:position pos:line="68" pos:column="38"/></name></type> <name pos:line="68" pos:column="39">task_absolutetime_info<pos:position pos:line="68" pos:column="61"/></name></decl>;<pos:position pos:line="68" pos:column="62"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="69" pos:column="9">mach_msg_type_number_t<pos:position pos:line="69" pos:column="31"/></name></type> <name pos:line="69" pos:column="32">task_absolutetime_info_len<pos:position pos:line="69" pos:column="58"/></name></decl>;<pos:position pos:line="69" pos:column="59"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="71" pos:column="9">memset<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><operator pos:line="71" pos:column="16">&amp;<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="17">pse<pos:position pos:line="71" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="71" pos:column="22">'\0'<pos:position pos:line="71" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="28">sizeof<argument_list pos:line="71" pos:column="34">(<argument><expr><name pos:line="71" pos:column="35">pse<pos:position pos:line="71" pos:column="38"/></name></expr></argument>)<pos:position pos:line="71" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">pse<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">.<pos:position pos:line="72" pos:column="13"/></operator><name pos:line="72" pos:column="13">id<pos:position pos:line="72" pos:column="15"/></name></name> <operator pos:line="72" pos:column="16">=<pos:position pos:line="72" pos:column="17"/></operator> <name pos:line="72" pos:column="18">task_pid<pos:position pos:line="72" pos:column="26"/></name></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><name pos:line="74" pos:column="9">task_basic_info_len<pos:position pos:line="74" pos:column="28"/></name> <operator pos:line="74" pos:column="29">=<pos:position pos:line="74" pos:column="30"/></operator> <name pos:line="74" pos:column="31">TASK_BASIC_INFO_COUNT<pos:position pos:line="74" pos:column="52"/></name></expr>;<pos:position pos:line="74" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="75" pos:column="9">status<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">task_info<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name><name pos:line="75" pos:column="28">task_list<pos:position pos:line="75" pos:column="37"/></name><index pos:line="75" pos:column="37">[<expr><name pos:line="75" pos:column="38">task<pos:position pos:line="75" pos:column="42"/></name></expr>]<pos:position pos:line="75" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="45">TASK_BASIC_INFO<pos:position pos:line="75" pos:column="60"/></name></expr></argument>,
                           <argument><expr><operator pos:line="76" pos:column="28">(<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="29">task_info_t<pos:position pos:line="76" pos:column="40"/></name><operator pos:line="76" pos:column="40">)<pos:position pos:line="76" pos:column="41"/></operator><operator pos:line="76" pos:column="41">&amp;<pos:position pos:line="76" pos:column="46"/></operator><name pos:line="76" pos:column="42">task_basic_info<pos:position pos:line="76" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="76" pos:column="59">&amp;<pos:position pos:line="76" pos:column="64"/></operator><name pos:line="76" pos:column="60">task_basic_info_len<pos:position pos:line="76" pos:column="79"/></name></expr></argument>)<pos:position pos:line="76" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="81"/></expr_stmt>
        <if pos:line="77" pos:column="9">if <condition pos:line="77" pos:column="12">(<expr><name pos:line="77" pos:column="13">status<pos:position pos:line="77" pos:column="19"/></name> <operator pos:line="77" pos:column="20">!=<pos:position pos:line="77" pos:column="22"/></operator> <name pos:line="77" pos:column="23">KERN_SUCCESS<pos:position pos:line="77" pos:column="35"/></name></expr>)<pos:position pos:line="77" pos:column="36"/></condition><then pos:line="77" pos:column="36"> <block pos:line="77" pos:column="37">{
          <expr_stmt><expr><call><name pos:line="78" pos:column="11">ERROR<pos:position pos:line="78" pos:column="16"/></name><argument_list pos:line="78" pos:column="16">(<argument><expr><literal type="string" pos:line="78" pos:column="17">"task_info failed: %s"<pos:position pos:line="78" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="41">mach_error_string<pos:position pos:line="78" pos:column="58"/></name><argument_list pos:line="78" pos:column="58">(<argument><expr><name pos:line="78" pos:column="59">status<pos:position pos:line="78" pos:column="65"/></name></expr></argument>)<pos:position pos:line="78" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="68"/></expr_stmt>
          <continue pos:line="79" pos:column="11">continue;<pos:position pos:line="79" pos:column="20"/></continue> <comment type="block" pos:line="79" pos:column="21">/* with next thread_list */</comment>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="82" pos:column="9">task_events_info_len<pos:position pos:line="82" pos:column="29"/></name> <operator pos:line="82" pos:column="30">=<pos:position pos:line="82" pos:column="31"/></operator> <name pos:line="82" pos:column="32">TASK_EVENTS_INFO_COUNT<pos:position pos:line="82" pos:column="54"/></name></expr>;<pos:position pos:line="82" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><name pos:line="83" pos:column="9">status<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator>
            <call><name pos:line="84" pos:column="13">task_info<pos:position pos:line="84" pos:column="22"/></name><argument_list pos:line="84" pos:column="22">(<argument><expr><name><name pos:line="84" pos:column="23">task_list<pos:position pos:line="84" pos:column="32"/></name><index pos:line="84" pos:column="32">[<expr><name pos:line="84" pos:column="33">task<pos:position pos:line="84" pos:column="37"/></name></expr>]<pos:position pos:line="84" pos:column="38"/></index></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="40">TASK_EVENTS_INFO<pos:position pos:line="84" pos:column="56"/></name></expr></argument>,
                      <argument><expr><operator pos:line="85" pos:column="23">(<pos:position pos:line="85" pos:column="24"/></operator><name pos:line="85" pos:column="24">task_info_t<pos:position pos:line="85" pos:column="35"/></name><operator pos:line="85" pos:column="35">)<pos:position pos:line="85" pos:column="36"/></operator><operator pos:line="85" pos:column="36">&amp;<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="37">task_events_info<pos:position pos:line="85" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="55">&amp;<pos:position pos:line="85" pos:column="60"/></operator><name pos:line="85" pos:column="56">task_events_info_len<pos:position pos:line="85" pos:column="76"/></name></expr></argument>)<pos:position pos:line="85" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="78"/></expr_stmt>
        <if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">status<pos:position pos:line="86" pos:column="19"/></name> <operator pos:line="86" pos:column="20">!=<pos:position pos:line="86" pos:column="22"/></operator> <name pos:line="86" pos:column="23">KERN_SUCCESS<pos:position pos:line="86" pos:column="35"/></name></expr>)<pos:position pos:line="86" pos:column="36"/></condition><then pos:line="86" pos:column="36"> <block pos:line="86" pos:column="37">{
          <expr_stmt><expr><call><name pos:line="87" pos:column="11">ERROR<pos:position pos:line="87" pos:column="16"/></name><argument_list pos:line="87" pos:column="16">(<argument><expr><literal type="string" pos:line="87" pos:column="17">"task_info failed: %s"<pos:position pos:line="87" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="41">mach_error_string<pos:position pos:line="87" pos:column="58"/></name><argument_list pos:line="87" pos:column="58">(<argument><expr><name pos:line="87" pos:column="59">status<pos:position pos:line="87" pos:column="65"/></name></expr></argument>)<pos:position pos:line="87" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="68"/></expr_stmt>
          <continue pos:line="88" pos:column="11">continue;<pos:position pos:line="88" pos:column="20"/></continue> <comment type="block" pos:line="88" pos:column="21">/* with next thread_list */</comment>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="91" pos:column="9">task_absolutetime_info_len<pos:position pos:line="91" pos:column="35"/></name> <operator pos:line="91" pos:column="36">=<pos:position pos:line="91" pos:column="37"/></operator> <name pos:line="91" pos:column="38">TASK_ABSOLUTETIME_INFO_COUNT<pos:position pos:line="91" pos:column="66"/></name></expr>;<pos:position pos:line="91" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="92" pos:column="9">status<pos:position pos:line="92" pos:column="15"/></name> <operator pos:line="92" pos:column="16">=<pos:position pos:line="92" pos:column="17"/></operator> <call><name pos:line="92" pos:column="18">task_info<pos:position pos:line="92" pos:column="27"/></name><argument_list pos:line="92" pos:column="27">(<argument><expr><name><name pos:line="92" pos:column="28">task_list<pos:position pos:line="92" pos:column="37"/></name><index pos:line="92" pos:column="37">[<expr><name pos:line="92" pos:column="38">task<pos:position pos:line="92" pos:column="42"/></name></expr>]<pos:position pos:line="92" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="45">TASK_ABSOLUTETIME_INFO<pos:position pos:line="92" pos:column="67"/></name></expr></argument>,
                           <argument><expr><operator pos:line="93" pos:column="28">(<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="29">task_info_t<pos:position pos:line="93" pos:column="40"/></name><operator pos:line="93" pos:column="40">)<pos:position pos:line="93" pos:column="41"/></operator><operator pos:line="93" pos:column="41">&amp;<pos:position pos:line="93" pos:column="46"/></operator><name pos:line="93" pos:column="42">task_absolutetime_info<pos:position pos:line="93" pos:column="64"/></name></expr></argument>,
                           <argument><expr><operator pos:line="94" pos:column="28">&amp;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="29">task_absolutetime_info_len<pos:position pos:line="94" pos:column="55"/></name></expr></argument>)<pos:position pos:line="94" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>
        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><name pos:line="95" pos:column="13">status<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">!=<pos:position pos:line="95" pos:column="22"/></operator> <name pos:line="95" pos:column="23">KERN_SUCCESS<pos:position pos:line="95" pos:column="35"/></name></expr>)<pos:position pos:line="95" pos:column="36"/></condition><then pos:line="95" pos:column="36"> <block pos:line="95" pos:column="37">{
          <expr_stmt><expr><call><name pos:line="96" pos:column="11">ERROR<pos:position pos:line="96" pos:column="16"/></name><argument_list pos:line="96" pos:column="16">(<argument><expr><literal type="string" pos:line="96" pos:column="17">"task_info failed: %s"<pos:position pos:line="96" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="96" pos:column="41">mach_error_string<pos:position pos:line="96" pos:column="58"/></name><argument_list pos:line="96" pos:column="58">(<argument><expr><name pos:line="96" pos:column="59">status<pos:position pos:line="96" pos:column="65"/></name></expr></argument>)<pos:position pos:line="96" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="96" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="68"/></expr_stmt>
          <continue pos:line="97" pos:column="11">continue;<pos:position pos:line="97" pos:column="20"/></continue> <comment type="block" pos:line="97" pos:column="21">/* with next thread_list */</comment>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="100" pos:column="9">pse<pos:position pos:line="100" pos:column="12"/></name><operator pos:line="100" pos:column="12">.<pos:position pos:line="100" pos:column="13"/></operator><name pos:line="100" pos:column="13">num_proc<pos:position pos:line="100" pos:column="21"/></name></name><operator pos:line="100" pos:column="21">++<pos:position pos:line="100" pos:column="23"/></operator></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="101" pos:column="9">pse<pos:position pos:line="101" pos:column="12"/></name><operator pos:line="101" pos:column="12">.<pos:position pos:line="101" pos:column="13"/></operator><name pos:line="101" pos:column="13">vmem_size<pos:position pos:line="101" pos:column="22"/></name></name> <operator pos:line="101" pos:column="23">=<pos:position pos:line="101" pos:column="24"/></operator> <name><name pos:line="101" pos:column="25">task_basic_info<pos:position pos:line="101" pos:column="40"/></name><operator pos:line="101" pos:column="40">.<pos:position pos:line="101" pos:column="41"/></operator><name pos:line="101" pos:column="41">virtual_size<pos:position pos:line="101" pos:column="53"/></name></name></expr>;<pos:position pos:line="101" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="102" pos:column="9">pse<pos:position pos:line="102" pos:column="12"/></name><operator pos:line="102" pos:column="12">.<pos:position pos:line="102" pos:column="13"/></operator><name pos:line="102" pos:column="13">vmem_rss<pos:position pos:line="102" pos:column="21"/></name></name> <operator pos:line="102" pos:column="22">=<pos:position pos:line="102" pos:column="23"/></operator> <name><name pos:line="102" pos:column="24">task_basic_info<pos:position pos:line="102" pos:column="39"/></name><operator pos:line="102" pos:column="39">.<pos:position pos:line="102" pos:column="40"/></operator><name pos:line="102" pos:column="40">resident_size<pos:position pos:line="102" pos:column="53"/></name></name></expr>;<pos:position pos:line="102" pos:column="54"/></expr_stmt>
        <comment type="block" pos:line="103" pos:column="9">/* Does not seem to be easily exposed */</comment>
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">pse<pos:position pos:line="104" pos:column="12"/></name><operator pos:line="104" pos:column="12">.<pos:position pos:line="104" pos:column="13"/></operator><name pos:line="104" pos:column="13">vmem_data<pos:position pos:line="104" pos:column="22"/></name></name> <operator pos:line="104" pos:column="23">=<pos:position pos:line="104" pos:column="24"/></operator> <literal type="number" pos:line="104" pos:column="25">0<pos:position pos:line="104" pos:column="26"/></literal></expr>;<pos:position pos:line="104" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">pse<pos:position pos:line="105" pos:column="12"/></name><operator pos:line="105" pos:column="12">.<pos:position pos:line="105" pos:column="13"/></operator><name pos:line="105" pos:column="13">vmem_code<pos:position pos:line="105" pos:column="22"/></name></name> <operator pos:line="105" pos:column="23">=<pos:position pos:line="105" pos:column="24"/></operator> <literal type="number" pos:line="105" pos:column="25">0<pos:position pos:line="105" pos:column="26"/></literal></expr>;<pos:position pos:line="105" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="107" pos:column="9">pse<pos:position pos:line="107" pos:column="12"/></name><operator pos:line="107" pos:column="12">.<pos:position pos:line="107" pos:column="13"/></operator><name pos:line="107" pos:column="13">io_rchar<pos:position pos:line="107" pos:column="21"/></name></name> <operator pos:line="107" pos:column="22">=<pos:position pos:line="107" pos:column="23"/></operator> <operator pos:line="107" pos:column="24">-<pos:position pos:line="107" pos:column="25"/></operator><literal type="number" pos:line="107" pos:column="25">1<pos:position pos:line="107" pos:column="26"/></literal></expr>;<pos:position pos:line="107" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="108" pos:column="9">pse<pos:position pos:line="108" pos:column="12"/></name><operator pos:line="108" pos:column="12">.<pos:position pos:line="108" pos:column="13"/></operator><name pos:line="108" pos:column="13">io_wchar<pos:position pos:line="108" pos:column="21"/></name></name> <operator pos:line="108" pos:column="22">=<pos:position pos:line="108" pos:column="23"/></operator> <operator pos:line="108" pos:column="24">-<pos:position pos:line="108" pos:column="25"/></operator><literal type="number" pos:line="108" pos:column="25">1<pos:position pos:line="108" pos:column="26"/></literal></expr>;<pos:position pos:line="108" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="109" pos:column="9">pse<pos:position pos:line="109" pos:column="12"/></name><operator pos:line="109" pos:column="12">.<pos:position pos:line="109" pos:column="13"/></operator><name pos:line="109" pos:column="13">io_syscr<pos:position pos:line="109" pos:column="21"/></name></name> <operator pos:line="109" pos:column="22">=<pos:position pos:line="109" pos:column="23"/></operator> <operator pos:line="109" pos:column="24">-<pos:position pos:line="109" pos:column="25"/></operator><literal type="number" pos:line="109" pos:column="25">1<pos:position pos:line="109" pos:column="26"/></literal></expr>;<pos:position pos:line="109" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="110" pos:column="9">pse<pos:position pos:line="110" pos:column="12"/></name><operator pos:line="110" pos:column="12">.<pos:position pos:line="110" pos:column="13"/></operator><name pos:line="110" pos:column="13">io_syscw<pos:position pos:line="110" pos:column="21"/></name></name> <operator pos:line="110" pos:column="22">=<pos:position pos:line="110" pos:column="23"/></operator> <operator pos:line="110" pos:column="24">-<pos:position pos:line="110" pos:column="25"/></operator><literal type="number" pos:line="110" pos:column="25">1<pos:position pos:line="110" pos:column="26"/></literal></expr>;<pos:position pos:line="110" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="111" pos:column="9">pse<pos:position pos:line="111" pos:column="12"/></name><operator pos:line="111" pos:column="12">.<pos:position pos:line="111" pos:column="13"/></operator><name pos:line="111" pos:column="13">io_diskr<pos:position pos:line="111" pos:column="21"/></name></name> <operator pos:line="111" pos:column="22">=<pos:position pos:line="111" pos:column="23"/></operator> <operator pos:line="111" pos:column="24">-<pos:position pos:line="111" pos:column="25"/></operator><literal type="number" pos:line="111" pos:column="25">1<pos:position pos:line="111" pos:column="26"/></literal></expr>;<pos:position pos:line="111" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="112" pos:column="9">pse<pos:position pos:line="112" pos:column="12"/></name><operator pos:line="112" pos:column="12">.<pos:position pos:line="112" pos:column="13"/></operator><name pos:line="112" pos:column="13">io_diskw<pos:position pos:line="112" pos:column="21"/></name></name> <operator pos:line="112" pos:column="22">=<pos:position pos:line="112" pos:column="23"/></operator> <operator pos:line="112" pos:column="24">-<pos:position pos:line="112" pos:column="25"/></operator><literal type="number" pos:line="112" pos:column="25">1<pos:position pos:line="112" pos:column="26"/></literal></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="114" pos:column="9">/* File descriptor count not implemented */</comment>
        <expr_stmt><expr><name><name pos:line="115" pos:column="9">pse<pos:position pos:line="115" pos:column="12"/></name><operator pos:line="115" pos:column="12">.<pos:position pos:line="115" pos:column="13"/></operator><name pos:line="115" pos:column="13">num_fd<pos:position pos:line="115" pos:column="19"/></name></name> <operator pos:line="115" pos:column="20">=<pos:position pos:line="115" pos:column="21"/></operator> <literal type="number" pos:line="115" pos:column="22">0<pos:position pos:line="115" pos:column="23"/></literal></expr>;<pos:position pos:line="115" pos:column="24"/></expr_stmt>

        <comment type="block" pos:line="117" pos:column="9">/* Number of memory mappings */</comment>
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">pse<pos:position pos:line="118" pos:column="12"/></name><operator pos:line="118" pos:column="12">.<pos:position pos:line="118" pos:column="13"/></operator><name pos:line="118" pos:column="13">num_maps<pos:position pos:line="118" pos:column="21"/></name></name> <operator pos:line="118" pos:column="22">=<pos:position pos:line="118" pos:column="23"/></operator> <literal type="number" pos:line="118" pos:column="24">0<pos:position pos:line="118" pos:column="25"/></literal></expr>;<pos:position pos:line="118" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="120" pos:column="9">pse<pos:position pos:line="120" pos:column="12"/></name><operator pos:line="120" pos:column="12">.<pos:position pos:line="120" pos:column="13"/></operator><name pos:line="120" pos:column="13">vmem_minflt_counter<pos:position pos:line="120" pos:column="32"/></name></name> <operator pos:line="120" pos:column="33">=<pos:position pos:line="120" pos:column="34"/></operator> <name><name pos:line="120" pos:column="35">task_events_info<pos:position pos:line="120" pos:column="51"/></name><operator pos:line="120" pos:column="51">.<pos:position pos:line="120" pos:column="52"/></operator><name pos:line="120" pos:column="52">cow_faults<pos:position pos:line="120" pos:column="62"/></name></name></expr>;<pos:position pos:line="120" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="121" pos:column="9">pse<pos:position pos:line="121" pos:column="12"/></name><operator pos:line="121" pos:column="12">.<pos:position pos:line="121" pos:column="13"/></operator><name pos:line="121" pos:column="13">vmem_majflt_counter<pos:position pos:line="121" pos:column="32"/></name></name> <operator pos:line="121" pos:column="33">=<pos:position pos:line="121" pos:column="34"/></operator> <name><name pos:line="121" pos:column="35">task_events_info<pos:position pos:line="121" pos:column="51"/></name><operator pos:line="121" pos:column="51">.<pos:position pos:line="121" pos:column="52"/></operator><name pos:line="121" pos:column="52">faults<pos:position pos:line="121" pos:column="58"/></name></name></expr>;<pos:position pos:line="121" pos:column="59"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="123" pos:column="9">pse<pos:position pos:line="123" pos:column="12"/></name><operator pos:line="123" pos:column="12">.<pos:position pos:line="123" pos:column="13"/></operator><name pos:line="123" pos:column="13">cpu_user_counter<pos:position pos:line="123" pos:column="29"/></name></name> <operator pos:line="123" pos:column="30">=<pos:position pos:line="123" pos:column="31"/></operator> <name><name pos:line="123" pos:column="32">task_absolutetime_info<pos:position pos:line="123" pos:column="54"/></name><operator pos:line="123" pos:column="54">.<pos:position pos:line="123" pos:column="55"/></operator><name pos:line="123" pos:column="55">total_user<pos:position pos:line="123" pos:column="65"/></name></name></expr>;<pos:position pos:line="123" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="124" pos:column="9">pse<pos:position pos:line="124" pos:column="12"/></name><operator pos:line="124" pos:column="12">.<pos:position pos:line="124" pos:column="13"/></operator><name pos:line="124" pos:column="13">cpu_system_counter<pos:position pos:line="124" pos:column="31"/></name></name> <operator pos:line="124" pos:column="32">=<pos:position pos:line="124" pos:column="33"/></operator> <name><name pos:line="124" pos:column="34">task_absolutetime_info<pos:position pos:line="124" pos:column="56"/></name><operator pos:line="124" pos:column="56">.<pos:position pos:line="124" pos:column="57"/></operator><name pos:line="124" pos:column="57">total_system<pos:position pos:line="124" pos:column="69"/></name></name></expr>;<pos:position pos:line="124" pos:column="70"/></expr_stmt>

        <comment type="block" pos:line="126" pos:column="9">/* context switch counters not implemented */</comment>
        <expr_stmt><expr><name><name pos:line="127" pos:column="9">pse<pos:position pos:line="127" pos:column="12"/></name><operator pos:line="127" pos:column="12">.<pos:position pos:line="127" pos:column="13"/></operator><name pos:line="127" pos:column="13">cswitch_vol<pos:position pos:line="127" pos:column="24"/></name></name> <operator pos:line="127" pos:column="25">=<pos:position pos:line="127" pos:column="26"/></operator> <operator pos:line="127" pos:column="27">-<pos:position pos:line="127" pos:column="28"/></operator><literal type="number" pos:line="127" pos:column="28">1<pos:position pos:line="127" pos:column="29"/></literal></expr>;<pos:position pos:line="127" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="128" pos:column="9">pse<pos:position pos:line="128" pos:column="12"/></name><operator pos:line="128" pos:column="12">.<pos:position pos:line="128" pos:column="13"/></operator><name pos:line="128" pos:column="13">cswitch_invol<pos:position pos:line="128" pos:column="26"/></name></name> <operator pos:line="128" pos:column="27">=<pos:position pos:line="128" pos:column="28"/></operator> <operator pos:line="128" pos:column="29">-<pos:position pos:line="128" pos:column="30"/></operator><literal type="number" pos:line="128" pos:column="30">1<pos:position pos:line="128" pos:column="31"/></literal></expr>;<pos:position pos:line="128" pos:column="32"/></expr_stmt>
      }<pos:position pos:line="129" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="131" pos:column="7">status<pos:position pos:line="131" pos:column="13"/></name> <operator pos:line="131" pos:column="14">=<pos:position pos:line="131" pos:column="15"/></operator> <call><name pos:line="131" pos:column="16">task_threads<pos:position pos:line="131" pos:column="28"/></name><argument_list pos:line="131" pos:column="28">(<argument><expr><name><name pos:line="131" pos:column="29">task_list<pos:position pos:line="131" pos:column="38"/></name><index pos:line="131" pos:column="38">[<expr><name pos:line="131" pos:column="39">task<pos:position pos:line="131" pos:column="43"/></name></expr>]<pos:position pos:line="131" pos:column="44"/></index></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="46">&amp;<pos:position pos:line="131" pos:column="51"/></operator><name pos:line="131" pos:column="47">thread_list<pos:position pos:line="131" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="131" pos:column="60">&amp;<pos:position pos:line="131" pos:column="65"/></operator><name pos:line="131" pos:column="61">thread_list_len<pos:position pos:line="131" pos:column="76"/></name></expr></argument>)<pos:position pos:line="131" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="78"/></expr_stmt>
      <if pos:line="132" pos:column="7">if <condition pos:line="132" pos:column="10">(<expr><name pos:line="132" pos:column="11">status<pos:position pos:line="132" pos:column="17"/></name> <operator pos:line="132" pos:column="18">!=<pos:position pos:line="132" pos:column="20"/></operator> <name pos:line="132" pos:column="21">KERN_SUCCESS<pos:position pos:line="132" pos:column="33"/></name></expr>)<pos:position pos:line="132" pos:column="34"/></condition><then pos:line="132" pos:column="34"> <block pos:line="132" pos:column="35">{
        <comment type="block" pos:line="133" pos:column="9">/* Apple's `top' treats this case a zombie. It
         * makes sense to some extend: A `zombie'
         * thread is nonsense, since the task/process
         * is dead. */</comment>
        <expr_stmt><expr><name pos:line="137" pos:column="9">zombies<pos:position pos:line="137" pos:column="16"/></name><operator pos:line="137" pos:column="16">++<pos:position pos:line="137" pos:column="18"/></operator></expr>;<pos:position pos:line="137" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="138" pos:column="9">DEBUG<pos:position pos:line="138" pos:column="14"/></name><argument_list pos:line="138" pos:column="14">(<argument><expr><literal type="string" pos:line="138" pos:column="15">"task_threads failed: %s"<pos:position pos:line="138" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name pos:line="138" pos:column="42">mach_error_string<pos:position pos:line="138" pos:column="59"/></name><argument_list pos:line="138" pos:column="59">(<argument><expr><name pos:line="138" pos:column="60">status<pos:position pos:line="138" pos:column="66"/></name></expr></argument>)<pos:position pos:line="138" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="69"/></expr_stmt>
        <if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name><name pos:line="139" pos:column="13">task_list<pos:position pos:line="139" pos:column="22"/></name><index pos:line="139" pos:column="22">[<expr><name pos:line="139" pos:column="23">task<pos:position pos:line="139" pos:column="27"/></name></expr>]<pos:position pos:line="139" pos:column="28"/></index></name> <operator pos:line="139" pos:column="29">!=<pos:position pos:line="139" pos:column="31"/></operator> <name pos:line="139" pos:column="32">port_task_self<pos:position pos:line="139" pos:column="46"/></name></expr>)<pos:position pos:line="139" pos:column="47"/></condition><then pos:line="139" pos:column="47">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="140" pos:column="11">mach_port_deallocate<pos:position pos:line="140" pos:column="31"/></name><argument_list pos:line="140" pos:column="31">(<argument><expr><name pos:line="140" pos:column="32">port_task_self<pos:position pos:line="140" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="140" pos:column="48">task_list<pos:position pos:line="140" pos:column="57"/></name><index pos:line="140" pos:column="57">[<expr><name pos:line="140" pos:column="58">task<pos:position pos:line="140" pos:column="62"/></name></expr>]<pos:position pos:line="140" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="140" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="65"/></expr_stmt></block></then></if>
        <continue pos:line="141" pos:column="9">continue;<pos:position pos:line="141" pos:column="18"/></continue> <comment type="block" pos:line="141" pos:column="19">/* with next task_list */</comment>
      }<pos:position pos:line="142" pos:column="8"/></block></then></if>

      <for pos:line="144" pos:column="7">for <control pos:line="144" pos:column="11">(<init><decl><type><name pos:line="144" pos:column="12">mach_msg_type_number_t<pos:position pos:line="144" pos:column="34"/></name></type> <name pos:line="144" pos:column="35">thread<pos:position pos:line="144" pos:column="41"/></name> <init pos:line="144" pos:column="42">= <expr><literal type="number" pos:line="144" pos:column="44">0<pos:position pos:line="144" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="144" pos:column="46"/></init> <condition><expr><name pos:line="144" pos:column="47">thread<pos:position pos:line="144" pos:column="53"/></name> <operator pos:line="144" pos:column="54">&lt;<pos:position pos:line="144" pos:column="58"/></operator> <name pos:line="144" pos:column="56">thread_list_len<pos:position pos:line="144" pos:column="71"/></name></expr>;<pos:position pos:line="144" pos:column="72"/></condition>
           <incr><expr><name pos:line="145" pos:column="12">thread<pos:position pos:line="145" pos:column="18"/></name><operator pos:line="145" pos:column="18">++<pos:position pos:line="145" pos:column="20"/></operator></expr></incr>)<pos:position pos:line="145" pos:column="21"/></control> <block pos:line="145" pos:column="22">{
        <expr_stmt><expr><name pos:line="146" pos:column="9">thread_data_len<pos:position pos:line="146" pos:column="24"/></name> <operator pos:line="146" pos:column="25">=<pos:position pos:line="146" pos:column="26"/></operator> <name pos:line="146" pos:column="27">THREAD_BASIC_INFO_COUNT<pos:position pos:line="146" pos:column="50"/></name></expr>;<pos:position pos:line="146" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="147" pos:column="9">status<pos:position pos:line="147" pos:column="15"/></name> <operator pos:line="147" pos:column="16">=<pos:position pos:line="147" pos:column="17"/></operator> <call><name pos:line="147" pos:column="18">thread_info<pos:position pos:line="147" pos:column="29"/></name><argument_list pos:line="147" pos:column="29">(<argument><expr><name><name pos:line="147" pos:column="30">thread_list<pos:position pos:line="147" pos:column="41"/></name><index pos:line="147" pos:column="41">[<expr><name pos:line="147" pos:column="42">thread<pos:position pos:line="147" pos:column="48"/></name></expr>]<pos:position pos:line="147" pos:column="49"/></index></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="51">THREAD_BASIC_INFO<pos:position pos:line="147" pos:column="68"/></name></expr></argument>,
                             <argument><expr><operator pos:line="148" pos:column="30">(<pos:position pos:line="148" pos:column="31"/></operator><name pos:line="148" pos:column="31">thread_info_t<pos:position pos:line="148" pos:column="44"/></name><operator pos:line="148" pos:column="44">)<pos:position pos:line="148" pos:column="45"/></operator><operator pos:line="148" pos:column="45">&amp;<pos:position pos:line="148" pos:column="50"/></operator><name pos:line="148" pos:column="46">thread_data<pos:position pos:line="148" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="148" pos:column="59">&amp;<pos:position pos:line="148" pos:column="64"/></operator><name pos:line="148" pos:column="60">thread_data_len<pos:position pos:line="148" pos:column="75"/></name></expr></argument>)<pos:position pos:line="148" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="77"/></expr_stmt>
        <if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">status<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">!=<pos:position pos:line="149" pos:column="22"/></operator> <name pos:line="149" pos:column="23">KERN_SUCCESS<pos:position pos:line="149" pos:column="35"/></name></expr>)<pos:position pos:line="149" pos:column="36"/></condition><then pos:line="149" pos:column="36"> <block pos:line="149" pos:column="37">{
          <expr_stmt><expr><call><name pos:line="150" pos:column="11">ERROR<pos:position pos:line="150" pos:column="16"/></name><argument_list pos:line="150" pos:column="16">(<argument><expr><literal type="string" pos:line="150" pos:column="17">"thread_info failed: %s"<pos:position pos:line="150" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="43">mach_error_string<pos:position pos:line="150" pos:column="60"/></name><argument_list pos:line="150" pos:column="60">(<argument><expr><name pos:line="150" pos:column="61">status<pos:position pos:line="150" pos:column="67"/></name></expr></argument>)<pos:position pos:line="150" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="150" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="70"/></expr_stmt>
          <if pos:line="151" pos:column="11">if <condition pos:line="151" pos:column="14">(<expr><name><name pos:line="151" pos:column="15">task_list<pos:position pos:line="151" pos:column="24"/></name><index pos:line="151" pos:column="24">[<expr><name pos:line="151" pos:column="25">task<pos:position pos:line="151" pos:column="29"/></name></expr>]<pos:position pos:line="151" pos:column="30"/></index></name> <operator pos:line="151" pos:column="31">!=<pos:position pos:line="151" pos:column="33"/></operator> <name pos:line="151" pos:column="34">port_task_self<pos:position pos:line="151" pos:column="48"/></name></expr>)<pos:position pos:line="151" pos:column="49"/></condition><then pos:line="151" pos:column="49">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="152" pos:column="13">mach_port_deallocate<pos:position pos:line="152" pos:column="33"/></name><argument_list pos:line="152" pos:column="33">(<argument><expr><name pos:line="152" pos:column="34">port_task_self<pos:position pos:line="152" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="152" pos:column="50">thread_list<pos:position pos:line="152" pos:column="61"/></name><index pos:line="152" pos:column="61">[<expr><name pos:line="152" pos:column="62">thread<pos:position pos:line="152" pos:column="68"/></name></expr>]<pos:position pos:line="152" pos:column="69"/></index></name></expr></argument>)<pos:position pos:line="152" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="71"/></expr_stmt></block></then></if>
          <continue pos:line="153" pos:column="11">continue;<pos:position pos:line="153" pos:column="20"/></continue> <comment type="block" pos:line="153" pos:column="21">/* with next thread_list */</comment>
        }<pos:position pos:line="154" pos:column="10"/></block></then></if>

        <if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><name pos:line="156" pos:column="13">ps<pos:position pos:line="156" pos:column="15"/></name> <operator pos:line="156" pos:column="16">!=<pos:position pos:line="156" pos:column="18"/></operator> <name pos:line="156" pos:column="19">NULL<pos:position pos:line="156" pos:column="23"/></name></expr>)<pos:position pos:line="156" pos:column="24"/></condition><then pos:line="156" pos:column="24">
          <block type="pseudo"><expr_stmt><expr><name><name pos:line="157" pos:column="11">pse<pos:position pos:line="157" pos:column="14"/></name><operator pos:line="157" pos:column="14">.<pos:position pos:line="157" pos:column="15"/></operator><name pos:line="157" pos:column="15">num_lwp<pos:position pos:line="157" pos:column="22"/></name></name><operator pos:line="157" pos:column="22">++<pos:position pos:line="157" pos:column="24"/></operator></expr>;<pos:position pos:line="157" pos:column="25"/></expr_stmt></block></then></if>

        <switch pos:line="159" pos:column="9">switch <condition pos:line="159" pos:column="16">(<expr><name><name pos:line="159" pos:column="17">thread_data<pos:position pos:line="159" pos:column="28"/></name><operator pos:line="159" pos:column="28">.<pos:position pos:line="159" pos:column="29"/></operator><name pos:line="159" pos:column="29">run_state<pos:position pos:line="159" pos:column="38"/></name></name></expr>)<pos:position pos:line="159" pos:column="39"/></condition> <block pos:line="159" pos:column="40">{
        <case pos:line="160" pos:column="9">case <expr><name pos:line="160" pos:column="14">TH_STATE_RUNNING<pos:position pos:line="160" pos:column="30"/></name></expr>:<pos:position pos:line="160" pos:column="31"/></case>
          <expr_stmt><expr><name pos:line="161" pos:column="11">running<pos:position pos:line="161" pos:column="18"/></name><operator pos:line="161" pos:column="18">++<pos:position pos:line="161" pos:column="20"/></operator></expr>;<pos:position pos:line="161" pos:column="21"/></expr_stmt>
          <break pos:line="162" pos:column="11">break;<pos:position pos:line="162" pos:column="17"/></break>
        <case pos:line="163" pos:column="9">case <expr><name pos:line="163" pos:column="14">TH_STATE_STOPPED<pos:position pos:line="163" pos:column="30"/></name></expr>:<pos:position pos:line="163" pos:column="31"/></case>
        <comment type="block" pos:line="164" pos:column="9">/* What exactly is `halted'? */</comment>
        <case pos:line="165" pos:column="9">case <expr><name pos:line="165" pos:column="14">TH_STATE_HALTED<pos:position pos:line="165" pos:column="29"/></name></expr>:<pos:position pos:line="165" pos:column="30"/></case>
          <expr_stmt><expr><name pos:line="166" pos:column="11">stopped<pos:position pos:line="166" pos:column="18"/></name><operator pos:line="166" pos:column="18">++<pos:position pos:line="166" pos:column="20"/></operator></expr>;<pos:position pos:line="166" pos:column="21"/></expr_stmt>
          <break pos:line="167" pos:column="11">break;<pos:position pos:line="167" pos:column="17"/></break>
        <case pos:line="168" pos:column="9">case <expr><name pos:line="168" pos:column="14">TH_STATE_WAITING<pos:position pos:line="168" pos:column="30"/></name></expr>:<pos:position pos:line="168" pos:column="31"/></case>
          <expr_stmt><expr><name pos:line="169" pos:column="11">sleeping<pos:position pos:line="169" pos:column="19"/></name><operator pos:line="169" pos:column="19">++<pos:position pos:line="169" pos:column="21"/></operator></expr>;<pos:position pos:line="169" pos:column="22"/></expr_stmt>
          <break pos:line="170" pos:column="11">break;<pos:position pos:line="170" pos:column="17"/></break>
        <case pos:line="171" pos:column="9">case <expr><name pos:line="171" pos:column="14">TH_STATE_UNINTERRUPTIBLE<pos:position pos:line="171" pos:column="38"/></name></expr>:<pos:position pos:line="171" pos:column="39"/></case>
          <expr_stmt><expr><name pos:line="172" pos:column="11">blocked<pos:position pos:line="172" pos:column="18"/></name><operator pos:line="172" pos:column="18">++<pos:position pos:line="172" pos:column="20"/></operator></expr>;<pos:position pos:line="172" pos:column="21"/></expr_stmt>
          <break pos:line="173" pos:column="11">break;<pos:position pos:line="173" pos:column="17"/></break>
        <comment type="block" pos:line="174" pos:column="9">/* There is no `zombie' case here,
         * since there are no zombie-threads.
         * There's only zombie tasks, which are
         * handled above. */</comment>
        <default pos:line="178" pos:column="9">default:<pos:position pos:line="178" pos:column="17"/></default>
          <expr_stmt><expr><call><name pos:line="179" pos:column="11">WARNING<pos:position pos:line="179" pos:column="18"/></name><argument_list pos:line="179" pos:column="18">(<argument><expr><literal type="string" pos:line="179" pos:column="19">"Unknown thread status: %i"<pos:position pos:line="179" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="179" pos:column="48">thread_data<pos:position pos:line="179" pos:column="59"/></name><operator pos:line="179" pos:column="59">.<pos:position pos:line="179" pos:column="60"/></operator><name pos:line="179" pos:column="60">run_state<pos:position pos:line="179" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="71"/></expr_stmt>
          <break pos:line="180" pos:column="11">break;<pos:position pos:line="180" pos:column="17"/></break>
        }<pos:position pos:line="181" pos:column="10"/></block></switch> <comment type="block" pos:line="181" pos:column="11">/* switch (thread_data.run_state) */</comment>

        <if pos:line="183" pos:column="9">if <condition pos:line="183" pos:column="12">(<expr><name><name pos:line="183" pos:column="13">task_list<pos:position pos:line="183" pos:column="22"/></name><index pos:line="183" pos:column="22">[<expr><name pos:line="183" pos:column="23">task<pos:position pos:line="183" pos:column="27"/></name></expr>]<pos:position pos:line="183" pos:column="28"/></index></name> <operator pos:line="183" pos:column="29">!=<pos:position pos:line="183" pos:column="31"/></operator> <name pos:line="183" pos:column="32">port_task_self<pos:position pos:line="183" pos:column="46"/></name></expr>)<pos:position pos:line="183" pos:column="47"/></condition><then pos:line="183" pos:column="47"> <block pos:line="183" pos:column="48">{
          <expr_stmt><expr><name pos:line="184" pos:column="11">status<pos:position pos:line="184" pos:column="17"/></name> <operator pos:line="184" pos:column="18">=<pos:position pos:line="184" pos:column="19"/></operator> <call><name pos:line="184" pos:column="20">mach_port_deallocate<pos:position pos:line="184" pos:column="40"/></name><argument_list pos:line="184" pos:column="40">(<argument><expr><name pos:line="184" pos:column="41">port_task_self<pos:position pos:line="184" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="57">thread_list<pos:position pos:line="184" pos:column="68"/></name><index pos:line="184" pos:column="68">[<expr><name pos:line="184" pos:column="69">thread<pos:position pos:line="184" pos:column="75"/></name></expr>]<pos:position pos:line="184" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="184" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="78"/></expr_stmt>
          <if pos:line="185" pos:column="11">if <condition pos:line="185" pos:column="14">(<expr><name pos:line="185" pos:column="15">status<pos:position pos:line="185" pos:column="21"/></name> <operator pos:line="185" pos:column="22">!=<pos:position pos:line="185" pos:column="24"/></operator> <name pos:line="185" pos:column="25">KERN_SUCCESS<pos:position pos:line="185" pos:column="37"/></name></expr>)<pos:position pos:line="185" pos:column="38"/></condition><then pos:line="185" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="13">ERROR<pos:position pos:line="186" pos:column="18"/></name><argument_list pos:line="186" pos:column="18">(<argument><expr><literal type="string" pos:line="186" pos:column="19">"mach_port_deallocate failed: %s"<pos:position pos:line="186" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="186" pos:column="54">mach_error_string<pos:position pos:line="186" pos:column="71"/></name><argument_list pos:line="186" pos:column="71">(<argument><expr><name pos:line="186" pos:column="72">status<pos:position pos:line="186" pos:column="78"/></name></expr></argument>)<pos:position pos:line="186" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="186" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="81"/></expr_stmt></block></then></if>
        }<pos:position pos:line="187" pos:column="10"/></block></then></if>
      }<pos:position pos:line="188" pos:column="8"/></block></for> <comment type="block" pos:line="188" pos:column="9">/* for (thread_list) */</comment>

      <if pos:line="190" pos:column="7">if <condition pos:line="190" pos:column="10">(<expr><operator pos:line="190" pos:column="11">(<pos:position pos:line="190" pos:column="12"/></operator><name pos:line="190" pos:column="12">status<pos:position pos:line="190" pos:column="18"/></name> <operator pos:line="190" pos:column="19">=<pos:position pos:line="190" pos:column="20"/></operator> <call><name pos:line="190" pos:column="21">vm_deallocate<pos:position pos:line="190" pos:column="34"/></name><argument_list pos:line="190" pos:column="34">(<argument><expr><name pos:line="190" pos:column="35">port_task_self<pos:position pos:line="190" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="190" pos:column="51">(<pos:position pos:line="190" pos:column="52"/></operator><name pos:line="190" pos:column="52">vm_address_t<pos:position pos:line="190" pos:column="64"/></name><operator pos:line="190" pos:column="64">)<pos:position pos:line="190" pos:column="65"/></operator><name pos:line="190" pos:column="65">thread_list<pos:position pos:line="190" pos:column="76"/></name></expr></argument>,
                                  <argument><expr><name pos:line="191" pos:column="35">thread_list_len<pos:position pos:line="191" pos:column="50"/></name> <operator pos:line="191" pos:column="51">*<pos:position pos:line="191" pos:column="52"/></operator> <sizeof pos:line="191" pos:column="53">sizeof<argument_list pos:line="191" pos:column="59">(<argument><expr><name pos:line="191" pos:column="60">thread_act_t<pos:position pos:line="191" pos:column="72"/></name></expr></argument>)<pos:position pos:line="191" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="191" pos:column="74"/></argument_list></call><operator pos:line="191" pos:column="74">)<pos:position pos:line="191" pos:column="75"/></operator> <operator pos:line="191" pos:column="76">!=<pos:position pos:line="191" pos:column="78"/></operator>
          <name pos:line="192" pos:column="11">KERN_SUCCESS<pos:position pos:line="192" pos:column="23"/></name></expr>)<pos:position pos:line="192" pos:column="24"/></condition><then pos:line="192" pos:column="24"> <block pos:line="192" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">ERROR<pos:position pos:line="193" pos:column="14"/></name><argument_list pos:line="193" pos:column="14">(<argument><expr><literal type="string" pos:line="193" pos:column="15">"vm_deallocate failed: %s"<pos:position pos:line="193" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="193" pos:column="43">mach_error_string<pos:position pos:line="193" pos:column="60"/></name><argument_list pos:line="193" pos:column="60">(<argument><expr><name pos:line="193" pos:column="61">status<pos:position pos:line="193" pos:column="67"/></name></expr></argument>)<pos:position pos:line="193" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="193" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="70"/></expr_stmt>
      }<pos:position pos:line="194" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="195" pos:column="7">thread_list<pos:position pos:line="195" pos:column="18"/></name> <operator pos:line="195" pos:column="19">=<pos:position pos:line="195" pos:column="20"/></operator> <name pos:line="195" pos:column="21">NULL<pos:position pos:line="195" pos:column="25"/></name></expr>;<pos:position pos:line="195" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><name pos:line="196" pos:column="7">thread_list_len<pos:position pos:line="196" pos:column="22"/></name> <operator pos:line="196" pos:column="23">=<pos:position pos:line="196" pos:column="24"/></operator> <literal type="number" pos:line="196" pos:column="25">0<pos:position pos:line="196" pos:column="26"/></literal></expr>;<pos:position pos:line="196" pos:column="27"/></expr_stmt>

      <comment type="block" pos:line="198" pos:column="7">/* Only deallocate the task port, if it isn't our own.
       * Don't know what would happen in that case, but this
       * is what Apple's top does.. ;) */</comment>
      <if pos:line="201" pos:column="7">if <condition pos:line="201" pos:column="10">(<expr><name><name pos:line="201" pos:column="11">task_list<pos:position pos:line="201" pos:column="20"/></name><index pos:line="201" pos:column="20">[<expr><name pos:line="201" pos:column="21">task<pos:position pos:line="201" pos:column="25"/></name></expr>]<pos:position pos:line="201" pos:column="26"/></index></name> <operator pos:line="201" pos:column="27">!=<pos:position pos:line="201" pos:column="29"/></operator> <name pos:line="201" pos:column="30">port_task_self<pos:position pos:line="201" pos:column="44"/></name></expr>)<pos:position pos:line="201" pos:column="45"/></condition><then pos:line="201" pos:column="45"> <block pos:line="201" pos:column="46">{
        <expr_stmt><expr><name pos:line="202" pos:column="9">status<pos:position pos:line="202" pos:column="15"/></name> <operator pos:line="202" pos:column="16">=<pos:position pos:line="202" pos:column="17"/></operator> <call><name pos:line="202" pos:column="18">mach_port_deallocate<pos:position pos:line="202" pos:column="38"/></name><argument_list pos:line="202" pos:column="38">(<argument><expr><name pos:line="202" pos:column="39">port_task_self<pos:position pos:line="202" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="202" pos:column="55">task_list<pos:position pos:line="202" pos:column="64"/></name><index pos:line="202" pos:column="64">[<expr><name pos:line="202" pos:column="65">task<pos:position pos:line="202" pos:column="69"/></name></expr>]<pos:position pos:line="202" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="202" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="72"/></expr_stmt>
        <if pos:line="203" pos:column="9">if <condition pos:line="203" pos:column="12">(<expr><name pos:line="203" pos:column="13">status<pos:position pos:line="203" pos:column="19"/></name> <operator pos:line="203" pos:column="20">!=<pos:position pos:line="203" pos:column="22"/></operator> <name pos:line="203" pos:column="23">KERN_SUCCESS<pos:position pos:line="203" pos:column="35"/></name></expr>)<pos:position pos:line="203" pos:column="36"/></condition><then pos:line="203" pos:column="36">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="204" pos:column="11">ERROR<pos:position pos:line="204" pos:column="16"/></name><argument_list pos:line="204" pos:column="16">(<argument><expr><literal type="string" pos:line="204" pos:column="17">"mach_port_deallocate failed: %s"<pos:position pos:line="204" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="204" pos:column="52">mach_error_string<pos:position pos:line="204" pos:column="69"/></name><argument_list pos:line="204" pos:column="69">(<argument><expr><name pos:line="204" pos:column="70">status<pos:position pos:line="204" pos:column="76"/></name></expr></argument>)<pos:position pos:line="204" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="204" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="79"/></expr_stmt></block></then></if>
      }<pos:position pos:line="205" pos:column="8"/></block></then></if>

      <if pos:line="207" pos:column="7">if <condition pos:line="207" pos:column="10">(<expr><name pos:line="207" pos:column="11">ps<pos:position pos:line="207" pos:column="13"/></name> <operator pos:line="207" pos:column="14">!=<pos:position pos:line="207" pos:column="16"/></operator> <name pos:line="207" pos:column="17">NULL<pos:position pos:line="207" pos:column="21"/></name></expr>)<pos:position pos:line="207" pos:column="22"/></condition><then pos:line="207" pos:column="22">
        <comment type="block" pos:line="208" pos:column="9">/* FIXME: cmdline should be here instead of NULL */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="209" pos:column="9">ps_list_add<pos:position pos:line="209" pos:column="20"/></name><argument_list pos:line="209" pos:column="20">(<argument><expr><name pos:line="209" pos:column="21">task_name<pos:position pos:line="209" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="32">NULL<pos:position pos:line="209" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="209" pos:column="38">&amp;<pos:position pos:line="209" pos:column="43"/></operator><name pos:line="209" pos:column="39">pse<pos:position pos:line="209" pos:column="42"/></name></expr></argument>)<pos:position pos:line="209" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="44"/></expr_stmt></block></then></if>
    }<pos:position pos:line="210" pos:column="6"/></block></for> <comment type="block" pos:line="210" pos:column="7">/* for (task_list) */</comment>

    <if pos:line="212" pos:column="5">if <condition pos:line="212" pos:column="8">(<expr><operator pos:line="212" pos:column="9">(<pos:position pos:line="212" pos:column="10"/></operator><name pos:line="212" pos:column="10">status<pos:position pos:line="212" pos:column="16"/></name> <operator pos:line="212" pos:column="17">=<pos:position pos:line="212" pos:column="18"/></operator> <call><name pos:line="212" pos:column="19">vm_deallocate<pos:position pos:line="212" pos:column="32"/></name><argument_list pos:line="212" pos:column="32">(<argument><expr><name pos:line="212" pos:column="33">port_task_self<pos:position pos:line="212" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="212" pos:column="49">(<pos:position pos:line="212" pos:column="50"/></operator><name pos:line="212" pos:column="50">vm_address_t<pos:position pos:line="212" pos:column="62"/></name><operator pos:line="212" pos:column="62">)<pos:position pos:line="212" pos:column="63"/></operator><name pos:line="212" pos:column="63">task_list<pos:position pos:line="212" pos:column="72"/></name></expr></argument>,
                                <argument><expr><name pos:line="213" pos:column="33">task_list_len<pos:position pos:line="213" pos:column="46"/></name> <operator pos:line="213" pos:column="47">*<pos:position pos:line="213" pos:column="48"/></operator> <sizeof pos:line="213" pos:column="49">sizeof<argument_list pos:line="213" pos:column="55">(<argument><expr><name pos:line="213" pos:column="56">task_t<pos:position pos:line="213" pos:column="62"/></name></expr></argument>)<pos:position pos:line="213" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="213" pos:column="64"/></argument_list></call><operator pos:line="213" pos:column="64">)<pos:position pos:line="213" pos:column="65"/></operator> <operator pos:line="213" pos:column="66">!=<pos:position pos:line="213" pos:column="68"/></operator>
        <name pos:line="214" pos:column="9">KERN_SUCCESS<pos:position pos:line="214" pos:column="21"/></name></expr>)<pos:position pos:line="214" pos:column="22"/></condition><then pos:line="214" pos:column="22"> <block pos:line="214" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="215" pos:column="7">ERROR<pos:position pos:line="215" pos:column="12"/></name><argument_list pos:line="215" pos:column="12">(<argument><expr><literal type="string" pos:line="215" pos:column="13">"vm_deallocate failed: %s"<pos:position pos:line="215" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name pos:line="215" pos:column="41">mach_error_string<pos:position pos:line="215" pos:column="58"/></name><argument_list pos:line="215" pos:column="58">(<argument><expr><name pos:line="215" pos:column="59">status<pos:position pos:line="215" pos:column="65"/></name></expr></argument>)<pos:position pos:line="215" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="215" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="216" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="217" pos:column="5">task_list<pos:position pos:line="217" pos:column="14"/></name> <operator pos:line="217" pos:column="15">=<pos:position pos:line="217" pos:column="16"/></operator> <name pos:line="217" pos:column="17">NULL<pos:position pos:line="217" pos:column="21"/></name></expr>;<pos:position pos:line="217" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="218" pos:column="5">task_list_len<pos:position pos:line="218" pos:column="18"/></name> <operator pos:line="218" pos:column="19">=<pos:position pos:line="218" pos:column="20"/></operator> <literal type="number" pos:line="218" pos:column="21">0<pos:position pos:line="218" pos:column="22"/></literal></expr>;<pos:position pos:line="218" pos:column="23"/></expr_stmt>

    <if pos:line="220" pos:column="5">if <condition pos:line="220" pos:column="8">(<expr><operator pos:line="220" pos:column="9">(<pos:position pos:line="220" pos:column="10"/></operator><name pos:line="220" pos:column="10">status<pos:position pos:line="220" pos:column="16"/></name> <operator pos:line="220" pos:column="17">=<pos:position pos:line="220" pos:column="18"/></operator> <call><name pos:line="220" pos:column="19">mach_port_deallocate<pos:position pos:line="220" pos:column="39"/></name><argument_list pos:line="220" pos:column="39">(<argument><expr><name pos:line="220" pos:column="40">port_task_self<pos:position pos:line="220" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="220" pos:column="56">port_pset_priv<pos:position pos:line="220" pos:column="70"/></name></expr></argument>)<pos:position pos:line="220" pos:column="71"/></argument_list></call><operator pos:line="220" pos:column="71">)<pos:position pos:line="220" pos:column="72"/></operator> <operator pos:line="220" pos:column="73">!=<pos:position pos:line="220" pos:column="75"/></operator>
        <name pos:line="221" pos:column="9">KERN_SUCCESS<pos:position pos:line="221" pos:column="21"/></name></expr>)<pos:position pos:line="221" pos:column="22"/></condition><then pos:line="221" pos:column="22"> <block pos:line="221" pos:column="23">{
      <expr_stmt><expr><call><name pos:line="222" pos:column="7">ERROR<pos:position pos:line="222" pos:column="12"/></name><argument_list pos:line="222" pos:column="12">(<argument><expr><literal type="string" pos:line="222" pos:column="13">"mach_port_deallocate failed: %s"<pos:position pos:line="222" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="222" pos:column="48">mach_error_string<pos:position pos:line="222" pos:column="65"/></name><argument_list pos:line="222" pos:column="65">(<argument><expr><name pos:line="222" pos:column="66">status<pos:position pos:line="222" pos:column="72"/></name></expr></argument>)<pos:position pos:line="222" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="222" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="223" pos:column="6"/></block></then></if>
  }<pos:position pos:line="224" pos:column="4"/></block></for> <comment type="block" pos:line="224" pos:column="5">/* for (pset_list) */</comment>

  <expr_stmt><expr><call><name pos:line="226" pos:column="3">ps_submit_state<pos:position pos:line="226" pos:column="18"/></name><argument_list pos:line="226" pos:column="18">(<argument><expr><literal type="string" pos:line="226" pos:column="19">"running"<pos:position pos:line="226" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="30">running<pos:position pos:line="226" pos:column="37"/></name></expr></argument>)<pos:position pos:line="226" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="227" pos:column="3">ps_submit_state<pos:position pos:line="227" pos:column="18"/></name><argument_list pos:line="227" pos:column="18">(<argument><expr><literal type="string" pos:line="227" pos:column="19">"sleeping"<pos:position pos:line="227" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="227" pos:column="31">sleeping<pos:position pos:line="227" pos:column="39"/></name></expr></argument>)<pos:position pos:line="227" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="227" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="228" pos:column="3">ps_submit_state<pos:position pos:line="228" pos:column="18"/></name><argument_list pos:line="228" pos:column="18">(<argument><expr><literal type="string" pos:line="228" pos:column="19">"zombies"<pos:position pos:line="228" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="228" pos:column="30">zombies<pos:position pos:line="228" pos:column="37"/></name></expr></argument>)<pos:position pos:line="228" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="228" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="229" pos:column="3">ps_submit_state<pos:position pos:line="229" pos:column="18"/></name><argument_list pos:line="229" pos:column="18">(<argument><expr><literal type="string" pos:line="229" pos:column="19">"stopped"<pos:position pos:line="229" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="229" pos:column="30">stopped<pos:position pos:line="229" pos:column="37"/></name></expr></argument>)<pos:position pos:line="229" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="230" pos:column="3">ps_submit_state<pos:position pos:line="230" pos:column="18"/></name><argument_list pos:line="230" pos:column="18">(<argument><expr><literal type="string" pos:line="230" pos:column="19">"blocked"<pos:position pos:line="230" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="230" pos:column="30">blocked<pos:position pos:line="230" pos:column="37"/></name></expr></argument>)<pos:position pos:line="230" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="39"/></expr_stmt>

  <for pos:line="232" pos:column="3">for <control pos:line="232" pos:column="7">(<init><expr><name pos:line="232" pos:column="8">ps<pos:position pos:line="232" pos:column="10"/></name> <operator pos:line="232" pos:column="11">=<pos:position pos:line="232" pos:column="12"/></operator> <name pos:line="232" pos:column="13">list_head_g<pos:position pos:line="232" pos:column="24"/></name></expr>;<pos:position pos:line="232" pos:column="25"/></init> <condition><expr><name pos:line="232" pos:column="26">ps<pos:position pos:line="232" pos:column="28"/></name> <operator pos:line="232" pos:column="29">!=<pos:position pos:line="232" pos:column="31"/></operator> <name pos:line="232" pos:column="32">NULL<pos:position pos:line="232" pos:column="36"/></name></expr>;<pos:position pos:line="232" pos:column="37"/></condition> <incr><expr><name pos:line="232" pos:column="38">ps<pos:position pos:line="232" pos:column="40"/></name> <operator pos:line="232" pos:column="41">=<pos:position pos:line="232" pos:column="42"/></operator> <name><name pos:line="232" pos:column="43">ps<pos:position pos:line="232" pos:column="45"/></name><operator pos:line="232" pos:column="45">-&gt;<pos:position pos:line="232" pos:column="50"/></operator><name pos:line="232" pos:column="47">next<pos:position pos:line="232" pos:column="51"/></name></name></expr></incr>)<pos:position pos:line="232" pos:column="52"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="233" pos:column="5">ps_submit_proc_list<pos:position pos:line="233" pos:column="24"/></name><argument_list pos:line="233" pos:column="24">(<argument><expr><name pos:line="233" pos:column="25">ps<pos:position pos:line="233" pos:column="27"/></name></expr></argument>)<pos:position pos:line="233" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="29"/></expr_stmt></block></for>
<comment type="block" pos:line="234" pos:column="1">/* #endif HAVE_THREAD_INFO */</comment>

<cpp:elif pos:line="236" pos:column="1">#<cpp:directive pos:line="236" pos:column="2">elif<pos:position pos:line="236" pos:column="6"/></cpp:directive> <expr><name pos:line="236" pos:column="7">KERNEL_LINUX<pos:position pos:line="236" pos:column="19"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="237" pos:column="3">int<pos:position pos:line="237" pos:column="6"/></name></type> <name pos:line="237" pos:column="7">running<pos:position pos:line="237" pos:column="14"/></name> <init pos:line="237" pos:column="15">= <expr><literal type="number" pos:line="237" pos:column="17">0<pos:position pos:line="237" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="237" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="238" pos:column="3">int<pos:position pos:line="238" pos:column="6"/></name></type> <name pos:line="238" pos:column="7">sleeping<pos:position pos:line="238" pos:column="15"/></name> <init pos:line="238" pos:column="16">= <expr><literal type="number" pos:line="238" pos:column="18">0<pos:position pos:line="238" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="238" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="239" pos:column="3">int<pos:position pos:line="239" pos:column="6"/></name></type> <name pos:line="239" pos:column="7">zombies<pos:position pos:line="239" pos:column="14"/></name> <init pos:line="239" pos:column="15">= <expr><literal type="number" pos:line="239" pos:column="17">0<pos:position pos:line="239" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="239" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="240" pos:column="3">int<pos:position pos:line="240" pos:column="6"/></name></type> <name pos:line="240" pos:column="7">stopped<pos:position pos:line="240" pos:column="14"/></name> <init pos:line="240" pos:column="15">= <expr><literal type="number" pos:line="240" pos:column="17">0<pos:position pos:line="240" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="240" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="241" pos:column="3">int<pos:position pos:line="241" pos:column="6"/></name></type> <name pos:line="241" pos:column="7">paging<pos:position pos:line="241" pos:column="13"/></name> <init pos:line="241" pos:column="14">= <expr><literal type="number" pos:line="241" pos:column="16">0<pos:position pos:line="241" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="241" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="242" pos:column="3">int<pos:position pos:line="242" pos:column="6"/></name></type> <name pos:line="242" pos:column="7">blocked<pos:position pos:line="242" pos:column="14"/></name> <init pos:line="242" pos:column="15">= <expr><literal type="number" pos:line="242" pos:column="17">0<pos:position pos:line="242" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="242" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="244" pos:column="3">struct<pos:position pos:line="244" pos:column="9"/></name> <name pos:line="244" pos:column="10">dirent<pos:position pos:line="244" pos:column="16"/></name></name> <modifier pos:line="244" pos:column="17">*<pos:position pos:line="244" pos:column="18"/></modifier></type><name pos:line="244" pos:column="18">ent<pos:position pos:line="244" pos:column="21"/></name></decl>;<pos:position pos:line="244" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="245" pos:column="3">DIR<pos:position pos:line="245" pos:column="6"/></name> <modifier pos:line="245" pos:column="7">*<pos:position pos:line="245" pos:column="8"/></modifier></type><name pos:line="245" pos:column="8">proc<pos:position pos:line="245" pos:column="12"/></name></decl>;<pos:position pos:line="245" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="246" pos:column="3">long<pos:position pos:line="246" pos:column="7"/></name></type> <name pos:line="246" pos:column="8">pid<pos:position pos:line="246" pos:column="11"/></name></decl>;<pos:position pos:line="246" pos:column="12"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="248" pos:column="3">char<pos:position pos:line="248" pos:column="7"/></name></type> <name><name pos:line="248" pos:column="8">cmdline<pos:position pos:line="248" pos:column="15"/></name><index pos:line="248" pos:column="15">[<expr><name pos:line="248" pos:column="16">CMDLINE_BUFFER_SIZE<pos:position pos:line="248" pos:column="35"/></name></expr>]<pos:position pos:line="248" pos:column="36"/></index></name></decl>;<pos:position pos:line="248" pos:column="37"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="250" pos:column="3">int<pos:position pos:line="250" pos:column="6"/></name></type> <name pos:line="250" pos:column="7">status<pos:position pos:line="250" pos:column="13"/></name></decl>;<pos:position pos:line="250" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="251" pos:column="3">process_entry_t<pos:position pos:line="251" pos:column="18"/></name></type> <name pos:line="251" pos:column="19">pse<pos:position pos:line="251" pos:column="22"/></name></decl>;<pos:position pos:line="251" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="252" pos:column="3">char<pos:position pos:line="252" pos:column="7"/></name></type> <name pos:line="252" pos:column="8">state<pos:position pos:line="252" pos:column="13"/></name></decl>;<pos:position pos:line="252" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="254" pos:column="3">running<pos:position pos:line="254" pos:column="10"/></name> <operator pos:line="254" pos:column="11">=<pos:position pos:line="254" pos:column="12"/></operator> <name pos:line="254" pos:column="13">sleeping<pos:position pos:line="254" pos:column="21"/></name> <operator pos:line="254" pos:column="22">=<pos:position pos:line="254" pos:column="23"/></operator> <name pos:line="254" pos:column="24">zombies<pos:position pos:line="254" pos:column="31"/></name> <operator pos:line="254" pos:column="32">=<pos:position pos:line="254" pos:column="33"/></operator> <name pos:line="254" pos:column="34">stopped<pos:position pos:line="254" pos:column="41"/></name> <operator pos:line="254" pos:column="42">=<pos:position pos:line="254" pos:column="43"/></operator> <name pos:line="254" pos:column="44">paging<pos:position pos:line="254" pos:column="50"/></name> <operator pos:line="254" pos:column="51">=<pos:position pos:line="254" pos:column="52"/></operator> <name pos:line="254" pos:column="53">blocked<pos:position pos:line="254" pos:column="60"/></name> <operator pos:line="254" pos:column="61">=<pos:position pos:line="254" pos:column="62"/></operator> <literal type="number" pos:line="254" pos:column="63">0<pos:position pos:line="254" pos:column="64"/></literal></expr>;<pos:position pos:line="254" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="255" pos:column="3">ps_list_reset<pos:position pos:line="255" pos:column="16"/></name><argument_list pos:line="255" pos:column="16">()<pos:position pos:line="255" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="19"/></expr_stmt>

  <if pos:line="257" pos:column="3">if <condition pos:line="257" pos:column="6">(<expr><operator pos:line="257" pos:column="7">(<pos:position pos:line="257" pos:column="8"/></operator><name pos:line="257" pos:column="8">proc<pos:position pos:line="257" pos:column="12"/></name> <operator pos:line="257" pos:column="13">=<pos:position pos:line="257" pos:column="14"/></operator> <call><name pos:line="257" pos:column="15">opendir<pos:position pos:line="257" pos:column="22"/></name><argument_list pos:line="257" pos:column="22">(<argument><expr><literal type="string" pos:line="257" pos:column="23">"/proc"<pos:position pos:line="257" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="31"/></argument_list></call><operator pos:line="257" pos:column="31">)<pos:position pos:line="257" pos:column="32"/></operator> <operator pos:line="257" pos:column="33">==<pos:position pos:line="257" pos:column="35"/></operator> <name pos:line="257" pos:column="36">NULL<pos:position pos:line="257" pos:column="40"/></name></expr>)<pos:position pos:line="257" pos:column="41"/></condition><then pos:line="257" pos:column="41"> <block pos:line="257" pos:column="42">{
    <decl_stmt><decl><type><name pos:line="258" pos:column="5">char<pos:position pos:line="258" pos:column="9"/></name></type> <name><name pos:line="258" pos:column="10">errbuf<pos:position pos:line="258" pos:column="16"/></name><index pos:line="258" pos:column="16">[<expr><literal type="number" pos:line="258" pos:column="17">1024<pos:position pos:line="258" pos:column="21"/></literal></expr>]<pos:position pos:line="258" pos:column="22"/></index></name></decl>;<pos:position pos:line="258" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="259" pos:column="5">ERROR<pos:position pos:line="259" pos:column="10"/></name><argument_list pos:line="259" pos:column="10">(<argument><expr><literal type="string" pos:line="259" pos:column="11">"Cannot open `/proc': %s"<pos:position pos:line="259" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="259" pos:column="38">sstrerror<pos:position pos:line="259" pos:column="47"/></name><argument_list pos:line="259" pos:column="47">(<argument><expr><name pos:line="259" pos:column="48">errno<pos:position pos:line="259" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="55">errbuf<pos:position pos:line="259" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="259" pos:column="63">sizeof<argument_list pos:line="259" pos:column="69">(<argument><expr><name pos:line="259" pos:column="70">errbuf<pos:position pos:line="259" pos:column="76"/></name></expr></argument>)<pos:position pos:line="259" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="259" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="259" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="80"/></expr_stmt>
    <return pos:line="260" pos:column="5">return <expr><operator pos:line="260" pos:column="12">-<pos:position pos:line="260" pos:column="13"/></operator><literal type="number" pos:line="260" pos:column="13">1<pos:position pos:line="260" pos:column="14"/></literal></expr>;<pos:position pos:line="260" pos:column="15"/></return>
  }<pos:position pos:line="261" pos:column="4"/></block></then></if>

  <while pos:line="263" pos:column="3">while <condition pos:line="263" pos:column="9">(<expr><operator pos:line="263" pos:column="10">(<pos:position pos:line="263" pos:column="11"/></operator><name pos:line="263" pos:column="11">ent<pos:position pos:line="263" pos:column="14"/></name> <operator pos:line="263" pos:column="15">=<pos:position pos:line="263" pos:column="16"/></operator> <call><name pos:line="263" pos:column="17">readdir<pos:position pos:line="263" pos:column="24"/></name><argument_list pos:line="263" pos:column="24">(<argument><expr><name pos:line="263" pos:column="25">proc<pos:position pos:line="263" pos:column="29"/></name></expr></argument>)<pos:position pos:line="263" pos:column="30"/></argument_list></call><operator pos:line="263" pos:column="30">)<pos:position pos:line="263" pos:column="31"/></operator> <operator pos:line="263" pos:column="32">!=<pos:position pos:line="263" pos:column="34"/></operator> <name pos:line="263" pos:column="35">NULL<pos:position pos:line="263" pos:column="39"/></name></expr>)<pos:position pos:line="263" pos:column="40"/></condition> <block pos:line="263" pos:column="41">{
    <if pos:line="264" pos:column="5">if <condition pos:line="264" pos:column="8">(<expr><operator pos:line="264" pos:column="9">!<pos:position pos:line="264" pos:column="10"/></operator><call><name pos:line="264" pos:column="10">isdigit<pos:position pos:line="264" pos:column="17"/></name><argument_list pos:line="264" pos:column="17">(<argument><expr><name><name pos:line="264" pos:column="18">ent<pos:position pos:line="264" pos:column="21"/></name><operator pos:line="264" pos:column="21">-&gt;<pos:position pos:line="264" pos:column="26"/></operator><name pos:line="264" pos:column="23">d_name<pos:position pos:line="264" pos:column="29"/></name><index pos:line="264" pos:column="29">[<expr><literal type="number" pos:line="264" pos:column="30">0<pos:position pos:line="264" pos:column="31"/></literal></expr>]<pos:position pos:line="264" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="264" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="264" pos:column="34"/></condition><then pos:line="264" pos:column="34">
      <block type="pseudo"><continue pos:line="265" pos:column="7">continue;<pos:position pos:line="265" pos:column="16"/></continue></block></then></if>

    <if pos:line="267" pos:column="5">if <condition pos:line="267" pos:column="8">(<expr><operator pos:line="267" pos:column="9">(<pos:position pos:line="267" pos:column="10"/></operator><name pos:line="267" pos:column="10">pid<pos:position pos:line="267" pos:column="13"/></name> <operator pos:line="267" pos:column="14">=<pos:position pos:line="267" pos:column="15"/></operator> <call><name pos:line="267" pos:column="16">atol<pos:position pos:line="267" pos:column="20"/></name><argument_list pos:line="267" pos:column="20">(<argument><expr><name><name pos:line="267" pos:column="21">ent<pos:position pos:line="267" pos:column="24"/></name><operator pos:line="267" pos:column="24">-&gt;<pos:position pos:line="267" pos:column="29"/></operator><name pos:line="267" pos:column="26">d_name<pos:position pos:line="267" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="267" pos:column="33"/></argument_list></call><operator pos:line="267" pos:column="33">)<pos:position pos:line="267" pos:column="34"/></operator> <operator pos:line="267" pos:column="35">&lt;<pos:position pos:line="267" pos:column="39"/></operator> <literal type="number" pos:line="267" pos:column="37">1<pos:position pos:line="267" pos:column="38"/></literal></expr>)<pos:position pos:line="267" pos:column="39"/></condition><then pos:line="267" pos:column="39">
      <block type="pseudo"><continue pos:line="268" pos:column="7">continue;<pos:position pos:line="268" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="270" pos:column="5">memset<pos:position pos:line="270" pos:column="11"/></name><argument_list pos:line="270" pos:column="11">(<argument><expr><operator pos:line="270" pos:column="12">&amp;<pos:position pos:line="270" pos:column="17"/></operator><name pos:line="270" pos:column="13">pse<pos:position pos:line="270" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="270" pos:column="18">0<pos:position pos:line="270" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="270" pos:column="21">sizeof<argument_list pos:line="270" pos:column="27">(<argument><expr><name pos:line="270" pos:column="28">pse<pos:position pos:line="270" pos:column="31"/></name></expr></argument>)<pos:position pos:line="270" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="270" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="271" pos:column="5">pse<pos:position pos:line="271" pos:column="8"/></name><operator pos:line="271" pos:column="8">.<pos:position pos:line="271" pos:column="9"/></operator><name pos:line="271" pos:column="9">id<pos:position pos:line="271" pos:column="11"/></name></name> <operator pos:line="271" pos:column="12">=<pos:position pos:line="271" pos:column="13"/></operator> <name pos:line="271" pos:column="14">pid<pos:position pos:line="271" pos:column="17"/></name></expr>;<pos:position pos:line="271" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="273" pos:column="5">status<pos:position pos:line="273" pos:column="11"/></name> <operator pos:line="273" pos:column="12">=<pos:position pos:line="273" pos:column="13"/></operator> <call><name pos:line="273" pos:column="14">ps_read_process<pos:position pos:line="273" pos:column="29"/></name><argument_list pos:line="273" pos:column="29">(<argument><expr><name pos:line="273" pos:column="30">pid<pos:position pos:line="273" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="273" pos:column="35">&amp;<pos:position pos:line="273" pos:column="40"/></operator><name pos:line="273" pos:column="36">pse<pos:position pos:line="273" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="273" pos:column="41">&amp;<pos:position pos:line="273" pos:column="46"/></operator><name pos:line="273" pos:column="42">state<pos:position pos:line="273" pos:column="47"/></name></expr></argument>)<pos:position pos:line="273" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="273" pos:column="49"/></expr_stmt>
    <if pos:line="274" pos:column="5">if <condition pos:line="274" pos:column="8">(<expr><name pos:line="274" pos:column="9">status<pos:position pos:line="274" pos:column="15"/></name> <operator pos:line="274" pos:column="16">!=<pos:position pos:line="274" pos:column="18"/></operator> <literal type="number" pos:line="274" pos:column="19">0<pos:position pos:line="274" pos:column="20"/></literal></expr>)<pos:position pos:line="274" pos:column="21"/></condition><then pos:line="274" pos:column="21"> <block pos:line="274" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="275" pos:column="7">DEBUG<pos:position pos:line="275" pos:column="12"/></name><argument_list pos:line="275" pos:column="12">(<argument><expr><literal type="string" pos:line="275" pos:column="13">"ps_read_process failed: %i"<pos:position pos:line="275" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="43">status<pos:position pos:line="275" pos:column="49"/></name></expr></argument>)<pos:position pos:line="275" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="51"/></expr_stmt>
      <continue pos:line="276" pos:column="7">continue;<pos:position pos:line="276" pos:column="16"/></continue>
    }<pos:position pos:line="277" pos:column="6"/></block></then></if>

    <switch pos:line="279" pos:column="5">switch <condition pos:line="279" pos:column="12">(<expr><name pos:line="279" pos:column="13">state<pos:position pos:line="279" pos:column="18"/></name></expr>)<pos:position pos:line="279" pos:column="19"/></condition> <block pos:line="279" pos:column="20">{
    <case pos:line="280" pos:column="5">case <expr><literal type="char" pos:line="280" pos:column="10">'R'<pos:position pos:line="280" pos:column="13"/></literal></expr>:<pos:position pos:line="280" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="281" pos:column="7">running<pos:position pos:line="281" pos:column="14"/></name><operator pos:line="281" pos:column="14">++<pos:position pos:line="281" pos:column="16"/></operator></expr>;<pos:position pos:line="281" pos:column="17"/></expr_stmt>
      <break pos:line="282" pos:column="7">break;<pos:position pos:line="282" pos:column="13"/></break>
    <case pos:line="283" pos:column="5">case <expr><literal type="char" pos:line="283" pos:column="10">'S'<pos:position pos:line="283" pos:column="13"/></literal></expr>:<pos:position pos:line="283" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="284" pos:column="7">sleeping<pos:position pos:line="284" pos:column="15"/></name><operator pos:line="284" pos:column="15">++<pos:position pos:line="284" pos:column="17"/></operator></expr>;<pos:position pos:line="284" pos:column="18"/></expr_stmt>
      <break pos:line="285" pos:column="7">break;<pos:position pos:line="285" pos:column="13"/></break>
    <case pos:line="286" pos:column="5">case <expr><literal type="char" pos:line="286" pos:column="10">'D'<pos:position pos:line="286" pos:column="13"/></literal></expr>:<pos:position pos:line="286" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="287" pos:column="7">blocked<pos:position pos:line="287" pos:column="14"/></name><operator pos:line="287" pos:column="14">++<pos:position pos:line="287" pos:column="16"/></operator></expr>;<pos:position pos:line="287" pos:column="17"/></expr_stmt>
      <break pos:line="288" pos:column="7">break;<pos:position pos:line="288" pos:column="13"/></break>
    <case pos:line="289" pos:column="5">case <expr><literal type="char" pos:line="289" pos:column="10">'Z'<pos:position pos:line="289" pos:column="13"/></literal></expr>:<pos:position pos:line="289" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="290" pos:column="7">zombies<pos:position pos:line="290" pos:column="14"/></name><operator pos:line="290" pos:column="14">++<pos:position pos:line="290" pos:column="16"/></operator></expr>;<pos:position pos:line="290" pos:column="17"/></expr_stmt>
      <break pos:line="291" pos:column="7">break;<pos:position pos:line="291" pos:column="13"/></break>
    <case pos:line="292" pos:column="5">case <expr><literal type="char" pos:line="292" pos:column="10">'T'<pos:position pos:line="292" pos:column="13"/></literal></expr>:<pos:position pos:line="292" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="293" pos:column="7">stopped<pos:position pos:line="293" pos:column="14"/></name><operator pos:line="293" pos:column="14">++<pos:position pos:line="293" pos:column="16"/></operator></expr>;<pos:position pos:line="293" pos:column="17"/></expr_stmt>
      <break pos:line="294" pos:column="7">break;<pos:position pos:line="294" pos:column="13"/></break>
    <case pos:line="295" pos:column="5">case <expr><literal type="char" pos:line="295" pos:column="10">'W'<pos:position pos:line="295" pos:column="13"/></literal></expr>:<pos:position pos:line="295" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="296" pos:column="7">paging<pos:position pos:line="296" pos:column="13"/></name><operator pos:line="296" pos:column="13">++<pos:position pos:line="296" pos:column="15"/></operator></expr>;<pos:position pos:line="296" pos:column="16"/></expr_stmt>
      <break pos:line="297" pos:column="7">break;<pos:position pos:line="297" pos:column="13"/></break>
    }<pos:position pos:line="298" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="300" pos:column="5">ps_list_add<pos:position pos:line="300" pos:column="16"/></name><argument_list pos:line="300" pos:column="16">(<argument><expr><name><name pos:line="300" pos:column="17">pse<pos:position pos:line="300" pos:column="20"/></name><operator pos:line="300" pos:column="20">.<pos:position pos:line="300" pos:column="21"/></operator><name pos:line="300" pos:column="21">name<pos:position pos:line="300" pos:column="25"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="301" pos:column="17">ps_get_cmdline<pos:position pos:line="301" pos:column="31"/></name><argument_list pos:line="301" pos:column="31">(<argument><expr><name pos:line="301" pos:column="32">pid<pos:position pos:line="301" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="301" pos:column="37">pse<pos:position pos:line="301" pos:column="40"/></name><operator pos:line="301" pos:column="40">.<pos:position pos:line="301" pos:column="41"/></operator><name pos:line="301" pos:column="41">name<pos:position pos:line="301" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="301" pos:column="47">cmdline<pos:position pos:line="301" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="301" pos:column="56">sizeof<argument_list pos:line="301" pos:column="62">(<argument><expr><name pos:line="301" pos:column="63">cmdline<pos:position pos:line="301" pos:column="70"/></name></expr></argument>)<pos:position pos:line="301" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="301" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="301" pos:column="74">&amp;<pos:position pos:line="301" pos:column="79"/></operator><name pos:line="301" pos:column="75">pse<pos:position pos:line="301" pos:column="78"/></name></expr></argument>)<pos:position pos:line="301" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="302" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="304" pos:column="3">closedir<pos:position pos:line="304" pos:column="11"/></name><argument_list pos:line="304" pos:column="11">(<argument><expr><name pos:line="304" pos:column="12">proc<pos:position pos:line="304" pos:column="16"/></name></expr></argument>)<pos:position pos:line="304" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="304" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="306" pos:column="3">ps_submit_state<pos:position pos:line="306" pos:column="18"/></name><argument_list pos:line="306" pos:column="18">(<argument><expr><literal type="string" pos:line="306" pos:column="19">"running"<pos:position pos:line="306" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="306" pos:column="30">running<pos:position pos:line="306" pos:column="37"/></name></expr></argument>)<pos:position pos:line="306" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="307" pos:column="3">ps_submit_state<pos:position pos:line="307" pos:column="18"/></name><argument_list pos:line="307" pos:column="18">(<argument><expr><literal type="string" pos:line="307" pos:column="19">"sleeping"<pos:position pos:line="307" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="307" pos:column="31">sleeping<pos:position pos:line="307" pos:column="39"/></name></expr></argument>)<pos:position pos:line="307" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="307" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="308" pos:column="3">ps_submit_state<pos:position pos:line="308" pos:column="18"/></name><argument_list pos:line="308" pos:column="18">(<argument><expr><literal type="string" pos:line="308" pos:column="19">"zombies"<pos:position pos:line="308" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="308" pos:column="30">zombies<pos:position pos:line="308" pos:column="37"/></name></expr></argument>)<pos:position pos:line="308" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="309" pos:column="3">ps_submit_state<pos:position pos:line="309" pos:column="18"/></name><argument_list pos:line="309" pos:column="18">(<argument><expr><literal type="string" pos:line="309" pos:column="19">"stopped"<pos:position pos:line="309" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="309" pos:column="30">stopped<pos:position pos:line="309" pos:column="37"/></name></expr></argument>)<pos:position pos:line="309" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="309" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="310" pos:column="3">ps_submit_state<pos:position pos:line="310" pos:column="18"/></name><argument_list pos:line="310" pos:column="18">(<argument><expr><literal type="string" pos:line="310" pos:column="19">"paging"<pos:position pos:line="310" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="310" pos:column="29">paging<pos:position pos:line="310" pos:column="35"/></name></expr></argument>)<pos:position pos:line="310" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="311" pos:column="3">ps_submit_state<pos:position pos:line="311" pos:column="18"/></name><argument_list pos:line="311" pos:column="18">(<argument><expr><literal type="string" pos:line="311" pos:column="19">"blocked"<pos:position pos:line="311" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="311" pos:column="30">blocked<pos:position pos:line="311" pos:column="37"/></name></expr></argument>)<pos:position pos:line="311" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="39"/></expr_stmt>

  <for pos:line="313" pos:column="3">for <control pos:line="313" pos:column="7">(<init><decl><type><name pos:line="313" pos:column="8">procstat_t<pos:position pos:line="313" pos:column="18"/></name> <modifier pos:line="313" pos:column="19">*<pos:position pos:line="313" pos:column="20"/></modifier></type><name pos:line="313" pos:column="20">ps_ptr<pos:position pos:line="313" pos:column="26"/></name> <init pos:line="313" pos:column="27">= <expr><name pos:line="313" pos:column="29">list_head_g<pos:position pos:line="313" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="313" pos:column="41"/></init> <condition><expr><name pos:line="313" pos:column="42">ps_ptr<pos:position pos:line="313" pos:column="48"/></name> <operator pos:line="313" pos:column="49">!=<pos:position pos:line="313" pos:column="51"/></operator> <name pos:line="313" pos:column="52">NULL<pos:position pos:line="313" pos:column="56"/></name></expr>;<pos:position pos:line="313" pos:column="57"/></condition> <incr><expr><name pos:line="313" pos:column="58">ps_ptr<pos:position pos:line="313" pos:column="64"/></name> <operator pos:line="313" pos:column="65">=<pos:position pos:line="313" pos:column="66"/></operator> <name><name pos:line="313" pos:column="67">ps_ptr<pos:position pos:line="313" pos:column="73"/></name><operator pos:line="313" pos:column="73">-&gt;<pos:position pos:line="313" pos:column="78"/></operator><name pos:line="313" pos:column="75">next<pos:position pos:line="313" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="313" pos:column="80"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="314" pos:column="5">ps_submit_proc_list<pos:position pos:line="314" pos:column="24"/></name><argument_list pos:line="314" pos:column="24">(<argument><expr><name pos:line="314" pos:column="25">ps_ptr<pos:position pos:line="314" pos:column="31"/></name></expr></argument>)<pos:position pos:line="314" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="33"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="316" pos:column="3">read_fork_rate<pos:position pos:line="316" pos:column="17"/></name><argument_list pos:line="316" pos:column="17">()<pos:position pos:line="316" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="20"/></expr_stmt>
<comment type="block" pos:line="317" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="319" pos:column="1">#<cpp:directive pos:line="319" pos:column="2">elif<pos:position pos:line="319" pos:column="6"/></cpp:directive> <expr><name pos:line="319" pos:column="7">HAVE_LIBKVM_GETPROCS<pos:position pos:line="319" pos:column="27"/></name> <operator pos:line="319" pos:column="28">&amp;&amp;<pos:position pos:line="319" pos:column="38"/></operator> <name pos:line="319" pos:column="31">HAVE_STRUCT_KINFO_PROC_FREEBSD<pos:position pos:line="319" pos:column="61"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="320" pos:column="3">int<pos:position pos:line="320" pos:column="6"/></name></type> <name pos:line="320" pos:column="7">running<pos:position pos:line="320" pos:column="14"/></name> <init pos:line="320" pos:column="15">= <expr><literal type="number" pos:line="320" pos:column="17">0<pos:position pos:line="320" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="320" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="321" pos:column="3">int<pos:position pos:line="321" pos:column="6"/></name></type> <name pos:line="321" pos:column="7">sleeping<pos:position pos:line="321" pos:column="15"/></name> <init pos:line="321" pos:column="16">= <expr><literal type="number" pos:line="321" pos:column="18">0<pos:position pos:line="321" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="321" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="322" pos:column="3">int<pos:position pos:line="322" pos:column="6"/></name></type> <name pos:line="322" pos:column="7">zombies<pos:position pos:line="322" pos:column="14"/></name> <init pos:line="322" pos:column="15">= <expr><literal type="number" pos:line="322" pos:column="17">0<pos:position pos:line="322" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="322" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="323" pos:column="3">int<pos:position pos:line="323" pos:column="6"/></name></type> <name pos:line="323" pos:column="7">stopped<pos:position pos:line="323" pos:column="14"/></name> <init pos:line="323" pos:column="15">= <expr><literal type="number" pos:line="323" pos:column="17">0<pos:position pos:line="323" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="323" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="324" pos:column="3">int<pos:position pos:line="324" pos:column="6"/></name></type> <name pos:line="324" pos:column="7">blocked<pos:position pos:line="324" pos:column="14"/></name> <init pos:line="324" pos:column="15">= <expr><literal type="number" pos:line="324" pos:column="17">0<pos:position pos:line="324" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="324" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="325" pos:column="3">int<pos:position pos:line="325" pos:column="6"/></name></type> <name pos:line="325" pos:column="7">idle<pos:position pos:line="325" pos:column="11"/></name> <init pos:line="325" pos:column="12">= <expr><literal type="number" pos:line="325" pos:column="14">0<pos:position pos:line="325" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="325" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="326" pos:column="3">int<pos:position pos:line="326" pos:column="6"/></name></type> <name pos:line="326" pos:column="7">wait<pos:position pos:line="326" pos:column="11"/></name> <init pos:line="326" pos:column="12">= <expr><literal type="number" pos:line="326" pos:column="14">0<pos:position pos:line="326" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="326" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="328" pos:column="3">kvm_t<pos:position pos:line="328" pos:column="8"/></name> <modifier pos:line="328" pos:column="9">*<pos:position pos:line="328" pos:column="10"/></modifier></type><name pos:line="328" pos:column="10">kd<pos:position pos:line="328" pos:column="12"/></name></decl>;<pos:position pos:line="328" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="329" pos:column="3">char<pos:position pos:line="329" pos:column="7"/></name></type> <name><name pos:line="329" pos:column="8">errbuf<pos:position pos:line="329" pos:column="14"/></name><index pos:line="329" pos:column="14">[<expr><name pos:line="329" pos:column="15">_POSIX2_LINE_MAX<pos:position pos:line="329" pos:column="31"/></name></expr>]<pos:position pos:line="329" pos:column="32"/></index></name></decl>;<pos:position pos:line="329" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="330" pos:column="3">struct<pos:position pos:line="330" pos:column="9"/></name> <name pos:line="330" pos:column="10">kinfo_proc<pos:position pos:line="330" pos:column="20"/></name></name> <modifier pos:line="330" pos:column="21">*<pos:position pos:line="330" pos:column="22"/></modifier></type><name pos:line="330" pos:column="22">procs<pos:position pos:line="330" pos:column="27"/></name></decl>;<pos:position pos:line="330" pos:column="28"/></decl_stmt> <comment type="block" pos:line="330" pos:column="29">/* array of processes */</comment>
  <decl_stmt><decl><type><name><name pos:line="331" pos:column="3">struct<pos:position pos:line="331" pos:column="9"/></name> <name pos:line="331" pos:column="10">kinfo_proc<pos:position pos:line="331" pos:column="20"/></name></name> <modifier pos:line="331" pos:column="21">*<pos:position pos:line="331" pos:column="22"/></modifier></type><name pos:line="331" pos:column="22">proc_ptr<pos:position pos:line="331" pos:column="30"/></name> <init pos:line="331" pos:column="31">= <expr><name pos:line="331" pos:column="33">NULL<pos:position pos:line="331" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="331" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="332" pos:column="3">int<pos:position pos:line="332" pos:column="6"/></name></type> <name pos:line="332" pos:column="7">count<pos:position pos:line="332" pos:column="12"/></name></decl>;<pos:position pos:line="332" pos:column="13"/></decl_stmt> <comment type="block" pos:line="332" pos:column="14">/* returns number of processes */</comment>

  <decl_stmt><decl><type><name pos:line="334" pos:column="3">process_entry_t<pos:position pos:line="334" pos:column="18"/></name></type> <name pos:line="334" pos:column="19">pse<pos:position pos:line="334" pos:column="22"/></name></decl>;<pos:position pos:line="334" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="336" pos:column="3">ps_list_reset<pos:position pos:line="336" pos:column="16"/></name><argument_list pos:line="336" pos:column="16">()<pos:position pos:line="336" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="338" pos:column="3">/* Open the kvm interface, get a descriptor */</comment>
  <expr_stmt><expr><name pos:line="339" pos:column="3">kd<pos:position pos:line="339" pos:column="5"/></name> <operator pos:line="339" pos:column="6">=<pos:position pos:line="339" pos:column="7"/></operator> <call><name pos:line="339" pos:column="8">kvm_openfiles<pos:position pos:line="339" pos:column="21"/></name><argument_list pos:line="339" pos:column="21">(<argument><expr><name pos:line="339" pos:column="22">NULL<pos:position pos:line="339" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="28">"/dev/null"<pos:position pos:line="339" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="339" pos:column="41">NULL<pos:position pos:line="339" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="339" pos:column="47">0<pos:position pos:line="339" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="339" pos:column="50">errbuf<pos:position pos:line="339" pos:column="56"/></name></expr></argument>)<pos:position pos:line="339" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="58"/></expr_stmt>
  <if pos:line="340" pos:column="3">if <condition pos:line="340" pos:column="6">(<expr><name pos:line="340" pos:column="7">kd<pos:position pos:line="340" pos:column="9"/></name> <operator pos:line="340" pos:column="10">==<pos:position pos:line="340" pos:column="12"/></operator> <name pos:line="340" pos:column="13">NULL<pos:position pos:line="340" pos:column="17"/></name></expr>)<pos:position pos:line="340" pos:column="18"/></condition><then pos:line="340" pos:column="18"> <block pos:line="340" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="341" pos:column="5">ERROR<pos:position pos:line="341" pos:column="10"/></name><argument_list pos:line="341" pos:column="10">(<argument><expr><literal type="string" pos:line="341" pos:column="11">"processes plugin: Cannot open kvm interface: %s"<pos:position pos:line="341" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="341" pos:column="62">errbuf<pos:position pos:line="341" pos:column="68"/></name></expr></argument>)<pos:position pos:line="341" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="70"/></expr_stmt>
    <return pos:line="342" pos:column="5">return <expr><literal type="number" pos:line="342" pos:column="12">0<pos:position pos:line="342" pos:column="13"/></literal></expr>;<pos:position pos:line="342" pos:column="14"/></return>
  }<pos:position pos:line="343" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="345" pos:column="3">/* Get the list of processes. */</comment>
  <expr_stmt><expr><name pos:line="346" pos:column="3">procs<pos:position pos:line="346" pos:column="8"/></name> <operator pos:line="346" pos:column="9">=<pos:position pos:line="346" pos:column="10"/></operator> <call><name pos:line="346" pos:column="11">kvm_getprocs<pos:position pos:line="346" pos:column="23"/></name><argument_list pos:line="346" pos:column="23">(<argument><expr><name pos:line="346" pos:column="24">kd<pos:position pos:line="346" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="346" pos:column="28">KERN_PROC_ALL<pos:position pos:line="346" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="346" pos:column="43">0<pos:position pos:line="346" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="346" pos:column="46">&amp;<pos:position pos:line="346" pos:column="51"/></operator><name pos:line="346" pos:column="47">count<pos:position pos:line="346" pos:column="52"/></name></expr></argument>)<pos:position pos:line="346" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="54"/></expr_stmt>
  <if pos:line="347" pos:column="3">if <condition pos:line="347" pos:column="6">(<expr><name pos:line="347" pos:column="7">procs<pos:position pos:line="347" pos:column="12"/></name> <operator pos:line="347" pos:column="13">==<pos:position pos:line="347" pos:column="15"/></operator> <name pos:line="347" pos:column="16">NULL<pos:position pos:line="347" pos:column="20"/></name></expr>)<pos:position pos:line="347" pos:column="21"/></condition><then pos:line="347" pos:column="21"> <block pos:line="347" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="348" pos:column="5">ERROR<pos:position pos:line="348" pos:column="10"/></name><argument_list pos:line="348" pos:column="10">(<argument><expr><literal type="string" pos:line="348" pos:column="11">"processes plugin: Cannot get kvm processes list: %s"<pos:position pos:line="348" pos:column="64"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="349" pos:column="11">kvm_geterr<pos:position pos:line="349" pos:column="21"/></name><argument_list pos:line="349" pos:column="21">(<argument><expr><name pos:line="349" pos:column="22">kd<pos:position pos:line="349" pos:column="24"/></name></expr></argument>)<pos:position pos:line="349" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="349" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="349" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="350" pos:column="5">kvm_close<pos:position pos:line="350" pos:column="14"/></name><argument_list pos:line="350" pos:column="14">(<argument><expr><name pos:line="350" pos:column="15">kd<pos:position pos:line="350" pos:column="17"/></name></expr></argument>)<pos:position pos:line="350" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="19"/></expr_stmt>
    <return pos:line="351" pos:column="5">return <expr><literal type="number" pos:line="351" pos:column="12">0<pos:position pos:line="351" pos:column="13"/></literal></expr>;<pos:position pos:line="351" pos:column="14"/></return>
  }<pos:position pos:line="352" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="354" pos:column="3">/* Iterate through the processes in kinfo_proc */</comment>
  <for pos:line="355" pos:column="3">for <control pos:line="355" pos:column="7">(<init><decl><type><name pos:line="355" pos:column="8">int<pos:position pos:line="355" pos:column="11"/></name></type> <name pos:line="355" pos:column="12">i<pos:position pos:line="355" pos:column="13"/></name> <init pos:line="355" pos:column="14">= <expr><literal type="number" pos:line="355" pos:column="16">0<pos:position pos:line="355" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="355" pos:column="18"/></init> <condition><expr><name pos:line="355" pos:column="19">i<pos:position pos:line="355" pos:column="20"/></name> <operator pos:line="355" pos:column="21">&lt;<pos:position pos:line="355" pos:column="25"/></operator> <name pos:line="355" pos:column="23">count<pos:position pos:line="355" pos:column="28"/></name></expr>;<pos:position pos:line="355" pos:column="29"/></condition> <incr><expr><name pos:line="355" pos:column="30">i<pos:position pos:line="355" pos:column="31"/></name><operator pos:line="355" pos:column="31">++<pos:position pos:line="355" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="355" pos:column="34"/></control> <block pos:line="355" pos:column="35">{
    <comment type="block" pos:line="356" pos:column="5">/* Create only one process list entry per _process_, i.e.
     * filter out threads (duplicate PID entries). */</comment>
    <if pos:line="358" pos:column="5">if <condition pos:line="358" pos:column="8">(<expr><operator pos:line="358" pos:column="9">(<pos:position pos:line="358" pos:column="10"/></operator><name pos:line="358" pos:column="10">proc_ptr<pos:position pos:line="358" pos:column="18"/></name> <operator pos:line="358" pos:column="19">==<pos:position pos:line="358" pos:column="21"/></operator> <name pos:line="358" pos:column="22">NULL<pos:position pos:line="358" pos:column="26"/></name><operator pos:line="358" pos:column="26">)<pos:position pos:line="358" pos:column="27"/></operator> <operator pos:line="358" pos:column="28">||<pos:position pos:line="358" pos:column="30"/></operator> <operator pos:line="358" pos:column="31">(<pos:position pos:line="358" pos:column="32"/></operator><name><name pos:line="358" pos:column="32">proc_ptr<pos:position pos:line="358" pos:column="40"/></name><operator pos:line="358" pos:column="40">-&gt;<pos:position pos:line="358" pos:column="45"/></operator><name pos:line="358" pos:column="42">ki_pid<pos:position pos:line="358" pos:column="48"/></name></name> <operator pos:line="358" pos:column="49">!=<pos:position pos:line="358" pos:column="51"/></operator> <name><name pos:line="358" pos:column="52">procs<pos:position pos:line="358" pos:column="57"/></name><index pos:line="358" pos:column="57">[<expr><name pos:line="358" pos:column="58">i<pos:position pos:line="358" pos:column="59"/></name></expr>]<pos:position pos:line="358" pos:column="60"/></index></name><operator pos:line="358" pos:column="60">.<pos:position pos:line="358" pos:column="61"/></operator><name pos:line="358" pos:column="61">ki_pid<pos:position pos:line="358" pos:column="67"/></name><operator pos:line="358" pos:column="67">)<pos:position pos:line="358" pos:column="68"/></operator></expr>)<pos:position pos:line="358" pos:column="69"/></condition><then pos:line="358" pos:column="69"> <block pos:line="358" pos:column="70">{
      <decl_stmt><decl><type><name pos:line="359" pos:column="7">char<pos:position pos:line="359" pos:column="11"/></name></type> <name><name pos:line="359" pos:column="12">cmdline<pos:position pos:line="359" pos:column="19"/></name><index pos:line="359" pos:column="19">[<expr><name pos:line="359" pos:column="20">CMDLINE_BUFFER_SIZE<pos:position pos:line="359" pos:column="39"/></name></expr>]<pos:position pos:line="359" pos:column="40"/></index></name> <init pos:line="359" pos:column="41">= <expr><literal type="string" pos:line="359" pos:column="43">""<pos:position pos:line="359" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="359" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="360" pos:column="7">_Bool<pos:position pos:line="360" pos:column="12"/></name></type> <name pos:line="360" pos:column="13">have_cmdline<pos:position pos:line="360" pos:column="25"/></name> <init pos:line="360" pos:column="26">= <expr><literal type="number" pos:line="360" pos:column="28">0<pos:position pos:line="360" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="360" pos:column="30"/></decl_stmt>

      <expr_stmt><expr><name pos:line="362" pos:column="7">proc_ptr<pos:position pos:line="362" pos:column="15"/></name> <operator pos:line="362" pos:column="16">=<pos:position pos:line="362" pos:column="17"/></operator> <operator pos:line="362" pos:column="18">&amp;<pos:position pos:line="362" pos:column="23"/></operator><operator pos:line="362" pos:column="19">(<pos:position pos:line="362" pos:column="20"/></operator><name><name pos:line="362" pos:column="20">procs<pos:position pos:line="362" pos:column="25"/></name><index pos:line="362" pos:column="25">[<expr><name pos:line="362" pos:column="26">i<pos:position pos:line="362" pos:column="27"/></name></expr>]<pos:position pos:line="362" pos:column="28"/></index></name><operator pos:line="362" pos:column="28">)<pos:position pos:line="362" pos:column="29"/></operator></expr>;<pos:position pos:line="362" pos:column="30"/></expr_stmt>
      <comment type="block" pos:line="363" pos:column="7">/* Don't probe system processes and processes without arguments */</comment>
      <if pos:line="364" pos:column="7">if <condition pos:line="364" pos:column="10">(<expr><operator pos:line="364" pos:column="11">(<pos:position pos:line="364" pos:column="12"/></operator><operator pos:line="364" pos:column="12">(<pos:position pos:line="364" pos:column="13"/></operator><name><name pos:line="364" pos:column="13">procs<pos:position pos:line="364" pos:column="18"/></name><index pos:line="364" pos:column="18">[<expr><name pos:line="364" pos:column="19">i<pos:position pos:line="364" pos:column="20"/></name></expr>]<pos:position pos:line="364" pos:column="21"/></index></name><operator pos:line="364" pos:column="21">.<pos:position pos:line="364" pos:column="22"/></operator><name pos:line="364" pos:column="22">ki_flag<pos:position pos:line="364" pos:column="29"/></name> <operator pos:line="364" pos:column="30">&amp;<pos:position pos:line="364" pos:column="35"/></operator> <name pos:line="364" pos:column="32">P_SYSTEM<pos:position pos:line="364" pos:column="40"/></name><operator pos:line="364" pos:column="40">)<pos:position pos:line="364" pos:column="41"/></operator> <operator pos:line="364" pos:column="42">==<pos:position pos:line="364" pos:column="44"/></operator> <literal type="number" pos:line="364" pos:column="45">0<pos:position pos:line="364" pos:column="46"/></literal><operator pos:line="364" pos:column="46">)<pos:position pos:line="364" pos:column="47"/></operator> <operator pos:line="364" pos:column="48">&amp;&amp;<pos:position pos:line="364" pos:column="58"/></operator> <operator pos:line="364" pos:column="51">(<pos:position pos:line="364" pos:column="52"/></operator><name><name pos:line="364" pos:column="52">procs<pos:position pos:line="364" pos:column="57"/></name><index pos:line="364" pos:column="57">[<expr><name pos:line="364" pos:column="58">i<pos:position pos:line="364" pos:column="59"/></name></expr>]<pos:position pos:line="364" pos:column="60"/></index></name><operator pos:line="364" pos:column="60">.<pos:position pos:line="364" pos:column="61"/></operator><name pos:line="364" pos:column="61">ki_args<pos:position pos:line="364" pos:column="68"/></name> <operator pos:line="364" pos:column="69">!=<pos:position pos:line="364" pos:column="71"/></operator> <name pos:line="364" pos:column="72">NULL<pos:position pos:line="364" pos:column="76"/></name><operator pos:line="364" pos:column="76">)<pos:position pos:line="364" pos:column="77"/></operator></expr>)<pos:position pos:line="364" pos:column="78"/></condition><then pos:line="364" pos:column="78"> <block pos:line="364" pos:column="79">{
        <decl_stmt><decl><type><name pos:line="365" pos:column="9">char<pos:position pos:line="365" pos:column="13"/></name> <modifier pos:line="365" pos:column="14">*<pos:position pos:line="365" pos:column="15"/></modifier><modifier pos:line="365" pos:column="15">*<pos:position pos:line="365" pos:column="16"/></modifier></type><name pos:line="365" pos:column="16">argv<pos:position pos:line="365" pos:column="20"/></name></decl>;<pos:position pos:line="365" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="366" pos:column="9">int<pos:position pos:line="366" pos:column="12"/></name></type> <name pos:line="366" pos:column="13">argc<pos:position pos:line="366" pos:column="17"/></name></decl>;<pos:position pos:line="366" pos:column="18"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="367" pos:column="9">int<pos:position pos:line="367" pos:column="12"/></name></type> <name pos:line="367" pos:column="13">status<pos:position pos:line="367" pos:column="19"/></name></decl>;<pos:position pos:line="367" pos:column="20"/></decl_stmt>

        <comment type="block" pos:line="369" pos:column="9">/* retrieve the arguments */</comment>
        <expr_stmt><expr><name pos:line="370" pos:column="9">argv<pos:position pos:line="370" pos:column="13"/></name> <operator pos:line="370" pos:column="14">=<pos:position pos:line="370" pos:column="15"/></operator> <call><name pos:line="370" pos:column="16">kvm_getargv<pos:position pos:line="370" pos:column="27"/></name><argument_list pos:line="370" pos:column="27">(<argument><expr><name pos:line="370" pos:column="28">kd<pos:position pos:line="370" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="370" pos:column="32">proc_ptr<pos:position pos:line="370" pos:column="40"/></name></expr></argument>, <comment type="block" pos:line="370" pos:column="42">/* nchr = */</comment> <argument><expr><literal type="number" pos:line="370" pos:column="55">0<pos:position pos:line="370" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="370" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="371" pos:column="9">argc<pos:position pos:line="371" pos:column="13"/></name> <operator pos:line="371" pos:column="14">=<pos:position pos:line="371" pos:column="15"/></operator> <literal type="number" pos:line="371" pos:column="16">0<pos:position pos:line="371" pos:column="17"/></literal></expr>;<pos:position pos:line="371" pos:column="18"/></expr_stmt>
        <if pos:line="372" pos:column="9">if <condition pos:line="372" pos:column="12">(<expr><operator pos:line="372" pos:column="13">(<pos:position pos:line="372" pos:column="14"/></operator><name pos:line="372" pos:column="14">argv<pos:position pos:line="372" pos:column="18"/></name> <operator pos:line="372" pos:column="19">!=<pos:position pos:line="372" pos:column="21"/></operator> <name pos:line="372" pos:column="22">NULL<pos:position pos:line="372" pos:column="26"/></name><operator pos:line="372" pos:column="26">)<pos:position pos:line="372" pos:column="27"/></operator> <operator pos:line="372" pos:column="28">&amp;&amp;<pos:position pos:line="372" pos:column="38"/></operator> <operator pos:line="372" pos:column="31">(<pos:position pos:line="372" pos:column="32"/></operator><name><name pos:line="372" pos:column="32">argv<pos:position pos:line="372" pos:column="36"/></name><index pos:line="372" pos:column="36">[<expr><literal type="number" pos:line="372" pos:column="37">0<pos:position pos:line="372" pos:column="38"/></literal></expr>]<pos:position pos:line="372" pos:column="39"/></index></name> <operator pos:line="372" pos:column="40">!=<pos:position pos:line="372" pos:column="42"/></operator> <name pos:line="372" pos:column="43">NULL<pos:position pos:line="372" pos:column="47"/></name><operator pos:line="372" pos:column="47">)<pos:position pos:line="372" pos:column="48"/></operator></expr>)<pos:position pos:line="372" pos:column="49"/></condition><then pos:line="372" pos:column="49"> <block pos:line="372" pos:column="50">{
          <while pos:line="373" pos:column="11">while <condition pos:line="373" pos:column="17">(<expr><name><name pos:line="373" pos:column="18">argv<pos:position pos:line="373" pos:column="22"/></name><index pos:line="373" pos:column="22">[<expr><name pos:line="373" pos:column="23">argc<pos:position pos:line="373" pos:column="27"/></name></expr>]<pos:position pos:line="373" pos:column="28"/></index></name> <operator pos:line="373" pos:column="29">!=<pos:position pos:line="373" pos:column="31"/></operator> <name pos:line="373" pos:column="32">NULL<pos:position pos:line="373" pos:column="36"/></name></expr>)<pos:position pos:line="373" pos:column="37"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="374" pos:column="13">argc<pos:position pos:line="374" pos:column="17"/></name><operator pos:line="374" pos:column="17">++<pos:position pos:line="374" pos:column="19"/></operator></expr>;<pos:position pos:line="374" pos:column="20"/></expr_stmt></block></while>

          <expr_stmt><expr><name pos:line="376" pos:column="11">status<pos:position pos:line="376" pos:column="17"/></name> <operator pos:line="376" pos:column="18">=<pos:position pos:line="376" pos:column="19"/></operator> <call><name pos:line="376" pos:column="20">strjoin<pos:position pos:line="376" pos:column="27"/></name><argument_list pos:line="376" pos:column="27">(<argument><expr><name pos:line="376" pos:column="28">cmdline<pos:position pos:line="376" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="376" pos:column="37">sizeof<argument_list pos:line="376" pos:column="43">(<argument><expr><name pos:line="376" pos:column="44">cmdline<pos:position pos:line="376" pos:column="51"/></name></expr></argument>)<pos:position pos:line="376" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="376" pos:column="54">argv<pos:position pos:line="376" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="376" pos:column="60">argc<pos:position pos:line="376" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="376" pos:column="66">" "<pos:position pos:line="376" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="376" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="71"/></expr_stmt>
          <if pos:line="377" pos:column="11">if <condition pos:line="377" pos:column="14">(<expr><name pos:line="377" pos:column="15">status<pos:position pos:line="377" pos:column="21"/></name> <operator pos:line="377" pos:column="22">&lt;<pos:position pos:line="377" pos:column="26"/></operator> <literal type="number" pos:line="377" pos:column="24">0<pos:position pos:line="377" pos:column="25"/></literal></expr>)<pos:position pos:line="377" pos:column="26"/></condition><then pos:line="377" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="378" pos:column="13">WARNING<pos:position pos:line="378" pos:column="20"/></name><argument_list pos:line="378" pos:column="20">(<argument><expr><literal type="string" pos:line="378" pos:column="21">"processes plugin: Command line did not fit into buffer."<pos:position pos:line="378" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="378" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="80"/></expr_stmt></block></then>
          <else pos:line="379" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="380" pos:column="13">have_cmdline<pos:position pos:line="380" pos:column="25"/></name> <operator pos:line="380" pos:column="26">=<pos:position pos:line="380" pos:column="27"/></operator> <literal type="number" pos:line="380" pos:column="28">1<pos:position pos:line="380" pos:column="29"/></literal></expr>;<pos:position pos:line="380" pos:column="30"/></expr_stmt></block></else></if>
        }<pos:position pos:line="381" pos:column="10"/></block></then></if>
      }<pos:position pos:line="382" pos:column="8"/></block></then></if> <comment type="block" pos:line="382" pos:column="9">/* if (process has argument list) */</comment>

      <expr_stmt><expr><call><name pos:line="384" pos:column="7">memset<pos:position pos:line="384" pos:column="13"/></name><argument_list pos:line="384" pos:column="13">(<argument><expr><operator pos:line="384" pos:column="14">&amp;<pos:position pos:line="384" pos:column="19"/></operator><name pos:line="384" pos:column="15">pse<pos:position pos:line="384" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="384" pos:column="20">0<pos:position pos:line="384" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="384" pos:column="23">sizeof<argument_list pos:line="384" pos:column="29">(<argument><expr><name pos:line="384" pos:column="30">pse<pos:position pos:line="384" pos:column="33"/></name></expr></argument>)<pos:position pos:line="384" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="384" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="385" pos:column="7">pse<pos:position pos:line="385" pos:column="10"/></name><operator pos:line="385" pos:column="10">.<pos:position pos:line="385" pos:column="11"/></operator><name pos:line="385" pos:column="11">id<pos:position pos:line="385" pos:column="13"/></name></name> <operator pos:line="385" pos:column="14">=<pos:position pos:line="385" pos:column="15"/></operator> <name><name pos:line="385" pos:column="16">procs<pos:position pos:line="385" pos:column="21"/></name><index pos:line="385" pos:column="21">[<expr><name pos:line="385" pos:column="22">i<pos:position pos:line="385" pos:column="23"/></name></expr>]<pos:position pos:line="385" pos:column="24"/></index></name><operator pos:line="385" pos:column="24">.<pos:position pos:line="385" pos:column="25"/></operator><name pos:line="385" pos:column="25">ki_pid<pos:position pos:line="385" pos:column="31"/></name></expr>;<pos:position pos:line="385" pos:column="32"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="387" pos:column="7">pse<pos:position pos:line="387" pos:column="10"/></name><operator pos:line="387" pos:column="10">.<pos:position pos:line="387" pos:column="11"/></operator><name pos:line="387" pos:column="11">num_proc<pos:position pos:line="387" pos:column="19"/></name></name> <operator pos:line="387" pos:column="20">=<pos:position pos:line="387" pos:column="21"/></operator> <literal type="number" pos:line="387" pos:column="22">1<pos:position pos:line="387" pos:column="23"/></literal></expr>;<pos:position pos:line="387" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="388" pos:column="7">pse<pos:position pos:line="388" pos:column="10"/></name><operator pos:line="388" pos:column="10">.<pos:position pos:line="388" pos:column="11"/></operator><name pos:line="388" pos:column="11">num_lwp<pos:position pos:line="388" pos:column="18"/></name></name> <operator pos:line="388" pos:column="19">=<pos:position pos:line="388" pos:column="20"/></operator> <name><name pos:line="388" pos:column="21">procs<pos:position pos:line="388" pos:column="26"/></name><index pos:line="388" pos:column="26">[<expr><name pos:line="388" pos:column="27">i<pos:position pos:line="388" pos:column="28"/></name></expr>]<pos:position pos:line="388" pos:column="29"/></index></name><operator pos:line="388" pos:column="29">.<pos:position pos:line="388" pos:column="30"/></operator><name pos:line="388" pos:column="30">ki_numthreads<pos:position pos:line="388" pos:column="43"/></name></expr>;<pos:position pos:line="388" pos:column="44"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="390" pos:column="7">pse<pos:position pos:line="390" pos:column="10"/></name><operator pos:line="390" pos:column="10">.<pos:position pos:line="390" pos:column="11"/></operator><name pos:line="390" pos:column="11">vmem_size<pos:position pos:line="390" pos:column="20"/></name></name> <operator pos:line="390" pos:column="21">=<pos:position pos:line="390" pos:column="22"/></operator> <name><name pos:line="390" pos:column="23">procs<pos:position pos:line="390" pos:column="28"/></name><index pos:line="390" pos:column="28">[<expr><name pos:line="390" pos:column="29">i<pos:position pos:line="390" pos:column="30"/></name></expr>]<pos:position pos:line="390" pos:column="31"/></index></name><operator pos:line="390" pos:column="31">.<pos:position pos:line="390" pos:column="32"/></operator><name pos:line="390" pos:column="32">ki_size<pos:position pos:line="390" pos:column="39"/></name></expr>;<pos:position pos:line="390" pos:column="40"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="391" pos:column="7">pse<pos:position pos:line="391" pos:column="10"/></name><operator pos:line="391" pos:column="10">.<pos:position pos:line="391" pos:column="11"/></operator><name pos:line="391" pos:column="11">vmem_rss<pos:position pos:line="391" pos:column="19"/></name></name> <operator pos:line="391" pos:column="20">=<pos:position pos:line="391" pos:column="21"/></operator> <name><name pos:line="391" pos:column="22">procs<pos:position pos:line="391" pos:column="27"/></name><index pos:line="391" pos:column="27">[<expr><name pos:line="391" pos:column="28">i<pos:position pos:line="391" pos:column="29"/></name></expr>]<pos:position pos:line="391" pos:column="30"/></index></name><operator pos:line="391" pos:column="30">.<pos:position pos:line="391" pos:column="31"/></operator><name pos:line="391" pos:column="31">ki_rssize<pos:position pos:line="391" pos:column="40"/></name> <operator pos:line="391" pos:column="41">*<pos:position pos:line="391" pos:column="42"/></operator> <name pos:line="391" pos:column="43">pagesize<pos:position pos:line="391" pos:column="51"/></name></expr>;<pos:position pos:line="391" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="392" pos:column="7">pse<pos:position pos:line="392" pos:column="10"/></name><operator pos:line="392" pos:column="10">.<pos:position pos:line="392" pos:column="11"/></operator><name pos:line="392" pos:column="11">vmem_data<pos:position pos:line="392" pos:column="20"/></name></name> <operator pos:line="392" pos:column="21">=<pos:position pos:line="392" pos:column="22"/></operator> <name><name pos:line="392" pos:column="23">procs<pos:position pos:line="392" pos:column="28"/></name><index pos:line="392" pos:column="28">[<expr><name pos:line="392" pos:column="29">i<pos:position pos:line="392" pos:column="30"/></name></expr>]<pos:position pos:line="392" pos:column="31"/></index></name><operator pos:line="392" pos:column="31">.<pos:position pos:line="392" pos:column="32"/></operator><name pos:line="392" pos:column="32">ki_dsize<pos:position pos:line="392" pos:column="40"/></name> <operator pos:line="392" pos:column="41">*<pos:position pos:line="392" pos:column="42"/></operator> <name pos:line="392" pos:column="43">pagesize<pos:position pos:line="392" pos:column="51"/></name></expr>;<pos:position pos:line="392" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="393" pos:column="7">pse<pos:position pos:line="393" pos:column="10"/></name><operator pos:line="393" pos:column="10">.<pos:position pos:line="393" pos:column="11"/></operator><name pos:line="393" pos:column="11">vmem_code<pos:position pos:line="393" pos:column="20"/></name></name> <operator pos:line="393" pos:column="21">=<pos:position pos:line="393" pos:column="22"/></operator> <name><name pos:line="393" pos:column="23">procs<pos:position pos:line="393" pos:column="28"/></name><index pos:line="393" pos:column="28">[<expr><name pos:line="393" pos:column="29">i<pos:position pos:line="393" pos:column="30"/></name></expr>]<pos:position pos:line="393" pos:column="31"/></index></name><operator pos:line="393" pos:column="31">.<pos:position pos:line="393" pos:column="32"/></operator><name pos:line="393" pos:column="32">ki_tsize<pos:position pos:line="393" pos:column="40"/></name> <operator pos:line="393" pos:column="41">*<pos:position pos:line="393" pos:column="42"/></operator> <name pos:line="393" pos:column="43">pagesize<pos:position pos:line="393" pos:column="51"/></name></expr>;<pos:position pos:line="393" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="394" pos:column="7">pse<pos:position pos:line="394" pos:column="10"/></name><operator pos:line="394" pos:column="10">.<pos:position pos:line="394" pos:column="11"/></operator><name pos:line="394" pos:column="11">stack_size<pos:position pos:line="394" pos:column="21"/></name></name> <operator pos:line="394" pos:column="22">=<pos:position pos:line="394" pos:column="23"/></operator> <name><name pos:line="394" pos:column="24">procs<pos:position pos:line="394" pos:column="29"/></name><index pos:line="394" pos:column="29">[<expr><name pos:line="394" pos:column="30">i<pos:position pos:line="394" pos:column="31"/></name></expr>]<pos:position pos:line="394" pos:column="32"/></index></name><operator pos:line="394" pos:column="32">.<pos:position pos:line="394" pos:column="33"/></operator><name pos:line="394" pos:column="33">ki_ssize<pos:position pos:line="394" pos:column="41"/></name> <operator pos:line="394" pos:column="42">*<pos:position pos:line="394" pos:column="43"/></operator> <name pos:line="394" pos:column="44">pagesize<pos:position pos:line="394" pos:column="52"/></name></expr>;<pos:position pos:line="394" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="395" pos:column="7">pse<pos:position pos:line="395" pos:column="10"/></name><operator pos:line="395" pos:column="10">.<pos:position pos:line="395" pos:column="11"/></operator><name pos:line="395" pos:column="11">vmem_minflt_counter<pos:position pos:line="395" pos:column="30"/></name></name> <operator pos:line="395" pos:column="31">=<pos:position pos:line="395" pos:column="32"/></operator> <name><name pos:line="395" pos:column="33">procs<pos:position pos:line="395" pos:column="38"/></name><index pos:line="395" pos:column="38">[<expr><name pos:line="395" pos:column="39">i<pos:position pos:line="395" pos:column="40"/></name></expr>]<pos:position pos:line="395" pos:column="41"/></index></name><operator pos:line="395" pos:column="41">.<pos:position pos:line="395" pos:column="42"/></operator><name><name pos:line="395" pos:column="42">ki_rusage<pos:position pos:line="395" pos:column="51"/></name><operator pos:line="395" pos:column="51">.<pos:position pos:line="395" pos:column="52"/></operator><name pos:line="395" pos:column="52">ru_minflt<pos:position pos:line="395" pos:column="61"/></name></name></expr>;<pos:position pos:line="395" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="396" pos:column="7">pse<pos:position pos:line="396" pos:column="10"/></name><operator pos:line="396" pos:column="10">.<pos:position pos:line="396" pos:column="11"/></operator><name pos:line="396" pos:column="11">vmem_majflt_counter<pos:position pos:line="396" pos:column="30"/></name></name> <operator pos:line="396" pos:column="31">=<pos:position pos:line="396" pos:column="32"/></operator> <name><name pos:line="396" pos:column="33">procs<pos:position pos:line="396" pos:column="38"/></name><index pos:line="396" pos:column="38">[<expr><name pos:line="396" pos:column="39">i<pos:position pos:line="396" pos:column="40"/></name></expr>]<pos:position pos:line="396" pos:column="41"/></index></name><operator pos:line="396" pos:column="41">.<pos:position pos:line="396" pos:column="42"/></operator><name><name pos:line="396" pos:column="42">ki_rusage<pos:position pos:line="396" pos:column="51"/></name><operator pos:line="396" pos:column="51">.<pos:position pos:line="396" pos:column="52"/></operator><name pos:line="396" pos:column="52">ru_majflt<pos:position pos:line="396" pos:column="61"/></name></name></expr>;<pos:position pos:line="396" pos:column="62"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="398" pos:column="7">pse<pos:position pos:line="398" pos:column="10"/></name><operator pos:line="398" pos:column="10">.<pos:position pos:line="398" pos:column="11"/></operator><name pos:line="398" pos:column="11">cpu_user_counter<pos:position pos:line="398" pos:column="27"/></name></name> <operator pos:line="398" pos:column="28">=<pos:position pos:line="398" pos:column="29"/></operator> <literal type="number" pos:line="398" pos:column="30">0<pos:position pos:line="398" pos:column="31"/></literal></expr>;<pos:position pos:line="398" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="399" pos:column="7">pse<pos:position pos:line="399" pos:column="10"/></name><operator pos:line="399" pos:column="10">.<pos:position pos:line="399" pos:column="11"/></operator><name pos:line="399" pos:column="11">cpu_system_counter<pos:position pos:line="399" pos:column="29"/></name></name> <operator pos:line="399" pos:column="30">=<pos:position pos:line="399" pos:column="31"/></operator> <literal type="number" pos:line="399" pos:column="32">0<pos:position pos:line="399" pos:column="33"/></literal></expr>;<pos:position pos:line="399" pos:column="34"/></expr_stmt>
      <comment type="block" pos:line="400" pos:column="7">/*
       * The u-area might be swapped out, and we can't get
       * at it because we have a crashdump and no swap.
       * If it's here fill in these fields, otherwise, just
       * leave them 0.
       */</comment>
      <if pos:line="406" pos:column="7">if <condition pos:line="406" pos:column="10">(<expr><name><name pos:line="406" pos:column="11">procs<pos:position pos:line="406" pos:column="16"/></name><index pos:line="406" pos:column="16">[<expr><name pos:line="406" pos:column="17">i<pos:position pos:line="406" pos:column="18"/></name></expr>]<pos:position pos:line="406" pos:column="19"/></index></name><operator pos:line="406" pos:column="19">.<pos:position pos:line="406" pos:column="20"/></operator><name pos:line="406" pos:column="20">ki_flag<pos:position pos:line="406" pos:column="27"/></name> <operator pos:line="406" pos:column="28">&amp;<pos:position pos:line="406" pos:column="33"/></operator> <name pos:line="406" pos:column="30">P_INMEM<pos:position pos:line="406" pos:column="37"/></name></expr>)<pos:position pos:line="406" pos:column="38"/></condition><then pos:line="406" pos:column="38"> <block pos:line="406" pos:column="39">{
        <expr_stmt><expr><name><name pos:line="407" pos:column="9">pse<pos:position pos:line="407" pos:column="12"/></name><operator pos:line="407" pos:column="12">.<pos:position pos:line="407" pos:column="13"/></operator><name pos:line="407" pos:column="13">cpu_user_counter<pos:position pos:line="407" pos:column="29"/></name></name> <operator pos:line="407" pos:column="30">=<pos:position pos:line="407" pos:column="31"/></operator> <name><name pos:line="407" pos:column="32">procs<pos:position pos:line="407" pos:column="37"/></name><index pos:line="407" pos:column="37">[<expr><name pos:line="407" pos:column="38">i<pos:position pos:line="407" pos:column="39"/></name></expr>]<pos:position pos:line="407" pos:column="40"/></index></name><operator pos:line="407" pos:column="40">.<pos:position pos:line="407" pos:column="41"/></operator><name><name pos:line="407" pos:column="41">ki_rusage<pos:position pos:line="407" pos:column="50"/></name><operator pos:line="407" pos:column="50">.<pos:position pos:line="407" pos:column="51"/></operator><name pos:line="407" pos:column="51">ru_utime<pos:position pos:line="407" pos:column="59"/></name><operator pos:line="407" pos:column="59">.<pos:position pos:line="407" pos:column="60"/></operator><name pos:line="407" pos:column="60">tv_usec<pos:position pos:line="407" pos:column="67"/></name></name> <operator pos:line="407" pos:column="68">+<pos:position pos:line="407" pos:column="69"/></operator>
                               <operator pos:line="408" pos:column="32">(<pos:position pos:line="408" pos:column="33"/></operator><literal type="number" pos:line="408" pos:column="33">1000000lu<pos:position pos:line="408" pos:column="42"/></literal> <operator pos:line="408" pos:column="43">*<pos:position pos:line="408" pos:column="44"/></operator> <name><name pos:line="408" pos:column="45">procs<pos:position pos:line="408" pos:column="50"/></name><index pos:line="408" pos:column="50">[<expr><name pos:line="408" pos:column="51">i<pos:position pos:line="408" pos:column="52"/></name></expr>]<pos:position pos:line="408" pos:column="53"/></index></name><operator pos:line="408" pos:column="53">.<pos:position pos:line="408" pos:column="54"/></operator><name><name pos:line="408" pos:column="54">ki_rusage<pos:position pos:line="408" pos:column="63"/></name><operator pos:line="408" pos:column="63">.<pos:position pos:line="408" pos:column="64"/></operator><name pos:line="408" pos:column="64">ru_utime<pos:position pos:line="408" pos:column="72"/></name><operator pos:line="408" pos:column="72">.<pos:position pos:line="408" pos:column="73"/></operator><name pos:line="408" pos:column="73">tv_sec<pos:position pos:line="408" pos:column="79"/></name></name><operator pos:line="408" pos:column="79">)<pos:position pos:line="408" pos:column="80"/></operator></expr>;<pos:position pos:line="408" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="409" pos:column="9">pse<pos:position pos:line="409" pos:column="12"/></name><operator pos:line="409" pos:column="12">.<pos:position pos:line="409" pos:column="13"/></operator><name pos:line="409" pos:column="13">cpu_system_counter<pos:position pos:line="409" pos:column="31"/></name></name> <operator pos:line="409" pos:column="32">=<pos:position pos:line="409" pos:column="33"/></operator>
            <name><name pos:line="410" pos:column="13">procs<pos:position pos:line="410" pos:column="18"/></name><index pos:line="410" pos:column="18">[<expr><name pos:line="410" pos:column="19">i<pos:position pos:line="410" pos:column="20"/></name></expr>]<pos:position pos:line="410" pos:column="21"/></index></name><operator pos:line="410" pos:column="21">.<pos:position pos:line="410" pos:column="22"/></operator><name><name pos:line="410" pos:column="22">ki_rusage<pos:position pos:line="410" pos:column="31"/></name><operator pos:line="410" pos:column="31">.<pos:position pos:line="410" pos:column="32"/></operator><name pos:line="410" pos:column="32">ru_stime<pos:position pos:line="410" pos:column="40"/></name><operator pos:line="410" pos:column="40">.<pos:position pos:line="410" pos:column="41"/></operator><name pos:line="410" pos:column="41">tv_usec<pos:position pos:line="410" pos:column="48"/></name></name> <operator pos:line="410" pos:column="49">+<pos:position pos:line="410" pos:column="50"/></operator>
            <operator pos:line="411" pos:column="13">(<pos:position pos:line="411" pos:column="14"/></operator><literal type="number" pos:line="411" pos:column="14">1000000lu<pos:position pos:line="411" pos:column="23"/></literal> <operator pos:line="411" pos:column="24">*<pos:position pos:line="411" pos:column="25"/></operator> <name><name pos:line="411" pos:column="26">procs<pos:position pos:line="411" pos:column="31"/></name><index pos:line="411" pos:column="31">[<expr><name pos:line="411" pos:column="32">i<pos:position pos:line="411" pos:column="33"/></name></expr>]<pos:position pos:line="411" pos:column="34"/></index></name><operator pos:line="411" pos:column="34">.<pos:position pos:line="411" pos:column="35"/></operator><name><name pos:line="411" pos:column="35">ki_rusage<pos:position pos:line="411" pos:column="44"/></name><operator pos:line="411" pos:column="44">.<pos:position pos:line="411" pos:column="45"/></operator><name pos:line="411" pos:column="45">ru_stime<pos:position pos:line="411" pos:column="53"/></name><operator pos:line="411" pos:column="53">.<pos:position pos:line="411" pos:column="54"/></operator><name pos:line="411" pos:column="54">tv_sec<pos:position pos:line="411" pos:column="60"/></name></name><operator pos:line="411" pos:column="60">)<pos:position pos:line="411" pos:column="61"/></operator></expr>;<pos:position pos:line="411" pos:column="62"/></expr_stmt>
      }<pos:position pos:line="412" pos:column="8"/></block></then></if>

      <comment type="block" pos:line="414" pos:column="7">/* no I/O data */</comment>
      <expr_stmt><expr><name><name pos:line="415" pos:column="7">pse<pos:position pos:line="415" pos:column="10"/></name><operator pos:line="415" pos:column="10">.<pos:position pos:line="415" pos:column="11"/></operator><name pos:line="415" pos:column="11">io_rchar<pos:position pos:line="415" pos:column="19"/></name></name> <operator pos:line="415" pos:column="20">=<pos:position pos:line="415" pos:column="21"/></operator> <operator pos:line="415" pos:column="22">-<pos:position pos:line="415" pos:column="23"/></operator><literal type="number" pos:line="415" pos:column="23">1<pos:position pos:line="415" pos:column="24"/></literal></expr>;<pos:position pos:line="415" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="416" pos:column="7">pse<pos:position pos:line="416" pos:column="10"/></name><operator pos:line="416" pos:column="10">.<pos:position pos:line="416" pos:column="11"/></operator><name pos:line="416" pos:column="11">io_wchar<pos:position pos:line="416" pos:column="19"/></name></name> <operator pos:line="416" pos:column="20">=<pos:position pos:line="416" pos:column="21"/></operator> <operator pos:line="416" pos:column="22">-<pos:position pos:line="416" pos:column="23"/></operator><literal type="number" pos:line="416" pos:column="23">1<pos:position pos:line="416" pos:column="24"/></literal></expr>;<pos:position pos:line="416" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="417" pos:column="7">pse<pos:position pos:line="417" pos:column="10"/></name><operator pos:line="417" pos:column="10">.<pos:position pos:line="417" pos:column="11"/></operator><name pos:line="417" pos:column="11">io_syscr<pos:position pos:line="417" pos:column="19"/></name></name> <operator pos:line="417" pos:column="20">=<pos:position pos:line="417" pos:column="21"/></operator> <operator pos:line="417" pos:column="22">-<pos:position pos:line="417" pos:column="23"/></operator><literal type="number" pos:line="417" pos:column="23">1<pos:position pos:line="417" pos:column="24"/></literal></expr>;<pos:position pos:line="417" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="418" pos:column="7">pse<pos:position pos:line="418" pos:column="10"/></name><operator pos:line="418" pos:column="10">.<pos:position pos:line="418" pos:column="11"/></operator><name pos:line="418" pos:column="11">io_syscw<pos:position pos:line="418" pos:column="19"/></name></name> <operator pos:line="418" pos:column="20">=<pos:position pos:line="418" pos:column="21"/></operator> <operator pos:line="418" pos:column="22">-<pos:position pos:line="418" pos:column="23"/></operator><literal type="number" pos:line="418" pos:column="23">1<pos:position pos:line="418" pos:column="24"/></literal></expr>;<pos:position pos:line="418" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="419" pos:column="7">pse<pos:position pos:line="419" pos:column="10"/></name><operator pos:line="419" pos:column="10">.<pos:position pos:line="419" pos:column="11"/></operator><name pos:line="419" pos:column="11">io_diskr<pos:position pos:line="419" pos:column="19"/></name></name> <operator pos:line="419" pos:column="20">=<pos:position pos:line="419" pos:column="21"/></operator> <operator pos:line="419" pos:column="22">-<pos:position pos:line="419" pos:column="23"/></operator><literal type="number" pos:line="419" pos:column="23">1<pos:position pos:line="419" pos:column="24"/></literal></expr>;<pos:position pos:line="419" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="420" pos:column="7">pse<pos:position pos:line="420" pos:column="10"/></name><operator pos:line="420" pos:column="10">.<pos:position pos:line="420" pos:column="11"/></operator><name pos:line="420" pos:column="11">io_diskw<pos:position pos:line="420" pos:column="19"/></name></name> <operator pos:line="420" pos:column="20">=<pos:position pos:line="420" pos:column="21"/></operator> <operator pos:line="420" pos:column="22">-<pos:position pos:line="420" pos:column="23"/></operator><literal type="number" pos:line="420" pos:column="23">1<pos:position pos:line="420" pos:column="24"/></literal></expr>;<pos:position pos:line="420" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="422" pos:column="7">/* file descriptor count not implemented */</comment>
      <expr_stmt><expr><name><name pos:line="423" pos:column="7">pse<pos:position pos:line="423" pos:column="10"/></name><operator pos:line="423" pos:column="10">.<pos:position pos:line="423" pos:column="11"/></operator><name pos:line="423" pos:column="11">num_fd<pos:position pos:line="423" pos:column="17"/></name></name> <operator pos:line="423" pos:column="18">=<pos:position pos:line="423" pos:column="19"/></operator> <literal type="number" pos:line="423" pos:column="20">0<pos:position pos:line="423" pos:column="21"/></literal></expr>;<pos:position pos:line="423" pos:column="22"/></expr_stmt>

      <comment type="block" pos:line="425" pos:column="7">/* Number of memory mappings */</comment>
      <expr_stmt><expr><name><name pos:line="426" pos:column="7">pse<pos:position pos:line="426" pos:column="10"/></name><operator pos:line="426" pos:column="10">.<pos:position pos:line="426" pos:column="11"/></operator><name pos:line="426" pos:column="11">num_maps<pos:position pos:line="426" pos:column="19"/></name></name> <operator pos:line="426" pos:column="20">=<pos:position pos:line="426" pos:column="21"/></operator> <literal type="number" pos:line="426" pos:column="22">0<pos:position pos:line="426" pos:column="23"/></literal></expr>;<pos:position pos:line="426" pos:column="24"/></expr_stmt>

      <comment type="block" pos:line="428" pos:column="7">/* context switch counters not implemented */</comment>
      <expr_stmt><expr><name><name pos:line="429" pos:column="7">pse<pos:position pos:line="429" pos:column="10"/></name><operator pos:line="429" pos:column="10">.<pos:position pos:line="429" pos:column="11"/></operator><name pos:line="429" pos:column="11">cswitch_vol<pos:position pos:line="429" pos:column="22"/></name></name> <operator pos:line="429" pos:column="23">=<pos:position pos:line="429" pos:column="24"/></operator> <operator pos:line="429" pos:column="25">-<pos:position pos:line="429" pos:column="26"/></operator><literal type="number" pos:line="429" pos:column="26">1<pos:position pos:line="429" pos:column="27"/></literal></expr>;<pos:position pos:line="429" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="430" pos:column="7">pse<pos:position pos:line="430" pos:column="10"/></name><operator pos:line="430" pos:column="10">.<pos:position pos:line="430" pos:column="11"/></operator><name pos:line="430" pos:column="11">cswitch_invol<pos:position pos:line="430" pos:column="24"/></name></name> <operator pos:line="430" pos:column="25">=<pos:position pos:line="430" pos:column="26"/></operator> <operator pos:line="430" pos:column="27">-<pos:position pos:line="430" pos:column="28"/></operator><literal type="number" pos:line="430" pos:column="28">1<pos:position pos:line="430" pos:column="29"/></literal></expr>;<pos:position pos:line="430" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="432" pos:column="7">ps_list_add<pos:position pos:line="432" pos:column="18"/></name><argument_list pos:line="432" pos:column="18">(<argument><expr><name><name pos:line="432" pos:column="19">procs<pos:position pos:line="432" pos:column="24"/></name><index pos:line="432" pos:column="24">[<expr><name pos:line="432" pos:column="25">i<pos:position pos:line="432" pos:column="26"/></name></expr>]<pos:position pos:line="432" pos:column="27"/></index></name><operator pos:line="432" pos:column="27">.<pos:position pos:line="432" pos:column="28"/></operator><name pos:line="432" pos:column="28">ki_comm<pos:position pos:line="432" pos:column="35"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="432" pos:column="37">have_cmdline<pos:position pos:line="432" pos:column="49"/></name></expr> ?<pos:position pos:line="432" pos:column="51"/></condition><then pos:line="432" pos:column="51"> <expr><name pos:line="432" pos:column="52">cmdline<pos:position pos:line="432" pos:column="59"/></name></expr> <pos:position pos:line="432" pos:column="60"/></then><else pos:line="432" pos:column="60">: <expr><name pos:line="432" pos:column="62">NULL<pos:position pos:line="432" pos:column="66"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="432" pos:column="68">&amp;<pos:position pos:line="432" pos:column="73"/></operator><name pos:line="432" pos:column="69">pse<pos:position pos:line="432" pos:column="72"/></name></expr></argument>)<pos:position pos:line="432" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="74"/></expr_stmt>

      <switch pos:line="434" pos:column="7">switch <condition pos:line="434" pos:column="14">(<expr><name><name pos:line="434" pos:column="15">procs<pos:position pos:line="434" pos:column="20"/></name><index pos:line="434" pos:column="20">[<expr><name pos:line="434" pos:column="21">i<pos:position pos:line="434" pos:column="22"/></name></expr>]<pos:position pos:line="434" pos:column="23"/></index></name><operator pos:line="434" pos:column="23">.<pos:position pos:line="434" pos:column="24"/></operator><name pos:line="434" pos:column="24">ki_stat<pos:position pos:line="434" pos:column="31"/></name></expr>)<pos:position pos:line="434" pos:column="32"/></condition> <block pos:line="434" pos:column="33">{
      <case pos:line="435" pos:column="7">case <expr><name pos:line="435" pos:column="12">SSTOP<pos:position pos:line="435" pos:column="17"/></name></expr>:<pos:position pos:line="435" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="436" pos:column="9">stopped<pos:position pos:line="436" pos:column="16"/></name><operator pos:line="436" pos:column="16">++<pos:position pos:line="436" pos:column="18"/></operator></expr>;<pos:position pos:line="436" pos:column="19"/></expr_stmt>
        <break pos:line="437" pos:column="9">break;<pos:position pos:line="437" pos:column="15"/></break>
      <case pos:line="438" pos:column="7">case <expr><name pos:line="438" pos:column="12">SSLEEP<pos:position pos:line="438" pos:column="18"/></name></expr>:<pos:position pos:line="438" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="439" pos:column="9">sleeping<pos:position pos:line="439" pos:column="17"/></name><operator pos:line="439" pos:column="17">++<pos:position pos:line="439" pos:column="19"/></operator></expr>;<pos:position pos:line="439" pos:column="20"/></expr_stmt>
        <break pos:line="440" pos:column="9">break;<pos:position pos:line="440" pos:column="15"/></break>
      <case pos:line="441" pos:column="7">case <expr><name pos:line="441" pos:column="12">SRUN<pos:position pos:line="441" pos:column="16"/></name></expr>:<pos:position pos:line="441" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="442" pos:column="9">running<pos:position pos:line="442" pos:column="16"/></name><operator pos:line="442" pos:column="16">++<pos:position pos:line="442" pos:column="18"/></operator></expr>;<pos:position pos:line="442" pos:column="19"/></expr_stmt>
        <break pos:line="443" pos:column="9">break;<pos:position pos:line="443" pos:column="15"/></break>
      <case pos:line="444" pos:column="7">case <expr><name pos:line="444" pos:column="12">SIDL<pos:position pos:line="444" pos:column="16"/></name></expr>:<pos:position pos:line="444" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="445" pos:column="9">idle<pos:position pos:line="445" pos:column="13"/></name><operator pos:line="445" pos:column="13">++<pos:position pos:line="445" pos:column="15"/></operator></expr>;<pos:position pos:line="445" pos:column="16"/></expr_stmt>
        <break pos:line="446" pos:column="9">break;<pos:position pos:line="446" pos:column="15"/></break>
      <case pos:line="447" pos:column="7">case <expr><name pos:line="447" pos:column="12">SWAIT<pos:position pos:line="447" pos:column="17"/></name></expr>:<pos:position pos:line="447" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="448" pos:column="9">wait<pos:position pos:line="448" pos:column="13"/></name><operator pos:line="448" pos:column="13">++<pos:position pos:line="448" pos:column="15"/></operator></expr>;<pos:position pos:line="448" pos:column="16"/></expr_stmt>
        <break pos:line="449" pos:column="9">break;<pos:position pos:line="449" pos:column="15"/></break>
      <case pos:line="450" pos:column="7">case <expr><name pos:line="450" pos:column="12">SLOCK<pos:position pos:line="450" pos:column="17"/></name></expr>:<pos:position pos:line="450" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="451" pos:column="9">blocked<pos:position pos:line="451" pos:column="16"/></name><operator pos:line="451" pos:column="16">++<pos:position pos:line="451" pos:column="18"/></operator></expr>;<pos:position pos:line="451" pos:column="19"/></expr_stmt>
        <break pos:line="452" pos:column="9">break;<pos:position pos:line="452" pos:column="15"/></break>
      <case pos:line="453" pos:column="7">case <expr><name pos:line="453" pos:column="12">SZOMB<pos:position pos:line="453" pos:column="17"/></name></expr>:<pos:position pos:line="453" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="454" pos:column="9">zombies<pos:position pos:line="454" pos:column="16"/></name><operator pos:line="454" pos:column="16">++<pos:position pos:line="454" pos:column="18"/></operator></expr>;<pos:position pos:line="454" pos:column="19"/></expr_stmt>
        <break pos:line="455" pos:column="9">break;<pos:position pos:line="455" pos:column="15"/></break>
      }<pos:position pos:line="456" pos:column="8"/></block></switch>
    }<pos:position pos:line="457" pos:column="6"/></block></then></if> <comment type="block" pos:line="457" pos:column="7">/* if ((proc_ptr == NULL) || (proc_ptr-&gt;ki_pid != procs[i].ki_pid)) */</comment>
  }<pos:position pos:line="458" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="460" pos:column="3">kvm_close<pos:position pos:line="460" pos:column="12"/></name><argument_list pos:line="460" pos:column="12">(<argument><expr><name pos:line="460" pos:column="13">kd<pos:position pos:line="460" pos:column="15"/></name></expr></argument>)<pos:position pos:line="460" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="460" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="462" pos:column="3">ps_submit_state<pos:position pos:line="462" pos:column="18"/></name><argument_list pos:line="462" pos:column="18">(<argument><expr><literal type="string" pos:line="462" pos:column="19">"running"<pos:position pos:line="462" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="462" pos:column="30">running<pos:position pos:line="462" pos:column="37"/></name></expr></argument>)<pos:position pos:line="462" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="463" pos:column="3">ps_submit_state<pos:position pos:line="463" pos:column="18"/></name><argument_list pos:line="463" pos:column="18">(<argument><expr><literal type="string" pos:line="463" pos:column="19">"sleeping"<pos:position pos:line="463" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="463" pos:column="31">sleeping<pos:position pos:line="463" pos:column="39"/></name></expr></argument>)<pos:position pos:line="463" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="463" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="464" pos:column="3">ps_submit_state<pos:position pos:line="464" pos:column="18"/></name><argument_list pos:line="464" pos:column="18">(<argument><expr><literal type="string" pos:line="464" pos:column="19">"zombies"<pos:position pos:line="464" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="464" pos:column="30">zombies<pos:position pos:line="464" pos:column="37"/></name></expr></argument>)<pos:position pos:line="464" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="464" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="465" pos:column="3">ps_submit_state<pos:position pos:line="465" pos:column="18"/></name><argument_list pos:line="465" pos:column="18">(<argument><expr><literal type="string" pos:line="465" pos:column="19">"stopped"<pos:position pos:line="465" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="465" pos:column="30">stopped<pos:position pos:line="465" pos:column="37"/></name></expr></argument>)<pos:position pos:line="465" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="466" pos:column="3">ps_submit_state<pos:position pos:line="466" pos:column="18"/></name><argument_list pos:line="466" pos:column="18">(<argument><expr><literal type="string" pos:line="466" pos:column="19">"blocked"<pos:position pos:line="466" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="466" pos:column="30">blocked<pos:position pos:line="466" pos:column="37"/></name></expr></argument>)<pos:position pos:line="466" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="466" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="467" pos:column="3">ps_submit_state<pos:position pos:line="467" pos:column="18"/></name><argument_list pos:line="467" pos:column="18">(<argument><expr><literal type="string" pos:line="467" pos:column="19">"idle"<pos:position pos:line="467" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="467" pos:column="27">idle<pos:position pos:line="467" pos:column="31"/></name></expr></argument>)<pos:position pos:line="467" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="467" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="468" pos:column="3">ps_submit_state<pos:position pos:line="468" pos:column="18"/></name><argument_list pos:line="468" pos:column="18">(<argument><expr><literal type="string" pos:line="468" pos:column="19">"wait"<pos:position pos:line="468" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="468" pos:column="27">wait<pos:position pos:line="468" pos:column="31"/></name></expr></argument>)<pos:position pos:line="468" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="33"/></expr_stmt>

  <for pos:line="470" pos:column="3">for <control pos:line="470" pos:column="7">(<init><decl><type><name pos:line="470" pos:column="8">procstat_t<pos:position pos:line="470" pos:column="18"/></name> <modifier pos:line="470" pos:column="19">*<pos:position pos:line="470" pos:column="20"/></modifier></type><name pos:line="470" pos:column="20">ps_ptr<pos:position pos:line="470" pos:column="26"/></name> <init pos:line="470" pos:column="27">= <expr><name pos:line="470" pos:column="29">list_head_g<pos:position pos:line="470" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="470" pos:column="41"/></init> <condition><expr><name pos:line="470" pos:column="42">ps_ptr<pos:position pos:line="470" pos:column="48"/></name> <operator pos:line="470" pos:column="49">!=<pos:position pos:line="470" pos:column="51"/></operator> <name pos:line="470" pos:column="52">NULL<pos:position pos:line="470" pos:column="56"/></name></expr>;<pos:position pos:line="470" pos:column="57"/></condition> <incr><expr><name pos:line="470" pos:column="58">ps_ptr<pos:position pos:line="470" pos:column="64"/></name> <operator pos:line="470" pos:column="65">=<pos:position pos:line="470" pos:column="66"/></operator> <name><name pos:line="470" pos:column="67">ps_ptr<pos:position pos:line="470" pos:column="73"/></name><operator pos:line="470" pos:column="73">-&gt;<pos:position pos:line="470" pos:column="78"/></operator><name pos:line="470" pos:column="75">next<pos:position pos:line="470" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="470" pos:column="80"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="471" pos:column="5">ps_submit_proc_list<pos:position pos:line="471" pos:column="24"/></name><argument_list pos:line="471" pos:column="24">(<argument><expr><name pos:line="471" pos:column="25">ps_ptr<pos:position pos:line="471" pos:column="31"/></name></expr></argument>)<pos:position pos:line="471" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="33"/></expr_stmt></block></for>
<comment type="block" pos:line="472" pos:column="1">/* #endif HAVE_LIBKVM_GETPROCS &amp;&amp; HAVE_STRUCT_KINFO_PROC_FREEBSD */</comment>

<cpp:elif pos:line="474" pos:column="1">#<cpp:directive pos:line="474" pos:column="2">elif<pos:position pos:line="474" pos:column="6"/></cpp:directive> <expr><name pos:line="474" pos:column="7">HAVE_LIBKVM_GETPROCS<pos:position pos:line="474" pos:column="27"/></name> <operator pos:line="474" pos:column="28">&amp;&amp;<pos:position pos:line="474" pos:column="38"/></operator> <name pos:line="474" pos:column="31">HAVE_STRUCT_KINFO_PROC_OPENBSD<pos:position pos:line="474" pos:column="61"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="475" pos:column="3">int<pos:position pos:line="475" pos:column="6"/></name></type> <name pos:line="475" pos:column="7">running<pos:position pos:line="475" pos:column="14"/></name> <init pos:line="475" pos:column="15">= <expr><literal type="number" pos:line="475" pos:column="17">0<pos:position pos:line="475" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="475" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="476" pos:column="3">int<pos:position pos:line="476" pos:column="6"/></name></type> <name pos:line="476" pos:column="7">sleeping<pos:position pos:line="476" pos:column="15"/></name> <init pos:line="476" pos:column="16">= <expr><literal type="number" pos:line="476" pos:column="18">0<pos:position pos:line="476" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="476" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="477" pos:column="3">int<pos:position pos:line="477" pos:column="6"/></name></type> <name pos:line="477" pos:column="7">zombies<pos:position pos:line="477" pos:column="14"/></name> <init pos:line="477" pos:column="15">= <expr><literal type="number" pos:line="477" pos:column="17">0<pos:position pos:line="477" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="477" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="478" pos:column="3">int<pos:position pos:line="478" pos:column="6"/></name></type> <name pos:line="478" pos:column="7">stopped<pos:position pos:line="478" pos:column="14"/></name> <init pos:line="478" pos:column="15">= <expr><literal type="number" pos:line="478" pos:column="17">0<pos:position pos:line="478" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="478" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="479" pos:column="3">int<pos:position pos:line="479" pos:column="6"/></name></type> <name pos:line="479" pos:column="7">onproc<pos:position pos:line="479" pos:column="13"/></name> <init pos:line="479" pos:column="14">= <expr><literal type="number" pos:line="479" pos:column="16">0<pos:position pos:line="479" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="479" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="480" pos:column="3">int<pos:position pos:line="480" pos:column="6"/></name></type> <name pos:line="480" pos:column="7">idle<pos:position pos:line="480" pos:column="11"/></name> <init pos:line="480" pos:column="12">= <expr><literal type="number" pos:line="480" pos:column="14">0<pos:position pos:line="480" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="480" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="481" pos:column="3">int<pos:position pos:line="481" pos:column="6"/></name></type> <name pos:line="481" pos:column="7">dead<pos:position pos:line="481" pos:column="11"/></name> <init pos:line="481" pos:column="12">= <expr><literal type="number" pos:line="481" pos:column="14">0<pos:position pos:line="481" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="481" pos:column="16"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="483" pos:column="3">kvm_t<pos:position pos:line="483" pos:column="8"/></name> <modifier pos:line="483" pos:column="9">*<pos:position pos:line="483" pos:column="10"/></modifier></type><name pos:line="483" pos:column="10">kd<pos:position pos:line="483" pos:column="12"/></name></decl>;<pos:position pos:line="483" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="484" pos:column="3">char<pos:position pos:line="484" pos:column="7"/></name></type> <name><name pos:line="484" pos:column="8">errbuf<pos:position pos:line="484" pos:column="14"/></name><index pos:line="484" pos:column="14">[<expr><literal type="number" pos:line="484" pos:column="15">1024<pos:position pos:line="484" pos:column="19"/></literal></expr>]<pos:position pos:line="484" pos:column="20"/></index></name></decl>;<pos:position pos:line="484" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="485" pos:column="3">struct<pos:position pos:line="485" pos:column="9"/></name> <name pos:line="485" pos:column="10">kinfo_proc<pos:position pos:line="485" pos:column="20"/></name></name> <modifier pos:line="485" pos:column="21">*<pos:position pos:line="485" pos:column="22"/></modifier></type><name pos:line="485" pos:column="22">procs<pos:position pos:line="485" pos:column="27"/></name></decl>;<pos:position pos:line="485" pos:column="28"/></decl_stmt> <comment type="block" pos:line="485" pos:column="29">/* array of processes */</comment>
  <decl_stmt><decl><type><name><name pos:line="486" pos:column="3">struct<pos:position pos:line="486" pos:column="9"/></name> <name pos:line="486" pos:column="10">kinfo_proc<pos:position pos:line="486" pos:column="20"/></name></name> <modifier pos:line="486" pos:column="21">*<pos:position pos:line="486" pos:column="22"/></modifier></type><name pos:line="486" pos:column="22">proc_ptr<pos:position pos:line="486" pos:column="30"/></name> <init pos:line="486" pos:column="31">= <expr><name pos:line="486" pos:column="33">NULL<pos:position pos:line="486" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="486" pos:column="38"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="487" pos:column="3">int<pos:position pos:line="487" pos:column="6"/></name></type> <name pos:line="487" pos:column="7">count<pos:position pos:line="487" pos:column="12"/></name></decl>;<pos:position pos:line="487" pos:column="13"/></decl_stmt> <comment type="block" pos:line="487" pos:column="14">/* returns number of processes */</comment>

  <decl_stmt><decl><type><name pos:line="489" pos:column="3">process_entry_t<pos:position pos:line="489" pos:column="18"/></name></type> <name pos:line="489" pos:column="19">pse<pos:position pos:line="489" pos:column="22"/></name></decl>;<pos:position pos:line="489" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="491" pos:column="3">ps_list_reset<pos:position pos:line="491" pos:column="16"/></name><argument_list pos:line="491" pos:column="16">()<pos:position pos:line="491" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="491" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="493" pos:column="3">/* Open the kvm interface, get a descriptor */</comment>
  <expr_stmt><expr><name pos:line="494" pos:column="3">kd<pos:position pos:line="494" pos:column="5"/></name> <operator pos:line="494" pos:column="6">=<pos:position pos:line="494" pos:column="7"/></operator> <call><name pos:line="494" pos:column="8">kvm_openfiles<pos:position pos:line="494" pos:column="21"/></name><argument_list pos:line="494" pos:column="21">(<argument><expr><name pos:line="494" pos:column="22">NULL<pos:position pos:line="494" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="28">NULL<pos:position pos:line="494" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="34">NULL<pos:position pos:line="494" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="40">KVM_NO_FILES<pos:position pos:line="494" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="54">errbuf<pos:position pos:line="494" pos:column="60"/></name></expr></argument>)<pos:position pos:line="494" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="62"/></expr_stmt>
  <if pos:line="495" pos:column="3">if <condition pos:line="495" pos:column="6">(<expr><name pos:line="495" pos:column="7">kd<pos:position pos:line="495" pos:column="9"/></name> <operator pos:line="495" pos:column="10">==<pos:position pos:line="495" pos:column="12"/></operator> <name pos:line="495" pos:column="13">NULL<pos:position pos:line="495" pos:column="17"/></name></expr>)<pos:position pos:line="495" pos:column="18"/></condition><then pos:line="495" pos:column="18"> <block pos:line="495" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="496" pos:column="5">ERROR<pos:position pos:line="496" pos:column="10"/></name><argument_list pos:line="496" pos:column="10">(<argument><expr><literal type="string" pos:line="496" pos:column="11">"processes plugin: Cannot open kvm interface: %s"<pos:position pos:line="496" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="496" pos:column="62">errbuf<pos:position pos:line="496" pos:column="68"/></name></expr></argument>)<pos:position pos:line="496" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="70"/></expr_stmt>
    <return pos:line="497" pos:column="5">return <expr><literal type="number" pos:line="497" pos:column="12">0<pos:position pos:line="497" pos:column="13"/></literal></expr>;<pos:position pos:line="497" pos:column="14"/></return>
  }<pos:position pos:line="498" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="500" pos:column="3">/* Get the list of processes. */</comment>
  <expr_stmt><expr><name pos:line="501" pos:column="3">procs<pos:position pos:line="501" pos:column="8"/></name> <operator pos:line="501" pos:column="9">=<pos:position pos:line="501" pos:column="10"/></operator> <call><name pos:line="501" pos:column="11">kvm_getprocs<pos:position pos:line="501" pos:column="23"/></name><argument_list pos:line="501" pos:column="23">(<argument><expr><name pos:line="501" pos:column="24">kd<pos:position pos:line="501" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="501" pos:column="28">KERN_PROC_ALL<pos:position pos:line="501" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="501" pos:column="43">0<pos:position pos:line="501" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="501" pos:column="46">sizeof<argument_list pos:line="501" pos:column="52">(<argument><expr pos:line="501" pos:column="53">struct <name pos:line="501" pos:column="60">kinfo_proc<pos:position pos:line="501" pos:column="70"/></name></expr></argument>)<pos:position pos:line="501" pos:column="71"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="501" pos:column="73">&amp;<pos:position pos:line="501" pos:column="78"/></operator><name pos:line="501" pos:column="74">count<pos:position pos:line="501" pos:column="79"/></name></expr></argument>)<pos:position pos:line="501" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="501" pos:column="81"/></expr_stmt>
  <if pos:line="502" pos:column="3">if <condition pos:line="502" pos:column="6">(<expr><name pos:line="502" pos:column="7">procs<pos:position pos:line="502" pos:column="12"/></name> <operator pos:line="502" pos:column="13">==<pos:position pos:line="502" pos:column="15"/></operator> <name pos:line="502" pos:column="16">NULL<pos:position pos:line="502" pos:column="20"/></name></expr>)<pos:position pos:line="502" pos:column="21"/></condition><then pos:line="502" pos:column="21"> <block pos:line="502" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="503" pos:column="5">ERROR<pos:position pos:line="503" pos:column="10"/></name><argument_list pos:line="503" pos:column="10">(<argument><expr><literal type="string" pos:line="503" pos:column="11">"processes plugin: Cannot get kvm processes list: %s"<pos:position pos:line="503" pos:column="64"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="504" pos:column="11">kvm_geterr<pos:position pos:line="504" pos:column="21"/></name><argument_list pos:line="504" pos:column="21">(<argument><expr><name pos:line="504" pos:column="22">kd<pos:position pos:line="504" pos:column="24"/></name></expr></argument>)<pos:position pos:line="504" pos:column="25"/></argument_list></call></expr></argument>)<pos:position pos:line="504" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="504" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="505" pos:column="5">kvm_close<pos:position pos:line="505" pos:column="14"/></name><argument_list pos:line="505" pos:column="14">(<argument><expr><name pos:line="505" pos:column="15">kd<pos:position pos:line="505" pos:column="17"/></name></expr></argument>)<pos:position pos:line="505" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="505" pos:column="19"/></expr_stmt>
    <return pos:line="506" pos:column="5">return <expr><literal type="number" pos:line="506" pos:column="12">0<pos:position pos:line="506" pos:column="13"/></literal></expr>;<pos:position pos:line="506" pos:column="14"/></return>
  }<pos:position pos:line="507" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="509" pos:column="3">/* Iterate through the processes in kinfo_proc */</comment>
  <for pos:line="510" pos:column="3">for <control pos:line="510" pos:column="7">(<init><decl><type><name pos:line="510" pos:column="8">int<pos:position pos:line="510" pos:column="11"/></name></type> <name pos:line="510" pos:column="12">i<pos:position pos:line="510" pos:column="13"/></name> <init pos:line="510" pos:column="14">= <expr><literal type="number" pos:line="510" pos:column="16">0<pos:position pos:line="510" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="510" pos:column="18"/></init> <condition><expr><name pos:line="510" pos:column="19">i<pos:position pos:line="510" pos:column="20"/></name> <operator pos:line="510" pos:column="21">&lt;<pos:position pos:line="510" pos:column="25"/></operator> <name pos:line="510" pos:column="23">count<pos:position pos:line="510" pos:column="28"/></name></expr>;<pos:position pos:line="510" pos:column="29"/></condition> <incr><expr><name pos:line="510" pos:column="30">i<pos:position pos:line="510" pos:column="31"/></name><operator pos:line="510" pos:column="31">++<pos:position pos:line="510" pos:column="33"/></operator></expr></incr>)<pos:position pos:line="510" pos:column="34"/></control> <block pos:line="510" pos:column="35">{
    <comment type="block" pos:line="511" pos:column="5">/* Create only one process list entry per _process_, i.e.
     * filter out threads (duplicate PID entries). */</comment>
    <if pos:line="513" pos:column="5">if <condition pos:line="513" pos:column="8">(<expr><operator pos:line="513" pos:column="9">(<pos:position pos:line="513" pos:column="10"/></operator><name pos:line="513" pos:column="10">proc_ptr<pos:position pos:line="513" pos:column="18"/></name> <operator pos:line="513" pos:column="19">==<pos:position pos:line="513" pos:column="21"/></operator> <name pos:line="513" pos:column="22">NULL<pos:position pos:line="513" pos:column="26"/></name><operator pos:line="513" pos:column="26">)<pos:position pos:line="513" pos:column="27"/></operator> <operator pos:line="513" pos:column="28">||<pos:position pos:line="513" pos:column="30"/></operator> <operator pos:line="513" pos:column="31">(<pos:position pos:line="513" pos:column="32"/></operator><name><name pos:line="513" pos:column="32">proc_ptr<pos:position pos:line="513" pos:column="40"/></name><operator pos:line="513" pos:column="40">-&gt;<pos:position pos:line="513" pos:column="45"/></operator><name pos:line="513" pos:column="42">p_pid<pos:position pos:line="513" pos:column="47"/></name></name> <operator pos:line="513" pos:column="48">!=<pos:position pos:line="513" pos:column="50"/></operator> <name><name pos:line="513" pos:column="51">procs<pos:position pos:line="513" pos:column="56"/></name><index pos:line="513" pos:column="56">[<expr><name pos:line="513" pos:column="57">i<pos:position pos:line="513" pos:column="58"/></name></expr>]<pos:position pos:line="513" pos:column="59"/></index></name><operator pos:line="513" pos:column="59">.<pos:position pos:line="513" pos:column="60"/></operator><name pos:line="513" pos:column="60">p_pid<pos:position pos:line="513" pos:column="65"/></name><operator pos:line="513" pos:column="65">)<pos:position pos:line="513" pos:column="66"/></operator></expr>)<pos:position pos:line="513" pos:column="67"/></condition><then pos:line="513" pos:column="67"> <block pos:line="513" pos:column="68">{
      <decl_stmt><decl><type><name pos:line="514" pos:column="7">char<pos:position pos:line="514" pos:column="11"/></name></type> <name><name pos:line="514" pos:column="12">cmdline<pos:position pos:line="514" pos:column="19"/></name><index pos:line="514" pos:column="19">[<expr><name pos:line="514" pos:column="20">CMDLINE_BUFFER_SIZE<pos:position pos:line="514" pos:column="39"/></name></expr>]<pos:position pos:line="514" pos:column="40"/></index></name> <init pos:line="514" pos:column="41">= <expr><literal type="string" pos:line="514" pos:column="43">""<pos:position pos:line="514" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="514" pos:column="46"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="515" pos:column="7">_Bool<pos:position pos:line="515" pos:column="12"/></name></type> <name pos:line="515" pos:column="13">have_cmdline<pos:position pos:line="515" pos:column="25"/></name> <init pos:line="515" pos:column="26">= <expr><literal type="number" pos:line="515" pos:column="28">0<pos:position pos:line="515" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="515" pos:column="30"/></decl_stmt>

      <expr_stmt><expr><name pos:line="517" pos:column="7">proc_ptr<pos:position pos:line="517" pos:column="15"/></name> <operator pos:line="517" pos:column="16">=<pos:position pos:line="517" pos:column="17"/></operator> <operator pos:line="517" pos:column="18">&amp;<pos:position pos:line="517" pos:column="23"/></operator><operator pos:line="517" pos:column="19">(<pos:position pos:line="517" pos:column="20"/></operator><name><name pos:line="517" pos:column="20">procs<pos:position pos:line="517" pos:column="25"/></name><index pos:line="517" pos:column="25">[<expr><name pos:line="517" pos:column="26">i<pos:position pos:line="517" pos:column="27"/></name></expr>]<pos:position pos:line="517" pos:column="28"/></index></name><operator pos:line="517" pos:column="28">)<pos:position pos:line="517" pos:column="29"/></operator></expr>;<pos:position pos:line="517" pos:column="30"/></expr_stmt>
      <comment type="block" pos:line="518" pos:column="7">/* Don't probe zombie processes  */</comment>
      <if pos:line="519" pos:column="7">if <condition pos:line="519" pos:column="10">(<expr><operator pos:line="519" pos:column="11">!<pos:position pos:line="519" pos:column="12"/></operator><call><name pos:line="519" pos:column="12">P_ZOMBIE<pos:position pos:line="519" pos:column="20"/></name><argument_list pos:line="519" pos:column="20">(<argument><expr><name pos:line="519" pos:column="21">proc_ptr<pos:position pos:line="519" pos:column="29"/></name></expr></argument>)<pos:position pos:line="519" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="519" pos:column="31"/></condition><then pos:line="519" pos:column="31"> <block pos:line="519" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="520" pos:column="9">char<pos:position pos:line="520" pos:column="13"/></name> <modifier pos:line="520" pos:column="14">*<pos:position pos:line="520" pos:column="15"/></modifier><modifier pos:line="520" pos:column="15">*<pos:position pos:line="520" pos:column="16"/></modifier></type><name pos:line="520" pos:column="16">argv<pos:position pos:line="520" pos:column="20"/></name></decl>;<pos:position pos:line="520" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="521" pos:column="9">int<pos:position pos:line="521" pos:column="12"/></name></type> <name pos:line="521" pos:column="13">argc<pos:position pos:line="521" pos:column="17"/></name></decl>;<pos:position pos:line="521" pos:column="18"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="522" pos:column="9">int<pos:position pos:line="522" pos:column="12"/></name></type> <name pos:line="522" pos:column="13">status<pos:position pos:line="522" pos:column="19"/></name></decl>;<pos:position pos:line="522" pos:column="20"/></decl_stmt>

        <comment type="block" pos:line="524" pos:column="9">/* retrieve the arguments */</comment>
        <expr_stmt><expr><name pos:line="525" pos:column="9">argv<pos:position pos:line="525" pos:column="13"/></name> <operator pos:line="525" pos:column="14">=<pos:position pos:line="525" pos:column="15"/></operator> <call><name pos:line="525" pos:column="16">kvm_getargv<pos:position pos:line="525" pos:column="27"/></name><argument_list pos:line="525" pos:column="27">(<argument><expr><name pos:line="525" pos:column="28">kd<pos:position pos:line="525" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="525" pos:column="32">proc_ptr<pos:position pos:line="525" pos:column="40"/></name></expr></argument>, <comment type="block" pos:line="525" pos:column="42">/* nchr = */</comment> <argument><expr><literal type="number" pos:line="525" pos:column="55">0<pos:position pos:line="525" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="525" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="525" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="526" pos:column="9">argc<pos:position pos:line="526" pos:column="13"/></name> <operator pos:line="526" pos:column="14">=<pos:position pos:line="526" pos:column="15"/></operator> <literal type="number" pos:line="526" pos:column="16">0<pos:position pos:line="526" pos:column="17"/></literal></expr>;<pos:position pos:line="526" pos:column="18"/></expr_stmt>
        <if pos:line="527" pos:column="9">if <condition pos:line="527" pos:column="12">(<expr><operator pos:line="527" pos:column="13">(<pos:position pos:line="527" pos:column="14"/></operator><name pos:line="527" pos:column="14">argv<pos:position pos:line="527" pos:column="18"/></name> <operator pos:line="527" pos:column="19">!=<pos:position pos:line="527" pos:column="21"/></operator> <name pos:line="527" pos:column="22">NULL<pos:position pos:line="527" pos:column="26"/></name><operator pos:line="527" pos:column="26">)<pos:position pos:line="527" pos:column="27"/></operator> <operator pos:line="527" pos:column="28">&amp;&amp;<pos:position pos:line="527" pos:column="38"/></operator> <operator pos:line="527" pos:column="31">(<pos:position pos:line="527" pos:column="32"/></operator><name><name pos:line="527" pos:column="32">argv<pos:position pos:line="527" pos:column="36"/></name><index pos:line="527" pos:column="36">[<expr><literal type="number" pos:line="527" pos:column="37">0<pos:position pos:line="527" pos:column="38"/></literal></expr>]<pos:position pos:line="527" pos:column="39"/></index></name> <operator pos:line="527" pos:column="40">!=<pos:position pos:line="527" pos:column="42"/></operator> <name pos:line="527" pos:column="43">NULL<pos:position pos:line="527" pos:column="47"/></name><operator pos:line="527" pos:column="47">)<pos:position pos:line="527" pos:column="48"/></operator></expr>)<pos:position pos:line="527" pos:column="49"/></condition><then pos:line="527" pos:column="49"> <block pos:line="527" pos:column="50">{
          <while pos:line="528" pos:column="11">while <condition pos:line="528" pos:column="17">(<expr><name><name pos:line="528" pos:column="18">argv<pos:position pos:line="528" pos:column="22"/></name><index pos:line="528" pos:column="22">[<expr><name pos:line="528" pos:column="23">argc<pos:position pos:line="528" pos:column="27"/></name></expr>]<pos:position pos:line="528" pos:column="28"/></index></name> <operator pos:line="528" pos:column="29">!=<pos:position pos:line="528" pos:column="31"/></operator> <name pos:line="528" pos:column="32">NULL<pos:position pos:line="528" pos:column="36"/></name></expr>)<pos:position pos:line="528" pos:column="37"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="529" pos:column="13">argc<pos:position pos:line="529" pos:column="17"/></name><operator pos:line="529" pos:column="17">++<pos:position pos:line="529" pos:column="19"/></operator></expr>;<pos:position pos:line="529" pos:column="20"/></expr_stmt></block></while>

          <expr_stmt><expr><name pos:line="531" pos:column="11">status<pos:position pos:line="531" pos:column="17"/></name> <operator pos:line="531" pos:column="18">=<pos:position pos:line="531" pos:column="19"/></operator> <call><name pos:line="531" pos:column="20">strjoin<pos:position pos:line="531" pos:column="27"/></name><argument_list pos:line="531" pos:column="27">(<argument><expr><name pos:line="531" pos:column="28">cmdline<pos:position pos:line="531" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="531" pos:column="37">sizeof<argument_list pos:line="531" pos:column="43">(<argument><expr><name pos:line="531" pos:column="44">cmdline<pos:position pos:line="531" pos:column="51"/></name></expr></argument>)<pos:position pos:line="531" pos:column="52"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="531" pos:column="54">argv<pos:position pos:line="531" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="531" pos:column="60">argc<pos:position pos:line="531" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="531" pos:column="66">" "<pos:position pos:line="531" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="531" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="531" pos:column="71"/></expr_stmt>
          <if pos:line="532" pos:column="11">if <condition pos:line="532" pos:column="14">(<expr><name pos:line="532" pos:column="15">status<pos:position pos:line="532" pos:column="21"/></name> <operator pos:line="532" pos:column="22">&lt;<pos:position pos:line="532" pos:column="26"/></operator> <literal type="number" pos:line="532" pos:column="24">0<pos:position pos:line="532" pos:column="25"/></literal></expr>)<pos:position pos:line="532" pos:column="26"/></condition><then pos:line="532" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="533" pos:column="13">WARNING<pos:position pos:line="533" pos:column="20"/></name><argument_list pos:line="533" pos:column="20">(<argument><expr><literal type="string" pos:line="533" pos:column="21">"processes plugin: Command line did not fit into buffer."<pos:position pos:line="533" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="533" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="533" pos:column="80"/></expr_stmt></block></then>
          <else pos:line="534" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="535" pos:column="13">have_cmdline<pos:position pos:line="535" pos:column="25"/></name> <operator pos:line="535" pos:column="26">=<pos:position pos:line="535" pos:column="27"/></operator> <literal type="number" pos:line="535" pos:column="28">1<pos:position pos:line="535" pos:column="29"/></literal></expr>;<pos:position pos:line="535" pos:column="30"/></expr_stmt></block></else></if>
        }<pos:position pos:line="536" pos:column="10"/></block></then></if>
      }<pos:position pos:line="537" pos:column="8"/></block></then></if> <comment type="block" pos:line="537" pos:column="9">/* if (process has argument list) */</comment>

      <expr_stmt><expr><call><name pos:line="539" pos:column="7">memset<pos:position pos:line="539" pos:column="13"/></name><argument_list pos:line="539" pos:column="13">(<argument><expr><operator pos:line="539" pos:column="14">&amp;<pos:position pos:line="539" pos:column="19"/></operator><name pos:line="539" pos:column="15">pse<pos:position pos:line="539" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="539" pos:column="20">0<pos:position pos:line="539" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="539" pos:column="23">sizeof<argument_list pos:line="539" pos:column="29">(<argument><expr><name pos:line="539" pos:column="30">pse<pos:position pos:line="539" pos:column="33"/></name></expr></argument>)<pos:position pos:line="539" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="539" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="539" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="540" pos:column="7">pse<pos:position pos:line="540" pos:column="10"/></name><operator pos:line="540" pos:column="10">.<pos:position pos:line="540" pos:column="11"/></operator><name pos:line="540" pos:column="11">id<pos:position pos:line="540" pos:column="13"/></name></name> <operator pos:line="540" pos:column="14">=<pos:position pos:line="540" pos:column="15"/></operator> <name><name pos:line="540" pos:column="16">procs<pos:position pos:line="540" pos:column="21"/></name><index pos:line="540" pos:column="21">[<expr><name pos:line="540" pos:column="22">i<pos:position pos:line="540" pos:column="23"/></name></expr>]<pos:position pos:line="540" pos:column="24"/></index></name><operator pos:line="540" pos:column="24">.<pos:position pos:line="540" pos:column="25"/></operator><name pos:line="540" pos:column="25">p_pid<pos:position pos:line="540" pos:column="30"/></name></expr>;<pos:position pos:line="540" pos:column="31"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="542" pos:column="7">pse<pos:position pos:line="542" pos:column="10"/></name><operator pos:line="542" pos:column="10">.<pos:position pos:line="542" pos:column="11"/></operator><name pos:line="542" pos:column="11">num_proc<pos:position pos:line="542" pos:column="19"/></name></name> <operator pos:line="542" pos:column="20">=<pos:position pos:line="542" pos:column="21"/></operator> <literal type="number" pos:line="542" pos:column="22">1<pos:position pos:line="542" pos:column="23"/></literal></expr>;<pos:position pos:line="542" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="543" pos:column="7">pse<pos:position pos:line="543" pos:column="10"/></name><operator pos:line="543" pos:column="10">.<pos:position pos:line="543" pos:column="11"/></operator><name pos:line="543" pos:column="11">num_lwp<pos:position pos:line="543" pos:column="18"/></name></name> <operator pos:line="543" pos:column="19">=<pos:position pos:line="543" pos:column="20"/></operator> <literal type="number" pos:line="543" pos:column="21">1<pos:position pos:line="543" pos:column="22"/></literal></expr>;<pos:position pos:line="543" pos:column="23"/></expr_stmt> <comment type="block" pos:line="543" pos:column="24">/* XXX: accumulate p_tid values for a single p_pid ? */</comment>

      <expr_stmt><expr><name><name pos:line="545" pos:column="7">pse<pos:position pos:line="545" pos:column="10"/></name><operator pos:line="545" pos:column="10">.<pos:position pos:line="545" pos:column="11"/></operator><name pos:line="545" pos:column="11">vmem_rss<pos:position pos:line="545" pos:column="19"/></name></name> <operator pos:line="545" pos:column="20">=<pos:position pos:line="545" pos:column="21"/></operator> <name><name pos:line="545" pos:column="22">procs<pos:position pos:line="545" pos:column="27"/></name><index pos:line="545" pos:column="27">[<expr><name pos:line="545" pos:column="28">i<pos:position pos:line="545" pos:column="29"/></name></expr>]<pos:position pos:line="545" pos:column="30"/></index></name><operator pos:line="545" pos:column="30">.<pos:position pos:line="545" pos:column="31"/></operator><name pos:line="545" pos:column="31">p_vm_rssize<pos:position pos:line="545" pos:column="42"/></name> <operator pos:line="545" pos:column="43">*<pos:position pos:line="545" pos:column="44"/></operator> <name pos:line="545" pos:column="45">pagesize<pos:position pos:line="545" pos:column="53"/></name></expr>;<pos:position pos:line="545" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="546" pos:column="7">pse<pos:position pos:line="546" pos:column="10"/></name><operator pos:line="546" pos:column="10">.<pos:position pos:line="546" pos:column="11"/></operator><name pos:line="546" pos:column="11">vmem_data<pos:position pos:line="546" pos:column="20"/></name></name> <operator pos:line="546" pos:column="21">=<pos:position pos:line="546" pos:column="22"/></operator> <name><name pos:line="546" pos:column="23">procs<pos:position pos:line="546" pos:column="28"/></name><index pos:line="546" pos:column="28">[<expr><name pos:line="546" pos:column="29">i<pos:position pos:line="546" pos:column="30"/></name></expr>]<pos:position pos:line="546" pos:column="31"/></index></name><operator pos:line="546" pos:column="31">.<pos:position pos:line="546" pos:column="32"/></operator><name pos:line="546" pos:column="32">p_vm_dsize<pos:position pos:line="546" pos:column="42"/></name> <operator pos:line="546" pos:column="43">*<pos:position pos:line="546" pos:column="44"/></operator> <name pos:line="546" pos:column="45">pagesize<pos:position pos:line="546" pos:column="53"/></name></expr>;<pos:position pos:line="546" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="547" pos:column="7">pse<pos:position pos:line="547" pos:column="10"/></name><operator pos:line="547" pos:column="10">.<pos:position pos:line="547" pos:column="11"/></operator><name pos:line="547" pos:column="11">vmem_code<pos:position pos:line="547" pos:column="20"/></name></name> <operator pos:line="547" pos:column="21">=<pos:position pos:line="547" pos:column="22"/></operator> <name><name pos:line="547" pos:column="23">procs<pos:position pos:line="547" pos:column="28"/></name><index pos:line="547" pos:column="28">[<expr><name pos:line="547" pos:column="29">i<pos:position pos:line="547" pos:column="30"/></name></expr>]<pos:position pos:line="547" pos:column="31"/></index></name><operator pos:line="547" pos:column="31">.<pos:position pos:line="547" pos:column="32"/></operator><name pos:line="547" pos:column="32">p_vm_tsize<pos:position pos:line="547" pos:column="42"/></name> <operator pos:line="547" pos:column="43">*<pos:position pos:line="547" pos:column="44"/></operator> <name pos:line="547" pos:column="45">pagesize<pos:position pos:line="547" pos:column="53"/></name></expr>;<pos:position pos:line="547" pos:column="54"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="548" pos:column="7">pse<pos:position pos:line="548" pos:column="10"/></name><operator pos:line="548" pos:column="10">.<pos:position pos:line="548" pos:column="11"/></operator><name pos:line="548" pos:column="11">stack_size<pos:position pos:line="548" pos:column="21"/></name></name> <operator pos:line="548" pos:column="22">=<pos:position pos:line="548" pos:column="23"/></operator> <name><name pos:line="548" pos:column="24">procs<pos:position pos:line="548" pos:column="29"/></name><index pos:line="548" pos:column="29">[<expr><name pos:line="548" pos:column="30">i<pos:position pos:line="548" pos:column="31"/></name></expr>]<pos:position pos:line="548" pos:column="32"/></index></name><operator pos:line="548" pos:column="32">.<pos:position pos:line="548" pos:column="33"/></operator><name pos:line="548" pos:column="33">p_vm_ssize<pos:position pos:line="548" pos:column="43"/></name> <operator pos:line="548" pos:column="44">*<pos:position pos:line="548" pos:column="45"/></operator> <name pos:line="548" pos:column="46">pagesize<pos:position pos:line="548" pos:column="54"/></name></expr>;<pos:position pos:line="548" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="549" pos:column="7">pse<pos:position pos:line="549" pos:column="10"/></name><operator pos:line="549" pos:column="10">.<pos:position pos:line="549" pos:column="11"/></operator><name pos:line="549" pos:column="11">vmem_size<pos:position pos:line="549" pos:column="20"/></name></name> <operator pos:line="549" pos:column="21">=<pos:position pos:line="549" pos:column="22"/></operator> <name><name pos:line="549" pos:column="23">pse<pos:position pos:line="549" pos:column="26"/></name><operator pos:line="549" pos:column="26">.<pos:position pos:line="549" pos:column="27"/></operator><name pos:line="549" pos:column="27">stack_size<pos:position pos:line="549" pos:column="37"/></name></name> <operator pos:line="549" pos:column="38">+<pos:position pos:line="549" pos:column="39"/></operator> <name><name pos:line="549" pos:column="40">pse<pos:position pos:line="549" pos:column="43"/></name><operator pos:line="549" pos:column="43">.<pos:position pos:line="549" pos:column="44"/></operator><name pos:line="549" pos:column="44">vmem_code<pos:position pos:line="549" pos:column="53"/></name></name> <operator pos:line="549" pos:column="54">+<pos:position pos:line="549" pos:column="55"/></operator> <name><name pos:line="549" pos:column="56">pse<pos:position pos:line="549" pos:column="59"/></name><operator pos:line="549" pos:column="59">.<pos:position pos:line="549" pos:column="60"/></operator><name pos:line="549" pos:column="60">vmem_data<pos:position pos:line="549" pos:column="69"/></name></name></expr>;<pos:position pos:line="549" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="550" pos:column="7">pse<pos:position pos:line="550" pos:column="10"/></name><operator pos:line="550" pos:column="10">.<pos:position pos:line="550" pos:column="11"/></operator><name pos:line="550" pos:column="11">vmem_minflt_counter<pos:position pos:line="550" pos:column="30"/></name></name> <operator pos:line="550" pos:column="31">=<pos:position pos:line="550" pos:column="32"/></operator> <name><name pos:line="550" pos:column="33">procs<pos:position pos:line="550" pos:column="38"/></name><index pos:line="550" pos:column="38">[<expr><name pos:line="550" pos:column="39">i<pos:position pos:line="550" pos:column="40"/></name></expr>]<pos:position pos:line="550" pos:column="41"/></index></name><operator pos:line="550" pos:column="41">.<pos:position pos:line="550" pos:column="42"/></operator><name pos:line="550" pos:column="42">p_uru_minflt<pos:position pos:line="550" pos:column="54"/></name></expr>;<pos:position pos:line="550" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="551" pos:column="7">pse<pos:position pos:line="551" pos:column="10"/></name><operator pos:line="551" pos:column="10">.<pos:position pos:line="551" pos:column="11"/></operator><name pos:line="551" pos:column="11">vmem_majflt_counter<pos:position pos:line="551" pos:column="30"/></name></name> <operator pos:line="551" pos:column="31">=<pos:position pos:line="551" pos:column="32"/></operator> <name><name pos:line="551" pos:column="33">procs<pos:position pos:line="551" pos:column="38"/></name><index pos:line="551" pos:column="38">[<expr><name pos:line="551" pos:column="39">i<pos:position pos:line="551" pos:column="40"/></name></expr>]<pos:position pos:line="551" pos:column="41"/></index></name><operator pos:line="551" pos:column="41">.<pos:position pos:line="551" pos:column="42"/></operator><name pos:line="551" pos:column="42">p_uru_majflt<pos:position pos:line="551" pos:column="54"/></name></expr>;<pos:position pos:line="551" pos:column="55"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="553" pos:column="7">pse<pos:position pos:line="553" pos:column="10"/></name><operator pos:line="553" pos:column="10">.<pos:position pos:line="553" pos:column="11"/></operator><name pos:line="553" pos:column="11">cpu_user_counter<pos:position pos:line="553" pos:column="27"/></name></name> <operator pos:line="553" pos:column="28">=<pos:position pos:line="553" pos:column="29"/></operator>
          <name><name pos:line="554" pos:column="11">procs<pos:position pos:line="554" pos:column="16"/></name><index pos:line="554" pos:column="16">[<expr><name pos:line="554" pos:column="17">i<pos:position pos:line="554" pos:column="18"/></name></expr>]<pos:position pos:line="554" pos:column="19"/></index></name><operator pos:line="554" pos:column="19">.<pos:position pos:line="554" pos:column="20"/></operator><name pos:line="554" pos:column="20">p_uutime_usec<pos:position pos:line="554" pos:column="33"/></name> <operator pos:line="554" pos:column="34">+<pos:position pos:line="554" pos:column="35"/></operator> <operator pos:line="554" pos:column="36">(<pos:position pos:line="554" pos:column="37"/></operator><literal type="number" pos:line="554" pos:column="37">1000000lu<pos:position pos:line="554" pos:column="46"/></literal> <operator pos:line="554" pos:column="47">*<pos:position pos:line="554" pos:column="48"/></operator> <name><name pos:line="554" pos:column="49">procs<pos:position pos:line="554" pos:column="54"/></name><index pos:line="554" pos:column="54">[<expr><name pos:line="554" pos:column="55">i<pos:position pos:line="554" pos:column="56"/></name></expr>]<pos:position pos:line="554" pos:column="57"/></index></name><operator pos:line="554" pos:column="57">.<pos:position pos:line="554" pos:column="58"/></operator><name pos:line="554" pos:column="58">p_uutime_sec<pos:position pos:line="554" pos:column="70"/></name><operator pos:line="554" pos:column="70">)<pos:position pos:line="554" pos:column="71"/></operator></expr>;<pos:position pos:line="554" pos:column="72"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="555" pos:column="7">pse<pos:position pos:line="555" pos:column="10"/></name><operator pos:line="555" pos:column="10">.<pos:position pos:line="555" pos:column="11"/></operator><name pos:line="555" pos:column="11">cpu_system_counter<pos:position pos:line="555" pos:column="29"/></name></name> <operator pos:line="555" pos:column="30">=<pos:position pos:line="555" pos:column="31"/></operator>
          <name><name pos:line="556" pos:column="11">procs<pos:position pos:line="556" pos:column="16"/></name><index pos:line="556" pos:column="16">[<expr><name pos:line="556" pos:column="17">i<pos:position pos:line="556" pos:column="18"/></name></expr>]<pos:position pos:line="556" pos:column="19"/></index></name><operator pos:line="556" pos:column="19">.<pos:position pos:line="556" pos:column="20"/></operator><name pos:line="556" pos:column="20">p_ustime_usec<pos:position pos:line="556" pos:column="33"/></name> <operator pos:line="556" pos:column="34">+<pos:position pos:line="556" pos:column="35"/></operator> <operator pos:line="556" pos:column="36">(<pos:position pos:line="556" pos:column="37"/></operator><literal type="number" pos:line="556" pos:column="37">1000000lu<pos:position pos:line="556" pos:column="46"/></literal> <operator pos:line="556" pos:column="47">*<pos:position pos:line="556" pos:column="48"/></operator> <name><name pos:line="556" pos:column="49">procs<pos:position pos:line="556" pos:column="54"/></name><index pos:line="556" pos:column="54">[<expr><name pos:line="556" pos:column="55">i<pos:position pos:line="556" pos:column="56"/></name></expr>]<pos:position pos:line="556" pos:column="57"/></index></name><operator pos:line="556" pos:column="57">.<pos:position pos:line="556" pos:column="58"/></operator><name pos:line="556" pos:column="58">p_ustime_sec<pos:position pos:line="556" pos:column="70"/></name><operator pos:line="556" pos:column="70">)<pos:position pos:line="556" pos:column="71"/></operator></expr>;<pos:position pos:line="556" pos:column="72"/></expr_stmt>

      <comment type="block" pos:line="558" pos:column="7">/* no I/O data */</comment>
      <expr_stmt><expr><name><name pos:line="559" pos:column="7">pse<pos:position pos:line="559" pos:column="10"/></name><operator pos:line="559" pos:column="10">.<pos:position pos:line="559" pos:column="11"/></operator><name pos:line="559" pos:column="11">io_rchar<pos:position pos:line="559" pos:column="19"/></name></name> <operator pos:line="559" pos:column="20">=<pos:position pos:line="559" pos:column="21"/></operator> <operator pos:line="559" pos:column="22">-<pos:position pos:line="559" pos:column="23"/></operator><literal type="number" pos:line="559" pos:column="23">1<pos:position pos:line="559" pos:column="24"/></literal></expr>;<pos:position pos:line="559" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="560" pos:column="7">pse<pos:position pos:line="560" pos:column="10"/></name><operator pos:line="560" pos:column="10">.<pos:position pos:line="560" pos:column="11"/></operator><name pos:line="560" pos:column="11">io_wchar<pos:position pos:line="560" pos:column="19"/></name></name> <operator pos:line="560" pos:column="20">=<pos:position pos:line="560" pos:column="21"/></operator> <operator pos:line="560" pos:column="22">-<pos:position pos:line="560" pos:column="23"/></operator><literal type="number" pos:line="560" pos:column="23">1<pos:position pos:line="560" pos:column="24"/></literal></expr>;<pos:position pos:line="560" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="561" pos:column="7">pse<pos:position pos:line="561" pos:column="10"/></name><operator pos:line="561" pos:column="10">.<pos:position pos:line="561" pos:column="11"/></operator><name pos:line="561" pos:column="11">io_syscr<pos:position pos:line="561" pos:column="19"/></name></name> <operator pos:line="561" pos:column="20">=<pos:position pos:line="561" pos:column="21"/></operator> <operator pos:line="561" pos:column="22">-<pos:position pos:line="561" pos:column="23"/></operator><literal type="number" pos:line="561" pos:column="23">1<pos:position pos:line="561" pos:column="24"/></literal></expr>;<pos:position pos:line="561" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="562" pos:column="7">pse<pos:position pos:line="562" pos:column="10"/></name><operator pos:line="562" pos:column="10">.<pos:position pos:line="562" pos:column="11"/></operator><name pos:line="562" pos:column="11">io_syscw<pos:position pos:line="562" pos:column="19"/></name></name> <operator pos:line="562" pos:column="20">=<pos:position pos:line="562" pos:column="21"/></operator> <operator pos:line="562" pos:column="22">-<pos:position pos:line="562" pos:column="23"/></operator><literal type="number" pos:line="562" pos:column="23">1<pos:position pos:line="562" pos:column="24"/></literal></expr>;<pos:position pos:line="562" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="563" pos:column="7">pse<pos:position pos:line="563" pos:column="10"/></name><operator pos:line="563" pos:column="10">.<pos:position pos:line="563" pos:column="11"/></operator><name pos:line="563" pos:column="11">io_diskr<pos:position pos:line="563" pos:column="19"/></name></name> <operator pos:line="563" pos:column="20">=<pos:position pos:line="563" pos:column="21"/></operator> <operator pos:line="563" pos:column="22">-<pos:position pos:line="563" pos:column="23"/></operator><literal type="number" pos:line="563" pos:column="23">1<pos:position pos:line="563" pos:column="24"/></literal></expr>;<pos:position pos:line="563" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="564" pos:column="7">pse<pos:position pos:line="564" pos:column="10"/></name><operator pos:line="564" pos:column="10">.<pos:position pos:line="564" pos:column="11"/></operator><name pos:line="564" pos:column="11">io_diskw<pos:position pos:line="564" pos:column="19"/></name></name> <operator pos:line="564" pos:column="20">=<pos:position pos:line="564" pos:column="21"/></operator> <operator pos:line="564" pos:column="22">-<pos:position pos:line="564" pos:column="23"/></operator><literal type="number" pos:line="564" pos:column="23">1<pos:position pos:line="564" pos:column="24"/></literal></expr>;<pos:position pos:line="564" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="566" pos:column="7">/* file descriptor count not implemented */</comment>
      <expr_stmt><expr><name><name pos:line="567" pos:column="7">pse<pos:position pos:line="567" pos:column="10"/></name><operator pos:line="567" pos:column="10">.<pos:position pos:line="567" pos:column="11"/></operator><name pos:line="567" pos:column="11">num_fd<pos:position pos:line="567" pos:column="17"/></name></name> <operator pos:line="567" pos:column="18">=<pos:position pos:line="567" pos:column="19"/></operator> <literal type="number" pos:line="567" pos:column="20">0<pos:position pos:line="567" pos:column="21"/></literal></expr>;<pos:position pos:line="567" pos:column="22"/></expr_stmt>

      <comment type="block" pos:line="569" pos:column="7">/* Number of memory mappings */</comment>
      <expr_stmt><expr><name><name pos:line="570" pos:column="7">pse<pos:position pos:line="570" pos:column="10"/></name><operator pos:line="570" pos:column="10">.<pos:position pos:line="570" pos:column="11"/></operator><name pos:line="570" pos:column="11">num_maps<pos:position pos:line="570" pos:column="19"/></name></name> <operator pos:line="570" pos:column="20">=<pos:position pos:line="570" pos:column="21"/></operator> <literal type="number" pos:line="570" pos:column="22">0<pos:position pos:line="570" pos:column="23"/></literal></expr>;<pos:position pos:line="570" pos:column="24"/></expr_stmt>

      <comment type="block" pos:line="572" pos:column="7">/* context switch counters not implemented */</comment>
      <expr_stmt><expr><name><name pos:line="573" pos:column="7">pse<pos:position pos:line="573" pos:column="10"/></name><operator pos:line="573" pos:column="10">.<pos:position pos:line="573" pos:column="11"/></operator><name pos:line="573" pos:column="11">cswitch_vol<pos:position pos:line="573" pos:column="22"/></name></name> <operator pos:line="573" pos:column="23">=<pos:position pos:line="573" pos:column="24"/></operator> <operator pos:line="573" pos:column="25">-<pos:position pos:line="573" pos:column="26"/></operator><literal type="number" pos:line="573" pos:column="26">1<pos:position pos:line="573" pos:column="27"/></literal></expr>;<pos:position pos:line="573" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="574" pos:column="7">pse<pos:position pos:line="574" pos:column="10"/></name><operator pos:line="574" pos:column="10">.<pos:position pos:line="574" pos:column="11"/></operator><name pos:line="574" pos:column="11">cswitch_invol<pos:position pos:line="574" pos:column="24"/></name></name> <operator pos:line="574" pos:column="25">=<pos:position pos:line="574" pos:column="26"/></operator> <operator pos:line="574" pos:column="27">-<pos:position pos:line="574" pos:column="28"/></operator><literal type="number" pos:line="574" pos:column="28">1<pos:position pos:line="574" pos:column="29"/></literal></expr>;<pos:position pos:line="574" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="576" pos:column="7">ps_list_add<pos:position pos:line="576" pos:column="18"/></name><argument_list pos:line="576" pos:column="18">(<argument><expr><name><name pos:line="576" pos:column="19">procs<pos:position pos:line="576" pos:column="24"/></name><index pos:line="576" pos:column="24">[<expr><name pos:line="576" pos:column="25">i<pos:position pos:line="576" pos:column="26"/></name></expr>]<pos:position pos:line="576" pos:column="27"/></index></name><operator pos:line="576" pos:column="27">.<pos:position pos:line="576" pos:column="28"/></operator><name pos:line="576" pos:column="28">p_comm<pos:position pos:line="576" pos:column="34"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="576" pos:column="36">have_cmdline<pos:position pos:line="576" pos:column="48"/></name></expr> ?<pos:position pos:line="576" pos:column="50"/></condition><then pos:line="576" pos:column="50"> <expr><name pos:line="576" pos:column="51">cmdline<pos:position pos:line="576" pos:column="58"/></name></expr> <pos:position pos:line="576" pos:column="59"/></then><else pos:line="576" pos:column="59">: <expr><name pos:line="576" pos:column="61">NULL<pos:position pos:line="576" pos:column="65"/></name></expr></else></ternary></expr></argument>, <argument><expr><operator pos:line="576" pos:column="67">&amp;<pos:position pos:line="576" pos:column="72"/></operator><name pos:line="576" pos:column="68">pse<pos:position pos:line="576" pos:column="71"/></name></expr></argument>)<pos:position pos:line="576" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="73"/></expr_stmt>

      <switch pos:line="578" pos:column="7">switch <condition pos:line="578" pos:column="14">(<expr><name><name pos:line="578" pos:column="15">procs<pos:position pos:line="578" pos:column="20"/></name><index pos:line="578" pos:column="20">[<expr><name pos:line="578" pos:column="21">i<pos:position pos:line="578" pos:column="22"/></name></expr>]<pos:position pos:line="578" pos:column="23"/></index></name><operator pos:line="578" pos:column="23">.<pos:position pos:line="578" pos:column="24"/></operator><name pos:line="578" pos:column="24">p_stat<pos:position pos:line="578" pos:column="30"/></name></expr>)<pos:position pos:line="578" pos:column="31"/></condition> <block pos:line="578" pos:column="32">{
      <case pos:line="579" pos:column="7">case <expr><name pos:line="579" pos:column="12">SSTOP<pos:position pos:line="579" pos:column="17"/></name></expr>:<pos:position pos:line="579" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="580" pos:column="9">stopped<pos:position pos:line="580" pos:column="16"/></name><operator pos:line="580" pos:column="16">++<pos:position pos:line="580" pos:column="18"/></operator></expr>;<pos:position pos:line="580" pos:column="19"/></expr_stmt>
        <break pos:line="581" pos:column="9">break;<pos:position pos:line="581" pos:column="15"/></break>
      <case pos:line="582" pos:column="7">case <expr><name pos:line="582" pos:column="12">SSLEEP<pos:position pos:line="582" pos:column="18"/></name></expr>:<pos:position pos:line="582" pos:column="19"/></case>
        <expr_stmt><expr><name pos:line="583" pos:column="9">sleeping<pos:position pos:line="583" pos:column="17"/></name><operator pos:line="583" pos:column="17">++<pos:position pos:line="583" pos:column="19"/></operator></expr>;<pos:position pos:line="583" pos:column="20"/></expr_stmt>
        <break pos:line="584" pos:column="9">break;<pos:position pos:line="584" pos:column="15"/></break>
      <case pos:line="585" pos:column="7">case <expr><name pos:line="585" pos:column="12">SRUN<pos:position pos:line="585" pos:column="16"/></name></expr>:<pos:position pos:line="585" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="586" pos:column="9">running<pos:position pos:line="586" pos:column="16"/></name><operator pos:line="586" pos:column="16">++<pos:position pos:line="586" pos:column="18"/></operator></expr>;<pos:position pos:line="586" pos:column="19"/></expr_stmt>
        <break pos:line="587" pos:column="9">break;<pos:position pos:line="587" pos:column="15"/></break>
      <case pos:line="588" pos:column="7">case <expr><name pos:line="588" pos:column="12">SIDL<pos:position pos:line="588" pos:column="16"/></name></expr>:<pos:position pos:line="588" pos:column="17"/></case>
        <expr_stmt><expr><name pos:line="589" pos:column="9">idle<pos:position pos:line="589" pos:column="13"/></name><operator pos:line="589" pos:column="13">++<pos:position pos:line="589" pos:column="15"/></operator></expr>;<pos:position pos:line="589" pos:column="16"/></expr_stmt>
        <break pos:line="590" pos:column="9">break;<pos:position pos:line="590" pos:column="15"/></break>
      <case pos:line="591" pos:column="7">case <expr><name pos:line="591" pos:column="12">SONPROC<pos:position pos:line="591" pos:column="19"/></name></expr>:<pos:position pos:line="591" pos:column="20"/></case>
        <expr_stmt><expr><name pos:line="592" pos:column="9">onproc<pos:position pos:line="592" pos:column="15"/></name><operator pos:line="592" pos:column="15">++<pos:position pos:line="592" pos:column="17"/></operator></expr>;<pos:position pos:line="592" pos:column="18"/></expr_stmt>
        <break pos:line="593" pos:column="9">break;<pos:position pos:line="593" pos:column="15"/></break>
      <case pos:line="594" pos:column="7">case <expr><name pos:line="594" pos:column="12">SDEAD<pos:position pos:line="594" pos:column="17"/></name></expr>:<pos:position pos:line="594" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="595" pos:column="9">dead<pos:position pos:line="595" pos:column="13"/></name><operator pos:line="595" pos:column="13">++<pos:position pos:line="595" pos:column="15"/></operator></expr>;<pos:position pos:line="595" pos:column="16"/></expr_stmt>
        <break pos:line="596" pos:column="9">break;<pos:position pos:line="596" pos:column="15"/></break>
      <case pos:line="597" pos:column="7">case <expr><name pos:line="597" pos:column="12">SZOMB<pos:position pos:line="597" pos:column="17"/></name></expr>:<pos:position pos:line="597" pos:column="18"/></case>
        <expr_stmt><expr><name pos:line="598" pos:column="9">zombies<pos:position pos:line="598" pos:column="16"/></name><operator pos:line="598" pos:column="16">++<pos:position pos:line="598" pos:column="18"/></operator></expr>;<pos:position pos:line="598" pos:column="19"/></expr_stmt>
        <break pos:line="599" pos:column="9">break;<pos:position pos:line="599" pos:column="15"/></break>
      }<pos:position pos:line="600" pos:column="8"/></block></switch>
    }<pos:position pos:line="601" pos:column="6"/></block></then></if> <comment type="block" pos:line="601" pos:column="7">/* if ((proc_ptr == NULL) || (proc_ptr-&gt;p_pid != procs[i].p_pid)) */</comment>
  }<pos:position pos:line="602" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="604" pos:column="3">kvm_close<pos:position pos:line="604" pos:column="12"/></name><argument_list pos:line="604" pos:column="12">(<argument><expr><name pos:line="604" pos:column="13">kd<pos:position pos:line="604" pos:column="15"/></name></expr></argument>)<pos:position pos:line="604" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="604" pos:column="17"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="606" pos:column="3">ps_submit_state<pos:position pos:line="606" pos:column="18"/></name><argument_list pos:line="606" pos:column="18">(<argument><expr><literal type="string" pos:line="606" pos:column="19">"running"<pos:position pos:line="606" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="606" pos:column="30">running<pos:position pos:line="606" pos:column="37"/></name></expr></argument>)<pos:position pos:line="606" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="606" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="607" pos:column="3">ps_submit_state<pos:position pos:line="607" pos:column="18"/></name><argument_list pos:line="607" pos:column="18">(<argument><expr><literal type="string" pos:line="607" pos:column="19">"sleeping"<pos:position pos:line="607" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="607" pos:column="31">sleeping<pos:position pos:line="607" pos:column="39"/></name></expr></argument>)<pos:position pos:line="607" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="607" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="608" pos:column="3">ps_submit_state<pos:position pos:line="608" pos:column="18"/></name><argument_list pos:line="608" pos:column="18">(<argument><expr><literal type="string" pos:line="608" pos:column="19">"zombies"<pos:position pos:line="608" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="608" pos:column="30">zombies<pos:position pos:line="608" pos:column="37"/></name></expr></argument>)<pos:position pos:line="608" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="608" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="609" pos:column="3">ps_submit_state<pos:position pos:line="609" pos:column="18"/></name><argument_list pos:line="609" pos:column="18">(<argument><expr><literal type="string" pos:line="609" pos:column="19">"stopped"<pos:position pos:line="609" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="609" pos:column="30">stopped<pos:position pos:line="609" pos:column="37"/></name></expr></argument>)<pos:position pos:line="609" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="610" pos:column="3">ps_submit_state<pos:position pos:line="610" pos:column="18"/></name><argument_list pos:line="610" pos:column="18">(<argument><expr><literal type="string" pos:line="610" pos:column="19">"onproc"<pos:position pos:line="610" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="610" pos:column="29">onproc<pos:position pos:line="610" pos:column="35"/></name></expr></argument>)<pos:position pos:line="610" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="610" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="611" pos:column="3">ps_submit_state<pos:position pos:line="611" pos:column="18"/></name><argument_list pos:line="611" pos:column="18">(<argument><expr><literal type="string" pos:line="611" pos:column="19">"idle"<pos:position pos:line="611" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="611" pos:column="27">idle<pos:position pos:line="611" pos:column="31"/></name></expr></argument>)<pos:position pos:line="611" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="612" pos:column="3">ps_submit_state<pos:position pos:line="612" pos:column="18"/></name><argument_list pos:line="612" pos:column="18">(<argument><expr><literal type="string" pos:line="612" pos:column="19">"dead"<pos:position pos:line="612" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="612" pos:column="27">dead<pos:position pos:line="612" pos:column="31"/></name></expr></argument>)<pos:position pos:line="612" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="612" pos:column="33"/></expr_stmt>

  <for pos:line="614" pos:column="3">for <control pos:line="614" pos:column="7">(<init><decl><type><name pos:line="614" pos:column="8">procstat_t<pos:position pos:line="614" pos:column="18"/></name> <modifier pos:line="614" pos:column="19">*<pos:position pos:line="614" pos:column="20"/></modifier></type><name pos:line="614" pos:column="20">ps_ptr<pos:position pos:line="614" pos:column="26"/></name> <init pos:line="614" pos:column="27">= <expr><name pos:line="614" pos:column="29">list_head_g<pos:position pos:line="614" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="614" pos:column="41"/></init> <condition><expr><name pos:line="614" pos:column="42">ps_ptr<pos:position pos:line="614" pos:column="48"/></name> <operator pos:line="614" pos:column="49">!=<pos:position pos:line="614" pos:column="51"/></operator> <name pos:line="614" pos:column="52">NULL<pos:position pos:line="614" pos:column="56"/></name></expr>;<pos:position pos:line="614" pos:column="57"/></condition> <incr><expr><name pos:line="614" pos:column="58">ps_ptr<pos:position pos:line="614" pos:column="64"/></name> <operator pos:line="614" pos:column="65">=<pos:position pos:line="614" pos:column="66"/></operator> <name><name pos:line="614" pos:column="67">ps_ptr<pos:position pos:line="614" pos:column="73"/></name><operator pos:line="614" pos:column="73">-&gt;<pos:position pos:line="614" pos:column="78"/></operator><name pos:line="614" pos:column="75">next<pos:position pos:line="614" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="614" pos:column="80"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="615" pos:column="5">ps_submit_proc_list<pos:position pos:line="615" pos:column="24"/></name><argument_list pos:line="615" pos:column="24">(<argument><expr><name pos:line="615" pos:column="25">ps_ptr<pos:position pos:line="615" pos:column="31"/></name></expr></argument>)<pos:position pos:line="615" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="33"/></expr_stmt></block></for>
<comment type="block" pos:line="616" pos:column="1">/* #endif HAVE_LIBKVM_GETPROCS &amp;&amp; HAVE_STRUCT_KINFO_PROC_OPENBSD */</comment>

<cpp:elif pos:line="618" pos:column="1">#<cpp:directive pos:line="618" pos:column="2">elif<pos:position pos:line="618" pos:column="6"/></cpp:directive> <expr><name pos:line="618" pos:column="7">HAVE_PROCINFO_H<pos:position pos:line="618" pos:column="22"/></name></expr></cpp:elif>
  <comment type="block" pos:line="619" pos:column="3">/* AIX */</comment>
  <decl_stmt><decl><type><name pos:line="620" pos:column="3">int<pos:position pos:line="620" pos:column="6"/></name></type> <name pos:line="620" pos:column="7">running<pos:position pos:line="620" pos:column="14"/></name> <init pos:line="620" pos:column="15">= <expr><literal type="number" pos:line="620" pos:column="17">0<pos:position pos:line="620" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="620" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="621" pos:column="3">int<pos:position pos:line="621" pos:column="6"/></name></type> <name pos:line="621" pos:column="7">sleeping<pos:position pos:line="621" pos:column="15"/></name> <init pos:line="621" pos:column="16">= <expr><literal type="number" pos:line="621" pos:column="18">0<pos:position pos:line="621" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="621" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="622" pos:column="3">int<pos:position pos:line="622" pos:column="6"/></name></type> <name pos:line="622" pos:column="7">zombies<pos:position pos:line="622" pos:column="14"/></name> <init pos:line="622" pos:column="15">= <expr><literal type="number" pos:line="622" pos:column="17">0<pos:position pos:line="622" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="622" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="623" pos:column="3">int<pos:position pos:line="623" pos:column="6"/></name></type> <name pos:line="623" pos:column="7">stopped<pos:position pos:line="623" pos:column="14"/></name> <init pos:line="623" pos:column="15">= <expr><literal type="number" pos:line="623" pos:column="17">0<pos:position pos:line="623" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="623" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="624" pos:column="3">int<pos:position pos:line="624" pos:column="6"/></name></type> <name pos:line="624" pos:column="7">paging<pos:position pos:line="624" pos:column="13"/></name> <init pos:line="624" pos:column="14">= <expr><literal type="number" pos:line="624" pos:column="16">0<pos:position pos:line="624" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="624" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="625" pos:column="3">int<pos:position pos:line="625" pos:column="6"/></name></type> <name pos:line="625" pos:column="7">blocked<pos:position pos:line="625" pos:column="14"/></name> <init pos:line="625" pos:column="15">= <expr><literal type="number" pos:line="625" pos:column="17">0<pos:position pos:line="625" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="625" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="627" pos:column="3">pid_t<pos:position pos:line="627" pos:column="8"/></name></type> <name pos:line="627" pos:column="9">pindex<pos:position pos:line="627" pos:column="15"/></name> <init pos:line="627" pos:column="16">= <expr><literal type="number" pos:line="627" pos:column="18">0<pos:position pos:line="627" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="627" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="628" pos:column="3">int<pos:position pos:line="628" pos:column="6"/></name></type> <name pos:line="628" pos:column="7">nprocs<pos:position pos:line="628" pos:column="13"/></name></decl>;<pos:position pos:line="628" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="630" pos:column="3">process_entry_t<pos:position pos:line="630" pos:column="18"/></name></type> <name pos:line="630" pos:column="19">pse<pos:position pos:line="630" pos:column="22"/></name></decl>;<pos:position pos:line="630" pos:column="23"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="632" pos:column="3">ps_list_reset<pos:position pos:line="632" pos:column="16"/></name><argument_list pos:line="632" pos:column="16">()<pos:position pos:line="632" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="632" pos:column="19"/></expr_stmt>
  <while pos:line="633" pos:column="3">while <condition pos:line="633" pos:column="9">(<expr><operator pos:line="633" pos:column="10">(<pos:position pos:line="633" pos:column="11"/></operator><name pos:line="633" pos:column="11">nprocs<pos:position pos:line="633" pos:column="17"/></name> <operator pos:line="633" pos:column="18">=<pos:position pos:line="633" pos:column="19"/></operator> <call><name pos:line="633" pos:column="20">getprocs64<pos:position pos:line="633" pos:column="30"/></name><argument_list pos:line="633" pos:column="30">(<argument><expr><name pos:line="633" pos:column="31">procentry<pos:position pos:line="633" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="633" pos:column="42">sizeof<argument_list pos:line="633" pos:column="48">(<argument><expr pos:line="633" pos:column="49">struct <name pos:line="633" pos:column="56">procentry64<pos:position pos:line="633" pos:column="67"/></name></expr></argument>)<pos:position pos:line="633" pos:column="68"/></argument_list></sizeof></expr></argument>,
                              <comment type="block" pos:line="634" pos:column="31">/* fdsinfo = */</comment> <argument><expr><name pos:line="634" pos:column="47">NULL<pos:position pos:line="634" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="634" pos:column="53">sizeof<argument_list pos:line="634" pos:column="59">(<argument><expr pos:line="634" pos:column="60">struct <name pos:line="634" pos:column="67">fdsinfo64<pos:position pos:line="634" pos:column="76"/></name></expr></argument>)<pos:position pos:line="634" pos:column="77"/></argument_list></sizeof></expr></argument>,
                              <argument><expr><operator pos:line="635" pos:column="31">&amp;<pos:position pos:line="635" pos:column="36"/></operator><name pos:line="635" pos:column="32">pindex<pos:position pos:line="635" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="635" pos:column="40">MAXPROCENTRY<pos:position pos:line="635" pos:column="52"/></name></expr></argument>)<pos:position pos:line="635" pos:column="53"/></argument_list></call><operator pos:line="635" pos:column="53">)<pos:position pos:line="635" pos:column="54"/></operator> <operator pos:line="635" pos:column="55">&gt;<pos:position pos:line="635" pos:column="59"/></operator> <literal type="number" pos:line="635" pos:column="57">0<pos:position pos:line="635" pos:column="58"/></literal></expr>)<pos:position pos:line="635" pos:column="59"/></condition> <block pos:line="635" pos:column="60">{
    <for pos:line="636" pos:column="5">for <control pos:line="636" pos:column="9">(<init><decl><type><name pos:line="636" pos:column="10">int<pos:position pos:line="636" pos:column="13"/></name></type> <name pos:line="636" pos:column="14">i<pos:position pos:line="636" pos:column="15"/></name> <init pos:line="636" pos:column="16">= <expr><literal type="number" pos:line="636" pos:column="18">0<pos:position pos:line="636" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="636" pos:column="20"/></init> <condition><expr><name pos:line="636" pos:column="21">i<pos:position pos:line="636" pos:column="22"/></name> <operator pos:line="636" pos:column="23">&lt;<pos:position pos:line="636" pos:column="27"/></operator> <name pos:line="636" pos:column="25">nprocs<pos:position pos:line="636" pos:column="31"/></name></expr>;<pos:position pos:line="636" pos:column="32"/></condition> <incr><expr><name pos:line="636" pos:column="33">i<pos:position pos:line="636" pos:column="34"/></name><operator pos:line="636" pos:column="34">++<pos:position pos:line="636" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="636" pos:column="37"/></control> <block pos:line="636" pos:column="38">{
      <decl_stmt><decl><type><name pos:line="637" pos:column="7">tid64_t<pos:position pos:line="637" pos:column="14"/></name></type> <name pos:line="637" pos:column="15">thindex<pos:position pos:line="637" pos:column="22"/></name></decl>;<pos:position pos:line="637" pos:column="23"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="638" pos:column="7">int<pos:position pos:line="638" pos:column="10"/></name></type> <name pos:line="638" pos:column="11">nthreads<pos:position pos:line="638" pos:column="19"/></name></decl>;<pos:position pos:line="638" pos:column="20"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="639" pos:column="7">char<pos:position pos:line="639" pos:column="11"/></name></type> <name><name pos:line="639" pos:column="12">arglist<pos:position pos:line="639" pos:column="19"/></name><index pos:line="639" pos:column="19">[<expr><name pos:line="639" pos:column="20">MAXARGLN<pos:position pos:line="639" pos:column="28"/></name> <operator pos:line="639" pos:column="29">+<pos:position pos:line="639" pos:column="30"/></operator> <literal type="number" pos:line="639" pos:column="31">1<pos:position pos:line="639" pos:column="32"/></literal></expr>]<pos:position pos:line="639" pos:column="33"/></index></name></decl>;<pos:position pos:line="639" pos:column="34"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="640" pos:column="7">char<pos:position pos:line="640" pos:column="11"/></name> <modifier pos:line="640" pos:column="12">*<pos:position pos:line="640" pos:column="13"/></modifier></type><name pos:line="640" pos:column="13">cargs<pos:position pos:line="640" pos:column="18"/></name></decl>;<pos:position pos:line="640" pos:column="19"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="641" pos:column="7">char<pos:position pos:line="641" pos:column="11"/></name> <modifier pos:line="641" pos:column="12">*<pos:position pos:line="641" pos:column="13"/></modifier></type><name pos:line="641" pos:column="13">cmdline<pos:position pos:line="641" pos:column="20"/></name></decl>;<pos:position pos:line="641" pos:column="21"/></decl_stmt>

      <if pos:line="643" pos:column="7">if <condition pos:line="643" pos:column="10">(<expr><name><name pos:line="643" pos:column="11">procentry<pos:position pos:line="643" pos:column="20"/></name><index pos:line="643" pos:column="20">[<expr><name pos:line="643" pos:column="21">i<pos:position pos:line="643" pos:column="22"/></name></expr>]<pos:position pos:line="643" pos:column="23"/></index></name><operator pos:line="643" pos:column="23">.<pos:position pos:line="643" pos:column="24"/></operator><name pos:line="643" pos:column="24">pi_state<pos:position pos:line="643" pos:column="32"/></name> <operator pos:line="643" pos:column="33">==<pos:position pos:line="643" pos:column="35"/></operator> <name pos:line="643" pos:column="36">SNONE<pos:position pos:line="643" pos:column="41"/></name></expr>)<pos:position pos:line="643" pos:column="42"/></condition><then pos:line="643" pos:column="42">
        <block type="pseudo"><continue pos:line="644" pos:column="9">continue;<pos:position pos:line="644" pos:column="18"/></continue></block></then></if>
      <comment type="block" pos:line="645" pos:column="7">/* if (procentry[i].pi_state == SZOMB)  FIXME */</comment>

      <expr_stmt><expr><name pos:line="647" pos:column="7">cmdline<pos:position pos:line="647" pos:column="14"/></name> <operator pos:line="647" pos:column="15">=<pos:position pos:line="647" pos:column="16"/></operator> <name><name pos:line="647" pos:column="17">procentry<pos:position pos:line="647" pos:column="26"/></name><index pos:line="647" pos:column="26">[<expr><name pos:line="647" pos:column="27">i<pos:position pos:line="647" pos:column="28"/></name></expr>]<pos:position pos:line="647" pos:column="29"/></index></name><operator pos:line="647" pos:column="29">.<pos:position pos:line="647" pos:column="30"/></operator><name pos:line="647" pos:column="30">pi_comm<pos:position pos:line="647" pos:column="37"/></name></expr>;<pos:position pos:line="647" pos:column="38"/></expr_stmt>
      <expr_stmt><expr><name pos:line="648" pos:column="7">cargs<pos:position pos:line="648" pos:column="12"/></name> <operator pos:line="648" pos:column="13">=<pos:position pos:line="648" pos:column="14"/></operator> <name><name pos:line="648" pos:column="15">procentry<pos:position pos:line="648" pos:column="24"/></name><index pos:line="648" pos:column="24">[<expr><name pos:line="648" pos:column="25">i<pos:position pos:line="648" pos:column="26"/></name></expr>]<pos:position pos:line="648" pos:column="27"/></index></name><operator pos:line="648" pos:column="27">.<pos:position pos:line="648" pos:column="28"/></operator><name pos:line="648" pos:column="28">pi_comm<pos:position pos:line="648" pos:column="35"/></name></expr>;<pos:position pos:line="648" pos:column="36"/></expr_stmt>
      <if pos:line="649" pos:column="7">if <condition pos:line="649" pos:column="10">(<expr><name><name pos:line="649" pos:column="11">procentry<pos:position pos:line="649" pos:column="20"/></name><index pos:line="649" pos:column="20">[<expr><name pos:line="649" pos:column="21">i<pos:position pos:line="649" pos:column="22"/></name></expr>]<pos:position pos:line="649" pos:column="23"/></index></name><operator pos:line="649" pos:column="23">.<pos:position pos:line="649" pos:column="24"/></operator><name pos:line="649" pos:column="24">pi_flags<pos:position pos:line="649" pos:column="32"/></name> <operator pos:line="649" pos:column="33">&amp;<pos:position pos:line="649" pos:column="38"/></operator> <name pos:line="649" pos:column="35">SKPROC<pos:position pos:line="649" pos:column="41"/></name></expr>)<pos:position pos:line="649" pos:column="42"/></condition><then pos:line="649" pos:column="42"> <block pos:line="649" pos:column="43">{
        <if pos:line="650" pos:column="9">if <condition pos:line="650" pos:column="12">(<expr><name><name pos:line="650" pos:column="13">procentry<pos:position pos:line="650" pos:column="22"/></name><index pos:line="650" pos:column="22">[<expr><name pos:line="650" pos:column="23">i<pos:position pos:line="650" pos:column="24"/></name></expr>]<pos:position pos:line="650" pos:column="25"/></index></name><operator pos:line="650" pos:column="25">.<pos:position pos:line="650" pos:column="26"/></operator><name pos:line="650" pos:column="26">pi_pid<pos:position pos:line="650" pos:column="32"/></name> <operator pos:line="650" pos:column="33">==<pos:position pos:line="650" pos:column="35"/></operator> <literal type="number" pos:line="650" pos:column="36">0<pos:position pos:line="650" pos:column="37"/></literal></expr>)<pos:position pos:line="650" pos:column="38"/></condition><then pos:line="650" pos:column="38">
          <block type="pseudo"><expr_stmt><expr><name pos:line="651" pos:column="11">cmdline<pos:position pos:line="651" pos:column="18"/></name> <operator pos:line="651" pos:column="19">=<pos:position pos:line="651" pos:column="20"/></operator> <literal type="string" pos:line="651" pos:column="21">"swapper"<pos:position pos:line="651" pos:column="30"/></literal></expr>;<pos:position pos:line="651" pos:column="31"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="652" pos:column="9">cargs<pos:position pos:line="652" pos:column="14"/></name> <operator pos:line="652" pos:column="15">=<pos:position pos:line="652" pos:column="16"/></operator> <name pos:line="652" pos:column="17">cmdline<pos:position pos:line="652" pos:column="24"/></name></expr>;<pos:position pos:line="652" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="653" pos:column="8"/></block></then> <else pos:line="653" pos:column="9">else <block pos:line="653" pos:column="14">{
        <if pos:line="654" pos:column="9">if <condition pos:line="654" pos:column="12">(<expr><call><name pos:line="654" pos:column="13">getargs<pos:position pos:line="654" pos:column="20"/></name><argument_list pos:line="654" pos:column="20">(<argument><expr><operator pos:line="654" pos:column="21">&amp;<pos:position pos:line="654" pos:column="26"/></operator><name><name pos:line="654" pos:column="22">procentry<pos:position pos:line="654" pos:column="31"/></name><index pos:line="654" pos:column="31">[<expr><name pos:line="654" pos:column="32">i<pos:position pos:line="654" pos:column="33"/></name></expr>]<pos:position pos:line="654" pos:column="34"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="654" pos:column="36">sizeof<argument_list pos:line="654" pos:column="42">(<argument><expr pos:line="654" pos:column="43">struct <name pos:line="654" pos:column="50">procentry64<pos:position pos:line="654" pos:column="61"/></name></expr></argument>)<pos:position pos:line="654" pos:column="62"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="654" pos:column="64">arglist<pos:position pos:line="654" pos:column="71"/></name></expr></argument>,
                    <argument><expr><name pos:line="655" pos:column="21">MAXARGLN<pos:position pos:line="655" pos:column="29"/></name></expr></argument>)<pos:position pos:line="655" pos:column="30"/></argument_list></call> <operator pos:line="655" pos:column="31">&gt;=<pos:position pos:line="655" pos:column="36"/></operator> <literal type="number" pos:line="655" pos:column="34">0<pos:position pos:line="655" pos:column="35"/></literal></expr>)<pos:position pos:line="655" pos:column="36"/></condition><then pos:line="655" pos:column="36"> <block pos:line="655" pos:column="37">{
          <decl_stmt><decl><type><name pos:line="656" pos:column="11">int<pos:position pos:line="656" pos:column="14"/></name></type> <name pos:line="656" pos:column="15">n<pos:position pos:line="656" pos:column="16"/></name></decl>;<pos:position pos:line="656" pos:column="17"/></decl_stmt>

          <expr_stmt><expr><name pos:line="658" pos:column="11">n<pos:position pos:line="658" pos:column="12"/></name> <operator pos:line="658" pos:column="13">=<pos:position pos:line="658" pos:column="14"/></operator> <operator pos:line="658" pos:column="15">-<pos:position pos:line="658" pos:column="16"/></operator><literal type="number" pos:line="658" pos:column="16">1<pos:position pos:line="658" pos:column="17"/></literal></expr>;<pos:position pos:line="658" pos:column="18"/></expr_stmt>
          <while pos:line="659" pos:column="11">while <condition pos:line="659" pos:column="17">(<expr><operator pos:line="659" pos:column="18">++<pos:position pos:line="659" pos:column="20"/></operator><name pos:line="659" pos:column="20">n<pos:position pos:line="659" pos:column="21"/></name> <operator pos:line="659" pos:column="22">&lt;<pos:position pos:line="659" pos:column="26"/></operator> <name pos:line="659" pos:column="24">MAXARGLN<pos:position pos:line="659" pos:column="32"/></name></expr>)<pos:position pos:line="659" pos:column="33"/></condition> <block pos:line="659" pos:column="34">{
            <if pos:line="660" pos:column="13">if <condition pos:line="660" pos:column="16">(<expr><name><name pos:line="660" pos:column="17">arglist<pos:position pos:line="660" pos:column="24"/></name><index pos:line="660" pos:column="24">[<expr><name pos:line="660" pos:column="25">n<pos:position pos:line="660" pos:column="26"/></name></expr>]<pos:position pos:line="660" pos:column="27"/></index></name> <operator pos:line="660" pos:column="28">==<pos:position pos:line="660" pos:column="30"/></operator> <literal type="char" pos:line="660" pos:column="31">'\0'<pos:position pos:line="660" pos:column="35"/></literal></expr>)<pos:position pos:line="660" pos:column="36"/></condition><then pos:line="660" pos:column="36"> <block pos:line="660" pos:column="37">{
              <if pos:line="661" pos:column="15">if <condition pos:line="661" pos:column="18">(<expr><name><name pos:line="661" pos:column="19">arglist<pos:position pos:line="661" pos:column="26"/></name><index pos:line="661" pos:column="26">[<expr><name pos:line="661" pos:column="27">n<pos:position pos:line="661" pos:column="28"/></name> <operator pos:line="661" pos:column="29">+<pos:position pos:line="661" pos:column="30"/></operator> <literal type="number" pos:line="661" pos:column="31">1<pos:position pos:line="661" pos:column="32"/></literal></expr>]<pos:position pos:line="661" pos:column="33"/></index></name> <operator pos:line="661" pos:column="34">==<pos:position pos:line="661" pos:column="36"/></operator> <literal type="char" pos:line="661" pos:column="37">'\0'<pos:position pos:line="661" pos:column="41"/></literal></expr>)<pos:position pos:line="661" pos:column="42"/></condition><then pos:line="661" pos:column="42">
                <block type="pseudo"><break pos:line="662" pos:column="17">break;<pos:position pos:line="662" pos:column="23"/></break></block></then></if>
              <expr_stmt><expr><name><name pos:line="663" pos:column="15">arglist<pos:position pos:line="663" pos:column="22"/></name><index pos:line="663" pos:column="22">[<expr><name pos:line="663" pos:column="23">n<pos:position pos:line="663" pos:column="24"/></name></expr>]<pos:position pos:line="663" pos:column="25"/></index></name> <operator pos:line="663" pos:column="26">=<pos:position pos:line="663" pos:column="27"/></operator> <literal type="char" pos:line="663" pos:column="28">' '<pos:position pos:line="663" pos:column="31"/></literal></expr>;<pos:position pos:line="663" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="664" pos:column="14"/></block></then></if>
          }<pos:position pos:line="665" pos:column="12"/></block></while>
          <expr_stmt><expr><name pos:line="666" pos:column="11">cargs<pos:position pos:line="666" pos:column="16"/></name> <operator pos:line="666" pos:column="17">=<pos:position pos:line="666" pos:column="18"/></operator> <name pos:line="666" pos:column="19">arglist<pos:position pos:line="666" pos:column="26"/></name></expr>;<pos:position pos:line="666" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="667" pos:column="10"/></block></then></if>
      }<pos:position pos:line="668" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="670" pos:column="7">memset<pos:position pos:line="670" pos:column="13"/></name><argument_list pos:line="670" pos:column="13">(<argument><expr><operator pos:line="670" pos:column="14">&amp;<pos:position pos:line="670" pos:column="19"/></operator><name pos:line="670" pos:column="15">pse<pos:position pos:line="670" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="670" pos:column="20">0<pos:position pos:line="670" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="670" pos:column="23">sizeof<argument_list pos:line="670" pos:column="29">(<argument><expr><name pos:line="670" pos:column="30">pse<pos:position pos:line="670" pos:column="33"/></name></expr></argument>)<pos:position pos:line="670" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="670" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="670" pos:column="36"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="672" pos:column="7">pse<pos:position pos:line="672" pos:column="10"/></name><operator pos:line="672" pos:column="10">.<pos:position pos:line="672" pos:column="11"/></operator><name pos:line="672" pos:column="11">id<pos:position pos:line="672" pos:column="13"/></name></name> <operator pos:line="672" pos:column="14">=<pos:position pos:line="672" pos:column="15"/></operator> <name><name pos:line="672" pos:column="16">procentry<pos:position pos:line="672" pos:column="25"/></name><index pos:line="672" pos:column="25">[<expr><name pos:line="672" pos:column="26">i<pos:position pos:line="672" pos:column="27"/></name></expr>]<pos:position pos:line="672" pos:column="28"/></index></name><operator pos:line="672" pos:column="28">.<pos:position pos:line="672" pos:column="29"/></operator><name pos:line="672" pos:column="29">pi_pid<pos:position pos:line="672" pos:column="35"/></name></expr>;<pos:position pos:line="672" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="673" pos:column="7">pse<pos:position pos:line="673" pos:column="10"/></name><operator pos:line="673" pos:column="10">.<pos:position pos:line="673" pos:column="11"/></operator><name pos:line="673" pos:column="11">num_lwp<pos:position pos:line="673" pos:column="18"/></name></name> <operator pos:line="673" pos:column="19">=<pos:position pos:line="673" pos:column="20"/></operator> <name><name pos:line="673" pos:column="21">procentry<pos:position pos:line="673" pos:column="30"/></name><index pos:line="673" pos:column="30">[<expr><name pos:line="673" pos:column="31">i<pos:position pos:line="673" pos:column="32"/></name></expr>]<pos:position pos:line="673" pos:column="33"/></index></name><operator pos:line="673" pos:column="33">.<pos:position pos:line="673" pos:column="34"/></operator><name pos:line="673" pos:column="34">pi_thcount<pos:position pos:line="673" pos:column="44"/></name></expr>;<pos:position pos:line="673" pos:column="45"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="674" pos:column="7">pse<pos:position pos:line="674" pos:column="10"/></name><operator pos:line="674" pos:column="10">.<pos:position pos:line="674" pos:column="11"/></operator><name pos:line="674" pos:column="11">num_proc<pos:position pos:line="674" pos:column="19"/></name></name> <operator pos:line="674" pos:column="20">=<pos:position pos:line="674" pos:column="21"/></operator> <literal type="number" pos:line="674" pos:column="22">1<pos:position pos:line="674" pos:column="23"/></literal></expr>;<pos:position pos:line="674" pos:column="24"/></expr_stmt>

      <expr_stmt><expr><name pos:line="676" pos:column="7">thindex<pos:position pos:line="676" pos:column="14"/></name> <operator pos:line="676" pos:column="15">=<pos:position pos:line="676" pos:column="16"/></operator> <literal type="number" pos:line="676" pos:column="17">0<pos:position pos:line="676" pos:column="18"/></literal></expr>;<pos:position pos:line="676" pos:column="19"/></expr_stmt>
      <while pos:line="677" pos:column="7">while <condition pos:line="677" pos:column="13">(<expr><operator pos:line="677" pos:column="14">(<pos:position pos:line="677" pos:column="15"/></operator><name pos:line="677" pos:column="15">nthreads<pos:position pos:line="677" pos:column="23"/></name> <operator pos:line="677" pos:column="24">=<pos:position pos:line="677" pos:column="25"/></operator> <call><name pos:line="677" pos:column="26">getthrds64<pos:position pos:line="677" pos:column="36"/></name><argument_list pos:line="677" pos:column="36">(<argument><expr><name><name pos:line="677" pos:column="37">procentry<pos:position pos:line="677" pos:column="46"/></name><index pos:line="677" pos:column="46">[<expr><name pos:line="677" pos:column="47">i<pos:position pos:line="677" pos:column="48"/></name></expr>]<pos:position pos:line="677" pos:column="49"/></index></name><operator pos:line="677" pos:column="49">.<pos:position pos:line="677" pos:column="50"/></operator><name pos:line="677" pos:column="50">pi_pid<pos:position pos:line="677" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="677" pos:column="58">thrdentry<pos:position pos:line="677" pos:column="67"/></name></expr></argument>,
                                    <argument><expr><sizeof pos:line="678" pos:column="37">sizeof<argument_list pos:line="678" pos:column="43">(<argument><expr pos:line="678" pos:column="44">struct <name pos:line="678" pos:column="51">thrdentry64<pos:position pos:line="678" pos:column="62"/></name></expr></argument>)<pos:position pos:line="678" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="678" pos:column="65">&amp;<pos:position pos:line="678" pos:column="70"/></operator><name pos:line="678" pos:column="66">thindex<pos:position pos:line="678" pos:column="73"/></name></expr></argument>,
                                    <argument><expr><name pos:line="679" pos:column="37">MAXTHRDENTRY<pos:position pos:line="679" pos:column="49"/></name></expr></argument>)<pos:position pos:line="679" pos:column="50"/></argument_list></call><operator pos:line="679" pos:column="50">)<pos:position pos:line="679" pos:column="51"/></operator> <operator pos:line="679" pos:column="52">&gt;<pos:position pos:line="679" pos:column="56"/></operator> <literal type="number" pos:line="679" pos:column="54">0<pos:position pos:line="679" pos:column="55"/></literal></expr>)<pos:position pos:line="679" pos:column="56"/></condition> <block pos:line="679" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="680" pos:column="9">int<pos:position pos:line="680" pos:column="12"/></name></type> <name pos:line="680" pos:column="13">j<pos:position pos:line="680" pos:column="14"/></name></decl>;<pos:position pos:line="680" pos:column="15"/></decl_stmt>

        <for pos:line="682" pos:column="9">for <control pos:line="682" pos:column="13">(<init><expr><name pos:line="682" pos:column="14">j<pos:position pos:line="682" pos:column="15"/></name> <operator pos:line="682" pos:column="16">=<pos:position pos:line="682" pos:column="17"/></operator> <literal type="number" pos:line="682" pos:column="18">0<pos:position pos:line="682" pos:column="19"/></literal></expr>;<pos:position pos:line="682" pos:column="20"/></init> <condition><expr><name pos:line="682" pos:column="21">j<pos:position pos:line="682" pos:column="22"/></name> <operator pos:line="682" pos:column="23">&lt;<pos:position pos:line="682" pos:column="27"/></operator> <name pos:line="682" pos:column="25">nthreads<pos:position pos:line="682" pos:column="33"/></name></expr>;<pos:position pos:line="682" pos:column="34"/></condition> <incr><expr><name pos:line="682" pos:column="35">j<pos:position pos:line="682" pos:column="36"/></name><operator pos:line="682" pos:column="36">++<pos:position pos:line="682" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="682" pos:column="39"/></control> <block pos:line="682" pos:column="40">{
          <switch pos:line="683" pos:column="11">switch <condition pos:line="683" pos:column="18">(<expr><name><name pos:line="683" pos:column="19">thrdentry<pos:position pos:line="683" pos:column="28"/></name><index pos:line="683" pos:column="28">[<expr><name pos:line="683" pos:column="29">j<pos:position pos:line="683" pos:column="30"/></name></expr>]<pos:position pos:line="683" pos:column="31"/></index></name><operator pos:line="683" pos:column="31">.<pos:position pos:line="683" pos:column="32"/></operator><name pos:line="683" pos:column="32">ti_state<pos:position pos:line="683" pos:column="40"/></name></expr>)<pos:position pos:line="683" pos:column="41"/></condition> <block pos:line="683" pos:column="42">{
          <comment type="block" pos:line="684" pos:column="11">/* case TSNONE: break; */</comment>
          <case pos:line="685" pos:column="11">case <expr><name pos:line="685" pos:column="16">TSIDL<pos:position pos:line="685" pos:column="21"/></name></expr>:<pos:position pos:line="685" pos:column="22"/></case>
            <expr_stmt><expr><name pos:line="686" pos:column="13">blocked<pos:position pos:line="686" pos:column="20"/></name><operator pos:line="686" pos:column="20">++<pos:position pos:line="686" pos:column="22"/></operator></expr>;<pos:position pos:line="686" pos:column="23"/></expr_stmt>
            <break pos:line="687" pos:column="13">break;<pos:position pos:line="687" pos:column="19"/></break> <comment type="block" pos:line="687" pos:column="20">/* FIXME is really blocked */</comment>
          <case pos:line="688" pos:column="11">case <expr><name pos:line="688" pos:column="16">TSRUN<pos:position pos:line="688" pos:column="21"/></name></expr>:<pos:position pos:line="688" pos:column="22"/></case>
            <expr_stmt><expr><name pos:line="689" pos:column="13">running<pos:position pos:line="689" pos:column="20"/></name><operator pos:line="689" pos:column="20">++<pos:position pos:line="689" pos:column="22"/></operator></expr>;<pos:position pos:line="689" pos:column="23"/></expr_stmt>
            <break pos:line="690" pos:column="13">break;<pos:position pos:line="690" pos:column="19"/></break>
          <case pos:line="691" pos:column="11">case <expr><name pos:line="691" pos:column="16">TSSLEEP<pos:position pos:line="691" pos:column="23"/></name></expr>:<pos:position pos:line="691" pos:column="24"/></case>
            <expr_stmt><expr><name pos:line="692" pos:column="13">sleeping<pos:position pos:line="692" pos:column="21"/></name><operator pos:line="692" pos:column="21">++<pos:position pos:line="692" pos:column="23"/></operator></expr>;<pos:position pos:line="692" pos:column="24"/></expr_stmt>
            <break pos:line="693" pos:column="13">break;<pos:position pos:line="693" pos:column="19"/></break>
          <case pos:line="694" pos:column="11">case <expr><name pos:line="694" pos:column="16">TSSWAP<pos:position pos:line="694" pos:column="22"/></name></expr>:<pos:position pos:line="694" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="695" pos:column="13">paging<pos:position pos:line="695" pos:column="19"/></name><operator pos:line="695" pos:column="19">++<pos:position pos:line="695" pos:column="21"/></operator></expr>;<pos:position pos:line="695" pos:column="22"/></expr_stmt>
            <break pos:line="696" pos:column="13">break;<pos:position pos:line="696" pos:column="19"/></break>
          <case pos:line="697" pos:column="11">case <expr><name pos:line="697" pos:column="16">TSSTOP<pos:position pos:line="697" pos:column="22"/></name></expr>:<pos:position pos:line="697" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="698" pos:column="13">stopped<pos:position pos:line="698" pos:column="20"/></name><operator pos:line="698" pos:column="20">++<pos:position pos:line="698" pos:column="22"/></operator></expr>;<pos:position pos:line="698" pos:column="23"/></expr_stmt>
            <break pos:line="699" pos:column="13">break;<pos:position pos:line="699" pos:column="19"/></break>
          <case pos:line="700" pos:column="11">case <expr><name pos:line="700" pos:column="16">TSZOMB<pos:position pos:line="700" pos:column="22"/></name></expr>:<pos:position pos:line="700" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="701" pos:column="13">zombies<pos:position pos:line="701" pos:column="20"/></name><operator pos:line="701" pos:column="20">++<pos:position pos:line="701" pos:column="22"/></operator></expr>;<pos:position pos:line="701" pos:column="23"/></expr_stmt>
            <break pos:line="702" pos:column="13">break;<pos:position pos:line="702" pos:column="19"/></break>
          }<pos:position pos:line="703" pos:column="12"/></block></switch>
        }<pos:position pos:line="704" pos:column="10"/></block></for>
        <if pos:line="705" pos:column="9">if <condition pos:line="705" pos:column="12">(<expr><name pos:line="705" pos:column="13">nthreads<pos:position pos:line="705" pos:column="21"/></name> <operator pos:line="705" pos:column="22">&lt;<pos:position pos:line="705" pos:column="26"/></operator> <name pos:line="705" pos:column="24">MAXTHRDENTRY<pos:position pos:line="705" pos:column="36"/></name></expr>)<pos:position pos:line="705" pos:column="37"/></condition><then pos:line="705" pos:column="37">
          <block type="pseudo"><break pos:line="706" pos:column="11">break;<pos:position pos:line="706" pos:column="17"/></break></block></then></if>
      }<pos:position pos:line="707" pos:column="8"/></block></while>

      <comment type="block" pos:line="709" pos:column="7">/* tv_usec is nanosec ??? */</comment>
      <expr_stmt><expr><name><name pos:line="710" pos:column="7">pse<pos:position pos:line="710" pos:column="10"/></name><operator pos:line="710" pos:column="10">.<pos:position pos:line="710" pos:column="11"/></operator><name pos:line="710" pos:column="11">cpu_user_counter<pos:position pos:line="710" pos:column="27"/></name></name> <operator pos:line="710" pos:column="28">=<pos:position pos:line="710" pos:column="29"/></operator> <name><name pos:line="710" pos:column="30">procentry<pos:position pos:line="710" pos:column="39"/></name><index pos:line="710" pos:column="39">[<expr><name pos:line="710" pos:column="40">i<pos:position pos:line="710" pos:column="41"/></name></expr>]<pos:position pos:line="710" pos:column="42"/></index></name><operator pos:line="710" pos:column="42">.<pos:position pos:line="710" pos:column="43"/></operator><name><name pos:line="710" pos:column="43">pi_ru<pos:position pos:line="710" pos:column="48"/></name><operator pos:line="710" pos:column="48">.<pos:position pos:line="710" pos:column="49"/></operator><name pos:line="710" pos:column="49">ru_utime<pos:position pos:line="710" pos:column="57"/></name><operator pos:line="710" pos:column="57">.<pos:position pos:line="710" pos:column="58"/></operator><name pos:line="710" pos:column="58">tv_sec<pos:position pos:line="710" pos:column="64"/></name></name> <operator pos:line="710" pos:column="65">*<pos:position pos:line="710" pos:column="66"/></operator> <literal type="number" pos:line="710" pos:column="67">1000000<pos:position pos:line="710" pos:column="74"/></literal> <operator pos:line="710" pos:column="75">+<pos:position pos:line="710" pos:column="76"/></operator>
                             <name><name pos:line="711" pos:column="30">procentry<pos:position pos:line="711" pos:column="39"/></name><index pos:line="711" pos:column="39">[<expr><name pos:line="711" pos:column="40">i<pos:position pos:line="711" pos:column="41"/></name></expr>]<pos:position pos:line="711" pos:column="42"/></index></name><operator pos:line="711" pos:column="42">.<pos:position pos:line="711" pos:column="43"/></operator><name><name pos:line="711" pos:column="43">pi_ru<pos:position pos:line="711" pos:column="48"/></name><operator pos:line="711" pos:column="48">.<pos:position pos:line="711" pos:column="49"/></operator><name pos:line="711" pos:column="49">ru_utime<pos:position pos:line="711" pos:column="57"/></name><operator pos:line="711" pos:column="57">.<pos:position pos:line="711" pos:column="58"/></operator><name pos:line="711" pos:column="58">tv_usec<pos:position pos:line="711" pos:column="65"/></name></name> <operator pos:line="711" pos:column="66">/<pos:position pos:line="711" pos:column="67"/></operator> <literal type="number" pos:line="711" pos:column="68">1000<pos:position pos:line="711" pos:column="72"/></literal></expr>;<pos:position pos:line="711" pos:column="73"/></expr_stmt>

      <comment type="block" pos:line="713" pos:column="7">/* tv_usec is nanosec ??? */</comment>
      <expr_stmt><expr><name><name pos:line="714" pos:column="7">pse<pos:position pos:line="714" pos:column="10"/></name><operator pos:line="714" pos:column="10">.<pos:position pos:line="714" pos:column="11"/></operator><name pos:line="714" pos:column="11">cpu_system_counter<pos:position pos:line="714" pos:column="29"/></name></name> <operator pos:line="714" pos:column="30">=<pos:position pos:line="714" pos:column="31"/></operator> <name><name pos:line="714" pos:column="32">procentry<pos:position pos:line="714" pos:column="41"/></name><index pos:line="714" pos:column="41">[<expr><name pos:line="714" pos:column="42">i<pos:position pos:line="714" pos:column="43"/></name></expr>]<pos:position pos:line="714" pos:column="44"/></index></name><operator pos:line="714" pos:column="44">.<pos:position pos:line="714" pos:column="45"/></operator><name><name pos:line="714" pos:column="45">pi_ru<pos:position pos:line="714" pos:column="50"/></name><operator pos:line="714" pos:column="50">.<pos:position pos:line="714" pos:column="51"/></operator><name pos:line="714" pos:column="51">ru_stime<pos:position pos:line="714" pos:column="59"/></name><operator pos:line="714" pos:column="59">.<pos:position pos:line="714" pos:column="60"/></operator><name pos:line="714" pos:column="60">tv_sec<pos:position pos:line="714" pos:column="66"/></name></name> <operator pos:line="714" pos:column="67">*<pos:position pos:line="714" pos:column="68"/></operator> <literal type="number" pos:line="714" pos:column="69">1000000<pos:position pos:line="714" pos:column="76"/></literal> <operator pos:line="714" pos:column="77">+<pos:position pos:line="714" pos:column="78"/></operator>
                               <name><name pos:line="715" pos:column="32">procentry<pos:position pos:line="715" pos:column="41"/></name><index pos:line="715" pos:column="41">[<expr><name pos:line="715" pos:column="42">i<pos:position pos:line="715" pos:column="43"/></name></expr>]<pos:position pos:line="715" pos:column="44"/></index></name><operator pos:line="715" pos:column="44">.<pos:position pos:line="715" pos:column="45"/></operator><name><name pos:line="715" pos:column="45">pi_ru<pos:position pos:line="715" pos:column="50"/></name><operator pos:line="715" pos:column="50">.<pos:position pos:line="715" pos:column="51"/></operator><name pos:line="715" pos:column="51">ru_stime<pos:position pos:line="715" pos:column="59"/></name><operator pos:line="715" pos:column="59">.<pos:position pos:line="715" pos:column="60"/></operator><name pos:line="715" pos:column="60">tv_usec<pos:position pos:line="715" pos:column="67"/></name></name> <operator pos:line="715" pos:column="68">/<pos:position pos:line="715" pos:column="69"/></operator> <literal type="number" pos:line="715" pos:column="70">1000<pos:position pos:line="715" pos:column="74"/></literal></expr>;<pos:position pos:line="715" pos:column="75"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="717" pos:column="7">pse<pos:position pos:line="717" pos:column="10"/></name><operator pos:line="717" pos:column="10">.<pos:position pos:line="717" pos:column="11"/></operator><name pos:line="717" pos:column="11">vmem_minflt_counter<pos:position pos:line="717" pos:column="30"/></name></name> <operator pos:line="717" pos:column="31">=<pos:position pos:line="717" pos:column="32"/></operator> <name><name pos:line="717" pos:column="33">procentry<pos:position pos:line="717" pos:column="42"/></name><index pos:line="717" pos:column="42">[<expr><name pos:line="717" pos:column="43">i<pos:position pos:line="717" pos:column="44"/></name></expr>]<pos:position pos:line="717" pos:column="45"/></index></name><operator pos:line="717" pos:column="45">.<pos:position pos:line="717" pos:column="46"/></operator><name pos:line="717" pos:column="46">pi_minflt<pos:position pos:line="717" pos:column="55"/></name></expr>;<pos:position pos:line="717" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="718" pos:column="7">pse<pos:position pos:line="718" pos:column="10"/></name><operator pos:line="718" pos:column="10">.<pos:position pos:line="718" pos:column="11"/></operator><name pos:line="718" pos:column="11">vmem_majflt_counter<pos:position pos:line="718" pos:column="30"/></name></name> <operator pos:line="718" pos:column="31">=<pos:position pos:line="718" pos:column="32"/></operator> <name><name pos:line="718" pos:column="33">procentry<pos:position pos:line="718" pos:column="42"/></name><index pos:line="718" pos:column="42">[<expr><name pos:line="718" pos:column="43">i<pos:position pos:line="718" pos:column="44"/></name></expr>]<pos:position pos:line="718" pos:column="45"/></index></name><operator pos:line="718" pos:column="45">.<pos:position pos:line="718" pos:column="46"/></operator><name pos:line="718" pos:column="46">pi_majflt<pos:position pos:line="718" pos:column="55"/></name></expr>;<pos:position pos:line="718" pos:column="56"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="720" pos:column="7">pse<pos:position pos:line="720" pos:column="10"/></name><operator pos:line="720" pos:column="10">.<pos:position pos:line="720" pos:column="11"/></operator><name pos:line="720" pos:column="11">vmem_size<pos:position pos:line="720" pos:column="20"/></name></name> <operator pos:line="720" pos:column="21">=<pos:position pos:line="720" pos:column="22"/></operator> <name><name pos:line="720" pos:column="23">procentry<pos:position pos:line="720" pos:column="32"/></name><index pos:line="720" pos:column="32">[<expr><name pos:line="720" pos:column="33">i<pos:position pos:line="720" pos:column="34"/></name></expr>]<pos:position pos:line="720" pos:column="35"/></index></name><operator pos:line="720" pos:column="35">.<pos:position pos:line="720" pos:column="36"/></operator><name pos:line="720" pos:column="36">pi_tsize<pos:position pos:line="720" pos:column="44"/></name> <operator pos:line="720" pos:column="45">+<pos:position pos:line="720" pos:column="46"/></operator> <name><name pos:line="720" pos:column="47">procentry<pos:position pos:line="720" pos:column="56"/></name><index pos:line="720" pos:column="56">[<expr><name pos:line="720" pos:column="57">i<pos:position pos:line="720" pos:column="58"/></name></expr>]<pos:position pos:line="720" pos:column="59"/></index></name><operator pos:line="720" pos:column="59">.<pos:position pos:line="720" pos:column="60"/></operator><name pos:line="720" pos:column="60">pi_dvm<pos:position pos:line="720" pos:column="66"/></name> <operator pos:line="720" pos:column="67">*<pos:position pos:line="720" pos:column="68"/></operator> <name pos:line="720" pos:column="69">pagesize<pos:position pos:line="720" pos:column="77"/></name></expr>;<pos:position pos:line="720" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="721" pos:column="7">pse<pos:position pos:line="721" pos:column="10"/></name><operator pos:line="721" pos:column="10">.<pos:position pos:line="721" pos:column="11"/></operator><name pos:line="721" pos:column="11">vmem_rss<pos:position pos:line="721" pos:column="19"/></name></name> <operator pos:line="721" pos:column="20">=<pos:position pos:line="721" pos:column="21"/></operator> <operator pos:line="721" pos:column="22">(<pos:position pos:line="721" pos:column="23"/></operator><name><name pos:line="721" pos:column="23">procentry<pos:position pos:line="721" pos:column="32"/></name><index pos:line="721" pos:column="32">[<expr><name pos:line="721" pos:column="33">i<pos:position pos:line="721" pos:column="34"/></name></expr>]<pos:position pos:line="721" pos:column="35"/></index></name><operator pos:line="721" pos:column="35">.<pos:position pos:line="721" pos:column="36"/></operator><name pos:line="721" pos:column="36">pi_drss<pos:position pos:line="721" pos:column="43"/></name> <operator pos:line="721" pos:column="44">+<pos:position pos:line="721" pos:column="45"/></operator> <name><name pos:line="721" pos:column="46">procentry<pos:position pos:line="721" pos:column="55"/></name><index pos:line="721" pos:column="55">[<expr><name pos:line="721" pos:column="56">i<pos:position pos:line="721" pos:column="57"/></name></expr>]<pos:position pos:line="721" pos:column="58"/></index></name><operator pos:line="721" pos:column="58">.<pos:position pos:line="721" pos:column="59"/></operator><name pos:line="721" pos:column="59">pi_trss<pos:position pos:line="721" pos:column="66"/></name><operator pos:line="721" pos:column="66">)<pos:position pos:line="721" pos:column="67"/></operator> <operator pos:line="721" pos:column="68">*<pos:position pos:line="721" pos:column="69"/></operator> <name pos:line="721" pos:column="70">pagesize<pos:position pos:line="721" pos:column="78"/></name></expr>;<pos:position pos:line="721" pos:column="79"/></expr_stmt>
      <comment type="block" pos:line="722" pos:column="7">/* Not supported/implemented */</comment>
      <expr_stmt><expr><name><name pos:line="723" pos:column="7">pse<pos:position pos:line="723" pos:column="10"/></name><operator pos:line="723" pos:column="10">.<pos:position pos:line="723" pos:column="11"/></operator><name pos:line="723" pos:column="11">vmem_data<pos:position pos:line="723" pos:column="20"/></name></name> <operator pos:line="723" pos:column="21">=<pos:position pos:line="723" pos:column="22"/></operator> <literal type="number" pos:line="723" pos:column="23">0<pos:position pos:line="723" pos:column="24"/></literal></expr>;<pos:position pos:line="723" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="724" pos:column="7">pse<pos:position pos:line="724" pos:column="10"/></name><operator pos:line="724" pos:column="10">.<pos:position pos:line="724" pos:column="11"/></operator><name pos:line="724" pos:column="11">vmem_code<pos:position pos:line="724" pos:column="20"/></name></name> <operator pos:line="724" pos:column="21">=<pos:position pos:line="724" pos:column="22"/></operator> <literal type="number" pos:line="724" pos:column="23">0<pos:position pos:line="724" pos:column="24"/></literal></expr>;<pos:position pos:line="724" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="725" pos:column="7">pse<pos:position pos:line="725" pos:column="10"/></name><operator pos:line="725" pos:column="10">.<pos:position pos:line="725" pos:column="11"/></operator><name pos:line="725" pos:column="11">stack_size<pos:position pos:line="725" pos:column="21"/></name></name> <operator pos:line="725" pos:column="22">=<pos:position pos:line="725" pos:column="23"/></operator> <literal type="number" pos:line="725" pos:column="24">0<pos:position pos:line="725" pos:column="25"/></literal></expr>;<pos:position pos:line="725" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="727" pos:column="7">pse<pos:position pos:line="727" pos:column="10"/></name><operator pos:line="727" pos:column="10">.<pos:position pos:line="727" pos:column="11"/></operator><name pos:line="727" pos:column="11">io_rchar<pos:position pos:line="727" pos:column="19"/></name></name> <operator pos:line="727" pos:column="20">=<pos:position pos:line="727" pos:column="21"/></operator> <operator pos:line="727" pos:column="22">-<pos:position pos:line="727" pos:column="23"/></operator><literal type="number" pos:line="727" pos:column="23">1<pos:position pos:line="727" pos:column="24"/></literal></expr>;<pos:position pos:line="727" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="728" pos:column="7">pse<pos:position pos:line="728" pos:column="10"/></name><operator pos:line="728" pos:column="10">.<pos:position pos:line="728" pos:column="11"/></operator><name pos:line="728" pos:column="11">io_wchar<pos:position pos:line="728" pos:column="19"/></name></name> <operator pos:line="728" pos:column="20">=<pos:position pos:line="728" pos:column="21"/></operator> <operator pos:line="728" pos:column="22">-<pos:position pos:line="728" pos:column="23"/></operator><literal type="number" pos:line="728" pos:column="23">1<pos:position pos:line="728" pos:column="24"/></literal></expr>;<pos:position pos:line="728" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="729" pos:column="7">pse<pos:position pos:line="729" pos:column="10"/></name><operator pos:line="729" pos:column="10">.<pos:position pos:line="729" pos:column="11"/></operator><name pos:line="729" pos:column="11">io_syscr<pos:position pos:line="729" pos:column="19"/></name></name> <operator pos:line="729" pos:column="20">=<pos:position pos:line="729" pos:column="21"/></operator> <operator pos:line="729" pos:column="22">-<pos:position pos:line="729" pos:column="23"/></operator><literal type="number" pos:line="729" pos:column="23">1<pos:position pos:line="729" pos:column="24"/></literal></expr>;<pos:position pos:line="729" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="730" pos:column="7">pse<pos:position pos:line="730" pos:column="10"/></name><operator pos:line="730" pos:column="10">.<pos:position pos:line="730" pos:column="11"/></operator><name pos:line="730" pos:column="11">io_syscw<pos:position pos:line="730" pos:column="19"/></name></name> <operator pos:line="730" pos:column="20">=<pos:position pos:line="730" pos:column="21"/></operator> <operator pos:line="730" pos:column="22">-<pos:position pos:line="730" pos:column="23"/></operator><literal type="number" pos:line="730" pos:column="23">1<pos:position pos:line="730" pos:column="24"/></literal></expr>;<pos:position pos:line="730" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="731" pos:column="7">pse<pos:position pos:line="731" pos:column="10"/></name><operator pos:line="731" pos:column="10">.<pos:position pos:line="731" pos:column="11"/></operator><name pos:line="731" pos:column="11">io_diskr<pos:position pos:line="731" pos:column="19"/></name></name> <operator pos:line="731" pos:column="20">=<pos:position pos:line="731" pos:column="21"/></operator> <operator pos:line="731" pos:column="22">-<pos:position pos:line="731" pos:column="23"/></operator><literal type="number" pos:line="731" pos:column="23">1<pos:position pos:line="731" pos:column="24"/></literal></expr>;<pos:position pos:line="731" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="732" pos:column="7">pse<pos:position pos:line="732" pos:column="10"/></name><operator pos:line="732" pos:column="10">.<pos:position pos:line="732" pos:column="11"/></operator><name pos:line="732" pos:column="11">io_diskw<pos:position pos:line="732" pos:column="19"/></name></name> <operator pos:line="732" pos:column="20">=<pos:position pos:line="732" pos:column="21"/></operator> <operator pos:line="732" pos:column="22">-<pos:position pos:line="732" pos:column="23"/></operator><literal type="number" pos:line="732" pos:column="23">1<pos:position pos:line="732" pos:column="24"/></literal></expr>;<pos:position pos:line="732" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="734" pos:column="7">pse<pos:position pos:line="734" pos:column="10"/></name><operator pos:line="734" pos:column="10">.<pos:position pos:line="734" pos:column="11"/></operator><name pos:line="734" pos:column="11">num_fd<pos:position pos:line="734" pos:column="17"/></name></name> <operator pos:line="734" pos:column="18">=<pos:position pos:line="734" pos:column="19"/></operator> <literal type="number" pos:line="734" pos:column="20">0<pos:position pos:line="734" pos:column="21"/></literal></expr>;<pos:position pos:line="734" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="735" pos:column="7">pse<pos:position pos:line="735" pos:column="10"/></name><operator pos:line="735" pos:column="10">.<pos:position pos:line="735" pos:column="11"/></operator><name pos:line="735" pos:column="11">num_maps<pos:position pos:line="735" pos:column="19"/></name></name> <operator pos:line="735" pos:column="20">=<pos:position pos:line="735" pos:column="21"/></operator> <literal type="number" pos:line="735" pos:column="22">0<pos:position pos:line="735" pos:column="23"/></literal></expr>;<pos:position pos:line="735" pos:column="24"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="737" pos:column="7">pse<pos:position pos:line="737" pos:column="10"/></name><operator pos:line="737" pos:column="10">.<pos:position pos:line="737" pos:column="11"/></operator><name pos:line="737" pos:column="11">cswitch_vol<pos:position pos:line="737" pos:column="22"/></name></name> <operator pos:line="737" pos:column="23">=<pos:position pos:line="737" pos:column="24"/></operator> <operator pos:line="737" pos:column="25">-<pos:position pos:line="737" pos:column="26"/></operator><literal type="number" pos:line="737" pos:column="26">1<pos:position pos:line="737" pos:column="27"/></literal></expr>;<pos:position pos:line="737" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="738" pos:column="7">pse<pos:position pos:line="738" pos:column="10"/></name><operator pos:line="738" pos:column="10">.<pos:position pos:line="738" pos:column="11"/></operator><name pos:line="738" pos:column="11">cswitch_invol<pos:position pos:line="738" pos:column="24"/></name></name> <operator pos:line="738" pos:column="25">=<pos:position pos:line="738" pos:column="26"/></operator> <operator pos:line="738" pos:column="27">-<pos:position pos:line="738" pos:column="28"/></operator><literal type="number" pos:line="738" pos:column="28">1<pos:position pos:line="738" pos:column="29"/></literal></expr>;<pos:position pos:line="738" pos:column="30"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="740" pos:column="7">ps_list_add<pos:position pos:line="740" pos:column="18"/></name><argument_list pos:line="740" pos:column="18">(<argument><expr><name pos:line="740" pos:column="19">cmdline<pos:position pos:line="740" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="740" pos:column="28">cargs<pos:position pos:line="740" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="740" pos:column="35">&amp;<pos:position pos:line="740" pos:column="40"/></operator><name pos:line="740" pos:column="36">pse<pos:position pos:line="740" pos:column="39"/></name></expr></argument>)<pos:position pos:line="740" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="740" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="741" pos:column="6"/></block></for> <comment type="block" pos:line="741" pos:column="7">/* for (i = 0 .. nprocs) */</comment>

    <if pos:line="743" pos:column="5">if <condition pos:line="743" pos:column="8">(<expr><name pos:line="743" pos:column="9">nprocs<pos:position pos:line="743" pos:column="15"/></name> <operator pos:line="743" pos:column="16">&lt;<pos:position pos:line="743" pos:column="20"/></operator> <name pos:line="743" pos:column="18">MAXPROCENTRY<pos:position pos:line="743" pos:column="30"/></name></expr>)<pos:position pos:line="743" pos:column="31"/></condition><then pos:line="743" pos:column="31">
      <block type="pseudo"><break pos:line="744" pos:column="7">break;<pos:position pos:line="744" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="745" pos:column="4"/></block></while> <comment type="block" pos:line="745" pos:column="5">/* while (getprocs64() &gt; 0) */</comment>
  <expr_stmt><expr><call><name pos:line="746" pos:column="3">ps_submit_state<pos:position pos:line="746" pos:column="18"/></name><argument_list pos:line="746" pos:column="18">(<argument><expr><literal type="string" pos:line="746" pos:column="19">"running"<pos:position pos:line="746" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="746" pos:column="30">running<pos:position pos:line="746" pos:column="37"/></name></expr></argument>)<pos:position pos:line="746" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="746" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="747" pos:column="3">ps_submit_state<pos:position pos:line="747" pos:column="18"/></name><argument_list pos:line="747" pos:column="18">(<argument><expr><literal type="string" pos:line="747" pos:column="19">"sleeping"<pos:position pos:line="747" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="747" pos:column="31">sleeping<pos:position pos:line="747" pos:column="39"/></name></expr></argument>)<pos:position pos:line="747" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="747" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="748" pos:column="3">ps_submit_state<pos:position pos:line="748" pos:column="18"/></name><argument_list pos:line="748" pos:column="18">(<argument><expr><literal type="string" pos:line="748" pos:column="19">"zombies"<pos:position pos:line="748" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="748" pos:column="30">zombies<pos:position pos:line="748" pos:column="37"/></name></expr></argument>)<pos:position pos:line="748" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="748" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="749" pos:column="3">ps_submit_state<pos:position pos:line="749" pos:column="18"/></name><argument_list pos:line="749" pos:column="18">(<argument><expr><literal type="string" pos:line="749" pos:column="19">"stopped"<pos:position pos:line="749" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="749" pos:column="30">stopped<pos:position pos:line="749" pos:column="37"/></name></expr></argument>)<pos:position pos:line="749" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="749" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="750" pos:column="3">ps_submit_state<pos:position pos:line="750" pos:column="18"/></name><argument_list pos:line="750" pos:column="18">(<argument><expr><literal type="string" pos:line="750" pos:column="19">"paging"<pos:position pos:line="750" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="750" pos:column="29">paging<pos:position pos:line="750" pos:column="35"/></name></expr></argument>)<pos:position pos:line="750" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="750" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="751" pos:column="3">ps_submit_state<pos:position pos:line="751" pos:column="18"/></name><argument_list pos:line="751" pos:column="18">(<argument><expr><literal type="string" pos:line="751" pos:column="19">"blocked"<pos:position pos:line="751" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="751" pos:column="30">blocked<pos:position pos:line="751" pos:column="37"/></name></expr></argument>)<pos:position pos:line="751" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="751" pos:column="39"/></expr_stmt>

  <for pos:line="753" pos:column="3">for <control pos:line="753" pos:column="7">(<init><decl><type><name pos:line="753" pos:column="8">procstat_t<pos:position pos:line="753" pos:column="18"/></name> <modifier pos:line="753" pos:column="19">*<pos:position pos:line="753" pos:column="20"/></modifier></type><name pos:line="753" pos:column="20">ps<pos:position pos:line="753" pos:column="22"/></name> <init pos:line="753" pos:column="23">= <expr><name pos:line="753" pos:column="25">list_head_g<pos:position pos:line="753" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="753" pos:column="37"/></init> <condition><expr><name pos:line="753" pos:column="38">ps<pos:position pos:line="753" pos:column="40"/></name> <operator pos:line="753" pos:column="41">!=<pos:position pos:line="753" pos:column="43"/></operator> <name pos:line="753" pos:column="44">NULL<pos:position pos:line="753" pos:column="48"/></name></expr>;<pos:position pos:line="753" pos:column="49"/></condition> <incr><expr><name pos:line="753" pos:column="50">ps<pos:position pos:line="753" pos:column="52"/></name> <operator pos:line="753" pos:column="53">=<pos:position pos:line="753" pos:column="54"/></operator> <name><name pos:line="753" pos:column="55">ps<pos:position pos:line="753" pos:column="57"/></name><operator pos:line="753" pos:column="57">-&gt;<pos:position pos:line="753" pos:column="62"/></operator><name pos:line="753" pos:column="59">next<pos:position pos:line="753" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="753" pos:column="64"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="754" pos:column="5">ps_submit_proc_list<pos:position pos:line="754" pos:column="24"/></name><argument_list pos:line="754" pos:column="24">(<argument><expr><name pos:line="754" pos:column="25">ps<pos:position pos:line="754" pos:column="27"/></name></expr></argument>)<pos:position pos:line="754" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="754" pos:column="29"/></expr_stmt></block></for>
<comment type="block" pos:line="755" pos:column="1">/* #endif HAVE_PROCINFO_H */</comment>

<cpp:elif pos:line="757" pos:column="1">#<cpp:directive pos:line="757" pos:column="2">elif<pos:position pos:line="757" pos:column="6"/></cpp:directive> <expr><name pos:line="757" pos:column="7">KERNEL_SOLARIS<pos:position pos:line="757" pos:column="21"/></name></expr></cpp:elif>
  <comment type="block" pos:line="758" pos:column="3">/*
   * The Solaris section adds a few more process states and removes some
   * process states compared to linux. Most notably there is no "PAGING"
   * and "BLOCKED" state for a process.  The rest is similar to the linux
   * code.
   */</comment>
  <decl_stmt><decl><type><name pos:line="764" pos:column="3">int<pos:position pos:line="764" pos:column="6"/></name></type> <name pos:line="764" pos:column="7">running<pos:position pos:line="764" pos:column="14"/></name> <init pos:line="764" pos:column="15">= <expr><literal type="number" pos:line="764" pos:column="17">0<pos:position pos:line="764" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="764" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="765" pos:column="3">int<pos:position pos:line="765" pos:column="6"/></name></type> <name pos:line="765" pos:column="7">sleeping<pos:position pos:line="765" pos:column="15"/></name> <init pos:line="765" pos:column="16">= <expr><literal type="number" pos:line="765" pos:column="18">0<pos:position pos:line="765" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="765" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="766" pos:column="3">int<pos:position pos:line="766" pos:column="6"/></name></type> <name pos:line="766" pos:column="7">zombies<pos:position pos:line="766" pos:column="14"/></name> <init pos:line="766" pos:column="15">= <expr><literal type="number" pos:line="766" pos:column="17">0<pos:position pos:line="766" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="766" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="767" pos:column="3">int<pos:position pos:line="767" pos:column="6"/></name></type> <name pos:line="767" pos:column="7">stopped<pos:position pos:line="767" pos:column="14"/></name> <init pos:line="767" pos:column="15">= <expr><literal type="number" pos:line="767" pos:column="17">0<pos:position pos:line="767" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="767" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="768" pos:column="3">int<pos:position pos:line="768" pos:column="6"/></name></type> <name pos:line="768" pos:column="7">detached<pos:position pos:line="768" pos:column="15"/></name> <init pos:line="768" pos:column="16">= <expr><literal type="number" pos:line="768" pos:column="18">0<pos:position pos:line="768" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="768" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="769" pos:column="3">int<pos:position pos:line="769" pos:column="6"/></name></type> <name pos:line="769" pos:column="7">daemon<pos:position pos:line="769" pos:column="13"/></name> <init pos:line="769" pos:column="14">= <expr><literal type="number" pos:line="769" pos:column="16">0<pos:position pos:line="769" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="769" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="770" pos:column="3">int<pos:position pos:line="770" pos:column="6"/></name></type> <name pos:line="770" pos:column="7">system<pos:position pos:line="770" pos:column="13"/></name> <init pos:line="770" pos:column="14">= <expr><literal type="number" pos:line="770" pos:column="16">0<pos:position pos:line="770" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="770" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="771" pos:column="3">int<pos:position pos:line="771" pos:column="6"/></name></type> <name pos:line="771" pos:column="7">orphan<pos:position pos:line="771" pos:column="13"/></name> <init pos:line="771" pos:column="14">= <expr><literal type="number" pos:line="771" pos:column="16">0<pos:position pos:line="771" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="771" pos:column="18"/></decl_stmt>

  <decl_stmt><decl><type><name><name pos:line="773" pos:column="3">struct<pos:position pos:line="773" pos:column="9"/></name> <name pos:line="773" pos:column="10">dirent<pos:position pos:line="773" pos:column="16"/></name></name> <modifier pos:line="773" pos:column="17">*<pos:position pos:line="773" pos:column="18"/></modifier></type><name pos:line="773" pos:column="18">ent<pos:position pos:line="773" pos:column="21"/></name></decl>;<pos:position pos:line="773" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="774" pos:column="3">DIR<pos:position pos:line="774" pos:column="6"/></name> <modifier pos:line="774" pos:column="7">*<pos:position pos:line="774" pos:column="8"/></modifier></type><name pos:line="774" pos:column="8">proc<pos:position pos:line="774" pos:column="12"/></name></decl>;<pos:position pos:line="774" pos:column="13"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="776" pos:column="3">int<pos:position pos:line="776" pos:column="6"/></name></type> <name pos:line="776" pos:column="7">status<pos:position pos:line="776" pos:column="13"/></name></decl>;<pos:position pos:line="776" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="777" pos:column="3">char<pos:position pos:line="777" pos:column="7"/></name></type> <name pos:line="777" pos:column="8">state<pos:position pos:line="777" pos:column="13"/></name></decl>;<pos:position pos:line="777" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="779" pos:column="3">char<pos:position pos:line="779" pos:column="7"/></name></type> <name><name pos:line="779" pos:column="8">cmdline<pos:position pos:line="779" pos:column="15"/></name><index pos:line="779" pos:column="15">[<expr><name pos:line="779" pos:column="16">PRARGSZ<pos:position pos:line="779" pos:column="23"/></name></expr>]<pos:position pos:line="779" pos:column="24"/></index></name></decl>;<pos:position pos:line="779" pos:column="25"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="781" pos:column="3">ps_list_reset<pos:position pos:line="781" pos:column="16"/></name><argument_list pos:line="781" pos:column="16">()<pos:position pos:line="781" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="781" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><name pos:line="783" pos:column="3">proc<pos:position pos:line="783" pos:column="7"/></name> <operator pos:line="783" pos:column="8">=<pos:position pos:line="783" pos:column="9"/></operator> <call><name pos:line="783" pos:column="10">opendir<pos:position pos:line="783" pos:column="17"/></name><argument_list pos:line="783" pos:column="17">(<argument><expr><literal type="string" pos:line="783" pos:column="18">"/proc"<pos:position pos:line="783" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="783" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="783" pos:column="27"/></expr_stmt>
  <if pos:line="784" pos:column="3">if <condition pos:line="784" pos:column="6">(<expr><name pos:line="784" pos:column="7">proc<pos:position pos:line="784" pos:column="11"/></name> <operator pos:line="784" pos:column="12">==<pos:position pos:line="784" pos:column="14"/></operator> <name pos:line="784" pos:column="15">NULL<pos:position pos:line="784" pos:column="19"/></name></expr>)<pos:position pos:line="784" pos:column="20"/></condition><then pos:line="784" pos:column="20">
    <block type="pseudo"><return pos:line="785" pos:column="5">return <expr><operator pos:line="785" pos:column="12">-<pos:position pos:line="785" pos:column="13"/></operator><literal type="number" pos:line="785" pos:column="13">1<pos:position pos:line="785" pos:column="14"/></literal></expr>;<pos:position pos:line="785" pos:column="15"/></return></block></then></if>

  <while pos:line="787" pos:column="3">while <condition pos:line="787" pos:column="9">(<expr><operator pos:line="787" pos:column="10">(<pos:position pos:line="787" pos:column="11"/></operator><name pos:line="787" pos:column="11">ent<pos:position pos:line="787" pos:column="14"/></name> <operator pos:line="787" pos:column="15">=<pos:position pos:line="787" pos:column="16"/></operator> <call><name pos:line="787" pos:column="17">readdir<pos:position pos:line="787" pos:column="24"/></name><argument_list pos:line="787" pos:column="24">(<argument><expr><name pos:line="787" pos:column="25">proc<pos:position pos:line="787" pos:column="29"/></name></expr></argument>)<pos:position pos:line="787" pos:column="30"/></argument_list></call><operator pos:line="787" pos:column="30">)<pos:position pos:line="787" pos:column="31"/></operator> <operator pos:line="787" pos:column="32">!=<pos:position pos:line="787" pos:column="34"/></operator> <name pos:line="787" pos:column="35">NULL<pos:position pos:line="787" pos:column="39"/></name></expr>)<pos:position pos:line="787" pos:column="40"/></condition> <block pos:line="787" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="788" pos:column="5">long<pos:position pos:line="788" pos:column="9"/></name></type> <name pos:line="788" pos:column="10">pid<pos:position pos:line="788" pos:column="13"/></name></decl>;<pos:position pos:line="788" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="789" pos:column="5">process_entry_t<pos:position pos:line="789" pos:column="20"/></name></type> <name pos:line="789" pos:column="21">pse<pos:position pos:line="789" pos:column="24"/></name></decl>;<pos:position pos:line="789" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="790" pos:column="5">char<pos:position pos:line="790" pos:column="9"/></name> <modifier pos:line="790" pos:column="10">*<pos:position pos:line="790" pos:column="11"/></modifier></type><name pos:line="790" pos:column="11">endptr<pos:position pos:line="790" pos:column="17"/></name></decl>;<pos:position pos:line="790" pos:column="18"/></decl_stmt>

    <if pos:line="792" pos:column="5">if <condition pos:line="792" pos:column="8">(<expr><operator pos:line="792" pos:column="9">!<pos:position pos:line="792" pos:column="10"/></operator><call><name pos:line="792" pos:column="10">isdigit<pos:position pos:line="792" pos:column="17"/></name><argument_list pos:line="792" pos:column="17">(<argument><expr><operator pos:line="792" pos:column="18">(<pos:position pos:line="792" pos:column="19"/></operator><name pos:line="792" pos:column="19">int<pos:position pos:line="792" pos:column="22"/></name><operator pos:line="792" pos:column="22">)<pos:position pos:line="792" pos:column="23"/></operator><name><name pos:line="792" pos:column="23">ent<pos:position pos:line="792" pos:column="26"/></name><operator pos:line="792" pos:column="26">-&gt;<pos:position pos:line="792" pos:column="31"/></operator><name pos:line="792" pos:column="28">d_name<pos:position pos:line="792" pos:column="34"/></name><index pos:line="792" pos:column="34">[<expr><literal type="number" pos:line="792" pos:column="35">0<pos:position pos:line="792" pos:column="36"/></literal></expr>]<pos:position pos:line="792" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="792" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="792" pos:column="39"/></condition><then pos:line="792" pos:column="39">
      <block type="pseudo"><continue pos:line="793" pos:column="7">continue;<pos:position pos:line="793" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="795" pos:column="5">pid<pos:position pos:line="795" pos:column="8"/></name> <operator pos:line="795" pos:column="9">=<pos:position pos:line="795" pos:column="10"/></operator> <call><name pos:line="795" pos:column="11">strtol<pos:position pos:line="795" pos:column="17"/></name><argument_list pos:line="795" pos:column="17">(<argument><expr><name><name pos:line="795" pos:column="18">ent<pos:position pos:line="795" pos:column="21"/></name><operator pos:line="795" pos:column="21">-&gt;<pos:position pos:line="795" pos:column="26"/></operator><name pos:line="795" pos:column="23">d_name<pos:position pos:line="795" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="795" pos:column="31">&amp;<pos:position pos:line="795" pos:column="36"/></operator><name pos:line="795" pos:column="32">endptr<pos:position pos:line="795" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="795" pos:column="40">10<pos:position pos:line="795" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="795" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="795" pos:column="44"/></expr_stmt>
    <if pos:line="796" pos:column="5">if <condition pos:line="796" pos:column="8">(<expr><operator pos:line="796" pos:column="9">*<pos:position pos:line="796" pos:column="10"/></operator><name pos:line="796" pos:column="10">endptr<pos:position pos:line="796" pos:column="16"/></name> <operator pos:line="796" pos:column="17">!=<pos:position pos:line="796" pos:column="19"/></operator> <literal type="number" pos:line="796" pos:column="20">0<pos:position pos:line="796" pos:column="21"/></literal></expr>)<pos:position pos:line="796" pos:column="22"/></condition><then pos:line="796" pos:column="22"> <comment type="block" pos:line="796" pos:column="23">/* value didn't completely parse as a number */</comment>
      <block type="pseudo"><continue pos:line="797" pos:column="7">continue;<pos:position pos:line="797" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="799" pos:column="5">memset<pos:position pos:line="799" pos:column="11"/></name><argument_list pos:line="799" pos:column="11">(<argument><expr><operator pos:line="799" pos:column="12">&amp;<pos:position pos:line="799" pos:column="17"/></operator><name pos:line="799" pos:column="13">pse<pos:position pos:line="799" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="799" pos:column="18">0<pos:position pos:line="799" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="799" pos:column="21">sizeof<argument_list pos:line="799" pos:column="27">(<argument><expr><name pos:line="799" pos:column="28">pse<pos:position pos:line="799" pos:column="31"/></name></expr></argument>)<pos:position pos:line="799" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="799" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="799" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="800" pos:column="5">pse<pos:position pos:line="800" pos:column="8"/></name><operator pos:line="800" pos:column="8">.<pos:position pos:line="800" pos:column="9"/></operator><name pos:line="800" pos:column="9">id<pos:position pos:line="800" pos:column="11"/></name></name> <operator pos:line="800" pos:column="12">=<pos:position pos:line="800" pos:column="13"/></operator> <name pos:line="800" pos:column="14">pid<pos:position pos:line="800" pos:column="17"/></name></expr>;<pos:position pos:line="800" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="802" pos:column="5">status<pos:position pos:line="802" pos:column="11"/></name> <operator pos:line="802" pos:column="12">=<pos:position pos:line="802" pos:column="13"/></operator> <call><name pos:line="802" pos:column="14">ps_read_process<pos:position pos:line="802" pos:column="29"/></name><argument_list pos:line="802" pos:column="29">(<argument><expr><name pos:line="802" pos:column="30">pid<pos:position pos:line="802" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="802" pos:column="35">&amp;<pos:position pos:line="802" pos:column="40"/></operator><name pos:line="802" pos:column="36">pse<pos:position pos:line="802" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="802" pos:column="41">&amp;<pos:position pos:line="802" pos:column="46"/></operator><name pos:line="802" pos:column="42">state<pos:position pos:line="802" pos:column="47"/></name></expr></argument>)<pos:position pos:line="802" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="802" pos:column="49"/></expr_stmt>
    <if pos:line="803" pos:column="5">if <condition pos:line="803" pos:column="8">(<expr><name pos:line="803" pos:column="9">status<pos:position pos:line="803" pos:column="15"/></name> <operator pos:line="803" pos:column="16">!=<pos:position pos:line="803" pos:column="18"/></operator> <literal type="number" pos:line="803" pos:column="19">0<pos:position pos:line="803" pos:column="20"/></literal></expr>)<pos:position pos:line="803" pos:column="21"/></condition><then pos:line="803" pos:column="21"> <block pos:line="803" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="804" pos:column="7">DEBUG<pos:position pos:line="804" pos:column="12"/></name><argument_list pos:line="804" pos:column="12">(<argument><expr><literal type="string" pos:line="804" pos:column="13">"ps_read_process failed: %i"<pos:position pos:line="804" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="804" pos:column="43">status<pos:position pos:line="804" pos:column="49"/></name></expr></argument>)<pos:position pos:line="804" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="804" pos:column="51"/></expr_stmt>
      <continue pos:line="805" pos:column="7">continue;<pos:position pos:line="805" pos:column="16"/></continue>
    }<pos:position pos:line="806" pos:column="6"/></block></then></if>

    <switch pos:line="808" pos:column="5">switch <condition pos:line="808" pos:column="12">(<expr><name pos:line="808" pos:column="13">state<pos:position pos:line="808" pos:column="18"/></name></expr>)<pos:position pos:line="808" pos:column="19"/></condition> <block pos:line="808" pos:column="20">{
    <case pos:line="809" pos:column="5">case <expr><literal type="char" pos:line="809" pos:column="10">'R'<pos:position pos:line="809" pos:column="13"/></literal></expr>:<pos:position pos:line="809" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="810" pos:column="7">running<pos:position pos:line="810" pos:column="14"/></name><operator pos:line="810" pos:column="14">++<pos:position pos:line="810" pos:column="16"/></operator></expr>;<pos:position pos:line="810" pos:column="17"/></expr_stmt>
      <break pos:line="811" pos:column="7">break;<pos:position pos:line="811" pos:column="13"/></break>
    <case pos:line="812" pos:column="5">case <expr><literal type="char" pos:line="812" pos:column="10">'S'<pos:position pos:line="812" pos:column="13"/></literal></expr>:<pos:position pos:line="812" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="813" pos:column="7">sleeping<pos:position pos:line="813" pos:column="15"/></name><operator pos:line="813" pos:column="15">++<pos:position pos:line="813" pos:column="17"/></operator></expr>;<pos:position pos:line="813" pos:column="18"/></expr_stmt>
      <break pos:line="814" pos:column="7">break;<pos:position pos:line="814" pos:column="13"/></break>
    <case pos:line="815" pos:column="5">case <expr><literal type="char" pos:line="815" pos:column="10">'E'<pos:position pos:line="815" pos:column="13"/></literal></expr>:<pos:position pos:line="815" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="816" pos:column="7">detached<pos:position pos:line="816" pos:column="15"/></name><operator pos:line="816" pos:column="15">++<pos:position pos:line="816" pos:column="17"/></operator></expr>;<pos:position pos:line="816" pos:column="18"/></expr_stmt>
      <break pos:line="817" pos:column="7">break;<pos:position pos:line="817" pos:column="13"/></break>
    <case pos:line="818" pos:column="5">case <expr><literal type="char" pos:line="818" pos:column="10">'Z'<pos:position pos:line="818" pos:column="13"/></literal></expr>:<pos:position pos:line="818" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="819" pos:column="7">zombies<pos:position pos:line="819" pos:column="14"/></name><operator pos:line="819" pos:column="14">++<pos:position pos:line="819" pos:column="16"/></operator></expr>;<pos:position pos:line="819" pos:column="17"/></expr_stmt>
      <break pos:line="820" pos:column="7">break;<pos:position pos:line="820" pos:column="13"/></break>
    <case pos:line="821" pos:column="5">case <expr><literal type="char" pos:line="821" pos:column="10">'T'<pos:position pos:line="821" pos:column="13"/></literal></expr>:<pos:position pos:line="821" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="822" pos:column="7">stopped<pos:position pos:line="822" pos:column="14"/></name><operator pos:line="822" pos:column="14">++<pos:position pos:line="822" pos:column="16"/></operator></expr>;<pos:position pos:line="822" pos:column="17"/></expr_stmt>
      <break pos:line="823" pos:column="7">break;<pos:position pos:line="823" pos:column="13"/></break>
    <case pos:line="824" pos:column="5">case <expr><literal type="char" pos:line="824" pos:column="10">'A'<pos:position pos:line="824" pos:column="13"/></literal></expr>:<pos:position pos:line="824" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="825" pos:column="7">daemon<pos:position pos:line="825" pos:column="13"/></name><operator pos:line="825" pos:column="13">++<pos:position pos:line="825" pos:column="15"/></operator></expr>;<pos:position pos:line="825" pos:column="16"/></expr_stmt>
      <break pos:line="826" pos:column="7">break;<pos:position pos:line="826" pos:column="13"/></break>
    <case pos:line="827" pos:column="5">case <expr><literal type="char" pos:line="827" pos:column="10">'Y'<pos:position pos:line="827" pos:column="13"/></literal></expr>:<pos:position pos:line="827" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="828" pos:column="7">system<pos:position pos:line="828" pos:column="13"/></name><operator pos:line="828" pos:column="13">++<pos:position pos:line="828" pos:column="15"/></operator></expr>;<pos:position pos:line="828" pos:column="16"/></expr_stmt>
      <break pos:line="829" pos:column="7">break;<pos:position pos:line="829" pos:column="13"/></break>
    <case pos:line="830" pos:column="5">case <expr><literal type="char" pos:line="830" pos:column="10">'O'<pos:position pos:line="830" pos:column="13"/></literal></expr>:<pos:position pos:line="830" pos:column="14"/></case>
      <expr_stmt><expr><name pos:line="831" pos:column="7">orphan<pos:position pos:line="831" pos:column="13"/></name><operator pos:line="831" pos:column="13">++<pos:position pos:line="831" pos:column="15"/></operator></expr>;<pos:position pos:line="831" pos:column="16"/></expr_stmt>
      <break pos:line="832" pos:column="7">break;<pos:position pos:line="832" pos:column="13"/></break>
    }<pos:position pos:line="833" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="835" pos:column="5">ps_list_add<pos:position pos:line="835" pos:column="16"/></name><argument_list pos:line="835" pos:column="16">(<argument><expr><name><name pos:line="835" pos:column="17">pse<pos:position pos:line="835" pos:column="20"/></name><operator pos:line="835" pos:column="20">.<pos:position pos:line="835" pos:column="21"/></operator><name pos:line="835" pos:column="21">name<pos:position pos:line="835" pos:column="25"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="836" pos:column="17">ps_get_cmdline<pos:position pos:line="836" pos:column="31"/></name><argument_list pos:line="836" pos:column="31">(<argument><expr><name pos:line="836" pos:column="32">pid<pos:position pos:line="836" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="836" pos:column="37">pse<pos:position pos:line="836" pos:column="40"/></name><operator pos:line="836" pos:column="40">.<pos:position pos:line="836" pos:column="41"/></operator><name pos:line="836" pos:column="41">name<pos:position pos:line="836" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="836" pos:column="47">cmdline<pos:position pos:line="836" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="836" pos:column="56">sizeof<argument_list pos:line="836" pos:column="62">(<argument><expr><name pos:line="836" pos:column="63">cmdline<pos:position pos:line="836" pos:column="70"/></name></expr></argument>)<pos:position pos:line="836" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="836" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="836" pos:column="74">&amp;<pos:position pos:line="836" pos:column="79"/></operator><name pos:line="836" pos:column="75">pse<pos:position pos:line="836" pos:column="78"/></name></expr></argument>)<pos:position pos:line="836" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="836" pos:column="80"/></expr_stmt>
  }<pos:position pos:line="837" pos:column="4"/></block></while> <comment type="block" pos:line="837" pos:column="5">/* while(readdir) */</comment>
  <expr_stmt><expr><call><name pos:line="838" pos:column="3">closedir<pos:position pos:line="838" pos:column="11"/></name><argument_list pos:line="838" pos:column="11">(<argument><expr><name pos:line="838" pos:column="12">proc<pos:position pos:line="838" pos:column="16"/></name></expr></argument>)<pos:position pos:line="838" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="838" pos:column="18"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="840" pos:column="3">ps_submit_state<pos:position pos:line="840" pos:column="18"/></name><argument_list pos:line="840" pos:column="18">(<argument><expr><literal type="string" pos:line="840" pos:column="19">"running"<pos:position pos:line="840" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="840" pos:column="30">running<pos:position pos:line="840" pos:column="37"/></name></expr></argument>)<pos:position pos:line="840" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="840" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="841" pos:column="3">ps_submit_state<pos:position pos:line="841" pos:column="18"/></name><argument_list pos:line="841" pos:column="18">(<argument><expr><literal type="string" pos:line="841" pos:column="19">"sleeping"<pos:position pos:line="841" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="841" pos:column="31">sleeping<pos:position pos:line="841" pos:column="39"/></name></expr></argument>)<pos:position pos:line="841" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="841" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="842" pos:column="3">ps_submit_state<pos:position pos:line="842" pos:column="18"/></name><argument_list pos:line="842" pos:column="18">(<argument><expr><literal type="string" pos:line="842" pos:column="19">"zombies"<pos:position pos:line="842" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="842" pos:column="30">zombies<pos:position pos:line="842" pos:column="37"/></name></expr></argument>)<pos:position pos:line="842" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="842" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="843" pos:column="3">ps_submit_state<pos:position pos:line="843" pos:column="18"/></name><argument_list pos:line="843" pos:column="18">(<argument><expr><literal type="string" pos:line="843" pos:column="19">"stopped"<pos:position pos:line="843" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="843" pos:column="30">stopped<pos:position pos:line="843" pos:column="37"/></name></expr></argument>)<pos:position pos:line="843" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="843" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="844" pos:column="3">ps_submit_state<pos:position pos:line="844" pos:column="18"/></name><argument_list pos:line="844" pos:column="18">(<argument><expr><literal type="string" pos:line="844" pos:column="19">"detached"<pos:position pos:line="844" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="844" pos:column="31">detached<pos:position pos:line="844" pos:column="39"/></name></expr></argument>)<pos:position pos:line="844" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="844" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="845" pos:column="3">ps_submit_state<pos:position pos:line="845" pos:column="18"/></name><argument_list pos:line="845" pos:column="18">(<argument><expr><literal type="string" pos:line="845" pos:column="19">"daemon"<pos:position pos:line="845" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="845" pos:column="29">daemon<pos:position pos:line="845" pos:column="35"/></name></expr></argument>)<pos:position pos:line="845" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="845" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="846" pos:column="3">ps_submit_state<pos:position pos:line="846" pos:column="18"/></name><argument_list pos:line="846" pos:column="18">(<argument><expr><literal type="string" pos:line="846" pos:column="19">"system"<pos:position pos:line="846" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="846" pos:column="29">system<pos:position pos:line="846" pos:column="35"/></name></expr></argument>)<pos:position pos:line="846" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="846" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="847" pos:column="3">ps_submit_state<pos:position pos:line="847" pos:column="18"/></name><argument_list pos:line="847" pos:column="18">(<argument><expr><literal type="string" pos:line="847" pos:column="19">"orphan"<pos:position pos:line="847" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="847" pos:column="29">orphan<pos:position pos:line="847" pos:column="35"/></name></expr></argument>)<pos:position pos:line="847" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="847" pos:column="37"/></expr_stmt>

  <for pos:line="849" pos:column="3">for <control pos:line="849" pos:column="7">(<init><decl><type><name pos:line="849" pos:column="8">procstat_t<pos:position pos:line="849" pos:column="18"/></name> <modifier pos:line="849" pos:column="19">*<pos:position pos:line="849" pos:column="20"/></modifier></type><name pos:line="849" pos:column="20">ps_ptr<pos:position pos:line="849" pos:column="26"/></name> <init pos:line="849" pos:column="27">= <expr><name pos:line="849" pos:column="29">list_head_g<pos:position pos:line="849" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="849" pos:column="41"/></init> <condition><expr><name pos:line="849" pos:column="42">ps_ptr<pos:position pos:line="849" pos:column="48"/></name> <operator pos:line="849" pos:column="49">!=<pos:position pos:line="849" pos:column="51"/></operator> <name pos:line="849" pos:column="52">NULL<pos:position pos:line="849" pos:column="56"/></name></expr>;<pos:position pos:line="849" pos:column="57"/></condition> <incr><expr><name pos:line="849" pos:column="58">ps_ptr<pos:position pos:line="849" pos:column="64"/></name> <operator pos:line="849" pos:column="65">=<pos:position pos:line="849" pos:column="66"/></operator> <name><name pos:line="849" pos:column="67">ps_ptr<pos:position pos:line="849" pos:column="73"/></name><operator pos:line="849" pos:column="73">-&gt;<pos:position pos:line="849" pos:column="78"/></operator><name pos:line="849" pos:column="75">next<pos:position pos:line="849" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="849" pos:column="80"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="850" pos:column="5">ps_submit_proc_list<pos:position pos:line="850" pos:column="24"/></name><argument_list pos:line="850" pos:column="24">(<argument><expr><name pos:line="850" pos:column="25">ps_ptr<pos:position pos:line="850" pos:column="31"/></name></expr></argument>)<pos:position pos:line="850" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="850" pos:column="33"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="852" pos:column="3">read_fork_rate<pos:position pos:line="852" pos:column="17"/></name><argument_list pos:line="852" pos:column="17">()<pos:position pos:line="852" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="852" pos:column="20"/></expr_stmt>
<cpp:endif pos:line="853" pos:column="1">#<cpp:directive pos:line="853" pos:column="2">endif<pos:position pos:line="853" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="853" pos:column="8">/* KERNEL_SOLARIS */</comment>

  <expr_stmt><expr><name pos:line="855" pos:column="3">want_init<pos:position pos:line="855" pos:column="12"/></name> <operator pos:line="855" pos:column="13">=<pos:position pos:line="855" pos:column="14"/></operator> <literal type="number" pos:line="855" pos:column="15">0<pos:position pos:line="855" pos:column="16"/></literal></expr>;<pos:position pos:line="855" pos:column="17"/></expr_stmt>

  <return pos:line="857" pos:column="3">return <expr><literal type="number" pos:line="857" pos:column="10">0<pos:position pos:line="857" pos:column="11"/></literal></expr>;<pos:position pos:line="857" pos:column="12"/></return>
}<pos:position pos:line="858" pos:column="2"/></block></function></unit>

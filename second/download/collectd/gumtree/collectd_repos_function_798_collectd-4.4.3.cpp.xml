<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_798_collectd-4.4.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ut_report_state<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">data_set_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ds<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">value_list_t<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">vl<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">threshold_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">th<pos:position pos:line="3" pos:column="26"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">gauge_t<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">values<pos:position pos:line="4" pos:column="26"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">ds_index<pos:position pos:line="5" pos:column="17"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">state<pos:position pos:line="6" pos:column="14"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="15"/></parameter_list>
<block pos:line="7" pos:column="1">{ <comment type="block" pos:line="7" pos:column="3">/* {{{ */</comment>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">state_old<pos:position pos:line="8" pos:column="16"/></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">notification_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">n<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">buf<pos:position pos:line="11" pos:column="12"/></name></decl>;<pos:position pos:line="11" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">size_t<pos:position pos:line="12" pos:column="9"/></name></type> <name pos:line="12" pos:column="10">bufsize<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name></decl>;<pos:position pos:line="14" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">state_old<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">uc_get_state<pos:position pos:line="16" pos:column="27"/></name> <argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">ds<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">vl<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="18" pos:column="3">/* If the state didn't change, only report if `persistent' is specified and
   * the state is not `okay'. */</comment>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">state<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">==<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="16">state_old<pos:position pos:line="20" pos:column="25"/></name></expr>)<pos:position pos:line="20" pos:column="26"/></condition><then pos:line="20" pos:column="26">
  <block pos:line="21" pos:column="3">{
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name><name pos:line="22" pos:column="10">th<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">flags<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">&amp;<pos:position pos:line="22" pos:column="25"/></operator> <name pos:line="22" pos:column="22">UT_FLAG_PERSIST<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">)<pos:position pos:line="22" pos:column="38"/></operator> <operator pos:line="22" pos:column="39">==<pos:position pos:line="22" pos:column="41"/></operator> <literal type="number" pos:line="22" pos:column="42">0<pos:position pos:line="22" pos:column="43"/></literal></expr>)<pos:position pos:line="22" pos:column="44"/></condition><then pos:line="22" pos:column="44">
      <block type="pseudo"><return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">0<pos:position pos:line="23" pos:column="16"/></literal><operator pos:line="23" pos:column="16">)<pos:position pos:line="23" pos:column="17"/></operator></expr>;<pos:position pos:line="23" pos:column="18"/></return></block></then>
    <elseif pos:line="24" pos:column="5">else <if pos:line="24" pos:column="10">if <condition pos:line="24" pos:column="13">(<expr><name pos:line="24" pos:column="14">state<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">==<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">STATE_OKAY<pos:position pos:line="24" pos:column="33"/></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34">
      <block type="pseudo"><return pos:line="25" pos:column="7">return <expr><operator pos:line="25" pos:column="14">(<pos:position pos:line="25" pos:column="15"/></operator><literal type="number" pos:line="25" pos:column="15">0<pos:position pos:line="25" pos:column="16"/></literal><operator pos:line="25" pos:column="16">)<pos:position pos:line="25" pos:column="17"/></operator></expr>;<pos:position pos:line="25" pos:column="18"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">state<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">!=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">state_old<pos:position pos:line="28" pos:column="25"/></name></expr>)<pos:position pos:line="28" pos:column="26"/></condition><then pos:line="28" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="5">uc_set_state<pos:position pos:line="29" pos:column="17"/></name> <argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">ds<pos:position pos:line="29" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="23">vl<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">state<pos:position pos:line="29" pos:column="32"/></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="34"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="31" pos:column="3">NOTIFICATION_INIT_VL<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><operator pos:line="31" pos:column="25">&amp;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="26">n<pos:position pos:line="31" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="29">vl<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="33">ds<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><name pos:line="33" pos:column="3">buf<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <name><name pos:line="33" pos:column="9">n<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">.<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="11">message<pos:position pos:line="33" pos:column="18"/></name></name></expr>;<pos:position pos:line="33" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name pos:line="34" pos:column="3">bufsize<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <sizeof pos:line="34" pos:column="13">sizeof <argument_list pos:line="34" pos:column="20">(<argument><expr><name><name pos:line="34" pos:column="21">n<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">.<pos:position pos:line="34" pos:column="23"/></operator><name pos:line="34" pos:column="23">message<pos:position pos:line="34" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>

  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">state<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">==<pos:position pos:line="36" pos:column="15"/></operator> <name pos:line="36" pos:column="16">STATE_OKAY<pos:position pos:line="36" pos:column="26"/></name></expr>)<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="5">n<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">.<pos:position pos:line="37" pos:column="7"/></operator><name pos:line="37" pos:column="7">severity<pos:position pos:line="37" pos:column="15"/></name></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <name pos:line="37" pos:column="18">NOTIF_OKAY<pos:position pos:line="37" pos:column="28"/></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt></block></then>
  <elseif pos:line="38" pos:column="3">else <if pos:line="38" pos:column="8">if <condition pos:line="38" pos:column="11">(<expr><name pos:line="38" pos:column="12">state<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">==<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">STATE_WARNING<pos:position pos:line="38" pos:column="34"/></name></expr>)<pos:position pos:line="38" pos:column="35"/></condition><then pos:line="38" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="5">n<pos:position pos:line="39" pos:column="6"/></name><operator pos:line="39" pos:column="6">.<pos:position pos:line="39" pos:column="7"/></operator><name pos:line="39" pos:column="7">severity<pos:position pos:line="39" pos:column="15"/></name></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">NOTIF_WARNING<pos:position pos:line="39" pos:column="31"/></name></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt></block></then></if></elseif>
  <else pos:line="40" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="5">n<pos:position pos:line="41" pos:column="6"/></name><operator pos:line="41" pos:column="6">.<pos:position pos:line="41" pos:column="7"/></operator><name pos:line="41" pos:column="7">severity<pos:position pos:line="41" pos:column="15"/></name></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <name pos:line="41" pos:column="18">NOTIF_FAILURE<pos:position pos:line="41" pos:column="31"/></name></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt></block></else></if>

  <expr_stmt><expr><name><name pos:line="43" pos:column="3">n<pos:position pos:line="43" pos:column="4"/></name><operator pos:line="43" pos:column="4">.<pos:position pos:line="43" pos:column="5"/></operator><name pos:line="43" pos:column="5">time<pos:position pos:line="43" pos:column="9"/></name></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <name><name pos:line="43" pos:column="12">vl<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">time<pos:position pos:line="43" pos:column="20"/></name></name></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="45" pos:column="3">status<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <call><name pos:line="45" pos:column="12">snprintf<pos:position pos:line="45" pos:column="20"/></name> <argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">buf<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="27">bufsize<pos:position pos:line="45" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="36">"Host %s, plugin %s"<pos:position pos:line="45" pos:column="56"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="46" pos:column="7">vl<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">host<pos:position pos:line="46" pos:column="15"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="17">vl<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">plugin<pos:position pos:line="46" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">buf<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">+=<pos:position pos:line="47" pos:column="9"/></operator> <name pos:line="47" pos:column="10">status<pos:position pos:line="47" pos:column="16"/></name></expr>;<pos:position pos:line="47" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="48" pos:column="3">bufsize<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">-=<pos:position pos:line="48" pos:column="13"/></operator> <name pos:line="48" pos:column="14">status<pos:position pos:line="48" pos:column="20"/></name></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name><name pos:line="50" pos:column="7">vl<pos:position pos:line="50" pos:column="9"/></name><operator pos:line="50" pos:column="9">-&gt;<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="11">plugin_instance<pos:position pos:line="50" pos:column="26"/></name><index pos:line="50" pos:column="26">[<expr><literal type="number" pos:line="50" pos:column="27">0<pos:position pos:line="50" pos:column="28"/></literal></expr>]<pos:position pos:line="50" pos:column="29"/></index></name> <operator pos:line="50" pos:column="30">!=<pos:position pos:line="50" pos:column="32"/></operator> <literal type="char" pos:line="50" pos:column="33">'\0'<pos:position pos:line="50" pos:column="37"/></literal></expr>)<pos:position pos:line="50" pos:column="38"/></condition><then pos:line="50" pos:column="38">
  <block pos:line="51" pos:column="3">{
    <expr_stmt><expr><name pos:line="52" pos:column="5">status<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">snprintf<pos:position pos:line="52" pos:column="22"/></name> <argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">buf<pos:position pos:line="52" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="29">bufsize<pos:position pos:line="52" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="38">" (instance %s)"<pos:position pos:line="52" pos:column="54"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="53" pos:column="9">vl<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">-&gt;<pos:position pos:line="53" pos:column="16"/></operator><name pos:line="53" pos:column="13">plugin_instance<pos:position pos:line="53" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">buf<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">+=<pos:position pos:line="54" pos:column="11"/></operator> <name pos:line="54" pos:column="12">status<pos:position pos:line="54" pos:column="18"/></name></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="55" pos:column="5">bufsize<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">-=<pos:position pos:line="55" pos:column="15"/></operator> <name pos:line="55" pos:column="16">status<pos:position pos:line="55" pos:column="22"/></name></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="56" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="58" pos:column="3">status<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">=<pos:position pos:line="58" pos:column="11"/></operator> <call><name pos:line="58" pos:column="12">snprintf<pos:position pos:line="58" pos:column="20"/></name> <argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">buf<pos:position pos:line="58" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="27">bufsize<pos:position pos:line="58" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="36">" type %s"<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="48">ds<pos:position pos:line="58" pos:column="50"/></name><operator pos:line="58" pos:column="50">-&gt;<pos:position pos:line="58" pos:column="55"/></operator><name pos:line="58" pos:column="52">type<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name pos:line="59" pos:column="3">buf<pos:position pos:line="59" pos:column="6"/></name> <operator pos:line="59" pos:column="7">+=<pos:position pos:line="59" pos:column="9"/></operator> <name pos:line="59" pos:column="10">status<pos:position pos:line="59" pos:column="16"/></name></expr>;<pos:position pos:line="59" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="60" pos:column="3">bufsize<pos:position pos:line="60" pos:column="10"/></name> <operator pos:line="60" pos:column="11">-=<pos:position pos:line="60" pos:column="13"/></operator> <name pos:line="60" pos:column="14">status<pos:position pos:line="60" pos:column="20"/></name></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>

  <if pos:line="62" pos:column="3">if <condition pos:line="62" pos:column="6">(<expr><name><name pos:line="62" pos:column="7">vl<pos:position pos:line="62" pos:column="9"/></name><operator pos:line="62" pos:column="9">-&gt;<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="11">type_instance<pos:position pos:line="62" pos:column="24"/></name><index pos:line="62" pos:column="24">[<expr><literal type="number" pos:line="62" pos:column="25">0<pos:position pos:line="62" pos:column="26"/></literal></expr>]<pos:position pos:line="62" pos:column="27"/></index></name> <operator pos:line="62" pos:column="28">!=<pos:position pos:line="62" pos:column="30"/></operator> <literal type="char" pos:line="62" pos:column="31">'\0'<pos:position pos:line="62" pos:column="35"/></literal></expr>)<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36">
  <block pos:line="63" pos:column="3">{
    <expr_stmt><expr><name pos:line="64" pos:column="5">status<pos:position pos:line="64" pos:column="11"/></name> <operator pos:line="64" pos:column="12">=<pos:position pos:line="64" pos:column="13"/></operator> <call><name pos:line="64" pos:column="14">snprintf<pos:position pos:line="64" pos:column="22"/></name> <argument_list pos:line="64" pos:column="23">(<argument><expr><name pos:line="64" pos:column="24">buf<pos:position pos:line="64" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="29">bufsize<pos:position pos:line="64" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="38">" (instance %s)"<pos:position pos:line="64" pos:column="54"/></literal></expr></argument>,
	<argument><expr><name><name pos:line="65" pos:column="9">vl<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">type_instance<pos:position pos:line="65" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="66" pos:column="5">buf<pos:position pos:line="66" pos:column="8"/></name> <operator pos:line="66" pos:column="9">+=<pos:position pos:line="66" pos:column="11"/></operator> <name pos:line="66" pos:column="12">status<pos:position pos:line="66" pos:column="18"/></name></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="67" pos:column="5">bufsize<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">-=<pos:position pos:line="67" pos:column="15"/></operator> <name pos:line="67" pos:column="16">status<pos:position pos:line="67" pos:column="22"/></name></expr>;<pos:position pos:line="67" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* Send an okay notification */</comment>
  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><name pos:line="71" pos:column="7">state<pos:position pos:line="71" pos:column="12"/></name> <operator pos:line="71" pos:column="13">==<pos:position pos:line="71" pos:column="15"/></operator> <name pos:line="71" pos:column="16">STATE_OKAY<pos:position pos:line="71" pos:column="26"/></name></expr>)<pos:position pos:line="71" pos:column="27"/></condition><then pos:line="71" pos:column="27">
  <block pos:line="72" pos:column="3">{
    <expr_stmt><expr><name pos:line="73" pos:column="5">status<pos:position pos:line="73" pos:column="11"/></name> <operator pos:line="73" pos:column="12">=<pos:position pos:line="73" pos:column="13"/></operator> <call><name pos:line="73" pos:column="14">snprintf<pos:position pos:line="73" pos:column="22"/></name> <argument_list pos:line="73" pos:column="23">(<argument><expr><name pos:line="73" pos:column="24">buf<pos:position pos:line="73" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="29">bufsize<pos:position pos:line="73" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="38">": All data sources are within range again."<pos:position pos:line="73" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><name pos:line="74" pos:column="5">buf<pos:position pos:line="74" pos:column="8"/></name> <operator pos:line="74" pos:column="9">+=<pos:position pos:line="74" pos:column="11"/></operator> <name pos:line="74" pos:column="12">status<pos:position pos:line="74" pos:column="18"/></name></expr>;<pos:position pos:line="74" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="75" pos:column="5">bufsize<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">-=<pos:position pos:line="75" pos:column="15"/></operator> <name pos:line="75" pos:column="16">status<pos:position pos:line="75" pos:column="22"/></name></expr>;<pos:position pos:line="75" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block></then>
  <else pos:line="77" pos:column="3">else
  <block pos:line="78" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="79" pos:column="5">double<pos:position pos:line="79" pos:column="11"/></name></type> <name pos:line="79" pos:column="12">min<pos:position pos:line="79" pos:column="15"/></name></decl>;<pos:position pos:line="79" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="80" pos:column="5">double<pos:position pos:line="80" pos:column="11"/></name></type> <name pos:line="80" pos:column="12">max<pos:position pos:line="80" pos:column="15"/></name></decl>;<pos:position pos:line="80" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="82" pos:column="5">min<pos:position pos:line="82" pos:column="8"/></name> <operator pos:line="82" pos:column="9">=<pos:position pos:line="82" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="82" pos:column="11">(<pos:position pos:line="82" pos:column="12"/></operator><name pos:line="82" pos:column="12">state<pos:position pos:line="82" pos:column="17"/></name> <operator pos:line="82" pos:column="18">==<pos:position pos:line="82" pos:column="20"/></operator> <name pos:line="82" pos:column="21">STATE_ERROR<pos:position pos:line="82" pos:column="32"/></name><operator pos:line="82" pos:column="32">)<pos:position pos:line="82" pos:column="33"/></operator></expr> ?<pos:position pos:line="82" pos:column="35"/></condition><then pos:line="82" pos:column="35"> <expr><name><name pos:line="82" pos:column="36">th<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">-&gt;<pos:position pos:line="82" pos:column="43"/></operator><name pos:line="82" pos:column="40">failure_min<pos:position pos:line="82" pos:column="51"/></name></name></expr> <pos:position pos:line="82" pos:column="52"/></then><else pos:line="82" pos:column="52">: <expr><name><name pos:line="82" pos:column="54">th<pos:position pos:line="82" pos:column="56"/></name><operator pos:line="82" pos:column="56">-&gt;<pos:position pos:line="82" pos:column="61"/></operator><name pos:line="82" pos:column="58">warning_min<pos:position pos:line="82" pos:column="69"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="82" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><name pos:line="83" pos:column="5">max<pos:position pos:line="83" pos:column="8"/></name> <operator pos:line="83" pos:column="9">=<pos:position pos:line="83" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="83" pos:column="11">(<pos:position pos:line="83" pos:column="12"/></operator><name pos:line="83" pos:column="12">state<pos:position pos:line="83" pos:column="17"/></name> <operator pos:line="83" pos:column="18">==<pos:position pos:line="83" pos:column="20"/></operator> <name pos:line="83" pos:column="21">STATE_ERROR<pos:position pos:line="83" pos:column="32"/></name><operator pos:line="83" pos:column="32">)<pos:position pos:line="83" pos:column="33"/></operator></expr> ?<pos:position pos:line="83" pos:column="35"/></condition><then pos:line="83" pos:column="35"> <expr><name><name pos:line="83" pos:column="36">th<pos:position pos:line="83" pos:column="38"/></name><operator pos:line="83" pos:column="38">-&gt;<pos:position pos:line="83" pos:column="43"/></operator><name pos:line="83" pos:column="40">failure_max<pos:position pos:line="83" pos:column="51"/></name></name></expr> <pos:position pos:line="83" pos:column="52"/></then><else pos:line="83" pos:column="52">: <expr><name><name pos:line="83" pos:column="54">th<pos:position pos:line="83" pos:column="56"/></name><operator pos:line="83" pos:column="56">-&gt;<pos:position pos:line="83" pos:column="61"/></operator><name pos:line="83" pos:column="58">warning_max<pos:position pos:line="83" pos:column="69"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="83" pos:column="70"/></expr_stmt>

    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name><name pos:line="85" pos:column="9">th<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">flags<pos:position pos:line="85" pos:column="18"/></name></name> <operator pos:line="85" pos:column="19">&amp;<pos:position pos:line="85" pos:column="24"/></operator> <name pos:line="85" pos:column="21">UT_FLAG_INVERT<pos:position pos:line="85" pos:column="35"/></name></expr>)<pos:position pos:line="85" pos:column="36"/></condition><then pos:line="85" pos:column="36">
    <block pos:line="86" pos:column="5">{
      <if pos:line="87" pos:column="7">if <condition pos:line="87" pos:column="10">(<expr><operator pos:line="87" pos:column="11">!<pos:position pos:line="87" pos:column="12"/></operator><call><name pos:line="87" pos:column="12">isnan<pos:position pos:line="87" pos:column="17"/></name> <argument_list pos:line="87" pos:column="18">(<argument><expr><name pos:line="87" pos:column="19">min<pos:position pos:line="87" pos:column="22"/></name></expr></argument>)<pos:position pos:line="87" pos:column="23"/></argument_list></call> <operator pos:line="87" pos:column="24">&amp;&amp;<pos:position pos:line="87" pos:column="34"/></operator> <operator pos:line="87" pos:column="27">!<pos:position pos:line="87" pos:column="28"/></operator><call><name pos:line="87" pos:column="28">isnan<pos:position pos:line="87" pos:column="33"/></name> <argument_list pos:line="87" pos:column="34">(<argument><expr><name pos:line="87" pos:column="35">max<pos:position pos:line="87" pos:column="38"/></name></expr></argument>)<pos:position pos:line="87" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="40"/></condition><then pos:line="87" pos:column="40">
      <block pos:line="88" pos:column="7">{
	<expr_stmt><expr><name pos:line="89" pos:column="9">status<pos:position pos:line="89" pos:column="15"/></name> <operator pos:line="89" pos:column="16">=<pos:position pos:line="89" pos:column="17"/></operator> <call><name pos:line="89" pos:column="18">snprintf<pos:position pos:line="89" pos:column="26"/></name> <argument_list pos:line="89" pos:column="27">(<argument><expr><name pos:line="89" pos:column="28">buf<pos:position pos:line="89" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="33">bufsize<pos:position pos:line="89" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="42">": Data source \"%s\" is currently "<pos:position pos:line="89" pos:column="78"/></literal>
	    <literal type="string" pos:line="90" pos:column="13">"%f. That is within the %s region of %f and %f."<pos:position pos:line="90" pos:column="61"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="91" pos:column="13">ds<pos:position pos:line="91" pos:column="15"/></name><operator pos:line="91" pos:column="15">-&gt;<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="17">ds<pos:position pos:line="91" pos:column="19"/></name><index pos:line="91" pos:column="19">[<expr><name pos:line="91" pos:column="20">ds_index<pos:position pos:line="91" pos:column="28"/></name></expr>]<pos:position pos:line="91" pos:column="29"/></index></name><operator pos:line="91" pos:column="29">.<pos:position pos:line="91" pos:column="30"/></operator><name pos:line="91" pos:column="30">name<pos:position pos:line="91" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="36">values<pos:position pos:line="91" pos:column="42"/></name><index pos:line="91" pos:column="42">[<expr><name pos:line="91" pos:column="43">ds_index<pos:position pos:line="91" pos:column="51"/></name></expr>]<pos:position pos:line="91" pos:column="52"/></index></name></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="92" pos:column="13">(<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">state<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">==<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="23">STATE_ERROR<pos:position pos:line="92" pos:column="34"/></name><operator pos:line="92" pos:column="34">)<pos:position pos:line="92" pos:column="35"/></operator></expr> ?<pos:position pos:line="92" pos:column="37"/></condition><then pos:line="92" pos:column="37"> <expr><literal type="string" pos:line="92" pos:column="38">"failure"<pos:position pos:line="92" pos:column="47"/></literal></expr> <pos:position pos:line="92" pos:column="48"/></then><else pos:line="92" pos:column="48">: <expr><literal type="string" pos:line="92" pos:column="50">"warning"<pos:position pos:line="92" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><name pos:line="93" pos:column="13">min<pos:position pos:line="93" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="18">max<pos:position pos:line="93" pos:column="21"/></name></expr></argument>)<pos:position pos:line="93" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="23"/></expr_stmt>
      }<pos:position pos:line="94" pos:column="8"/></block></then>
      <else pos:line="95" pos:column="7">else
      <block pos:line="96" pos:column="7">{
	<expr_stmt><expr><name pos:line="97" pos:column="9">status<pos:position pos:line="97" pos:column="15"/></name> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <call><name pos:line="97" pos:column="18">snprintf<pos:position pos:line="97" pos:column="26"/></name> <argument_list pos:line="97" pos:column="27">(<argument><expr><name pos:line="97" pos:column="28">buf<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="33">bufsize<pos:position pos:line="97" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="42">": Data source \"%s\" is currently "<pos:position pos:line="97" pos:column="78"/></literal>
	    <literal type="string" pos:line="98" pos:column="13">"%f. That is %s the %s threshold of %f."<pos:position pos:line="98" pos:column="53"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="99" pos:column="13">ds<pos:position pos:line="99" pos:column="15"/></name><operator pos:line="99" pos:column="15">-&gt;<pos:position pos:line="99" pos:column="20"/></operator><name pos:line="99" pos:column="17">ds<pos:position pos:line="99" pos:column="19"/></name><index pos:line="99" pos:column="19">[<expr><name pos:line="99" pos:column="20">ds_index<pos:position pos:line="99" pos:column="28"/></name></expr>]<pos:position pos:line="99" pos:column="29"/></index></name><operator pos:line="99" pos:column="29">.<pos:position pos:line="99" pos:column="30"/></operator><name pos:line="99" pos:column="30">name<pos:position pos:line="99" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="36">values<pos:position pos:line="99" pos:column="42"/></name><index pos:line="99" pos:column="42">[<expr><name pos:line="99" pos:column="43">ds_index<pos:position pos:line="99" pos:column="51"/></name></expr>]<pos:position pos:line="99" pos:column="52"/></index></name></expr></argument>,
	    <argument><expr><ternary><condition><expr><call><name pos:line="100" pos:column="13">isnan<pos:position pos:line="100" pos:column="18"/></name> <argument_list pos:line="100" pos:column="19">(<argument><expr><name pos:line="100" pos:column="20">min<pos:position pos:line="100" pos:column="23"/></name></expr></argument>)<pos:position pos:line="100" pos:column="24"/></argument_list></call></expr> ?<pos:position pos:line="100" pos:column="26"/></condition><then pos:line="100" pos:column="26"> <expr><literal type="string" pos:line="100" pos:column="27">"below"<pos:position pos:line="100" pos:column="34"/></literal></expr> <pos:position pos:line="100" pos:column="35"/></then><else pos:line="100" pos:column="35">: <expr><literal type="string" pos:line="100" pos:column="37">"above"<pos:position pos:line="100" pos:column="44"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="101" pos:column="13">(<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">state<pos:position pos:line="101" pos:column="19"/></name> <operator pos:line="101" pos:column="20">==<pos:position pos:line="101" pos:column="22"/></operator> <name pos:line="101" pos:column="23">STATE_ERROR<pos:position pos:line="101" pos:column="34"/></name><operator pos:line="101" pos:column="34">)<pos:position pos:line="101" pos:column="35"/></operator></expr> ?<pos:position pos:line="101" pos:column="37"/></condition><then pos:line="101" pos:column="37"> <expr><literal type="string" pos:line="101" pos:column="38">"failure"<pos:position pos:line="101" pos:column="47"/></literal></expr> <pos:position pos:line="101" pos:column="48"/></then><else pos:line="101" pos:column="48">: <expr><literal type="string" pos:line="101" pos:column="50">"warning"<pos:position pos:line="101" pos:column="59"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><ternary><condition><expr><call><name pos:line="102" pos:column="13">isnan<pos:position pos:line="102" pos:column="18"/></name> <argument_list pos:line="102" pos:column="19">(<argument><expr><name pos:line="102" pos:column="20">min<pos:position pos:line="102" pos:column="23"/></name></expr></argument>)<pos:position pos:line="102" pos:column="24"/></argument_list></call></expr> ?<pos:position pos:line="102" pos:column="26"/></condition><then pos:line="102" pos:column="26"> <expr><name pos:line="102" pos:column="27">max<pos:position pos:line="102" pos:column="30"/></name></expr> <pos:position pos:line="102" pos:column="31"/></then><else pos:line="102" pos:column="31">: <expr><name pos:line="102" pos:column="33">min<pos:position pos:line="102" pos:column="36"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="102" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="38"/></expr_stmt>
      }<pos:position pos:line="103" pos:column="8"/></block></else></if>
    }<pos:position pos:line="104" pos:column="6"/></block></then>
    <else pos:line="105" pos:column="5">else <comment type="block" pos:line="105" pos:column="10">/* is not inverted */</comment>
    <block pos:line="106" pos:column="5">{
      <expr_stmt><expr><name pos:line="107" pos:column="7">status<pos:position pos:line="107" pos:column="13"/></name> <operator pos:line="107" pos:column="14">=<pos:position pos:line="107" pos:column="15"/></operator> <call><name pos:line="107" pos:column="16">snprintf<pos:position pos:line="107" pos:column="24"/></name> <argument_list pos:line="107" pos:column="25">(<argument><expr><name pos:line="107" pos:column="26">buf<pos:position pos:line="107" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="31">bufsize<pos:position pos:line="107" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="40">": Data source \"%s\" is currently "<pos:position pos:line="107" pos:column="76"/></literal>
	  <literal type="string" pos:line="108" pos:column="11">"%f. That is %s the %s threshold of %f."<pos:position pos:line="108" pos:column="51"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="109" pos:column="11">ds<pos:position pos:line="109" pos:column="13"/></name><operator pos:line="109" pos:column="13">-&gt;<pos:position pos:line="109" pos:column="18"/></operator><name pos:line="109" pos:column="15">ds<pos:position pos:line="109" pos:column="17"/></name><index pos:line="109" pos:column="17">[<expr><name pos:line="109" pos:column="18">ds_index<pos:position pos:line="109" pos:column="26"/></name></expr>]<pos:position pos:line="109" pos:column="27"/></index></name><operator pos:line="109" pos:column="27">.<pos:position pos:line="109" pos:column="28"/></operator><name pos:line="109" pos:column="28">name<pos:position pos:line="109" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="34">values<pos:position pos:line="109" pos:column="40"/></name><index pos:line="109" pos:column="40">[<expr><name pos:line="109" pos:column="41">ds_index<pos:position pos:line="109" pos:column="49"/></name></expr>]<pos:position pos:line="109" pos:column="50"/></index></name></expr></argument>,
	  <argument><expr><ternary><condition><expr><operator pos:line="110" pos:column="11">(<pos:position pos:line="110" pos:column="12"/></operator><name><name pos:line="110" pos:column="12">values<pos:position pos:line="110" pos:column="18"/></name><index pos:line="110" pos:column="18">[<expr><name pos:line="110" pos:column="19">ds_index<pos:position pos:line="110" pos:column="27"/></name></expr>]<pos:position pos:line="110" pos:column="28"/></index></name> <operator pos:line="110" pos:column="29">&lt;<pos:position pos:line="110" pos:column="33"/></operator> <name pos:line="110" pos:column="31">min<pos:position pos:line="110" pos:column="34"/></name><operator pos:line="110" pos:column="34">)<pos:position pos:line="110" pos:column="35"/></operator></expr> ?<pos:position pos:line="110" pos:column="37"/></condition><then pos:line="110" pos:column="37"> <expr><literal type="string" pos:line="110" pos:column="38">"below"<pos:position pos:line="110" pos:column="45"/></literal></expr> <pos:position pos:line="110" pos:column="46"/></then><else pos:line="110" pos:column="46">: <expr><literal type="string" pos:line="110" pos:column="48">"above"<pos:position pos:line="110" pos:column="55"/></literal></expr></else></ternary></expr></argument>,
	  <argument><expr><ternary><condition><expr><operator pos:line="111" pos:column="11">(<pos:position pos:line="111" pos:column="12"/></operator><name pos:line="111" pos:column="12">state<pos:position pos:line="111" pos:column="17"/></name> <operator pos:line="111" pos:column="18">==<pos:position pos:line="111" pos:column="20"/></operator> <name pos:line="111" pos:column="21">STATE_ERROR<pos:position pos:line="111" pos:column="32"/></name><operator pos:line="111" pos:column="32">)<pos:position pos:line="111" pos:column="33"/></operator></expr> ?<pos:position pos:line="111" pos:column="35"/></condition><then pos:line="111" pos:column="35"> <expr><literal type="string" pos:line="111" pos:column="36">"failure"<pos:position pos:line="111" pos:column="45"/></literal></expr> <pos:position pos:line="111" pos:column="46"/></then><else pos:line="111" pos:column="46">: <expr><literal type="string" pos:line="111" pos:column="48">"warning"<pos:position pos:line="111" pos:column="57"/></literal></expr></else></ternary></expr></argument>,
	  <argument><expr><ternary><condition><expr><operator pos:line="112" pos:column="11">(<pos:position pos:line="112" pos:column="12"/></operator><name><name pos:line="112" pos:column="12">values<pos:position pos:line="112" pos:column="18"/></name><index pos:line="112" pos:column="18">[<expr><name pos:line="112" pos:column="19">ds_index<pos:position pos:line="112" pos:column="27"/></name></expr>]<pos:position pos:line="112" pos:column="28"/></index></name> <operator pos:line="112" pos:column="29">&lt;<pos:position pos:line="112" pos:column="33"/></operator> <name pos:line="112" pos:column="31">min<pos:position pos:line="112" pos:column="34"/></name><operator pos:line="112" pos:column="34">)<pos:position pos:line="112" pos:column="35"/></operator></expr> ?<pos:position pos:line="112" pos:column="37"/></condition><then pos:line="112" pos:column="37"> <expr><name pos:line="112" pos:column="38">min<pos:position pos:line="112" pos:column="41"/></name></expr> <pos:position pos:line="112" pos:column="42"/></then><else pos:line="112" pos:column="42">: <expr><name pos:line="112" pos:column="44">max<pos:position pos:line="112" pos:column="47"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="112" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="114" pos:column="5">buf<pos:position pos:line="114" pos:column="8"/></name> <operator pos:line="114" pos:column="9">+=<pos:position pos:line="114" pos:column="11"/></operator> <name pos:line="114" pos:column="12">status<pos:position pos:line="114" pos:column="18"/></name></expr>;<pos:position pos:line="114" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="115" pos:column="5">bufsize<pos:position pos:line="115" pos:column="12"/></name> <operator pos:line="115" pos:column="13">-=<pos:position pos:line="115" pos:column="15"/></operator> <name pos:line="115" pos:column="16">status<pos:position pos:line="115" pos:column="22"/></name></expr>;<pos:position pos:line="115" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="116" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="118" pos:column="3">plugin_dispatch_notification<pos:position pos:line="118" pos:column="31"/></name> <argument_list pos:line="118" pos:column="32">(<argument><expr><operator pos:line="118" pos:column="33">&amp;<pos:position pos:line="118" pos:column="38"/></operator><name pos:line="118" pos:column="34">n<pos:position pos:line="118" pos:column="35"/></name></expr></argument>)<pos:position pos:line="118" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="37"/></expr_stmt>

  <return pos:line="120" pos:column="3">return <expr><operator pos:line="120" pos:column="10">(<pos:position pos:line="120" pos:column="11"/></operator><literal type="number" pos:line="120" pos:column="11">0<pos:position pos:line="120" pos:column="12"/></literal><operator pos:line="120" pos:column="12">)<pos:position pos:line="120" pos:column="13"/></operator></expr>;<pos:position pos:line="120" pos:column="14"/></return>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

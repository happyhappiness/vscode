<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_66_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SList<pos:position pos:line="1" pos:column="6"/></name> <modifier pos:line="1" pos:column="7">*<pos:position pos:line="1" pos:column="8"/></modifier></type>
<name pos:line="2" pos:column="1">slist_remove<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">SList<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">phead<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">SListCallback<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">find<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">void<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">matchdata<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">SList<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">stale<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">void<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">result<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="7" pos:column="3">assert<pos:position pos:line="7" pos:column="9"/></name> <argument_list pos:line="7" pos:column="10">(<argument><expr><name pos:line="7" pos:column="11">find<pos:position pos:line="7" pos:column="15"/></name></expr></argument>)<pos:position pos:line="7" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="17"/></expr_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">!<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">phead<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">||<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">!<pos:position pos:line="9" pos:column="18"/></operator><operator pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">phead<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Does the head of the passed list match? */</comment>
  <expr_stmt><expr><name pos:line="13" pos:column="3">result<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call pos:line="13" pos:column="12">(<modifier pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></modifier><name pos:line="13" pos:column="14">find<pos:position pos:line="13" pos:column="18"/></name>) <argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">phead<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">matchdata<pos:position pos:line="13" pos:column="38"/></name></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">result<pos:position pos:line="14" pos:column="13"/></name></expr>)<pos:position pos:line="14" pos:column="14"/></condition><then pos:line="14" pos:column="14">
    <block pos:line="15" pos:column="5">{
      <expr_stmt><expr><name pos:line="16" pos:column="7">stale<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <operator pos:line="16" pos:column="15">*<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">phead<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="17" pos:column="7">*<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">phead<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <name><name pos:line="17" pos:column="16">stale<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">-&gt;<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="23">next<pos:position pos:line="17" pos:column="27"/></name></name></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then>
  <comment type="block" pos:line="19" pos:column="3">/* what about the rest of the elements? */</comment>
  <else pos:line="20" pos:column="3">else
    <block pos:line="21" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="22" pos:column="7">SList<pos:position pos:line="22" pos:column="12"/></name> <modifier pos:line="22" pos:column="13">*<pos:position pos:line="22" pos:column="14"/></modifier></type><name pos:line="22" pos:column="14">head<pos:position pos:line="22" pos:column="18"/></name></decl>;<pos:position pos:line="22" pos:column="19"/></decl_stmt>
      <for pos:line="23" pos:column="7">for <control pos:line="23" pos:column="11">(<init><expr><name pos:line="23" pos:column="12">head<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <operator pos:line="23" pos:column="19">*<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="20">phead<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></init> <condition><expr><name><name pos:line="23" pos:column="27">head<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">-&gt;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="33">next<pos:position pos:line="23" pos:column="37"/></name></name></expr>;<pos:position pos:line="23" pos:column="38"/></condition> <incr><expr><name pos:line="23" pos:column="39">head<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">=<pos:position pos:line="23" pos:column="45"/></operator> <name><name pos:line="23" pos:column="46">head<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">-&gt;<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="52">next<pos:position pos:line="23" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="57"/></control>
	<block pos:line="24" pos:column="9">{
	  <expr_stmt><expr><name pos:line="25" pos:column="11">result<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">=<pos:position pos:line="25" pos:column="19"/></operator> <call pos:line="25" pos:column="20">(<modifier pos:line="25" pos:column="21">*<pos:position pos:line="25" pos:column="22"/></modifier><name pos:line="25" pos:column="22">find<pos:position pos:line="25" pos:column="26"/></name>) <argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">head<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">next<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">matchdata<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
	  <if pos:line="26" pos:column="11">if <condition pos:line="26" pos:column="14">(<expr><name pos:line="26" pos:column="15">result<pos:position pos:line="26" pos:column="21"/></name></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22">
	    <block pos:line="27" pos:column="13">{
	      <expr_stmt><expr><name pos:line="28" pos:column="15">stale<pos:position pos:line="28" pos:column="20"/></name>		<operator pos:line="28" pos:column="33">=<pos:position pos:line="28" pos:column="34"/></operator> <name><name pos:line="28" pos:column="35">head<pos:position pos:line="28" pos:column="39"/></name><operator pos:line="28" pos:column="39">-&gt;<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="41">next<pos:position pos:line="28" pos:column="45"/></name></name></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
	      <expr_stmt><expr><name><name pos:line="29" pos:column="15">head<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">next<pos:position pos:line="29" pos:column="25"/></name></name>	<operator pos:line="29" pos:column="33">=<pos:position pos:line="29" pos:column="34"/></operator> <name><name pos:line="29" pos:column="35">stale<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">-&gt;<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="42">next<pos:position pos:line="29" pos:column="46"/></name></name></expr>;<pos:position pos:line="29" pos:column="47"/></expr_stmt>
	      <break pos:line="30" pos:column="15">break;<pos:position pos:line="30" pos:column="21"/></break>
	    }<pos:position pos:line="31" pos:column="14"/></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></for>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>

  <return pos:line="35" pos:column="3">return <expr><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="11">SList<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><operator pos:line="35" pos:column="18">)<pos:position pos:line="35" pos:column="19"/></operator> <name pos:line="35" pos:column="20">result<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

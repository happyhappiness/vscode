<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1355_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <comment type="block" pos:line="1" pos:column="28">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">swaptbl_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">s<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">s_paths<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">swap_num<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">avail<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gauge_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">total<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">swap_num<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <call><name pos:line="11" pos:column="14">swapctl<pos:position pos:line="11" pos:column="21"/></name><argument_list pos:line="11" pos:column="21">(<argument><expr><name pos:line="11" pos:column="22">SC_GETNSWP<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">NULL<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">swap_num<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">&lt;<pos:position pos:line="12" pos:column="20"/></operator> <literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"swap plugin: swapctl (SC_GETNSWP) failed with status %i."<pos:position pos:line="13" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="71">swap_num<pos:position pos:line="13" pos:column="79"/></name></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then> <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">(<expr><name pos:line="15" pos:column="14">swap_num<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">==<pos:position pos:line="15" pos:column="25"/></operator> <literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator></expr>;<pos:position pos:line="16" pos:column="16"/></return></block></then></if></elseif></if>

  <comment type="block" pos:line="18" pos:column="3">/* Allocate and initialize the swaptbl_t structure */</comment>
  <expr_stmt><expr><name pos:line="19" pos:column="3">s<pos:position pos:line="19" pos:column="4"/></name> <operator pos:line="19" pos:column="5">=<pos:position pos:line="19" pos:column="6"/></operator> <call><name pos:line="19" pos:column="7">malloc<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name pos:line="19" pos:column="14">swap_num<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">*<pos:position pos:line="19" pos:column="24"/></operator> <sizeof pos:line="19" pos:column="25">sizeof<argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">swapent_t<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></sizeof> <operator pos:line="19" pos:column="43">+<pos:position pos:line="19" pos:column="44"/></operator> <sizeof pos:line="19" pos:column="45">sizeof<argument_list pos:line="19" pos:column="51">(<argument><expr pos:line="19" pos:column="52">struct <name pos:line="19" pos:column="59">swaptable<pos:position pos:line="19" pos:column="68"/></name></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="71"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">s<pos:position pos:line="20" pos:column="8"/></name> <operator pos:line="20" pos:column="9">==<pos:position pos:line="20" pos:column="11"/></operator> <name pos:line="20" pos:column="12">NULL<pos:position pos:line="20" pos:column="16"/></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17"> <block pos:line="20" pos:column="18">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name><argument_list pos:line="21" pos:column="10">(<argument><expr><literal type="string" pos:line="21" pos:column="11">"swap plugin: malloc failed."<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="25" pos:column="3">/* Memory to store the path names. We only use these paths when the
   * separate option has been configured, but it's easier to just
   * allocate enough memory in any case. */</comment>
  <expr_stmt><expr><name pos:line="28" pos:column="3">s_paths<pos:position pos:line="28" pos:column="10"/></name> <operator pos:line="28" pos:column="11">=<pos:position pos:line="28" pos:column="12"/></operator> <call><name pos:line="28" pos:column="13">calloc<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">swap_num<pos:position pos:line="28" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="30">PATH_MAX<pos:position pos:line="28" pos:column="38"/></name></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">s_paths<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">NULL<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23"> <block pos:line="29" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"swap plugin: calloc failed."<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">sfree<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><name pos:line="31" pos:column="11">s<pos:position pos:line="31" pos:column="12"/></name></expr></argument>)<pos:position pos:line="31" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="14"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">-<pos:position pos:line="32" pos:column="14"/></operator><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal><operator pos:line="32" pos:column="15">)<pos:position pos:line="32" pos:column="16"/></operator></expr>;<pos:position pos:line="32" pos:column="17"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>
  <for pos:line="34" pos:column="3">for <control pos:line="34" pos:column="7">(<init><decl><type><name pos:line="34" pos:column="8">int<pos:position pos:line="34" pos:column="11"/></name></type> <name pos:line="34" pos:column="12">i<pos:position pos:line="34" pos:column="13"/></name> <init pos:line="34" pos:column="14">= <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="18"/></init> <condition><expr><name pos:line="34" pos:column="19">i<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&lt;<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="23">swap_num<pos:position pos:line="34" pos:column="31"/></name></expr>;<pos:position pos:line="34" pos:column="32"/></condition> <incr><expr><name pos:line="34" pos:column="33">i<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">++<pos:position pos:line="34" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="37"/></control>
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="5">s<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">swt_ent<pos:position pos:line="35" pos:column="15"/></name><index pos:line="35" pos:column="15">[<expr><name pos:line="35" pos:column="16">i<pos:position pos:line="35" pos:column="17"/></name></expr>]<pos:position pos:line="35" pos:column="18"/></index></name><operator pos:line="35" pos:column="18">.<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">ste_path<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <name pos:line="35" pos:column="30">s_paths<pos:position pos:line="35" pos:column="37"/></name> <operator pos:line="35" pos:column="38">+<pos:position pos:line="35" pos:column="39"/></operator> <operator pos:line="35" pos:column="40">(<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="41">i<pos:position pos:line="35" pos:column="42"/></name> <operator pos:line="35" pos:column="43">*<pos:position pos:line="35" pos:column="44"/></operator> <name pos:line="35" pos:column="45">PATH_MAX<pos:position pos:line="35" pos:column="53"/></name><operator pos:line="35" pos:column="53">)<pos:position pos:line="35" pos:column="54"/></operator></expr>;<pos:position pos:line="35" pos:column="55"/></expr_stmt></block></for>
  <expr_stmt><expr><name><name pos:line="36" pos:column="3">s<pos:position pos:line="36" pos:column="4"/></name><operator pos:line="36" pos:column="4">-&gt;<pos:position pos:line="36" pos:column="9"/></operator><name pos:line="36" pos:column="6">swt_n<pos:position pos:line="36" pos:column="11"/></name></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">swap_num<pos:position pos:line="36" pos:column="22"/></name></expr>;<pos:position pos:line="36" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><name pos:line="38" pos:column="3">status<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">swapctl<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">SC_LIST<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">s<pos:position pos:line="38" pos:column="30"/></name></expr></argument>)<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">&lt;<pos:position pos:line="39" pos:column="18"/></operator> <literal type="number" pos:line="39" pos:column="16">0<pos:position pos:line="39" pos:column="17"/></literal></expr>)<pos:position pos:line="39" pos:column="18"/></condition><then pos:line="39" pos:column="18"> <block pos:line="39" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">char<pos:position pos:line="40" pos:column="9"/></name></type> <name><name pos:line="40" pos:column="10">errbuf<pos:position pos:line="40" pos:column="16"/></name><index pos:line="40" pos:column="16">[<expr><literal type="number" pos:line="40" pos:column="17">1024<pos:position pos:line="40" pos:column="21"/></literal></expr>]<pos:position pos:line="40" pos:column="22"/></index></name></decl>;<pos:position pos:line="40" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ERROR<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><literal type="string" pos:line="41" pos:column="11">"swap plugin: swapctl (SC_LIST) failed: %s"<pos:position pos:line="41" pos:column="54"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="42" pos:column="11">sstrerror<pos:position pos:line="42" pos:column="20"/></name><argument_list pos:line="42" pos:column="20">(<argument><expr><name pos:line="42" pos:column="21">errno<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="28">errbuf<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="36">sizeof<argument_list pos:line="42" pos:column="42">(<argument><expr><name pos:line="42" pos:column="43">errbuf<pos:position pos:line="42" pos:column="49"/></name></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">sfree<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">s_paths<pos:position pos:line="43" pos:column="18"/></name></expr></argument>)<pos:position pos:line="43" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">sfree<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><name pos:line="44" pos:column="11">s<pos:position pos:line="44" pos:column="12"/></name></expr></argument>)<pos:position pos:line="44" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="14"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><operator pos:line="45" pos:column="13">-<pos:position pos:line="45" pos:column="14"/></operator><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal><operator pos:line="45" pos:column="15">)<pos:position pos:line="45" pos:column="16"/></operator></expr>;<pos:position pos:line="45" pos:column="17"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then> <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><name pos:line="46" pos:column="14">swap_num<pos:position pos:line="46" pos:column="22"/></name> <operator pos:line="46" pos:column="23">&lt;<pos:position pos:line="46" pos:column="27"/></operator> <name pos:line="46" pos:column="25">status<pos:position pos:line="46" pos:column="31"/></name></expr>)<pos:position pos:line="46" pos:column="32"/></condition><then pos:line="46" pos:column="32"> <block pos:line="46" pos:column="33">{
    <comment type="block" pos:line="47" pos:column="5">/* more elements returned than requested */</comment>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ERROR<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><literal type="string" pos:line="48" pos:column="11">"swap plugin: I allocated memory for %i structure%s, "<pos:position pos:line="48" pos:column="65"/></literal>
          <literal type="string" pos:line="49" pos:column="11">"but swapctl(2) claims to have returned %i. "<pos:position pos:line="49" pos:column="56"/></literal>
          <literal type="string" pos:line="50" pos:column="11">"I'm confused and will give up."<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>,
          <argument><expr><name pos:line="51" pos:column="11">swap_num<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="51" pos:column="21">(<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">swap_num<pos:position pos:line="51" pos:column="30"/></name> <operator pos:line="51" pos:column="31">==<pos:position pos:line="51" pos:column="33"/></operator> <literal type="number" pos:line="51" pos:column="34">1<pos:position pos:line="51" pos:column="35"/></literal><operator pos:line="51" pos:column="35">)<pos:position pos:line="51" pos:column="36"/></operator></expr> ?<pos:position pos:line="51" pos:column="38"/></condition><then pos:line="51" pos:column="38"> <expr><literal type="string" pos:line="51" pos:column="39">""<pos:position pos:line="51" pos:column="41"/></literal></expr> <pos:position pos:line="51" pos:column="42"/></then><else pos:line="51" pos:column="42">: <expr><literal type="string" pos:line="51" pos:column="44">"s"<pos:position pos:line="51" pos:column="47"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="51" pos:column="49">status<pos:position pos:line="51" pos:column="55"/></name></expr></argument>)<pos:position pos:line="51" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">sfree<pos:position pos:line="52" pos:column="10"/></name><argument_list pos:line="52" pos:column="10">(<argument><expr><name pos:line="52" pos:column="11">s_paths<pos:position pos:line="52" pos:column="18"/></name></expr></argument>)<pos:position pos:line="52" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">sfree<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><name pos:line="53" pos:column="11">s<pos:position pos:line="53" pos:column="12"/></name></expr></argument>)<pos:position pos:line="53" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="14"/></expr_stmt>
    <return pos:line="54" pos:column="5">return <expr><operator pos:line="54" pos:column="12">(<pos:position pos:line="54" pos:column="13"/></operator><operator pos:line="54" pos:column="13">-<pos:position pos:line="54" pos:column="14"/></operator><literal type="number" pos:line="54" pos:column="14">1<pos:position pos:line="54" pos:column="15"/></literal><operator pos:line="54" pos:column="15">)<pos:position pos:line="54" pos:column="16"/></operator></expr>;<pos:position pos:line="54" pos:column="17"/></return>
  }<pos:position pos:line="55" pos:column="4"/></block></then></if></elseif> <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><name pos:line="55" pos:column="14">swap_num<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">&gt;<pos:position pos:line="55" pos:column="27"/></operator> <name pos:line="55" pos:column="25">status<pos:position pos:line="55" pos:column="31"/></name></expr>)<pos:position pos:line="55" pos:column="32"/></condition><then pos:line="55" pos:column="32">
    <comment type="block" pos:line="56" pos:column="5">/* less elements returned than requested */</comment>
    <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="5">swap_num<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">=<pos:position pos:line="57" pos:column="15"/></operator> <name pos:line="57" pos:column="16">status<pos:position pos:line="57" pos:column="22"/></name></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt></block></then></if></elseif></if>

  <for pos:line="59" pos:column="3">for <control pos:line="59" pos:column="7">(<init><decl><type><name pos:line="59" pos:column="8">int<pos:position pos:line="59" pos:column="11"/></name></type> <name pos:line="59" pos:column="12">i<pos:position pos:line="59" pos:column="13"/></name> <init pos:line="59" pos:column="14">= <expr><literal type="number" pos:line="59" pos:column="16">0<pos:position pos:line="59" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="59" pos:column="18"/></init> <condition><expr><name pos:line="59" pos:column="19">i<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">&lt;<pos:position pos:line="59" pos:column="25"/></operator> <name pos:line="59" pos:column="23">swap_num<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></condition> <incr><expr><name pos:line="59" pos:column="33">i<pos:position pos:line="59" pos:column="34"/></name><operator pos:line="59" pos:column="34">++<pos:position pos:line="59" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="59" pos:column="37"/></control> <block pos:line="59" pos:column="38">{
    <decl_stmt><decl><type><name pos:line="60" pos:column="5">char<pos:position pos:line="60" pos:column="9"/></name></type> <name><name pos:line="60" pos:column="10">path<pos:position pos:line="60" pos:column="14"/></name><index pos:line="60" pos:column="14">[<expr><name pos:line="60" pos:column="15">PATH_MAX<pos:position pos:line="60" pos:column="23"/></name></expr>]<pos:position pos:line="60" pos:column="24"/></index></name></decl>;<pos:position pos:line="60" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">gauge_t<pos:position pos:line="61" pos:column="12"/></name></type> <name pos:line="61" pos:column="13">this_total<pos:position pos:line="61" pos:column="23"/></name></decl>;<pos:position pos:line="61" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">gauge_t<pos:position pos:line="62" pos:column="12"/></name></type> <name pos:line="62" pos:column="13">this_avail<pos:position pos:line="62" pos:column="23"/></name></decl>;<pos:position pos:line="62" pos:column="24"/></decl_stmt>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">(<pos:position pos:line="64" pos:column="10"/></operator><name><name pos:line="64" pos:column="10">s<pos:position pos:line="64" pos:column="11"/></name><operator pos:line="64" pos:column="11">-&gt;<pos:position pos:line="64" pos:column="16"/></operator><name pos:line="64" pos:column="13">swt_ent<pos:position pos:line="64" pos:column="20"/></name><index pos:line="64" pos:column="20">[<expr><name pos:line="64" pos:column="21">i<pos:position pos:line="64" pos:column="22"/></name></expr>]<pos:position pos:line="64" pos:column="23"/></index></name><operator pos:line="64" pos:column="23">.<pos:position pos:line="64" pos:column="24"/></operator><name pos:line="64" pos:column="24">ste_flags<pos:position pos:line="64" pos:column="33"/></name> <operator pos:line="64" pos:column="34">&amp;<pos:position pos:line="64" pos:column="39"/></operator> <name pos:line="64" pos:column="36">ST_INDEL<pos:position pos:line="64" pos:column="44"/></name><operator pos:line="64" pos:column="44">)<pos:position pos:line="64" pos:column="45"/></operator> <operator pos:line="64" pos:column="46">!=<pos:position pos:line="64" pos:column="48"/></operator> <literal type="number" pos:line="64" pos:column="49">0<pos:position pos:line="64" pos:column="50"/></literal></expr>)<pos:position pos:line="64" pos:column="51"/></condition><then pos:line="64" pos:column="51">
      <block type="pseudo"><continue pos:line="65" pos:column="7">continue;<pos:position pos:line="65" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="67" pos:column="5">this_total<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <call pos:line="67" pos:column="18">(<name pos:line="67" pos:column="19">gauge_t<pos:position pos:line="67" pos:column="26"/></name>)<argument_list pos:line="67" pos:column="27">(<argument><expr><name><name pos:line="67" pos:column="28">s<pos:position pos:line="67" pos:column="29"/></name><operator pos:line="67" pos:column="29">-&gt;<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="31">swt_ent<pos:position pos:line="67" pos:column="38"/></name><index pos:line="67" pos:column="38">[<expr><name pos:line="67" pos:column="39">i<pos:position pos:line="67" pos:column="40"/></name></expr>]<pos:position pos:line="67" pos:column="41"/></index></name><operator pos:line="67" pos:column="41">.<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="42">ste_pages<pos:position pos:line="67" pos:column="51"/></name> <operator pos:line="67" pos:column="52">*<pos:position pos:line="67" pos:column="53"/></operator> <name pos:line="67" pos:column="54">pagesize<pos:position pos:line="67" pos:column="62"/></name></expr></argument>)<pos:position pos:line="67" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name pos:line="68" pos:column="5">this_avail<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">=<pos:position pos:line="68" pos:column="17"/></operator> <call pos:line="68" pos:column="18">(<name pos:line="68" pos:column="19">gauge_t<pos:position pos:line="68" pos:column="26"/></name>)<argument_list pos:line="68" pos:column="27">(<argument><expr><name><name pos:line="68" pos:column="28">s<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">-&gt;<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="31">swt_ent<pos:position pos:line="68" pos:column="38"/></name><index pos:line="68" pos:column="38">[<expr><name pos:line="68" pos:column="39">i<pos:position pos:line="68" pos:column="40"/></name></expr>]<pos:position pos:line="68" pos:column="41"/></index></name><operator pos:line="68" pos:column="41">.<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="42">ste_free<pos:position pos:line="68" pos:column="50"/></name> <operator pos:line="68" pos:column="51">*<pos:position pos:line="68" pos:column="52"/></operator> <name pos:line="68" pos:column="53">pagesize<pos:position pos:line="68" pos:column="61"/></name></expr></argument>)<pos:position pos:line="68" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="70" pos:column="5">/* Shortcut for the "combined" setting (default) */</comment>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><operator pos:line="71" pos:column="9">!<pos:position pos:line="71" pos:column="10"/></operator><name pos:line="71" pos:column="10">report_by_device<pos:position pos:line="71" pos:column="26"/></name></expr>)<pos:position pos:line="71" pos:column="27"/></condition><then pos:line="71" pos:column="27"> <block pos:line="71" pos:column="28">{
      <expr_stmt><expr><name pos:line="72" pos:column="7">avail<pos:position pos:line="72" pos:column="12"/></name> <operator pos:line="72" pos:column="13">+=<pos:position pos:line="72" pos:column="15"/></operator> <name pos:line="72" pos:column="16">this_avail<pos:position pos:line="72" pos:column="26"/></name></expr>;<pos:position pos:line="72" pos:column="27"/></expr_stmt>
      <expr_stmt><expr><name pos:line="73" pos:column="7">total<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">+=<pos:position pos:line="73" pos:column="15"/></operator> <name pos:line="73" pos:column="16">this_total<pos:position pos:line="73" pos:column="26"/></name></expr>;<pos:position pos:line="73" pos:column="27"/></expr_stmt>
      <continue pos:line="74" pos:column="7">continue;<pos:position pos:line="74" pos:column="16"/></continue>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">sstrncpy<pos:position pos:line="77" pos:column="13"/></name><argument_list pos:line="77" pos:column="13">(<argument><expr><name pos:line="77" pos:column="14">path<pos:position pos:line="77" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="20">s<pos:position pos:line="77" pos:column="21"/></name><operator pos:line="77" pos:column="21">-&gt;<pos:position pos:line="77" pos:column="26"/></operator><name pos:line="77" pos:column="23">swt_ent<pos:position pos:line="77" pos:column="30"/></name><index pos:line="77" pos:column="30">[<expr><name pos:line="77" pos:column="31">i<pos:position pos:line="77" pos:column="32"/></name></expr>]<pos:position pos:line="77" pos:column="33"/></index></name><operator pos:line="77" pos:column="33">.<pos:position pos:line="77" pos:column="34"/></operator><name pos:line="77" pos:column="34">ste_path<pos:position pos:line="77" pos:column="42"/></name></expr></argument>, <argument><expr><sizeof pos:line="77" pos:column="44">sizeof<argument_list pos:line="77" pos:column="50">(<argument><expr><name pos:line="77" pos:column="51">path<pos:position pos:line="77" pos:column="55"/></name></expr></argument>)<pos:position pos:line="77" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="77" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">escape_slashes<pos:position pos:line="78" pos:column="19"/></name><argument_list pos:line="78" pos:column="19">(<argument><expr><name pos:line="78" pos:column="20">path<pos:position pos:line="78" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="78" pos:column="26">sizeof<argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">path<pos:position pos:line="78" pos:column="37"/></name></expr></argument>)<pos:position pos:line="78" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="80" pos:column="5">swap_submit_usage<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">(<argument><expr><name pos:line="80" pos:column="23">path<pos:position pos:line="80" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="29">this_total<pos:position pos:line="80" pos:column="39"/></name> <operator pos:line="80" pos:column="40">-<pos:position pos:line="80" pos:column="41"/></operator> <name pos:line="80" pos:column="42">this_avail<pos:position pos:line="80" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="54">this_avail<pos:position pos:line="80" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="66">NULL<pos:position pos:line="80" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="72">NAN<pos:position pos:line="80" pos:column="75"/></name></expr></argument>)<pos:position pos:line="80" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="81" pos:column="4"/></block></for> <comment type="block" pos:line="81" pos:column="5">/* for (swap_num) */</comment>

  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><name pos:line="83" pos:column="7">total<pos:position pos:line="83" pos:column="12"/></name> <operator pos:line="83" pos:column="13">&lt;<pos:position pos:line="83" pos:column="17"/></operator> <name pos:line="83" pos:column="15">avail<pos:position pos:line="83" pos:column="20"/></name></expr>)<pos:position pos:line="83" pos:column="21"/></condition><then pos:line="83" pos:column="21"> <block pos:line="83" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">ERROR<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(
        <argument><expr><literal type="string" pos:line="85" pos:column="9">"swap plugin: Total swap space (%g) is less than free swap space (%g)."<pos:position pos:line="85" pos:column="80"/></literal></expr></argument>,
        <argument><expr><name pos:line="86" pos:column="9">total<pos:position pos:line="86" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="16">avail<pos:position pos:line="86" pos:column="21"/></name></expr></argument>)<pos:position pos:line="86" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">sfree<pos:position pos:line="87" pos:column="10"/></name><argument_list pos:line="87" pos:column="10">(<argument><expr><name pos:line="87" pos:column="11">s_paths<pos:position pos:line="87" pos:column="18"/></name></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="88" pos:column="5">sfree<pos:position pos:line="88" pos:column="10"/></name><argument_list pos:line="88" pos:column="10">(<argument><expr><name pos:line="88" pos:column="11">s<pos:position pos:line="88" pos:column="12"/></name></expr></argument>)<pos:position pos:line="88" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="14"/></expr_stmt>
    <return pos:line="89" pos:column="5">return <expr><operator pos:line="89" pos:column="12">(<pos:position pos:line="89" pos:column="13"/></operator><operator pos:line="89" pos:column="13">-<pos:position pos:line="89" pos:column="14"/></operator><literal type="number" pos:line="89" pos:column="14">1<pos:position pos:line="89" pos:column="15"/></literal><operator pos:line="89" pos:column="15">)<pos:position pos:line="89" pos:column="16"/></operator></expr>;<pos:position pos:line="89" pos:column="17"/></return>
  }<pos:position pos:line="90" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="92" pos:column="3">/* If the "separate" option was specified (report_by_device == 1), all
   * values have already been dispatched from within the loop. */</comment>
  <if pos:line="94" pos:column="3">if <condition pos:line="94" pos:column="6">(<expr><operator pos:line="94" pos:column="7">!<pos:position pos:line="94" pos:column="8"/></operator><name pos:line="94" pos:column="8">report_by_device<pos:position pos:line="94" pos:column="24"/></name></expr>)<pos:position pos:line="94" pos:column="25"/></condition><then pos:line="94" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="5">swap_submit_usage<pos:position pos:line="95" pos:column="22"/></name><argument_list pos:line="95" pos:column="22">(<argument><expr><name pos:line="95" pos:column="23">NULL<pos:position pos:line="95" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="29">total<pos:position pos:line="95" pos:column="34"/></name> <operator pos:line="95" pos:column="35">-<pos:position pos:line="95" pos:column="36"/></operator> <name pos:line="95" pos:column="37">avail<pos:position pos:line="95" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="44">avail<pos:position pos:line="95" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="51">NULL<pos:position pos:line="95" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="57">NAN<pos:position pos:line="95" pos:column="60"/></name></expr></argument>)<pos:position pos:line="95" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="62"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="97" pos:column="3">sfree<pos:position pos:line="97" pos:column="8"/></name><argument_list pos:line="97" pos:column="8">(<argument><expr><name pos:line="97" pos:column="9">s_paths<pos:position pos:line="97" pos:column="16"/></name></expr></argument>)<pos:position pos:line="97" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">sfree<pos:position pos:line="98" pos:column="8"/></name><argument_list pos:line="98" pos:column="8">(<argument><expr><name pos:line="98" pos:column="9">s<pos:position pos:line="98" pos:column="10"/></name></expr></argument>)<pos:position pos:line="98" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="12"/></expr_stmt>
  <return pos:line="99" pos:column="3">return <expr><operator pos:line="99" pos:column="10">(<pos:position pos:line="99" pos:column="11"/></operator><literal type="number" pos:line="99" pos:column="11">0<pos:position pos:line="99" pos:column="12"/></literal><operator pos:line="99" pos:column="12">)<pos:position pos:line="99" pos:column="13"/></operator></expr>;<pos:position pos:line="99" pos:column="14"/></return>
}<pos:position pos:line="100" pos:column="2"/></block></function></unit>

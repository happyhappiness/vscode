<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1870_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mb_config_add_slave<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">mb_host_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">host<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">oconfig_item_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">ci<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <comment type="block" pos:line="1" pos:column="69">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">mb_slave_t<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">slave<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">host<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">)<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">||<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">ci<pos:position pos:line="6" pos:column="28"/></name> <operator pos:line="6" pos:column="29">==<pos:position pos:line="6" pos:column="31"/></operator> <name pos:line="6" pos:column="32">NULL<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">)<pos:position pos:line="6" pos:column="37"/></operator></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">EINVAL<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">)<pos:position pos:line="7" pos:column="20"/></operator></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="9" pos:column="3">slave<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <call><name pos:line="9" pos:column="11">realloc<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name><name pos:line="9" pos:column="19">host<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">slaves<pos:position pos:line="9" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="33">sizeof<argument_list pos:line="9" pos:column="39">(<argument><expr><operator pos:line="9" pos:column="40">*<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">slave<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></sizeof> <operator pos:line="9" pos:column="48">*<pos:position pos:line="9" pos:column="49"/></operator> <operator pos:line="9" pos:column="50">(<pos:position pos:line="9" pos:column="51"/></operator><name><name pos:line="9" pos:column="51">host<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">slaves_num<pos:position pos:line="9" pos:column="67"/></name></name> <operator pos:line="9" pos:column="68">+<pos:position pos:line="9" pos:column="69"/></operator> <literal type="number" pos:line="9" pos:column="70">1<pos:position pos:line="9" pos:column="71"/></literal><operator pos:line="9" pos:column="71">)<pos:position pos:line="9" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">slave<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">==<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">ENOMEM<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">host<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">slaves<pos:position pos:line="12" pos:column="15"/></name></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">slave<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">slave<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator> <name><name pos:line="13" pos:column="11">host<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">slaves<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">+<pos:position pos:line="13" pos:column="25"/></operator> <name><name pos:line="13" pos:column="26">host<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="32">slaves_num<pos:position pos:line="13" pos:column="42"/></name></name></expr>;<pos:position pos:line="13" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">memset<pos:position pos:line="14" pos:column="9"/></name><argument_list pos:line="14" pos:column="9">(<argument><expr><name pos:line="14" pos:column="10">slave<pos:position pos:line="14" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="17">0<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="20">sizeof<argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">*<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="28">slave<pos:position pos:line="14" pos:column="33"/></name></expr></argument>)<pos:position pos:line="14" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">slave<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">collect<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="17" pos:column="3">status<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">cf_util_get_int<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><name pos:line="17" pos:column="28">ci<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="32">&amp;<pos:position pos:line="17" pos:column="37"/></operator><name><name pos:line="17" pos:column="33">slave<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">id<pos:position pos:line="17" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">status<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">)<pos:position pos:line="19" pos:column="20"/></operator></expr>;<pos:position pos:line="19" pos:column="21"/></return></block></then></if>

  <for pos:line="21" pos:column="3">for <control pos:line="21" pos:column="7">(<init><decl><type><name pos:line="21" pos:column="8">int<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></init> <condition><expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <name><name pos:line="21" pos:column="23">ci<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">children_num<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></condition> <incr><expr><name pos:line="21" pos:column="41">i<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">oconfig_item_t<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">child<pos:position pos:line="22" pos:column="26"/></name> <init pos:line="22" pos:column="27">= <expr><name><name pos:line="22" pos:column="29">ci<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">children<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">+<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">i<pos:position pos:line="22" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="46"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">strcasecmp<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"Instance"<pos:position pos:line="24" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="32">child<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">-&gt;<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="39">key<pos:position pos:line="24" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call> <operator pos:line="24" pos:column="44">==<pos:position pos:line="24" pos:column="46"/></operator> <literal type="number" pos:line="24" pos:column="47">0<pos:position pos:line="24" pos:column="48"/></literal></expr>)<pos:position pos:line="24" pos:column="49"/></condition><then pos:line="24" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="25" pos:column="41"/></name><argument_list pos:line="25" pos:column="41">(<argument><expr><name pos:line="25" pos:column="42">child<pos:position pos:line="25" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="49">slave<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">instance<pos:position pos:line="25" pos:column="64"/></name></name></expr></argument>,
                                         <argument><expr><sizeof pos:line="26" pos:column="42">sizeof<argument_list pos:line="26" pos:column="48">(<argument><expr><name><name pos:line="26" pos:column="49">slave<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">-&gt;<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="56">instance<pos:position pos:line="26" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt></block></then>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><literal type="string" pos:line="27" pos:column="25">"Collect"<pos:position pos:line="27" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="36">child<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">key<pos:position pos:line="27" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call> <operator pos:line="27" pos:column="48">==<pos:position pos:line="27" pos:column="50"/></operator> <literal type="number" pos:line="27" pos:column="51">0<pos:position pos:line="27" pos:column="52"/></literal></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53"> <block pos:line="27" pos:column="54">{
      <decl_stmt><decl><type><name pos:line="28" pos:column="7">char<pos:position pos:line="28" pos:column="11"/></name></type> <name><name pos:line="28" pos:column="12">buffer<pos:position pos:line="28" pos:column="18"/></name><index pos:line="28" pos:column="18">[<expr><literal type="number" pos:line="28" pos:column="19">1024<pos:position pos:line="28" pos:column="23"/></literal></expr>]<pos:position pos:line="28" pos:column="24"/></index></name></decl>;<pos:position pos:line="28" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">child<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">buffer<pos:position pos:line="29" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="29" pos:column="57">sizeof<argument_list pos:line="29" pos:column="63">(<argument><expr><name pos:line="29" pos:column="64">buffer<pos:position pos:line="29" pos:column="70"/></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
      <if pos:line="30" pos:column="7">if <condition pos:line="30" pos:column="10">(<expr><name pos:line="30" pos:column="11">status<pos:position pos:line="30" pos:column="17"/></name> <operator pos:line="30" pos:column="18">==<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="9">data_copy_by_name<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><operator pos:line="31" pos:column="27">&amp;<pos:position pos:line="31" pos:column="32"/></operator><name><name pos:line="31" pos:column="28">slave<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">collect<pos:position pos:line="31" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">data_definitions<pos:position pos:line="31" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="62">buffer<pos:position pos:line="31" pos:column="68"/></name></expr></argument>)<pos:position pos:line="31" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="70"/></expr_stmt></block></then></if>
      <expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt> <comment type="block" pos:line="32" pos:column="19">/* continue after failure. */</comment>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">ERROR<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"Modbus plugin: Unknown configuration option: %s"<pos:position pos:line="34" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="64">child<pos:position pos:line="34" pos:column="69"/></name><operator pos:line="34" pos:column="69">-&gt;<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="71">key<pos:position pos:line="34" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <operator pos:line="35" pos:column="16">-<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">1<pos:position pos:line="35" pos:column="18"/></literal></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">status<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">!=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">0<pos:position pos:line="38" pos:column="20"/></literal></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21">
      <block type="pseudo"><break pos:line="39" pos:column="7">break;<pos:position pos:line="39" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="40" pos:column="4"/></block></for>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><operator pos:line="42" pos:column="7">(<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">status<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">==<pos:position pos:line="42" pos:column="17"/></operator> <literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator> <operator pos:line="42" pos:column="21">&amp;&amp;<pos:position pos:line="42" pos:column="31"/></operator> <operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><name><name pos:line="42" pos:column="25">slave<pos:position pos:line="42" pos:column="30"/></name><operator pos:line="42" pos:column="30">-&gt;<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="32">collect<pos:position pos:line="42" pos:column="39"/></name></name> <operator pos:line="42" pos:column="40">==<pos:position pos:line="42" pos:column="42"/></operator> <name pos:line="42" pos:column="43">NULL<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">)<pos:position pos:line="42" pos:column="48"/></operator></expr>)<pos:position pos:line="42" pos:column="49"/></condition><then pos:line="42" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="5">status<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name pos:line="43" pos:column="14">EINVAL<pos:position pos:line="43" pos:column="20"/></name></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt></block></then></if>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name><name pos:line="45" pos:column="7">slave<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">id<pos:position pos:line="45" pos:column="16"/></name></name> <operator pos:line="45" pos:column="17">&lt;<pos:position pos:line="45" pos:column="21"/></operator> <literal type="number" pos:line="45" pos:column="19">0<pos:position pos:line="45" pos:column="20"/></literal></expr>)<pos:position pos:line="45" pos:column="21"/></condition><then pos:line="45" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">EINVAL<pos:position pos:line="46" pos:column="20"/></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt></block></then></if>

  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">==<pos:position pos:line="48" pos:column="16"/></operator> <literal type="number" pos:line="48" pos:column="17">0<pos:position pos:line="48" pos:column="18"/></literal></expr>)<pos:position pos:line="48" pos:column="19"/></condition><then pos:line="48" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="5">host<pos:position pos:line="49" pos:column="9"/></name><operator pos:line="49" pos:column="9">-&gt;<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="11">slaves_num<pos:position pos:line="49" pos:column="21"/></name></name><operator pos:line="49" pos:column="21">++<pos:position pos:line="49" pos:column="23"/></operator></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt></block></then>
  <else pos:line="50" pos:column="3">else <comment type="block" pos:line="50" pos:column="8">/* if (status != 0) */</comment>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="5">data_free_all<pos:position pos:line="51" pos:column="18"/></name><argument_list pos:line="51" pos:column="18">(<argument><expr><name><name pos:line="51" pos:column="19">slave<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">collect<pos:position pos:line="51" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="35"/></expr_stmt></block></else></if>

  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><name pos:line="53" pos:column="11">status<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">)<pos:position pos:line="53" pos:column="18"/></operator></expr>;<pos:position pos:line="53" pos:column="19"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

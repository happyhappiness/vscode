<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_224_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">irq_read<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:undef pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">undef<pos:position pos:line="3" pos:column="7"/></cpp:directive> <name pos:line="3" pos:column="8">BUFSIZE<pos:position pos:line="3" pos:column="15"/></name></cpp:undef>
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">BUFSIZE<pos:position pos:line="4" pos:column="16"/></name></cpp:macro> <cpp:value pos:line="4" pos:column="17">256<pos:position pos:line="4" pos:column="20"/></cpp:value></cpp:define>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">FILE<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">fh<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type> <name><name pos:line="7" pos:column="14">buffer<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><name pos:line="7" pos:column="21">BUFSIZE<pos:position pos:line="7" pos:column="28"/></name></expr>]<pos:position pos:line="7" pos:column="29"/></index></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">unsigned<pos:position pos:line="8" pos:column="17"/></name> <name pos:line="8" pos:column="18">int<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">irq<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">unsigned<pos:position pos:line="9" pos:column="17"/></name> <name pos:line="9" pos:column="18">long<pos:position pos:line="9" pos:column="22"/></name> <name pos:line="9" pos:column="23">long<pos:position pos:line="9" pos:column="27"/></name></type> <name pos:line="9" pos:column="28">irq_value<pos:position pos:line="9" pos:column="37"/></name></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">unsigned<pos:position pos:line="10" pos:column="17"/></name> <name pos:line="10" pos:column="18">long<pos:position pos:line="10" pos:column="22"/></name> <name pos:line="10" pos:column="23">long<pos:position pos:line="10" pos:column="27"/></name></type> <name pos:line="10" pos:column="28">value<pos:position pos:line="10" pos:column="33"/></name></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">endptr<pos:position pos:line="11" pos:column="21"/></name></decl>;<pos:position pos:line="11" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">i<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name><name pos:line="14" pos:column="15">fields<pos:position pos:line="14" pos:column="21"/></name><index pos:line="14" pos:column="21">[<expr><literal type="number" pos:line="14" pos:column="22">64<pos:position pos:line="14" pos:column="24"/></literal></expr>]<pos:position pos:line="14" pos:column="25"/></index></name></decl>;<pos:position pos:line="14" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">fields_num<pos:position pos:line="15" pos:column="23"/></name></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">(<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">fh<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">fopen<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><literal type="string" pos:line="17" pos:column="26">"/proc/interrupts"<pos:position pos:line="17" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="46">"r"<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="50"/></argument_list></call><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator> <operator pos:line="17" pos:column="52">==<pos:position pos:line="17" pos:column="54"/></operator> <name pos:line="17" pos:column="55">NULL<pos:position pos:line="17" pos:column="59"/></name></expr>)<pos:position pos:line="17" pos:column="60"/></condition><then pos:line="17" pos:column="60">
	<block pos:line="18" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name></type> <name><name pos:line="19" pos:column="22">errbuf<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><literal type="number" pos:line="19" pos:column="29">1024<pos:position pos:line="19" pos:column="33"/></literal></expr>]<pos:position pos:line="19" pos:column="34"/></index></name></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">WARNING<pos:position pos:line="20" pos:column="24"/></name> <argument_list pos:line="20" pos:column="25">(<argument><expr><literal type="string" pos:line="20" pos:column="26">"irq plugin: fopen (/proc/interrupts): %s"<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="21" pos:column="33">sstrerror<pos:position pos:line="21" pos:column="42"/></name> <argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">errno<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">errbuf<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="59">sizeof <argument_list pos:line="21" pos:column="66">(<argument><expr><name pos:line="21" pos:column="67">errbuf<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>
	<while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><call><name pos:line="24" pos:column="16">fgets<pos:position pos:line="24" pos:column="21"/></name> <argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">buffer<pos:position pos:line="24" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="31">BUFSIZE<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">fh<pos:position pos:line="24" pos:column="42"/></name></expr></argument>)<pos:position pos:line="24" pos:column="43"/></argument_list></call> <operator pos:line="24" pos:column="44">!=<pos:position pos:line="24" pos:column="46"/></operator> <name pos:line="24" pos:column="47">NULL<pos:position pos:line="24" pos:column="51"/></name></expr>)<pos:position pos:line="24" pos:column="52"/></condition>
	<block pos:line="25" pos:column="9">{
		<expr_stmt><expr><name pos:line="26" pos:column="17">fields_num<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <call><name pos:line="26" pos:column="30">strsplit<pos:position pos:line="26" pos:column="38"/></name> <argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">buffer<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">fields<pos:position pos:line="26" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="56">64<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
		<if pos:line="27" pos:column="17">if <condition pos:line="27" pos:column="20">(<expr><name pos:line="27" pos:column="21">fields_num<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">&lt;<pos:position pos:line="27" pos:column="36"/></operator> <literal type="number" pos:line="27" pos:column="34">2<pos:position pos:line="27" pos:column="35"/></literal></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="30" pos:column="17">errno<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">=<pos:position pos:line="30" pos:column="24"/></operator> <literal type="number" pos:line="30" pos:column="25">0<pos:position pos:line="30" pos:column="26"/></literal></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>    <comment type="block" pos:line="30" pos:column="31">/* To distinguish success/failure after call */</comment>
		<expr_stmt><expr><name pos:line="31" pos:column="17">irq<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <call><name pos:line="31" pos:column="23">strtol<pos:position pos:line="31" pos:column="29"/></name> <argument_list pos:line="31" pos:column="30">(<argument><expr><name><name pos:line="31" pos:column="31">fields<pos:position pos:line="31" pos:column="37"/></name><index pos:line="31" pos:column="37">[<expr><literal type="number" pos:line="31" pos:column="38">0<pos:position pos:line="31" pos:column="39"/></literal></expr>]<pos:position pos:line="31" pos:column="40"/></index></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="42">&amp;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="43">endptr<pos:position pos:line="31" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="51">10<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>

		<if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">(<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">endptr<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">==<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">fields<pos:position pos:line="33" pos:column="38"/></name><index pos:line="33" pos:column="38">[<expr><literal type="number" pos:line="33" pos:column="39">0<pos:position pos:line="33" pos:column="40"/></literal></expr>]<pos:position pos:line="33" pos:column="41"/></index></name><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator> <operator pos:line="33" pos:column="43">||<pos:position pos:line="33" pos:column="45"/></operator> <operator pos:line="33" pos:column="46">(<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="47">errno<pos:position pos:line="33" pos:column="52"/></name> <operator pos:line="33" pos:column="53">!=<pos:position pos:line="33" pos:column="55"/></operator> <literal type="number" pos:line="33" pos:column="56">0<pos:position pos:line="33" pos:column="57"/></literal><operator pos:line="33" pos:column="57">)<pos:position pos:line="33" pos:column="58"/></operator> <operator pos:line="33" pos:column="59">||<pos:position pos:line="33" pos:column="61"/></operator> <operator pos:line="33" pos:column="62">(<pos:position pos:line="33" pos:column="63"/></operator><operator pos:line="33" pos:column="63">*<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="64">endptr<pos:position pos:line="33" pos:column="70"/></name> <operator pos:line="33" pos:column="71">!=<pos:position pos:line="33" pos:column="73"/></operator> <literal type="char" pos:line="33" pos:column="74">':'<pos:position pos:line="33" pos:column="77"/></literal><operator pos:line="33" pos:column="77">)<pos:position pos:line="33" pos:column="78"/></operator></expr>)<pos:position pos:line="33" pos:column="79"/></condition><then pos:line="33" pos:column="79">
			<block type="pseudo"><continue pos:line="34" pos:column="25">continue;<pos:position pos:line="34" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="36" pos:column="17">irq_value<pos:position pos:line="36" pos:column="26"/></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
		<for pos:line="37" pos:column="17">for <control pos:line="37" pos:column="21">(<init><expr><name pos:line="37" pos:column="22">i<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">1<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></init> <condition><expr><name pos:line="37" pos:column="29">i<pos:position pos:line="37" pos:column="30"/></name> <operator pos:line="37" pos:column="31">&lt;<pos:position pos:line="37" pos:column="35"/></operator> <name pos:line="37" pos:column="33">fields_num<pos:position pos:line="37" pos:column="43"/></name></expr>;<pos:position pos:line="37" pos:column="44"/></condition> <incr><expr><name pos:line="37" pos:column="45">i<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">++<pos:position pos:line="37" pos:column="48"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="49"/></control>
		<block pos:line="38" pos:column="17">{
			<expr_stmt><expr><name pos:line="39" pos:column="25">errno<pos:position pos:line="39" pos:column="30"/></name> <operator pos:line="39" pos:column="31">=<pos:position pos:line="39" pos:column="32"/></operator> <literal type="number" pos:line="39" pos:column="33">0<pos:position pos:line="39" pos:column="34"/></literal></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
			<expr_stmt><expr><name pos:line="40" pos:column="25">value<pos:position pos:line="40" pos:column="30"/></name> <operator pos:line="40" pos:column="31">=<pos:position pos:line="40" pos:column="32"/></operator> <call><name pos:line="40" pos:column="33">strtoull<pos:position pos:line="40" pos:column="41"/></name> <argument_list pos:line="40" pos:column="42">(<argument><expr><name><name pos:line="40" pos:column="43">fields<pos:position pos:line="40" pos:column="49"/></name><index pos:line="40" pos:column="49">[<expr><name pos:line="40" pos:column="50">i<pos:position pos:line="40" pos:column="51"/></name></expr>]<pos:position pos:line="40" pos:column="52"/></index></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="54">&amp;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="55">endptr<pos:position pos:line="40" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="63">10<pos:position pos:line="40" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="67"/></expr_stmt>

			<if pos:line="42" pos:column="25">if <condition pos:line="42" pos:column="28">(<expr><operator pos:line="42" pos:column="29">(<pos:position pos:line="42" pos:column="30"/></operator><operator pos:line="42" pos:column="30">*<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="31">endptr<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">!=<pos:position pos:line="42" pos:column="40"/></operator> <literal type="char" pos:line="42" pos:column="41">'\0'<pos:position pos:line="42" pos:column="45"/></literal><operator pos:line="42" pos:column="45">)<pos:position pos:line="42" pos:column="46"/></operator> <operator pos:line="42" pos:column="47">||<pos:position pos:line="42" pos:column="49"/></operator> <operator pos:line="42" pos:column="50">(<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="51">errno<pos:position pos:line="42" pos:column="56"/></name> <operator pos:line="42" pos:column="57">!=<pos:position pos:line="42" pos:column="59"/></operator> <literal type="number" pos:line="42" pos:column="60">0<pos:position pos:line="42" pos:column="61"/></literal><operator pos:line="42" pos:column="61">)<pos:position pos:line="42" pos:column="62"/></operator></expr>)<pos:position pos:line="42" pos:column="63"/></condition><then pos:line="42" pos:column="63">
				<block type="pseudo"><break pos:line="43" pos:column="33">break;<pos:position pos:line="43" pos:column="39"/></break></block></then></if>

			<expr_stmt><expr><name pos:line="45" pos:column="25">irq_value<pos:position pos:line="45" pos:column="34"/></name> <operator pos:line="45" pos:column="35">+=<pos:position pos:line="45" pos:column="37"/></operator> <name pos:line="45" pos:column="38">value<pos:position pos:line="45" pos:column="43"/></name></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
		}<pos:position pos:line="46" pos:column="18"/></block></for> <comment type="block" pos:line="46" pos:column="19">/* for (i) */</comment>

		<comment type="block" pos:line="48" pos:column="17">/* Force 32bit wrap-around */</comment>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">irq_submit<pos:position pos:line="49" pos:column="27"/></name> <argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">irq<pos:position pos:line="49" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="34">irq_value<pos:position pos:line="49" pos:column="43"/></name> <operator pos:line="49" pos:column="44">%<pos:position pos:line="49" pos:column="45"/></operator> <literal type="number" pos:line="49" pos:column="46">4294967296ULL<pos:position pos:line="49" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">fclose<pos:position pos:line="52" pos:column="15"/></name> <argument_list pos:line="52" pos:column="16">(<argument><expr><name pos:line="52" pos:column="17">fh<pos:position pos:line="52" pos:column="19"/></name></expr></argument>)<pos:position pos:line="52" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="21"/></expr_stmt>

	<return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">0<pos:position pos:line="54" pos:column="18"/></literal><operator pos:line="54" pos:column="18">)<pos:position pos:line="54" pos:column="19"/></operator></expr>;<pos:position pos:line="54" pos:column="20"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_674_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_match_target_invoke<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">data_set_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ds<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
                                    <parameter><decl><type><name pos:line="2" pos:column="37">value_list_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">vl<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="3" pos:column="37">notification_meta_t<pos:position pos:line="3" pos:column="56"/></name> <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier><modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">meta<pos:position pos:line="3" pos:column="63"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="4" pos:column="37">void<pos:position pos:line="4" pos:column="41"/></name> <modifier pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></modifier><modifier pos:line="4" pos:column="43">*<pos:position pos:line="4" pos:column="44"/></modifier></type><name pos:line="4" pos:column="44">user_data<pos:position pos:line="4" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="54"/></parameter_list> <block pos:line="4" pos:column="55">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">JNIEnv<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">jvm_env<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">cjni_callback_info_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">cbi<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">jobject<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">o_vl<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">jobject<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">o_ds<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">ret_status<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">jvm<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">==<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">NULL<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19"> <block pos:line="12" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"java plugin: cjni_match_target_invoke: jvm == NULL"<pos:position pos:line="13" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">jvm_env<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">cjni_thread_attach<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">()<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">jvm_env<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><operator pos:line="19" pos:column="13">-<pos:position pos:line="19" pos:column="14"/></operator><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal><operator pos:line="19" pos:column="15">)<pos:position pos:line="19" pos:column="16"/></operator></expr>;<pos:position pos:line="19" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">cbi<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">cjni_callback_info_t<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">*<pos:position pos:line="21" pos:column="32"/></operator><operator pos:line="21" pos:column="32">)<pos:position pos:line="21" pos:column="33"/></operator><operator pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">user_data<pos:position pos:line="21" pos:column="43"/></name></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">o_vl<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">ctoj_value_list<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">jvm_env<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="35">ds<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="39">vl<pos:position pos:line="23" pos:column="41"/></name></expr></argument>)<pos:position pos:line="23" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="43"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">o_vl<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">==<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NULL<pos:position pos:line="24" pos:column="19"/></name></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20"> <block pos:line="24" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">ERROR<pos:position pos:line="25" pos:column="10"/></name><argument_list pos:line="25" pos:column="10">(<argument><expr><literal type="string" pos:line="25" pos:column="11">"java plugin: cjni_match_target_invoke: ctoj_value_list failed."<pos:position pos:line="25" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">cjni_thread_detach<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><operator pos:line="27" pos:column="13">-<pos:position pos:line="27" pos:column="14"/></operator><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal><operator pos:line="27" pos:column="15">)<pos:position pos:line="27" pos:column="16"/></operator></expr>;<pos:position pos:line="27" pos:column="17"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">o_ds<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator> <call><name pos:line="30" pos:column="10">ctoj_data_set<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">jvm_env<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="33">ds<pos:position pos:line="30" pos:column="35"/></name></expr></argument>)<pos:position pos:line="30" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="37"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">o_ds<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">==<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">NULL<pos:position pos:line="31" pos:column="19"/></name></expr>)<pos:position pos:line="31" pos:column="20"/></condition><then pos:line="31" pos:column="20"> <block pos:line="31" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"java plugin: cjni_match_target_invoke: ctoj_value_list failed."<pos:position pos:line="32" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">cjni_thread_detach<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">()<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">(<pos:position pos:line="34" pos:column="13"/></operator><operator pos:line="34" pos:column="13">-<pos:position pos:line="34" pos:column="14"/></operator><literal type="number" pos:line="34" pos:column="14">1<pos:position pos:line="34" pos:column="15"/></literal><operator pos:line="34" pos:column="15">)<pos:position pos:line="34" pos:column="16"/></operator></expr>;<pos:position pos:line="34" pos:column="17"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="37" pos:column="3">ret_status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator>
      <call><name><operator pos:line="38" pos:column="7">(<pos:position pos:line="38" pos:column="8"/></operator><operator pos:line="38" pos:column="8">*<pos:position pos:line="38" pos:column="9"/></operator><name pos:line="38" pos:column="9">jvm_env<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">)<pos:position pos:line="38" pos:column="17"/></operator><operator pos:line="38" pos:column="17">-&gt;<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="19">CallIntMethod<pos:position pos:line="38" pos:column="32"/></name></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">jvm_env<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="42">cbi<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">object<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="55">cbi<pos:position pos:line="38" pos:column="58"/></name><operator pos:line="38" pos:column="58">-&gt;<pos:position pos:line="38" pos:column="63"/></operator><name pos:line="38" pos:column="60">method<pos:position pos:line="38" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="68">o_ds<pos:position pos:line="38" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="74">o_vl<pos:position pos:line="38" pos:column="78"/></name></expr></argument>)<pos:position pos:line="38" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="80"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">DEBUG<pos:position pos:line="40" pos:column="8"/></name><argument_list pos:line="40" pos:column="8">(<argument><expr><literal type="string" pos:line="40" pos:column="9">"java plugin: cjni_match_target_invoke: Method returned %i."<pos:position pos:line="40" pos:column="69"/></literal></expr></argument>,
        <argument><expr><name pos:line="41" pos:column="9">ret_status<pos:position pos:line="41" pos:column="19"/></name></expr></argument>)<pos:position pos:line="41" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>

  <comment type="block" pos:line="43" pos:column="3">/* If we're executing a target, copy the `ValueList' back to our
   * `value_list_t'. */</comment>
  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name><name pos:line="45" pos:column="7">cbi<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">type<pos:position pos:line="45" pos:column="16"/></name></name> <operator pos:line="45" pos:column="17">==<pos:position pos:line="45" pos:column="19"/></operator> <name pos:line="45" pos:column="20">CB_TYPE_TARGET<pos:position pos:line="45" pos:column="34"/></name></expr>)<pos:position pos:line="45" pos:column="35"/></condition><then pos:line="45" pos:column="35"> <block pos:line="45" pos:column="36">{
    <decl_stmt><decl><type><name pos:line="46" pos:column="5">value_list_t<pos:position pos:line="46" pos:column="17"/></name></type> <name pos:line="46" pos:column="18">new_vl<pos:position pos:line="46" pos:column="24"/></name> <init pos:line="46" pos:column="25">= <expr><block pos:line="46" pos:column="27">{<expr><literal type="number" pos:line="46" pos:column="28">0<pos:position pos:line="46" pos:column="29"/></literal></expr>}<pos:position pos:line="46" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="46" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><name pos:line="48" pos:column="5">status<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <call><name pos:line="48" pos:column="14">jtoc_value_list<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">jvm_env<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="39">&amp;<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="40">new_vl<pos:position pos:line="48" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="48">o_vl<pos:position pos:line="48" pos:column="52"/></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">status<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">!=<pos:position pos:line="49" pos:column="18"/></operator> <literal type="number" pos:line="49" pos:column="19">0<pos:position pos:line="49" pos:column="20"/></literal></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21"> <block pos:line="49" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">ERROR<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><literal type="string" pos:line="50" pos:column="13">"java plugin: cjni_match_target_invoke: "<pos:position pos:line="50" pos:column="54"/></literal>
            <literal type="string" pos:line="51" pos:column="13">"jtoc_value_list failed."<pos:position pos:line="51" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then> <else pos:line="52" pos:column="7">else <comment type="block" pos:line="52" pos:column="12">/* if (status == 0) */</comment>
    <block pos:line="53" pos:column="5">{
      <comment type="block" pos:line="54" pos:column="7">/* plugin_dispatch_values assures that this is dynamically allocated
       * memory. */</comment>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">sfree<pos:position pos:line="56" pos:column="12"/></name><argument_list pos:line="56" pos:column="12">(<argument><expr><name><name pos:line="56" pos:column="13">vl<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">values<pos:position pos:line="56" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="25"/></expr_stmt>

      <comment type="block" pos:line="58" pos:column="7">/* This will replace the vl-&gt;values pointer to a new, dynamically
       * allocated piece of memory. */</comment>
      <expr_stmt><expr><call><name pos:line="60" pos:column="7">memcpy<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name pos:line="60" pos:column="14">vl<pos:position pos:line="60" pos:column="16"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="18">&amp;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="19">new_vl<pos:position pos:line="60" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="27">sizeof<argument_list pos:line="60" pos:column="33">(<argument><expr><operator pos:line="60" pos:column="34">*<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="35">vl<pos:position pos:line="60" pos:column="37"/></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if> <comment type="block" pos:line="62" pos:column="5">/* if (cbi-&gt;type == CB_TYPE_TARGET) */</comment>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">cjni_thread_detach<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">()<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>
  <return pos:line="65" pos:column="3">return <expr><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="11">ret_status<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">)<pos:position pos:line="65" pos:column="22"/></operator></expr>;<pos:position pos:line="65" pos:column="23"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

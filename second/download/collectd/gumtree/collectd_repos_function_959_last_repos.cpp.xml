<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_959_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">read_cpuacct_procs<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><specifier pos:line="1" pos:column="31">const<pos:position pos:line="1" pos:column="36"/></specifier> <name pos:line="1" pos:column="37">char<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">dirname<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <specifier pos:line="1" pos:column="57">const<pos:position pos:line="1" pos:column="62"/></specifier> <modifier pos:line="1" pos:column="63">*<pos:position pos:line="1" pos:column="64"/></modifier></type><name pos:line="1" pos:column="64">cgroup_name<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>,
                              <parameter><decl><type><name pos:line="2" pos:column="31">void<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">user_data<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> <block pos:line="2" pos:column="48">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">abs_path<pos:position pos:line="3" pos:column="16"/></name><index pos:line="3" pos:column="16">[<expr><name pos:line="3" pos:column="17">PATH_MAX<pos:position pos:line="3" pos:column="25"/></name></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">stat<pos:position pos:line="4" pos:column="14"/></name></name></type> <name pos:line="4" pos:column="15">statbuf<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">buf<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">1024<pos:position pos:line="5" pos:column="16"/></literal></expr>]<pos:position pos:line="5" pos:column="17"/></index></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">FILE<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">fh<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><call><name pos:line="10" pos:column="7">ignorelist_match<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">il_cgroup<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="35">cgroup_name<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">snprintf<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">abs_path<pos:position pos:line="13" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="22">sizeof<argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">abs_path<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"%s/%s"<pos:position pos:line="13" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">dirname<pos:position pos:line="13" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">cgroup_name<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="71"/></expr_stmt>

  <expr_stmt><expr><name pos:line="15" pos:column="3">status<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">lstat<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">(<argument><expr><name pos:line="15" pos:column="18">abs_path<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="28">&amp;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="29">statbuf<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">status<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">!=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"cgroups plugin: stat (\"%s\") failed."<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="52">abs_path<pos:position pos:line="17" pos:column="60"/></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">-<pos:position pos:line="18" pos:column="13"/></operator><literal type="number" pos:line="18" pos:column="13">1<pos:position pos:line="18" pos:column="14"/></literal></expr>;<pos:position pos:line="18" pos:column="15"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="21" pos:column="3">/* We are only interested in directories, so skip everything else. */</comment>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><operator pos:line="22" pos:column="7">!<pos:position pos:line="22" pos:column="8"/></operator><call><name pos:line="22" pos:column="8">S_ISDIR<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name><name pos:line="22" pos:column="16">statbuf<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">.<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">st_mode<pos:position pos:line="22" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="33"/></condition><then pos:line="22" pos:column="33">
    <block type="pseudo"><return pos:line="23" pos:column="5">return <expr><literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">snprintf<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">abs_path<pos:position pos:line="25" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="22">sizeof<argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">abs_path<pos:position pos:line="25" pos:column="37"/></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="40">"%s/%s/cpuacct.stat"<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="62">dirname<pos:position pos:line="25" pos:column="69"/></name></expr></argument>,
           <argument><expr><name pos:line="26" pos:column="12">cgroup_name<pos:position pos:line="26" pos:column="23"/></name></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">fh<pos:position pos:line="27" pos:column="5"/></name> <operator pos:line="27" pos:column="6">=<pos:position pos:line="27" pos:column="7"/></operator> <call><name pos:line="27" pos:column="8">fopen<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name pos:line="27" pos:column="14">abs_path<pos:position pos:line="27" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="24">"r"<pos:position pos:line="27" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">fh<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">==<pos:position pos:line="28" pos:column="12"/></operator> <name pos:line="28" pos:column="13">NULL<pos:position pos:line="28" pos:column="17"/></name></expr>)<pos:position pos:line="28" pos:column="18"/></condition><then pos:line="28" pos:column="18"> <block pos:line="28" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name></type> <name><name pos:line="29" pos:column="10">errbuf<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><literal type="number" pos:line="29" pos:column="17">1024<pos:position pos:line="29" pos:column="21"/></literal></expr>]<pos:position pos:line="29" pos:column="22"/></index></name></decl>;<pos:position pos:line="29" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"cgroups plugin: fopen (\"%s\") failed: %s"<pos:position pos:line="30" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">abs_path<pos:position pos:line="30" pos:column="64"/></name></expr></argument>,
          <argument><expr><call><name pos:line="31" pos:column="11">sstrerror<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">errno<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">errbuf<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="36">sizeof<argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">errbuf<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">-<pos:position pos:line="32" pos:column="13"/></operator><literal type="number" pos:line="32" pos:column="13">1<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <while pos:line="35" pos:column="3">while <condition pos:line="35" pos:column="9">(<expr><call><name pos:line="35" pos:column="10">fgets<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><name pos:line="35" pos:column="16">buf<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="21">sizeof<argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">buf<pos:position pos:line="35" pos:column="31"/></name></expr></argument>)<pos:position pos:line="35" pos:column="32"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="35" pos:column="34">fh<pos:position pos:line="35" pos:column="36"/></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call> <operator pos:line="35" pos:column="38">!=<pos:position pos:line="35" pos:column="40"/></operator> <name pos:line="35" pos:column="41">NULL<pos:position pos:line="35" pos:column="45"/></name></expr>)<pos:position pos:line="35" pos:column="46"/></condition> <block pos:line="35" pos:column="47">{
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name> <modifier pos:line="36" pos:column="10">*<pos:position pos:line="36" pos:column="11"/></modifier></type><name><name pos:line="36" pos:column="11">fields<pos:position pos:line="36" pos:column="17"/></name><index pos:line="36" pos:column="17">[<expr><literal type="number" pos:line="36" pos:column="18">8<pos:position pos:line="36" pos:column="19"/></literal></expr>]<pos:position pos:line="36" pos:column="20"/></index></name></decl>;<pos:position pos:line="36" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">int<pos:position pos:line="37" pos:column="8"/></name></type> <name pos:line="37" pos:column="9">numfields<pos:position pos:line="37" pos:column="18"/></name> <init pos:line="37" pos:column="19">= <expr><literal type="number" pos:line="37" pos:column="21">0<pos:position pos:line="37" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">char<pos:position pos:line="38" pos:column="9"/></name> <modifier pos:line="38" pos:column="10">*<pos:position pos:line="38" pos:column="11"/></modifier></type><name pos:line="38" pos:column="11">key<pos:position pos:line="38" pos:column="14"/></name></decl>;<pos:position pos:line="38" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">size_t<pos:position pos:line="39" pos:column="11"/></name></type> <name pos:line="39" pos:column="12">key_len<pos:position pos:line="39" pos:column="19"/></name></decl>;<pos:position pos:line="39" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">value_t<pos:position pos:line="40" pos:column="12"/></name></type> <name pos:line="40" pos:column="13">value<pos:position pos:line="40" pos:column="18"/></name></decl>;<pos:position pos:line="40" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Expected format:
     *
     *   user: 12345
     *   system: 23456
     *
     * Or:
     *
     *   user 12345
     *   system 23456
     */</comment>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">strstripnewline<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">buf<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="53" pos:column="5">numfields<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">=<pos:position pos:line="53" pos:column="16"/></operator> <call><name pos:line="53" pos:column="17">strsplit<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">buf<pos:position pos:line="53" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="31">fields<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="39">STATIC_ARRAY_SIZE<pos:position pos:line="53" pos:column="56"/></name><argument_list pos:line="53" pos:column="56">(<argument><expr><name pos:line="53" pos:column="57">fields<pos:position pos:line="53" pos:column="63"/></name></expr></argument>)<pos:position pos:line="53" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="66"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">numfields<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">!=<pos:position pos:line="54" pos:column="21"/></operator> <literal type="number" pos:line="54" pos:column="22">2<pos:position pos:line="54" pos:column="23"/></literal></expr>)<pos:position pos:line="54" pos:column="24"/></condition><then pos:line="54" pos:column="24">
      <block type="pseudo"><continue pos:line="55" pos:column="7">continue;<pos:position pos:line="55" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="57" pos:column="5">key<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">=<pos:position pos:line="57" pos:column="10"/></operator> <name><name pos:line="57" pos:column="11">fields<pos:position pos:line="57" pos:column="17"/></name><index pos:line="57" pos:column="17">[<expr><literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr>]<pos:position pos:line="57" pos:column="20"/></index></name></expr>;<pos:position pos:line="57" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name pos:line="58" pos:column="5">key_len<pos:position pos:line="58" pos:column="12"/></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <call><name pos:line="58" pos:column="15">strlen<pos:position pos:line="58" pos:column="21"/></name><argument_list pos:line="58" pos:column="21">(<argument><expr><name pos:line="58" pos:column="22">key<pos:position pos:line="58" pos:column="25"/></name></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name pos:line="59" pos:column="9">key_len<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&lt;<pos:position pos:line="59" pos:column="21"/></operator> <literal type="number" pos:line="59" pos:column="19">2<pos:position pos:line="59" pos:column="20"/></literal></expr>)<pos:position pos:line="59" pos:column="21"/></condition><then pos:line="59" pos:column="21">
      <block type="pseudo"><continue pos:line="60" pos:column="7">continue;<pos:position pos:line="60" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* Strip colon off the first column, if found */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name><name pos:line="63" pos:column="9">key<pos:position pos:line="63" pos:column="12"/></name><index pos:line="63" pos:column="12">[<expr><name pos:line="63" pos:column="13">key_len<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">-<pos:position pos:line="63" pos:column="22"/></operator> <literal type="number" pos:line="63" pos:column="23">1<pos:position pos:line="63" pos:column="24"/></literal></expr>]<pos:position pos:line="63" pos:column="25"/></index></name> <operator pos:line="63" pos:column="26">==<pos:position pos:line="63" pos:column="28"/></operator> <literal type="char" pos:line="63" pos:column="29">':'<pos:position pos:line="63" pos:column="32"/></literal></expr>)<pos:position pos:line="63" pos:column="33"/></condition><then pos:line="63" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="64" pos:column="7">key<pos:position pos:line="64" pos:column="10"/></name><index pos:line="64" pos:column="10">[<expr><name pos:line="64" pos:column="11">key_len<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">-<pos:position pos:line="64" pos:column="20"/></operator> <literal type="number" pos:line="64" pos:column="21">1<pos:position pos:line="64" pos:column="22"/></literal></expr>]<pos:position pos:line="64" pos:column="23"/></index></name> <operator pos:line="64" pos:column="24">=<pos:position pos:line="64" pos:column="25"/></operator> <literal type="number" pos:line="64" pos:column="26">0<pos:position pos:line="64" pos:column="27"/></literal></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="66" pos:column="5">status<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <call><name pos:line="66" pos:column="14">parse_value<pos:position pos:line="66" pos:column="25"/></name><argument_list pos:line="66" pos:column="25">(<argument><expr><name><name pos:line="66" pos:column="26">fields<pos:position pos:line="66" pos:column="32"/></name><index pos:line="66" pos:column="32">[<expr><literal type="number" pos:line="66" pos:column="33">1<pos:position pos:line="66" pos:column="34"/></literal></expr>]<pos:position pos:line="66" pos:column="35"/></index></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="37">&amp;<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="38">value<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="45">DS_TYPE_DERIVE<pos:position pos:line="66" pos:column="59"/></name></expr></argument>)<pos:position pos:line="66" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="61"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">status<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">!=<pos:position pos:line="67" pos:column="18"/></operator> <literal type="number" pos:line="67" pos:column="19">0<pos:position pos:line="67" pos:column="20"/></literal></expr>)<pos:position pos:line="67" pos:column="21"/></condition><then pos:line="67" pos:column="21">
      <block type="pseudo"><continue pos:line="68" pos:column="7">continue;<pos:position pos:line="68" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="70" pos:column="5">cgroups_submit_one<pos:position pos:line="70" pos:column="23"/></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">cgroup_name<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">key<pos:position pos:line="70" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">value<pos:position pos:line="70" pos:column="47"/></name></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="71" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="73" pos:column="3">fclose<pos:position pos:line="73" pos:column="9"/></name><argument_list pos:line="73" pos:column="9">(<argument><expr><name pos:line="73" pos:column="10">fh<pos:position pos:line="73" pos:column="12"/></name></expr></argument>)<pos:position pos:line="73" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="14"/></expr_stmt>
  <return pos:line="74" pos:column="3">return <expr><literal type="number" pos:line="74" pos:column="10">0<pos:position pos:line="74" pos:column="11"/></literal></expr>;<pos:position pos:line="74" pos:column="12"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_472_collectd-4.7.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_name<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">char<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">ret<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">ret_len<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">hostname<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">plugin<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="37">const<pos:position pos:line="3" pos:column="42"/></specifier> <name pos:line="3" pos:column="43">char<pos:position pos:line="3" pos:column="47"/></name> <modifier pos:line="3" pos:column="48">*<pos:position pos:line="3" pos:column="49"/></modifier></type><name pos:line="3" pos:column="49">plugin_instance<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier> <name pos:line="4" pos:column="23">char<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">type<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="35">const<pos:position pos:line="4" pos:column="40"/></specifier> <name pos:line="4" pos:column="41">char<pos:position pos:line="4" pos:column="45"/></name> <modifier pos:line="4" pos:column="46">*<pos:position pos:line="4" pos:column="47"/></modifier></type><name pos:line="4" pos:column="47">type_instance<pos:position pos:line="4" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="61"/></parameter_list>
<block pos:line="5" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type>  <name pos:line="6" pos:column="14">status<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="8" pos:column="9">assert<pos:position pos:line="8" pos:column="15"/></name> <argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">plugin<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">!=<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">type<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">!=<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">NULL<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">(<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">plugin_instance<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">==<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="33">NULL<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">)<pos:position pos:line="11" pos:column="38"/></operator> <operator pos:line="11" pos:column="39">||<pos:position pos:line="11" pos:column="41"/></operator> <operator pos:line="11" pos:column="42">(<pos:position pos:line="11" pos:column="43"/></operator><call><name pos:line="11" pos:column="43">strlen<pos:position pos:line="11" pos:column="49"/></name> <argument_list pos:line="11" pos:column="50">(<argument><expr><name pos:line="11" pos:column="51">plugin_instance<pos:position pos:line="11" pos:column="66"/></name></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call> <operator pos:line="11" pos:column="68">==<pos:position pos:line="11" pos:column="70"/></operator> <literal type="number" pos:line="11" pos:column="71">0<pos:position pos:line="11" pos:column="72"/></literal><operator pos:line="11" pos:column="72">)<pos:position pos:line="11" pos:column="73"/></operator></expr>)<pos:position pos:line="11" pos:column="74"/></condition><then pos:line="11" pos:column="74">
	<block pos:line="12" pos:column="9">{
		<if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">type_instance<pos:position pos:line="13" pos:column="35"/></name> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="39">NULL<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">)<pos:position pos:line="13" pos:column="44"/></operator> <operator pos:line="13" pos:column="45">||<pos:position pos:line="13" pos:column="47"/></operator> <operator pos:line="13" pos:column="48">(<pos:position pos:line="13" pos:column="49"/></operator><call><name pos:line="13" pos:column="49">strlen<pos:position pos:line="13" pos:column="55"/></name> <argument_list pos:line="13" pos:column="56">(<argument><expr><name pos:line="13" pos:column="57">type_instance<pos:position pos:line="13" pos:column="70"/></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call> <operator pos:line="13" pos:column="72">==<pos:position pos:line="13" pos:column="74"/></operator> <literal type="number" pos:line="13" pos:column="75">0<pos:position pos:line="13" pos:column="76"/></literal><operator pos:line="13" pos:column="76">)<pos:position pos:line="13" pos:column="77"/></operator></expr>)<pos:position pos:line="13" pos:column="78"/></condition><then pos:line="13" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="25">status<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <call><name pos:line="14" pos:column="34">ssnprintf<pos:position pos:line="14" pos:column="43"/></name> <argument_list pos:line="14" pos:column="44">(<argument><expr><name pos:line="14" pos:column="45">ret<pos:position pos:line="14" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="50">ret_len<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="59">"%s/%s/%s"<pos:position pos:line="14" pos:column="69"/></literal></expr></argument>,
					<argument><expr><name pos:line="15" pos:column="41">hostname<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">plugin<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="59">type<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt></block></then>
		<else pos:line="16" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="25">status<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <call><name pos:line="17" pos:column="34">ssnprintf<pos:position pos:line="17" pos:column="43"/></name> <argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">ret<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">ret_len<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="59">"%s/%s/%s-%s"<pos:position pos:line="17" pos:column="72"/></literal></expr></argument>,
					<argument><expr><name pos:line="18" pos:column="41">hostname<pos:position pos:line="18" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="51">plugin<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="59">type<pos:position pos:line="18" pos:column="63"/></name></expr></argument>,
					<argument><expr><name pos:line="19" pos:column="41">type_instance<pos:position pos:line="19" pos:column="54"/></name></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt></block></else></if>
	}<pos:position pos:line="20" pos:column="10"/></block></then>
	<else pos:line="21" pos:column="9">else
	<block pos:line="22" pos:column="9">{
		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">(<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">type_instance<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">==<pos:position pos:line="23" pos:column="38"/></operator> <name pos:line="23" pos:column="39">NULL<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">)<pos:position pos:line="23" pos:column="44"/></operator> <operator pos:line="23" pos:column="45">||<pos:position pos:line="23" pos:column="47"/></operator> <operator pos:line="23" pos:column="48">(<pos:position pos:line="23" pos:column="49"/></operator><call><name pos:line="23" pos:column="49">strlen<pos:position pos:line="23" pos:column="55"/></name> <argument_list pos:line="23" pos:column="56">(<argument><expr><name pos:line="23" pos:column="57">type_instance<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></call> <operator pos:line="23" pos:column="72">==<pos:position pos:line="23" pos:column="74"/></operator> <literal type="number" pos:line="23" pos:column="75">0<pos:position pos:line="23" pos:column="76"/></literal><operator pos:line="23" pos:column="76">)<pos:position pos:line="23" pos:column="77"/></operator></expr>)<pos:position pos:line="23" pos:column="78"/></condition><then pos:line="23" pos:column="78">
			<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="25">status<pos:position pos:line="24" pos:column="31"/></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <call><name pos:line="24" pos:column="34">ssnprintf<pos:position pos:line="24" pos:column="43"/></name> <argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">ret<pos:position pos:line="24" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">ret_len<pos:position pos:line="24" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="59">"%s/%s-%s/%s"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>,
					<argument><expr><name pos:line="25" pos:column="41">hostname<pos:position pos:line="25" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="51">plugin<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">plugin_instance<pos:position pos:line="25" pos:column="74"/></name></expr></argument>,
					<argument><expr><name pos:line="26" pos:column="41">type<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt></block></then>
		<else pos:line="27" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="25">status<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">=<pos:position pos:line="28" pos:column="33"/></operator> <call><name pos:line="28" pos:column="34">ssnprintf<pos:position pos:line="28" pos:column="43"/></name> <argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">ret<pos:position pos:line="28" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="50">ret_len<pos:position pos:line="28" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="59">"%s/%s-%s/%s-%s"<pos:position pos:line="28" pos:column="75"/></literal></expr></argument>,
					<argument><expr><name pos:line="29" pos:column="41">hostname<pos:position pos:line="29" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="51">plugin<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="59">plugin_instance<pos:position pos:line="29" pos:column="74"/></name></expr></argument>,
					<argument><expr><name pos:line="30" pos:column="41">type<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="47">type_instance<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt></block></else></if>
	}<pos:position pos:line="31" pos:column="10"/></block></else></if>

	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">status<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">&lt;<pos:position pos:line="33" pos:column="25"/></operator> <literal type="number" pos:line="33" pos:column="23">1<pos:position pos:line="33" pos:column="24"/></literal><operator pos:line="33" pos:column="24">)<pos:position pos:line="33" pos:column="25"/></operator> <operator pos:line="33" pos:column="26">||<pos:position pos:line="33" pos:column="28"/></operator> <operator pos:line="33" pos:column="29">(<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">status<pos:position pos:line="33" pos:column="36"/></name> <operator pos:line="33" pos:column="37">&gt;=<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="40">ret_len<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">)<pos:position pos:line="33" pos:column="48"/></operator></expr>)<pos:position pos:line="33" pos:column="49"/></condition><then pos:line="33" pos:column="49">
		<block type="pseudo"><return pos:line="34" pos:column="17">return <expr><operator pos:line="34" pos:column="24">(<pos:position pos:line="34" pos:column="25"/></operator><operator pos:line="34" pos:column="25">-<pos:position pos:line="34" pos:column="26"/></operator><literal type="number" pos:line="34" pos:column="26">1<pos:position pos:line="34" pos:column="27"/></literal><operator pos:line="34" pos:column="27">)<pos:position pos:line="34" pos:column="28"/></operator></expr>;<pos:position pos:line="34" pos:column="29"/></return></block></then></if>
	<return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal><operator pos:line="35" pos:column="18">)<pos:position pos:line="35" pos:column="19"/></operator></expr>;<pos:position pos:line="35" pos:column="20"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_968_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">service_statnode_process<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">pinba_statnode_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">node<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">Pinba__Request<pos:position pos:line="2" pos:column="19"/></name><modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type> <name pos:line="2" pos:column="21">request<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <expr_stmt><expr><name><name pos:line="4" pos:column="3">node<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">-&gt;<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="9">req_count<pos:position pos:line="4" pos:column="18"/></name></name><operator pos:line="4" pos:column="18">++<pos:position pos:line="4" pos:column="20"/></operator></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">float_counter_add<pos:position pos:line="6" pos:column="20"/></name> <argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator><name><name pos:line="6" pos:column="23">node<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">req_time<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="39">request<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">request_time<pos:position pos:line="6" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">float_counter_add<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><operator pos:line="7" pos:column="22">&amp;<pos:position pos:line="7" pos:column="27"/></operator><name><name pos:line="7" pos:column="23">node<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">ru_utime<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="39">request<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">-&gt;<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="48">ru_utime<pos:position pos:line="7" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">float_counter_add<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><operator pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></operator><name><name pos:line="8" pos:column="23">node<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">ru_stime<pos:position pos:line="8" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="39">request<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">ru_stime<pos:position pos:line="8" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="10" pos:column="3">node<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">doc_size<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">+=<pos:position pos:line="10" pos:column="20"/></operator> <name><name pos:line="10" pos:column="21">request<pos:position pos:line="10" pos:column="28"/></name><operator pos:line="10" pos:column="28">-&gt;<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="30">document_size<pos:position pos:line="10" pos:column="43"/></name></name></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">isnan<pos:position pos:line="12" pos:column="12"/></name> <argument_list pos:line="12" pos:column="13">(<argument><expr><name><name pos:line="12" pos:column="14">node<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">mem_peak<pos:position pos:line="12" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call>
      <operator pos:line="13" pos:column="7">||<pos:position pos:line="13" pos:column="9"/></operator> <operator pos:line="13" pos:column="10">(<pos:position pos:line="13" pos:column="11"/></operator><name><name pos:line="13" pos:column="11">node<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">mem_peak<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">&lt;<pos:position pos:line="13" pos:column="30"/></operator> <operator pos:line="13" pos:column="28">(<pos:position pos:line="13" pos:column="29"/></operator><operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">gauge_t<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator> <name><name pos:line="13" pos:column="39">request<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">memory_peak<pos:position pos:line="13" pos:column="59"/></name></name><operator pos:line="13" pos:column="59">)<pos:position pos:line="13" pos:column="60"/></operator><operator pos:line="13" pos:column="60">)<pos:position pos:line="13" pos:column="61"/></operator></expr>)<pos:position pos:line="13" pos:column="62"/></condition><then pos:line="13" pos:column="62">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="5">node<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">-&gt;<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="11">mem_peak<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <operator pos:line="14" pos:column="22">(<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">gauge_t<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">)<pos:position pos:line="14" pos:column="31"/></operator> <name><name pos:line="14" pos:column="32">request<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">-&gt;<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="41">memory_peak<pos:position pos:line="14" pos:column="52"/></name></name></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt></block></then></if>

}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

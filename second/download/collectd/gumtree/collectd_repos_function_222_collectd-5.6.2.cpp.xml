<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_222_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lv_config<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">key<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">value<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">virInitialize<pos:position pos:line="2" pos:column="20"/></name><argument_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></argument_list></call> <operator pos:line="2" pos:column="23">!=<pos:position pos:line="2" pos:column="25"/></operator> <literal type="number" pos:line="2" pos:column="26">0<pos:position pos:line="2" pos:column="27"/></literal></expr>)<pos:position pos:line="2" pos:column="28"/></condition><then pos:line="2" pos:column="28">
    <block type="pseudo"><return pos:line="3" pos:column="5">return <expr><literal type="number" pos:line="3" pos:column="12">1<pos:position pos:line="3" pos:column="13"/></literal></expr>;<pos:position pos:line="3" pos:column="14"/></return></block></then></if>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">il_domains<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">==<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">il_domains<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <call><name pos:line="6" pos:column="18">ignorelist_create<pos:position pos:line="6" pos:column="35"/></name><argument_list pos:line="6" pos:column="35">(<argument><expr><literal type="number" pos:line="6" pos:column="36">1<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt></block></then></if>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">il_block_devices<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">il_block_devices<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">=<pos:position pos:line="8" pos:column="23"/></operator> <call><name pos:line="8" pos:column="24">ignorelist_create<pos:position pos:line="8" pos:column="41"/></name><argument_list pos:line="8" pos:column="41">(<argument><expr><literal type="number" pos:line="8" pos:column="42">1<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt></block></then></if>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">il_interface_devices<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">==<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="31">NULL<pos:position pos:line="9" pos:column="35"/></name></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">il_interface_devices<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <call><name pos:line="10" pos:column="28">ignorelist_create<pos:position pos:line="10" pos:column="45"/></name><argument_list pos:line="10" pos:column="45">(<argument><expr><literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">strcasecmp<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">key<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"Connection"<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">==<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">tmp<pos:position pos:line="13" pos:column="14"/></name> <init pos:line="13" pos:column="15">= <expr><call><name pos:line="13" pos:column="17">strdup<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">value<pos:position pos:line="13" pos:column="29"/></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">tmp<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">ERROR<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">PLUGIN_NAME<pos:position pos:line="15" pos:column="24"/></name> <literal type="string" pos:line="15" pos:column="25">" plugin: Connection strdup failed."<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
      <return pos:line="16" pos:column="7">return <expr><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">sfree<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><name pos:line="18" pos:column="11">conn_string<pos:position pos:line="18" pos:column="22"/></name></expr></argument>)<pos:position pos:line="18" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">conn_string<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">tmp<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><call><name pos:line="23" pos:column="7">strcasecmp<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">key<pos:position pos:line="23" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"RefreshInterval"<pos:position pos:line="23" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call> <operator pos:line="23" pos:column="42">==<pos:position pos:line="23" pos:column="44"/></operator> <literal type="number" pos:line="23" pos:column="45">0<pos:position pos:line="23" pos:column="46"/></literal></expr>)<pos:position pos:line="23" pos:column="47"/></condition><then pos:line="23" pos:column="47"> <block pos:line="23" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name> <modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier></type><name pos:line="24" pos:column="11">eptr<pos:position pos:line="24" pos:column="15"/></name> <init pos:line="24" pos:column="16">= <expr><name pos:line="24" pos:column="18">NULL<pos:position pos:line="24" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">interval<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">strtol<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">value<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="30">&amp;<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="31">eptr<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="37">10<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">eptr<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">==<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">NULL<pos:position pos:line="26" pos:column="21"/></name> <operator pos:line="26" pos:column="22">||<pos:position pos:line="26" pos:column="24"/></operator> <operator pos:line="26" pos:column="25">*<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">eptr<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">!=<pos:position pos:line="26" pos:column="33"/></operator> <literal type="char" pos:line="26" pos:column="34">'\0'<pos:position pos:line="26" pos:column="38"/></literal></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39">
      <block type="pseudo"><return pos:line="27" pos:column="7">return <expr><literal type="number" pos:line="27" pos:column="14">1<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></return></block></then></if>
    <return pos:line="28" pos:column="5">return <expr><literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><call><name pos:line="31" pos:column="7">strcasecmp<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">key<pos:position pos:line="31" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"Domain"<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call> <operator pos:line="31" pos:column="33">==<pos:position pos:line="31" pos:column="35"/></operator> <literal type="number" pos:line="31" pos:column="36">0<pos:position pos:line="31" pos:column="37"/></literal></expr>)<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38"> <block pos:line="31" pos:column="39">{
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">ignorelist_add<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><name pos:line="32" pos:column="24">il_domains<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="36">value<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43">
      <block type="pseudo"><return pos:line="33" pos:column="7">return <expr><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal></expr>;<pos:position pos:line="33" pos:column="16"/></return></block></then></if>
    <return pos:line="34" pos:column="5">return <expr><literal type="number" pos:line="34" pos:column="12">0<pos:position pos:line="34" pos:column="13"/></literal></expr>;<pos:position pos:line="34" pos:column="14"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><call><name pos:line="36" pos:column="7">strcasecmp<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">key<pos:position pos:line="36" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="23">"BlockDevice"<pos:position pos:line="36" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call> <operator pos:line="36" pos:column="38">==<pos:position pos:line="36" pos:column="40"/></operator> <literal type="number" pos:line="36" pos:column="41">0<pos:position pos:line="36" pos:column="42"/></literal></expr>)<pos:position pos:line="36" pos:column="43"/></condition><then pos:line="36" pos:column="43"> <block pos:line="36" pos:column="44">{
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">ignorelist_add<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">il_block_devices<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">value<pos:position pos:line="37" pos:column="47"/></name></expr></argument>)<pos:position pos:line="37" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="49"/></condition><then pos:line="37" pos:column="49">
      <block type="pseudo"><return pos:line="38" pos:column="7">return <expr><literal type="number" pos:line="38" pos:column="14">1<pos:position pos:line="38" pos:column="15"/></literal></expr>;<pos:position pos:line="38" pos:column="16"/></return></block></then></if>
    <return pos:line="39" pos:column="5">return <expr><literal type="number" pos:line="39" pos:column="12">0<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">strcasecmp<pos:position pos:line="41" pos:column="17"/></name><argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">key<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"InterfaceDevice"<pos:position pos:line="41" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="41"/></argument_list></call> <operator pos:line="41" pos:column="42">==<pos:position pos:line="41" pos:column="44"/></operator> <literal type="number" pos:line="41" pos:column="45">0<pos:position pos:line="41" pos:column="46"/></literal></expr>)<pos:position pos:line="41" pos:column="47"/></condition><then pos:line="41" pos:column="47"> <block pos:line="41" pos:column="48">{
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">ignorelist_add<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">il_interface_devices<pos:position pos:line="42" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="46">value<pos:position pos:line="42" pos:column="51"/></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="53"/></condition><then pos:line="42" pos:column="53">
      <block type="pseudo"><return pos:line="43" pos:column="7">return <expr><literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal></expr>;<pos:position pos:line="43" pos:column="16"/></return></block></then></if>
    <return pos:line="44" pos:column="5">return <expr><literal type="number" pos:line="44" pos:column="12">0<pos:position pos:line="44" pos:column="13"/></literal></expr>;<pos:position pos:line="44" pos:column="14"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><call><name pos:line="47" pos:column="7">strcasecmp<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">key<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="23">"IgnoreSelected"<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call> <operator pos:line="47" pos:column="41">==<pos:position pos:line="47" pos:column="43"/></operator> <literal type="number" pos:line="47" pos:column="44">0<pos:position pos:line="47" pos:column="45"/></literal></expr>)<pos:position pos:line="47" pos:column="46"/></condition><then pos:line="47" pos:column="46"> <block pos:line="47" pos:column="47">{
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">IS_TRUE<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">value<pos:position pos:line="48" pos:column="22"/></name></expr></argument>)<pos:position pos:line="48" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="24"/></condition><then pos:line="48" pos:column="24"> <block pos:line="48" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">ignorelist_set_invert<pos:position pos:line="49" pos:column="28"/></name><argument_list pos:line="49" pos:column="28">(<argument><expr><name pos:line="49" pos:column="29">il_domains<pos:position pos:line="49" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="41">0<pos:position pos:line="49" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">ignorelist_set_invert<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">il_block_devices<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">ignorelist_set_invert<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">il_interface_devices<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="51">0<pos:position pos:line="51" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then> <else pos:line="52" pos:column="7">else <block pos:line="52" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">ignorelist_set_invert<pos:position pos:line="53" pos:column="28"/></name><argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">il_domains<pos:position pos:line="53" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="41">1<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">ignorelist_set_invert<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">il_block_devices<pos:position pos:line="54" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="47">1<pos:position pos:line="54" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">ignorelist_set_invert<pos:position pos:line="55" pos:column="28"/></name><argument_list pos:line="55" pos:column="28">(<argument><expr><name pos:line="55" pos:column="29">il_interface_devices<pos:position pos:line="55" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="51">1<pos:position pos:line="55" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>
    <return pos:line="57" pos:column="5">return <expr><literal type="number" pos:line="57" pos:column="12">0<pos:position pos:line="57" pos:column="13"/></literal></expr>;<pos:position pos:line="57" pos:column="14"/></return>
  }<pos:position pos:line="58" pos:column="4"/></block></then></if>

  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><call><name pos:line="60" pos:column="7">strcasecmp<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><name pos:line="60" pos:column="18">key<pos:position pos:line="60" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="23">"HostnameFormat"<pos:position pos:line="60" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call> <operator pos:line="60" pos:column="41">==<pos:position pos:line="60" pos:column="43"/></operator> <literal type="number" pos:line="60" pos:column="44">0<pos:position pos:line="60" pos:column="45"/></literal></expr>)<pos:position pos:line="60" pos:column="46"/></condition><then pos:line="60" pos:column="46"> <block pos:line="60" pos:column="47">{
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">char<pos:position pos:line="61" pos:column="9"/></name> <modifier pos:line="61" pos:column="10">*<pos:position pos:line="61" pos:column="11"/></modifier></type><name pos:line="61" pos:column="11">value_copy<pos:position pos:line="61" pos:column="21"/></name></decl>;<pos:position pos:line="61" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="62" pos:column="5">char<pos:position pos:line="62" pos:column="9"/></name> <modifier pos:line="62" pos:column="10">*<pos:position pos:line="62" pos:column="11"/></modifier></type><name><name pos:line="62" pos:column="11">fields<pos:position pos:line="62" pos:column="17"/></name><index pos:line="62" pos:column="17">[<expr><name pos:line="62" pos:column="18">HF_MAX_FIELDS<pos:position pos:line="62" pos:column="31"/></name></expr>]<pos:position pos:line="62" pos:column="32"/></index></name></decl>;<pos:position pos:line="62" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="63" pos:column="5">int<pos:position pos:line="63" pos:column="8"/></name></type> <name pos:line="63" pos:column="9">n<pos:position pos:line="63" pos:column="10"/></name></decl>;<pos:position pos:line="63" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="65" pos:column="5">value_copy<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">=<pos:position pos:line="65" pos:column="17"/></operator> <call><name pos:line="65" pos:column="18">strdup<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">value<pos:position pos:line="65" pos:column="30"/></name></expr></argument>)<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">value_copy<pos:position pos:line="66" pos:column="19"/></name> <operator pos:line="66" pos:column="20">==<pos:position pos:line="66" pos:column="22"/></operator> <name pos:line="66" pos:column="23">NULL<pos:position pos:line="66" pos:column="27"/></name></expr>)<pos:position pos:line="66" pos:column="28"/></condition><then pos:line="66" pos:column="28"> <block pos:line="66" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">ERROR<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">PLUGIN_NAME<pos:position pos:line="67" pos:column="24"/></name> <literal type="string" pos:line="67" pos:column="25">" plugin: strdup failed."<pos:position pos:line="67" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="52"/></expr_stmt>
      <return pos:line="68" pos:column="7">return <expr><operator pos:line="68" pos:column="14">-<pos:position pos:line="68" pos:column="15"/></operator><literal type="number" pos:line="68" pos:column="15">1<pos:position pos:line="68" pos:column="16"/></literal></expr>;<pos:position pos:line="68" pos:column="17"/></return>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="71" pos:column="5">n<pos:position pos:line="71" pos:column="6"/></name> <operator pos:line="71" pos:column="7">=<pos:position pos:line="71" pos:column="8"/></operator> <call><name pos:line="71" pos:column="9">strsplit<pos:position pos:line="71" pos:column="17"/></name><argument_list pos:line="71" pos:column="17">(<argument><expr><name pos:line="71" pos:column="18">value_copy<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="30">fields<pos:position pos:line="71" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="38">HF_MAX_FIELDS<pos:position pos:line="71" pos:column="51"/></name></expr></argument>)<pos:position pos:line="71" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="53"/></expr_stmt>
    <if pos:line="72" pos:column="5">if <condition pos:line="72" pos:column="8">(<expr><name pos:line="72" pos:column="9">n<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">&lt;<pos:position pos:line="72" pos:column="15"/></operator> <literal type="number" pos:line="72" pos:column="13">1<pos:position pos:line="72" pos:column="14"/></literal></expr>)<pos:position pos:line="72" pos:column="15"/></condition><then pos:line="72" pos:column="15"> <block pos:line="72" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="73" pos:column="7">sfree<pos:position pos:line="73" pos:column="12"/></name><argument_list pos:line="73" pos:column="12">(<argument><expr><name pos:line="73" pos:column="13">value_copy<pos:position pos:line="73" pos:column="23"/></name></expr></argument>)<pos:position pos:line="73" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="74" pos:column="7">ERROR<pos:position pos:line="74" pos:column="12"/></name><argument_list pos:line="74" pos:column="12">(<argument><expr><name pos:line="74" pos:column="13">PLUGIN_NAME<pos:position pos:line="74" pos:column="24"/></name> <literal type="string" pos:line="74" pos:column="25">" plugin: HostnameFormat: no fields"<pos:position pos:line="74" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="63"/></expr_stmt>
      <return pos:line="75" pos:column="7">return <expr><operator pos:line="75" pos:column="14">-<pos:position pos:line="75" pos:column="15"/></operator><literal type="number" pos:line="75" pos:column="15">1<pos:position pos:line="75" pos:column="16"/></literal></expr>;<pos:position pos:line="75" pos:column="17"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <for pos:line="78" pos:column="5">for <control pos:line="78" pos:column="9">(<init><decl><type><name pos:line="78" pos:column="10">int<pos:position pos:line="78" pos:column="13"/></name></type> <name pos:line="78" pos:column="14">i<pos:position pos:line="78" pos:column="15"/></name> <init pos:line="78" pos:column="16">= <expr><literal type="number" pos:line="78" pos:column="18">0<pos:position pos:line="78" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="78" pos:column="20"/></init> <condition><expr><name pos:line="78" pos:column="21">i<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">&lt;<pos:position pos:line="78" pos:column="27"/></operator> <name pos:line="78" pos:column="25">n<pos:position pos:line="78" pos:column="26"/></name></expr>;<pos:position pos:line="78" pos:column="27"/></condition> <incr><expr><operator pos:line="78" pos:column="28">++<pos:position pos:line="78" pos:column="30"/></operator><name pos:line="78" pos:column="30">i<pos:position pos:line="78" pos:column="31"/></name></expr></incr>)<pos:position pos:line="78" pos:column="32"/></control> <block pos:line="78" pos:column="33">{
      <if pos:line="79" pos:column="7">if <condition pos:line="79" pos:column="10">(<expr><call><name pos:line="79" pos:column="11">strcasecmp<pos:position pos:line="79" pos:column="21"/></name><argument_list pos:line="79" pos:column="21">(<argument><expr><name><name pos:line="79" pos:column="22">fields<pos:position pos:line="79" pos:column="28"/></name><index pos:line="79" pos:column="28">[<expr><name pos:line="79" pos:column="29">i<pos:position pos:line="79" pos:column="30"/></name></expr>]<pos:position pos:line="79" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="33">"hostname"<pos:position pos:line="79" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="44"/></argument_list></call> <operator pos:line="79" pos:column="45">==<pos:position pos:line="79" pos:column="47"/></operator> <literal type="number" pos:line="79" pos:column="48">0<pos:position pos:line="79" pos:column="49"/></literal></expr>)<pos:position pos:line="79" pos:column="50"/></condition><then pos:line="79" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="9">hostname_format<pos:position pos:line="80" pos:column="24"/></name><index pos:line="80" pos:column="24">[<expr><name pos:line="80" pos:column="25">i<pos:position pos:line="80" pos:column="26"/></name></expr>]<pos:position pos:line="80" pos:column="27"/></index></name> <operator pos:line="80" pos:column="28">=<pos:position pos:line="80" pos:column="29"/></operator> <name pos:line="80" pos:column="30">hf_hostname<pos:position pos:line="80" pos:column="41"/></name></expr>;<pos:position pos:line="80" pos:column="42"/></expr_stmt></block></then>
      <elseif pos:line="81" pos:column="7">else <if pos:line="81" pos:column="12">if <condition pos:line="81" pos:column="15">(<expr><call><name pos:line="81" pos:column="16">strcasecmp<pos:position pos:line="81" pos:column="26"/></name><argument_list pos:line="81" pos:column="26">(<argument><expr><name><name pos:line="81" pos:column="27">fields<pos:position pos:line="81" pos:column="33"/></name><index pos:line="81" pos:column="33">[<expr><name pos:line="81" pos:column="34">i<pos:position pos:line="81" pos:column="35"/></name></expr>]<pos:position pos:line="81" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="38">"name"<pos:position pos:line="81" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="45"/></argument_list></call> <operator pos:line="81" pos:column="46">==<pos:position pos:line="81" pos:column="48"/></operator> <literal type="number" pos:line="81" pos:column="49">0<pos:position pos:line="81" pos:column="50"/></literal></expr>)<pos:position pos:line="81" pos:column="51"/></condition><then pos:line="81" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="82" pos:column="9">hostname_format<pos:position pos:line="82" pos:column="24"/></name><index pos:line="82" pos:column="24">[<expr><name pos:line="82" pos:column="25">i<pos:position pos:line="82" pos:column="26"/></name></expr>]<pos:position pos:line="82" pos:column="27"/></index></name> <operator pos:line="82" pos:column="28">=<pos:position pos:line="82" pos:column="29"/></operator> <name pos:line="82" pos:column="30">hf_name<pos:position pos:line="82" pos:column="37"/></name></expr>;<pos:position pos:line="82" pos:column="38"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="83" pos:column="7">else <if pos:line="83" pos:column="12">if <condition pos:line="83" pos:column="15">(<expr><call><name pos:line="83" pos:column="16">strcasecmp<pos:position pos:line="83" pos:column="26"/></name><argument_list pos:line="83" pos:column="26">(<argument><expr><name><name pos:line="83" pos:column="27">fields<pos:position pos:line="83" pos:column="33"/></name><index pos:line="83" pos:column="33">[<expr><name pos:line="83" pos:column="34">i<pos:position pos:line="83" pos:column="35"/></name></expr>]<pos:position pos:line="83" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="38">"uuid"<pos:position pos:line="83" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="45"/></argument_list></call> <operator pos:line="83" pos:column="46">==<pos:position pos:line="83" pos:column="48"/></operator> <literal type="number" pos:line="83" pos:column="49">0<pos:position pos:line="83" pos:column="50"/></literal></expr>)<pos:position pos:line="83" pos:column="51"/></condition><then pos:line="83" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="84" pos:column="9">hostname_format<pos:position pos:line="84" pos:column="24"/></name><index pos:line="84" pos:column="24">[<expr><name pos:line="84" pos:column="25">i<pos:position pos:line="84" pos:column="26"/></name></expr>]<pos:position pos:line="84" pos:column="27"/></index></name> <operator pos:line="84" pos:column="28">=<pos:position pos:line="84" pos:column="29"/></operator> <name pos:line="84" pos:column="30">hf_uuid<pos:position pos:line="84" pos:column="37"/></name></expr>;<pos:position pos:line="84" pos:column="38"/></expr_stmt></block></then></if></elseif>
      <else pos:line="85" pos:column="7">else <block pos:line="85" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">ERROR<pos:position pos:line="86" pos:column="14"/></name><argument_list pos:line="86" pos:column="14">(<argument><expr><name pos:line="86" pos:column="15">PLUGIN_NAME<pos:position pos:line="86" pos:column="26"/></name> <literal type="string" pos:line="86" pos:column="27">" plugin: unknown HostnameFormat field: %s"<pos:position pos:line="86" pos:column="70"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="87" pos:column="15">fields<pos:position pos:line="87" pos:column="21"/></name><index pos:line="87" pos:column="21">[<expr><name pos:line="87" pos:column="22">i<pos:position pos:line="87" pos:column="23"/></name></expr>]<pos:position pos:line="87" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="87" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">sfree<pos:position pos:line="88" pos:column="14"/></name><argument_list pos:line="88" pos:column="14">(<argument><expr><name pos:line="88" pos:column="15">value_copy<pos:position pos:line="88" pos:column="25"/></name></expr></argument>)<pos:position pos:line="88" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="27"/></expr_stmt>
        <return pos:line="89" pos:column="9">return <expr><operator pos:line="89" pos:column="16">-<pos:position pos:line="89" pos:column="17"/></operator><literal type="number" pos:line="89" pos:column="17">1<pos:position pos:line="89" pos:column="18"/></literal></expr>;<pos:position pos:line="89" pos:column="19"/></return>
      }<pos:position pos:line="90" pos:column="8"/></block></else></if>
    }<pos:position pos:line="91" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="92" pos:column="5">sfree<pos:position pos:line="92" pos:column="10"/></name><argument_list pos:line="92" pos:column="10">(<argument><expr><name pos:line="92" pos:column="11">value_copy<pos:position pos:line="92" pos:column="21"/></name></expr></argument>)<pos:position pos:line="92" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="23"/></expr_stmt>

    <for pos:line="94" pos:column="5">for <control pos:line="94" pos:column="9">(<init><decl><type><name pos:line="94" pos:column="10">int<pos:position pos:line="94" pos:column="13"/></name></type> <name pos:line="94" pos:column="14">i<pos:position pos:line="94" pos:column="15"/></name> <init pos:line="94" pos:column="16">= <expr><name pos:line="94" pos:column="18">n<pos:position pos:line="94" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="94" pos:column="20"/></init> <condition><expr><name pos:line="94" pos:column="21">i<pos:position pos:line="94" pos:column="22"/></name> <operator pos:line="94" pos:column="23">&lt;<pos:position pos:line="94" pos:column="27"/></operator> <name pos:line="94" pos:column="25">HF_MAX_FIELDS<pos:position pos:line="94" pos:column="38"/></name></expr>;<pos:position pos:line="94" pos:column="39"/></condition> <incr><expr><operator pos:line="94" pos:column="40">++<pos:position pos:line="94" pos:column="42"/></operator><name pos:line="94" pos:column="42">i<pos:position pos:line="94" pos:column="43"/></name></expr></incr>)<pos:position pos:line="94" pos:column="44"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="7">hostname_format<pos:position pos:line="95" pos:column="22"/></name><index pos:line="95" pos:column="22">[<expr><name pos:line="95" pos:column="23">i<pos:position pos:line="95" pos:column="24"/></name></expr>]<pos:position pos:line="95" pos:column="25"/></index></name> <operator pos:line="95" pos:column="26">=<pos:position pos:line="95" pos:column="27"/></operator> <name pos:line="95" pos:column="28">hf_none<pos:position pos:line="95" pos:column="35"/></name></expr>;<pos:position pos:line="95" pos:column="36"/></expr_stmt></block></for>

    <return pos:line="97" pos:column="5">return <expr><literal type="number" pos:line="97" pos:column="12">0<pos:position pos:line="97" pos:column="13"/></literal></expr>;<pos:position pos:line="97" pos:column="14"/></return>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>

  <if pos:line="100" pos:column="3">if <condition pos:line="100" pos:column="6">(<expr><call><name pos:line="100" pos:column="7">strcasecmp<pos:position pos:line="100" pos:column="17"/></name><argument_list pos:line="100" pos:column="17">(<argument><expr><name pos:line="100" pos:column="18">key<pos:position pos:line="100" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="23">"PluginInstanceFormat"<pos:position pos:line="100" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="46"/></argument_list></call> <operator pos:line="100" pos:column="47">==<pos:position pos:line="100" pos:column="49"/></operator> <literal type="number" pos:line="100" pos:column="50">0<pos:position pos:line="100" pos:column="51"/></literal></expr>)<pos:position pos:line="100" pos:column="52"/></condition><then pos:line="100" pos:column="52"> <block pos:line="100" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="101" pos:column="5">char<pos:position pos:line="101" pos:column="9"/></name> <modifier pos:line="101" pos:column="10">*<pos:position pos:line="101" pos:column="11"/></modifier></type><name pos:line="101" pos:column="11">value_copy<pos:position pos:line="101" pos:column="21"/></name></decl>;<pos:position pos:line="101" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="102" pos:column="5">char<pos:position pos:line="102" pos:column="9"/></name> <modifier pos:line="102" pos:column="10">*<pos:position pos:line="102" pos:column="11"/></modifier></type><name><name pos:line="102" pos:column="11">fields<pos:position pos:line="102" pos:column="17"/></name><index pos:line="102" pos:column="17">[<expr><name pos:line="102" pos:column="18">PLGINST_MAX_FIELDS<pos:position pos:line="102" pos:column="36"/></name></expr>]<pos:position pos:line="102" pos:column="37"/></index></name></decl>;<pos:position pos:line="102" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="103" pos:column="5">int<pos:position pos:line="103" pos:column="8"/></name></type> <name pos:line="103" pos:column="9">n<pos:position pos:line="103" pos:column="10"/></name></decl>;<pos:position pos:line="103" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="105" pos:column="5">value_copy<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <call><name pos:line="105" pos:column="18">strdup<pos:position pos:line="105" pos:column="24"/></name><argument_list pos:line="105" pos:column="24">(<argument><expr><name pos:line="105" pos:column="25">value<pos:position pos:line="105" pos:column="30"/></name></expr></argument>)<pos:position pos:line="105" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="32"/></expr_stmt>
    <if pos:line="106" pos:column="5">if <condition pos:line="106" pos:column="8">(<expr><name pos:line="106" pos:column="9">value_copy<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">==<pos:position pos:line="106" pos:column="22"/></operator> <name pos:line="106" pos:column="23">NULL<pos:position pos:line="106" pos:column="27"/></name></expr>)<pos:position pos:line="106" pos:column="28"/></condition><then pos:line="106" pos:column="28"> <block pos:line="106" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">ERROR<pos:position pos:line="107" pos:column="12"/></name><argument_list pos:line="107" pos:column="12">(<argument><expr><name pos:line="107" pos:column="13">PLUGIN_NAME<pos:position pos:line="107" pos:column="24"/></name> <literal type="string" pos:line="107" pos:column="25">" plugin: strdup failed."<pos:position pos:line="107" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="52"/></expr_stmt>
      <return pos:line="108" pos:column="7">return <expr><operator pos:line="108" pos:column="14">-<pos:position pos:line="108" pos:column="15"/></operator><literal type="number" pos:line="108" pos:column="15">1<pos:position pos:line="108" pos:column="16"/></literal></expr>;<pos:position pos:line="108" pos:column="17"/></return>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="111" pos:column="5">n<pos:position pos:line="111" pos:column="6"/></name> <operator pos:line="111" pos:column="7">=<pos:position pos:line="111" pos:column="8"/></operator> <call><name pos:line="111" pos:column="9">strsplit<pos:position pos:line="111" pos:column="17"/></name><argument_list pos:line="111" pos:column="17">(<argument><expr><name pos:line="111" pos:column="18">value_copy<pos:position pos:line="111" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="30">fields<pos:position pos:line="111" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="38">PLGINST_MAX_FIELDS<pos:position pos:line="111" pos:column="56"/></name></expr></argument>)<pos:position pos:line="111" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="58"/></expr_stmt>
    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">n<pos:position pos:line="112" pos:column="10"/></name> <operator pos:line="112" pos:column="11">&lt;<pos:position pos:line="112" pos:column="15"/></operator> <literal type="number" pos:line="112" pos:column="13">1<pos:position pos:line="112" pos:column="14"/></literal></expr>)<pos:position pos:line="112" pos:column="15"/></condition><then pos:line="112" pos:column="15"> <block pos:line="112" pos:column="16">{
      <expr_stmt><expr><call><name pos:line="113" pos:column="7">sfree<pos:position pos:line="113" pos:column="12"/></name><argument_list pos:line="113" pos:column="12">(<argument><expr><name pos:line="113" pos:column="13">value_copy<pos:position pos:line="113" pos:column="23"/></name></expr></argument>)<pos:position pos:line="113" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="114" pos:column="7">ERROR<pos:position pos:line="114" pos:column="12"/></name><argument_list pos:line="114" pos:column="12">(<argument><expr><name pos:line="114" pos:column="13">PLUGIN_NAME<pos:position pos:line="114" pos:column="24"/></name> <literal type="string" pos:line="114" pos:column="25">" plugin: PluginInstanceFormat: no fields"<pos:position pos:line="114" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="69"/></expr_stmt>
      <return pos:line="115" pos:column="7">return <expr><operator pos:line="115" pos:column="14">-<pos:position pos:line="115" pos:column="15"/></operator><literal type="number" pos:line="115" pos:column="15">1<pos:position pos:line="115" pos:column="16"/></literal></expr>;<pos:position pos:line="115" pos:column="17"/></return>
    }<pos:position pos:line="116" pos:column="6"/></block></then></if>

    <for pos:line="118" pos:column="5">for <control pos:line="118" pos:column="9">(<init><decl><type><name pos:line="118" pos:column="10">int<pos:position pos:line="118" pos:column="13"/></name></type> <name pos:line="118" pos:column="14">i<pos:position pos:line="118" pos:column="15"/></name> <init pos:line="118" pos:column="16">= <expr><literal type="number" pos:line="118" pos:column="18">0<pos:position pos:line="118" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="118" pos:column="20"/></init> <condition><expr><name pos:line="118" pos:column="21">i<pos:position pos:line="118" pos:column="22"/></name> <operator pos:line="118" pos:column="23">&lt;<pos:position pos:line="118" pos:column="27"/></operator> <name pos:line="118" pos:column="25">n<pos:position pos:line="118" pos:column="26"/></name></expr>;<pos:position pos:line="118" pos:column="27"/></condition> <incr><expr><operator pos:line="118" pos:column="28">++<pos:position pos:line="118" pos:column="30"/></operator><name pos:line="118" pos:column="30">i<pos:position pos:line="118" pos:column="31"/></name></expr></incr>)<pos:position pos:line="118" pos:column="32"/></control> <block pos:line="118" pos:column="33">{
      <if pos:line="119" pos:column="7">if <condition pos:line="119" pos:column="10">(<expr><call><name pos:line="119" pos:column="11">strcasecmp<pos:position pos:line="119" pos:column="21"/></name><argument_list pos:line="119" pos:column="21">(<argument><expr><name><name pos:line="119" pos:column="22">fields<pos:position pos:line="119" pos:column="28"/></name><index pos:line="119" pos:column="28">[<expr><name pos:line="119" pos:column="29">i<pos:position pos:line="119" pos:column="30"/></name></expr>]<pos:position pos:line="119" pos:column="31"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="33">"none"<pos:position pos:line="119" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="40"/></argument_list></call> <operator pos:line="119" pos:column="41">==<pos:position pos:line="119" pos:column="43"/></operator> <literal type="number" pos:line="119" pos:column="44">0<pos:position pos:line="119" pos:column="45"/></literal></expr>)<pos:position pos:line="119" pos:column="46"/></condition><then pos:line="119" pos:column="46"> <block pos:line="119" pos:column="47">{
        <expr_stmt><expr><name><name pos:line="120" pos:column="9">plugin_instance_format<pos:position pos:line="120" pos:column="31"/></name><index pos:line="120" pos:column="31">[<expr><name pos:line="120" pos:column="32">i<pos:position pos:line="120" pos:column="33"/></name></expr>]<pos:position pos:line="120" pos:column="34"/></index></name> <operator pos:line="120" pos:column="35">=<pos:position pos:line="120" pos:column="36"/></operator> <name pos:line="120" pos:column="37">plginst_none<pos:position pos:line="120" pos:column="49"/></name></expr>;<pos:position pos:line="120" pos:column="50"/></expr_stmt>
        <break pos:line="121" pos:column="9">break;<pos:position pos:line="121" pos:column="15"/></break>
      }<pos:position pos:line="122" pos:column="8"/></block></then> <elseif pos:line="122" pos:column="9">else <if pos:line="122" pos:column="14">if <condition pos:line="122" pos:column="17">(<expr><call><name pos:line="122" pos:column="18">strcasecmp<pos:position pos:line="122" pos:column="28"/></name><argument_list pos:line="122" pos:column="28">(<argument><expr><name><name pos:line="122" pos:column="29">fields<pos:position pos:line="122" pos:column="35"/></name><index pos:line="122" pos:column="35">[<expr><name pos:line="122" pos:column="36">i<pos:position pos:line="122" pos:column="37"/></name></expr>]<pos:position pos:line="122" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="40">"name"<pos:position pos:line="122" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="47"/></argument_list></call> <operator pos:line="122" pos:column="48">==<pos:position pos:line="122" pos:column="50"/></operator> <literal type="number" pos:line="122" pos:column="51">0<pos:position pos:line="122" pos:column="52"/></literal></expr>)<pos:position pos:line="122" pos:column="53"/></condition><then pos:line="122" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="123" pos:column="9">plugin_instance_format<pos:position pos:line="123" pos:column="31"/></name><index pos:line="123" pos:column="31">[<expr><name pos:line="123" pos:column="32">i<pos:position pos:line="123" pos:column="33"/></name></expr>]<pos:position pos:line="123" pos:column="34"/></index></name> <operator pos:line="123" pos:column="35">=<pos:position pos:line="123" pos:column="36"/></operator> <name pos:line="123" pos:column="37">plginst_name<pos:position pos:line="123" pos:column="49"/></name></expr>;<pos:position pos:line="123" pos:column="50"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="124" pos:column="7">else <if pos:line="124" pos:column="12">if <condition pos:line="124" pos:column="15">(<expr><call><name pos:line="124" pos:column="16">strcasecmp<pos:position pos:line="124" pos:column="26"/></name><argument_list pos:line="124" pos:column="26">(<argument><expr><name><name pos:line="124" pos:column="27">fields<pos:position pos:line="124" pos:column="33"/></name><index pos:line="124" pos:column="33">[<expr><name pos:line="124" pos:column="34">i<pos:position pos:line="124" pos:column="35"/></name></expr>]<pos:position pos:line="124" pos:column="36"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="38">"uuid"<pos:position pos:line="124" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="45"/></argument_list></call> <operator pos:line="124" pos:column="46">==<pos:position pos:line="124" pos:column="48"/></operator> <literal type="number" pos:line="124" pos:column="49">0<pos:position pos:line="124" pos:column="50"/></literal></expr>)<pos:position pos:line="124" pos:column="51"/></condition><then pos:line="124" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="125" pos:column="9">plugin_instance_format<pos:position pos:line="125" pos:column="31"/></name><index pos:line="125" pos:column="31">[<expr><name pos:line="125" pos:column="32">i<pos:position pos:line="125" pos:column="33"/></name></expr>]<pos:position pos:line="125" pos:column="34"/></index></name> <operator pos:line="125" pos:column="35">=<pos:position pos:line="125" pos:column="36"/></operator> <name pos:line="125" pos:column="37">plginst_uuid<pos:position pos:line="125" pos:column="49"/></name></expr>;<pos:position pos:line="125" pos:column="50"/></expr_stmt></block></then></if></elseif>
      <else pos:line="126" pos:column="7">else <block pos:line="126" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">ERROR<pos:position pos:line="127" pos:column="14"/></name><argument_list pos:line="127" pos:column="14">(<argument><expr><name pos:line="127" pos:column="15">PLUGIN_NAME<pos:position pos:line="127" pos:column="26"/></name> <literal type="string" pos:line="127" pos:column="27">" plugin: unknown PluginInstanceFormat field: %s"<pos:position pos:line="127" pos:column="76"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="128" pos:column="15">fields<pos:position pos:line="128" pos:column="21"/></name><index pos:line="128" pos:column="21">[<expr><name pos:line="128" pos:column="22">i<pos:position pos:line="128" pos:column="23"/></name></expr>]<pos:position pos:line="128" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="128" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">sfree<pos:position pos:line="129" pos:column="14"/></name><argument_list pos:line="129" pos:column="14">(<argument><expr><name pos:line="129" pos:column="15">value_copy<pos:position pos:line="129" pos:column="25"/></name></expr></argument>)<pos:position pos:line="129" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="27"/></expr_stmt>
        <return pos:line="130" pos:column="9">return <expr><operator pos:line="130" pos:column="16">-<pos:position pos:line="130" pos:column="17"/></operator><literal type="number" pos:line="130" pos:column="17">1<pos:position pos:line="130" pos:column="18"/></literal></expr>;<pos:position pos:line="130" pos:column="19"/></return>
      }<pos:position pos:line="131" pos:column="8"/></block></else></if>
    }<pos:position pos:line="132" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">sfree<pos:position pos:line="133" pos:column="10"/></name><argument_list pos:line="133" pos:column="10">(<argument><expr><name pos:line="133" pos:column="11">value_copy<pos:position pos:line="133" pos:column="21"/></name></expr></argument>)<pos:position pos:line="133" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="23"/></expr_stmt>

    <for pos:line="135" pos:column="5">for <control pos:line="135" pos:column="9">(<init><decl><type><name pos:line="135" pos:column="10">int<pos:position pos:line="135" pos:column="13"/></name></type> <name pos:line="135" pos:column="14">i<pos:position pos:line="135" pos:column="15"/></name> <init pos:line="135" pos:column="16">= <expr><name pos:line="135" pos:column="18">n<pos:position pos:line="135" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="135" pos:column="20"/></init> <condition><expr><name pos:line="135" pos:column="21">i<pos:position pos:line="135" pos:column="22"/></name> <operator pos:line="135" pos:column="23">&lt;<pos:position pos:line="135" pos:column="27"/></operator> <name pos:line="135" pos:column="25">PLGINST_MAX_FIELDS<pos:position pos:line="135" pos:column="43"/></name></expr>;<pos:position pos:line="135" pos:column="44"/></condition> <incr><expr><operator pos:line="135" pos:column="45">++<pos:position pos:line="135" pos:column="47"/></operator><name pos:line="135" pos:column="47">i<pos:position pos:line="135" pos:column="48"/></name></expr></incr>)<pos:position pos:line="135" pos:column="49"/></control>
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="7">plugin_instance_format<pos:position pos:line="136" pos:column="29"/></name><index pos:line="136" pos:column="29">[<expr><name pos:line="136" pos:column="30">i<pos:position pos:line="136" pos:column="31"/></name></expr>]<pos:position pos:line="136" pos:column="32"/></index></name> <operator pos:line="136" pos:column="33">=<pos:position pos:line="136" pos:column="34"/></operator> <name pos:line="136" pos:column="35">plginst_none<pos:position pos:line="136" pos:column="47"/></name></expr>;<pos:position pos:line="136" pos:column="48"/></expr_stmt></block></for>

    <return pos:line="138" pos:column="5">return <expr><literal type="number" pos:line="138" pos:column="12">0<pos:position pos:line="138" pos:column="13"/></literal></expr>;<pos:position pos:line="138" pos:column="14"/></return>
  }<pos:position pos:line="139" pos:column="4"/></block></then></if>

  <if pos:line="141" pos:column="3">if <condition pos:line="141" pos:column="6">(<expr><call><name pos:line="141" pos:column="7">strcasecmp<pos:position pos:line="141" pos:column="17"/></name><argument_list pos:line="141" pos:column="17">(<argument><expr><name pos:line="141" pos:column="18">key<pos:position pos:line="141" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="23">"InterfaceFormat"<pos:position pos:line="141" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="41"/></argument_list></call> <operator pos:line="141" pos:column="42">==<pos:position pos:line="141" pos:column="44"/></operator> <literal type="number" pos:line="141" pos:column="45">0<pos:position pos:line="141" pos:column="46"/></literal></expr>)<pos:position pos:line="141" pos:column="47"/></condition><then pos:line="141" pos:column="47"> <block pos:line="141" pos:column="48">{
    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><call><name pos:line="142" pos:column="9">strcasecmp<pos:position pos:line="142" pos:column="19"/></name><argument_list pos:line="142" pos:column="19">(<argument><expr><name pos:line="142" pos:column="20">value<pos:position pos:line="142" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="27">"name"<pos:position pos:line="142" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="34"/></argument_list></call> <operator pos:line="142" pos:column="35">==<pos:position pos:line="142" pos:column="37"/></operator> <literal type="number" pos:line="142" pos:column="38">0<pos:position pos:line="142" pos:column="39"/></literal></expr>)<pos:position pos:line="142" pos:column="40"/></condition><then pos:line="142" pos:column="40">
      <block type="pseudo"><expr_stmt><expr><name pos:line="143" pos:column="7">interface_format<pos:position pos:line="143" pos:column="23"/></name> <operator pos:line="143" pos:column="24">=<pos:position pos:line="143" pos:column="25"/></operator> <name pos:line="143" pos:column="26">if_name<pos:position pos:line="143" pos:column="33"/></name></expr>;<pos:position pos:line="143" pos:column="34"/></expr_stmt></block></then>
    <elseif pos:line="144" pos:column="5">else <if pos:line="144" pos:column="10">if <condition pos:line="144" pos:column="13">(<expr><call><name pos:line="144" pos:column="14">strcasecmp<pos:position pos:line="144" pos:column="24"/></name><argument_list pos:line="144" pos:column="24">(<argument><expr><name pos:line="144" pos:column="25">value<pos:position pos:line="144" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="32">"address"<pos:position pos:line="144" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="42"/></argument_list></call> <operator pos:line="144" pos:column="43">==<pos:position pos:line="144" pos:column="45"/></operator> <literal type="number" pos:line="144" pos:column="46">0<pos:position pos:line="144" pos:column="47"/></literal></expr>)<pos:position pos:line="144" pos:column="48"/></condition><then pos:line="144" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><name pos:line="145" pos:column="7">interface_format<pos:position pos:line="145" pos:column="23"/></name> <operator pos:line="145" pos:column="24">=<pos:position pos:line="145" pos:column="25"/></operator> <name pos:line="145" pos:column="26">if_address<pos:position pos:line="145" pos:column="36"/></name></expr>;<pos:position pos:line="145" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="146" pos:column="5">else <if pos:line="146" pos:column="10">if <condition pos:line="146" pos:column="13">(<expr><call><name pos:line="146" pos:column="14">strcasecmp<pos:position pos:line="146" pos:column="24"/></name><argument_list pos:line="146" pos:column="24">(<argument><expr><name pos:line="146" pos:column="25">value<pos:position pos:line="146" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="32">"number"<pos:position pos:line="146" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="41"/></argument_list></call> <operator pos:line="146" pos:column="42">==<pos:position pos:line="146" pos:column="44"/></operator> <literal type="number" pos:line="146" pos:column="45">0<pos:position pos:line="146" pos:column="46"/></literal></expr>)<pos:position pos:line="146" pos:column="47"/></condition><then pos:line="146" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="147" pos:column="7">interface_format<pos:position pos:line="147" pos:column="23"/></name> <operator pos:line="147" pos:column="24">=<pos:position pos:line="147" pos:column="25"/></operator> <name pos:line="147" pos:column="26">if_number<pos:position pos:line="147" pos:column="35"/></name></expr>;<pos:position pos:line="147" pos:column="36"/></expr_stmt></block></then></if></elseif>
    <else pos:line="148" pos:column="5">else <block pos:line="148" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="149" pos:column="7">ERROR<pos:position pos:line="149" pos:column="12"/></name><argument_list pos:line="149" pos:column="12">(<argument><expr><name pos:line="149" pos:column="13">PLUGIN_NAME<pos:position pos:line="149" pos:column="24"/></name> <literal type="string" pos:line="149" pos:column="25">" plugin: unknown InterfaceFormat: %s"<pos:position pos:line="149" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="65">value<pos:position pos:line="149" pos:column="70"/></name></expr></argument>)<pos:position pos:line="149" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="72"/></expr_stmt>
      <return pos:line="150" pos:column="7">return <expr><operator pos:line="150" pos:column="14">-<pos:position pos:line="150" pos:column="15"/></operator><literal type="number" pos:line="150" pos:column="15">1<pos:position pos:line="150" pos:column="16"/></literal></expr>;<pos:position pos:line="150" pos:column="17"/></return>
    }<pos:position pos:line="151" pos:column="6"/></block></else></if>
    <return pos:line="152" pos:column="5">return <expr><literal type="number" pos:line="152" pos:column="12">0<pos:position pos:line="152" pos:column="13"/></literal></expr>;<pos:position pos:line="152" pos:column="14"/></return>
  }<pos:position pos:line="153" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="155" pos:column="3">/* Unrecognised option. */</comment>
  <return pos:line="156" pos:column="3">return <expr><operator pos:line="156" pos:column="10">-<pos:position pos:line="156" pos:column="11"/></operator><literal type="number" pos:line="156" pos:column="11">1<pos:position pos:line="156" pos:column="12"/></literal></expr>;<pos:position pos:line="156" pos:column="13"/></return>
}<pos:position pos:line="157" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_535_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_match_target_create<pos:position pos:line="1" pos:column="36"/></name> <parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">oconfig_item_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">ci<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="64">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">void<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier><modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">user_data<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">JNIEnv<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">jvm_env<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cjni_callback_info_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">cbi_ret<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">cjni_callback_info_t<pos:position pos:line="6" pos:column="23"/></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">cbi_factory<pos:position pos:line="6" pos:column="36"/></name></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">name<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">jobject<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">o_ci<pos:position pos:line="8" pos:column="15"/></name></decl>;<pos:position pos:line="8" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">jobject<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">o_tmp<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">type<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">size_t<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name></decl>;<pos:position pos:line="11" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="13" pos:column="3">cbi_ret<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">o_ci<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <name pos:line="14" pos:column="10">NULL<pos:position pos:line="14" pos:column="14"/></name></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">jvm_env<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">NULL<pos:position pos:line="15" pos:column="17"/></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>

<cpp:define pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">define<pos:position pos:line="17" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="17" pos:column="9">BAIL_OUT<pos:position pos:line="17" pos:column="17"/></name><parameter_list pos:line="17" pos:column="17">(<parameter><type><name pos:line="17" pos:column="18">status<pos:position pos:line="17" pos:column="24"/></name></type></parameter>)<pos:position pos:line="17" pos:column="25"/></parameter_list></cpp:macro> \
  <cpp:value pos:line="18" pos:column="3">if (cbi_ret != NULL) { \
    free (cbi_ret-&gt;name); \
    if ((jvm_env != NULL) &amp;&amp; (cbi_ret-&gt;object != NULL)) \
      (*jvm_env)-&gt;DeleteLocalRef (jvm_env, cbi_ret-&gt;object); \
  } \
  free (cbi_ret); \
  if (jvm_env != NULL) { \
    if (o_ci != NULL) \
      (*jvm_env)-&gt;DeleteLocalRef (jvm_env, o_ci); \
    cjni_thread_detach (); \
  } \
  return (status)<pos:position pos:line="29" pos:column="18"/></cpp:value></cpp:define>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">jvm<pos:position pos:line="31" pos:column="10"/></name> <operator pos:line="31" pos:column="11">==<pos:position pos:line="31" pos:column="13"/></operator> <name pos:line="31" pos:column="14">NULL<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19">
  <block pos:line="32" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">ERROR<pos:position pos:line="33" pos:column="10"/></name> <argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="string" pos:line="33" pos:column="12">"java plugin: cjni_read: jvm == NULL"<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">BAIL_OUT<pos:position pos:line="34" pos:column="13"/></name> <argument_list pos:line="34" pos:column="14">(<argument><expr><operator pos:line="34" pos:column="15">-<pos:position pos:line="34" pos:column="16"/></operator><literal type="number" pos:line="34" pos:column="16">1<pos:position pos:line="34" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="37" pos:column="3">jvm_env<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <call><name pos:line="37" pos:column="13">cjni_thread_attach<pos:position pos:line="37" pos:column="31"/></name> <argument_list pos:line="37" pos:column="32">()<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><name pos:line="38" pos:column="7">jvm_env<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">==<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">NULL<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23">
  <block pos:line="39" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">BAIL_OUT<pos:position pos:line="40" pos:column="13"/></name> <argument_list pos:line="40" pos:column="14">(<argument><expr><operator pos:line="40" pos:column="15">-<pos:position pos:line="40" pos:column="16"/></operator><literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Find out whether to create a match or a target. */</comment>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><call><name pos:line="44" pos:column="7">strcasecmp<pos:position pos:line="44" pos:column="17"/></name> <argument_list pos:line="44" pos:column="18">(<argument><expr><literal type="string" pos:line="44" pos:column="19">"Match"<pos:position pos:line="44" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="28">ci<pos:position pos:line="44" pos:column="30"/></name><operator pos:line="44" pos:column="30">-&gt;<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="32">key<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call> <operator pos:line="44" pos:column="37">==<pos:position pos:line="44" pos:column="39"/></operator> <literal type="number" pos:line="44" pos:column="40">0<pos:position pos:line="44" pos:column="41"/></literal></expr>)<pos:position pos:line="44" pos:column="42"/></condition><then pos:line="44" pos:column="42">
    <block type="pseudo"><expr_stmt><expr><name pos:line="45" pos:column="5">type<pos:position pos:line="45" pos:column="9"/></name> <operator pos:line="45" pos:column="10">=<pos:position pos:line="45" pos:column="11"/></operator> <name pos:line="45" pos:column="12">CB_TYPE_MATCH<pos:position pos:line="45" pos:column="25"/></name></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt></block></then>
  <elseif pos:line="46" pos:column="3">else <if pos:line="46" pos:column="8">if <condition pos:line="46" pos:column="11">(<expr><call><name pos:line="46" pos:column="12">strcasecmp<pos:position pos:line="46" pos:column="22"/></name> <argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="string" pos:line="46" pos:column="24">"Target"<pos:position pos:line="46" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="34">ci<pos:position pos:line="46" pos:column="36"/></name><operator pos:line="46" pos:column="36">-&gt;<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="38">key<pos:position pos:line="46" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call> <operator pos:line="46" pos:column="43">==<pos:position pos:line="46" pos:column="45"/></operator> <literal type="number" pos:line="46" pos:column="46">0<pos:position pos:line="46" pos:column="47"/></literal></expr>)<pos:position pos:line="46" pos:column="48"/></condition><then pos:line="46" pos:column="48">
    <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="5">type<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">=<pos:position pos:line="47" pos:column="11"/></operator> <name pos:line="47" pos:column="12">CB_TYPE_TARGET<pos:position pos:line="47" pos:column="26"/></name></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt></block></then></if></elseif>
  <else pos:line="48" pos:column="3">else
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">ERROR<pos:position pos:line="50" pos:column="10"/></name> <argument_list pos:line="50" pos:column="11">(<argument><expr><literal type="string" pos:line="50" pos:column="12">"java plugin: cjni_match_target_create: Can't figure out whether "<pos:position pos:line="50" pos:column="78"/></literal>
        <literal type="string" pos:line="51" pos:column="9">"to create a match or a target."<pos:position pos:line="51" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">BAIL_OUT<pos:position pos:line="52" pos:column="13"/></name> <argument_list pos:line="52" pos:column="14">(<argument><expr><operator pos:line="52" pos:column="15">-<pos:position pos:line="52" pos:column="16"/></operator><literal type="number" pos:line="52" pos:column="16">1<pos:position pos:line="52" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="53" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="55" pos:column="3">/* This is the name of the match we should create. */</comment>
  <expr_stmt><expr><name pos:line="56" pos:column="3">name<pos:position pos:line="56" pos:column="7"/></name> <operator pos:line="56" pos:column="8">=<pos:position pos:line="56" pos:column="9"/></operator> <name><name pos:line="56" pos:column="10">ci<pos:position pos:line="56" pos:column="12"/></name><operator pos:line="56" pos:column="12">-&gt;<pos:position pos:line="56" pos:column="17"/></operator><name pos:line="56" pos:column="14">values<pos:position pos:line="56" pos:column="20"/></name><index pos:line="56" pos:column="20">[<expr><literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr>]<pos:position pos:line="56" pos:column="23"/></index></name><operator pos:line="56" pos:column="23">.<pos:position pos:line="56" pos:column="24"/></operator><name><name pos:line="56" pos:column="24">value<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">.<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">string<pos:position pos:line="56" pos:column="36"/></name></name></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="58" pos:column="3">/* Lets see if we have a matching factory here.. */</comment>
  <expr_stmt><expr><name pos:line="59" pos:column="3">cbi_factory<pos:position pos:line="59" pos:column="14"/></name> <operator pos:line="59" pos:column="15">=<pos:position pos:line="59" pos:column="16"/></operator> <name pos:line="59" pos:column="17">NULL<pos:position pos:line="59" pos:column="21"/></name></expr>;<pos:position pos:line="59" pos:column="22"/></expr_stmt>
  <for pos:line="60" pos:column="3">for <control pos:line="60" pos:column="7">(<init><expr><name pos:line="60" pos:column="8">i<pos:position pos:line="60" pos:column="9"/></name> <operator pos:line="60" pos:column="10">=<pos:position pos:line="60" pos:column="11"/></operator> <literal type="number" pos:line="60" pos:column="12">0<pos:position pos:line="60" pos:column="13"/></literal></expr>;<pos:position pos:line="60" pos:column="14"/></init> <condition><expr><name pos:line="60" pos:column="15">i<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">&lt;<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="19">java_callbacks_num<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></condition> <incr><expr><name pos:line="60" pos:column="39">i<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">++<pos:position pos:line="60" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="60" pos:column="43"/></control>
  <block pos:line="61" pos:column="3">{
    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">java_callbacks<pos:position pos:line="62" pos:column="23"/></name><index pos:line="62" pos:column="23">[<expr><name pos:line="62" pos:column="24">i<pos:position pos:line="62" pos:column="25"/></name></expr>]<pos:position pos:line="62" pos:column="26"/></index></name><operator pos:line="62" pos:column="26">.<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">type<pos:position pos:line="62" pos:column="31"/></name> <operator pos:line="62" pos:column="32">!=<pos:position pos:line="62" pos:column="34"/></operator> <name pos:line="62" pos:column="35">type<pos:position pos:line="62" pos:column="39"/></name></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40">
      <block type="pseudo"><continue pos:line="63" pos:column="7">continue;<pos:position pos:line="63" pos:column="16"/></continue></block></then></if>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><call><name pos:line="65" pos:column="9">strcmp<pos:position pos:line="65" pos:column="15"/></name> <argument_list pos:line="65" pos:column="16">(<argument><expr><name pos:line="65" pos:column="17">name<pos:position pos:line="65" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="23">java_callbacks<pos:position pos:line="65" pos:column="37"/></name><index pos:line="65" pos:column="37">[<expr><name pos:line="65" pos:column="38">i<pos:position pos:line="65" pos:column="39"/></name></expr>]<pos:position pos:line="65" pos:column="40"/></index></name><operator pos:line="65" pos:column="40">.<pos:position pos:line="65" pos:column="41"/></operator><name pos:line="65" pos:column="41">name<pos:position pos:line="65" pos:column="45"/></name></expr></argument>)<pos:position pos:line="65" pos:column="46"/></argument_list></call> <operator pos:line="65" pos:column="47">!=<pos:position pos:line="65" pos:column="49"/></operator> <literal type="number" pos:line="65" pos:column="50">0<pos:position pos:line="65" pos:column="51"/></literal></expr>)<pos:position pos:line="65" pos:column="52"/></condition><then pos:line="65" pos:column="52">
      <block type="pseudo"><continue pos:line="66" pos:column="7">continue;<pos:position pos:line="66" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="68" pos:column="5">cbi_factory<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <name pos:line="68" pos:column="19">java_callbacks<pos:position pos:line="68" pos:column="33"/></name> <operator pos:line="68" pos:column="34">+<pos:position pos:line="68" pos:column="35"/></operator> <name pos:line="68" pos:column="36">i<pos:position pos:line="68" pos:column="37"/></name></expr>;<pos:position pos:line="68" pos:column="38"/></expr_stmt>
    <break pos:line="69" pos:column="5">break;<pos:position pos:line="69" pos:column="11"/></break>
  }<pos:position pos:line="70" pos:column="4"/></block></for>

  <comment type="block" pos:line="72" pos:column="3">/* Nope, no factory for that name.. */</comment>
  <if pos:line="73" pos:column="3">if <condition pos:line="73" pos:column="6">(<expr><name pos:line="73" pos:column="7">cbi_factory<pos:position pos:line="73" pos:column="18"/></name> <operator pos:line="73" pos:column="19">==<pos:position pos:line="73" pos:column="21"/></operator> <name pos:line="73" pos:column="22">NULL<pos:position pos:line="73" pos:column="26"/></name></expr>)<pos:position pos:line="73" pos:column="27"/></condition><then pos:line="73" pos:column="27">
  <block pos:line="74" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">ERROR<pos:position pos:line="75" pos:column="10"/></name> <argument_list pos:line="75" pos:column="11">(<argument><expr><literal type="string" pos:line="75" pos:column="12">"java plugin: cjni_match_target_create: "<pos:position pos:line="75" pos:column="53"/></literal>
        <literal type="string" pos:line="76" pos:column="9">"No such match factory registered: %s"<pos:position pos:line="76" pos:column="47"/></literal></expr></argument>,
        <argument><expr><name pos:line="77" pos:column="9">name<pos:position pos:line="77" pos:column="13"/></name></expr></argument>)<pos:position pos:line="77" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">BAIL_OUT<pos:position pos:line="78" pos:column="13"/></name> <argument_list pos:line="78" pos:column="14">(<argument><expr><operator pos:line="78" pos:column="15">-<pos:position pos:line="78" pos:column="16"/></operator><literal type="number" pos:line="78" pos:column="16">1<pos:position pos:line="78" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="79" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="81" pos:column="3">/* We convert `ci' to its Java equivalent.. */</comment>
  <expr_stmt><expr><name pos:line="82" pos:column="3">o_ci<pos:position pos:line="82" pos:column="7"/></name> <operator pos:line="82" pos:column="8">=<pos:position pos:line="82" pos:column="9"/></operator> <call><name pos:line="82" pos:column="10">ctoj_oconfig_item<pos:position pos:line="82" pos:column="27"/></name> <argument_list pos:line="82" pos:column="28">(<argument><expr><name pos:line="82" pos:column="29">jvm_env<pos:position pos:line="82" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="38">ci<pos:position pos:line="82" pos:column="40"/></name></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="42"/></expr_stmt>
  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><name pos:line="83" pos:column="7">o_ci<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">==<pos:position pos:line="83" pos:column="14"/></operator> <name pos:line="83" pos:column="15">NULL<pos:position pos:line="83" pos:column="19"/></name></expr>)<pos:position pos:line="83" pos:column="20"/></condition><then pos:line="83" pos:column="20">
  <block pos:line="84" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">ERROR<pos:position pos:line="85" pos:column="10"/></name> <argument_list pos:line="85" pos:column="11">(<argument><expr><literal type="string" pos:line="85" pos:column="12">"java plugin: cjni_match_target_create: "<pos:position pos:line="85" pos:column="53"/></literal>
        <literal type="string" pos:line="86" pos:column="9">"ctoj_oconfig_item failed."<pos:position pos:line="86" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">BAIL_OUT<pos:position pos:line="87" pos:column="13"/></name> <argument_list pos:line="87" pos:column="14">(<argument><expr><operator pos:line="87" pos:column="15">-<pos:position pos:line="87" pos:column="16"/></operator><literal type="number" pos:line="87" pos:column="16">1<pos:position pos:line="87" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="90" pos:column="3">/* Allocate a new callback info structure. This is going to be our user_data
   * pointer. */</comment>
  <expr_stmt><expr><name pos:line="92" pos:column="3">cbi_ret<pos:position pos:line="92" pos:column="10"/></name> <operator pos:line="92" pos:column="11">=<pos:position pos:line="92" pos:column="12"/></operator> <operator pos:line="92" pos:column="13">(<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">cjni_callback_info_t<pos:position pos:line="92" pos:column="34"/></name> <operator pos:line="92" pos:column="35">*<pos:position pos:line="92" pos:column="36"/></operator><operator pos:line="92" pos:column="36">)<pos:position pos:line="92" pos:column="37"/></operator> <call><name pos:line="92" pos:column="38">malloc<pos:position pos:line="92" pos:column="44"/></name> <argument_list pos:line="92" pos:column="45">(<argument><expr><sizeof pos:line="92" pos:column="46">sizeof <argument_list pos:line="92" pos:column="53">(<argument><expr><operator pos:line="92" pos:column="54">*<pos:position pos:line="92" pos:column="55"/></operator><name pos:line="92" pos:column="55">cbi_ret<pos:position pos:line="92" pos:column="62"/></name></expr></argument>)<pos:position pos:line="92" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="92" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="65"/></expr_stmt>
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name pos:line="93" pos:column="7">cbi_ret<pos:position pos:line="93" pos:column="14"/></name> <operator pos:line="93" pos:column="15">==<pos:position pos:line="93" pos:column="17"/></operator> <name pos:line="93" pos:column="18">NULL<pos:position pos:line="93" pos:column="22"/></name></expr>)<pos:position pos:line="93" pos:column="23"/></condition><then pos:line="93" pos:column="23">
  <block pos:line="94" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">ERROR<pos:position pos:line="95" pos:column="10"/></name> <argument_list pos:line="95" pos:column="11">(<argument><expr><literal type="string" pos:line="95" pos:column="12">"java plugin: cjni_match_target_create: malloc failed."<pos:position pos:line="95" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">BAIL_OUT<pos:position pos:line="96" pos:column="13"/></name> <argument_list pos:line="96" pos:column="14">(<argument><expr><operator pos:line="96" pos:column="15">-<pos:position pos:line="96" pos:column="16"/></operator><literal type="number" pos:line="96" pos:column="16">1<pos:position pos:line="96" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="97" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="98" pos:column="3">memset<pos:position pos:line="98" pos:column="9"/></name> <argument_list pos:line="98" pos:column="10">(<argument><expr><name pos:line="98" pos:column="11">cbi_ret<pos:position pos:line="98" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="20">0<pos:position pos:line="98" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="98" pos:column="23">sizeof <argument_list pos:line="98" pos:column="30">(<argument><expr><operator pos:line="98" pos:column="31">*<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="32">cbi_ret<pos:position pos:line="98" pos:column="39"/></name></expr></argument>)<pos:position pos:line="98" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="98" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="99" pos:column="3">cbi_ret<pos:position pos:line="99" pos:column="10"/></name><operator pos:line="99" pos:column="10">-&gt;<pos:position pos:line="99" pos:column="15"/></operator><name pos:line="99" pos:column="12">object<pos:position pos:line="99" pos:column="18"/></name></name> <operator pos:line="99" pos:column="19">=<pos:position pos:line="99" pos:column="20"/></operator> <name pos:line="99" pos:column="21">NULL<pos:position pos:line="99" pos:column="25"/></name></expr>;<pos:position pos:line="99" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="100" pos:column="3">cbi_ret<pos:position pos:line="100" pos:column="10"/></name><operator pos:line="100" pos:column="10">-&gt;<pos:position pos:line="100" pos:column="15"/></operator><name pos:line="100" pos:column="12">type<pos:position pos:line="100" pos:column="16"/></name></name> <operator pos:line="100" pos:column="17">=<pos:position pos:line="100" pos:column="18"/></operator> <name pos:line="100" pos:column="19">type<pos:position pos:line="100" pos:column="23"/></name></expr>;<pos:position pos:line="100" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="102" pos:column="3">/* Lets fill the callback info structure.. First, the name: */</comment>
  <expr_stmt><expr><name><name pos:line="103" pos:column="3">cbi_ret<pos:position pos:line="103" pos:column="10"/></name><operator pos:line="103" pos:column="10">-&gt;<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="12">name<pos:position pos:line="103" pos:column="16"/></name></name> <operator pos:line="103" pos:column="17">=<pos:position pos:line="103" pos:column="18"/></operator> <call><name pos:line="103" pos:column="19">strdup<pos:position pos:line="103" pos:column="25"/></name> <argument_list pos:line="103" pos:column="26">(<argument><expr><name pos:line="103" pos:column="27">name<pos:position pos:line="103" pos:column="31"/></name></expr></argument>)<pos:position pos:line="103" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="33"/></expr_stmt>
  <if pos:line="104" pos:column="3">if <condition pos:line="104" pos:column="6">(<expr><name><name pos:line="104" pos:column="7">cbi_ret<pos:position pos:line="104" pos:column="14"/></name><operator pos:line="104" pos:column="14">-&gt;<pos:position pos:line="104" pos:column="19"/></operator><name pos:line="104" pos:column="16">name<pos:position pos:line="104" pos:column="20"/></name></name> <operator pos:line="104" pos:column="21">==<pos:position pos:line="104" pos:column="23"/></operator> <name pos:line="104" pos:column="24">NULL<pos:position pos:line="104" pos:column="28"/></name></expr>)<pos:position pos:line="104" pos:column="29"/></condition><then pos:line="104" pos:column="29">
  <block pos:line="105" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">ERROR<pos:position pos:line="106" pos:column="10"/></name> <argument_list pos:line="106" pos:column="11">(<argument><expr><literal type="string" pos:line="106" pos:column="12">"java plugin: cjni_match_target_create: strdup failed."<pos:position pos:line="106" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">BAIL_OUT<pos:position pos:line="107" pos:column="13"/></name> <argument_list pos:line="107" pos:column="14">(<argument><expr><operator pos:line="107" pos:column="15">-<pos:position pos:line="107" pos:column="16"/></operator><literal type="number" pos:line="107" pos:column="16">1<pos:position pos:line="107" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="108" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="110" pos:column="3">/* Then call the factory method so it creates a new object for us. */</comment>
  <expr_stmt><expr><name pos:line="111" pos:column="3">o_tmp<pos:position pos:line="111" pos:column="8"/></name> <operator pos:line="111" pos:column="9">=<pos:position pos:line="111" pos:column="10"/></operator> <call><name><operator pos:line="111" pos:column="11">(<pos:position pos:line="111" pos:column="12"/></operator><operator pos:line="111" pos:column="12">*<pos:position pos:line="111" pos:column="13"/></operator><name pos:line="111" pos:column="13">jvm_env<pos:position pos:line="111" pos:column="20"/></name><operator pos:line="111" pos:column="20">)<pos:position pos:line="111" pos:column="21"/></operator><operator pos:line="111" pos:column="21">-&gt;<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="23">CallObjectMethod<pos:position pos:line="111" pos:column="39"/></name></name> <argument_list pos:line="111" pos:column="40">(<argument><expr><name pos:line="111" pos:column="41">jvm_env<pos:position pos:line="111" pos:column="48"/></name></expr></argument>,
      <argument><expr><name><name pos:line="112" pos:column="7">cbi_factory<pos:position pos:line="112" pos:column="18"/></name><operator pos:line="112" pos:column="18">-&gt;<pos:position pos:line="112" pos:column="23"/></operator><name pos:line="112" pos:column="20">object<pos:position pos:line="112" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="28">cbi_factory<pos:position pos:line="112" pos:column="39"/></name><operator pos:line="112" pos:column="39">-&gt;<pos:position pos:line="112" pos:column="44"/></operator><name pos:line="112" pos:column="41">method<pos:position pos:line="112" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="49">o_ci<pos:position pos:line="112" pos:column="53"/></name></expr></argument>)<pos:position pos:line="112" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="55"/></expr_stmt>
  <if pos:line="113" pos:column="3">if <condition pos:line="113" pos:column="6">(<expr><name pos:line="113" pos:column="7">o_tmp<pos:position pos:line="113" pos:column="12"/></name> <operator pos:line="113" pos:column="13">==<pos:position pos:line="113" pos:column="15"/></operator> <name pos:line="113" pos:column="16">NULL<pos:position pos:line="113" pos:column="20"/></name></expr>)<pos:position pos:line="113" pos:column="21"/></condition><then pos:line="113" pos:column="21">
  <block pos:line="114" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="115" pos:column="5">ERROR<pos:position pos:line="115" pos:column="10"/></name> <argument_list pos:line="115" pos:column="11">(<argument><expr><literal type="string" pos:line="115" pos:column="12">"java plugin: cjni_match_target_create: CallObjectMethod failed."<pos:position pos:line="115" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="116" pos:column="5">BAIL_OUT<pos:position pos:line="116" pos:column="13"/></name> <argument_list pos:line="116" pos:column="14">(<argument><expr><operator pos:line="116" pos:column="15">-<pos:position pos:line="116" pos:column="16"/></operator><literal type="number" pos:line="116" pos:column="16">1<pos:position pos:line="116" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="117" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="119" pos:column="3">cbi_ret<pos:position pos:line="119" pos:column="10"/></name><operator pos:line="119" pos:column="10">-&gt;<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="12">object<pos:position pos:line="119" pos:column="18"/></name></name> <operator pos:line="119" pos:column="19">=<pos:position pos:line="119" pos:column="20"/></operator> <call><name><operator pos:line="119" pos:column="21">(<pos:position pos:line="119" pos:column="22"/></operator><operator pos:line="119" pos:column="22">*<pos:position pos:line="119" pos:column="23"/></operator><name pos:line="119" pos:column="23">jvm_env<pos:position pos:line="119" pos:column="30"/></name><operator pos:line="119" pos:column="30">)<pos:position pos:line="119" pos:column="31"/></operator><operator pos:line="119" pos:column="31">-&gt;<pos:position pos:line="119" pos:column="36"/></operator><name pos:line="119" pos:column="33">NewGlobalRef<pos:position pos:line="119" pos:column="45"/></name></name> <argument_list pos:line="119" pos:column="46">(<argument><expr><name pos:line="119" pos:column="47">jvm_env<pos:position pos:line="119" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="119" pos:column="56">o_tmp<pos:position pos:line="119" pos:column="61"/></name></expr></argument>)<pos:position pos:line="119" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="63"/></expr_stmt>
  <if pos:line="120" pos:column="3">if <condition pos:line="120" pos:column="6">(<expr><name pos:line="120" pos:column="7">o_tmp<pos:position pos:line="120" pos:column="12"/></name> <operator pos:line="120" pos:column="13">==<pos:position pos:line="120" pos:column="15"/></operator> <name pos:line="120" pos:column="16">NULL<pos:position pos:line="120" pos:column="20"/></name></expr>)<pos:position pos:line="120" pos:column="21"/></condition><then pos:line="120" pos:column="21">
  <block pos:line="121" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">ERROR<pos:position pos:line="122" pos:column="10"/></name> <argument_list pos:line="122" pos:column="11">(<argument><expr><literal type="string" pos:line="122" pos:column="12">"java plugin: cjni_match_target_create: NewGlobalRef failed."<pos:position pos:line="122" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">BAIL_OUT<pos:position pos:line="123" pos:column="13"/></name> <argument_list pos:line="123" pos:column="14">(<argument><expr><operator pos:line="123" pos:column="15">-<pos:position pos:line="123" pos:column="16"/></operator><literal type="number" pos:line="123" pos:column="16">1<pos:position pos:line="123" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="124" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="126" pos:column="3">/* This is the class of the match. It is possibly different from the class of
   * the match-factory! */</comment>
  <expr_stmt><expr><name><name pos:line="128" pos:column="3">cbi_ret<pos:position pos:line="128" pos:column="10"/></name><operator pos:line="128" pos:column="10">-&gt;<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="12">class<pos:position pos:line="128" pos:column="17"/></name></name> <operator pos:line="128" pos:column="18">=<pos:position pos:line="128" pos:column="19"/></operator> <call><name><operator pos:line="128" pos:column="20">(<pos:position pos:line="128" pos:column="21"/></operator><operator pos:line="128" pos:column="21">*<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="22">jvm_env<pos:position pos:line="128" pos:column="29"/></name><operator pos:line="128" pos:column="29">)<pos:position pos:line="128" pos:column="30"/></operator><operator pos:line="128" pos:column="30">-&gt;<pos:position pos:line="128" pos:column="35"/></operator><name pos:line="128" pos:column="32">GetObjectClass<pos:position pos:line="128" pos:column="46"/></name></name> <argument_list pos:line="128" pos:column="47">(<argument><expr><name pos:line="128" pos:column="48">jvm_env<pos:position pos:line="128" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="128" pos:column="57">cbi_ret<pos:position pos:line="128" pos:column="64"/></name><operator pos:line="128" pos:column="64">-&gt;<pos:position pos:line="128" pos:column="69"/></operator><name pos:line="128" pos:column="66">object<pos:position pos:line="128" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="74"/></expr_stmt>
  <if pos:line="129" pos:column="3">if <condition pos:line="129" pos:column="6">(<expr><name><name pos:line="129" pos:column="7">cbi_ret<pos:position pos:line="129" pos:column="14"/></name><operator pos:line="129" pos:column="14">-&gt;<pos:position pos:line="129" pos:column="19"/></operator><name pos:line="129" pos:column="16">class<pos:position pos:line="129" pos:column="21"/></name></name> <operator pos:line="129" pos:column="22">==<pos:position pos:line="129" pos:column="24"/></operator> <name pos:line="129" pos:column="25">NULL<pos:position pos:line="129" pos:column="29"/></name></expr>)<pos:position pos:line="129" pos:column="30"/></condition><then pos:line="129" pos:column="30">
  <block pos:line="130" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">ERROR<pos:position pos:line="131" pos:column="10"/></name> <argument_list pos:line="131" pos:column="11">(<argument><expr><literal type="string" pos:line="131" pos:column="12">"java plugin: cjni_match_target_create: GetObjectClass failed."<pos:position pos:line="131" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">BAIL_OUT<pos:position pos:line="132" pos:column="13"/></name> <argument_list pos:line="132" pos:column="14">(<argument><expr><operator pos:line="132" pos:column="15">-<pos:position pos:line="132" pos:column="16"/></operator><literal type="number" pos:line="132" pos:column="16">1<pos:position pos:line="132" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="133" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="135" pos:column="3">/* Lookup the `int match (DataSet, ValueList)' method. */</comment>
  <expr_stmt><expr><name><name pos:line="136" pos:column="3">cbi_ret<pos:position pos:line="136" pos:column="10"/></name><operator pos:line="136" pos:column="10">-&gt;<pos:position pos:line="136" pos:column="15"/></operator><name pos:line="136" pos:column="12">method<pos:position pos:line="136" pos:column="18"/></name></name> <operator pos:line="136" pos:column="19">=<pos:position pos:line="136" pos:column="20"/></operator> <call><name><operator pos:line="136" pos:column="21">(<pos:position pos:line="136" pos:column="22"/></operator><operator pos:line="136" pos:column="22">*<pos:position pos:line="136" pos:column="23"/></operator><name pos:line="136" pos:column="23">jvm_env<pos:position pos:line="136" pos:column="30"/></name><operator pos:line="136" pos:column="30">)<pos:position pos:line="136" pos:column="31"/></operator><operator pos:line="136" pos:column="31">-&gt;<pos:position pos:line="136" pos:column="36"/></operator><name pos:line="136" pos:column="33">GetMethodID<pos:position pos:line="136" pos:column="44"/></name></name> <argument_list pos:line="136" pos:column="45">(<argument><expr><name pos:line="136" pos:column="46">jvm_env<pos:position pos:line="136" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="55">cbi_ret<pos:position pos:line="136" pos:column="62"/></name><operator pos:line="136" pos:column="62">-&gt;<pos:position pos:line="136" pos:column="67"/></operator><name pos:line="136" pos:column="64">class<pos:position pos:line="136" pos:column="69"/></name></name></expr></argument>,
      <comment type="block" pos:line="137" pos:column="7">/* method name = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="137" pos:column="27">(<pos:position pos:line="137" pos:column="28"/></operator><name pos:line="137" pos:column="28">type<pos:position pos:line="137" pos:column="32"/></name> <operator pos:line="137" pos:column="33">==<pos:position pos:line="137" pos:column="35"/></operator> <name pos:line="137" pos:column="36">CB_TYPE_MATCH<pos:position pos:line="137" pos:column="49"/></name><operator pos:line="137" pos:column="49">)<pos:position pos:line="137" pos:column="50"/></operator></expr> ?<pos:position pos:line="137" pos:column="52"/></condition><then pos:line="137" pos:column="52"> <expr><literal type="string" pos:line="137" pos:column="53">"match"<pos:position pos:line="137" pos:column="60"/></literal></expr> <pos:position pos:line="137" pos:column="61"/></then><else pos:line="137" pos:column="61">: <expr><literal type="string" pos:line="137" pos:column="63">"invoke"<pos:position pos:line="137" pos:column="71"/></literal></expr></else></ternary></expr></argument>,
      <argument><expr><literal type="string" pos:line="138" pos:column="7">"(Lorg/collectd/api/DataSet;Lorg/collectd/api/ValueList;)I"<pos:position pos:line="138" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="68"/></expr_stmt>
  <if pos:line="139" pos:column="3">if <condition pos:line="139" pos:column="6">(<expr><name><name pos:line="139" pos:column="7">cbi_ret<pos:position pos:line="139" pos:column="14"/></name><operator pos:line="139" pos:column="14">-&gt;<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="16">method<pos:position pos:line="139" pos:column="22"/></name></name> <operator pos:line="139" pos:column="23">==<pos:position pos:line="139" pos:column="25"/></operator> <name pos:line="139" pos:column="26">NULL<pos:position pos:line="139" pos:column="30"/></name></expr>)<pos:position pos:line="139" pos:column="31"/></condition><then pos:line="139" pos:column="31">
  <block pos:line="140" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="141" pos:column="5">ERROR<pos:position pos:line="141" pos:column="10"/></name> <argument_list pos:line="141" pos:column="11">(<argument><expr><literal type="string" pos:line="141" pos:column="12">"java plugin: cjni_match_target_create: GetMethodID failed."<pos:position pos:line="141" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="142" pos:column="5">BAIL_OUT<pos:position pos:line="142" pos:column="13"/></name> <argument_list pos:line="142" pos:column="14">(<argument><expr><operator pos:line="142" pos:column="15">-<pos:position pos:line="142" pos:column="16"/></operator><literal type="number" pos:line="142" pos:column="16">1<pos:position pos:line="142" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="143" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="145" pos:column="3">/* Return the newly created match via the user_data pointer. */</comment>
  <expr_stmt><expr><operator pos:line="146" pos:column="3">*<pos:position pos:line="146" pos:column="4"/></operator><name pos:line="146" pos:column="4">user_data<pos:position pos:line="146" pos:column="13"/></name> <operator pos:line="146" pos:column="14">=<pos:position pos:line="146" pos:column="15"/></operator> <operator pos:line="146" pos:column="16">(<pos:position pos:line="146" pos:column="17"/></operator><name pos:line="146" pos:column="17">void<pos:position pos:line="146" pos:column="21"/></name> <operator pos:line="146" pos:column="22">*<pos:position pos:line="146" pos:column="23"/></operator><operator pos:line="146" pos:column="23">)<pos:position pos:line="146" pos:column="24"/></operator> <name pos:line="146" pos:column="25">cbi_ret<pos:position pos:line="146" pos:column="32"/></name></expr>;<pos:position pos:line="146" pos:column="33"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="148" pos:column="3">cjni_thread_detach<pos:position pos:line="148" pos:column="21"/></name> <argument_list pos:line="148" pos:column="22">()<pos:position pos:line="148" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="150" pos:column="3">DEBUG<pos:position pos:line="150" pos:column="8"/></name> <argument_list pos:line="150" pos:column="9">(<argument><expr><literal type="string" pos:line="150" pos:column="10">"java plugin: cjni_match_target_create: "<pos:position pos:line="150" pos:column="51"/></literal>
      <literal type="string" pos:line="151" pos:column="7">"Successfully created a `%s' %s."<pos:position pos:line="151" pos:column="40"/></literal></expr></argument>,
      <argument><expr><name><name pos:line="152" pos:column="7">cbi_ret<pos:position pos:line="152" pos:column="14"/></name><operator pos:line="152" pos:column="14">-&gt;<pos:position pos:line="152" pos:column="19"/></operator><name pos:line="152" pos:column="16">name<pos:position pos:line="152" pos:column="20"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="152" pos:column="22">(<pos:position pos:line="152" pos:column="23"/></operator><name pos:line="152" pos:column="23">type<pos:position pos:line="152" pos:column="27"/></name> <operator pos:line="152" pos:column="28">==<pos:position pos:line="152" pos:column="30"/></operator> <name pos:line="152" pos:column="31">CB_TYPE_MATCH<pos:position pos:line="152" pos:column="44"/></name><operator pos:line="152" pos:column="44">)<pos:position pos:line="152" pos:column="45"/></operator></expr> ?<pos:position pos:line="152" pos:column="47"/></condition><then pos:line="152" pos:column="47"> <expr><literal type="string" pos:line="152" pos:column="48">"match"<pos:position pos:line="152" pos:column="55"/></literal></expr> <pos:position pos:line="152" pos:column="56"/></then><else pos:line="152" pos:column="56">: <expr><literal type="string" pos:line="152" pos:column="58">"target"<pos:position pos:line="152" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="152" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="68"/></expr_stmt>

  <comment type="block" pos:line="154" pos:column="3">/* Success! */</comment>
  <return pos:line="155" pos:column="3">return <expr><operator pos:line="155" pos:column="10">(<pos:position pos:line="155" pos:column="11"/></operator><literal type="number" pos:line="155" pos:column="11">0<pos:position pos:line="155" pos:column="12"/></literal><operator pos:line="155" pos:column="12">)<pos:position pos:line="155" pos:column="13"/></operator></expr>;<pos:position pos:line="155" pos:column="14"/></return>
<cpp:undef pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">undef<pos:position pos:line="156" pos:column="7"/></cpp:directive> <name pos:line="156" pos:column="8">BAIL_OUT<pos:position pos:line="156" pos:column="16"/></name></cpp:undef>
}<pos:position pos:line="157" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1096_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_register_host<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">host_config_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">host<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">cb_name<pos:position pos:line="3" pos:column="21"/></name><index pos:line="3" pos:column="21">[<expr><literal type="number" pos:line="3" pos:column="22">256<pos:position pos:line="3" pos:column="25"/></literal></expr>]<pos:position pos:line="3" pos:column="26"/></index></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">timespec<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">interval<pos:position pos:line="4" pos:column="33"/></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">user_data_t<pos:position pos:line="5" pos:column="20"/></name></type> <name pos:line="5" pos:column="21">ud<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">host<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">vfiler<pos:position pos:line="7" pos:column="25"/></name></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="17">ssnprintf<pos:position pos:line="8" pos:column="26"/></name> <argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">cb_name<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="37">sizeof <argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">cb_name<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="55">"netapp-%s-%s"<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="9" pos:column="33">host<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">-&gt;<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="39">name<pos:position pos:line="9" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="45">host<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">vfiler<pos:position pos:line="9" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt></block></then>
	<else pos:line="10" pos:column="9">else
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="17">ssnprintf<pos:position pos:line="11" pos:column="26"/></name> <argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">cb_name<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="37">sizeof <argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">cb_name<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="55">"netapp-%s"<pos:position pos:line="11" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="68">host<pos:position pos:line="11" pos:column="72"/></name><operator pos:line="11" pos:column="72">-&gt;<pos:position pos:line="11" pos:column="77"/></operator><name pos:line="11" pos:column="74">name<pos:position pos:line="11" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="80"/></expr_stmt></block></else></if>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">CDTIME_T_TO_TIMESPEC<pos:position pos:line="13" pos:column="29"/></name> <argument_list pos:line="13" pos:column="30">(<argument><expr><name><name pos:line="13" pos:column="31">host<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">interval<pos:position pos:line="13" pos:column="45"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="47">&amp;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="48">interval<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="15" pos:column="9">memset<pos:position pos:line="15" pos:column="15"/></name> <argument_list pos:line="15" pos:column="16">(<argument><expr><operator pos:line="15" pos:column="17">&amp;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="18">ud<pos:position pos:line="15" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="25">sizeof <argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">ud<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="16" pos:column="9">ud<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">.<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="12">data<pos:position pos:line="16" pos:column="16"/></name></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">host<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="17" pos:column="9">ud<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">.<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="12">free_func<pos:position pos:line="17" pos:column="21"/></name></name> <operator pos:line="17" pos:column="22">=<pos:position pos:line="17" pos:column="23"/></operator> <operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><call><call><name pos:line="17" pos:column="25">void<pos:position pos:line="17" pos:column="29"/></name> <argument_list pos:line="17" pos:column="30">(<argument><expr><operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call> <argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">void<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">*<pos:position pos:line="17" pos:column="41"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call><operator pos:line="17" pos:column="42">)<pos:position pos:line="17" pos:column="43"/></operator> <name pos:line="17" pos:column="44">free_host_config<pos:position pos:line="17" pos:column="60"/></name></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="19" pos:column="9">plugin_register_complex_read<pos:position pos:line="19" pos:column="37"/></name> <argument_list pos:line="19" pos:column="38">(<comment type="block" pos:line="19" pos:column="39">/* group = */</comment> <argument><expr><name pos:line="19" pos:column="53">NULL<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="59">cb_name<pos:position pos:line="19" pos:column="66"/></name></expr></argument>,
			<comment type="block" pos:line="20" pos:column="25">/* callback  = */</comment> <argument><expr><name pos:line="20" pos:column="43">cna_read<pos:position pos:line="20" pos:column="51"/></name></expr></argument>,
			<comment type="block" pos:line="21" pos:column="25">/* interval  = */</comment> <argument><expr><ternary><condition><expr><operator pos:line="21" pos:column="43">(<pos:position pos:line="21" pos:column="44"/></operator><name><name pos:line="21" pos:column="44">host<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">interval<pos:position pos:line="21" pos:column="58"/></name></name> <operator pos:line="21" pos:column="59">&gt;<pos:position pos:line="21" pos:column="63"/></operator> <literal type="number" pos:line="21" pos:column="61">0<pos:position pos:line="21" pos:column="62"/></literal><operator pos:line="21" pos:column="62">)<pos:position pos:line="21" pos:column="63"/></operator></expr> ?<pos:position pos:line="21" pos:column="65"/></condition><then pos:line="21" pos:column="65"> <expr><operator pos:line="21" pos:column="66">&amp;<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="67">interval<pos:position pos:line="21" pos:column="75"/></name></expr> <pos:position pos:line="21" pos:column="76"/></then><else pos:line="21" pos:column="76">: <expr><name pos:line="21" pos:column="78">NULL<pos:position pos:line="21" pos:column="82"/></name></expr></else></ternary></expr></argument>,
			<comment type="block" pos:line="22" pos:column="25">/* user data = */</comment> <argument><expr><operator pos:line="22" pos:column="43">&amp;<pos:position pos:line="22" pos:column="48"/></operator><name pos:line="22" pos:column="44">ud<pos:position pos:line="22" pos:column="46"/></name></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="48"/></expr_stmt>

	<return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal><operator pos:line="24" pos:column="18">)<pos:position pos:line="24" pos:column="19"/></operator></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

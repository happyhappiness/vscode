<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2134_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_cb_string<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ctx<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">unsigned<pos:position pos:line="1" pos:column="51"/></name> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">val<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">yajl_len_t<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">len<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <comment type="block" pos:line="4" pos:column="3">/* Handle the string as if it was a number. */</comment>
  <return pos:line="5" pos:column="3">return <expr><operator pos:line="5" pos:column="10">(<pos:position pos:line="5" pos:column="11"/></operator><call><name pos:line="5" pos:column="11">cj_cb_number<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">ctx<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><specifier pos:line="5" pos:column="31">const<pos:position pos:line="5" pos:column="36"/></specifier> <name pos:line="5" pos:column="37">char<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></operator><operator pos:line="5" pos:column="43">)<pos:position pos:line="5" pos:column="44"/></operator> <name pos:line="5" pos:column="45">val<pos:position pos:line="5" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="50">len<pos:position pos:line="5" pos:column="53"/></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call><operator pos:line="5" pos:column="54">)<pos:position pos:line="5" pos:column="55"/></operator></expr>;<pos:position pos:line="5" pos:column="56"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1351_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">swap_read_combined<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <comment type="block" pos:line="1" pos:column="37">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">fh<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">1024<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gauge_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">swap_used<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><name pos:line="6" pos:column="23">NAN<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">gauge_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">swap_cached<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">NAN<pos:position pos:line="7" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">gauge_t<pos:position pos:line="8" pos:column="10"/></name></type> <name pos:line="8" pos:column="11">swap_free<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">NAN<pos:position pos:line="8" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gauge_t<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">swap_total<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><name pos:line="9" pos:column="24">NAN<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">fh<pos:position pos:line="11" pos:column="5"/></name> <operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator> <call><name pos:line="11" pos:column="8">fopen<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><literal type="string" pos:line="11" pos:column="14">"/proc/meminfo"<pos:position pos:line="11" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="31">"r"<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">fh<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">==<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18"> <block pos:line="12" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">errbuf<pos:position pos:line="13" pos:column="16"/></name><index pos:line="13" pos:column="16">[<expr><literal type="number" pos:line="13" pos:column="17">1024<pos:position pos:line="13" pos:column="21"/></literal></expr>]<pos:position pos:line="13" pos:column="22"/></index></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">WARNING<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"swap plugin: fopen (/proc/meminfo) failed: %s"<pos:position pos:line="14" pos:column="60"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="15" pos:column="13">sstrerror<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">errno<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">errbuf<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="38">sizeof<argument_list pos:line="15" pos:column="44">(<argument><expr><name pos:line="15" pos:column="45">errbuf<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="55"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><operator pos:line="16" pos:column="13">-<pos:position pos:line="16" pos:column="14"/></operator><literal type="number" pos:line="16" pos:column="14">1<pos:position pos:line="16" pos:column="15"/></literal><operator pos:line="16" pos:column="15">)<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></return>
  }<pos:position pos:line="17" pos:column="4"/></block></then></if>

  <while pos:line="19" pos:column="3">while <condition pos:line="19" pos:column="9">(<expr><call><name pos:line="19" pos:column="10">fgets<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">buffer<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="24">sizeof<argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">buffer<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">fh<pos:position pos:line="19" pos:column="42"/></name></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call> <operator pos:line="19" pos:column="44">!=<pos:position pos:line="19" pos:column="46"/></operator> <name pos:line="19" pos:column="47">NULL<pos:position pos:line="19" pos:column="51"/></name></expr>)<pos:position pos:line="19" pos:column="52"/></condition> <block pos:line="19" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">char<pos:position pos:line="20" pos:column="9"/></name> <modifier pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></modifier></type><name><name pos:line="20" pos:column="11">fields<pos:position pos:line="20" pos:column="17"/></name><index pos:line="20" pos:column="17">[<expr><literal type="number" pos:line="20" pos:column="18">8<pos:position pos:line="20" pos:column="19"/></literal></expr>]<pos:position pos:line="20" pos:column="20"/></index></name></decl>;<pos:position pos:line="20" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">numfields<pos:position pos:line="21" pos:column="18"/></name></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">numfields<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <call><name pos:line="23" pos:column="17">strsplit<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">buffer<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">fields<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="42">STATIC_ARRAY_SIZE<pos:position pos:line="23" pos:column="59"/></name><argument_list pos:line="23" pos:column="59">(<argument><expr><name pos:line="23" pos:column="60">fields<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">numfields<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">&lt;<pos:position pos:line="24" pos:column="23"/></operator> <literal type="number" pos:line="24" pos:column="21">2<pos:position pos:line="24" pos:column="22"/></literal></expr>)<pos:position pos:line="24" pos:column="23"/></condition><then pos:line="24" pos:column="23">
      <block type="pseudo"><continue pos:line="25" pos:column="7">continue;<pos:position pos:line="25" pos:column="16"/></continue></block></then></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">strcasecmp<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name><name pos:line="27" pos:column="20">fields<pos:position pos:line="27" pos:column="26"/></name><index pos:line="27" pos:column="26">[<expr><literal type="number" pos:line="27" pos:column="27">0<pos:position pos:line="27" pos:column="28"/></literal></expr>]<pos:position pos:line="27" pos:column="29"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">"SwapTotal:"<pos:position pos:line="27" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call> <operator pos:line="27" pos:column="45">==<pos:position pos:line="27" pos:column="47"/></operator> <literal type="number" pos:line="27" pos:column="48">0<pos:position pos:line="27" pos:column="49"/></literal></expr>)<pos:position pos:line="27" pos:column="50"/></condition><then pos:line="27" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">strtogauge<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name><name pos:line="28" pos:column="18">fields<pos:position pos:line="28" pos:column="24"/></name><index pos:line="28" pos:column="24">[<expr><literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>]<pos:position pos:line="28" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="29">&amp;<pos:position pos:line="28" pos:column="34"/></operator><name pos:line="28" pos:column="30">swap_total<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name><name pos:line="29" pos:column="25">fields<pos:position pos:line="29" pos:column="31"/></name><index pos:line="29" pos:column="31">[<expr><literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>]<pos:position pos:line="29" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="36">"SwapFree:"<pos:position pos:line="29" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call> <operator pos:line="29" pos:column="49">==<pos:position pos:line="29" pos:column="51"/></operator> <literal type="number" pos:line="29" pos:column="52">0<pos:position pos:line="29" pos:column="53"/></literal></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">strtogauge<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name><name pos:line="30" pos:column="18">fields<pos:position pos:line="30" pos:column="24"/></name><index pos:line="30" pos:column="24">[<expr><literal type="number" pos:line="30" pos:column="25">1<pos:position pos:line="30" pos:column="26"/></literal></expr>]<pos:position pos:line="30" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="29">&amp;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="30">swap_free<pos:position pos:line="30" pos:column="39"/></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="41"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name><name pos:line="31" pos:column="25">fields<pos:position pos:line="31" pos:column="31"/></name><index pos:line="31" pos:column="31">[<expr><literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal></expr>]<pos:position pos:line="31" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="36">"SwapCached:"<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call> <operator pos:line="31" pos:column="51">==<pos:position pos:line="31" pos:column="53"/></operator> <literal type="number" pos:line="31" pos:column="54">0<pos:position pos:line="31" pos:column="55"/></literal></expr>)<pos:position pos:line="31" pos:column="56"/></condition><then pos:line="31" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">strtogauge<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name><name pos:line="32" pos:column="18">fields<pos:position pos:line="32" pos:column="24"/></name><index pos:line="32" pos:column="24">[<expr><literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>]<pos:position pos:line="32" pos:column="27"/></index></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="29">&amp;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="30">swap_cached<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="33" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">fclose<pos:position pos:line="35" pos:column="9"/></name><argument_list pos:line="35" pos:column="9">(<argument><expr><name pos:line="35" pos:column="10">fh<pos:position pos:line="35" pos:column="12"/></name></expr></argument>)<pos:position pos:line="35" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="14"/></expr_stmt>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><call><name pos:line="37" pos:column="7">isnan<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">swap_total<pos:position pos:line="37" pos:column="23"/></name></expr></argument>)<pos:position pos:line="37" pos:column="24"/></argument_list></call> <operator pos:line="37" pos:column="25">||<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">isnan<pos:position pos:line="37" pos:column="33"/></name><argument_list pos:line="37" pos:column="33">(<argument><expr><name pos:line="37" pos:column="34">swap_free<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45">
    <block type="pseudo"><return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">ENOENT<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">)<pos:position pos:line="38" pos:column="20"/></operator></expr>;<pos:position pos:line="38" pos:column="21"/></return></block></then></if>

  <comment type="block" pos:line="40" pos:column="3">/* Some systems, OpenVZ for example, don't provide SwapCached. */</comment>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><call><name pos:line="41" pos:column="7">isnan<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">swap_cached<pos:position pos:line="41" pos:column="24"/></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="26"/></condition><then pos:line="41" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="5">swap_used<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <name pos:line="42" pos:column="17">swap_total<pos:position pos:line="42" pos:column="27"/></name> <operator pos:line="42" pos:column="28">-<pos:position pos:line="42" pos:column="29"/></operator> <name pos:line="42" pos:column="30">swap_free<pos:position pos:line="42" pos:column="39"/></name></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt></block></then>
  <else pos:line="43" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="5">swap_used<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">swap_total<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">-<pos:position pos:line="44" pos:column="29"/></operator> <operator pos:line="44" pos:column="30">(<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="31">swap_free<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">+<pos:position pos:line="44" pos:column="42"/></operator> <name pos:line="44" pos:column="43">swap_cached<pos:position pos:line="44" pos:column="54"/></name><operator pos:line="44" pos:column="54">)<pos:position pos:line="44" pos:column="55"/></operator></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">assert<pos:position pos:line="45" pos:column="9"/></name><argument_list pos:line="45" pos:column="9">(<argument><expr><operator pos:line="45" pos:column="10">!<pos:position pos:line="45" pos:column="11"/></operator><call><name pos:line="45" pos:column="11">isnan<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">swap_used<pos:position pos:line="45" pos:column="26"/></name></expr></argument>)<pos:position pos:line="45" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="29"/></expr_stmt>

  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">swap_used<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">&lt;<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="19">0.0<pos:position pos:line="47" pos:column="22"/></literal></expr>)<pos:position pos:line="47" pos:column="23"/></condition><then pos:line="47" pos:column="23">
    <block type="pseudo"><return pos:line="48" pos:column="5">return <expr><operator pos:line="48" pos:column="12">(<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="13">EINVAL<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">)<pos:position pos:line="48" pos:column="20"/></operator></expr>;<pos:position pos:line="48" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="50" pos:column="3">swap_submit_usage<pos:position pos:line="50" pos:column="20"/></name><argument_list pos:line="50" pos:column="20">(<argument><expr><name pos:line="50" pos:column="21">NULL<pos:position pos:line="50" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="27">swap_used<pos:position pos:line="50" pos:column="36"/></name> <operator pos:line="50" pos:column="37">*<pos:position pos:line="50" pos:column="38"/></operator> <literal type="number" pos:line="50" pos:column="39">1024.0<pos:position pos:line="50" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">swap_free<pos:position pos:line="50" pos:column="56"/></name> <operator pos:line="50" pos:column="57">*<pos:position pos:line="50" pos:column="58"/></operator> <literal type="number" pos:line="50" pos:column="59">1024.0<pos:position pos:line="50" pos:column="65"/></literal></expr></argument>,
                    <argument><expr><ternary><condition><expr><call><name pos:line="51" pos:column="21">isnan<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">swap_cached<pos:position pos:line="51" pos:column="38"/></name></expr></argument>)<pos:position pos:line="51" pos:column="39"/></argument_list></call></expr> ?<pos:position pos:line="51" pos:column="41"/></condition><then pos:line="51" pos:column="41"> <expr><name pos:line="51" pos:column="42">NULL<pos:position pos:line="51" pos:column="46"/></name></expr> <pos:position pos:line="51" pos:column="47"/></then><else pos:line="51" pos:column="47">: <expr><literal type="string" pos:line="51" pos:column="49">"cached"<pos:position pos:line="51" pos:column="57"/></literal></expr></else></ternary></expr></argument>,
                    <argument><expr><ternary><condition><expr><call><name pos:line="52" pos:column="21">isnan<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">swap_cached<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr> ?<pos:position pos:line="52" pos:column="41"/></condition><then pos:line="52" pos:column="41"> <expr><name pos:line="52" pos:column="42">NAN<pos:position pos:line="52" pos:column="45"/></name></expr> <pos:position pos:line="52" pos:column="46"/></then><else pos:line="52" pos:column="46">: <expr><name pos:line="52" pos:column="48">swap_cached<pos:position pos:line="52" pos:column="59"/></name> <operator pos:line="52" pos:column="60">*<pos:position pos:line="52" pos:column="61"/></operator> <literal type="number" pos:line="52" pos:column="62">1024.0<pos:position pos:line="52" pos:column="68"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>
  <return pos:line="53" pos:column="3">return <expr><operator pos:line="53" pos:column="10">(<pos:position pos:line="53" pos:column="11"/></operator><literal type="number" pos:line="53" pos:column="11">0<pos:position pos:line="53" pos:column="12"/></literal><operator pos:line="53" pos:column="12">)<pos:position pos:line="53" pos:column="13"/></operator></expr>;<pos:position pos:line="53" pos:column="14"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

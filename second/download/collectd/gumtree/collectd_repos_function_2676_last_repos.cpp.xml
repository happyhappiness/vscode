<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2676_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">format_name<pos:position pos:line="1" pos:column="16"/></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type><name pos:line="1" pos:column="23">ret<pos:position pos:line="1" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">ret_len<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">hostname<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>,
                <parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">plugin<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">plugin_instance<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                <parameter><decl><type><specifier pos:line="3" pos:column="17">const<pos:position pos:line="3" pos:column="22"/></specifier> <name pos:line="3" pos:column="23">char<pos:position pos:line="3" pos:column="27"/></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">type<pos:position pos:line="3" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="35">const<pos:position pos:line="3" pos:column="40"/></specifier> <name pos:line="3" pos:column="41">char<pos:position pos:line="3" pos:column="45"/></name> <modifier pos:line="3" pos:column="46">*<pos:position pos:line="3" pos:column="47"/></modifier></type><name pos:line="3" pos:column="47">type_instance<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="61"/></parameter_list> <block pos:line="3" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">buffer<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">buffer_size<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">buffer<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">ret<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">buffer_size<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">(<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">size_t<pos:position pos:line="8" pos:column="24"/></name><operator pos:line="8" pos:column="24">)<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">ret_len<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">APPEND<pos:position pos:line="10" pos:column="15"/></name><parameter_list pos:line="10" pos:column="15">(<parameter><type><name pos:line="10" pos:column="16">str<pos:position pos:line="10" pos:column="19"/></name></type></parameter>)<pos:position pos:line="10" pos:column="20"/></parameter_list></cpp:macro>                                                            \
  <cpp:value pos:line="11" pos:column="3">do {                                                                         \
    size_t l = strlen(str);                                                    \
    if (l &gt;= buffer_size)                                                      \
      return ENOBUFS;                                                          \
    memcpy(buffer, (str), l);                                                  \
    buffer += l;                                                               \
    buffer_size -= l;                                                          \
  } while (0)<pos:position pos:line="18" pos:column="14"/></cpp:value></cpp:define>

  <expr_stmt><expr><call><name pos:line="20" pos:column="3">assert<pos:position pos:line="20" pos:column="9"/></name><argument_list pos:line="20" pos:column="9">(<argument><expr><name pos:line="20" pos:column="10">plugin<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">!=<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">NULL<pos:position pos:line="20" pos:column="24"/></name></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">assert<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name pos:line="21" pos:column="10">type<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">!=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">NULL<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">APPEND<pos:position pos:line="23" pos:column="9"/></name><argument_list pos:line="23" pos:column="9">(<argument><expr><name pos:line="23" pos:column="10">hostname<pos:position pos:line="23" pos:column="18"/></name></expr></argument>)<pos:position pos:line="23" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">APPEND<pos:position pos:line="24" pos:column="9"/></name><argument_list pos:line="24" pos:column="9">(<argument><expr><literal type="string" pos:line="24" pos:column="10">"/"<pos:position pos:line="24" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="25" pos:column="3">APPEND<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">plugin<pos:position pos:line="25" pos:column="16"/></name></expr></argument>)<pos:position pos:line="25" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name pos:line="26" pos:column="8">plugin_instance<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">!=<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">NULL<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">)<pos:position pos:line="26" pos:column="32"/></operator> <operator pos:line="26" pos:column="33">&amp;&amp;<pos:position pos:line="26" pos:column="43"/></operator> <operator pos:line="26" pos:column="36">(<pos:position pos:line="26" pos:column="37"/></operator><name><name pos:line="26" pos:column="37">plugin_instance<pos:position pos:line="26" pos:column="52"/></name><index pos:line="26" pos:column="52">[<expr><literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr>]<pos:position pos:line="26" pos:column="55"/></index></name> <operator pos:line="26" pos:column="56">!=<pos:position pos:line="26" pos:column="58"/></operator> <literal type="number" pos:line="26" pos:column="59">0<pos:position pos:line="26" pos:column="60"/></literal><operator pos:line="26" pos:column="60">)<pos:position pos:line="26" pos:column="61"/></operator></expr>)<pos:position pos:line="26" pos:column="62"/></condition><then pos:line="26" pos:column="62"> <block pos:line="26" pos:column="63">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">APPEND<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="string" pos:line="27" pos:column="12">"-"<pos:position pos:line="27" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">APPEND<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name pos:line="28" pos:column="12">plugin_instance<pos:position pos:line="28" pos:column="27"/></name></expr></argument>)<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">APPEND<pos:position pos:line="30" pos:column="9"/></name><argument_list pos:line="30" pos:column="9">(<argument><expr><literal type="string" pos:line="30" pos:column="10">"/"<pos:position pos:line="30" pos:column="13"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="15"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="31" pos:column="3">APPEND<pos:position pos:line="31" pos:column="9"/></name><argument_list pos:line="31" pos:column="9">(<argument><expr><name pos:line="31" pos:column="10">type<pos:position pos:line="31" pos:column="14"/></name></expr></argument>)<pos:position pos:line="31" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="16"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">(<pos:position pos:line="32" pos:column="8"/></operator><name pos:line="32" pos:column="8">type_instance<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">!=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">NULL<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator> <operator pos:line="32" pos:column="31">&amp;&amp;<pos:position pos:line="32" pos:column="41"/></operator> <operator pos:line="32" pos:column="34">(<pos:position pos:line="32" pos:column="35"/></operator><name><name pos:line="32" pos:column="35">type_instance<pos:position pos:line="32" pos:column="48"/></name><index pos:line="32" pos:column="48">[<expr><literal type="number" pos:line="32" pos:column="49">0<pos:position pos:line="32" pos:column="50"/></literal></expr>]<pos:position pos:line="32" pos:column="51"/></index></name> <operator pos:line="32" pos:column="52">!=<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="55">0<pos:position pos:line="32" pos:column="56"/></literal><operator pos:line="32" pos:column="56">)<pos:position pos:line="32" pos:column="57"/></operator></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58"> <block pos:line="32" pos:column="59">{
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">APPEND<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="string" pos:line="33" pos:column="12">"-"<pos:position pos:line="33" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">APPEND<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><name pos:line="34" pos:column="12">type_instance<pos:position pos:line="34" pos:column="25"/></name></expr></argument>)<pos:position pos:line="34" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">assert<pos:position pos:line="36" pos:column="9"/></name><argument_list pos:line="36" pos:column="9">(<argument><expr><name pos:line="36" pos:column="10">buffer_size<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">&gt;<pos:position pos:line="36" pos:column="26"/></operator> <literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">buffer<pos:position pos:line="37" pos:column="9"/></name><index pos:line="37" pos:column="9">[<expr><literal type="number" pos:line="37" pos:column="10">0<pos:position pos:line="37" pos:column="11"/></literal></expr>]<pos:position pos:line="37" pos:column="12"/></index></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <literal type="number" pos:line="37" pos:column="15">0<pos:position pos:line="37" pos:column="16"/></literal></expr>;<pos:position pos:line="37" pos:column="17"/></expr_stmt>

<cpp:undef pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">undef<pos:position pos:line="39" pos:column="7"/></cpp:directive> <name pos:line="39" pos:column="8">APPEND<pos:position pos:line="39" pos:column="14"/></name></cpp:undef>
  <return pos:line="40" pos:column="3">return <expr><literal type="number" pos:line="40" pos:column="10">0<pos:position pos:line="40" pos:column="11"/></literal></expr>;<pos:position pos:line="40" pos:column="12"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_332_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">zone_read_procfile<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">pidstr<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">name<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">void<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">*<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="64">buf<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">size_t<pos:position pos:line="2" pos:column="75"/></name></type> <name pos:line="2" pos:column="76">bufsize<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="84"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">fd<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name></type> <name><name pos:line="6" pos:column="14">procfile<pos:position pos:line="6" pos:column="22"/></name><index pos:line="6" pos:column="22">[<expr><name pos:line="6" pos:column="23">MAX_PROCFS_PATH<pos:position pos:line="6" pos:column="38"/></name></expr>]<pos:position pos:line="6" pos:column="39"/></index></name></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
	<expr_stmt><expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">void<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator><call><name pos:line="7" pos:column="15">snprintf<pos:position pos:line="7" pos:column="23"/></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">procfile<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="34">sizeof<argument_list pos:line="7" pos:column="40">(<argument><expr><name pos:line="7" pos:column="41">procfile<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="52">"/proc/%s/%s"<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="67">pidstr<pos:position pos:line="7" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="75">name<pos:position pos:line="7" pos:column="79"/></name></expr></argument>)<pos:position pos:line="7" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="81"/></expr_stmt>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">fd<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">open<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">procfile<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">O_RDONLY<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator> <operator pos:line="8" pos:column="45">==<pos:position pos:line="8" pos:column="47"/></operator> <operator pos:line="8" pos:column="48">-<pos:position pos:line="8" pos:column="49"/></operator><literal type="number" pos:line="8" pos:column="49">1<pos:position pos:line="8" pos:column="50"/></literal></expr>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51"> <block pos:line="8" pos:column="52">{
		<return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator></expr>;<pos:position pos:line="9" pos:column="28"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">sread<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">fd<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">buf<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="28">bufsize<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">!=<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
		<decl_stmt><decl><type><name pos:line="13" pos:column="17">char<pos:position pos:line="13" pos:column="21"/></name></type> <name><name pos:line="13" pos:column="22">errbuf<pos:position pos:line="13" pos:column="28"/></name><index pos:line="13" pos:column="28">[<expr><literal type="number" pos:line="13" pos:column="29">1024<pos:position pos:line="13" pos:column="33"/></literal></expr>]<pos:position pos:line="13" pos:column="34"/></index></name></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">ERROR<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><literal type="string" pos:line="14" pos:column="24">"zone plugin: Reading \"%s\" failed: %s"<pos:position pos:line="14" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="66">procfile<pos:position pos:line="14" pos:column="74"/></name></expr></argument>,
				<argument><expr><call><name pos:line="15" pos:column="33">sstrerror<pos:position pos:line="15" pos:column="42"/></name> <argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">errno<pos:position pos:line="15" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">errbuf<pos:position pos:line="15" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="59">sizeof <argument_list pos:line="15" pos:column="66">(<argument><expr><name pos:line="15" pos:column="67">errbuf<pos:position pos:line="15" pos:column="73"/></name></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">close<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">(<argument><expr><name pos:line="16" pos:column="23">fd<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal><operator pos:line="17" pos:column="26">)<pos:position pos:line="17" pos:column="27"/></operator></expr>;<pos:position pos:line="17" pos:column="28"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">close<pos:position pos:line="20" pos:column="14"/></name><argument_list pos:line="20" pos:column="14">(<argument><expr><name pos:line="20" pos:column="15">fd<pos:position pos:line="20" pos:column="17"/></name></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
	<return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><literal type="number" pos:line="21" pos:column="17">0<pos:position pos:line="21" pos:column="18"/></literal><operator pos:line="21" pos:column="18">)<pos:position pos:line="21" pos:column="19"/></operator></expr>;<pos:position pos:line="21" pos:column="20"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_293_collectd-4.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">asubst<pos:position pos:line="1" pos:column="13"/></name> <parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><specifier pos:line="1" pos:column="15">const<pos:position pos:line="1" pos:column="20"/></specifier> <name pos:line="1" pos:column="21">char<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type><name pos:line="1" pos:column="27">string<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name></type> <name pos:line="1" pos:column="39">off1<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">off2<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">replacement<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">buf<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>   <name pos:line="4" pos:column="15">len<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ret<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">NULL<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">==<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">string<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator> <operator pos:line="8" pos:column="30">||<pos:position pos:line="8" pos:column="32"/></operator> <operator pos:line="8" pos:column="33">(<pos:position pos:line="8" pos:column="34"/></operator><literal type="number" pos:line="8" pos:column="34">0<pos:position pos:line="8" pos:column="35"/></literal> <operator pos:line="8" pos:column="36">&gt;<pos:position pos:line="8" pos:column="40"/></operator> <name pos:line="8" pos:column="38">off1<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">||<pos:position pos:line="8" pos:column="46"/></operator> <operator pos:line="8" pos:column="47">(<pos:position pos:line="8" pos:column="48"/></operator><literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal> <operator pos:line="8" pos:column="50">&gt;<pos:position pos:line="8" pos:column="54"/></operator> <name pos:line="8" pos:column="52">off2<pos:position pos:line="8" pos:column="56"/></name><operator pos:line="8" pos:column="56">)<pos:position pos:line="8" pos:column="57"/></operator> <operator pos:line="8" pos:column="58">||<pos:position pos:line="8" pos:column="60"/></operator> <operator pos:line="8" pos:column="61">(<pos:position pos:line="8" pos:column="62"/></operator><name pos:line="8" pos:column="62">off1<pos:position pos:line="8" pos:column="66"/></name> <operator pos:line="8" pos:column="67">&gt;<pos:position pos:line="8" pos:column="71"/></operator> <name pos:line="8" pos:column="69">off2<pos:position pos:line="8" pos:column="73"/></name><operator pos:line="8" pos:column="73">)<pos:position pos:line="8" pos:column="74"/></operator>
			<operator pos:line="9" pos:column="25">||<pos:position pos:line="9" pos:column="27"/></operator> <operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">replacement<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">)<pos:position pos:line="9" pos:column="48"/></operator></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr>;<pos:position pos:line="10" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="12" pos:column="9">len<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">off1<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">+<pos:position pos:line="12" pos:column="21"/></operator> <call><name pos:line="12" pos:column="22">strlen<pos:position pos:line="12" pos:column="28"/></name> <argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">replacement<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call> <operator pos:line="12" pos:column="43">+<pos:position pos:line="12" pos:column="44"/></operator> <call><name pos:line="12" pos:column="45">strlen<pos:position pos:line="12" pos:column="51"/></name> <argument_list pos:line="12" pos:column="52">(<argument><expr><name pos:line="12" pos:column="53">string<pos:position pos:line="12" pos:column="59"/></name></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call> <operator pos:line="12" pos:column="61">-<pos:position pos:line="12" pos:column="62"/></operator> <name pos:line="12" pos:column="63">off2<pos:position pos:line="12" pos:column="67"/></name> <operator pos:line="12" pos:column="68">+<pos:position pos:line="12" pos:column="69"/></operator> <literal type="number" pos:line="12" pos:column="70">1<pos:position pos:line="12" pos:column="71"/></literal></expr>;<pos:position pos:line="12" pos:column="72"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">buf<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <operator pos:line="14" pos:column="15">(<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">char<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></operator><operator pos:line="14" pos:column="22">)<pos:position pos:line="14" pos:column="23"/></operator><call><name pos:line="14" pos:column="23">malloc<pos:position pos:line="14" pos:column="29"/></name> <argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">len<pos:position pos:line="14" pos:column="34"/></name></expr></argument>)<pos:position pos:line="14" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="36"/></expr_stmt>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">NULL<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <name pos:line="15" pos:column="21">buf<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">ret<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">subst<pos:position pos:line="18" pos:column="20"/></name> <argument_list pos:line="18" pos:column="21">(<argument><expr><name pos:line="18" pos:column="22">buf<pos:position pos:line="18" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="27">len<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="32">string<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="40">off1<pos:position pos:line="18" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="46">off2<pos:position pos:line="18" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="52">replacement<pos:position pos:line="18" pos:column="63"/></name></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">==<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">ret<pos:position pos:line="19" pos:column="24"/></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="17">free<pos:position pos:line="20" pos:column="21"/></name> <argument_list pos:line="20" pos:column="22">(<argument><expr><name pos:line="20" pos:column="23">buf<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt></block></then></if>
	<return pos:line="21" pos:column="9">return <expr><name pos:line="21" pos:column="16">ret<pos:position pos:line="21" pos:column="19"/></name></expr>;<pos:position pos:line="21" pos:column="20"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2286_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">c_avl_node_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">c_avl_node_prev<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">c_avl_node_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">n<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="55"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">c_avl_node_t<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">r<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt> <comment type="block" pos:line="3" pos:column="26">/* return node */</comment>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">n<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">==<pos:position pos:line="5" pos:column="17"/></operator> <name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
	<block pos:line="6" pos:column="9">{
		<return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">)<pos:position pos:line="7" pos:column="30"/></operator></expr>;<pos:position pos:line="7" pos:column="31"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="10" pos:column="9">/* If we can't descent any further, we have to backtrack to the first
	 * parent that's smaller than we, i. e. who's _right_ child we are. */</comment>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">n<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">left<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">NULL<pos:position pos:line="12" pos:column="28"/></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29">
	<block pos:line="13" pos:column="9">{
		<expr_stmt><expr><name pos:line="14" pos:column="17">r<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name><name pos:line="14" pos:column="21">n<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">parent<pos:position pos:line="14" pos:column="30"/></name></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
		<while pos:line="15" pos:column="17">while <condition pos:line="15" pos:column="23">(<expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">r<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">!=<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="30">NULL<pos:position pos:line="15" pos:column="34"/></name><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator> <operator pos:line="15" pos:column="36">&amp;&amp;<pos:position pos:line="15" pos:column="46"/></operator> <operator pos:line="15" pos:column="39">(<pos:position pos:line="15" pos:column="40"/></operator><name><name pos:line="15" pos:column="40">r<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">parent<pos:position pos:line="15" pos:column="49"/></name></name> <operator pos:line="15" pos:column="50">!=<pos:position pos:line="15" pos:column="52"/></operator> <name pos:line="15" pos:column="53">NULL<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">)<pos:position pos:line="15" pos:column="58"/></operator></expr>)<pos:position pos:line="15" pos:column="59"/></condition>
		<block pos:line="16" pos:column="17">{
			<if pos:line="17" pos:column="25">if <condition pos:line="17" pos:column="28">(<expr><name><name pos:line="17" pos:column="29">r<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">right<pos:position pos:line="17" pos:column="37"/></name></name> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <name pos:line="17" pos:column="41">n<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
				<block type="pseudo"><break pos:line="18" pos:column="33">break;<pos:position pos:line="18" pos:column="39"/></break></block></then></if>
			<expr_stmt><expr><name pos:line="19" pos:column="25">n<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">=<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">r<pos:position pos:line="19" pos:column="30"/></name></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
			<expr_stmt><expr><name pos:line="20" pos:column="25">r<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">=<pos:position pos:line="20" pos:column="28"/></operator> <name><name pos:line="20" pos:column="29">n<pos:position pos:line="20" pos:column="30"/></name><operator pos:line="20" pos:column="30">-&gt;<pos:position pos:line="20" pos:column="35"/></operator><name pos:line="20" pos:column="32">parent<pos:position pos:line="20" pos:column="38"/></name></name></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></while>

		<comment type="block" pos:line="23" pos:column="17">/* n-&gt;left == NULL &amp;&amp; r == NULL =&gt; t is root and has no next
		 * r-&gt;right != n =&gt; r-&gt;left = n =&gt; r-&gt;parent == NULL */</comment>
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">r<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">==<pos:position pos:line="25" pos:column="26"/></operator> <name pos:line="25" pos:column="27">NULL<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">)<pos:position pos:line="25" pos:column="32"/></operator> <operator pos:line="25" pos:column="33">||<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="36">(<pos:position pos:line="25" pos:column="37"/></operator><name><name pos:line="25" pos:column="37">r<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">right<pos:position pos:line="25" pos:column="45"/></name></name> <operator pos:line="25" pos:column="46">!=<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">n<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">)<pos:position pos:line="25" pos:column="51"/></operator></expr>)<pos:position pos:line="25" pos:column="52"/></condition><then pos:line="25" pos:column="52">
		<block pos:line="26" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">assert<pos:position pos:line="27" pos:column="31"/></name> <argument_list pos:line="27" pos:column="32">(<argument><expr><operator pos:line="27" pos:column="33">(<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">r<pos:position pos:line="27" pos:column="35"/></name> <operator pos:line="27" pos:column="36">==<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="39">NULL<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">)<pos:position pos:line="27" pos:column="44"/></operator> <operator pos:line="27" pos:column="45">||<pos:position pos:line="27" pos:column="47"/></operator> <operator pos:line="27" pos:column="48">(<pos:position pos:line="27" pos:column="49"/></operator><name><name pos:line="27" pos:column="49">r<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">-&gt;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="52">parent<pos:position pos:line="27" pos:column="58"/></name></name> <operator pos:line="27" pos:column="59">==<pos:position pos:line="27" pos:column="61"/></operator> <name pos:line="27" pos:column="62">NULL<pos:position pos:line="27" pos:column="66"/></name><operator pos:line="27" pos:column="66">)<pos:position pos:line="27" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="69"/></expr_stmt>
			<return pos:line="28" pos:column="25">return <expr><operator pos:line="28" pos:column="32">(<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">NULL<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">)<pos:position pos:line="28" pos:column="38"/></operator></expr>;<pos:position pos:line="28" pos:column="39"/></return>
		}<pos:position pos:line="29" pos:column="18"/></block></then>
		<else pos:line="30" pos:column="17">else
		<block pos:line="31" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="32" pos:column="25">assert<pos:position pos:line="32" pos:column="31"/></name> <argument_list pos:line="32" pos:column="32">(<argument><expr><name><name pos:line="32" pos:column="33">r<pos:position pos:line="32" pos:column="34"/></name><operator pos:line="32" pos:column="34">-&gt;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="36">right<pos:position pos:line="32" pos:column="41"/></name></name> <operator pos:line="32" pos:column="42">==<pos:position pos:line="32" pos:column="44"/></operator> <name pos:line="32" pos:column="45">n<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
			<return pos:line="33" pos:column="25">return <expr><operator pos:line="33" pos:column="32">(<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="33">r<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">)<pos:position pos:line="33" pos:column="35"/></operator></expr>;<pos:position pos:line="33" pos:column="36"/></return>
		}<pos:position pos:line="34" pos:column="18"/></block></else></if>
	}<pos:position pos:line="35" pos:column="10"/></block></then>
	<else pos:line="36" pos:column="9">else
	<block pos:line="37" pos:column="9">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">r<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name><name pos:line="38" pos:column="21">n<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">-&gt;<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="24">left<pos:position pos:line="38" pos:column="28"/></name></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
		<while pos:line="39" pos:column="17">while <condition pos:line="39" pos:column="23">(<expr><name><name pos:line="39" pos:column="24">r<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">right<pos:position pos:line="39" pos:column="32"/></name></name> <operator pos:line="39" pos:column="33">!=<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">NULL<pos:position pos:line="39" pos:column="40"/></name></expr>)<pos:position pos:line="39" pos:column="41"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">r<pos:position pos:line="40" pos:column="26"/></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <name><name pos:line="40" pos:column="29">r<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">-&gt;<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="32">right<pos:position pos:line="40" pos:column="37"/></name></name></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt></block></while>
	}<pos:position pos:line="41" pos:column="10"/></block></else></if>

	<return pos:line="43" pos:column="9">return <expr><operator pos:line="43" pos:column="16">(<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">r<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">)<pos:position pos:line="43" pos:column="19"/></operator></expr>;<pos:position pos:line="43" pos:column="20"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1820_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">madwifi_config<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">key<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">char<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">value<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="62"/></parameter_list> <block pos:line="1" pos:column="63">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">init_state<pos:position pos:line="2" pos:column="17"/></name> <operator pos:line="2" pos:column="18">!=<pos:position pos:line="2" pos:column="20"/></operator> <literal type="number" pos:line="2" pos:column="21">1<pos:position pos:line="2" pos:column="22"/></literal></expr>)<pos:position pos:line="2" pos:column="23"/></condition><then pos:line="2" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="3" pos:column="5">madwifi_real_init<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">()<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="25"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="4" pos:column="3">init_state<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">=<pos:position pos:line="4" pos:column="15"/></operator> <literal type="number" pos:line="4" pos:column="16">1<pos:position pos:line="4" pos:column="17"/></literal></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">ignorelist<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">==<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">NULL<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="5">ignorelist<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">ignorelist_create<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<comment type="block" pos:line="7" pos:column="36">/* invert = */</comment> <argument><expr><literal type="number" pos:line="7" pos:column="51">1<pos:position pos:line="7" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><call><name pos:line="9" pos:column="7">strcasecmp<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">key<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"Interface"<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call> <operator pos:line="9" pos:column="36">==<pos:position pos:line="9" pos:column="38"/></operator> <literal type="number" pos:line="9" pos:column="39">0<pos:position pos:line="9" pos:column="40"/></literal></expr>)<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="5">ignorelist_add<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">ignorelist<pos:position pos:line="10" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">value<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt></block></then>

  <elseif pos:line="12" pos:column="3">else <if pos:line="12" pos:column="8">if <condition pos:line="12" pos:column="11">(<expr><call><name pos:line="12" pos:column="12">strcasecmp<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">key<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="28">"IgnoreSelected"<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call> <operator pos:line="12" pos:column="46">==<pos:position pos:line="12" pos:column="48"/></operator> <literal type="number" pos:line="12" pos:column="49">0<pos:position pos:line="12" pos:column="50"/></literal></expr>)<pos:position pos:line="12" pos:column="51"/></condition><then pos:line="12" pos:column="51">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">ignorelist_set_invert<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">ignorelist<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="13" pos:column="39">IS_TRUE<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">value<pos:position pos:line="13" pos:column="52"/></name></expr></argument>)<pos:position pos:line="13" pos:column="53"/></argument_list></call></expr> ?<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55"> <expr><literal type="number" pos:line="13" pos:column="56">0<pos:position pos:line="13" pos:column="57"/></literal></expr> <pos:position pos:line="13" pos:column="58"/></then><else pos:line="13" pos:column="58">: <expr><literal type="number" pos:line="13" pos:column="60">1<pos:position pos:line="13" pos:column="61"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt></block></then></if></elseif>

  <elseif pos:line="15" pos:column="3">else <if pos:line="15" pos:column="8">if <condition pos:line="15" pos:column="11">(<expr><call><name pos:line="15" pos:column="12">strcasecmp<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">key<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="28">"Source"<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call> <operator pos:line="15" pos:column="38">==<pos:position pos:line="15" pos:column="40"/></operator> <literal type="number" pos:line="15" pos:column="41">0<pos:position pos:line="15" pos:column="42"/></literal></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43"> <block pos:line="15" pos:column="44">{
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">strcasecmp<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">value<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="27">"ProcFS"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call> <operator pos:line="16" pos:column="37">==<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="7">use_sysfs<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt></block></then>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><call><name pos:line="18" pos:column="14">strcasecmp<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">value<pos:position pos:line="18" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="32">"SysFS"<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call> <operator pos:line="18" pos:column="41">==<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">0<pos:position pos:line="18" pos:column="45"/></literal></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">use_sysfs<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <literal type="number" pos:line="19" pos:column="19">1<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt></block></then></if></elseif>
    <else pos:line="20" pos:column="5">else <block pos:line="20" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">ERROR<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"madwifi plugin: The argument of the `Source' "<pos:position pos:line="21" pos:column="60"/></literal>
            <literal type="string" pos:line="22" pos:column="13">"option must either be `SysFS' or "<pos:position pos:line="22" pos:column="48"/></literal>
            <literal type="string" pos:line="23" pos:column="13">"`ProcFS'."<pos:position pos:line="23" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
      <return pos:line="24" pos:column="7">return <expr><operator pos:line="24" pos:column="14">-<pos:position pos:line="24" pos:column="15"/></operator><literal type="number" pos:line="24" pos:column="15">1<pos:position pos:line="24" pos:column="16"/></literal></expr>;<pos:position pos:line="24" pos:column="17"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if></elseif>

  <elseif pos:line="28" pos:column="3">else <if pos:line="28" pos:column="8">if <condition pos:line="28" pos:column="11">(<expr><call><name pos:line="28" pos:column="12">strcasecmp<pos:position pos:line="28" pos:column="22"/></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">key<pos:position pos:line="28" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="28">"WatchSet"<pos:position pos:line="28" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="39"/></argument_list></call> <operator pos:line="28" pos:column="40">==<pos:position pos:line="28" pos:column="42"/></operator> <literal type="number" pos:line="28" pos:column="43">0<pos:position pos:line="28" pos:column="44"/></literal></expr>)<pos:position pos:line="28" pos:column="45"/></condition><then pos:line="28" pos:column="45"> <block pos:line="28" pos:column="46">{
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">strcasecmp<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name pos:line="29" pos:column="20">value<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"All"<pos:position pos:line="29" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call> <operator pos:line="29" pos:column="34">==<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">watchlist_set<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">watch_items<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="34">0xFFFFFFFF<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt></block></then>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><name pos:line="31" pos:column="25">value<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="32">"None"<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call> <operator pos:line="31" pos:column="40">==<pos:position pos:line="31" pos:column="42"/></operator> <literal type="number" pos:line="31" pos:column="43">0<pos:position pos:line="31" pos:column="44"/></literal></expr>)<pos:position pos:line="31" pos:column="45"/></condition><then pos:line="31" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">watchlist_set<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">watch_items<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="34">0<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <else pos:line="33" pos:column="5">else
      <block type="pseudo"><return pos:line="34" pos:column="7">return <expr><operator pos:line="34" pos:column="14">-<pos:position pos:line="34" pos:column="15"/></operator><literal type="number" pos:line="34" pos:column="15">1<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></return></block></else></if>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if></elseif>

  <elseif pos:line="37" pos:column="3">else <if pos:line="37" pos:column="8">if <condition pos:line="37" pos:column="11">(<expr><call><name pos:line="37" pos:column="12">strcasecmp<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">key<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="28">"WatchAdd"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call> <operator pos:line="37" pos:column="40">==<pos:position pos:line="37" pos:column="42"/></operator> <literal type="number" pos:line="37" pos:column="43">0<pos:position pos:line="37" pos:column="44"/></literal></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <block pos:line="37" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="38" pos:column="5">int<pos:position pos:line="38" pos:column="8"/></name></type> <name pos:line="38" pos:column="9">id<pos:position pos:line="38" pos:column="11"/></name> <init pos:line="38" pos:column="12">= <expr><call><name pos:line="38" pos:column="14">watchitem_find<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">value<pos:position pos:line="38" pos:column="34"/></name></expr></argument>)<pos:position pos:line="38" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="36"/></decl_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">id<pos:position pos:line="40" pos:column="11"/></name> <operator pos:line="40" pos:column="12">&lt;<pos:position pos:line="40" pos:column="16"/></operator> <literal type="number" pos:line="40" pos:column="14">0<pos:position pos:line="40" pos:column="15"/></literal></expr>)<pos:position pos:line="40" pos:column="16"/></condition><then pos:line="40" pos:column="16">
      <block type="pseudo"><return pos:line="41" pos:column="7">return <expr><operator pos:line="41" pos:column="14">(<pos:position pos:line="41" pos:column="15"/></operator><operator pos:line="41" pos:column="15">-<pos:position pos:line="41" pos:column="16"/></operator><literal type="number" pos:line="41" pos:column="16">1<pos:position pos:line="41" pos:column="17"/></literal><operator pos:line="41" pos:column="17">)<pos:position pos:line="41" pos:column="18"/></operator></expr>;<pos:position pos:line="41" pos:column="19"/></return></block></then>
    <else pos:line="42" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">watchlist_add<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">watch_items<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">id<pos:position pos:line="43" pos:column="36"/></name></expr></argument>)<pos:position pos:line="43" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="38"/></expr_stmt></block></else></if>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if></elseif>

  <elseif pos:line="46" pos:column="3">else <if pos:line="46" pos:column="8">if <condition pos:line="46" pos:column="11">(<expr><call><name pos:line="46" pos:column="12">strcasecmp<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name pos:line="46" pos:column="23">key<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="28">"WatchRemove"<pos:position pos:line="46" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call> <operator pos:line="46" pos:column="43">==<pos:position pos:line="46" pos:column="45"/></operator> <literal type="number" pos:line="46" pos:column="46">0<pos:position pos:line="46" pos:column="47"/></literal></expr>)<pos:position pos:line="46" pos:column="48"/></condition><then pos:line="46" pos:column="48"> <block pos:line="46" pos:column="49">{
    <decl_stmt><decl><type><name pos:line="47" pos:column="5">int<pos:position pos:line="47" pos:column="8"/></name></type> <name pos:line="47" pos:column="9">id<pos:position pos:line="47" pos:column="11"/></name> <init pos:line="47" pos:column="12">= <expr><call><name pos:line="47" pos:column="14">watchitem_find<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">value<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="36"/></decl_stmt>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">id<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">&lt;<pos:position pos:line="49" pos:column="16"/></operator> <literal type="number" pos:line="49" pos:column="14">0<pos:position pos:line="49" pos:column="15"/></literal></expr>)<pos:position pos:line="49" pos:column="16"/></condition><then pos:line="49" pos:column="16">
      <block type="pseudo"><return pos:line="50" pos:column="7">return <expr><operator pos:line="50" pos:column="14">(<pos:position pos:line="50" pos:column="15"/></operator><operator pos:line="50" pos:column="15">-<pos:position pos:line="50" pos:column="16"/></operator><literal type="number" pos:line="50" pos:column="16">1<pos:position pos:line="50" pos:column="17"/></literal><operator pos:line="50" pos:column="17">)<pos:position pos:line="50" pos:column="18"/></operator></expr>;<pos:position pos:line="50" pos:column="19"/></return></block></then>
    <else pos:line="51" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">watchlist_remove<pos:position pos:line="52" pos:column="23"/></name><argument_list pos:line="52" pos:column="23">(<argument><expr><name pos:line="52" pos:column="24">watch_items<pos:position pos:line="52" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="37">id<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="41"/></expr_stmt></block></else></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if></elseif>

  <elseif pos:line="55" pos:column="3">else <if pos:line="55" pos:column="8">if <condition pos:line="55" pos:column="11">(<expr><call><name pos:line="55" pos:column="12">strcasecmp<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">key<pos:position pos:line="55" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="28">"MiscSet"<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call> <operator pos:line="55" pos:column="39">==<pos:position pos:line="55" pos:column="41"/></operator> <literal type="number" pos:line="55" pos:column="42">0<pos:position pos:line="55" pos:column="43"/></literal></expr>)<pos:position pos:line="55" pos:column="44"/></condition><then pos:line="55" pos:column="44"> <block pos:line="55" pos:column="45">{
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">strcasecmp<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name pos:line="56" pos:column="20">value<pos:position pos:line="56" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="27">"All"<pos:position pos:line="56" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="33"/></argument_list></call> <operator pos:line="56" pos:column="34">==<pos:position pos:line="56" pos:column="36"/></operator> <literal type="number" pos:line="56" pos:column="37">0<pos:position pos:line="56" pos:column="38"/></literal></expr>)<pos:position pos:line="56" pos:column="39"/></condition><then pos:line="56" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">watchlist_set<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">misc_items<pos:position pos:line="57" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="33">0xFFFFFFFF<pos:position pos:line="57" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="45"/></expr_stmt></block></then>
    <elseif pos:line="58" pos:column="5">else <if pos:line="58" pos:column="10">if <condition pos:line="58" pos:column="13">(<expr><call><name pos:line="58" pos:column="14">strcasecmp<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><name pos:line="58" pos:column="25">value<pos:position pos:line="58" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="32">"None"<pos:position pos:line="58" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call> <operator pos:line="58" pos:column="40">==<pos:position pos:line="58" pos:column="42"/></operator> <literal type="number" pos:line="58" pos:column="43">0<pos:position pos:line="58" pos:column="44"/></literal></expr>)<pos:position pos:line="58" pos:column="45"/></condition><then pos:line="58" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="7">watchlist_set<pos:position pos:line="59" pos:column="20"/></name><argument_list pos:line="59" pos:column="20">(<argument><expr><name pos:line="59" pos:column="21">misc_items<pos:position pos:line="59" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="33">0<pos:position pos:line="59" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="36"/></expr_stmt></block></then></if></elseif>
    <else pos:line="60" pos:column="5">else
      <block type="pseudo"><return pos:line="61" pos:column="7">return <expr><operator pos:line="61" pos:column="14">-<pos:position pos:line="61" pos:column="15"/></operator><literal type="number" pos:line="61" pos:column="15">1<pos:position pos:line="61" pos:column="16"/></literal></expr>;<pos:position pos:line="61" pos:column="17"/></return></block></else></if>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if></elseif>

  <elseif pos:line="64" pos:column="3">else <if pos:line="64" pos:column="8">if <condition pos:line="64" pos:column="11">(<expr><call><name pos:line="64" pos:column="12">strcasecmp<pos:position pos:line="64" pos:column="22"/></name><argument_list pos:line="64" pos:column="22">(<argument><expr><name pos:line="64" pos:column="23">key<pos:position pos:line="64" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="28">"MiscAdd"<pos:position pos:line="64" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="38"/></argument_list></call> <operator pos:line="64" pos:column="39">==<pos:position pos:line="64" pos:column="41"/></operator> <literal type="number" pos:line="64" pos:column="42">0<pos:position pos:line="64" pos:column="43"/></literal></expr>)<pos:position pos:line="64" pos:column="44"/></condition><then pos:line="64" pos:column="44"> <block pos:line="64" pos:column="45">{
    <decl_stmt><decl><type><name pos:line="65" pos:column="5">int<pos:position pos:line="65" pos:column="8"/></name></type> <name pos:line="65" pos:column="9">id<pos:position pos:line="65" pos:column="11"/></name> <init pos:line="65" pos:column="12">= <expr><call><name pos:line="65" pos:column="14">watchitem_find<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">value<pos:position pos:line="65" pos:column="34"/></name></expr></argument>)<pos:position pos:line="65" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="36"/></decl_stmt>

    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">id<pos:position pos:line="67" pos:column="11"/></name> <operator pos:line="67" pos:column="12">&lt;<pos:position pos:line="67" pos:column="16"/></operator> <literal type="number" pos:line="67" pos:column="14">0<pos:position pos:line="67" pos:column="15"/></literal></expr>)<pos:position pos:line="67" pos:column="16"/></condition><then pos:line="67" pos:column="16">
      <block type="pseudo"><return pos:line="68" pos:column="7">return <expr><operator pos:line="68" pos:column="14">(<pos:position pos:line="68" pos:column="15"/></operator><operator pos:line="68" pos:column="15">-<pos:position pos:line="68" pos:column="16"/></operator><literal type="number" pos:line="68" pos:column="16">1<pos:position pos:line="68" pos:column="17"/></literal><operator pos:line="68" pos:column="17">)<pos:position pos:line="68" pos:column="18"/></operator></expr>;<pos:position pos:line="68" pos:column="19"/></return></block></then>
    <else pos:line="69" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="70" pos:column="7">watchlist_add<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><name pos:line="70" pos:column="21">misc_items<pos:position pos:line="70" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="33">id<pos:position pos:line="70" pos:column="35"/></name></expr></argument>)<pos:position pos:line="70" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="37"/></expr_stmt></block></else></if>
  }<pos:position pos:line="71" pos:column="4"/></block></then></if></elseif>

  <elseif pos:line="73" pos:column="3">else <if pos:line="73" pos:column="8">if <condition pos:line="73" pos:column="11">(<expr><call><name pos:line="73" pos:column="12">strcasecmp<pos:position pos:line="73" pos:column="22"/></name><argument_list pos:line="73" pos:column="22">(<argument><expr><name pos:line="73" pos:column="23">key<pos:position pos:line="73" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="28">"MiscRemove"<pos:position pos:line="73" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="41"/></argument_list></call> <operator pos:line="73" pos:column="42">==<pos:position pos:line="73" pos:column="44"/></operator> <literal type="number" pos:line="73" pos:column="45">0<pos:position pos:line="73" pos:column="46"/></literal></expr>)<pos:position pos:line="73" pos:column="47"/></condition><then pos:line="73" pos:column="47"> <block pos:line="73" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="74" pos:column="5">int<pos:position pos:line="74" pos:column="8"/></name></type> <name pos:line="74" pos:column="9">id<pos:position pos:line="74" pos:column="11"/></name> <init pos:line="74" pos:column="12">= <expr><call><name pos:line="74" pos:column="14">watchitem_find<pos:position pos:line="74" pos:column="28"/></name><argument_list pos:line="74" pos:column="28">(<argument><expr><name pos:line="74" pos:column="29">value<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="36"/></decl_stmt>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">id<pos:position pos:line="76" pos:column="11"/></name> <operator pos:line="76" pos:column="12">&lt;<pos:position pos:line="76" pos:column="16"/></operator> <literal type="number" pos:line="76" pos:column="14">0<pos:position pos:line="76" pos:column="15"/></literal></expr>)<pos:position pos:line="76" pos:column="16"/></condition><then pos:line="76" pos:column="16">
      <block type="pseudo"><return pos:line="77" pos:column="7">return <expr><operator pos:line="77" pos:column="14">(<pos:position pos:line="77" pos:column="15"/></operator><operator pos:line="77" pos:column="15">-<pos:position pos:line="77" pos:column="16"/></operator><literal type="number" pos:line="77" pos:column="16">1<pos:position pos:line="77" pos:column="17"/></literal><operator pos:line="77" pos:column="17">)<pos:position pos:line="77" pos:column="18"/></operator></expr>;<pos:position pos:line="77" pos:column="19"/></return></block></then>
    <else pos:line="78" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="7">watchlist_remove<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><name pos:line="79" pos:column="24">misc_items<pos:position pos:line="79" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="36">id<pos:position pos:line="79" pos:column="38"/></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt></block></else></if>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if></elseif>

  <else pos:line="82" pos:column="3">else
    <block type="pseudo"><return pos:line="83" pos:column="5">return <expr><operator pos:line="83" pos:column="12">(<pos:position pos:line="83" pos:column="13"/></operator><operator pos:line="83" pos:column="13">-<pos:position pos:line="83" pos:column="14"/></operator><literal type="number" pos:line="83" pos:column="14">1<pos:position pos:line="83" pos:column="15"/></literal><operator pos:line="83" pos:column="15">)<pos:position pos:line="83" pos:column="16"/></operator></expr>;<pos:position pos:line="83" pos:column="17"/></return></block></else></if>

  <return pos:line="85" pos:column="3">return <expr><operator pos:line="85" pos:column="10">(<pos:position pos:line="85" pos:column="11"/></operator><literal type="number" pos:line="85" pos:column="11">0<pos:position pos:line="85" pos:column="12"/></literal><operator pos:line="85" pos:column="12">)<pos:position pos:line="85" pos:column="13"/></operator></expr>;<pos:position pos:line="85" pos:column="14"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1549_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ceph_config<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">oconfig_item_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">ci<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">ret<pos:position pos:line="3" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="14">i<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

    <for pos:line="5" pos:column="5">for<control pos:line="5" pos:column="8">(<init><expr><name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">=<pos:position pos:line="5" pos:column="12"/></operator> <literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></init> <condition><expr><name pos:line="5" pos:column="16">i<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&lt;<pos:position pos:line="5" pos:column="22"/></operator> <name><name pos:line="5" pos:column="20">ci<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">children_num<pos:position pos:line="5" pos:column="36"/></name></name></expr>;<pos:position pos:line="5" pos:column="37"/></condition> <incr><expr><operator pos:line="5" pos:column="38">++<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">i<pos:position pos:line="5" pos:column="41"/></name></expr></incr>)<pos:position pos:line="5" pos:column="42"/></control>
    <block pos:line="6" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">oconfig_item_t<pos:position pos:line="7" pos:column="23"/></name> <modifier pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></modifier></type><name pos:line="7" pos:column="25">child<pos:position pos:line="7" pos:column="30"/></name> <init pos:line="7" pos:column="31">= <expr><name><name pos:line="7" pos:column="33">ci<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">children<pos:position pos:line="7" pos:column="45"/></name></name> <operator pos:line="7" pos:column="46">+<pos:position pos:line="7" pos:column="47"/></operator> <name pos:line="7" pos:column="48">i<pos:position pos:line="7" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
        <if pos:line="8" pos:column="9">if<condition pos:line="8" pos:column="11">(<expr><call><name pos:line="8" pos:column="12">strcasecmp<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="string" pos:line="8" pos:column="23">"Daemon"<pos:position pos:line="8" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="33">child<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">key<pos:position pos:line="8" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call> <operator pos:line="8" pos:column="45">==<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
        <block pos:line="9" pos:column="9">{
            <expr_stmt><expr><name pos:line="10" pos:column="13">ret<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">cc_add_daemon_config<pos:position pos:line="10" pos:column="39"/></name><argument_list pos:line="10" pos:column="39">(<argument><expr><name pos:line="10" pos:column="40">child<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
            <if pos:line="11" pos:column="13">if<condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">ret<pos:position pos:line="11" pos:column="19"/></name> <operator pos:line="11" pos:column="20">==<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="23">ENOMEM<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
            <block pos:line="12" pos:column="13">{
                <expr_stmt><expr><call><name pos:line="13" pos:column="17">ERROR<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><literal type="string" pos:line="13" pos:column="23">"ceph plugin: Couldn't allocate memory"<pos:position pos:line="13" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
                <return pos:line="14" pos:column="17">return <expr><name pos:line="14" pos:column="24">ret<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></return>
            }<pos:position pos:line="15" pos:column="14"/></block></then>
            <elseif pos:line="16" pos:column="13">else <if pos:line="16" pos:column="18">if<condition pos:line="16" pos:column="20">(<expr><name pos:line="16" pos:column="21">ret<pos:position pos:line="16" pos:column="24"/></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
            <block pos:line="17" pos:column="13">{
                <comment type="line" pos:line="18" pos:column="17">//process other daemons and ignore this one</comment>
                <continue pos:line="19" pos:column="17">continue;<pos:position pos:line="19" pos:column="26"/></continue>
            }<pos:position pos:line="20" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="21" pos:column="10"/></block></then>
        <elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if<condition pos:line="22" pos:column="16">(<expr><call><name pos:line="22" pos:column="17">strcasecmp<pos:position pos:line="22" pos:column="27"/></name><argument_list pos:line="22" pos:column="27">(<argument><expr><literal type="string" pos:line="22" pos:column="28">"LongRunAvgLatency"<pos:position pos:line="22" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="49">child<pos:position pos:line="22" pos:column="54"/></name><operator pos:line="22" pos:column="54">-&gt;<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="56">key<pos:position pos:line="22" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call> <operator pos:line="22" pos:column="61">==<pos:position pos:line="22" pos:column="63"/></operator> <literal type="number" pos:line="22" pos:column="64">0<pos:position pos:line="22" pos:column="65"/></literal></expr>)<pos:position pos:line="22" pos:column="66"/></condition><then pos:line="22" pos:column="66">
        <block pos:line="23" pos:column="9">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">ret<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <call><name pos:line="24" pos:column="19">cc_handle_bool<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">child<pos:position pos:line="24" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="41">&amp;<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="42">long_run_latency_avg<pos:position pos:line="24" pos:column="62"/></name></expr></argument>)<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt>
            <if pos:line="25" pos:column="13">if<condition pos:line="25" pos:column="15">(<expr><name pos:line="25" pos:column="16">ret<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20">
            <block pos:line="26" pos:column="13">{
                <return pos:line="27" pos:column="17">return <expr><name pos:line="27" pos:column="24">ret<pos:position pos:line="27" pos:column="27"/></name></expr>;<pos:position pos:line="27" pos:column="28"/></return>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif>
        <elseif pos:line="30" pos:column="9">else <if pos:line="30" pos:column="14">if<condition pos:line="30" pos:column="16">(<expr><call><name pos:line="30" pos:column="17">strcasecmp<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><literal type="string" pos:line="30" pos:column="28">"ConvertSpecialMetricTypes"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="57">child<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">-&gt;<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="64">key<pos:position pos:line="30" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call> <operator pos:line="30" pos:column="69">==<pos:position pos:line="30" pos:column="71"/></operator> <literal type="number" pos:line="30" pos:column="72">0<pos:position pos:line="30" pos:column="73"/></literal></expr>)<pos:position pos:line="30" pos:column="74"/></condition><then pos:line="30" pos:column="74">
        <block pos:line="31" pos:column="9">{
            <expr_stmt><expr><name pos:line="32" pos:column="13">ret<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">=<pos:position pos:line="32" pos:column="18"/></operator> <call><name pos:line="32" pos:column="19">cc_handle_bool<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">child<pos:position pos:line="32" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="41">&amp;<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="42">convert_special_metrics<pos:position pos:line="32" pos:column="65"/></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
            <if pos:line="33" pos:column="13">if<condition pos:line="33" pos:column="15">(<expr><name pos:line="33" pos:column="16">ret<pos:position pos:line="33" pos:column="19"/></name></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20">
            <block pos:line="34" pos:column="13">{
                <return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">ret<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></return>
            }<pos:position pos:line="36" pos:column="14"/></block></then></if>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if></elseif>
        <else pos:line="38" pos:column="9">else
        <block pos:line="39" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">WARNING<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><literal type="string" pos:line="40" pos:column="21">"ceph plugin: ignoring unknown option %s"<pos:position pos:line="40" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="64">child<pos:position pos:line="40" pos:column="69"/></name><operator pos:line="40" pos:column="69">-&gt;<pos:position pos:line="40" pos:column="74"/></operator><name pos:line="40" pos:column="71">key<pos:position pos:line="40" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="76"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></else></if>
    }<pos:position pos:line="42" pos:column="6"/></block></for>
    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">0<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

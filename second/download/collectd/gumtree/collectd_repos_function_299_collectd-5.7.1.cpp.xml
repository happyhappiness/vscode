<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_299_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <comment type="block" pos:line="1" pos:column="28">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">hostlist_head<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">==<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">NULL<pos:position pos:line="3" pos:column="28"/></name></expr>)<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29"> <block pos:line="3" pos:column="30">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">NOTICE<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="string" pos:line="4" pos:column="12">"ping plugin: No hosts have been configured."<pos:position pos:line="4" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="59"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">-<pos:position pos:line="5" pos:column="14"/></operator><literal type="number" pos:line="5" pos:column="14">1<pos:position pos:line="5" pos:column="15"/></literal><operator pos:line="5" pos:column="15">)<pos:position pos:line="5" pos:column="16"/></operator></expr>;<pos:position pos:line="5" pos:column="17"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">ping_timeout<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&gt;<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="22">ping_interval<pos:position pos:line="8" pos:column="35"/></name></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36"> <block pos:line="8" pos:column="37">{
    <expr_stmt><expr><name pos:line="9" pos:column="5">ping_timeout<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <literal type="number" pos:line="9" pos:column="20">0.9<pos:position pos:line="9" pos:column="23"/></literal> <operator pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">ping_interval<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">WARNING<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><literal type="string" pos:line="10" pos:column="13">"ping plugin: Timeout is greater than interval. "<pos:position pos:line="10" pos:column="62"/></literal>
            <literal type="string" pos:line="11" pos:column="13">"Will use a timeout of %gs."<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>,
            <argument><expr><name pos:line="12" pos:column="13">ping_timeout<pos:position pos:line="12" pos:column="25"/></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><call><name pos:line="15" pos:column="5">defined<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">HAVE_SYS_CAPABILITY_H<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call> <operator pos:line="15" pos:column="36">&amp;&amp;<pos:position pos:line="15" pos:column="46"/></operator> <call><name pos:line="15" pos:column="39">defined<pos:position pos:line="15" pos:column="46"/></name><argument_list pos:line="15" pos:column="46">(<argument><expr><name pos:line="15" pos:column="47">CAP_NET_RAW<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr></cpp:if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">check_capability<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">CAP_NET_RAW<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call> <operator pos:line="16" pos:column="37">!=<pos:position pos:line="16" pos:column="39"/></operator> <literal type="number" pos:line="16" pos:column="40">0<pos:position pos:line="16" pos:column="41"/></literal></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42"> <block pos:line="16" pos:column="43">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">getuid<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">()<pos:position pos:line="17" pos:column="17"/></argument_list></call> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="7">WARNING<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><literal type="string" pos:line="18" pos:column="15">"ping plugin: Running collectd as root, but the CAP_NET_RAW "<pos:position pos:line="18" pos:column="76"/></literal>
              <literal type="string" pos:line="19" pos:column="15">"capability is missing. The plugin's read function will probably "<pos:position pos:line="19" pos:column="81"/></literal>
              <literal type="string" pos:line="20" pos:column="15">"fail. Is your init system dropping capabilities?"<pos:position pos:line="20" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt></block></then>
    <else pos:line="21" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="7">WARNING<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="string" pos:line="22" pos:column="15">"ping plugin: collectd doesn't have the CAP_NET_RAW capability. "<pos:position pos:line="22" pos:column="80"/></literal>
              <literal type="string" pos:line="23" pos:column="15">"If you don't want to run collectd as root, try running \"setcap "<pos:position pos:line="23" pos:column="81"/></literal>
              <literal type="string" pos:line="24" pos:column="15">"cap_net_raw=ep\" on the collectd binary."<pos:position pos:line="24" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt></block></else></if>
  }<pos:position pos:line="25" pos:column="4"/></block></then></if>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="28" pos:column="3">return <expr><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><call><name pos:line="28" pos:column="11">start_thread<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">()<pos:position pos:line="28" pos:column="25"/></argument_list></call><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator></expr>;<pos:position pos:line="28" pos:column="27"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_288_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_read<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <comment type="block" pos:line="1" pos:column="28">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">ping_thread_error<pos:position pos:line="3" pos:column="24"/></name> <operator pos:line="3" pos:column="25">!=<pos:position pos:line="3" pos:column="27"/></operator> <literal type="number" pos:line="3" pos:column="28">0<pos:position pos:line="3" pos:column="29"/></literal></expr>)<pos:position pos:line="3" pos:column="30"/></condition><then pos:line="3" pos:column="30"> <block pos:line="3" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ERROR<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><literal type="string" pos:line="4" pos:column="11">"ping plugin: The ping thread had a problem. Restarting it."<pos:position pos:line="4" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="73"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">stop_thread<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">()<pos:position pos:line="6" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name pos:line="8" pos:column="10">hostlist_t<pos:position pos:line="8" pos:column="20"/></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">hl<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">hostlist_head<pos:position pos:line="8" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></init> <condition><expr><name pos:line="8" pos:column="42">hl<pos:position pos:line="8" pos:column="44"/></name> <operator pos:line="8" pos:column="45">!=<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="48">NULL<pos:position pos:line="8" pos:column="52"/></name></expr>;<pos:position pos:line="8" pos:column="53"/></condition> <incr><expr><name pos:line="8" pos:column="54">hl<pos:position pos:line="8" pos:column="56"/></name> <operator pos:line="8" pos:column="57">=<pos:position pos:line="8" pos:column="58"/></operator> <name><name pos:line="8" pos:column="59">hl<pos:position pos:line="8" pos:column="61"/></name><operator pos:line="8" pos:column="61">-&gt;<pos:position pos:line="8" pos:column="66"/></operator><name pos:line="8" pos:column="63">next<pos:position pos:line="8" pos:column="67"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="68"/></control> <block pos:line="8" pos:column="69">{
      <expr_stmt><expr><name><name pos:line="9" pos:column="7">hl<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">pkg_sent<pos:position pos:line="9" pos:column="19"/></name></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="10" pos:column="7">hl<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">pkg_recv<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="number" pos:line="10" pos:column="22">0<pos:position pos:line="10" pos:column="23"/></literal></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="11" pos:column="7">hl<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">-&gt;<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="11">latency_total<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <literal type="number" pos:line="11" pos:column="27">0.0<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="12" pos:column="7">hl<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">latency_squared<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="29">0.0<pos:position pos:line="12" pos:column="32"/></literal></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">start_thread<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">()<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>

    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><operator pos:line="17" pos:column="13">-<pos:position pos:line="17" pos:column="14"/></operator><literal type="number" pos:line="17" pos:column="14">1<pos:position pos:line="17" pos:column="15"/></literal><operator pos:line="17" pos:column="15">)<pos:position pos:line="17" pos:column="16"/></operator></expr>;<pos:position pos:line="17" pos:column="17"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if> <comment type="block" pos:line="18" pos:column="5">/* if (ping_thread_error != 0) */</comment>

  <for pos:line="20" pos:column="3">for <control pos:line="20" pos:column="7">(<init><decl><type><name pos:line="20" pos:column="8">hostlist_t<pos:position pos:line="20" pos:column="18"/></name> <modifier pos:line="20" pos:column="19">*<pos:position pos:line="20" pos:column="20"/></modifier></type><name pos:line="20" pos:column="20">hl<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><name pos:line="20" pos:column="25">hostlist_head<pos:position pos:line="20" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="20" pos:column="39"/></init> <condition><expr><name pos:line="20" pos:column="40">hl<pos:position pos:line="20" pos:column="42"/></name> <operator pos:line="20" pos:column="43">!=<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="46">NULL<pos:position pos:line="20" pos:column="50"/></name></expr>;<pos:position pos:line="20" pos:column="51"/></condition> <incr><expr><name pos:line="20" pos:column="52">hl<pos:position pos:line="20" pos:column="54"/></name> <operator pos:line="20" pos:column="55">=<pos:position pos:line="20" pos:column="56"/></operator> <name><name pos:line="20" pos:column="57">hl<pos:position pos:line="20" pos:column="59"/></name><operator pos:line="20" pos:column="59">-&gt;<pos:position pos:line="20" pos:column="64"/></operator><name pos:line="20" pos:column="61">next<pos:position pos:line="20" pos:column="65"/></name></name></expr></incr>)<pos:position pos:line="20" pos:column="66"/></control> <comment type="block" pos:line="20" pos:column="67">/* {{{ */</comment>
  <block pos:line="21" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">uint32_t<pos:position pos:line="22" pos:column="13"/></name></type> <name pos:line="22" pos:column="14">pkg_sent<pos:position pos:line="22" pos:column="22"/></name></decl>;<pos:position pos:line="22" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">uint32_t<pos:position pos:line="23" pos:column="13"/></name></type> <name pos:line="23" pos:column="14">pkg_recv<pos:position pos:line="23" pos:column="22"/></name></decl>;<pos:position pos:line="23" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">double<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">latency_total<pos:position pos:line="24" pos:column="25"/></name></decl>;<pos:position pos:line="24" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">double<pos:position pos:line="25" pos:column="11"/></name></type> <name pos:line="25" pos:column="12">latency_squared<pos:position pos:line="25" pos:column="27"/></name></decl>;<pos:position pos:line="25" pos:column="28"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="27" pos:column="5">double<pos:position pos:line="27" pos:column="11"/></name></type> <name pos:line="27" pos:column="12">latency_average<pos:position pos:line="27" pos:column="27"/></name></decl>;<pos:position pos:line="27" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">double<pos:position pos:line="28" pos:column="11"/></name></type> <name pos:line="28" pos:column="12">latency_stddev<pos:position pos:line="28" pos:column="26"/></name></decl>;<pos:position pos:line="28" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="30" pos:column="5">double<pos:position pos:line="30" pos:column="11"/></name></type> <name pos:line="30" pos:column="12">droprate<pos:position pos:line="30" pos:column="20"/></name></decl>;<pos:position pos:line="30" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="32" pos:column="5">/* Locking here works, because the structure of the linked list is only
     * changed during configure and shutdown. */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">pthread_mutex_lock<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><operator pos:line="34" pos:column="24">&amp;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="25">ping_lock<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><name pos:line="36" pos:column="5">pkg_sent<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <name><name pos:line="36" pos:column="16">hl<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">pkg_sent<pos:position pos:line="36" pos:column="28"/></name></name></expr>;<pos:position pos:line="36" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">pkg_recv<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <name><name pos:line="37" pos:column="16">hl<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">pkg_recv<pos:position pos:line="37" pos:column="28"/></name></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">latency_total<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name><name pos:line="38" pos:column="21">hl<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">latency_total<pos:position pos:line="38" pos:column="38"/></name></name></expr>;<pos:position pos:line="38" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">latency_squared<pos:position pos:line="39" pos:column="20"/></name> <operator pos:line="39" pos:column="21">=<pos:position pos:line="39" pos:column="22"/></operator> <name><name pos:line="39" pos:column="23">hl<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">latency_squared<pos:position pos:line="39" pos:column="42"/></name></name></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">hl<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">pkg_sent<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr>;<pos:position pos:line="41" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">hl<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">-&gt;<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="9">pkg_recv<pos:position pos:line="42" pos:column="17"/></name></name> <operator pos:line="42" pos:column="18">=<pos:position pos:line="42" pos:column="19"/></operator> <literal type="number" pos:line="42" pos:column="20">0<pos:position pos:line="42" pos:column="21"/></literal></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">hl<pos:position pos:line="43" pos:column="7"/></name><operator pos:line="43" pos:column="7">-&gt;<pos:position pos:line="43" pos:column="12"/></operator><name pos:line="43" pos:column="9">latency_total<pos:position pos:line="43" pos:column="22"/></name></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <literal type="number" pos:line="43" pos:column="25">0.0<pos:position pos:line="43" pos:column="28"/></literal></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">hl<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">-&gt;<pos:position pos:line="44" pos:column="12"/></operator><name pos:line="44" pos:column="9">latency_squared<pos:position pos:line="44" pos:column="24"/></name></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <literal type="number" pos:line="44" pos:column="27">0.0<pos:position pos:line="44" pos:column="30"/></literal></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="46" pos:column="5">pthread_mutex_unlock<pos:position pos:line="46" pos:column="25"/></name><argument_list pos:line="46" pos:column="25">(<argument><expr><operator pos:line="46" pos:column="26">&amp;<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="27">ping_lock<pos:position pos:line="46" pos:column="36"/></name></expr></argument>)<pos:position pos:line="46" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="38"/></expr_stmt>

    <comment type="block" pos:line="48" pos:column="5">/* This e. g. happens when starting up. */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name pos:line="49" pos:column="9">pkg_sent<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">==<pos:position pos:line="49" pos:column="20"/></operator> <literal type="number" pos:line="49" pos:column="21">0<pos:position pos:line="49" pos:column="22"/></literal></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23"> <block pos:line="49" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">DEBUG<pos:position pos:line="50" pos:column="12"/></name><argument_list pos:line="50" pos:column="12">(<argument><expr><literal type="string" pos:line="50" pos:column="13">"ping plugin: No packages for host %s have been sent."<pos:position pos:line="50" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="69">hl<pos:position pos:line="50" pos:column="71"/></name><operator pos:line="50" pos:column="71">-&gt;<pos:position pos:line="50" pos:column="76"/></operator><name pos:line="50" pos:column="73">host<pos:position pos:line="50" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="79"/></expr_stmt>
      <continue pos:line="51" pos:column="7">continue;<pos:position pos:line="51" pos:column="16"/></continue>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* Calculate average. Beware of division by zero. */</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">pkg_recv<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">==<pos:position pos:line="55" pos:column="20"/></operator> <literal type="number" pos:line="55" pos:column="21">0<pos:position pos:line="55" pos:column="22"/></literal></expr>)<pos:position pos:line="55" pos:column="23"/></condition><then pos:line="55" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="7">latency_average<pos:position pos:line="56" pos:column="22"/></name> <operator pos:line="56" pos:column="23">=<pos:position pos:line="56" pos:column="24"/></operator> <name pos:line="56" pos:column="25">NAN<pos:position pos:line="56" pos:column="28"/></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="57" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="7">latency_average<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name pos:line="58" pos:column="25">latency_total<pos:position pos:line="58" pos:column="38"/></name> <operator pos:line="58" pos:column="39">/<pos:position pos:line="58" pos:column="40"/></operator> <operator pos:line="58" pos:column="41">(<pos:position pos:line="58" pos:column="42"/></operator><operator pos:line="58" pos:column="42">(<pos:position pos:line="58" pos:column="43"/></operator><name pos:line="58" pos:column="43">double<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">)<pos:position pos:line="58" pos:column="50"/></operator><name pos:line="58" pos:column="50">pkg_recv<pos:position pos:line="58" pos:column="58"/></name><operator pos:line="58" pos:column="58">)<pos:position pos:line="58" pos:column="59"/></operator></expr>;<pos:position pos:line="58" pos:column="60"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="60" pos:column="5">/* Calculate standard deviation. Beware even more of division by zero. */</comment>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">pkg_recv<pos:position pos:line="61" pos:column="17"/></name> <operator pos:line="61" pos:column="18">==<pos:position pos:line="61" pos:column="20"/></operator> <literal type="number" pos:line="61" pos:column="21">0<pos:position pos:line="61" pos:column="22"/></literal></expr>)<pos:position pos:line="61" pos:column="23"/></condition><then pos:line="61" pos:column="23">
      <block type="pseudo"><expr_stmt><expr><name pos:line="62" pos:column="7">latency_stddev<pos:position pos:line="62" pos:column="21"/></name> <operator pos:line="62" pos:column="22">=<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="24">NAN<pos:position pos:line="62" pos:column="27"/></name></expr>;<pos:position pos:line="62" pos:column="28"/></expr_stmt></block></then>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><name pos:line="63" pos:column="14">pkg_recv<pos:position pos:line="63" pos:column="22"/></name> <operator pos:line="63" pos:column="23">==<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="26">1<pos:position pos:line="63" pos:column="27"/></literal></expr>)<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="7">latency_stddev<pos:position pos:line="64" pos:column="21"/></name> <operator pos:line="64" pos:column="22">=<pos:position pos:line="64" pos:column="23"/></operator> <literal type="number" pos:line="64" pos:column="24">0.0<pos:position pos:line="64" pos:column="27"/></literal></expr>;<pos:position pos:line="64" pos:column="28"/></expr_stmt></block></then></if></elseif>
    <else pos:line="65" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="7">latency_stddev<pos:position pos:line="66" pos:column="21"/></name> <operator pos:line="66" pos:column="22">=<pos:position pos:line="66" pos:column="23"/></operator> <call><name pos:line="66" pos:column="24">sqrt<pos:position pos:line="66" pos:column="28"/></name><argument_list pos:line="66" pos:column="28">(<argument><expr><operator pos:line="66" pos:column="29">(<pos:position pos:line="66" pos:column="30"/></operator><operator pos:line="66" pos:column="30">(<pos:position pos:line="66" pos:column="31"/></operator><operator pos:line="66" pos:column="31">(<pos:position pos:line="66" pos:column="32"/></operator><operator pos:line="66" pos:column="32">(<pos:position pos:line="66" pos:column="33"/></operator><name pos:line="66" pos:column="33">double<pos:position pos:line="66" pos:column="39"/></name><operator pos:line="66" pos:column="39">)<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="40">pkg_recv<pos:position pos:line="66" pos:column="48"/></name><operator pos:line="66" pos:column="48">)<pos:position pos:line="66" pos:column="49"/></operator> <operator pos:line="66" pos:column="50">*<pos:position pos:line="66" pos:column="51"/></operator> <name pos:line="66" pos:column="52">latency_squared<pos:position pos:line="66" pos:column="67"/></name><operator pos:line="66" pos:column="67">)<pos:position pos:line="66" pos:column="68"/></operator> <operator pos:line="66" pos:column="69">-<pos:position pos:line="66" pos:column="70"/></operator>
                             <operator pos:line="67" pos:column="30">(<pos:position pos:line="67" pos:column="31"/></operator><name pos:line="67" pos:column="31">latency_total<pos:position pos:line="67" pos:column="44"/></name> <operator pos:line="67" pos:column="45">*<pos:position pos:line="67" pos:column="46"/></operator> <name pos:line="67" pos:column="47">latency_total<pos:position pos:line="67" pos:column="60"/></name><operator pos:line="67" pos:column="60">)<pos:position pos:line="67" pos:column="61"/></operator><operator pos:line="67" pos:column="61">)<pos:position pos:line="67" pos:column="62"/></operator> <operator pos:line="67" pos:column="63">/<pos:position pos:line="67" pos:column="64"/></operator>
                            <operator pos:line="68" pos:column="29">(<pos:position pos:line="68" pos:column="30"/></operator><call pos:line="68" pos:column="30">(<name pos:line="68" pos:column="31">double<pos:position pos:line="68" pos:column="37"/></name>)<argument_list pos:line="68" pos:column="38">(<argument><expr><name pos:line="68" pos:column="39">pkg_recv<pos:position pos:line="68" pos:column="47"/></name> <operator pos:line="68" pos:column="48">*<pos:position pos:line="68" pos:column="49"/></operator> <operator pos:line="68" pos:column="50">(<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="51">pkg_recv<pos:position pos:line="68" pos:column="59"/></name> <operator pos:line="68" pos:column="60">-<pos:position pos:line="68" pos:column="61"/></operator> <literal type="number" pos:line="68" pos:column="62">1<pos:position pos:line="68" pos:column="63"/></literal><operator pos:line="68" pos:column="63">)<pos:position pos:line="68" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="65"/></argument_list></call><operator pos:line="68" pos:column="65">)<pos:position pos:line="68" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="68"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="70" pos:column="5">/* Calculate drop rate. */</comment>
    <expr_stmt><expr><name pos:line="71" pos:column="5">droprate<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <operator pos:line="71" pos:column="16">(<pos:position pos:line="71" pos:column="17"/></operator><call pos:line="71" pos:column="17">(<name pos:line="71" pos:column="18">double<pos:position pos:line="71" pos:column="24"/></name>)<argument_list pos:line="71" pos:column="25">(<argument><expr><name pos:line="71" pos:column="26">pkg_sent<pos:position pos:line="71" pos:column="34"/></name> <operator pos:line="71" pos:column="35">-<pos:position pos:line="71" pos:column="36"/></operator> <name pos:line="71" pos:column="37">pkg_recv<pos:position pos:line="71" pos:column="45"/></name></expr></argument>)<pos:position pos:line="71" pos:column="46"/></argument_list></call><operator pos:line="71" pos:column="46">)<pos:position pos:line="71" pos:column="47"/></operator> <operator pos:line="71" pos:column="48">/<pos:position pos:line="71" pos:column="49"/></operator> <operator pos:line="71" pos:column="50">(<pos:position pos:line="71" pos:column="51"/></operator><operator pos:line="71" pos:column="51">(<pos:position pos:line="71" pos:column="52"/></operator><name pos:line="71" pos:column="52">double<pos:position pos:line="71" pos:column="58"/></name><operator pos:line="71" pos:column="58">)<pos:position pos:line="71" pos:column="59"/></operator><name pos:line="71" pos:column="59">pkg_sent<pos:position pos:line="71" pos:column="67"/></name><operator pos:line="71" pos:column="67">)<pos:position pos:line="71" pos:column="68"/></operator></expr>;<pos:position pos:line="71" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">submit<pos:position pos:line="73" pos:column="11"/></name><argument_list pos:line="73" pos:column="11">(<argument><expr><name><name pos:line="73" pos:column="12">hl<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">-&gt;<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="16">host<pos:position pos:line="73" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="22">"ping"<pos:position pos:line="73" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="30">latency_average<pos:position pos:line="73" pos:column="45"/></name></expr></argument>)<pos:position pos:line="73" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">submit<pos:position pos:line="74" pos:column="11"/></name><argument_list pos:line="74" pos:column="11">(<argument><expr><name><name pos:line="74" pos:column="12">hl<pos:position pos:line="74" pos:column="14"/></name><operator pos:line="74" pos:column="14">-&gt;<pos:position pos:line="74" pos:column="19"/></operator><name pos:line="74" pos:column="16">host<pos:position pos:line="74" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="22">"ping_stddev"<pos:position pos:line="74" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="37">latency_stddev<pos:position pos:line="74" pos:column="51"/></name></expr></argument>)<pos:position pos:line="74" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="75" pos:column="5">submit<pos:position pos:line="75" pos:column="11"/></name><argument_list pos:line="75" pos:column="11">(<argument><expr><name><name pos:line="75" pos:column="12">hl<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">-&gt;<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="16">host<pos:position pos:line="75" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="22">"ping_droprate"<pos:position pos:line="75" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="39">droprate<pos:position pos:line="75" pos:column="47"/></name></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
  }<pos:position pos:line="76" pos:column="4"/></block></for> <comment type="block" pos:line="76" pos:column="5">/* }}} for (hl = hostlist_head; hl != NULL; hl = hl-&gt;next) */</comment>

  <return pos:line="78" pos:column="3">return <expr><operator pos:line="78" pos:column="10">(<pos:position pos:line="78" pos:column="11"/></operator><literal type="number" pos:line="78" pos:column="11">0<pos:position pos:line="78" pos:column="12"/></literal><operator pos:line="78" pos:column="12">)<pos:position pos:line="78" pos:column="13"/></operator></expr>;<pos:position pos:line="78" pos:column="14"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_271_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">c_avl_tree_t<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">zone_scandir<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">DIR<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">procdir<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">pid_t<pos:position pos:line="2" pos:column="8"/></name></type> <name pos:line="2" pos:column="9">pid<pos:position pos:line="2" pos:column="12"/></name></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">dirent_t<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">direntp<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">psinfo_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">psinfo<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">c_avl_tree_t<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">tree<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">zone_stats_t<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">stats<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">tree<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">c_avl_create<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">zone_compare<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <block pos:line="8" pos:column="45">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">WARNING<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><literal type="string" pos:line="9" pos:column="13">"zone plugin: Failed to create tree"<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">NULL<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">rewinddir<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">procdir<pos:position pos:line="13" pos:column="20"/></name></expr></argument>)<pos:position pos:line="13" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">direntp<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">readdir<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">procdir<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call><operator pos:line="14" pos:column="37">)<pos:position pos:line="14" pos:column="38"/></operator></expr>)<pos:position pos:line="14" pos:column="39"/></condition> <block pos:line="14" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <specifier pos:line="15" pos:column="10">const<pos:position pos:line="15" pos:column="15"/></specifier> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">pidstr<pos:position pos:line="15" pos:column="23"/></name> <init pos:line="15" pos:column="24">= <expr><name><name pos:line="15" pos:column="26">direntp<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">d_name<pos:position pos:line="15" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="15" pos:column="42"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">pidstr<pos:position pos:line="16" pos:column="15"/></name><index pos:line="16" pos:column="15">[<expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>]<pos:position pos:line="16" pos:column="18"/></index></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <literal type="char" pos:line="16" pos:column="22">'.'<pos:position pos:line="16" pos:column="25"/></literal></expr>)<pos:position pos:line="16" pos:column="26"/></condition><then pos:line="16" pos:column="26"> <comment type="block" pos:line="16" pos:column="27">/* skip "." and ".."  */</comment>
      <block type="pseudo"><continue pos:line="17" pos:column="7">continue;<pos:position pos:line="17" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="19" pos:column="5">pid<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <call><name pos:line="19" pos:column="11">atoi<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">pidstr<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">pid<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">==<pos:position pos:line="20" pos:column="15"/></operator> <literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal> <operator pos:line="20" pos:column="18">||<pos:position pos:line="20" pos:column="20"/></operator> <name pos:line="20" pos:column="21">pid<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">==<pos:position pos:line="20" pos:column="27"/></operator> <literal type="number" pos:line="20" pos:column="28">2<pos:position pos:line="20" pos:column="29"/></literal> <operator pos:line="20" pos:column="30">||<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">pid<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">==<pos:position pos:line="20" pos:column="39"/></operator> <literal type="number" pos:line="20" pos:column="40">3<pos:position pos:line="20" pos:column="41"/></literal></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42">
      <block type="pseudo"><continue pos:line="21" pos:column="7">continue;<pos:position pos:line="21" pos:column="16"/></continue></block></then></if> <comment type="block" pos:line="21" pos:column="17">/* skip sched, pageout and fsflush */</comment>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">zone_read_procfile<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">pidstr<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="36">"psinfo"<pos:position pos:line="23" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="23" pos:column="46">&amp;<pos:position pos:line="23" pos:column="51"/></operator><name pos:line="23" pos:column="47">psinfo<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="55">sizeof<argument_list pos:line="23" pos:column="61">(<argument><expr><name pos:line="23" pos:column="62">psinfo_t<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call> <operator pos:line="23" pos:column="73">!=<pos:position pos:line="23" pos:column="75"/></operator> <literal type="number" pos:line="23" pos:column="76">0<pos:position pos:line="23" pos:column="77"/></literal></expr>)<pos:position pos:line="23" pos:column="78"/></condition><then pos:line="23" pos:column="78">
      <block type="pseudo"><continue pos:line="24" pos:column="7">continue;<pos:position pos:line="24" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">stats<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">=<pos:position pos:line="26" pos:column="12"/></operator> <call><name pos:line="26" pos:column="13">zone_find_stats<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name pos:line="26" pos:column="29">tree<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="35">psinfo<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">.<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">pr_zoneid<pos:position pos:line="26" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">stats<pos:position pos:line="27" pos:column="14"/></name></expr>)<pos:position pos:line="27" pos:column="15"/></condition><then pos:line="27" pos:column="15"> <block pos:line="27" pos:column="16">{
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">stats<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">pctcpu<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">+=<pos:position pos:line="28" pos:column="23"/></operator> <name><name pos:line="28" pos:column="24">psinfo<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">pr_pctcpu<pos:position pos:line="28" pos:column="40"/></name></name></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="29" pos:column="7">stats<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">pctmem<pos:position pos:line="29" pos:column="20"/></name></name> <operator pos:line="29" pos:column="21">+=<pos:position pos:line="29" pos:column="23"/></operator> <name><name pos:line="29" pos:column="24">psinfo<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">pr_pctmem<pos:position pos:line="29" pos:column="40"/></name></name></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>
  }<pos:position pos:line="31" pos:column="4"/></block></while>
  <return pos:line="32" pos:column="3">return <expr><name pos:line="32" pos:column="10">tree<pos:position pos:line="32" pos:column="14"/></name></expr>;<pos:position pos:line="32" pos:column="15"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

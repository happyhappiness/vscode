<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_925_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">conn_submit_all<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">void<pos:position pos:line="1" pos:column="33"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list> <block pos:line="1" pos:column="35">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">port_collect_total<pos:position pos:line="2" pos:column="25"/></name></expr>)<pos:position pos:line="2" pos:column="26"/></condition><then pos:line="2" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="3" pos:column="5">conn_submit_port_total<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">()<pos:position pos:line="3" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="30"/></expr_stmt></block></then></if>

  <for pos:line="5" pos:column="3">for <control pos:line="5" pos:column="7">(<init><decl><type><name pos:line="5" pos:column="8">port_entry_t<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">pe<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">port_list_head<pos:position pos:line="5" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="42"/></init> <condition><expr><name pos:line="5" pos:column="43">pe<pos:position pos:line="5" pos:column="45"/></name> <operator pos:line="5" pos:column="46">!=<pos:position pos:line="5" pos:column="48"/></operator> <name pos:line="5" pos:column="49">NULL<pos:position pos:line="5" pos:column="53"/></name></expr>;<pos:position pos:line="5" pos:column="54"/></condition> <incr><expr><name pos:line="5" pos:column="55">pe<pos:position pos:line="5" pos:column="57"/></name> <operator pos:line="5" pos:column="58">=<pos:position pos:line="5" pos:column="59"/></operator> <name><name pos:line="5" pos:column="60">pe<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">-&gt;<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="64">next<pos:position pos:line="5" pos:column="68"/></name></name></expr></incr>)<pos:position pos:line="5" pos:column="69"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">conn_submit_port_entry<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">pe<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt></block></for>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

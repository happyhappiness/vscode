<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_704_collectd-4.4.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_value<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">data_set_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ds<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="47">value_list_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">vl<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>,
		<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name pos:line="2" pos:column="23">char<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">type<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,
	       	<parameter><decl><type><name pos:line="3" pos:column="17">FILE<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">fh<pos:position pos:line="3" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="27">char<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">buffer<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">dummy<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">ptr<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">saveptr<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">i<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier></type><name pos:line="10" pos:column="15">time_str<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><name pos:line="10" pos:column="26">buffer<pos:position pos:line="10" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">value_str<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><call><name pos:line="11" pos:column="27">strchr<pos:position pos:line="11" pos:column="33"/></name> <argument_list pos:line="11" pos:column="34">(<argument><expr><name pos:line="11" pos:column="35">time_str<pos:position pos:line="11" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="45">':'<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>
	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">value_str<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">==<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">NULL<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
	<block pos:line="13" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">print_to_socket<pos:position pos:line="14" pos:column="32"/></name> <argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">fh<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="38">"-1 No time found.\n"<pos:position pos:line="14" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><operator pos:line="15" pos:column="24">(<pos:position pos:line="15" pos:column="25"/></operator><operator pos:line="15" pos:column="25">-<pos:position pos:line="15" pos:column="26"/></operator><literal type="number" pos:line="15" pos:column="26">1<pos:position pos:line="15" pos:column="27"/></literal><operator pos:line="15" pos:column="27">)<pos:position pos:line="15" pos:column="28"/></operator></expr>;<pos:position pos:line="15" pos:column="29"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>
	<expr_stmt><expr><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">value_str<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="char" pos:line="17" pos:column="22">'\0'<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt> <expr_stmt><expr><name pos:line="17" pos:column="28">value_str<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">++<pos:position pos:line="17" pos:column="39"/></operator></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="19" pos:column="9">vl<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">time<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">time_t<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">)<pos:position pos:line="19" pos:column="28"/></operator> <call><name pos:line="19" pos:column="29">atoi<pos:position pos:line="19" pos:column="33"/></name> <argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">time_str<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
	<if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">vl<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">time<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">==<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name><name pos:line="21" pos:column="17">vl<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">-&gt;<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="21">time<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <call><name pos:line="21" pos:column="28">time<pos:position pos:line="21" pos:column="32"/></name> <argument_list pos:line="21" pos:column="33">(<argument><expr><name pos:line="21" pos:column="34">NULL<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="40"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <literal type="number" pos:line="23" pos:column="13">0<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></expr_stmt>
	<expr_stmt><expr><name pos:line="24" pos:column="9">dummy<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name pos:line="24" pos:column="17">value_str<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">saveptr<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">NULL<pos:position pos:line="25" pos:column="23"/></name></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
	<while pos:line="26" pos:column="9">while <condition pos:line="26" pos:column="15">(<expr><operator pos:line="26" pos:column="16">(<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">ptr<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">strtok_r<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">dummy<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">":"<pos:position pos:line="26" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="45">&amp;<pos:position pos:line="26" pos:column="50"/></operator><name pos:line="26" pos:column="46">saveptr<pos:position pos:line="26" pos:column="53"/></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call><operator pos:line="26" pos:column="54">)<pos:position pos:line="26" pos:column="55"/></operator> <operator pos:line="26" pos:column="56">!=<pos:position pos:line="26" pos:column="58"/></operator> <name pos:line="26" pos:column="59">NULL<pos:position pos:line="26" pos:column="63"/></name></expr>)<pos:position pos:line="26" pos:column="64"/></condition>
	<block pos:line="27" pos:column="9">{
		<expr_stmt><expr><name pos:line="28" pos:column="17">dummy<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr>;<pos:position pos:line="28" pos:column="30"/></expr_stmt>

		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">i<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&gt;=<pos:position pos:line="30" pos:column="28"/></operator> <name><name pos:line="30" pos:column="26">vl<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">values_len<pos:position pos:line="30" pos:column="40"/></name></name></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
		<block pos:line="31" pos:column="17">{
			<expr_stmt><expr><name pos:line="32" pos:column="25">i<pos:position pos:line="32" pos:column="26"/></name> <operator pos:line="32" pos:column="27">=<pos:position pos:line="32" pos:column="28"/></operator> <name><name pos:line="32" pos:column="29">vl<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">values_len<pos:position pos:line="32" pos:column="43"/></name></name> <operator pos:line="32" pos:column="44">+<pos:position pos:line="32" pos:column="45"/></operator> <literal type="number" pos:line="32" pos:column="46">1<pos:position pos:line="32" pos:column="47"/></literal></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
			<break pos:line="33" pos:column="25">break;<pos:position pos:line="33" pos:column="31"/></break>
		}<pos:position pos:line="34" pos:column="18"/></block></then></if>

		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">strcmp<pos:position pos:line="36" pos:column="27"/></name> <argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">ptr<pos:position pos:line="36" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="34">"U"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call> <operator pos:line="36" pos:column="39">==<pos:position pos:line="36" pos:column="41"/></operator> <literal type="number" pos:line="36" pos:column="42">0<pos:position pos:line="36" pos:column="43"/></literal></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="25">vl<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">values<pos:position pos:line="37" pos:column="35"/></name><index pos:line="37" pos:column="35">[<expr><name pos:line="37" pos:column="36">i<pos:position pos:line="37" pos:column="37"/></name></expr>]<pos:position pos:line="37" pos:column="38"/></index></name><operator pos:line="37" pos:column="38">.<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">gauge<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">=<pos:position pos:line="37" pos:column="46"/></operator> <name pos:line="37" pos:column="47">NAN<pos:position pos:line="37" pos:column="50"/></name></expr>;<pos:position pos:line="37" pos:column="51"/></expr_stmt></block></then>
		<elseif pos:line="38" pos:column="17">else <if pos:line="38" pos:column="22">if <condition pos:line="38" pos:column="25">(<expr><name><name pos:line="38" pos:column="26">ds<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">ds<pos:position pos:line="38" pos:column="32"/></name><index pos:line="38" pos:column="32">[<expr><name pos:line="38" pos:column="33">i<pos:position pos:line="38" pos:column="34"/></name></expr>]<pos:position pos:line="38" pos:column="35"/></index></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">type<pos:position pos:line="38" pos:column="40"/></name> <operator pos:line="38" pos:column="41">==<pos:position pos:line="38" pos:column="43"/></operator> <name pos:line="38" pos:column="44">DS_TYPE_COUNTER<pos:position pos:line="38" pos:column="59"/></name></expr>)<pos:position pos:line="38" pos:column="60"/></condition><then pos:line="38" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="25">vl<pos:position pos:line="39" pos:column="27"/></name><operator pos:line="39" pos:column="27">-&gt;<pos:position pos:line="39" pos:column="32"/></operator><name pos:line="39" pos:column="29">values<pos:position pos:line="39" pos:column="35"/></name><index pos:line="39" pos:column="35">[<expr><name pos:line="39" pos:column="36">i<pos:position pos:line="39" pos:column="37"/></name></expr>]<pos:position pos:line="39" pos:column="38"/></index></name><operator pos:line="39" pos:column="38">.<pos:position pos:line="39" pos:column="39"/></operator><name pos:line="39" pos:column="39">counter<pos:position pos:line="39" pos:column="46"/></name> <operator pos:line="39" pos:column="47">=<pos:position pos:line="39" pos:column="48"/></operator> <call><name pos:line="39" pos:column="49">atoll<pos:position pos:line="39" pos:column="54"/></name> <argument_list pos:line="39" pos:column="55">(<argument><expr><name pos:line="39" pos:column="56">ptr<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="40" pos:column="17">else <if pos:line="40" pos:column="22">if <condition pos:line="40" pos:column="25">(<expr><name><name pos:line="40" pos:column="26">ds<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">ds<pos:position pos:line="40" pos:column="32"/></name><index pos:line="40" pos:column="32">[<expr><name pos:line="40" pos:column="33">i<pos:position pos:line="40" pos:column="34"/></name></expr>]<pos:position pos:line="40" pos:column="35"/></index></name><operator pos:line="40" pos:column="35">.<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="36">type<pos:position pos:line="40" pos:column="40"/></name> <operator pos:line="40" pos:column="41">==<pos:position pos:line="40" pos:column="43"/></operator> <name pos:line="40" pos:column="44">DS_TYPE_GAUGE<pos:position pos:line="40" pos:column="57"/></name></expr>)<pos:position pos:line="40" pos:column="58"/></condition><then pos:line="40" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="25">vl<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">values<pos:position pos:line="41" pos:column="35"/></name><index pos:line="41" pos:column="35">[<expr><name pos:line="41" pos:column="36">i<pos:position pos:line="41" pos:column="37"/></name></expr>]<pos:position pos:line="41" pos:column="38"/></index></name><operator pos:line="41" pos:column="38">.<pos:position pos:line="41" pos:column="39"/></operator><name pos:line="41" pos:column="39">gauge<pos:position pos:line="41" pos:column="44"/></name> <operator pos:line="41" pos:column="45">=<pos:position pos:line="41" pos:column="46"/></operator> <call><name pos:line="41" pos:column="47">atof<pos:position pos:line="41" pos:column="51"/></name> <argument_list pos:line="41" pos:column="52">(<argument><expr><name pos:line="41" pos:column="53">ptr<pos:position pos:line="41" pos:column="56"/></name></expr></argument>)<pos:position pos:line="41" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="58"/></expr_stmt></block></then></if></elseif></if>

		<expr_stmt><expr><name pos:line="43" pos:column="17">i<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">++<pos:position pos:line="43" pos:column="20"/></operator></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
	}<pos:position pos:line="44" pos:column="10"/></block></while> <comment type="block" pos:line="44" pos:column="11">/* while (strtok_r) */</comment>

	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">i<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">!=<pos:position pos:line="46" pos:column="17"/></operator> <name><name pos:line="46" pos:column="18">vl<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">values_len<pos:position pos:line="46" pos:column="32"/></name></name></expr>)<pos:position pos:line="46" pos:column="33"/></condition><then pos:line="46" pos:column="33">
	<block pos:line="47" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">char<pos:position pos:line="48" pos:column="21"/></name></type> <name><name pos:line="48" pos:column="22">identifier<pos:position pos:line="48" pos:column="32"/></name><index pos:line="48" pos:column="32">[<expr><literal type="number" pos:line="48" pos:column="33">128<pos:position pos:line="48" pos:column="36"/></literal></expr>]<pos:position pos:line="48" pos:column="37"/></index></name></decl>;<pos:position pos:line="48" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">FORMAT_VL<pos:position pos:line="49" pos:column="26"/></name> <argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">identifier<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="40">sizeof <argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">identifier<pos:position pos:line="49" pos:column="58"/></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="49" pos:column="61">vl<pos:position pos:line="49" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="65">ds<pos:position pos:line="49" pos:column="67"/></name></expr></argument>)<pos:position pos:line="49" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">ERROR<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><literal type="string" pos:line="50" pos:column="24">"cmd putval: parse_value: "<pos:position pos:line="50" pos:column="51"/></literal>
				<literal type="string" pos:line="51" pos:column="33">"Number of values incorrect: "<pos:position pos:line="51" pos:column="63"/></literal>
				<literal type="string" pos:line="52" pos:column="33">"Got %i, expected %i. Identifier is `%s'."<pos:position pos:line="52" pos:column="75"/></literal></expr></argument>,
				<argument><expr><name pos:line="53" pos:column="33">i<pos:position pos:line="53" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="36">vl<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">values_len<pos:position pos:line="53" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="52">identifier<pos:position pos:line="53" pos:column="62"/></name></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="64"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="54" pos:column="17">print_to_socket<pos:position pos:line="54" pos:column="32"/></name> <argument_list pos:line="54" pos:column="33">(<argument><expr><name pos:line="54" pos:column="34">fh<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="38">"-1 Number of values incorrect: "<pos:position pos:line="54" pos:column="71"/></literal>
				<literal type="string" pos:line="55" pos:column="33">"Got %i, expected %i.\n"<pos:position pos:line="55" pos:column="57"/></literal></expr></argument>,
			       	<argument><expr><name pos:line="56" pos:column="33">i<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="36">vl<pos:position pos:line="56" pos:column="38"/></name><operator pos:line="56" pos:column="38">-&gt;<pos:position pos:line="56" pos:column="43"/></operator><name pos:line="56" pos:column="40">values_len<pos:position pos:line="56" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="52"/></expr_stmt>
		<return pos:line="57" pos:column="17">return <expr><operator pos:line="57" pos:column="24">(<pos:position pos:line="57" pos:column="25"/></operator><operator pos:line="57" pos:column="25">-<pos:position pos:line="57" pos:column="26"/></operator><literal type="number" pos:line="57" pos:column="26">1<pos:position pos:line="57" pos:column="27"/></literal><operator pos:line="57" pos:column="27">)<pos:position pos:line="57" pos:column="28"/></operator></expr>;<pos:position pos:line="57" pos:column="29"/></return>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">plugin_dispatch_values<pos:position pos:line="60" pos:column="31"/></name> <argument_list pos:line="60" pos:column="32">(<argument><expr><name pos:line="60" pos:column="33">type<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="39">vl<pos:position pos:line="60" pos:column="41"/></name></expr></argument>)<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="43"/></expr_stmt>
	<return pos:line="61" pos:column="9">return <expr><operator pos:line="61" pos:column="16">(<pos:position pos:line="61" pos:column="17"/></operator><literal type="number" pos:line="61" pos:column="17">0<pos:position pos:line="61" pos:column="18"/></literal><operator pos:line="61" pos:column="18">)<pos:position pos:line="61" pos:column="19"/></operator></expr>;<pos:position pos:line="61" pos:column="20"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

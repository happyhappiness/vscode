<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1333_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">grpc<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Status<pos:position pos:line="1" pos:column="13"/></name></name></type> <name pos:line="1" pos:column="14">queryValuesWrite<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name><name pos:line="1" pos:column="31">grpc<pos:position pos:line="1" pos:column="35"/></name><operator pos:line="1" pos:column="35">::<pos:position pos:line="1" pos:column="37"/></operator><name pos:line="1" pos:column="37">ServerContext<pos:position pos:line="1" pos:column="50"/></name></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ctx<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
                                <parameter><decl><type><name><name pos:line="2" pos:column="33">grpc<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name><name pos:line="2" pos:column="39">ServerWriter<pos:position pos:line="2" pos:column="51"/></name><argument_list type="generic" pos:line="2" pos:column="51">&lt;<argument><expr><name pos:line="2" pos:column="52">QueryValuesResponse<pos:position pos:line="2" pos:column="71"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="75"/></argument_list></name></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">writer<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>,
                                <parameter><decl><type><name><name pos:line="3" pos:column="33">std<pos:position pos:line="3" pos:column="36"/></name><operator pos:line="3" pos:column="36">::<pos:position pos:line="3" pos:column="38"/></operator><name><name pos:line="3" pos:column="38">queue<pos:position pos:line="3" pos:column="43"/></name><argument_list type="generic" pos:line="3" pos:column="43">&lt;<argument><expr><name pos:line="3" pos:column="44">value_list_t<pos:position pos:line="3" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="60"/></argument_list></name></name> <modifier pos:line="3" pos:column="58">*<pos:position pos:line="3" pos:column="59"/></modifier></type><name pos:line="3" pos:column="59">value_lists<pos:position pos:line="3" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="71"/></parameter_list> <block pos:line="3" pos:column="72">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name><name pos:line="4" pos:column="13">value_lists<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">empty<pos:position pos:line="4" pos:column="31"/></name></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="34"/></condition> <block pos:line="4" pos:column="35">{
      <decl_stmt><decl><type><name pos:line="5" pos:column="7">auto<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">vl<pos:position pos:line="5" pos:column="14"/></name> <init pos:line="5" pos:column="15">= <expr><call><name><name pos:line="5" pos:column="17">value_lists<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">front<pos:position pos:line="5" pos:column="35"/></name></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="6" pos:column="7">QueryValuesResponse<pos:position pos:line="6" pos:column="26"/></name></type> <name pos:line="6" pos:column="27">res<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
      <expr_stmt><expr><call><name><name pos:line="7" pos:column="7">res<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">.<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">Clear<pos:position pos:line="7" pos:column="16"/></name></name><argument_list pos:line="7" pos:column="16">()<pos:position pos:line="7" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>

      <decl_stmt><decl><type><name pos:line="9" pos:column="7">auto<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">status<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><call><name pos:line="9" pos:column="21">marshal_value_list<pos:position pos:line="9" pos:column="39"/></name><argument_list pos:line="9" pos:column="39">(<argument><expr><operator pos:line="9" pos:column="40">&amp;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="41">vl<pos:position pos:line="9" pos:column="43"/></name></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="45">res<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">.<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="49">mutable_value_list<pos:position pos:line="9" pos:column="67"/></name></name><argument_list pos:line="9" pos:column="67">()<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="71"/></decl_stmt>
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">!<pos:position pos:line="10" pos:column="12"/></operator><call><name><name pos:line="10" pos:column="12">status<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">ok<pos:position pos:line="10" pos:column="21"/></name></name><argument_list pos:line="10" pos:column="21">()<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24"> <block pos:line="10" pos:column="25">{
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">status<pos:position pos:line="11" pos:column="22"/></name></expr>;<pos:position pos:line="11" pos:column="23"/></return>
      }<pos:position pos:line="12" pos:column="8"/></block></then></if>

      <if pos:line="14" pos:column="7">if <condition pos:line="14" pos:column="10">(<expr><operator pos:line="14" pos:column="11">!<pos:position pos:line="14" pos:column="12"/></operator><call><name><name pos:line="14" pos:column="12">writer<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">Write<pos:position pos:line="14" pos:column="25"/></name></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">res<pos:position pos:line="14" pos:column="29"/></name></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31"> <block pos:line="14" pos:column="32">{
        <return pos:line="15" pos:column="9">return <expr><name><name pos:line="15" pos:column="16">grpc<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">::<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">Status<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">::<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">CANCELLED<pos:position pos:line="15" pos:column="39"/></name></name></expr>;<pos:position pos:line="15" pos:column="40"/></return>
      }<pos:position pos:line="16" pos:column="8"/></block></then></if>

      <expr_stmt><expr><call><name><name pos:line="18" pos:column="7">value_lists<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">pop<pos:position pos:line="18" pos:column="23"/></name></name><argument_list pos:line="18" pos:column="23">()<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">sfree<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><name><name pos:line="19" pos:column="13">vl<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">.<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">values<pos:position pos:line="19" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></while>

    <return pos:line="22" pos:column="5">return <expr><name><name pos:line="22" pos:column="12">grpc<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">::<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">Status<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">::<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">OK<pos:position pos:line="22" pos:column="28"/></name></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></function></unit>

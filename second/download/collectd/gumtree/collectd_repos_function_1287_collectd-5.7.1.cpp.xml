<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1287_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wm_config_node<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">oconfig_item_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ci<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">wm_node_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">node<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">node<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">calloc<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="20">sizeof<argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">node<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">node<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">ENOMEM<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator></expr>;<pos:position pos:line="8" pos:column="21"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">mongo_init<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name><name pos:line="9" pos:column="14">node<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">conn<pos:position pos:line="9" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">node<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">host<pos:position pos:line="10" pos:column="13"/></name></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="11" pos:column="3">node<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">store_rates<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">pthread_mutex_init<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><operator pos:line="12" pos:column="22">&amp;<pos:position pos:line="12" pos:column="27"/></operator><name><name pos:line="12" pos:column="23">node<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">-&gt;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="29">lock<pos:position pos:line="12" pos:column="33"/></name></name></expr></argument>, <comment type="block" pos:line="12" pos:column="35">/* attr = */</comment> <argument><expr><name pos:line="12" pos:column="48">NULL<pos:position pos:line="12" pos:column="52"/></name></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">status<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">cf_util_get_string_buffer<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">ci<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="42">node<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">name<pos:position pos:line="14" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="54">sizeof<argument_list pos:line="14" pos:column="60">(<argument><expr><name><name pos:line="14" pos:column="61">node<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">-&gt;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="67">name<pos:position pos:line="14" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">status<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">!=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">sfree<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">node<pos:position pos:line="17" pos:column="15"/></name></expr></argument>)<pos:position pos:line="17" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><operator pos:line="18" pos:column="12">(<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">status<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <for pos:line="21" pos:column="3">for <control pos:line="21" pos:column="7">(<init><decl><type><name pos:line="21" pos:column="8">int<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">i<pos:position pos:line="21" pos:column="13"/></name> <init pos:line="21" pos:column="14">= <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="18"/></init> <condition><expr><name pos:line="21" pos:column="19">i<pos:position pos:line="21" pos:column="20"/></name> <operator pos:line="21" pos:column="21">&lt;<pos:position pos:line="21" pos:column="25"/></operator> <name><name pos:line="21" pos:column="23">ci<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">children_num<pos:position pos:line="21" pos:column="39"/></name></name></expr>;<pos:position pos:line="21" pos:column="40"/></condition> <incr><expr><name pos:line="21" pos:column="41">i<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">++<pos:position pos:line="21" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="21" pos:column="45"/></control> <block pos:line="21" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">oconfig_item_t<pos:position pos:line="22" pos:column="19"/></name> <modifier pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></modifier></type><name pos:line="22" pos:column="21">child<pos:position pos:line="22" pos:column="26"/></name> <init pos:line="22" pos:column="27">= <expr><name><name pos:line="22" pos:column="29">ci<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">children<pos:position pos:line="22" pos:column="41"/></name></name> <operator pos:line="22" pos:column="42">+<pos:position pos:line="22" pos:column="43"/></operator> <name pos:line="22" pos:column="44">i<pos:position pos:line="22" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="46"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><call><name pos:line="24" pos:column="9">strcasecmp<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="string" pos:line="24" pos:column="20">"Host"<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="28">child<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">key<pos:position pos:line="24" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call> <operator pos:line="24" pos:column="40">==<pos:position pos:line="24" pos:column="42"/></operator> <literal type="number" pos:line="24" pos:column="43">0<pos:position pos:line="24" pos:column="44"/></literal></expr>)<pos:position pos:line="24" pos:column="45"/></condition><then pos:line="24" pos:column="45">
      <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="7">status<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <call><name pos:line="25" pos:column="16">cf_util_get_string<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><name pos:line="25" pos:column="35">child<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="42">&amp;<pos:position pos:line="25" pos:column="47"/></operator><name><name pos:line="25" pos:column="43">node<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">host<pos:position pos:line="25" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt></block></then>
    <elseif pos:line="26" pos:column="5">else <if pos:line="26" pos:column="10">if <condition pos:line="26" pos:column="13">(<expr><call><name pos:line="26" pos:column="14">strcasecmp<pos:position pos:line="26" pos:column="24"/></name><argument_list pos:line="26" pos:column="24">(<argument><expr><literal type="string" pos:line="26" pos:column="25">"Port"<pos:position pos:line="26" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="33">child<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">key<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="44"/></argument_list></call> <operator pos:line="26" pos:column="45">==<pos:position pos:line="26" pos:column="47"/></operator> <literal type="number" pos:line="26" pos:column="48">0<pos:position pos:line="26" pos:column="49"/></literal></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50"> <block pos:line="26" pos:column="51">{
      <expr_stmt><expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">cf_util_get_port_number<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name pos:line="27" pos:column="40">child<pos:position pos:line="27" pos:column="45"/></name></expr></argument>)<pos:position pos:line="27" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="47"/></expr_stmt>
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name pos:line="28" pos:column="11">status<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">&gt;<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="20">0<pos:position pos:line="28" pos:column="21"/></literal></expr>)<pos:position pos:line="28" pos:column="22"/></condition><then pos:line="28" pos:column="22"> <block pos:line="28" pos:column="23">{
        <expr_stmt><expr><name><name pos:line="29" pos:column="9">node<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">-&gt;<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="15">port<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">status<pos:position pos:line="29" pos:column="28"/></name></expr>;<pos:position pos:line="29" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <literal type="number" pos:line="30" pos:column="18">0<pos:position pos:line="30" pos:column="19"/></literal></expr>;<pos:position pos:line="30" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="31" pos:column="8"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><call><name pos:line="32" pos:column="16">strcasecmp<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><literal type="string" pos:line="32" pos:column="27">"Timeout"<pos:position pos:line="32" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="38">child<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">key<pos:position pos:line="32" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call> <operator pos:line="32" pos:column="50">==<pos:position pos:line="32" pos:column="52"/></operator> <literal type="number" pos:line="32" pos:column="53">0<pos:position pos:line="32" pos:column="54"/></literal></expr>)<pos:position pos:line="32" pos:column="55"/></condition><then pos:line="32" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">status<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <call><name pos:line="33" pos:column="16">cf_util_get_int<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">child<pos:position pos:line="33" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name><name pos:line="33" pos:column="40">node<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">timeout<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="34" pos:column="5">else <if pos:line="34" pos:column="10">if <condition pos:line="34" pos:column="13">(<expr><call><name pos:line="34" pos:column="14">strcasecmp<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><literal type="string" pos:line="34" pos:column="25">"StoreRates"<pos:position pos:line="34" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="39">child<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">key<pos:position pos:line="34" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="50"/></argument_list></call> <operator pos:line="34" pos:column="51">==<pos:position pos:line="34" pos:column="53"/></operator> <literal type="number" pos:line="34" pos:column="54">0<pos:position pos:line="34" pos:column="55"/></literal></expr>)<pos:position pos:line="34" pos:column="56"/></condition><then pos:line="34" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">cf_util_get_boolean<pos:position pos:line="35" pos:column="35"/></name><argument_list pos:line="35" pos:column="35">(<argument><expr><name pos:line="35" pos:column="36">child<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name><name pos:line="35" pos:column="44">node<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">store_rates<pos:position pos:line="35" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="63"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="36" pos:column="5">else <if pos:line="36" pos:column="10">if <condition pos:line="36" pos:column="13">(<expr><call><name pos:line="36" pos:column="14">strcasecmp<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><literal type="string" pos:line="36" pos:column="25">"Database"<pos:position pos:line="36" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="37">child<pos:position pos:line="36" pos:column="42"/></name><operator pos:line="36" pos:column="42">-&gt;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="44">key<pos:position pos:line="36" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call> <operator pos:line="36" pos:column="49">==<pos:position pos:line="36" pos:column="51"/></operator> <literal type="number" pos:line="36" pos:column="52">0<pos:position pos:line="36" pos:column="53"/></literal></expr>)<pos:position pos:line="36" pos:column="54"/></condition><then pos:line="36" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <call><name pos:line="37" pos:column="16">cf_util_get_string<pos:position pos:line="37" pos:column="34"/></name><argument_list pos:line="37" pos:column="34">(<argument><expr><name pos:line="37" pos:column="35">child<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="42">&amp;<pos:position pos:line="37" pos:column="47"/></operator><name><name pos:line="37" pos:column="43">node<pos:position pos:line="37" pos:column="47"/></name><operator pos:line="37" pos:column="47">-&gt;<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="49">db<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else <if pos:line="38" pos:column="10">if <condition pos:line="38" pos:column="13">(<expr><call><name pos:line="38" pos:column="14">strcasecmp<pos:position pos:line="38" pos:column="24"/></name><argument_list pos:line="38" pos:column="24">(<argument><expr><literal type="string" pos:line="38" pos:column="25">"User"<pos:position pos:line="38" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="33">child<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">key<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call> <operator pos:line="38" pos:column="45">==<pos:position pos:line="38" pos:column="47"/></operator> <literal type="number" pos:line="38" pos:column="48">0<pos:position pos:line="38" pos:column="49"/></literal></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="7">status<pos:position pos:line="39" pos:column="13"/></name> <operator pos:line="39" pos:column="14">=<pos:position pos:line="39" pos:column="15"/></operator> <call><name pos:line="39" pos:column="16">cf_util_get_string<pos:position pos:line="39" pos:column="34"/></name><argument_list pos:line="39" pos:column="34">(<argument><expr><name pos:line="39" pos:column="35">child<pos:position pos:line="39" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="39" pos:column="42">&amp;<pos:position pos:line="39" pos:column="47"/></operator><name><name pos:line="39" pos:column="43">node<pos:position pos:line="39" pos:column="47"/></name><operator pos:line="39" pos:column="47">-&gt;<pos:position pos:line="39" pos:column="52"/></operator><name pos:line="39" pos:column="49">user<pos:position pos:line="39" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">(<expr><call><name pos:line="40" pos:column="14">strcasecmp<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><literal type="string" pos:line="40" pos:column="25">"Password"<pos:position pos:line="40" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="37">child<pos:position pos:line="40" pos:column="42"/></name><operator pos:line="40" pos:column="42">-&gt;<pos:position pos:line="40" pos:column="47"/></operator><name pos:line="40" pos:column="44">key<pos:position pos:line="40" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="48"/></argument_list></call> <operator pos:line="40" pos:column="49">==<pos:position pos:line="40" pos:column="51"/></operator> <literal type="number" pos:line="40" pos:column="52">0<pos:position pos:line="40" pos:column="53"/></literal></expr>)<pos:position pos:line="40" pos:column="54"/></condition><then pos:line="40" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">=<pos:position pos:line="41" pos:column="15"/></operator> <call><name pos:line="41" pos:column="16">cf_util_get_string<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name pos:line="41" pos:column="35">child<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="42">&amp;<pos:position pos:line="41" pos:column="47"/></operator><name><name pos:line="41" pos:column="43">node<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">-&gt;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="49">passwd<pos:position pos:line="41" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <else pos:line="42" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">WARNING<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><literal type="string" pos:line="43" pos:column="15">"write_mongodb plugin: Ignoring unknown config option \"%s\"."<pos:position pos:line="43" pos:column="77"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="44" pos:column="15">child<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">key<pos:position pos:line="44" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt></block></else></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">status<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">!=<pos:position pos:line="46" pos:column="18"/></operator> <literal type="number" pos:line="46" pos:column="19">0<pos:position pos:line="46" pos:column="20"/></literal></expr>)<pos:position pos:line="46" pos:column="21"/></condition><then pos:line="46" pos:column="21">
      <block type="pseudo"><break pos:line="47" pos:column="7">break;<pos:position pos:line="47" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="48" pos:column="4"/></block></for> <comment type="block" pos:line="48" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">(<pos:position pos:line="50" pos:column="8"/></operator><name><name pos:line="50" pos:column="8">node<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">-&gt;<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="14">db<pos:position pos:line="50" pos:column="16"/></name></name> <operator pos:line="50" pos:column="17">!=<pos:position pos:line="50" pos:column="19"/></operator> <name pos:line="50" pos:column="20">NULL<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">)<pos:position pos:line="50" pos:column="25"/></operator> <operator pos:line="50" pos:column="26">||<pos:position pos:line="50" pos:column="28"/></operator> <operator pos:line="50" pos:column="29">(<pos:position pos:line="50" pos:column="30"/></operator><name><name pos:line="50" pos:column="30">node<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">user<pos:position pos:line="50" pos:column="40"/></name></name> <operator pos:line="50" pos:column="41">!=<pos:position pos:line="50" pos:column="43"/></operator> <name pos:line="50" pos:column="44">NULL<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">)<pos:position pos:line="50" pos:column="49"/></operator> <operator pos:line="50" pos:column="50">||<pos:position pos:line="50" pos:column="52"/></operator> <operator pos:line="50" pos:column="53">(<pos:position pos:line="50" pos:column="54"/></operator><name><name pos:line="50" pos:column="54">node<pos:position pos:line="50" pos:column="58"/></name><operator pos:line="50" pos:column="58">-&gt;<pos:position pos:line="50" pos:column="63"/></operator><name pos:line="50" pos:column="60">passwd<pos:position pos:line="50" pos:column="66"/></name></name> <operator pos:line="50" pos:column="67">!=<pos:position pos:line="50" pos:column="69"/></operator> <name pos:line="50" pos:column="70">NULL<pos:position pos:line="50" pos:column="74"/></name><operator pos:line="50" pos:column="74">)<pos:position pos:line="50" pos:column="75"/></operator></expr>)<pos:position pos:line="50" pos:column="76"/></condition><then pos:line="50" pos:column="76"> <block pos:line="50" pos:column="77">{
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><operator pos:line="51" pos:column="9">(<pos:position pos:line="51" pos:column="10"/></operator><name><name pos:line="51" pos:column="10">node<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">db<pos:position pos:line="51" pos:column="18"/></name></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">NULL<pos:position pos:line="51" pos:column="26"/></name><operator pos:line="51" pos:column="26">)<pos:position pos:line="51" pos:column="27"/></operator> <operator pos:line="51" pos:column="28">||<pos:position pos:line="51" pos:column="30"/></operator> <operator pos:line="51" pos:column="31">(<pos:position pos:line="51" pos:column="32"/></operator><name><name pos:line="51" pos:column="32">node<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">-&gt;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="38">user<pos:position pos:line="51" pos:column="42"/></name></name> <operator pos:line="51" pos:column="43">==<pos:position pos:line="51" pos:column="45"/></operator> <name pos:line="51" pos:column="46">NULL<pos:position pos:line="51" pos:column="50"/></name><operator pos:line="51" pos:column="50">)<pos:position pos:line="51" pos:column="51"/></operator> <operator pos:line="51" pos:column="52">||<pos:position pos:line="51" pos:column="54"/></operator> <operator pos:line="51" pos:column="55">(<pos:position pos:line="51" pos:column="56"/></operator><name><name pos:line="51" pos:column="56">node<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">-&gt;<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="62">passwd<pos:position pos:line="51" pos:column="68"/></name></name> <operator pos:line="51" pos:column="69">==<pos:position pos:line="51" pos:column="71"/></operator> <name pos:line="51" pos:column="72">NULL<pos:position pos:line="51" pos:column="76"/></name><operator pos:line="51" pos:column="76">)<pos:position pos:line="51" pos:column="77"/></operator></expr>)<pos:position pos:line="51" pos:column="78"/></condition><then pos:line="51" pos:column="78"> <block pos:line="51" pos:column="79">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">WARNING<pos:position pos:line="52" pos:column="14"/></name><argument_list pos:line="52" pos:column="14">(
          <argument><expr><literal type="string" pos:line="53" pos:column="11">"write_mongodb plugin: Authentication requires the "<pos:position pos:line="53" pos:column="63"/></literal>
          <literal type="string" pos:line="54" pos:column="11">"\"Database\", \"User\" and \"Password\" options to be specified, "<pos:position pos:line="54" pos:column="78"/></literal>
          <literal type="string" pos:line="55" pos:column="11">"but at last one of them is missing. Authentication will NOT be "<pos:position pos:line="55" pos:column="76"/></literal>
          <literal type="string" pos:line="56" pos:column="11">"used."<pos:position pos:line="56" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">sfree<pos:position pos:line="57" pos:column="12"/></name><argument_list pos:line="57" pos:column="12">(<argument><expr><name><name pos:line="57" pos:column="13">node<pos:position pos:line="57" pos:column="17"/></name><operator pos:line="57" pos:column="17">-&gt;<pos:position pos:line="57" pos:column="22"/></operator><name pos:line="57" pos:column="19">db<pos:position pos:line="57" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="58" pos:column="7">sfree<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><name><name pos:line="58" pos:column="13">node<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">-&gt;<pos:position pos:line="58" pos:column="22"/></operator><name pos:line="58" pos:column="19">user<pos:position pos:line="58" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">sfree<pos:position pos:line="59" pos:column="12"/></name><argument_list pos:line="59" pos:column="12">(<argument><expr><name><name pos:line="59" pos:column="13">node<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">passwd<pos:position pos:line="59" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
  }<pos:position pos:line="61" pos:column="4"/></block></then></if>

  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">status<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">==<pos:position pos:line="63" pos:column="16"/></operator> <literal type="number" pos:line="63" pos:column="17">0<pos:position pos:line="63" pos:column="18"/></literal></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19"> <block pos:line="63" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="64" pos:column="5">char<pos:position pos:line="64" pos:column="9"/></name></type> <name><name pos:line="64" pos:column="10">cb_name<pos:position pos:line="64" pos:column="17"/></name><index pos:line="64" pos:column="17">[<expr><name pos:line="64" pos:column="18">DATA_MAX_NAME_LEN<pos:position pos:line="64" pos:column="35"/></name></expr>]<pos:position pos:line="64" pos:column="36"/></index></name></decl>;<pos:position pos:line="64" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">ssnprintf<pos:position pos:line="66" pos:column="14"/></name><argument_list pos:line="66" pos:column="14">(<argument><expr><name pos:line="66" pos:column="15">cb_name<pos:position pos:line="66" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="66" pos:column="24">sizeof<argument_list pos:line="66" pos:column="30">(<argument><expr><name pos:line="66" pos:column="31">cb_name<pos:position pos:line="66" pos:column="38"/></name></expr></argument>)<pos:position pos:line="66" pos:column="39"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="41">"write_mongodb/%s"<pos:position pos:line="66" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="66" pos:column="61">node<pos:position pos:line="66" pos:column="65"/></name><operator pos:line="66" pos:column="65">-&gt;<pos:position pos:line="66" pos:column="70"/></operator><name pos:line="66" pos:column="67">name<pos:position pos:line="66" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="73"/></expr_stmt>

    <expr_stmt><expr><name pos:line="68" pos:column="5">status<pos:position pos:line="68" pos:column="11"/></name> <operator pos:line="68" pos:column="12">=<pos:position pos:line="68" pos:column="13"/></operator> <call><name pos:line="68" pos:column="14">plugin_register_write<pos:position pos:line="68" pos:column="35"/></name><argument_list pos:line="68" pos:column="35">(
        <argument><expr><name pos:line="69" pos:column="9">cb_name<pos:position pos:line="69" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="18">wm_write<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="69" pos:column="28">&amp;<pos:position pos:line="69" pos:column="33"/></operator><operator pos:line="69" pos:column="29">(<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">user_data_t<pos:position pos:line="69" pos:column="41"/></name><operator pos:line="69" pos:column="41">)<pos:position pos:line="69" pos:column="42"/></operator><block pos:line="69" pos:column="42">{
                               <expr><operator pos:line="70" pos:column="32">.<pos:position pos:line="70" pos:column="33"/></operator><name pos:line="70" pos:column="33">data<pos:position pos:line="70" pos:column="37"/></name> <operator pos:line="70" pos:column="38">=<pos:position pos:line="70" pos:column="39"/></operator> <name pos:line="70" pos:column="40">node<pos:position pos:line="70" pos:column="44"/></name></expr>, <expr><operator pos:line="70" pos:column="46">.<pos:position pos:line="70" pos:column="47"/></operator><name pos:line="70" pos:column="47">free_func<pos:position pos:line="70" pos:column="56"/></name> <operator pos:line="70" pos:column="57">=<pos:position pos:line="70" pos:column="58"/></operator> <name pos:line="70" pos:column="59">wm_config_free<pos:position pos:line="70" pos:column="73"/></name></expr>,
                           }<pos:position pos:line="71" pos:column="29"/></block></expr></argument>)<pos:position pos:line="71" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="72" pos:column="5">INFO<pos:position pos:line="72" pos:column="9"/></name><argument_list pos:line="72" pos:column="9">(<argument><expr><literal type="string" pos:line="72" pos:column="10">"write_mongodb plugin: registered write plugin %s %d"<pos:position pos:line="72" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="65">cb_name<pos:position pos:line="72" pos:column="72"/></name></expr></argument>,
         <argument><expr><name pos:line="73" pos:column="10">status<pos:position pos:line="73" pos:column="16"/></name></expr></argument>)<pos:position pos:line="73" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="74" pos:column="4"/></block></then></if>

  <if pos:line="76" pos:column="3">if <condition pos:line="76" pos:column="6">(<expr><name pos:line="76" pos:column="7">status<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">!=<pos:position pos:line="76" pos:column="16"/></operator> <literal type="number" pos:line="76" pos:column="17">0<pos:position pos:line="76" pos:column="18"/></literal></expr>)<pos:position pos:line="76" pos:column="19"/></condition><then pos:line="76" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="5">wm_config_free<pos:position pos:line="77" pos:column="19"/></name><argument_list pos:line="77" pos:column="19">(<argument><expr><name pos:line="77" pos:column="20">node<pos:position pos:line="77" pos:column="24"/></name></expr></argument>)<pos:position pos:line="77" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="26"/></expr_stmt></block></then></if>

  <return pos:line="79" pos:column="3">return <expr><operator pos:line="79" pos:column="10">(<pos:position pos:line="79" pos:column="11"/></operator><name pos:line="79" pos:column="11">status<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">)<pos:position pos:line="79" pos:column="18"/></operator></expr>;<pos:position pos:line="79" pos:column="19"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

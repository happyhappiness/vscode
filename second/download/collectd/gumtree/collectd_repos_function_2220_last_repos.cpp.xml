<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2220_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cpy_notification_callback<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">notification_t<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">notification<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>,
                                     <parameter><decl><type><name pos:line="2" pos:column="38">user_data_t<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">data<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list> <block pos:line="2" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cpy_callback_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">c<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name><name pos:line="3" pos:column="23">data<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">data<pos:position pos:line="3" pos:column="33"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">PyObject<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name></decl>, <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="19">notify<pos:position pos:line="4" pos:column="25"/></name></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">Notification<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">n<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">CPY_LOCK_THREADS<pos:position pos:line="7" pos:column="19"/></name>
  <name pos:line="8" pos:column="3">PyObject<pos:position pos:line="8" pos:column="11"/></name> <modifier pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></modifier></type><name pos:line="8" pos:column="13">dict<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><call><name pos:line="8" pos:column="20">PyDict_New<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">()<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt> <comment type="block" pos:line="8" pos:column="34">/* New reference. */</comment>
  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">notification_meta_t<pos:position pos:line="9" pos:column="27"/></name> <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier></type><name pos:line="9" pos:column="29">meta<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name><name pos:line="9" pos:column="36">notification<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">-&gt;<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="50">meta<pos:position pos:line="9" pos:column="54"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></init> <condition><expr><name pos:line="9" pos:column="56">meta<pos:position pos:line="9" pos:column="60"/></name> <operator pos:line="9" pos:column="61">!=<pos:position pos:line="9" pos:column="63"/></operator> <name pos:line="9" pos:column="64">NULL<pos:position pos:line="9" pos:column="68"/></name></expr>;<pos:position pos:line="9" pos:column="69"/></condition>
       <incr><expr><name pos:line="10" pos:column="8">meta<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name><name pos:line="10" pos:column="15">meta<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">next<pos:position pos:line="10" pos:column="25"/></name></name></expr></incr>)<pos:position pos:line="10" pos:column="26"/></control> <block pos:line="10" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">PyObject<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type><name pos:line="11" pos:column="15">temp<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><name pos:line="11" pos:column="22">NULL<pos:position pos:line="11" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="27"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">meta<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">type<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">NM_TYPE_STRING<pos:position pos:line="12" pos:column="37"/></name></expr>)<pos:position pos:line="12" pos:column="38"/></condition><then pos:line="12" pos:column="38"> <block pos:line="12" pos:column="39">{
      <expr_stmt><expr><name pos:line="13" pos:column="7">temp<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">cpy_string_to_unicode_or_bytes<pos:position pos:line="13" pos:column="44"/></name><argument_list pos:line="13" pos:column="44">(
          <argument><expr><name><name pos:line="14" pos:column="11">meta<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">nm_value<pos:position pos:line="14" pos:column="25"/></name><operator pos:line="14" pos:column="25">.<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="26">nm_string<pos:position pos:line="14" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt> <comment type="block" pos:line="14" pos:column="38">/* New reference. */</comment>
      <expr_stmt><expr><call><name pos:line="15" pos:column="7">PyDict_SetItemString<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">dict<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="34">meta<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">-&gt;<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="40">name<pos:position pos:line="15" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">temp<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">Py_XDECREF<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">temp<pos:position pos:line="16" pos:column="22"/></name></expr></argument>)<pos:position pos:line="16" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then> <elseif pos:line="17" pos:column="7">else <if pos:line="17" pos:column="12">if <condition pos:line="17" pos:column="15">(<expr><name><name pos:line="17" pos:column="16">meta<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">type<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">==<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">NM_TYPE_SIGNED_INT<pos:position pos:line="17" pos:column="48"/></name></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block pos:line="17" pos:column="50">{
      <decl_stmt><decl><type><name pos:line="18" pos:column="7">PyObject<pos:position pos:line="18" pos:column="15"/></name> <modifier pos:line="18" pos:column="16">*<pos:position pos:line="18" pos:column="17"/></modifier></type><name pos:line="18" pos:column="17">sival<pos:position pos:line="18" pos:column="22"/></name> <init pos:line="18" pos:column="23">= <expr><call><name pos:line="18" pos:column="25">PyLong_FromLongLong<pos:position pos:line="18" pos:column="44"/></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name><name pos:line="18" pos:column="45">meta<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">-&gt;<pos:position pos:line="18" pos:column="54"/></operator><name pos:line="18" pos:column="51">nm_value<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">nm_signed_int<pos:position pos:line="18" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="75"/></decl_stmt>
      <expr_stmt><expr><name pos:line="19" pos:column="7">temp<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">PyObject_CallFunctionObjArgs<pos:position pos:line="19" pos:column="42"/></name><argument_list pos:line="19" pos:column="42">(<argument><expr><operator pos:line="19" pos:column="43">(<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">void<pos:position pos:line="19" pos:column="48"/></name> <operator pos:line="19" pos:column="49">*<pos:position pos:line="19" pos:column="50"/></operator><operator pos:line="19" pos:column="50">)<pos:position pos:line="19" pos:column="51"/></operator><operator pos:line="19" pos:column="51">&amp;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="52">SignedType<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="64">sival<pos:position pos:line="19" pos:column="69"/></name></expr></argument>,
                                          <argument><expr><operator pos:line="20" pos:column="43">(<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">void<pos:position pos:line="20" pos:column="48"/></name> <operator pos:line="20" pos:column="49">*<pos:position pos:line="20" pos:column="50"/></operator><operator pos:line="20" pos:column="50">)<pos:position pos:line="20" pos:column="51"/></operator><literal type="number" pos:line="20" pos:column="51">0<pos:position pos:line="20" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt> <comment type="block" pos:line="20" pos:column="55">/* New reference. */</comment>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">PyDict_SetItemString<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">dict<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="34">meta<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">name<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="46">temp<pos:position pos:line="21" pos:column="50"/></name></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">Py_XDECREF<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">temp<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">Py_XDECREF<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">sival<pos:position pos:line="23" pos:column="23"/></name></expr></argument>)<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif> <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><name><name pos:line="24" pos:column="16">meta<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">-&gt;<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="22">type<pos:position pos:line="24" pos:column="26"/></name></name> <operator pos:line="24" pos:column="27">==<pos:position pos:line="24" pos:column="29"/></operator> <name pos:line="24" pos:column="30">NM_TYPE_UNSIGNED_INT<pos:position pos:line="24" pos:column="50"/></name></expr>)<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51"> <block pos:line="24" pos:column="52">{
      <decl_stmt><decl><type><name pos:line="25" pos:column="7">PyObject<pos:position pos:line="25" pos:column="15"/></name> <modifier pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></modifier></type><name pos:line="25" pos:column="17">uval<pos:position pos:line="25" pos:column="21"/></name> <init pos:line="25" pos:column="22">=
          <expr><call><name pos:line="26" pos:column="11">PyLong_FromUnsignedLongLong<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name><name pos:line="26" pos:column="39">meta<pos:position pos:line="26" pos:column="43"/></name><operator pos:line="26" pos:column="43">-&gt;<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="45">nm_value<pos:position pos:line="26" pos:column="53"/></name><operator pos:line="26" pos:column="53">.<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="54">nm_unsigned_int<pos:position pos:line="26" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="71"/></decl_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">temp<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <call><name pos:line="27" pos:column="14">PyObject_CallFunctionObjArgs<pos:position pos:line="27" pos:column="42"/></name><argument_list pos:line="27" pos:column="42">(<argument><expr><operator pos:line="27" pos:column="43">(<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="44">void<pos:position pos:line="27" pos:column="48"/></name> <operator pos:line="27" pos:column="49">*<pos:position pos:line="27" pos:column="50"/></operator><operator pos:line="27" pos:column="50">)<pos:position pos:line="27" pos:column="51"/></operator><operator pos:line="27" pos:column="51">&amp;<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="52">UnsignedType<pos:position pos:line="27" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="66">uval<pos:position pos:line="27" pos:column="70"/></name></expr></argument>,
                                          <argument><expr><operator pos:line="28" pos:column="43">(<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="44">void<pos:position pos:line="28" pos:column="48"/></name> <operator pos:line="28" pos:column="49">*<pos:position pos:line="28" pos:column="50"/></operator><operator pos:line="28" pos:column="50">)<pos:position pos:line="28" pos:column="51"/></operator><literal type="number" pos:line="28" pos:column="51">0<pos:position pos:line="28" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="54"/></expr_stmt> <comment type="block" pos:line="28" pos:column="55">/* New reference. */</comment>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">PyDict_SetItemString<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">dict<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="34">meta<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">name<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">temp<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="30" pos:column="7">Py_XDECREF<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">temp<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">Py_XDECREF<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">uval<pos:position pos:line="31" pos:column="22"/></name></expr></argument>)<pos:position pos:line="31" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><name><name pos:line="32" pos:column="16">meta<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">type<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">==<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">NM_TYPE_DOUBLE<pos:position pos:line="32" pos:column="44"/></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45"> <block pos:line="32" pos:column="46">{
      <expr_stmt><expr><name pos:line="33" pos:column="7">temp<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <call><name pos:line="33" pos:column="14">PyFloat_FromDouble<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name><name pos:line="33" pos:column="33">meta<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><name pos:line="33" pos:column="39">nm_value<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">.<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="48">nm_double<pos:position pos:line="33" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt> <comment type="block" pos:line="33" pos:column="60">/* New reference. */</comment>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">PyDict_SetItemString<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name pos:line="34" pos:column="28">dict<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="34">meta<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">-&gt;<pos:position pos:line="34" pos:column="43"/></operator><name pos:line="34" pos:column="40">name<pos:position pos:line="34" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="46">temp<pos:position pos:line="34" pos:column="50"/></name></expr></argument>)<pos:position pos:line="34" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">Py_XDECREF<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><name pos:line="35" pos:column="18">temp<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif> <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><name><name pos:line="36" pos:column="16">meta<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">-&gt;<pos:position pos:line="36" pos:column="25"/></operator><name pos:line="36" pos:column="22">type<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">==<pos:position pos:line="36" pos:column="29"/></operator> <name pos:line="36" pos:column="30">NM_TYPE_BOOLEAN<pos:position pos:line="36" pos:column="45"/></name></expr>)<pos:position pos:line="36" pos:column="46"/></condition><then pos:line="36" pos:column="46"> <block pos:line="36" pos:column="47">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">PyDict_SetItemString<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><name pos:line="37" pos:column="28">dict<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="34">meta<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">name<pos:position pos:line="37" pos:column="44"/></name></name></expr></argument>,
                           <argument><expr><ternary><condition><expr><name><name pos:line="38" pos:column="28">meta<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">nm_value<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">.<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="43">nm_boolean<pos:position pos:line="38" pos:column="53"/></name></name></expr> ?<pos:position pos:line="38" pos:column="55"/></condition><then pos:line="38" pos:column="55"> <expr><name pos:line="38" pos:column="56">Py_True<pos:position pos:line="38" pos:column="63"/></name></expr> <pos:position pos:line="38" pos:column="64"/></then><else pos:line="38" pos:column="64">: <expr><name pos:line="38" pos:column="66">Py_False<pos:position pos:line="38" pos:column="74"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if></elseif></if>
  }<pos:position pos:line="40" pos:column="4"/></block></for>
  <expr_stmt><expr><name pos:line="41" pos:column="3">notify<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <call><name pos:line="41" pos:column="12">Notification_New<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">()<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt> <comment type="block" pos:line="41" pos:column="32">/* New reference. */</comment>
  <expr_stmt><expr><name pos:line="42" pos:column="3">n<pos:position pos:line="42" pos:column="4"/></name> <operator pos:line="42" pos:column="5">=<pos:position pos:line="42" pos:column="6"/></operator> <operator pos:line="42" pos:column="7">(<pos:position pos:line="42" pos:column="8"/></operator><name pos:line="42" pos:column="8">Notification<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator><operator pos:line="42" pos:column="22">)<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">notify<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">sstrncpy<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name><name pos:line="43" pos:column="12">n<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">data<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">host<pos:position pos:line="43" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="26">notification<pos:position pos:line="43" pos:column="38"/></name><operator pos:line="43" pos:column="38">-&gt;<pos:position pos:line="43" pos:column="43"/></operator><name pos:line="43" pos:column="40">host<pos:position pos:line="43" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="46">sizeof<argument_list pos:line="43" pos:column="52">(<argument><expr><name><name pos:line="43" pos:column="53">n<pos:position pos:line="43" pos:column="54"/></name><operator pos:line="43" pos:column="54">-&gt;<pos:position pos:line="43" pos:column="59"/></operator><name pos:line="43" pos:column="56">data<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">.<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="61">host<pos:position pos:line="43" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">sstrncpy<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name><name pos:line="44" pos:column="12">n<pos:position pos:line="44" pos:column="13"/></name><operator pos:line="44" pos:column="13">-&gt;<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="15">data<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">.<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">type<pos:position pos:line="44" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="26">notification<pos:position pos:line="44" pos:column="38"/></name><operator pos:line="44" pos:column="38">-&gt;<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="40">type<pos:position pos:line="44" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="46">sizeof<argument_list pos:line="44" pos:column="52">(<argument><expr><name><name pos:line="44" pos:column="53">n<pos:position pos:line="44" pos:column="54"/></name><operator pos:line="44" pos:column="54">-&gt;<pos:position pos:line="44" pos:column="59"/></operator><name pos:line="44" pos:column="56">data<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">.<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="61">type<pos:position pos:line="44" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">sstrncpy<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><name><name pos:line="45" pos:column="12">n<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">data<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">.<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="20">type_instance<pos:position pos:line="45" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="35">notification<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">-&gt;<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="49">type_instance<pos:position pos:line="45" pos:column="62"/></name></name></expr></argument>,
           <argument><expr><sizeof pos:line="46" pos:column="12">sizeof<argument_list pos:line="46" pos:column="18">(<argument><expr><name><name pos:line="46" pos:column="19">n<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">data<pos:position pos:line="46" pos:column="26"/></name><operator pos:line="46" pos:column="26">.<pos:position pos:line="46" pos:column="27"/></operator><name pos:line="46" pos:column="27">type_instance<pos:position pos:line="46" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">sstrncpy<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name><name pos:line="47" pos:column="12">n<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">data<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">plugin<pos:position pos:line="47" pos:column="26"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="28">notification<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">plugin<pos:position pos:line="47" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="47" pos:column="50">sizeof<argument_list pos:line="47" pos:column="56">(<argument><expr><name><name pos:line="47" pos:column="57">n<pos:position pos:line="47" pos:column="58"/></name><operator pos:line="47" pos:column="58">-&gt;<pos:position pos:line="47" pos:column="63"/></operator><name pos:line="47" pos:column="60">data<pos:position pos:line="47" pos:column="64"/></name><operator pos:line="47" pos:column="64">.<pos:position pos:line="47" pos:column="65"/></operator><name pos:line="47" pos:column="65">plugin<pos:position pos:line="47" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="47" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="74"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">sstrncpy<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><name><name pos:line="48" pos:column="12">n<pos:position pos:line="48" pos:column="13"/></name><operator pos:line="48" pos:column="13">-&gt;<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="15">data<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">plugin_instance<pos:position pos:line="48" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="37">notification<pos:position pos:line="48" pos:column="49"/></name><operator pos:line="48" pos:column="49">-&gt;<pos:position pos:line="48" pos:column="54"/></operator><name pos:line="48" pos:column="51">plugin_instance<pos:position pos:line="48" pos:column="66"/></name></name></expr></argument>,
           <argument><expr><sizeof pos:line="49" pos:column="12">sizeof<argument_list pos:line="49" pos:column="18">(<argument><expr><name><name pos:line="49" pos:column="19">n<pos:position pos:line="49" pos:column="20"/></name><operator pos:line="49" pos:column="20">-&gt;<pos:position pos:line="49" pos:column="25"/></operator><name pos:line="49" pos:column="22">data<pos:position pos:line="49" pos:column="26"/></name><operator pos:line="49" pos:column="26">.<pos:position pos:line="49" pos:column="27"/></operator><name pos:line="49" pos:column="27">plugin_instance<pos:position pos:line="49" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="50" pos:column="3">n<pos:position pos:line="50" pos:column="4"/></name><operator pos:line="50" pos:column="4">-&gt;<pos:position pos:line="50" pos:column="9"/></operator><name pos:line="50" pos:column="6">data<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">.<pos:position pos:line="50" pos:column="11"/></operator><name pos:line="50" pos:column="11">time<pos:position pos:line="50" pos:column="15"/></name></name> <operator pos:line="50" pos:column="16">=<pos:position pos:line="50" pos:column="17"/></operator> <call><name pos:line="50" pos:column="18">CDTIME_T_TO_DOUBLE<pos:position pos:line="50" pos:column="36"/></name><argument_list pos:line="50" pos:column="36">(<argument><expr><name><name pos:line="50" pos:column="37">notification<pos:position pos:line="50" pos:column="49"/></name><operator pos:line="50" pos:column="49">-&gt;<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="51">time<pos:position pos:line="50" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">sstrncpy<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><name><name pos:line="51" pos:column="12">n<pos:position pos:line="51" pos:column="13"/></name><operator pos:line="51" pos:column="13">-&gt;<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="15">message<pos:position pos:line="51" pos:column="22"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="24">notification<pos:position pos:line="51" pos:column="36"/></name><operator pos:line="51" pos:column="36">-&gt;<pos:position pos:line="51" pos:column="41"/></operator><name pos:line="51" pos:column="38">message<pos:position pos:line="51" pos:column="45"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="51" pos:column="47">sizeof<argument_list pos:line="51" pos:column="53">(<argument><expr><name><name pos:line="51" pos:column="54">n<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">-&gt;<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="57">message<pos:position pos:line="51" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="51" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="67"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="52" pos:column="3">n<pos:position pos:line="52" pos:column="4"/></name><operator pos:line="52" pos:column="4">-&gt;<pos:position pos:line="52" pos:column="9"/></operator><name pos:line="52" pos:column="6">severity<pos:position pos:line="52" pos:column="14"/></name></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <name><name pos:line="52" pos:column="17">notification<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">-&gt;<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="31">severity<pos:position pos:line="52" pos:column="39"/></name></name></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="53" pos:column="3">Py_CLEAR<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><name><name pos:line="53" pos:column="12">n<pos:position pos:line="53" pos:column="13"/></name><operator pos:line="53" pos:column="13">-&gt;<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="15">meta<pos:position pos:line="53" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="54" pos:column="3">n<pos:position pos:line="54" pos:column="4"/></name><operator pos:line="54" pos:column="4">-&gt;<pos:position pos:line="54" pos:column="9"/></operator><name pos:line="54" pos:column="6">meta<pos:position pos:line="54" pos:column="10"/></name></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <name pos:line="54" pos:column="13">dict<pos:position pos:line="54" pos:column="17"/></name></expr>;<pos:position pos:line="54" pos:column="18"/></expr_stmt> <comment type="block" pos:line="54" pos:column="19">/* Steals a reference. */</comment>
  <expr_stmt><expr><name pos:line="55" pos:column="3">ret<pos:position pos:line="55" pos:column="6"/></name> <operator pos:line="55" pos:column="7">=<pos:position pos:line="55" pos:column="8"/></operator> <call><name pos:line="55" pos:column="9">PyObject_CallFunctionObjArgs<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name><name pos:line="55" pos:column="38">c<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">-&gt;<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="41">callback<pos:position pos:line="55" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="51">n<pos:position pos:line="55" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="54">c<pos:position pos:line="55" pos:column="55"/></name><operator pos:line="55" pos:column="55">-&gt;<pos:position pos:line="55" pos:column="60"/></operator><name pos:line="55" pos:column="57">data<pos:position pos:line="55" pos:column="61"/></name></name></expr></argument>,
                                     <argument><expr><operator pos:line="56" pos:column="38">(<pos:position pos:line="56" pos:column="39"/></operator><name pos:line="56" pos:column="39">void<pos:position pos:line="56" pos:column="43"/></name> <operator pos:line="56" pos:column="44">*<pos:position pos:line="56" pos:column="45"/></operator><operator pos:line="56" pos:column="45">)<pos:position pos:line="56" pos:column="46"/></operator><literal type="number" pos:line="56" pos:column="46">0<pos:position pos:line="56" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt> <comment type="block" pos:line="56" pos:column="50">/* New reference. */</comment>
  <expr_stmt><expr><call><name pos:line="57" pos:column="3">Py_XDECREF<pos:position pos:line="57" pos:column="13"/></name><argument_list pos:line="57" pos:column="13">(<argument><expr><name pos:line="57" pos:column="14">notify<pos:position pos:line="57" pos:column="20"/></name></expr></argument>)<pos:position pos:line="57" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">ret<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">==<pos:position pos:line="58" pos:column="13"/></operator> <name pos:line="58" pos:column="14">NULL<pos:position pos:line="58" pos:column="18"/></name></expr>)<pos:position pos:line="58" pos:column="19"/></condition><then pos:line="58" pos:column="19"> <block pos:line="58" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">cpy_log_exception<pos:position pos:line="59" pos:column="22"/></name><argument_list pos:line="59" pos:column="22">(<argument><expr><literal type="string" pos:line="59" pos:column="23">"notification callback"<pos:position pos:line="59" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="48"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></then> <else pos:line="60" pos:column="5">else <block pos:line="60" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">Py_DECREF<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">ret<pos:position pos:line="61" pos:column="18"/></name></expr></argument>)<pos:position pos:line="61" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="20"/></expr_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></else></if>
  <macro><name pos:line="63" pos:column="3">CPY_RELEASE_THREADS<pos:position pos:line="63" pos:column="22"/></name></macro>
  <return pos:line="64" pos:column="3">return <expr><literal type="number" pos:line="64" pos:column="10">0<pos:position pos:line="64" pos:column="11"/></literal></expr>;<pos:position pos:line="64" pos:column="12"/></return>
}<pos:position pos:line="65" pos:column="2"/></block></function></unit>

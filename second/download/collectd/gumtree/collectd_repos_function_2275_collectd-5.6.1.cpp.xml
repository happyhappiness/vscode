<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2275_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">lcc_server_t<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">lcc_server_create<pos:position pos:line="1" pos:column="32"/></name> <parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">lcc_network_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">net<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="54">/* {{{ */</comment>
    <parameter><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">node<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">service<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">lcc_server_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">srv<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">net<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator> <operator pos:line="6" pos:column="21">||<pos:position pos:line="6" pos:column="23"/></operator> <operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">node<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">==<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">NULL<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">)<pos:position pos:line="6" pos:column="38"/></operator></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">)<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></return></block></then></if>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">service<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">service<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NET_DEFAULT_PORT<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">srv<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">calloc<pos:position pos:line="11" pos:column="15"/></name> <argument_list pos:line="11" pos:column="16">(<argument><expr><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="20">sizeof <argument_list pos:line="11" pos:column="27">(<argument><expr><operator pos:line="11" pos:column="28">*<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="29">srv<pos:position pos:line="11" pos:column="32"/></name></expr></argument>)<pos:position pos:line="11" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">srv<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">==<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">NULL<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">)<pos:position pos:line="13" pos:column="18"/></operator></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="15" pos:column="3">srv<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">fd<pos:position pos:line="15" pos:column="10"/></name></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <operator pos:line="15" pos:column="13">-<pos:position pos:line="15" pos:column="14"/></operator><literal type="number" pos:line="15" pos:column="14">1<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">srv<pos:position pos:line="16" pos:column="6"/></name><operator pos:line="16" pos:column="6">-&gt;<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="8">security_level<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <name pos:line="16" pos:column="25">NONE<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">srv<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">username<pos:position pos:line="17" pos:column="16"/></name></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <name pos:line="17" pos:column="19">NULL<pos:position pos:line="17" pos:column="23"/></name></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">srv<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">password<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">NULL<pos:position pos:line="18" pos:column="23"/></name></expr>;<pos:position pos:line="18" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">srv<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">next<pos:position pos:line="19" pos:column="12"/></name></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">NULL<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="21" pos:column="3">srv<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">node<pos:position pos:line="21" pos:column="12"/></name></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">strdup<pos:position pos:line="21" pos:column="21"/></name> <argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">node<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">srv<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">node<pos:position pos:line="22" pos:column="16"/></name></name> <operator pos:line="22" pos:column="17">==<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">NULL<pos:position pos:line="22" pos:column="24"/></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
  <block pos:line="23" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">free<pos:position pos:line="24" pos:column="9"/></name> <argument_list pos:line="24" pos:column="10">(<argument><expr><name pos:line="24" pos:column="11">srv<pos:position pos:line="24" pos:column="14"/></name></expr></argument>)<pos:position pos:line="24" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="16"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">NULL<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">)<pos:position pos:line="25" pos:column="18"/></operator></expr>;<pos:position pos:line="25" pos:column="19"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="28" pos:column="3">srv<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">service<pos:position pos:line="28" pos:column="15"/></name></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">strdup<pos:position pos:line="28" pos:column="24"/></name> <argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">service<pos:position pos:line="28" pos:column="33"/></name></expr></argument>)<pos:position pos:line="28" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="35"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name><name pos:line="29" pos:column="7">srv<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">service<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">==<pos:position pos:line="29" pos:column="22"/></operator> <name pos:line="29" pos:column="23">NULL<pos:position pos:line="29" pos:column="27"/></name></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28">
  <block pos:line="30" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">free<pos:position pos:line="31" pos:column="9"/></name> <argument_list pos:line="31" pos:column="10">(<argument><expr><name><name pos:line="31" pos:column="11">srv<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">node<pos:position pos:line="31" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">free<pos:position pos:line="32" pos:column="9"/></name> <argument_list pos:line="32" pos:column="10">(<argument><expr><name pos:line="32" pos:column="11">srv<pos:position pos:line="32" pos:column="14"/></name></expr></argument>)<pos:position pos:line="32" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">NULL<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">)<pos:position pos:line="33" pos:column="18"/></operator></expr>;<pos:position pos:line="33" pos:column="19"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="36" pos:column="3">srv<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">buffer<pos:position pos:line="36" pos:column="14"/></name></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">lcc_network_buffer_create<pos:position pos:line="36" pos:column="42"/></name> <argument_list pos:line="36" pos:column="43">(<comment type="block" pos:line="36" pos:column="44">/* size = */</comment> <argument><expr><literal type="number" pos:line="36" pos:column="57">0<pos:position pos:line="36" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="60"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name><name pos:line="37" pos:column="7">srv<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">buffer<pos:position pos:line="37" pos:column="18"/></name></name> <operator pos:line="37" pos:column="19">==<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">NULL<pos:position pos:line="37" pos:column="26"/></name></expr>)<pos:position pos:line="37" pos:column="27"/></condition><then pos:line="37" pos:column="27">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">free<pos:position pos:line="39" pos:column="9"/></name> <argument_list pos:line="39" pos:column="10">(<argument><expr><name><name pos:line="39" pos:column="11">srv<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">-&gt;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="16">service<pos:position pos:line="39" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">free<pos:position pos:line="40" pos:column="9"/></name> <argument_list pos:line="40" pos:column="10">(<argument><expr><name><name pos:line="40" pos:column="11">srv<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">-&gt;<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="16">node<pos:position pos:line="40" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">free<pos:position pos:line="41" pos:column="9"/></name> <argument_list pos:line="41" pos:column="10">(<argument><expr><name pos:line="41" pos:column="11">srv<pos:position pos:line="41" pos:column="14"/></name></expr></argument>)<pos:position pos:line="41" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="16"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">NULL<pos:position pos:line="42" pos:column="17"/></name><operator pos:line="42" pos:column="17">)<pos:position pos:line="42" pos:column="18"/></operator></expr>;<pos:position pos:line="42" pos:column="19"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <if pos:line="45" pos:column="3">if <condition pos:line="45" pos:column="6">(<expr><name><name pos:line="45" pos:column="7">net<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">servers<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">==<pos:position pos:line="45" pos:column="22"/></operator> <name pos:line="45" pos:column="23">NULL<pos:position pos:line="45" pos:column="27"/></name></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28">
  <block pos:line="46" pos:column="3">{
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">net<pos:position pos:line="47" pos:column="8"/></name><operator pos:line="47" pos:column="8">-&gt;<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="10">servers<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">=<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">srv<pos:position pos:line="47" pos:column="23"/></name></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></then>
  <else pos:line="49" pos:column="3">else
  <block pos:line="50" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="51" pos:column="5">lcc_server_t<pos:position pos:line="51" pos:column="17"/></name> <modifier pos:line="51" pos:column="18">*<pos:position pos:line="51" pos:column="19"/></modifier></type><name pos:line="51" pos:column="19">last<pos:position pos:line="51" pos:column="23"/></name> <init pos:line="51" pos:column="24">= <expr><name><name pos:line="51" pos:column="26">net<pos:position pos:line="51" pos:column="29"/></name><operator pos:line="51" pos:column="29">-&gt;<pos:position pos:line="51" pos:column="34"/></operator><name pos:line="51" pos:column="31">servers<pos:position pos:line="51" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="51" pos:column="39"/></decl_stmt>

    <while pos:line="53" pos:column="5">while <condition pos:line="53" pos:column="11">(<expr><name><name pos:line="53" pos:column="12">last<pos:position pos:line="53" pos:column="16"/></name><operator pos:line="53" pos:column="16">-&gt;<pos:position pos:line="53" pos:column="21"/></operator><name pos:line="53" pos:column="18">next<pos:position pos:line="53" pos:column="22"/></name></name> <operator pos:line="53" pos:column="23">!=<pos:position pos:line="53" pos:column="25"/></operator> <name pos:line="53" pos:column="26">NULL<pos:position pos:line="53" pos:column="30"/></name></expr>)<pos:position pos:line="53" pos:column="31"/></condition>
      <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="7">last<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <name><name pos:line="54" pos:column="14">last<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">next<pos:position pos:line="54" pos:column="24"/></name></name></expr>;<pos:position pos:line="54" pos:column="25"/></expr_stmt></block></while>

    <expr_stmt><expr><name><name pos:line="56" pos:column="5">last<pos:position pos:line="56" pos:column="9"/></name><operator pos:line="56" pos:column="9">-&gt;<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="11">next<pos:position pos:line="56" pos:column="15"/></name></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">srv<pos:position pos:line="56" pos:column="21"/></name></expr>;<pos:position pos:line="56" pos:column="22"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></else></if>

  <return pos:line="59" pos:column="3">return <expr><operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="11">srv<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">)<pos:position pos:line="59" pos:column="15"/></operator></expr>;<pos:position pos:line="59" pos:column="16"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

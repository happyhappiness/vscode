<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2517_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">verify_sha256<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">payload<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">size_t<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">payload_size<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">username<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">password<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="3" pos:column="26">uint8_t<pos:position pos:line="3" pos:column="33"/></name></type> <name><name pos:line="3" pos:column="34">hash_provided<pos:position pos:line="3" pos:column="47"/></name><index pos:line="3" pos:column="47">[<expr><literal type="number" pos:line="3" pos:column="48">32<pos:position pos:line="3" pos:column="50"/></literal></expr>]<pos:position pos:line="3" pos:column="51"/></index></name></decl></parameter>)<pos:position pos:line="3" pos:column="52"/></parameter_list> <block pos:line="3" pos:column="53">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gcry_md_hd_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">hd<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">gcry_error_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">err<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><call><name pos:line="6" pos:column="22">gcry_md_open<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><operator pos:line="6" pos:column="35">&amp;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="36">hd<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">GCRY_MD_SHA256<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="56">GCRY_MD_FLAG_HMAC<pos:position pos:line="6" pos:column="73"/></name></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="75"/></decl_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">err<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">!=<pos:position pos:line="7" pos:column="13"/></operator> <literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16"> <block pos:line="7" pos:column="17">{
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">int<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">)<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">err<pos:position pos:line="8" pos:column="20"/></name></expr>;<pos:position pos:line="8" pos:column="21"/></return>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">err<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">gcry_md_setkey<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">hd<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="28">password<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="38">strlen<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">password<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">err<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">!=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <block pos:line="12" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">gcry_md_close<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">hd<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">int<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">err<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">gcry_md_write<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">hd<pos:position pos:line="17" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="21">username<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="31">strlen<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">username<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">gcry_md_write<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">hd<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="21">payload<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="30">payload_size<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="20" pos:column="3">unsigned<pos:position pos:line="20" pos:column="11"/></name> <name pos:line="20" pos:column="12">char<pos:position pos:line="20" pos:column="16"/></name> <modifier pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></modifier></type><name pos:line="20" pos:column="18">hash_calculated<pos:position pos:line="20" pos:column="33"/></name> <init pos:line="20" pos:column="34">= <expr><call><name pos:line="20" pos:column="36">gcry_md_read<pos:position pos:line="20" pos:column="48"/></name><argument_list pos:line="20" pos:column="48">(<argument><expr><name pos:line="20" pos:column="49">hd<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">GCRY_MD_SHA256<pos:position pos:line="20" pos:column="67"/></name></expr></argument>)<pos:position pos:line="20" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="69"/></decl_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">!<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">hash_calculated<pos:position pos:line="21" pos:column="23"/></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <block pos:line="21" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">gcry_md_close<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">hd<pos:position pos:line="22" pos:column="21"/></name></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">-<pos:position pos:line="23" pos:column="13"/></operator><literal type="number" pos:line="23" pos:column="13">1<pos:position pos:line="23" pos:column="14"/></literal></expr>;<pos:position pos:line="23" pos:column="15"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="26" pos:column="3">int<pos:position pos:line="26" pos:column="6"/></name></type> <name pos:line="26" pos:column="7">ret<pos:position pos:line="26" pos:column="10"/></name> <init pos:line="26" pos:column="11">= <expr><call><name pos:line="26" pos:column="13">memcmp<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">hash_provided<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="35">hash_calculated<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="52">32<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="56"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">gcry_md_close<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">hd<pos:position pos:line="28" pos:column="19"/></name></expr></argument>)<pos:position pos:line="28" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="29" pos:column="3">hash_calculated<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">NULL<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>

  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">!<pos:position pos:line="31" pos:column="11"/></operator><operator pos:line="31" pos:column="11">!<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">ret<pos:position pos:line="31" pos:column="15"/></name></expr>;<pos:position pos:line="31" pos:column="16"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

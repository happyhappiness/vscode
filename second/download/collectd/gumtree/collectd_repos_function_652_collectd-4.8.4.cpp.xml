<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_652_collectd-4.8.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">powerdns_read_recursor<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">list_item_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">item<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list> <comment type="block" pos:line="1" pos:column="55">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">buffer<pos:position pos:line="3" pos:column="15"/></name> <init pos:line="3" pos:column="16">= <expr><name pos:line="3" pos:column="18">NULL<pos:position pos:line="3" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">buffer_size<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">dummy<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">keys_list<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name> <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier></type><name pos:line="10" pos:column="9">key<pos:position pos:line="10" pos:column="12"/></name></decl>;<pos:position pos:line="10" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">key_saveptr<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">char<pos:position pos:line="12" pos:column="7"/></name> <modifier pos:line="12" pos:column="8">*<pos:position pos:line="12" pos:column="9"/></modifier></type><name pos:line="12" pos:column="9">value<pos:position pos:line="12" pos:column="14"/></name></decl>;<pos:position pos:line="12" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">char<pos:position pos:line="13" pos:column="7"/></name> <modifier pos:line="13" pos:column="8">*<pos:position pos:line="13" pos:column="9"/></modifier></type><name pos:line="13" pos:column="9">value_saveptr<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">item<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">command<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">==<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">NULL<pos:position pos:line="15" pos:column="28"/></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
  <block pos:line="16" pos:column="3">{
    <expr_stmt><expr><name pos:line="17" pos:column="5">status<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <call><name pos:line="17" pos:column="14">powerdns_update_recursor_command<pos:position pos:line="17" pos:column="46"/></name> <argument_list pos:line="17" pos:column="47">(<argument><expr><name pos:line="17" pos:column="48">item<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ERROR<pos:position pos:line="20" pos:column="12"/></name> <argument_list pos:line="20" pos:column="13">(<argument><expr><literal type="string" pos:line="20" pos:column="14">"powerdns plugin: powerdns_update_recursor_command failed."<pos:position pos:line="20" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="75"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><operator pos:line="21" pos:column="14">(<pos:position pos:line="21" pos:column="15"/></operator><operator pos:line="21" pos:column="15">-<pos:position pos:line="21" pos:column="16"/></operator><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal><operator pos:line="21" pos:column="17">)<pos:position pos:line="21" pos:column="18"/></operator></expr>;<pos:position pos:line="21" pos:column="19"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">DEBUG<pos:position pos:line="24" pos:column="10"/></name> <argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="string" pos:line="24" pos:column="12">"powerdns plugin: powerdns_read_recursor: item-&gt;command = %s;"<pos:position pos:line="24" pos:column="77"/></literal></expr></argument>,
        <argument><expr><name><name pos:line="25" pos:column="9">item<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">command<pos:position pos:line="25" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="27" pos:column="3">assert<pos:position pos:line="27" pos:column="9"/></name> <argument_list pos:line="27" pos:column="10">(<argument><expr><name><name pos:line="27" pos:column="11">item<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">-&gt;<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="17">command<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">!=<pos:position pos:line="27" pos:column="27"/></operator> <name pos:line="27" pos:column="28">NULL<pos:position pos:line="27" pos:column="32"/></name></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>

  <expr_stmt><expr><name pos:line="29" pos:column="3">status<pos:position pos:line="29" pos:column="9"/></name> <operator pos:line="29" pos:column="10">=<pos:position pos:line="29" pos:column="11"/></operator> <call><name pos:line="29" pos:column="12">powerdns_get_data<pos:position pos:line="29" pos:column="29"/></name> <argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">item<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="37">&amp;<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="38">buffer<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="46">&amp;<pos:position pos:line="29" pos:column="51"/></operator><name pos:line="29" pos:column="47">buffer_size<pos:position pos:line="29" pos:column="58"/></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">status<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">!=<pos:position pos:line="30" pos:column="16"/></operator> <literal type="number" pos:line="30" pos:column="17">0<pos:position pos:line="30" pos:column="18"/></literal></expr>)<pos:position pos:line="30" pos:column="19"/></condition><then pos:line="30" pos:column="19">
  <block pos:line="31" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name> <argument_list pos:line="32" pos:column="11">(<argument><expr><literal type="string" pos:line="32" pos:column="12">"powerdns plugin: powerdns_get_data failed."<pos:position pos:line="32" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><operator pos:line="33" pos:column="13">-<pos:position pos:line="33" pos:column="14"/></operator><literal type="number" pos:line="33" pos:column="14">1<pos:position pos:line="33" pos:column="15"/></literal><operator pos:line="33" pos:column="15">)<pos:position pos:line="33" pos:column="16"/></operator></expr>;<pos:position pos:line="33" pos:column="17"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="36" pos:column="3">keys_list<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">strdup<pos:position pos:line="36" pos:column="21"/></name> <argument_list pos:line="36" pos:column="22">(<argument><expr><name><name pos:line="36" pos:column="23">item<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">command<pos:position pos:line="36" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">keys_list<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">NULL<pos:position pos:line="37" pos:column="24"/></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25">
  <block pos:line="38" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">FUNC_ERROR<pos:position pos:line="39" pos:column="15"/></name> <argument_list pos:line="39" pos:column="16">(<argument><expr><literal type="string" pos:line="39" pos:column="17">"strdup"<pos:position pos:line="39" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">sfree<pos:position pos:line="40" pos:column="10"/></name> <argument_list pos:line="40" pos:column="11">(<argument><expr><name pos:line="40" pos:column="12">buffer<pos:position pos:line="40" pos:column="18"/></name></expr></argument>)<pos:position pos:line="40" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><operator pos:line="41" pos:column="13">-<pos:position pos:line="41" pos:column="14"/></operator><literal type="number" pos:line="41" pos:column="14">1<pos:position pos:line="41" pos:column="15"/></literal><operator pos:line="41" pos:column="15">)<pos:position pos:line="41" pos:column="16"/></operator></expr>;<pos:position pos:line="41" pos:column="17"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="44" pos:column="3">key_saveptr<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">=<pos:position pos:line="44" pos:column="16"/></operator> <name pos:line="44" pos:column="17">NULL<pos:position pos:line="44" pos:column="21"/></name></expr>;<pos:position pos:line="44" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="45" pos:column="3">value_saveptr<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">NULL<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>

  <comment type="block" pos:line="47" pos:column="3">/* Skip the `get' at the beginning */</comment>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">strtok_r<pos:position pos:line="48" pos:column="11"/></name> <argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">keys_list<pos:position pos:line="48" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="24">" \t"<pos:position pos:line="48" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="31">&amp;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="32">key_saveptr<pos:position pos:line="48" pos:column="43"/></name></expr></argument>)<pos:position pos:line="48" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="45"/></expr_stmt>

  <expr_stmt><expr><name pos:line="50" pos:column="3">dummy<pos:position pos:line="50" pos:column="8"/></name> <operator pos:line="50" pos:column="9">=<pos:position pos:line="50" pos:column="10"/></operator> <name pos:line="50" pos:column="11">buffer<pos:position pos:line="50" pos:column="17"/></name></expr>;<pos:position pos:line="50" pos:column="18"/></expr_stmt>
  <while pos:line="51" pos:column="3">while <condition pos:line="51" pos:column="9">(<expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">value<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">=<pos:position pos:line="51" pos:column="18"/></operator> <call><name pos:line="51" pos:column="19">strtok_r<pos:position pos:line="51" pos:column="27"/></name> <argument_list pos:line="51" pos:column="28">(<argument><expr><name pos:line="51" pos:column="29">dummy<pos:position pos:line="51" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="36">" \t\n\r"<pos:position pos:line="51" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="51" pos:column="47">&amp;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="48">value_saveptr<pos:position pos:line="51" pos:column="61"/></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call><operator pos:line="51" pos:column="62">)<pos:position pos:line="51" pos:column="63"/></operator> <operator pos:line="51" pos:column="64">!=<pos:position pos:line="51" pos:column="66"/></operator> <name pos:line="51" pos:column="67">NULL<pos:position pos:line="51" pos:column="71"/></name></expr>)<pos:position pos:line="51" pos:column="72"/></condition>
  <block pos:line="52" pos:column="3">{
    <expr_stmt><expr><name pos:line="53" pos:column="5">dummy<pos:position pos:line="53" pos:column="10"/></name> <operator pos:line="53" pos:column="11">=<pos:position pos:line="53" pos:column="12"/></operator> <name pos:line="53" pos:column="13">NULL<pos:position pos:line="53" pos:column="17"/></name></expr>;<pos:position pos:line="53" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name pos:line="55" pos:column="5">key<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <call><name pos:line="55" pos:column="11">strtok_r<pos:position pos:line="55" pos:column="19"/></name> <argument_list pos:line="55" pos:column="20">(<argument><expr><name pos:line="55" pos:column="21">NULL<pos:position pos:line="55" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="27">" \t"<pos:position pos:line="55" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="55" pos:column="34">&amp;<pos:position pos:line="55" pos:column="39"/></operator><name pos:line="55" pos:column="35">key_saveptr<pos:position pos:line="55" pos:column="46"/></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="48"/></expr_stmt>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">key<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">==<pos:position pos:line="56" pos:column="15"/></operator> <name pos:line="56" pos:column="16">NULL<pos:position pos:line="56" pos:column="20"/></name></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21">
      <block type="pseudo"><break pos:line="57" pos:column="7">break;<pos:position pos:line="57" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">submit<pos:position pos:line="59" pos:column="11"/></name> <argument_list pos:line="59" pos:column="12">(<argument><expr><name><name pos:line="59" pos:column="13">item<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">instance<pos:position pos:line="59" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="29">key<pos:position pos:line="59" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="34">value<pos:position pos:line="59" pos:column="39"/></name></expr></argument>)<pos:position pos:line="59" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="41"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block></while> <comment type="block" pos:line="60" pos:column="5">/* while (strtok_r) */</comment>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">sfree<pos:position pos:line="62" pos:column="8"/></name> <argument_list pos:line="62" pos:column="9">(<argument><expr><name pos:line="62" pos:column="10">buffer<pos:position pos:line="62" pos:column="16"/></name></expr></argument>)<pos:position pos:line="62" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">sfree<pos:position pos:line="63" pos:column="8"/></name> <argument_list pos:line="63" pos:column="9">(<argument><expr><name pos:line="63" pos:column="10">keys_list<pos:position pos:line="63" pos:column="19"/></name></expr></argument>)<pos:position pos:line="63" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="21"/></expr_stmt>

  <return pos:line="65" pos:column="3">return <expr><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><literal type="number" pos:line="65" pos:column="11">0<pos:position pos:line="65" pos:column="12"/></literal><operator pos:line="65" pos:column="12">)<pos:position pos:line="65" pos:column="13"/></operator></expr>;<pos:position pos:line="65" pos:column="14"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

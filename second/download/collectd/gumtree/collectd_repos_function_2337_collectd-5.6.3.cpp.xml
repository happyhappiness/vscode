<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2337_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ignorelist_match_regex<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">ignorelist_item_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">item<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="60">const<pos:position pos:line="1" pos:column="65"/></specifier> <name pos:line="1" pos:column="66">char<pos:position pos:line="1" pos:column="70"/></name> <modifier pos:line="1" pos:column="71">*<pos:position pos:line="1" pos:column="72"/></modifier></type><name pos:line="1" pos:column="72">entry<pos:position pos:line="1" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="78"/></parameter_list> <block pos:line="1" pos:column="79">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">assert<pos:position pos:line="2" pos:column="9"/></name><argument_list pos:line="2" pos:column="9">(<argument><expr><operator pos:line="2" pos:column="10">(<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">item<pos:position pos:line="2" pos:column="15"/></name> <operator pos:line="2" pos:column="16">!=<pos:position pos:line="2" pos:column="18"/></operator> <name pos:line="2" pos:column="19">NULL<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">)<pos:position pos:line="2" pos:column="24"/></operator> <operator pos:line="2" pos:column="25">&amp;&amp;<pos:position pos:line="2" pos:column="35"/></operator> <operator pos:line="2" pos:column="28">(<pos:position pos:line="2" pos:column="29"/></operator><name><name pos:line="2" pos:column="29">item<pos:position pos:line="2" pos:column="33"/></name><operator pos:line="2" pos:column="33">-&gt;<pos:position pos:line="2" pos:column="38"/></operator><name pos:line="2" pos:column="35">rmatch<pos:position pos:line="2" pos:column="41"/></name></name> <operator pos:line="2" pos:column="42">!=<pos:position pos:line="2" pos:column="44"/></operator> <name pos:line="2" pos:column="45">NULL<pos:position pos:line="2" pos:column="49"/></name><operator pos:line="2" pos:column="49">)<pos:position pos:line="2" pos:column="50"/></operator> <operator pos:line="2" pos:column="51">&amp;&amp;<pos:position pos:line="2" pos:column="61"/></operator> <operator pos:line="2" pos:column="54">(<pos:position pos:line="2" pos:column="55"/></operator><name pos:line="2" pos:column="55">entry<pos:position pos:line="2" pos:column="60"/></name> <operator pos:line="2" pos:column="61">!=<pos:position pos:line="2" pos:column="63"/></operator> <name pos:line="2" pos:column="64">NULL<pos:position pos:line="2" pos:column="68"/></name><operator pos:line="2" pos:column="68">)<pos:position pos:line="2" pos:column="69"/></operator> <operator pos:line="2" pos:column="70">&amp;&amp;<pos:position pos:line="2" pos:column="80"/></operator>
         <operator pos:line="3" pos:column="10">(<pos:position pos:line="3" pos:column="11"/></operator><call><name pos:line="3" pos:column="11">strlen<pos:position pos:line="3" pos:column="17"/></name><argument_list pos:line="3" pos:column="17">(<argument><expr><name pos:line="3" pos:column="18">entry<pos:position pos:line="3" pos:column="23"/></name></expr></argument>)<pos:position pos:line="3" pos:column="24"/></argument_list></call> <operator pos:line="3" pos:column="25">&gt;<pos:position pos:line="3" pos:column="29"/></operator> <literal type="number" pos:line="3" pos:column="27">0<pos:position pos:line="3" pos:column="28"/></literal><operator pos:line="3" pos:column="28">)<pos:position pos:line="3" pos:column="29"/></operator></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="31"/></expr_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* match regex */</comment>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><call><name pos:line="6" pos:column="7">regexec<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><name><name pos:line="6" pos:column="15">item<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">rmatch<pos:position pos:line="6" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="29">entry<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="39">NULL<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="45">0<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call> <operator pos:line="6" pos:column="48">==<pos:position pos:line="6" pos:column="50"/></operator> <literal type="number" pos:line="6" pos:column="51">0<pos:position pos:line="6" pos:column="52"/></literal></expr>)<pos:position pos:line="6" pos:column="53"/></condition><then pos:line="6" pos:column="53">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

  <return pos:line="9" pos:column="3">return <expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><literal type="number" pos:line="9" pos:column="11">0<pos:position pos:line="9" pos:column="12"/></literal><operator pos:line="9" pos:column="12">)<pos:position pos:line="9" pos:column="13"/></operator></expr>;<pos:position pos:line="9" pos:column="14"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

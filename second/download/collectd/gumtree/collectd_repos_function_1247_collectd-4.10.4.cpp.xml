<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1247_collectd-4.10.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cu_match_t<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">match_create_callback<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">regex<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">excluderegex<pos:position pos:line="1" pos:column="79"/></name></decl></parameter>,
		<parameter><function_decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> (<modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><name pos:line="2" pos:column="23">callback<pos:position pos:line="2" pos:column="31"/></name>) <parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">str<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>,
		  <parameter><decl><type><name pos:line="3" pos:column="19">char<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier> <specifier pos:line="3" pos:column="26">const<pos:position pos:line="3" pos:column="31"/></specifier> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">matches<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="42">size_t<pos:position pos:line="3" pos:column="48"/></name></type> <name pos:line="3" pos:column="49">matches_num<pos:position pos:line="3" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="62">void<pos:position pos:line="3" pos:column="66"/></name> <modifier pos:line="3" pos:column="67">*<pos:position pos:line="3" pos:column="68"/></modifier></type><name pos:line="3" pos:column="68">user_data<pos:position pos:line="3" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="78"/></parameter_list></function_decl></parameter>,
		<parameter><decl><type><name pos:line="4" pos:column="17">void<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">user_data<pos:position pos:line="4" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="33"/></parameter_list>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">cu_match_t<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">obj<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">status<pos:position pos:line="7" pos:column="13"/></name></decl>;<pos:position pos:line="7" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">DEBUG<pos:position pos:line="9" pos:column="8"/></name> <argument_list pos:line="9" pos:column="9">(<argument><expr><literal type="string" pos:line="9" pos:column="10">"utils_match: match_create_callback: regex = %s, excluderegex = %s"<pos:position pos:line="9" pos:column="77"/></literal></expr></argument>,
	 <argument><expr><name pos:line="10" pos:column="10">regex<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="17">excluderegex<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">obj<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">cu_match_t<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">*<pos:position pos:line="12" pos:column="22"/></operator><operator pos:line="12" pos:column="22">)<pos:position pos:line="12" pos:column="23"/></operator> <call><name pos:line="12" pos:column="24">malloc<pos:position pos:line="12" pos:column="30"/></name> <argument_list pos:line="12" pos:column="31">(<argument><expr><sizeof pos:line="12" pos:column="32">sizeof <argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">cu_match_t<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">obj<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">==<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">NULL<pos:position pos:line="13" pos:column="18"/></name></expr>)<pos:position pos:line="13" pos:column="19"/></condition><then pos:line="13" pos:column="19">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">NULL<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">)<pos:position pos:line="14" pos:column="18"/></operator></expr>;<pos:position pos:line="14" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="15" pos:column="3">memset<pos:position pos:line="15" pos:column="9"/></name> <argument_list pos:line="15" pos:column="10">(<argument><expr><name pos:line="15" pos:column="11">obj<pos:position pos:line="15" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="16">'\0'<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="22">sizeof <argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">cu_match_t<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>

  <expr_stmt><expr><name pos:line="17" pos:column="3">status<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <call><name pos:line="17" pos:column="12">regcomp<pos:position pos:line="17" pos:column="19"/></name> <argument_list pos:line="17" pos:column="20">(<argument><expr><operator pos:line="17" pos:column="21">&amp;<pos:position pos:line="17" pos:column="26"/></operator><name><name pos:line="17" pos:column="22">obj<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">regex<pos:position pos:line="17" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="34">regex<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">REG_EXTENDED<pos:position pos:line="17" pos:column="53"/></name> <operator pos:line="17" pos:column="54">|<pos:position pos:line="17" pos:column="55"/></operator> <name pos:line="17" pos:column="56">REG_NEWLINE<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name> <argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="string" pos:line="20" pos:column="12">"Compiling the regular expression \"%s\" failed."<pos:position pos:line="20" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">regex<pos:position pos:line="20" pos:column="68"/></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">sfree<pos:position pos:line="21" pos:column="10"/></name> <argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">obj<pos:position pos:line="21" pos:column="15"/></name></expr></argument>)<pos:position pos:line="21" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="17"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">NULL<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">)<pos:position pos:line="22" pos:column="18"/></operator></expr>;<pos:position pos:line="22" pos:column="19"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">excluderegex<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">&amp;&amp;<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="23">strcmp<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">excluderegex<pos:position pos:line="25" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="44">""<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call> <operator pos:line="25" pos:column="48">!=<pos:position pos:line="25" pos:column="50"/></operator> <literal type="number" pos:line="25" pos:column="51">0<pos:position pos:line="25" pos:column="52"/></literal></expr>)<pos:position pos:line="25" pos:column="53"/></condition><then pos:line="25" pos:column="53"> <block pos:line="25" pos:column="54">{
    <expr_stmt><expr><name pos:line="26" pos:column="5">status<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">regcomp<pos:position pos:line="26" pos:column="21"/></name> <argument_list pos:line="26" pos:column="22">(<argument><expr><operator pos:line="26" pos:column="23">&amp;<pos:position pos:line="26" pos:column="28"/></operator><name><name pos:line="26" pos:column="24">obj<pos:position pos:line="26" pos:column="27"/></name><operator pos:line="26" pos:column="27">-&gt;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="29">excluderegex<pos:position pos:line="26" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">excluderegex<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="57">REG_EXTENDED<pos:position pos:line="26" pos:column="69"/></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">status<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">!=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="number" pos:line="27" pos:column="19">0<pos:position pos:line="27" pos:column="20"/></literal></expr>)<pos:position pos:line="27" pos:column="21"/></condition><then pos:line="27" pos:column="21">
    <block pos:line="28" pos:column="5">{
	<expr_stmt><expr><call><name pos:line="29" pos:column="9">ERROR<pos:position pos:line="29" pos:column="14"/></name> <argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="string" pos:line="29" pos:column="16">"Compiling the excluding regular expression \"%s\" failed."<pos:position pos:line="29" pos:column="75"/></literal></expr></argument>,
	       <argument><expr><name pos:line="30" pos:column="16">excluderegex<pos:position pos:line="30" pos:column="28"/></name></expr></argument>)<pos:position pos:line="30" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="31" pos:column="9">sfree<pos:position pos:line="31" pos:column="14"/></name> <argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">obj<pos:position pos:line="31" pos:column="19"/></name></expr></argument>)<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
	<return pos:line="32" pos:column="9">return <expr><operator pos:line="32" pos:column="16">(<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">NULL<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">)<pos:position pos:line="32" pos:column="22"/></operator></expr>;<pos:position pos:line="32" pos:column="23"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">obj<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">-&gt;<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="10">flags<pos:position pos:line="34" pos:column="15"/></name></name> <operator pos:line="34" pos:column="16">|=<pos:position pos:line="34" pos:column="18"/></operator> <name pos:line="34" pos:column="19">UTILS_MATCH_FLAGS_EXCLUDE_REGEX<pos:position pos:line="34" pos:column="50"/></name></expr>;<pos:position pos:line="34" pos:column="51"/></expr_stmt>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="37" pos:column="3">obj<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">callback<pos:position pos:line="37" pos:column="16"/></name></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">callback<pos:position pos:line="37" pos:column="27"/></name></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">obj<pos:position pos:line="38" pos:column="6"/></name><operator pos:line="38" pos:column="6">-&gt;<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="8">user_data<pos:position pos:line="38" pos:column="17"/></name></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">user_data<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>

  <return pos:line="40" pos:column="3">return <expr><operator pos:line="40" pos:column="10">(<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">obj<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">)<pos:position pos:line="40" pos:column="15"/></operator></expr>;<pos:position pos:line="40" pos:column="16"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1721_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">clua_write<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><specifier pos:line="1" pos:column="23">const<pos:position pos:line="1" pos:column="28"/></specifier> <name pos:line="1" pos:column="29">data_set_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">ds<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">value_list_t<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="65">vl<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="69">/* {{{ */</comment>
                      <parameter><decl><type><name pos:line="2" pos:column="23">user_data_t<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">ud<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list> <block pos:line="2" pos:column="40">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">clua_callback_data_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">cb<pos:position pos:line="3" pos:column="27"/></name> <init pos:line="3" pos:column="28">= <expr><name><name pos:line="3" pos:column="30">ud<pos:position pos:line="3" pos:column="32"/></name><operator pos:line="3" pos:column="32">-&gt;<pos:position pos:line="3" pos:column="37"/></operator><name pos:line="3" pos:column="34">data<pos:position pos:line="3" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="39"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">pthread_mutex_lock<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">(<argument><expr><operator pos:line="5" pos:column="22">&amp;<pos:position pos:line="5" pos:column="27"/></operator><name><name pos:line="5" pos:column="23">cb<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">lock<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">lua_State<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">L<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><name><name pos:line="7" pos:column="18">cb<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">-&gt;<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="22">lua_state<pos:position pos:line="7" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><call><name pos:line="9" pos:column="16">clua_load_callback<pos:position pos:line="9" pos:column="34"/></name><argument_list pos:line="9" pos:column="34">(<argument><expr><name pos:line="9" pos:column="35">L<pos:position pos:line="9" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="38">cb<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">callback_id<pos:position pos:line="9" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">!=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"Lua plugin: Unable to load callback \"%s\" (id %i)."<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="12" pos:column="11">cb<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">lua_function_name<pos:position pos:line="12" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="34">cb<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">callback_id<pos:position pos:line="12" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">pthread_mutex_unlock<pos:position pos:line="13" pos:column="25"/></name><argument_list pos:line="13" pos:column="25">(<argument><expr><operator pos:line="13" pos:column="26">&amp;<pos:position pos:line="13" pos:column="31"/></operator><name><name pos:line="13" pos:column="27">cb<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">lock<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="16" pos:column="3">/* +1 = 1 */</comment>

  <expr_stmt><expr><name pos:line="18" pos:column="3">status<pos:position pos:line="18" pos:column="9"/></name> <operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator> <call><name pos:line="18" pos:column="12">luaC_pushvaluelist<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">L<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">ds<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">vl<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">status<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">!=<pos:position pos:line="19" pos:column="16"/></operator> <literal type="number" pos:line="19" pos:column="17">0<pos:position pos:line="19" pos:column="18"/></literal></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">lua_pop<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><name pos:line="20" pos:column="13">L<pos:position pos:line="20" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="16">1<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt> <comment type="block" pos:line="20" pos:column="20">/* -1 = 0 */</comment>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">pthread_mutex_unlock<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><operator pos:line="21" pos:column="26">&amp;<pos:position pos:line="21" pos:column="31"/></operator><name><name pos:line="21" pos:column="27">cb<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">-&gt;<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="31">lock<pos:position pos:line="21" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><literal type="string" pos:line="22" pos:column="11">"Lua plugin: luaC_pushvaluelist failed."<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><operator pos:line="23" pos:column="13">-<pos:position pos:line="23" pos:column="14"/></operator><literal type="number" pos:line="23" pos:column="14">1<pos:position pos:line="23" pos:column="15"/></literal><operator pos:line="23" pos:column="15">)<pos:position pos:line="23" pos:column="16"/></operator></expr>;<pos:position pos:line="23" pos:column="17"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="25" pos:column="3">/* +1 = 2 */</comment>

  <expr_stmt><expr><name pos:line="27" pos:column="3">status<pos:position pos:line="27" pos:column="9"/></name> <operator pos:line="27" pos:column="10">=<pos:position pos:line="27" pos:column="11"/></operator> <call><name pos:line="27" pos:column="12">lua_pcall<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">L<pos:position pos:line="27" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="25">1<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="28">1<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="31">0<pos:position pos:line="27" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt> <comment type="block" pos:line="27" pos:column="35">/* -2+1 = 1 */</comment>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">status<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">!=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>)<pos:position pos:line="28" pos:column="19"/></condition><then pos:line="28" pos:column="19"> <block pos:line="28" pos:column="20">{
    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">const<pos:position pos:line="29" pos:column="10"/></specifier> <name pos:line="29" pos:column="11">char<pos:position pos:line="29" pos:column="15"/></name> <modifier pos:line="29" pos:column="16">*<pos:position pos:line="29" pos:column="17"/></modifier></type><name pos:line="29" pos:column="17">errmsg<pos:position pos:line="29" pos:column="23"/></name> <init pos:line="29" pos:column="24">= <expr><call><name pos:line="29" pos:column="26">lua_tostring<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">L<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="42">-<pos:position pos:line="29" pos:column="43"/></operator><literal type="number" pos:line="29" pos:column="43">1<pos:position pos:line="29" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="46"/></decl_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">errmsg<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">==<pos:position pos:line="30" pos:column="18"/></operator> <name pos:line="30" pos:column="19">NULL<pos:position pos:line="30" pos:column="23"/></name></expr>)<pos:position pos:line="30" pos:column="24"/></condition><then pos:line="30" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">ERROR<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><literal type="string" pos:line="31" pos:column="13">"Lua plugin: Calling the write callback failed. "<pos:position pos:line="31" pos:column="62"/></literal>
            <literal type="string" pos:line="32" pos:column="13">"In addition, retrieving the error message failed."<pos:position pos:line="32" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt></block></then>
    <else pos:line="33" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">ERROR<pos:position pos:line="34" pos:column="12"/></name><argument_list pos:line="34" pos:column="12">(<argument><expr><literal type="string" pos:line="34" pos:column="13">"Lua plugin: Calling the write callback failed:\n%s"<pos:position pos:line="34" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="67">errmsg<pos:position pos:line="34" pos:column="73"/></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="75"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">lua_pop<pos:position pos:line="35" pos:column="12"/></name><argument_list pos:line="35" pos:column="12">(<argument><expr><name pos:line="35" pos:column="13">L<pos:position pos:line="35" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="16">1<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt> <comment type="block" pos:line="35" pos:column="20">/* -1 = 0 */</comment>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">pthread_mutex_unlock<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">&amp;<pos:position pos:line="36" pos:column="31"/></operator><name><name pos:line="36" pos:column="27">cb<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">lock<pos:position pos:line="36" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><operator pos:line="37" pos:column="12">(<pos:position pos:line="37" pos:column="13"/></operator><operator pos:line="37" pos:column="13">-<pos:position pos:line="37" pos:column="14"/></operator><literal type="number" pos:line="37" pos:column="14">1<pos:position pos:line="37" pos:column="15"/></literal><operator pos:line="37" pos:column="15">)<pos:position pos:line="37" pos:column="16"/></operator></expr>;<pos:position pos:line="37" pos:column="17"/></return>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><operator pos:line="40" pos:column="7">!<pos:position pos:line="40" pos:column="8"/></operator><call><name pos:line="40" pos:column="8">lua_isnumber<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">L<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="24">-<pos:position pos:line="40" pos:column="25"/></operator><literal type="number" pos:line="40" pos:column="25">1<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="28"/></condition><then pos:line="40" pos:column="28"> <block pos:line="40" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ERROR<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><literal type="string" pos:line="41" pos:column="11">"Lua plugin: Write function \"%s\" (id %i) did not return a numeric "<pos:position pos:line="41" pos:column="80"/></literal>
          <literal type="string" pos:line="42" pos:column="11">"value."<pos:position pos:line="42" pos:column="19"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="43" pos:column="11">cb<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">-&gt;<pos:position pos:line="43" pos:column="18"/></operator><name pos:line="43" pos:column="15">lua_function_name<pos:position pos:line="43" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="34">cb<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">-&gt;<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="38">callback_id<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">status<pos:position pos:line="44" pos:column="11"/></name> <operator pos:line="44" pos:column="12">=<pos:position pos:line="44" pos:column="13"/></operator> <operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then> <else pos:line="45" pos:column="5">else <block pos:line="45" pos:column="10">{
    <expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <operator pos:line="46" pos:column="14">(<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">int<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">)<pos:position pos:line="46" pos:column="19"/></operator><call><name pos:line="46" pos:column="19">lua_tointeger<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">L<pos:position pos:line="46" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="36">-<pos:position pos:line="46" pos:column="37"/></operator><literal type="number" pos:line="46" pos:column="37">1<pos:position pos:line="46" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="47" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="49" pos:column="3">lua_pop<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name pos:line="49" pos:column="11">L<pos:position pos:line="49" pos:column="12"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="14">1<pos:position pos:line="49" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="17"/></expr_stmt> <comment type="block" pos:line="49" pos:column="18">/* -1 = 0 */</comment>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">pthread_mutex_unlock<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name><name pos:line="50" pos:column="25">cb<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">-&gt;<pos:position pos:line="50" pos:column="32"/></operator><name pos:line="50" pos:column="29">lock<pos:position pos:line="50" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
  <return pos:line="51" pos:column="3">return <expr><operator pos:line="51" pos:column="10">(<pos:position pos:line="51" pos:column="11"/></operator><name pos:line="51" pos:column="11">status<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">)<pos:position pos:line="51" pos:column="18"/></operator></expr>;<pos:position pos:line="51" pos:column="19"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

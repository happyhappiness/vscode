<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2186_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">network_send_buffer_encrypted<pos:position pos:line="1" pos:column="42"/></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name pos:line="1" pos:column="43">sockent_t<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">se<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="58">/* {{{ */</comment>
                                          <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">in_buffer<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
                                          <parameter><decl><type><name pos:line="3" pos:column="43">size_t<pos:position pos:line="3" pos:column="49"/></name></type> <name pos:line="3" pos:column="50">in_buffer_size<pos:position pos:line="3" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="65"/></parameter_list> <block pos:line="3" pos:column="66">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">buffer<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><name pos:line="4" pos:column="15">BUFF_SIG_SIZE<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">+<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="31">in_buffer_size<pos:position pos:line="4" pos:column="45"/></name></expr>]<pos:position pos:line="4" pos:column="46"/></index></name></decl>;<pos:position pos:line="4" pos:column="47"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">buffer_size<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">buffer_offset<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">header_size<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">username_len<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">gcry_error_t<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">err<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">gcry_cipher_hd_t<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">cypher<pos:position pos:line="10" pos:column="26"/></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Initialize the header fields */</comment>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">part_encryption_aes256_t<pos:position pos:line="13" pos:column="27"/></name></type> <name pos:line="13" pos:column="28">pea<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><block pos:line="13" pos:column="34">{<expr><operator pos:line="13" pos:column="35">.<pos:position pos:line="13" pos:column="36"/></operator><name><name pos:line="13" pos:column="36">head<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">type<pos:position pos:line="13" pos:column="45"/></name></name> <operator pos:line="13" pos:column="46">=<pos:position pos:line="13" pos:column="47"/></operator> <call><name pos:line="13" pos:column="48">htons<pos:position pos:line="13" pos:column="53"/></name><argument_list pos:line="13" pos:column="53">(<argument><expr><name pos:line="13" pos:column="54">TYPE_ENCR_AES256<pos:position pos:line="13" pos:column="70"/></name></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>,
                                  <expr><operator pos:line="14" pos:column="35">.<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">username<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">=<pos:position pos:line="14" pos:column="46"/></operator> <name><name pos:line="14" pos:column="47">se<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">-&gt;<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="51">data<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">.<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">client<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">.<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">username<pos:position pos:line="14" pos:column="71"/></name></name></expr>}<pos:position pos:line="14" pos:column="72"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="73"/></decl_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">username_len<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">strlen<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name><name pos:line="16" pos:column="25">pea<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">username<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">(<pos:position pos:line="17" pos:column="8"/></operator><name pos:line="17" pos:column="8">PART_ENCRYPTION_AES256_SIZE<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">+<pos:position pos:line="17" pos:column="37"/></operator> <name pos:line="17" pos:column="38">username_len<pos:position pos:line="17" pos:column="50"/></name><operator pos:line="17" pos:column="50">)<pos:position pos:line="17" pos:column="51"/></operator> <operator pos:line="17" pos:column="52">&gt;<pos:position pos:line="17" pos:column="56"/></operator> <name pos:line="17" pos:column="54">BUFF_SIG_SIZE<pos:position pos:line="17" pos:column="67"/></name></expr>)<pos:position pos:line="17" pos:column="68"/></condition><then pos:line="17" pos:column="68"> <block pos:line="17" pos:column="69">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name><argument_list pos:line="18" pos:column="10">(<argument><expr><literal type="string" pos:line="18" pos:column="11">"network plugin: Username too long: %s"<pos:position pos:line="18" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="52">pea<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">.<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">username<pos:position pos:line="18" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="66"/></expr_stmt>
    <return pos:line="19" pos:column="5">return;<pos:position pos:line="19" pos:column="12"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="22" pos:column="3">buffer_size<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">PART_ENCRYPTION_AES256_SIZE<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">+<pos:position pos:line="22" pos:column="46"/></operator> <name pos:line="22" pos:column="47">username_len<pos:position pos:line="22" pos:column="59"/></name> <operator pos:line="22" pos:column="60">+<pos:position pos:line="22" pos:column="61"/></operator> <name pos:line="22" pos:column="62">in_buffer_size<pos:position pos:line="22" pos:column="76"/></name></expr>;<pos:position pos:line="22" pos:column="77"/></expr_stmt>
  <expr_stmt><expr><name pos:line="23" pos:column="3">header_size<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">PART_ENCRYPTION_AES256_SIZE<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">+<pos:position pos:line="23" pos:column="46"/></operator> <name pos:line="23" pos:column="47">username_len<pos:position pos:line="23" pos:column="59"/></name> <operator pos:line="23" pos:column="60">-<pos:position pos:line="23" pos:column="61"/></operator> <sizeof pos:line="23" pos:column="62">sizeof<argument_list pos:line="23" pos:column="68">(<argument><expr><name><name pos:line="23" pos:column="69">pea<pos:position pos:line="23" pos:column="72"/></name><operator pos:line="23" pos:column="72">.<pos:position pos:line="23" pos:column="73"/></operator><name pos:line="23" pos:column="73">hash<pos:position pos:line="23" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></sizeof></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">assert<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">buffer_size<pos:position pos:line="25" pos:column="21"/></name> <operator pos:line="25" pos:column="22">&lt;=<pos:position pos:line="25" pos:column="27"/></operator> <sizeof pos:line="25" pos:column="25">sizeof<argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">buffer<pos:position pos:line="25" pos:column="38"/></name></expr></argument>)<pos:position pos:line="25" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">DEBUG<pos:position pos:line="26" pos:column="8"/></name><argument_list pos:line="26" pos:column="8">(<argument><expr><literal type="string" pos:line="26" pos:column="9">"network plugin: network_send_buffer_encrypted: "<pos:position pos:line="26" pos:column="58"/></literal>
        <literal type="string" pos:line="27" pos:column="9">"buffer_size = %zu;"<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>,
        <argument><expr><name pos:line="28" pos:column="9">buffer_size<pos:position pos:line="28" pos:column="20"/></name></expr></argument>)<pos:position pos:line="28" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="30" pos:column="3">pea<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">.<pos:position pos:line="30" pos:column="7"/></operator><name pos:line="30" pos:column="7">head<pos:position pos:line="30" pos:column="11"/></name><operator pos:line="30" pos:column="11">.<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="12">length<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <call><name pos:line="30" pos:column="21">htons<pos:position pos:line="30" pos:column="26"/></name><argument_list pos:line="30" pos:column="26">(
      <argument><expr><call pos:line="31" pos:column="7">(<name pos:line="31" pos:column="8">uint16_t<pos:position pos:line="31" pos:column="16"/></name>)<argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">PART_ENCRYPTION_AES256_SIZE<pos:position pos:line="31" pos:column="45"/></name> <operator pos:line="31" pos:column="46">+<pos:position pos:line="31" pos:column="47"/></operator> <name pos:line="31" pos:column="48">username_len<pos:position pos:line="31" pos:column="60"/></name> <operator pos:line="31" pos:column="61">+<pos:position pos:line="31" pos:column="62"/></operator> <name pos:line="31" pos:column="63">in_buffer_size<pos:position pos:line="31" pos:column="77"/></name></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="32" pos:column="3">pea<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">.<pos:position pos:line="32" pos:column="7"/></operator><name pos:line="32" pos:column="7">username_length<pos:position pos:line="32" pos:column="22"/></name></name> <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <call><name pos:line="32" pos:column="25">htons<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">(<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">uint16_t<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">)<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">username_len<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>

  <comment type="block" pos:line="34" pos:column="3">/* Chose a random initialization vector. */</comment>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">gcry_randomize<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">(<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">void<pos:position pos:line="35" pos:column="23"/></name> <operator pos:line="35" pos:column="24">*<pos:position pos:line="35" pos:column="25"/></operator><operator pos:line="35" pos:column="25">)<pos:position pos:line="35" pos:column="26"/></operator><operator pos:line="35" pos:column="26">&amp;<pos:position pos:line="35" pos:column="31"/></operator><name><name pos:line="35" pos:column="27">pea<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">.<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="31">iv<pos:position pos:line="35" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="35">sizeof<argument_list pos:line="35" pos:column="41">(<argument><expr><name><name pos:line="35" pos:column="42">pea<pos:position pos:line="35" pos:column="45"/></name><operator pos:line="35" pos:column="45">.<pos:position pos:line="35" pos:column="46"/></operator><name pos:line="35" pos:column="46">iv<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="35" pos:column="51">GCRY_STRONG_RANDOM<pos:position pos:line="35" pos:column="69"/></name></expr></argument>)<pos:position pos:line="35" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="71"/></expr_stmt>

  <comment type="block" pos:line="37" pos:column="3">/* Create hash of the payload */</comment>
  <expr_stmt><expr><call><name pos:line="38" pos:column="3">gcry_md_hash_buffer<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name pos:line="38" pos:column="23">GCRY_MD_SHA1<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="37">pea<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">.<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="41">hash<pos:position pos:line="38" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="47">in_buffer<pos:position pos:line="38" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="58">in_buffer_size<pos:position pos:line="38" pos:column="72"/></name></expr></argument>)<pos:position pos:line="38" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="74"/></expr_stmt>

  <comment type="block" pos:line="40" pos:column="3">/* Initialize the buffer */</comment>
  <expr_stmt><expr><name pos:line="41" pos:column="3">buffer_offset<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <literal type="number" pos:line="41" pos:column="19">0<pos:position pos:line="41" pos:column="20"/></literal></expr>;<pos:position pos:line="41" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">memset<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">(<argument><expr><name pos:line="42" pos:column="10">buffer<pos:position pos:line="42" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="18">0<pos:position pos:line="42" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="21">sizeof<argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">buffer<pos:position pos:line="42" pos:column="34"/></name></expr></argument>)<pos:position pos:line="42" pos:column="35"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">BUFFER_ADD<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><operator pos:line="44" pos:column="14">&amp;<pos:position pos:line="44" pos:column="19"/></operator><name><name pos:line="44" pos:column="15">pea<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">.<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">head<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">type<pos:position pos:line="44" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="30">sizeof<argument_list pos:line="44" pos:column="36">(<argument><expr><name><name pos:line="44" pos:column="37">pea<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">.<pos:position pos:line="44" pos:column="41"/></operator><name pos:line="44" pos:column="41">head<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">.<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">type<pos:position pos:line="44" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">BUFFER_ADD<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><operator pos:line="45" pos:column="14">&amp;<pos:position pos:line="45" pos:column="19"/></operator><name><name pos:line="45" pos:column="15">pea<pos:position pos:line="45" pos:column="18"/></name><operator pos:line="45" pos:column="18">.<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="19">head<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">length<pos:position pos:line="45" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="32">sizeof<argument_list pos:line="45" pos:column="38">(<argument><expr><name><name pos:line="45" pos:column="39">pea<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">.<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="43">head<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">.<pos:position pos:line="45" pos:column="48"/></operator><name pos:line="45" pos:column="48">length<pos:position pos:line="45" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">BUFFER_ADD<pos:position pos:line="46" pos:column="13"/></name><argument_list pos:line="46" pos:column="13">(<argument><expr><operator pos:line="46" pos:column="14">&amp;<pos:position pos:line="46" pos:column="19"/></operator><name><name pos:line="46" pos:column="15">pea<pos:position pos:line="46" pos:column="18"/></name><operator pos:line="46" pos:column="18">.<pos:position pos:line="46" pos:column="19"/></operator><name pos:line="46" pos:column="19">username_length<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="36">sizeof<argument_list pos:line="46" pos:column="42">(<argument><expr><name><name pos:line="46" pos:column="43">pea<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">.<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="47">username_length<pos:position pos:line="46" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="47" pos:column="3">BUFFER_ADD<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name><name pos:line="47" pos:column="14">pea<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">.<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">username<pos:position pos:line="47" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="28">username_len<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="48" pos:column="3">BUFFER_ADD<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">(<argument><expr><name><name pos:line="48" pos:column="14">pea<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">.<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">iv<pos:position pos:line="48" pos:column="20"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="22">sizeof<argument_list pos:line="48" pos:column="28">(<argument><expr><name><name pos:line="48" pos:column="29">pea<pos:position pos:line="48" pos:column="32"/></name><operator pos:line="48" pos:column="32">.<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="33">iv<pos:position pos:line="48" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="49" pos:column="3">assert<pos:position pos:line="49" pos:column="9"/></name><argument_list pos:line="49" pos:column="9">(<argument><expr><name pos:line="49" pos:column="10">buffer_offset<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">==<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">header_size<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="50" pos:column="3">BUFFER_ADD<pos:position pos:line="50" pos:column="13"/></name><argument_list pos:line="50" pos:column="13">(<argument><expr><name><name pos:line="50" pos:column="14">pea<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">hash<pos:position pos:line="50" pos:column="22"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="24">sizeof<argument_list pos:line="50" pos:column="30">(<argument><expr><name><name pos:line="50" pos:column="31">pea<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">.<pos:position pos:line="50" pos:column="35"/></operator><name pos:line="50" pos:column="35">hash<pos:position pos:line="50" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">BUFFER_ADD<pos:position pos:line="51" pos:column="13"/></name><argument_list pos:line="51" pos:column="13">(<argument><expr><name pos:line="51" pos:column="14">in_buffer<pos:position pos:line="51" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="25">in_buffer_size<pos:position pos:line="51" pos:column="39"/></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">assert<pos:position pos:line="53" pos:column="9"/></name><argument_list pos:line="53" pos:column="9">(<argument><expr><name pos:line="53" pos:column="10">buffer_offset<pos:position pos:line="53" pos:column="23"/></name> <operator pos:line="53" pos:column="24">==<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">buffer_size<pos:position pos:line="53" pos:column="38"/></name></expr></argument>)<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>

  <expr_stmt><expr><name pos:line="55" pos:column="3">cypher<pos:position pos:line="55" pos:column="9"/></name> <operator pos:line="55" pos:column="10">=<pos:position pos:line="55" pos:column="11"/></operator> <call><name pos:line="55" pos:column="12">network_get_aes256_cypher<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">(<argument><expr><name pos:line="55" pos:column="38">se<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="42">pea<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">.<pos:position pos:line="55" pos:column="46"/></operator><name pos:line="55" pos:column="46">iv<pos:position pos:line="55" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="50">sizeof<argument_list pos:line="55" pos:column="56">(<argument><expr><name><name pos:line="55" pos:column="57">pea<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">.<pos:position pos:line="55" pos:column="61"/></operator><name pos:line="55" pos:column="61">iv<pos:position pos:line="55" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="64"/></argument_list></sizeof></expr></argument>,
                                     <argument><expr><name><name pos:line="56" pos:column="38">se<pos:position pos:line="56" pos:column="40"/></name><operator pos:line="56" pos:column="40">-&gt;<pos:position pos:line="56" pos:column="45"/></operator><name pos:line="56" pos:column="42">data<pos:position pos:line="56" pos:column="46"/></name><operator pos:line="56" pos:column="46">.<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="47">client<pos:position pos:line="56" pos:column="53"/></name><operator pos:line="56" pos:column="53">.<pos:position pos:line="56" pos:column="54"/></operator><name pos:line="56" pos:column="54">password<pos:position pos:line="56" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="64"/></expr_stmt>
  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name pos:line="57" pos:column="7">cypher<pos:position pos:line="57" pos:column="13"/></name> <operator pos:line="57" pos:column="14">==<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">NULL<pos:position pos:line="57" pos:column="21"/></name></expr>)<pos:position pos:line="57" pos:column="22"/></condition><then pos:line="57" pos:column="22">
    <block type="pseudo"><return pos:line="58" pos:column="5">return;<pos:position pos:line="58" pos:column="12"/></return></block></then></if>

  <comment type="block" pos:line="60" pos:column="3">/* Encrypt the buffer in-place */</comment>
  <expr_stmt><expr><name pos:line="61" pos:column="3">err<pos:position pos:line="61" pos:column="6"/></name> <operator pos:line="61" pos:column="7">=<pos:position pos:line="61" pos:column="8"/></operator> <call><name pos:line="61" pos:column="9">gcry_cipher_encrypt<pos:position pos:line="61" pos:column="28"/></name><argument_list pos:line="61" pos:column="28">(<argument><expr><name pos:line="61" pos:column="29">cypher<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">buffer<pos:position pos:line="61" pos:column="43"/></name> <operator pos:line="61" pos:column="44">+<pos:position pos:line="61" pos:column="45"/></operator> <name pos:line="61" pos:column="46">header_size<pos:position pos:line="61" pos:column="57"/></name></expr></argument>,
                            <argument><expr><name pos:line="62" pos:column="29">buffer_size<pos:position pos:line="62" pos:column="40"/></name> <operator pos:line="62" pos:column="41">-<pos:position pos:line="62" pos:column="42"/></operator> <name pos:line="62" pos:column="43">header_size<pos:position pos:line="62" pos:column="54"/></name></expr></argument>,
                            <comment type="block" pos:line="63" pos:column="29">/* in = */</comment> <argument><expr><name pos:line="63" pos:column="40">NULL<pos:position pos:line="63" pos:column="44"/></name></expr></argument>, <comment type="block" pos:line="63" pos:column="46">/* in len = */</comment> <argument><expr><literal type="number" pos:line="63" pos:column="61">0<pos:position pos:line="63" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="64"/></expr_stmt>
  <if pos:line="64" pos:column="3">if <condition pos:line="64" pos:column="6">(<expr><name pos:line="64" pos:column="7">err<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">!=<pos:position pos:line="64" pos:column="13"/></operator> <literal type="number" pos:line="64" pos:column="14">0<pos:position pos:line="64" pos:column="15"/></literal></expr>)<pos:position pos:line="64" pos:column="16"/></condition><then pos:line="64" pos:column="16"> <block pos:line="64" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ERROR<pos:position pos:line="65" pos:column="10"/></name><argument_list pos:line="65" pos:column="10">(<argument><expr><literal type="string" pos:line="65" pos:column="11">"network plugin: gcry_cipher_encrypt returned: %s"<pos:position pos:line="65" pos:column="61"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="66" pos:column="11">gcry_strerror<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">err<pos:position pos:line="66" pos:column="28"/></name></expr></argument>)<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="66" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
    <return pos:line="67" pos:column="5">return;<pos:position pos:line="67" pos:column="12"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="70" pos:column="3">/* Send it out without further modifications */</comment>
  <expr_stmt><expr><call><name pos:line="71" pos:column="3">network_send_buffer_plain<pos:position pos:line="71" pos:column="28"/></name><argument_list pos:line="71" pos:column="28">(<argument><expr><name pos:line="71" pos:column="29">se<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="33">buffer<pos:position pos:line="71" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="41">buffer_size<pos:position pos:line="71" pos:column="52"/></name></expr></argument>)<pos:position pos:line="71" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="54"/></expr_stmt>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

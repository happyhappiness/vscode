<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1754_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cipvs_submit_if<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">pi<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="40">char<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">t<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="49">char<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ti<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">derive_t<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">rx<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">derive_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">tx<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_t<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">values<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">2<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">value_list_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">vl<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="7" pos:column="9">values<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>]<pos:position pos:line="7" pos:column="18"/></index></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">derive<pos:position pos:line="7" pos:column="25"/></name> <operator pos:line="7" pos:column="26">=<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">rx<pos:position pos:line="7" pos:column="30"/></name></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="8" pos:column="9">values<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>]<pos:position pos:line="8" pos:column="18"/></index></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">derive<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">=<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">tx<pos:position pos:line="8" pos:column="30"/></name></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="10" pos:column="9">vl<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">values<pos:position pos:line="10" pos:column="18"/></name></name>     <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">values<pos:position pos:line="10" pos:column="31"/></name></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="11" pos:column="9">vl<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">values_len<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">=<pos:position pos:line="11" pos:column="24"/></operator> <literal type="number" pos:line="11" pos:column="25">2<pos:position pos:line="11" pos:column="26"/></literal></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="13" pos:column="9">sstrncpy<pos:position pos:line="13" pos:column="17"/></name> <argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">vl<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">host<pos:position pos:line="13" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">hostname_g<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="40">sizeof <argument_list pos:line="13" pos:column="47">(<argument><expr><name><name pos:line="13" pos:column="48">vl<pos:position pos:line="13" pos:column="50"/></name><operator pos:line="13" pos:column="50">.<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="51">host<pos:position pos:line="13" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">sstrncpy<pos:position pos:line="14" pos:column="17"/></name> <argument_list pos:line="14" pos:column="18">(<argument><expr><name><name pos:line="14" pos:column="19">vl<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">plugin<pos:position pos:line="14" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"ipvs"<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="38">sizeof <argument_list pos:line="14" pos:column="45">(<argument><expr><name><name pos:line="14" pos:column="46">vl<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">.<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">plugin<pos:position pos:line="14" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">sstrncpy<pos:position pos:line="15" pos:column="17"/></name> <argument_list pos:line="15" pos:column="18">(<argument><expr><name><name pos:line="15" pos:column="19">vl<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">plugin_instance<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">pi<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="43">sizeof <argument_list pos:line="15" pos:column="50">(<argument><expr><name><name pos:line="15" pos:column="51">vl<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">.<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">plugin_instance<pos:position pos:line="15" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">sstrncpy<pos:position pos:line="16" pos:column="17"/></name> <argument_list pos:line="16" pos:column="18">(<argument><expr><name><name pos:line="16" pos:column="19">vl<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">type<pos:position pos:line="16" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">t<pos:position pos:line="16" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="31">sizeof <argument_list pos:line="16" pos:column="38">(<argument><expr><name><name pos:line="16" pos:column="39">vl<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">.<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">type<pos:position pos:line="16" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="17" pos:column="9">sstrncpy<pos:position pos:line="17" pos:column="17"/></name> <argument_list pos:line="17" pos:column="18">(<argument><expr><name><name pos:line="17" pos:column="19">vl<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">type_instance<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="17" pos:column="37">(<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">NULL<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">!=<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">ti<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">)<pos:position pos:line="17" pos:column="49"/></operator></expr> ?<pos:position pos:line="17" pos:column="51"/></condition><then pos:line="17" pos:column="51"> <expr><name pos:line="17" pos:column="52">ti<pos:position pos:line="17" pos:column="54"/></name></expr> <pos:position pos:line="17" pos:column="55"/></then><else pos:line="17" pos:column="55">: <expr><literal type="string" pos:line="17" pos:column="57">"total"<pos:position pos:line="17" pos:column="64"/></literal></expr></else></ternary></expr></argument>,
		<argument><expr><sizeof pos:line="18" pos:column="17">sizeof <argument_list pos:line="18" pos:column="24">(<argument><expr><name><name pos:line="18" pos:column="25">vl<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">type_instance<pos:position pos:line="18" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">plugin_dispatch_values<pos:position pos:line="20" pos:column="31"/></name> <argument_list pos:line="20" pos:column="32">(<argument><expr><operator pos:line="20" pos:column="33">&amp;<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="34">vl<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
	<return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

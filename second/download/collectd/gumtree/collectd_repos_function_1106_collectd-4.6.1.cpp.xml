<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1106_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">users_read<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_GETUTXENT<pos:position pos:line="3" pos:column="19"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">users<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">utmpx<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">entry<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">NULL<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* according to the *utent(3) man page none of the functions sets errno
	   in case of an error, so we cannot do any error-checking here */</comment>
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">setutxent<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">()<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>

	<while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">!=<pos:position pos:line="11" pos:column="23"/></operator> <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">entry<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <call><name pos:line="11" pos:column="33">getutxent<pos:position pos:line="11" pos:column="42"/></name><argument_list pos:line="11" pos:column="42">()<pos:position pos:line="11" pos:column="44"/></argument_list></call><operator pos:line="11" pos:column="44">)<pos:position pos:line="11" pos:column="45"/></operator></expr>)<pos:position pos:line="11" pos:column="46"/></condition> <block pos:line="11" pos:column="47">{
		<if pos:line="12" pos:column="17">if <condition pos:line="12" pos:column="20">(<expr><name pos:line="12" pos:column="21">USER_PROCESS<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator> <name><name pos:line="12" pos:column="37">entry<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">ut_type<pos:position pos:line="12" pos:column="51"/></name></name></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52"> <block pos:line="12" pos:column="53">{
			<expr_stmt><expr><operator pos:line="13" pos:column="25">++<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">users<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="14" pos:column="18"/></block></then></if>
	}<pos:position pos:line="15" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="16" pos:column="9">endutxent<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">()<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">users_submit<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">users<pos:position pos:line="18" pos:column="28"/></name></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
<comment type="block" pos:line="19" pos:column="1">/* #endif HAVE_GETUTXENT */</comment>
	
<cpp:elif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">elif<pos:position pos:line="21" pos:column="6"/></cpp:directive> <expr><name pos:line="21" pos:column="7">HAVE_GETUTENT<pos:position pos:line="21" pos:column="20"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">unsigned<pos:position pos:line="22" pos:column="17"/></name> <name pos:line="22" pos:column="18">int<pos:position pos:line="22" pos:column="21"/></name></type> <name pos:line="22" pos:column="22">users<pos:position pos:line="22" pos:column="27"/></name> <init pos:line="22" pos:column="28">= <expr><literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="23" pos:column="9">struct<pos:position pos:line="23" pos:column="15"/></name> <name pos:line="23" pos:column="16">utmp<pos:position pos:line="23" pos:column="20"/></name></name> <modifier pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></modifier></type><name pos:line="23" pos:column="22">entry<pos:position pos:line="23" pos:column="27"/></name> <init pos:line="23" pos:column="28">= <expr><name pos:line="23" pos:column="30">NULL<pos:position pos:line="23" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="35"/></decl_stmt>

	<comment type="block" pos:line="25" pos:column="9">/* according to the *utent(3) man page none of the functions sets errno
	   in case of an error, so we cannot do any error-checking here */</comment>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">setutent<pos:position pos:line="27" pos:column="17"/></name><argument_list pos:line="27" pos:column="17">()<pos:position pos:line="27" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt>

	<while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><name pos:line="29" pos:column="16">NULL<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">!=<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">entry<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">=<pos:position pos:line="29" pos:column="32"/></operator> <call><name pos:line="29" pos:column="33">getutent<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">()<pos:position pos:line="29" pos:column="43"/></argument_list></call><operator pos:line="29" pos:column="43">)<pos:position pos:line="29" pos:column="44"/></operator></expr>)<pos:position pos:line="29" pos:column="45"/></condition> <block pos:line="29" pos:column="46">{
		<if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name pos:line="30" pos:column="21">USER_PROCESS<pos:position pos:line="30" pos:column="33"/></name> <operator pos:line="30" pos:column="34">==<pos:position pos:line="30" pos:column="36"/></operator> <name><name pos:line="30" pos:column="37">entry<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">ut_type<pos:position pos:line="30" pos:column="51"/></name></name></expr>)<pos:position pos:line="30" pos:column="52"/></condition><then pos:line="30" pos:column="52"> <block pos:line="30" pos:column="53">{
			<expr_stmt><expr><operator pos:line="31" pos:column="25">++<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">users<pos:position pos:line="31" pos:column="32"/></name></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if>
	}<pos:position pos:line="33" pos:column="10"/></block></while>
	<expr_stmt><expr><call><name pos:line="34" pos:column="9">endutent<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">()<pos:position pos:line="34" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="36" pos:column="9">users_submit<pos:position pos:line="36" pos:column="21"/></name> <argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">users<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>
<comment type="block" pos:line="37" pos:column="1">/* #endif HAVE_GETUTENT */</comment>

<cpp:elif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">elif<pos:position pos:line="39" pos:column="6"/></cpp:directive> <expr><name pos:line="39" pos:column="7">HAVE_LIBSTATGRAB<pos:position pos:line="39" pos:column="23"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">sg_user_stats<pos:position pos:line="40" pos:column="22"/></name> <modifier pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></modifier></type><name pos:line="40" pos:column="24">us<pos:position pos:line="40" pos:column="26"/></name></decl>;<pos:position pos:line="40" pos:column="27"/></decl_stmt>

	<expr_stmt><expr><name pos:line="42" pos:column="9">us<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <call><name pos:line="42" pos:column="14">sg_get_user_stats<pos:position pos:line="42" pos:column="31"/></name> <argument_list pos:line="42" pos:column="32">()<pos:position pos:line="42" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="35"/></expr_stmt>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">us<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">==<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">NULL<pos:position pos:line="43" pos:column="23"/></name></expr>)<pos:position pos:line="43" pos:column="24"/></condition><then pos:line="43" pos:column="24">
		<block type="pseudo"><return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><operator pos:line="44" pos:column="25">-<pos:position pos:line="44" pos:column="26"/></operator><literal type="number" pos:line="44" pos:column="26">1<pos:position pos:line="44" pos:column="27"/></literal><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return></block></then></if>   

	<expr_stmt><expr><call><name pos:line="46" pos:column="9">users_submit<pos:position pos:line="46" pos:column="21"/></name> <argument_list pos:line="46" pos:column="22">(<argument><expr><operator pos:line="46" pos:column="23">(<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="24">gauge_t<pos:position pos:line="46" pos:column="31"/></name><operator pos:line="46" pos:column="31">)<pos:position pos:line="46" pos:column="32"/></operator> <name><name pos:line="46" pos:column="33">us<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">num_entries<pos:position pos:line="46" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>
<comment type="block" pos:line="47" pos:column="1">/* #endif HAVE_LIBSTATGRAB */</comment>

<cpp:else pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">else<pos:position pos:line="49" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="50" pos:column="1"># <cpp:directive pos:line="50" pos:column="3">error<pos:position pos:line="50" pos:column="8"/></cpp:directive> <cpp:literal pos:line="50" pos:column="9">"No applicable input method."<pos:position pos:line="50" pos:column="38"/></cpp:literal></cpp:error>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>

	<return pos:line="53" pos:column="9">return <expr><operator pos:line="53" pos:column="16">(<pos:position pos:line="53" pos:column="17"/></operator><literal type="number" pos:line="53" pos:column="17">0<pos:position pos:line="53" pos:column="18"/></literal><operator pos:line="53" pos:column="18">)<pos:position pos:line="53" pos:column="19"/></operator></expr>;<pos:position pos:line="53" pos:column="20"/></return>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

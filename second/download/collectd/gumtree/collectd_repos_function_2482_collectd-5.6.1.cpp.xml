<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2482_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_loadplugin<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">oconfig_item_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ci<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">char<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">name<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">flags<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">plugin_ctx_t<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">ctx<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><block pos:line="5" pos:column="28">{ <expr><literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal></expr> }<pos:position pos:line="5" pos:column="33"/></block></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">plugin_ctx_t<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">old_ctx<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">ret_val<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name> <argument_list pos:line="9" pos:column="16">(<argument><expr><call><name pos:line="9" pos:column="17">strcasecmp<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><name><name pos:line="9" pos:column="29">ci<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">key<pos:position pos:line="9" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"LoadPlugin"<pos:position pos:line="9" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call> <operator pos:line="9" pos:column="52">==<pos:position pos:line="9" pos:column="54"/></operator> <literal type="number" pos:line="9" pos:column="55">0<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt>

	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">ci<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">values_num<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">!=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name><name pos:line="13" pos:column="13">ci<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">values<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>]<pos:position pos:line="13" pos:column="26"/></index></name><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">type<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">!=<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">OCONFIG_TYPE_STRING<pos:position pos:line="13" pos:column="54"/></name></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55">
		<block type="pseudo"><return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="16" pos:column="9">name<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">ci<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">values<pos:position pos:line="16" pos:column="26"/></name><index pos:line="16" pos:column="26">[<expr><literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr>]<pos:position pos:line="16" pos:column="29"/></index></name><operator pos:line="16" pos:column="29">.<pos:position pos:line="16" pos:column="30"/></operator><name><name pos:line="16" pos:column="30">value<pos:position pos:line="16" pos:column="35"/></name><operator pos:line="16" pos:column="35">.<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">string<pos:position pos:line="16" pos:column="42"/></name></name></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">strcmp<pos:position pos:line="17" pos:column="19"/></name> <argument_list pos:line="17" pos:column="20">(<argument><expr><literal type="string" pos:line="17" pos:column="21">"libvirt"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">name<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call> <operator pos:line="17" pos:column="38">==<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">0<pos:position pos:line="17" pos:column="42"/></literal></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
		<block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">name<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="string" pos:line="18" pos:column="24">"virt"<pos:position pos:line="18" pos:column="30"/></literal></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt></block></then></if>

	<comment type="block" pos:line="20" pos:column="9">/* default to the global interval set before loading this plugin */</comment>
	<expr_stmt><expr><name><name pos:line="21" pos:column="9">ctx<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">.<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">interval<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <call><name pos:line="21" pos:column="24">cf_get_default_interval<pos:position pos:line="21" pos:column="47"/></name> <argument_list pos:line="21" pos:column="48">()<pos:position pos:line="21" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="22" pos:column="9">ctx<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">flush_interval<pos:position pos:line="22" pos:column="27"/></name></name> <operator pos:line="22" pos:column="28">=<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">0<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">ctx<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">flush_timeout<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <literal type="number" pos:line="23" pos:column="29">0<pos:position pos:line="23" pos:column="30"/></literal></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>

	<for pos:line="25" pos:column="9">for <control pos:line="25" pos:column="13">(<init><decl><type><name pos:line="25" pos:column="14">int<pos:position pos:line="25" pos:column="17"/></name></type> <name pos:line="25" pos:column="18">i<pos:position pos:line="25" pos:column="19"/></name> <init pos:line="25" pos:column="20">= <expr><literal type="number" pos:line="25" pos:column="22">0<pos:position pos:line="25" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="24"/></init> <condition><expr><name pos:line="25" pos:column="25">i<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&lt;<pos:position pos:line="25" pos:column="31"/></operator> <name><name pos:line="25" pos:column="29">ci<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">children_num<pos:position pos:line="25" pos:column="45"/></name></name></expr>;<pos:position pos:line="25" pos:column="46"/></condition> <incr><expr><operator pos:line="25" pos:column="47">++<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="49">i<pos:position pos:line="25" pos:column="50"/></name></expr></incr>)<pos:position pos:line="25" pos:column="51"/></control>
	<block pos:line="26" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="27" pos:column="17">oconfig_item_t<pos:position pos:line="27" pos:column="31"/></name> <modifier pos:line="27" pos:column="32">*<pos:position pos:line="27" pos:column="33"/></modifier></type><name pos:line="27" pos:column="33">child<pos:position pos:line="27" pos:column="38"/></name> <init pos:line="27" pos:column="39">= <expr><name><name pos:line="27" pos:column="41">ci<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">children<pos:position pos:line="27" pos:column="53"/></name></name> <operator pos:line="27" pos:column="54">+<pos:position pos:line="27" pos:column="55"/></operator> <name pos:line="27" pos:column="56">i<pos:position pos:line="27" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="58"/></decl_stmt>

		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">strcasecmp<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><literal type="string" pos:line="29" pos:column="32">"Globals"<pos:position pos:line="29" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="43">child<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">key<pos:position pos:line="29" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="54"/></argument_list></call> <operator pos:line="29" pos:column="55">==<pos:position pos:line="29" pos:column="57"/></operator> <literal type="number" pos:line="29" pos:column="58">0<pos:position pos:line="29" pos:column="59"/></literal></expr>)<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="25">cf_util_get_flag<pos:position pos:line="30" pos:column="41"/></name> <argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">child<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="50">&amp;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="51">flags<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">PLUGIN_FLAGS_GLOBAL<pos:position pos:line="30" pos:column="77"/></name></expr></argument>)<pos:position pos:line="30" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt></block></then>
		<elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><call><name pos:line="31" pos:column="26">strcasecmp<pos:position pos:line="31" pos:column="36"/></name> <argument_list pos:line="31" pos:column="37">(<argument><expr><literal type="string" pos:line="31" pos:column="38">"Interval"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="50">child<pos:position pos:line="31" pos:column="55"/></name><operator pos:line="31" pos:column="55">-&gt;<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="57">key<pos:position pos:line="31" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call> <operator pos:line="31" pos:column="62">==<pos:position pos:line="31" pos:column="64"/></operator> <literal type="number" pos:line="31" pos:column="65">0<pos:position pos:line="31" pos:column="66"/></literal></expr>)<pos:position pos:line="31" pos:column="67"/></condition><then pos:line="31" pos:column="67">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="25">cf_util_get_cdtime<pos:position pos:line="32" pos:column="43"/></name> <argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">child<pos:position pos:line="32" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="52">&amp;<pos:position pos:line="32" pos:column="57"/></operator><name><name pos:line="32" pos:column="53">ctx<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">.<pos:position pos:line="32" pos:column="57"/></operator><name pos:line="32" pos:column="57">interval<pos:position pos:line="32" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="33" pos:column="17">else <if pos:line="33" pos:column="22">if <condition pos:line="33" pos:column="25">(<expr><call><name pos:line="33" pos:column="26">strcasecmp<pos:position pos:line="33" pos:column="36"/></name> <argument_list pos:line="33" pos:column="37">(<argument><expr><literal type="string" pos:line="33" pos:column="38">"FlushInterval"<pos:position pos:line="33" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="55">child<pos:position pos:line="33" pos:column="60"/></name><operator pos:line="33" pos:column="60">-&gt;<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="62">key<pos:position pos:line="33" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="66"/></argument_list></call> <operator pos:line="33" pos:column="67">==<pos:position pos:line="33" pos:column="69"/></operator> <literal type="number" pos:line="33" pos:column="70">0<pos:position pos:line="33" pos:column="71"/></literal></expr>)<pos:position pos:line="33" pos:column="72"/></condition><then pos:line="33" pos:column="72">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="25">cf_util_get_cdtime<pos:position pos:line="34" pos:column="43"/></name> <argument_list pos:line="34" pos:column="44">(<argument><expr><name pos:line="34" pos:column="45">child<pos:position pos:line="34" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="52">&amp;<pos:position pos:line="34" pos:column="57"/></operator><name><name pos:line="34" pos:column="53">ctx<pos:position pos:line="34" pos:column="56"/></name><operator pos:line="34" pos:column="56">.<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">flush_interval<pos:position pos:line="34" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="73"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="35" pos:column="17">else <if pos:line="35" pos:column="22">if <condition pos:line="35" pos:column="25">(<expr><call><name pos:line="35" pos:column="26">strcasecmp<pos:position pos:line="35" pos:column="36"/></name> <argument_list pos:line="35" pos:column="37">(<argument><expr><literal type="string" pos:line="35" pos:column="38">"FlushTimeout"<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="54">child<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">-&gt;<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="61">key<pos:position pos:line="35" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call> <operator pos:line="35" pos:column="66">==<pos:position pos:line="35" pos:column="68"/></operator> <literal type="number" pos:line="35" pos:column="69">0<pos:position pos:line="35" pos:column="70"/></literal></expr>)<pos:position pos:line="35" pos:column="71"/></condition><then pos:line="35" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="25">cf_util_get_cdtime<pos:position pos:line="36" pos:column="43"/></name> <argument_list pos:line="36" pos:column="44">(<argument><expr><name pos:line="36" pos:column="45">child<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="52">&amp;<pos:position pos:line="36" pos:column="57"/></operator><name><name pos:line="36" pos:column="53">ctx<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">.<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="57">flush_timeout<pos:position pos:line="36" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="72"/></expr_stmt></block></then></if></elseif>
		<else pos:line="37" pos:column="17">else <block pos:line="37" pos:column="22">{
			<expr_stmt><expr><call><name pos:line="38" pos:column="25">WARNING<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><literal type="string" pos:line="38" pos:column="33">"Ignoring unknown LoadPlugin option \"%s\" "<pos:position pos:line="38" pos:column="77"/></literal>
					<literal type="string" pos:line="39" pos:column="41">"for plugin \"%s\""<pos:position pos:line="39" pos:column="60"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="40" pos:column="41">child<pos:position pos:line="40" pos:column="46"/></name><operator pos:line="40" pos:column="46">-&gt;<pos:position pos:line="40" pos:column="51"/></operator><name pos:line="40" pos:column="48">key<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="53">ci<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="57">values<pos:position pos:line="40" pos:column="63"/></name><index pos:line="40" pos:column="63">[<expr><literal type="number" pos:line="40" pos:column="64">0<pos:position pos:line="40" pos:column="65"/></literal></expr>]<pos:position pos:line="40" pos:column="66"/></index></name><operator pos:line="40" pos:column="66">.<pos:position pos:line="40" pos:column="67"/></operator><name><name pos:line="40" pos:column="67">value<pos:position pos:line="40" pos:column="72"/></name><operator pos:line="40" pos:column="72">.<pos:position pos:line="40" pos:column="73"/></operator><name pos:line="40" pos:column="73">string<pos:position pos:line="40" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="41" pos:column="18"/></block></else></if>
	}<pos:position pos:line="42" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="44" pos:column="9">old_ctx<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">plugin_set_ctx<pos:position pos:line="44" pos:column="33"/></name> <argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">ctx<pos:position pos:line="44" pos:column="38"/></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
	<expr_stmt><expr><name pos:line="45" pos:column="9">ret_val<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <call><name pos:line="45" pos:column="19">plugin_load<pos:position pos:line="45" pos:column="30"/></name> <argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">name<pos:position pos:line="45" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="38">(<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="39">uint32_t<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">)<pos:position pos:line="45" pos:column="48"/></operator> <name pos:line="45" pos:column="49">flags<pos:position pos:line="45" pos:column="54"/></name></expr></argument>)<pos:position pos:line="45" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="56"/></expr_stmt>
	<comment type="block" pos:line="46" pos:column="9">/* reset to the "global" context */</comment>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">plugin_set_ctx<pos:position pos:line="47" pos:column="23"/></name> <argument_list pos:line="47" pos:column="24">(<argument><expr><name pos:line="47" pos:column="25">old_ctx<pos:position pos:line="47" pos:column="32"/></name></expr></argument>)<pos:position pos:line="47" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="34"/></expr_stmt>

	<return pos:line="49" pos:column="9">return <expr><operator pos:line="49" pos:column="16">(<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">ret_val<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">)<pos:position pos:line="49" pos:column="25"/></operator></expr>;<pos:position pos:line="49" pos:column="26"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

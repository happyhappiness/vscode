<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1584_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">latency_submit_match<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">cu_match_t<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">match<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="52">void<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">user_data<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <block pos:line="1" pos:column="69">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cu_tail_match_simple_t<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">data<pos:position pos:line="2" pos:column="31"/></name> <init pos:line="2" pos:column="32">= <expr><operator pos:line="2" pos:column="34">(<pos:position pos:line="2" pos:column="35"/></operator><name pos:line="2" pos:column="35">cu_tail_match_simple_t<pos:position pos:line="2" pos:column="57"/></name> <operator pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></operator><operator pos:line="2" pos:column="59">)<pos:position pos:line="2" pos:column="60"/></operator><name pos:line="2" pos:column="60">user_data<pos:position pos:line="2" pos:column="69"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="70"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cu_match_value_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">match_value<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_list_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">vl<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">match_value<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <operator pos:line="6" pos:column="17">(<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">cu_match_value_t<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></operator><operator pos:line="6" pos:column="36">)<pos:position pos:line="6" pos:column="37"/></operator><call><name pos:line="6" pos:column="37">match_get_user_data<pos:position pos:line="6" pos:column="56"/></name><argument_list pos:line="6" pos:column="56">(<argument><expr><name pos:line="6" pos:column="57">match<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">match_value<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><operator pos:line="8" pos:column="13">-<pos:position pos:line="8" pos:column="14"/></operator><literal type="number" pos:line="8" pos:column="14">1<pos:position pos:line="8" pos:column="15"/></literal><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator></expr>;<pos:position pos:line="8" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">sstrncpy<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name><name pos:line="10" pos:column="12">vl<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">host<pos:position pos:line="10" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="21">hostname_g<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="33">sizeof<argument_list pos:line="10" pos:column="39">(<argument><expr><name><name pos:line="10" pos:column="40">vl<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">host<pos:position pos:line="10" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">sstrncpy<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name><name pos:line="11" pos:column="12">vl<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">plugin<pos:position pos:line="11" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="23">data<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">plugin<pos:position pos:line="11" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="37">sizeof<argument_list pos:line="11" pos:column="43">(<argument><expr><name><name pos:line="11" pos:column="44">vl<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><name pos:line="11" pos:column="47">plugin<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">sstrncpy<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">vl<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">.<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="15">plugin_instance<pos:position pos:line="12" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="32">data<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">plugin_instance<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>,
           <argument><expr><sizeof pos:line="13" pos:column="12">sizeof<argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">vl<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">.<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">plugin_instance<pos:position pos:line="13" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">vl<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">.<pos:position pos:line="14" pos:column="6"/></operator><name pos:line="14" pos:column="6">interval<pos:position pos:line="14" pos:column="14"/></name></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name><name pos:line="14" pos:column="17">data<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">interval<pos:position pos:line="14" pos:column="31"/></name></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">vl<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">.<pos:position pos:line="15" pos:column="6"/></operator><name pos:line="15" pos:column="6">time<pos:position pos:line="15" pos:column="10"/></name></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">cdtime<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">()<pos:position pos:line="15" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="17" pos:column="3">/* Submit percentiles */</comment>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">sstrncpy<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name><name pos:line="18" pos:column="12">vl<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">type<pos:position pos:line="18" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="21">data<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">type<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="33">sizeof<argument_list pos:line="18" pos:column="39">(<argument><expr><name><name pos:line="18" pos:column="40">vl<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">.<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">type<pos:position pos:line="18" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="50"/></expr_stmt>
  <for pos:line="19" pos:column="3">for <control pos:line="19" pos:column="7">(<init><decl><type><name pos:line="19" pos:column="8">size_t<pos:position pos:line="19" pos:column="14"/></name></type> <name pos:line="19" pos:column="15">i<pos:position pos:line="19" pos:column="16"/></name> <init pos:line="19" pos:column="17">= <expr><literal type="number" pos:line="19" pos:column="19">0<pos:position pos:line="19" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="21"/></init> <condition><expr><name pos:line="19" pos:column="22">i<pos:position pos:line="19" pos:column="23"/></name> <operator pos:line="19" pos:column="24">&lt;<pos:position pos:line="19" pos:column="28"/></operator> <name><name pos:line="19" pos:column="26">data<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">-&gt;<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="32">latency_config<pos:position pos:line="19" pos:column="46"/></name><operator pos:line="19" pos:column="46">.<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">percentile_num<pos:position pos:line="19" pos:column="61"/></name></name></expr>;<pos:position pos:line="19" pos:column="62"/></condition> <incr><expr><name pos:line="19" pos:column="63">i<pos:position pos:line="19" pos:column="64"/></name><operator pos:line="19" pos:column="64">++<pos:position pos:line="19" pos:column="66"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="67"/></control> <block pos:line="19" pos:column="68">{
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name pos:line="20" pos:column="9">strlen<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name><name pos:line="20" pos:column="16">data<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">type_instance<pos:position pos:line="20" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call> <operator pos:line="20" pos:column="37">!=<pos:position pos:line="20" pos:column="39"/></operator> <literal type="number" pos:line="20" pos:column="40">0<pos:position pos:line="20" pos:column="41"/></literal></expr>)<pos:position pos:line="20" pos:column="42"/></condition><then pos:line="20" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="7">ssnprintf<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name><name pos:line="21" pos:column="17">vl<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">.<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="20">type_instance<pos:position pos:line="21" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="35">sizeof<argument_list pos:line="21" pos:column="41">(<argument><expr><name><name pos:line="21" pos:column="42">vl<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">.<pos:position pos:line="21" pos:column="45"/></operator><name pos:line="21" pos:column="45">type_instance<pos:position pos:line="21" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="61">"%s-%.0f"<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="22" pos:column="17">data<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">type_instance<pos:position pos:line="22" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="38">data<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">-&gt;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="44">latency_config<pos:position pos:line="22" pos:column="58"/></name><operator pos:line="22" pos:column="58">.<pos:position pos:line="22" pos:column="59"/></operator><name pos:line="22" pos:column="59">percentile<pos:position pos:line="22" pos:column="69"/></name><index pos:line="22" pos:column="69">[<expr><name pos:line="22" pos:column="70">i<pos:position pos:line="22" pos:column="71"/></name></expr>]<pos:position pos:line="22" pos:column="72"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt></block></then>
    <else pos:line="23" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="7">ssnprintf<pos:position pos:line="24" pos:column="16"/></name><argument_list pos:line="24" pos:column="16">(<argument><expr><name><name pos:line="24" pos:column="17">vl<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">type_instance<pos:position pos:line="24" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="35">sizeof<argument_list pos:line="24" pos:column="41">(<argument><expr><name><name pos:line="24" pos:column="42">vl<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">.<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="45">type_instance<pos:position pos:line="24" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="61">"%.0f"<pos:position pos:line="24" pos:column="67"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="25" pos:column="17">data<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">-&gt;<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="23">latency_config<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">percentile<pos:position pos:line="25" pos:column="48"/></name><index pos:line="25" pos:column="48">[<expr><name pos:line="25" pos:column="49">i<pos:position pos:line="25" pos:column="50"/></name></expr>]<pos:position pos:line="25" pos:column="51"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">vl<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">.<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">values<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <operator pos:line="27" pos:column="17">&amp;<pos:position pos:line="27" pos:column="22"/></operator><operator pos:line="27" pos:column="18">(<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">value_t<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator><block pos:line="27" pos:column="27">{
        <expr><operator pos:line="28" pos:column="9">.<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">gauge<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator>
            <operator pos:line="29" pos:column="13">(<pos:position pos:line="29" pos:column="14"/></operator><name><name pos:line="29" pos:column="14">match_value<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">values_num<pos:position pos:line="29" pos:column="37"/></name></name> <operator pos:line="29" pos:column="38">!=<pos:position pos:line="29" pos:column="40"/></operator> <literal type="number" pos:line="29" pos:column="41">0<pos:position pos:line="29" pos:column="42"/></literal><operator pos:line="29" pos:column="42">)<pos:position pos:line="29" pos:column="43"/></operator>
                <operator pos:line="30" pos:column="17">?<pos:position pos:line="30" pos:column="18"/></operator> <call><name pos:line="30" pos:column="19">CDTIME_T_TO_DOUBLE<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><call><name pos:line="30" pos:column="38">latency_counter_get_percentile<pos:position pos:line="30" pos:column="68"/></name><argument_list pos:line="30" pos:column="68">(
                      <argument><expr><name><name pos:line="31" pos:column="23">match_value<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">latency<pos:position pos:line="31" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="45">data<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">-&gt;<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="51">latency_config<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">.<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="66">percentile<pos:position pos:line="31" pos:column="76"/></name><index pos:line="31" pos:column="76">[<expr><name pos:line="31" pos:column="77">i<pos:position pos:line="31" pos:column="78"/></name></expr>]<pos:position pos:line="31" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="81"/></argument_list></call>
                <operator pos:line="32" pos:column="17">:<pos:position pos:line="32" pos:column="18"/></operator> <name pos:line="32" pos:column="19">NAN<pos:position pos:line="32" pos:column="22"/></name></expr>,
    }<pos:position pos:line="33" pos:column="6"/></block></expr>;<pos:position pos:line="33" pos:column="7"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">vl<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">.<pos:position pos:line="34" pos:column="8"/></operator><name pos:line="34" pos:column="8">values_len<pos:position pos:line="34" pos:column="18"/></name></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <literal type="number" pos:line="34" pos:column="21">1<pos:position pos:line="34" pos:column="22"/></literal></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">plugin_dispatch_values<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><operator pos:line="36" pos:column="28">&amp;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="29">vl<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="37" pos:column="4"/></block></for>

  <comment type="block" pos:line="39" pos:column="3">/* Submit buckets */</comment>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">sstrncpy<pos:position pos:line="40" pos:column="11"/></name><argument_list pos:line="40" pos:column="11">(<argument><expr><name><name pos:line="40" pos:column="12">vl<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">type<pos:position pos:line="40" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="21">"bucket"<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="31">sizeof<argument_list pos:line="40" pos:column="37">(<argument><expr><name><name pos:line="40" pos:column="38">vl<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">.<pos:position pos:line="40" pos:column="41"/></operator><name pos:line="40" pos:column="41">type<pos:position pos:line="40" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
  <for pos:line="41" pos:column="3">for <control pos:line="41" pos:column="7">(<init><decl><type><name pos:line="41" pos:column="8">size_t<pos:position pos:line="41" pos:column="14"/></name></type> <name pos:line="41" pos:column="15">i<pos:position pos:line="41" pos:column="16"/></name> <init pos:line="41" pos:column="17">= <expr><literal type="number" pos:line="41" pos:column="19">0<pos:position pos:line="41" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="21"/></init> <condition><expr><name pos:line="41" pos:column="22">i<pos:position pos:line="41" pos:column="23"/></name> <operator pos:line="41" pos:column="24">&lt;<pos:position pos:line="41" pos:column="28"/></operator> <name><name pos:line="41" pos:column="26">data<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">-&gt;<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="32">latency_config<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">.<pos:position pos:line="41" pos:column="47"/></operator><name pos:line="41" pos:column="47">buckets_num<pos:position pos:line="41" pos:column="58"/></name></name></expr>;<pos:position pos:line="41" pos:column="59"/></condition> <incr><expr><name pos:line="41" pos:column="60">i<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">++<pos:position pos:line="41" pos:column="63"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="64"/></control> <block pos:line="41" pos:column="65">{
    <decl_stmt><decl><type><name pos:line="42" pos:column="5">latency_bucket_t<pos:position pos:line="42" pos:column="21"/></name></type> <name pos:line="42" pos:column="22">bucket<pos:position pos:line="42" pos:column="28"/></name> <init pos:line="42" pos:column="29">= <expr><name><name pos:line="42" pos:column="31">data<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">-&gt;<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="37">latency_config<pos:position pos:line="42" pos:column="51"/></name><operator pos:line="42" pos:column="51">.<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">buckets<pos:position pos:line="42" pos:column="59"/></name><index pos:line="42" pos:column="59">[<expr><name pos:line="42" pos:column="60">i<pos:position pos:line="42" pos:column="61"/></name></expr>]<pos:position pos:line="42" pos:column="62"/></index></name></expr></init></decl>;<pos:position pos:line="42" pos:column="63"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="44" pos:column="5">double<pos:position pos:line="44" pos:column="11"/></name></type> <name pos:line="44" pos:column="12">lower_bound<pos:position pos:line="44" pos:column="23"/></name> <init pos:line="44" pos:column="24">= <expr><call><name pos:line="44" pos:column="26">CDTIME_T_TO_DOUBLE<pos:position pos:line="44" pos:column="44"/></name><argument_list pos:line="44" pos:column="44">(<argument><expr><name><name pos:line="44" pos:column="45">bucket<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">.<pos:position pos:line="44" pos:column="52"/></operator><name pos:line="44" pos:column="52">lower_bound<pos:position pos:line="44" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="44" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">double<pos:position pos:line="45" pos:column="11"/></name></type> <name pos:line="45" pos:column="12">upper_bound<pos:position pos:line="45" pos:column="23"/></name> <init pos:line="45" pos:column="24">=
        <expr><ternary><condition><expr><name><name pos:line="46" pos:column="9">bucket<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">.<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">upper_bound<pos:position pos:line="46" pos:column="27"/></name></name></expr> ?<pos:position pos:line="46" pos:column="29"/></condition><then pos:line="46" pos:column="29"> <expr><call><name pos:line="46" pos:column="30">CDTIME_T_TO_DOUBLE<pos:position pos:line="46" pos:column="48"/></name><argument_list pos:line="46" pos:column="48">(<argument><expr><name><name pos:line="46" pos:column="49">bucket<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">.<pos:position pos:line="46" pos:column="56"/></operator><name pos:line="46" pos:column="56">upper_bound<pos:position pos:line="46" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="68"/></argument_list></call></expr> <pos:position pos:line="46" pos:column="69"/></then><else pos:line="46" pos:column="69">: <expr><name pos:line="46" pos:column="71">INFINITY<pos:position pos:line="46" pos:column="79"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="46" pos:column="80"/></decl_stmt>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">strlen<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><name><name pos:line="48" pos:column="16">data<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">type_instance<pos:position pos:line="48" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call> <operator pos:line="48" pos:column="37">!=<pos:position pos:line="48" pos:column="39"/></operator> <literal type="number" pos:line="48" pos:column="40">0<pos:position pos:line="48" pos:column="41"/></literal></expr>)<pos:position pos:line="48" pos:column="42"/></condition><then pos:line="48" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="7">ssnprintf<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name><name pos:line="49" pos:column="17">vl<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">.<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">type_instance<pos:position pos:line="49" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="35">sizeof<argument_list pos:line="49" pos:column="41">(<argument><expr><name><name pos:line="49" pos:column="42">vl<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">.<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="45">type_instance<pos:position pos:line="49" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="61">"%s-%s-%g_%g"<pos:position pos:line="49" pos:column="74"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="50" pos:column="17">data<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">type<pos:position pos:line="50" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="29">data<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">type_instance<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="50">lower_bound<pos:position pos:line="50" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="63">upper_bound<pos:position pos:line="50" pos:column="74"/></name></expr></argument>)<pos:position pos:line="50" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="76"/></expr_stmt></block></then>
    <else pos:line="51" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">ssnprintf<pos:position pos:line="52" pos:column="16"/></name><argument_list pos:line="52" pos:column="16">(<argument><expr><name><name pos:line="52" pos:column="17">vl<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">type_instance<pos:position pos:line="52" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="35">sizeof<argument_list pos:line="52" pos:column="41">(<argument><expr><name><name pos:line="52" pos:column="42">vl<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">.<pos:position pos:line="52" pos:column="45"/></operator><name pos:line="52" pos:column="45">type_instance<pos:position pos:line="52" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="59"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="61">"%s-%g_%g"<pos:position pos:line="52" pos:column="71"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="53" pos:column="17">data<pos:position pos:line="53" pos:column="21"/></name><operator pos:line="53" pos:column="21">-&gt;<pos:position pos:line="53" pos:column="26"/></operator><name pos:line="53" pos:column="23">type<pos:position pos:line="53" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="29">lower_bound<pos:position pos:line="53" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="42">upper_bound<pos:position pos:line="53" pos:column="53"/></name></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name><name pos:line="55" pos:column="5">vl<pos:position pos:line="55" pos:column="7"/></name><operator pos:line="55" pos:column="7">.<pos:position pos:line="55" pos:column="8"/></operator><name pos:line="55" pos:column="8">values<pos:position pos:line="55" pos:column="14"/></name></name> <operator pos:line="55" pos:column="15">=<pos:position pos:line="55" pos:column="16"/></operator> <operator pos:line="55" pos:column="17">&amp;<pos:position pos:line="55" pos:column="22"/></operator><operator pos:line="55" pos:column="18">(<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="19">value_t<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">)<pos:position pos:line="55" pos:column="27"/></operator><block pos:line="55" pos:column="27">{
        <expr><operator pos:line="56" pos:column="9">.<pos:position pos:line="56" pos:column="10"/></operator><name pos:line="56" pos:column="10">gauge<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator>
            <call><name pos:line="57" pos:column="13">latency_counter_get_rate<pos:position pos:line="57" pos:column="37"/></name><argument_list pos:line="57" pos:column="37">(<argument><expr><name><name pos:line="57" pos:column="38">match_value<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">-&gt;<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="51">latency<pos:position pos:line="57" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="60">bucket<pos:position pos:line="57" pos:column="66"/></name><operator pos:line="57" pos:column="66">.<pos:position pos:line="57" pos:column="67"/></operator><name pos:line="57" pos:column="67">lower_bound<pos:position pos:line="57" pos:column="78"/></name></name></expr></argument>,
                                     <argument><expr><name><name pos:line="58" pos:column="38">bucket<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">.<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="45">upper_bound<pos:position pos:line="58" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="58">vl<pos:position pos:line="58" pos:column="60"/></name><operator pos:line="58" pos:column="60">.<pos:position pos:line="58" pos:column="61"/></operator><name pos:line="58" pos:column="61">time<pos:position pos:line="58" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="66"/></argument_list></call></expr>,
    }<pos:position pos:line="59" pos:column="6"/></block></expr>;<pos:position pos:line="59" pos:column="7"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">vl<pos:position pos:line="60" pos:column="7"/></name><operator pos:line="60" pos:column="7">.<pos:position pos:line="60" pos:column="8"/></operator><name pos:line="60" pos:column="8">values_len<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <literal type="number" pos:line="60" pos:column="21">1<pos:position pos:line="60" pos:column="22"/></literal></expr>;<pos:position pos:line="60" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="62" pos:column="5">plugin_dispatch_values<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><operator pos:line="62" pos:column="28">&amp;<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="29">vl<pos:position pos:line="62" pos:column="31"/></name></expr></argument>)<pos:position pos:line="62" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></for>

  <expr_stmt><expr><name><name pos:line="65" pos:column="3">match_value<pos:position pos:line="65" pos:column="14"/></name><operator pos:line="65" pos:column="14">-&gt;<pos:position pos:line="65" pos:column="19"/></operator><name pos:line="65" pos:column="16">value<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">.<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="22">gauge<pos:position pos:line="65" pos:column="27"/></name></name> <operator pos:line="65" pos:column="28">=<pos:position pos:line="65" pos:column="29"/></operator> <name pos:line="65" pos:column="30">NAN<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="66" pos:column="3">match_value<pos:position pos:line="66" pos:column="14"/></name><operator pos:line="66" pos:column="14">-&gt;<pos:position pos:line="66" pos:column="19"/></operator><name pos:line="66" pos:column="16">values_num<pos:position pos:line="66" pos:column="26"/></name></name> <operator pos:line="66" pos:column="27">=<pos:position pos:line="66" pos:column="28"/></operator> <literal type="number" pos:line="66" pos:column="29">0<pos:position pos:line="66" pos:column="30"/></literal></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">latency_counter_reset<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name><name pos:line="67" pos:column="25">match_value<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">-&gt;<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="38">latency<pos:position pos:line="67" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>

  <return pos:line="69" pos:column="3">return <expr><operator pos:line="69" pos:column="10">(<pos:position pos:line="69" pos:column="11"/></operator><literal type="number" pos:line="69" pos:column="11">0<pos:position pos:line="69" pos:column="12"/></literal><operator pos:line="69" pos:column="12">)<pos:position pos:line="69" pos:column="13"/></operator></expr>;<pos:position pos:line="69" pos:column="14"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_870_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">check_permissions<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">HAVE_SYS_CAPABILITY_H<pos:position pos:line="4" pos:column="29"/></name></cpp:ifdef>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">__user_cap_header_struct<pos:position pos:line="5" pos:column="40"/></name></name></type> <name pos:line="5" pos:column="41">cap_header_data<pos:position pos:line="5" pos:column="56"/></name></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">cap_user_header_t<pos:position pos:line="6" pos:column="26"/></name></type> <name pos:line="6" pos:column="27">cap_header<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">= <expr><operator pos:line="6" pos:column="40">&amp;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="41">cap_header_data<pos:position pos:line="6" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">__user_cap_data_struct<pos:position pos:line="7" pos:column="38"/></name></name></type> <name pos:line="7" pos:column="39">cap_data_data<pos:position pos:line="7" pos:column="52"/></name></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">cap_user_data_t<pos:position pos:line="8" pos:column="24"/></name></type> <name pos:line="8" pos:column="25">cap_data<pos:position pos:line="8" pos:column="33"/></name> <init pos:line="8" pos:column="34">= <expr><operator pos:line="8" pos:column="36">&amp;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="37">cap_data_data<pos:position pos:line="8" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">ret<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></decl_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="10" pos:column="8">/* HAVE_SYS_CAPABILITY_H */</comment>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">getuid<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">()<pos:position pos:line="12" pos:column="21"/></argument_list></call> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27"> <block pos:line="12" pos:column="28">{
		<comment type="block" pos:line="13" pos:column="17">/* We have everything we need */</comment>
		<return pos:line="14" pos:column="17">return <expr><literal type="number" pos:line="14" pos:column="24">0<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></return>
<cpp:ifndef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifndef<pos:position pos:line="15" pos:column="8"/></cpp:directive> <name pos:line="15" pos:column="9">HAVE_SYS_CAPABILITY_H<pos:position pos:line="15" pos:column="30"/></name></cpp:ifndef>
	}<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">ERROR<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><literal type="string" pos:line="17" pos:column="23">"turbostat plugin: Initialization failed: this plugin "<pos:position pos:line="17" pos:column="78"/></literal>
		      <literal type="string" pos:line="18" pos:column="23">"requires collectd to run as root"<pos:position pos:line="18" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">-<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal></expr>;<pos:position pos:line="19" pos:column="27"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></else></if>
<cpp:else pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">else<pos:position pos:line="21" pos:column="6"/></cpp:directive></cpp:else> <comment type="block" pos:line="21" pos:column="7">/* HAVE_SYS_CAPABILITY_H */</comment>
	}<pos:position pos:line="22" pos:column="10"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_635_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">jtoc_values_array<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">JNIEnv<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">jvm_env<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
                             <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">data_set_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">ds<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">value_list_t<pos:position pos:line="2" pos:column="64"/></name> <modifier pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="66">vl<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>,
                             <parameter><decl><type><name pos:line="3" pos:column="30">jclass<pos:position pos:line="3" pos:column="36"/></name></type> <name pos:line="3" pos:column="37">class_ptr<pos:position pos:line="3" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="48">jobject<pos:position pos:line="3" pos:column="55"/></name></type> <name pos:line="3" pos:column="56">object_ptr<pos:position pos:line="3" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="67"/></parameter_list> <block pos:line="3" pos:column="68">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">jmethodID<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">m_getvalues<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">jmethodID<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">m_toarray<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">jobject<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">o_list<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">jobjectArray<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">o_number_array<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="9" pos:column="3">value_t<pos:position pos:line="9" pos:column="10"/></name> <modifier pos:line="9" pos:column="11">*<pos:position pos:line="9" pos:column="12"/></modifier></type><name pos:line="9" pos:column="12">values<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">values_num<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">values_num<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name><name pos:line="12" pos:column="16">ds<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">-&gt;<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="20">ds_num<pos:position pos:line="12" pos:column="26"/></name></name></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>

  <expr_stmt><expr><name pos:line="14" pos:column="3">values<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">o_number_array<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="20">NULL<pos:position pos:line="15" pos:column="24"/></name></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="16" pos:column="3">o_list<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <name pos:line="16" pos:column="12">NULL<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt>

<cpp:define pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">define<pos:position pos:line="18" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="18" pos:column="9">BAIL_OUT<pos:position pos:line="18" pos:column="17"/></name><parameter_list pos:line="18" pos:column="17">(<parameter><type><name pos:line="18" pos:column="18">status<pos:position pos:line="18" pos:column="24"/></name></type></parameter>)<pos:position pos:line="18" pos:column="25"/></parameter_list></cpp:macro>                                                       \
  <cpp:value pos:line="19" pos:column="3">free(values);                                                                \
  if (o_number_array != NULL)                                                  \
    (*jvm_env)-&gt;DeleteLocalRef(jvm_env, o_number_array);                       \
  if (o_list != NULL)                                                          \
    (*jvm_env)-&gt;DeleteLocalRef(jvm_env, o_list);                               \
  return (status);<pos:position pos:line="24" pos:column="19"/></cpp:value></cpp:define>

  <comment type="block" pos:line="26" pos:column="3">/* Call: List&lt;Number&gt; ValueList.getValues () */</comment>
  <expr_stmt><expr><name pos:line="27" pos:column="3">m_getvalues<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name><operator pos:line="27" pos:column="17">(<pos:position pos:line="27" pos:column="18"/></operator><operator pos:line="27" pos:column="18">*<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">jvm_env<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">GetMethodID<pos:position pos:line="27" pos:column="40"/></name></name><argument_list pos:line="27" pos:column="40">(<argument><expr><name pos:line="27" pos:column="41">jvm_env<pos:position pos:line="27" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">class_ptr<pos:position pos:line="27" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="61">"getValues"<pos:position pos:line="27" pos:column="72"/></literal></expr></argument>,
                                        <argument><expr><literal type="string" pos:line="28" pos:column="41">"()Ljava/util/List;"<pos:position pos:line="28" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">m_getvalues<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">==<pos:position pos:line="29" pos:column="21"/></operator> <name pos:line="29" pos:column="22">NULL<pos:position pos:line="29" pos:column="26"/></name></expr>)<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <block pos:line="29" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"java plugin: jtoc_values_array: "<pos:position pos:line="30" pos:column="45"/></literal>
          <literal type="string" pos:line="31" pos:column="11">"Cannot find method `List getValues ()'."<pos:position pos:line="31" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">BAIL_OUT<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><operator pos:line="32" pos:column="14">-<pos:position pos:line="32" pos:column="15"/></operator><literal type="number" pos:line="32" pos:column="15">1<pos:position pos:line="32" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="35" pos:column="3">o_list<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <call><name><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">*<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">jvm_env<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">)<pos:position pos:line="35" pos:column="22"/></operator><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">CallObjectMethod<pos:position pos:line="35" pos:column="40"/></name></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">jvm_env<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="50">object_ptr<pos:position pos:line="35" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="62">m_getvalues<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="75"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name pos:line="36" pos:column="7">o_list<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">==<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">NULL<pos:position pos:line="36" pos:column="21"/></name></expr>)<pos:position pos:line="36" pos:column="22"/></condition><then pos:line="36" pos:column="22"> <block pos:line="36" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">ERROR<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><literal type="string" pos:line="37" pos:column="11">"java plugin: jtoc_values_array: "<pos:position pos:line="37" pos:column="45"/></literal>
          <literal type="string" pos:line="38" pos:column="11">"CallObjectMethod (getValues) failed."<pos:position pos:line="38" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">BAIL_OUT<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><operator pos:line="39" pos:column="14">-<pos:position pos:line="39" pos:column="15"/></operator><literal type="number" pos:line="39" pos:column="15">1<pos:position pos:line="39" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="42" pos:column="3">/* Call: Number[] List.toArray () */</comment>
  <expr_stmt><expr><name pos:line="43" pos:column="3">m_toarray<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name><operator pos:line="43" pos:column="15">(<pos:position pos:line="43" pos:column="16"/></operator><operator pos:line="43" pos:column="16">*<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">jvm_env<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">)<pos:position pos:line="43" pos:column="25"/></operator><operator pos:line="43" pos:column="25">-&gt;<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="27">GetMethodID<pos:position pos:line="43" pos:column="38"/></name></name><argument_list pos:line="43" pos:column="38">(
      <argument><expr><name pos:line="44" pos:column="7">jvm_env<pos:position pos:line="44" pos:column="14"/></name></expr></argument>, <argument><expr><call><name><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><operator pos:line="44" pos:column="17">*<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">jvm_env<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">)<pos:position pos:line="44" pos:column="26"/></operator><operator pos:line="44" pos:column="26">-&gt;<pos:position pos:line="44" pos:column="31"/></operator><name pos:line="44" pos:column="28">GetObjectClass<pos:position pos:line="44" pos:column="42"/></name></name><argument_list pos:line="44" pos:column="42">(<argument><expr><name pos:line="44" pos:column="43">jvm_env<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="52">o_list<pos:position pos:line="44" pos:column="58"/></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="61">"toArray"<pos:position pos:line="44" pos:column="70"/></literal></expr></argument>,
      <argument><expr><literal type="string" pos:line="45" pos:column="7">"()[Ljava/lang/Object;"<pos:position pos:line="45" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">m_toarray<pos:position pos:line="46" pos:column="16"/></name> <operator pos:line="46" pos:column="17">==<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="20">NULL<pos:position pos:line="46" pos:column="24"/></name></expr>)<pos:position pos:line="46" pos:column="25"/></condition><then pos:line="46" pos:column="25"> <block pos:line="46" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="string" pos:line="47" pos:column="11">"java plugin: jtoc_values_array: "<pos:position pos:line="47" pos:column="45"/></literal>
          <literal type="string" pos:line="48" pos:column="11">"Cannot find method `Object[] toArray ()'."<pos:position pos:line="48" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">BAIL_OUT<pos:position pos:line="49" pos:column="13"/></name><argument_list pos:line="49" pos:column="13">(<argument><expr><operator pos:line="49" pos:column="14">-<pos:position pos:line="49" pos:column="15"/></operator><literal type="number" pos:line="49" pos:column="15">1<pos:position pos:line="49" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="52" pos:column="3">o_number_array<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <call><name><operator pos:line="52" pos:column="20">(<pos:position pos:line="52" pos:column="21"/></operator><operator pos:line="52" pos:column="21">*<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="22">jvm_env<pos:position pos:line="52" pos:column="29"/></name><operator pos:line="52" pos:column="29">)<pos:position pos:line="52" pos:column="30"/></operator><operator pos:line="52" pos:column="30">-&gt;<pos:position pos:line="52" pos:column="35"/></operator><name pos:line="52" pos:column="32">CallObjectMethod<pos:position pos:line="52" pos:column="48"/></name></name><argument_list pos:line="52" pos:column="48">(<argument><expr><name pos:line="52" pos:column="49">jvm_env<pos:position pos:line="52" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="58">o_list<pos:position pos:line="52" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="66">m_toarray<pos:position pos:line="52" pos:column="75"/></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt>
  <if pos:line="53" pos:column="3">if <condition pos:line="53" pos:column="6">(<expr><name pos:line="53" pos:column="7">o_number_array<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">==<pos:position pos:line="53" pos:column="24"/></operator> <name pos:line="53" pos:column="25">NULL<pos:position pos:line="53" pos:column="29"/></name></expr>)<pos:position pos:line="53" pos:column="30"/></condition><then pos:line="53" pos:column="30"> <block pos:line="53" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ERROR<pos:position pos:line="54" pos:column="10"/></name><argument_list pos:line="54" pos:column="10">(<argument><expr><literal type="string" pos:line="54" pos:column="11">"java plugin: jtoc_values_array: "<pos:position pos:line="54" pos:column="45"/></literal>
          <literal type="string" pos:line="55" pos:column="11">"CallObjectMethod (toArray) failed."<pos:position pos:line="55" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">BAIL_OUT<pos:position pos:line="56" pos:column="13"/></name><argument_list pos:line="56" pos:column="13">(<argument><expr><operator pos:line="56" pos:column="14">-<pos:position pos:line="56" pos:column="15"/></operator><literal type="number" pos:line="56" pos:column="15">1<pos:position pos:line="56" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="59" pos:column="3">values<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><name pos:line="59" pos:column="13">value_t<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">*<pos:position pos:line="59" pos:column="22"/></operator><operator pos:line="59" pos:column="22">)<pos:position pos:line="59" pos:column="23"/></operator><call><name pos:line="59" pos:column="23">calloc<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">values_num<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="59" pos:column="42">sizeof<argument_list pos:line="59" pos:column="48">(<argument><expr><name pos:line="59" pos:column="49">value_t<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="59"/></expr_stmt>
  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><name pos:line="60" pos:column="7">values<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">==<pos:position pos:line="60" pos:column="16"/></operator> <name pos:line="60" pos:column="17">NULL<pos:position pos:line="60" pos:column="21"/></name></expr>)<pos:position pos:line="60" pos:column="22"/></condition><then pos:line="60" pos:column="22"> <block pos:line="60" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">ERROR<pos:position pos:line="61" pos:column="10"/></name><argument_list pos:line="61" pos:column="10">(<argument><expr><literal type="string" pos:line="61" pos:column="11">"java plugin: jtoc_values_array: calloc failed."<pos:position pos:line="61" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">BAIL_OUT<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><operator pos:line="62" pos:column="14">-<pos:position pos:line="62" pos:column="15"/></operator><literal type="number" pos:line="62" pos:column="15">1<pos:position pos:line="62" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="18"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

  <for pos:line="65" pos:column="3">for <control pos:line="65" pos:column="7">(<init><decl><type><name pos:line="65" pos:column="8">int<pos:position pos:line="65" pos:column="11"/></name></type> <name pos:line="65" pos:column="12">i<pos:position pos:line="65" pos:column="13"/></name> <init pos:line="65" pos:column="14">= <expr><literal type="number" pos:line="65" pos:column="16">0<pos:position pos:line="65" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="65" pos:column="18"/></init> <condition><expr><name pos:line="65" pos:column="19">i<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">&lt;<pos:position pos:line="65" pos:column="25"/></operator> <name pos:line="65" pos:column="23">values_num<pos:position pos:line="65" pos:column="33"/></name></expr>;<pos:position pos:line="65" pos:column="34"/></condition> <incr><expr><name pos:line="65" pos:column="35">i<pos:position pos:line="65" pos:column="36"/></name><operator pos:line="65" pos:column="36">++<pos:position pos:line="65" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="65" pos:column="39"/></control> <block pos:line="65" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="66" pos:column="5">jobject<pos:position pos:line="66" pos:column="12"/></name></type> <name pos:line="66" pos:column="13">o_number<pos:position pos:line="66" pos:column="21"/></name></decl>;<pos:position pos:line="66" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="67" pos:column="5">int<pos:position pos:line="67" pos:column="8"/></name></type> <name pos:line="67" pos:column="9">status<pos:position pos:line="67" pos:column="15"/></name></decl>;<pos:position pos:line="67" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="69" pos:column="5">o_number<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator>
        <call><name><operator pos:line="70" pos:column="9">(<pos:position pos:line="70" pos:column="10"/></operator><operator pos:line="70" pos:column="10">*<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">jvm_env<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">)<pos:position pos:line="70" pos:column="19"/></operator><operator pos:line="70" pos:column="19">-&gt;<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="21">GetObjectArrayElement<pos:position pos:line="70" pos:column="42"/></name></name><argument_list pos:line="70" pos:column="42">(<argument><expr><name pos:line="70" pos:column="43">jvm_env<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="52">o_number_array<pos:position pos:line="70" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="68">(<pos:position pos:line="70" pos:column="69"/></operator><name pos:line="70" pos:column="69">jsize<pos:position pos:line="70" pos:column="74"/></name><operator pos:line="70" pos:column="74">)<pos:position pos:line="70" pos:column="75"/></operator><name pos:line="70" pos:column="75">i<pos:position pos:line="70" pos:column="76"/></name></expr></argument>)<pos:position pos:line="70" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="78"/></expr_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">o_number<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">==<pos:position pos:line="71" pos:column="20"/></operator> <name pos:line="71" pos:column="21">NULL<pos:position pos:line="71" pos:column="25"/></name></expr>)<pos:position pos:line="71" pos:column="26"/></condition><then pos:line="71" pos:column="26"> <block pos:line="71" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="72" pos:column="7">ERROR<pos:position pos:line="72" pos:column="12"/></name><argument_list pos:line="72" pos:column="12">(<argument><expr><literal type="string" pos:line="72" pos:column="13">"java plugin: jtoc_values_array: "<pos:position pos:line="72" pos:column="47"/></literal>
            <literal type="string" pos:line="73" pos:column="13">"GetObjectArrayElement (%i) failed."<pos:position pos:line="73" pos:column="49"/></literal></expr></argument>,
            <argument><expr><name pos:line="74" pos:column="13">i<pos:position pos:line="74" pos:column="14"/></name></expr></argument>)<pos:position pos:line="74" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="75" pos:column="7">BAIL_OUT<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><operator pos:line="75" pos:column="16">-<pos:position pos:line="75" pos:column="17"/></operator><literal type="number" pos:line="75" pos:column="17">1<pos:position pos:line="75" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="78" pos:column="5">status<pos:position pos:line="78" pos:column="11"/></name> <operator pos:line="78" pos:column="12">=<pos:position pos:line="78" pos:column="13"/></operator> <call><name pos:line="78" pos:column="14">jtoc_value<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><name pos:line="78" pos:column="25">jvm_env<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">values<pos:position pos:line="78" pos:column="40"/></name> <operator pos:line="78" pos:column="41">+<pos:position pos:line="78" pos:column="42"/></operator> <name pos:line="78" pos:column="43">i<pos:position pos:line="78" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="46">ds<pos:position pos:line="78" pos:column="48"/></name><operator pos:line="78" pos:column="48">-&gt;<pos:position pos:line="78" pos:column="53"/></operator><name pos:line="78" pos:column="50">ds<pos:position pos:line="78" pos:column="52"/></name><index pos:line="78" pos:column="52">[<expr><name pos:line="78" pos:column="53">i<pos:position pos:line="78" pos:column="54"/></name></expr>]<pos:position pos:line="78" pos:column="55"/></index></name><operator pos:line="78" pos:column="55">.<pos:position pos:line="78" pos:column="56"/></operator><name pos:line="78" pos:column="56">type<pos:position pos:line="78" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="62">o_number<pos:position pos:line="78" pos:column="70"/></name></expr></argument>)<pos:position pos:line="78" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="72"/></expr_stmt>
    <if pos:line="79" pos:column="5">if <condition pos:line="79" pos:column="8">(<expr><name pos:line="79" pos:column="9">status<pos:position pos:line="79" pos:column="15"/></name> <operator pos:line="79" pos:column="16">!=<pos:position pos:line="79" pos:column="18"/></operator> <literal type="number" pos:line="79" pos:column="19">0<pos:position pos:line="79" pos:column="20"/></literal></expr>)<pos:position pos:line="79" pos:column="21"/></condition><then pos:line="79" pos:column="21"> <block pos:line="79" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="80" pos:column="7">ERROR<pos:position pos:line="80" pos:column="12"/></name><argument_list pos:line="80" pos:column="12">(<argument><expr><literal type="string" pos:line="80" pos:column="13">"java plugin: jtoc_values_array: "<pos:position pos:line="80" pos:column="47"/></literal>
            <literal type="string" pos:line="81" pos:column="13">"jtoc_value (%i) failed."<pos:position pos:line="81" pos:column="38"/></literal></expr></argument>,
            <argument><expr><name pos:line="82" pos:column="13">i<pos:position pos:line="82" pos:column="14"/></name></expr></argument>)<pos:position pos:line="82" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="16"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="83" pos:column="7">BAIL_OUT<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><operator pos:line="83" pos:column="16">-<pos:position pos:line="83" pos:column="17"/></operator><literal type="number" pos:line="83" pos:column="17">1<pos:position pos:line="83" pos:column="18"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then></if>
  }<pos:position pos:line="85" pos:column="4"/></block></for> <comment type="block" pos:line="85" pos:column="5">/* for (i = 0; i &lt; values_num; i++) */</comment>

  <expr_stmt><expr><name><name pos:line="87" pos:column="3">vl<pos:position pos:line="87" pos:column="5"/></name><operator pos:line="87" pos:column="5">-&gt;<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="7">values<pos:position pos:line="87" pos:column="13"/></name></name> <operator pos:line="87" pos:column="14">=<pos:position pos:line="87" pos:column="15"/></operator> <name pos:line="87" pos:column="16">values<pos:position pos:line="87" pos:column="22"/></name></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="88" pos:column="3">vl<pos:position pos:line="88" pos:column="5"/></name><operator pos:line="88" pos:column="5">-&gt;<pos:position pos:line="88" pos:column="10"/></operator><name pos:line="88" pos:column="7">values_len<pos:position pos:line="88" pos:column="17"/></name></name> <operator pos:line="88" pos:column="18">=<pos:position pos:line="88" pos:column="19"/></operator> <name pos:line="88" pos:column="20">values_num<pos:position pos:line="88" pos:column="30"/></name></expr>;<pos:position pos:line="88" pos:column="31"/></expr_stmt>

<cpp:undef pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">undef<pos:position pos:line="90" pos:column="7"/></cpp:directive> <name pos:line="90" pos:column="8">BAIL_OUT<pos:position pos:line="90" pos:column="16"/></name></cpp:undef>
  <expr_stmt><expr><call><name><operator pos:line="91" pos:column="3">(<pos:position pos:line="91" pos:column="4"/></operator><operator pos:line="91" pos:column="4">*<pos:position pos:line="91" pos:column="5"/></operator><name pos:line="91" pos:column="5">jvm_env<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">)<pos:position pos:line="91" pos:column="13"/></operator><operator pos:line="91" pos:column="13">-&gt;<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="15">DeleteLocalRef<pos:position pos:line="91" pos:column="29"/></name></name><argument_list pos:line="91" pos:column="29">(<argument><expr><name pos:line="91" pos:column="30">jvm_env<pos:position pos:line="91" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="39">o_number_array<pos:position pos:line="91" pos:column="53"/></name></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name><operator pos:line="92" pos:column="3">(<pos:position pos:line="92" pos:column="4"/></operator><operator pos:line="92" pos:column="4">*<pos:position pos:line="92" pos:column="5"/></operator><name pos:line="92" pos:column="5">jvm_env<pos:position pos:line="92" pos:column="12"/></name><operator pos:line="92" pos:column="12">)<pos:position pos:line="92" pos:column="13"/></operator><operator pos:line="92" pos:column="13">-&gt;<pos:position pos:line="92" pos:column="18"/></operator><name pos:line="92" pos:column="15">DeleteLocalRef<pos:position pos:line="92" pos:column="29"/></name></name><argument_list pos:line="92" pos:column="29">(<argument><expr><name pos:line="92" pos:column="30">jvm_env<pos:position pos:line="92" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="92" pos:column="39">o_list<pos:position pos:line="92" pos:column="45"/></name></expr></argument>)<pos:position pos:line="92" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="47"/></expr_stmt>
  <return pos:line="93" pos:column="3">return <expr><operator pos:line="93" pos:column="10">(<pos:position pos:line="93" pos:column="11"/></operator><literal type="number" pos:line="93" pos:column="11">0<pos:position pos:line="93" pos:column="12"/></literal><operator pos:line="93" pos:column="12">)<pos:position pos:line="93" pos:column="13"/></operator></expr>;<pos:position pos:line="93" pos:column="14"/></return>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

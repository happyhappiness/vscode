<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1389_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_receive_response<pos:position pos:line="1" pos:column="33"/></name> <parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">int<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">res_items<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="51">int<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">res_size<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">res_data<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">res_item_size<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>              <name pos:line="4" pos:column="26">sd<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5" pos:column="9">struct<pos:position pos:line="5" pos:column="15"/></name> <name pos:line="5" pos:column="16">pollfd<pos:position pos:line="5" pos:column="22"/></name></name></type>    <name pos:line="5" pos:column="26">poll_s<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">resp_pkt<pos:position pos:line="6" pos:column="24"/></name></name></type>  <name pos:line="6" pos:column="26">res<pos:position pos:line="6" pos:column="29"/></name></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>              <name pos:line="7" pos:column="26">status<pos:position pos:line="7" pos:column="32"/></name></decl>;<pos:position pos:line="7" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type>              <name pos:line="8" pos:column="26">done<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>              <name pos:line="9" pos:column="26">i<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name>            <modifier pos:line="11" pos:column="25">*<pos:position pos:line="11" pos:column="26"/></modifier></type><name pos:line="11" pos:column="26">items<pos:position pos:line="11" pos:column="31"/></name></decl>;<pos:position pos:line="11" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">size_t<pos:position pos:line="12" pos:column="15"/></name></type>           <name pos:line="12" pos:column="26">items_num<pos:position pos:line="12" pos:column="35"/></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="14" pos:column="9">struct<pos:position pos:line="14" pos:column="15"/></name> <name pos:line="14" pos:column="16">timeval<pos:position pos:line="14" pos:column="23"/></name></name></type>   <name pos:line="14" pos:column="26">time_end<pos:position pos:line="14" pos:column="34"/></name></decl>;<pos:position pos:line="14" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="15" pos:column="9">struct<pos:position pos:line="15" pos:column="15"/></name> <name pos:line="15" pos:column="16">timeval<pos:position pos:line="15" pos:column="23"/></name></name></type>   <name pos:line="15" pos:column="26">time_now<pos:position pos:line="15" pos:column="34"/></name></decl>;<pos:position pos:line="15" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type>              <name pos:line="16" pos:column="26">timeout<pos:position pos:line="16" pos:column="33"/></name></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type>              <name pos:line="18" pos:column="26">pkt_item_num<pos:position pos:line="18" pos:column="38"/></name></decl>;<pos:position pos:line="18" pos:column="39"/></decl_stmt>        <comment type="block" pos:line="18" pos:column="47">/* items in this packet */</comment>
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int<pos:position pos:line="19" pos:column="12"/></name></type>              <name pos:line="19" pos:column="26">pkt_item_len<pos:position pos:line="19" pos:column="38"/></name></decl>;<pos:position pos:line="19" pos:column="39"/></decl_stmt>        <comment type="block" pos:line="19" pos:column="47">/* size of the items in this packet */</comment>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int<pos:position pos:line="20" pos:column="12"/></name></type>              <name pos:line="20" pos:column="26">pkt_sequence<pos:position pos:line="20" pos:column="38"/></name></decl>;<pos:position pos:line="20" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name></type>             <name><name pos:line="21" pos:column="26">pkt_recvd<pos:position pos:line="21" pos:column="35"/></name><index pos:line="21" pos:column="35">[<expr><name pos:line="21" pos:column="36">MAXSEQ<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">+<pos:position pos:line="21" pos:column="43"/></operator><literal type="number" pos:line="21" pos:column="43">1<pos:position pos:line="21" pos:column="44"/></literal></expr>]<pos:position pos:line="21" pos:column="45"/></index></name></decl>;<pos:position pos:line="21" pos:column="46"/></decl_stmt> <comment type="block" pos:line="21" pos:column="47">/* sequence numbers that have been received */</comment>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type>              <name pos:line="22" pos:column="26">pkt_recvd_num<pos:position pos:line="22" pos:column="39"/></name></decl>;<pos:position pos:line="22" pos:column="40"/></decl_stmt>       <comment type="block" pos:line="22" pos:column="47">/* number of packets that have been received */</comment>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">int<pos:position pos:line="23" pos:column="12"/></name></type>              <name pos:line="23" pos:column="26">pkt_lastseq<pos:position pos:line="23" pos:column="37"/></name></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>         <comment type="block" pos:line="23" pos:column="47">/* the last sequence number */</comment>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">ssize_t<pos:position pos:line="24" pos:column="16"/></name></type>          <name pos:line="24" pos:column="26">pkt_padding<pos:position pos:line="24" pos:column="37"/></name></decl>;<pos:position pos:line="24" pos:column="38"/></decl_stmt>         <comment type="block" pos:line="24" pos:column="47">/* Padding in this packet */</comment>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">sd<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">ntpd_connect<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">()<pos:position pos:line="26" pos:column="34"/></argument_list></call><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="36">&lt;<pos:position pos:line="26" pos:column="40"/></operator> <literal type="number" pos:line="26" pos:column="38">0<pos:position pos:line="26" pos:column="39"/></literal></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><operator pos:line="27" pos:column="25">-<pos:position pos:line="27" pos:column="26"/></operator><literal type="number" pos:line="27" pos:column="26">1<pos:position pos:line="27" pos:column="27"/></literal><operator pos:line="27" pos:column="27">)<pos:position pos:line="27" pos:column="28"/></operator></expr>;<pos:position pos:line="27" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="29" pos:column="9">items<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">NULL<pos:position pos:line="29" pos:column="21"/></name></expr>;<pos:position pos:line="29" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="30" pos:column="9">items_num<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="21">0<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="32" pos:column="9">memset<pos:position pos:line="32" pos:column="15"/></name> <argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">pkt_recvd<pos:position pos:line="32" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="28">'\0'<pos:position pos:line="32" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="34">sizeof <argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">pkt_recvd<pos:position pos:line="32" pos:column="51"/></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name pos:line="33" pos:column="9">pkt_recvd_num<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">0<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="34" pos:column="9">pkt_lastseq<pos:position pos:line="34" pos:column="20"/></name>   <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <operator pos:line="34" pos:column="25">-<pos:position pos:line="34" pos:column="26"/></operator><literal type="number" pos:line="34" pos:column="26">1<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><operator pos:line="36" pos:column="9">*<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">res_items<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>;<pos:position pos:line="36" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">res_size<pos:position pos:line="37" pos:column="18"/></name>  <operator pos:line="37" pos:column="20">=<pos:position pos:line="37" pos:column="21"/></operator> <literal type="number" pos:line="37" pos:column="22">0<pos:position pos:line="37" pos:column="23"/></literal></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">res_data<pos:position pos:line="38" pos:column="18"/></name>  <operator pos:line="38" pos:column="20">=<pos:position pos:line="38" pos:column="21"/></operator> <name pos:line="38" pos:column="22">NULL<pos:position pos:line="38" pos:column="26"/></name></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><call><name pos:line="40" pos:column="13">gettimeofday<pos:position pos:line="40" pos:column="25"/></name> <argument_list pos:line="40" pos:column="26">(<argument><expr><operator pos:line="40" pos:column="27">&amp;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="28">time_end<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">NULL<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call> <operator pos:line="40" pos:column="44">&lt;<pos:position pos:line="40" pos:column="48"/></operator> <literal type="number" pos:line="40" pos:column="46">0<pos:position pos:line="40" pos:column="47"/></literal></expr>)<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48">
	<block pos:line="41" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="42" pos:column="17">char<pos:position pos:line="42" pos:column="21"/></name></type> <name><name pos:line="42" pos:column="22">errbuf<pos:position pos:line="42" pos:column="28"/></name><index pos:line="42" pos:column="28">[<expr><literal type="number" pos:line="42" pos:column="29">1024<pos:position pos:line="42" pos:column="33"/></literal></expr>]<pos:position pos:line="42" pos:column="34"/></index></name></decl>;<pos:position pos:line="42" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">ERROR<pos:position pos:line="43" pos:column="22"/></name> <argument_list pos:line="43" pos:column="23">(<argument><expr><literal type="string" pos:line="43" pos:column="24">"ntpd plugin: gettimeofday failed: %s"<pos:position pos:line="43" pos:column="62"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="44" pos:column="33">sstrerror<pos:position pos:line="44" pos:column="42"/></name> <argument_list pos:line="44" pos:column="43">(<argument><expr><name pos:line="44" pos:column="44">errno<pos:position pos:line="44" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="51">errbuf<pos:position pos:line="44" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="59">sizeof <argument_list pos:line="44" pos:column="66">(<argument><expr><name pos:line="44" pos:column="67">errbuf<pos:position pos:line="44" pos:column="73"/></name></expr></argument>)<pos:position pos:line="44" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="77"/></expr_stmt>
		<return pos:line="45" pos:column="17">return <expr><operator pos:line="45" pos:column="24">(<pos:position pos:line="45" pos:column="25"/></operator><operator pos:line="45" pos:column="25">-<pos:position pos:line="45" pos:column="26"/></operator><literal type="number" pos:line="45" pos:column="26">1<pos:position pos:line="45" pos:column="27"/></literal><operator pos:line="45" pos:column="27">)<pos:position pos:line="45" pos:column="28"/></operator></expr>;<pos:position pos:line="45" pos:column="29"/></return>
	}<pos:position pos:line="46" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">time_end<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">.<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">tv_sec<pos:position pos:line="47" pos:column="24"/></name></name><operator pos:line="47" pos:column="24">++<pos:position pos:line="47" pos:column="26"/></operator></expr>;<pos:position pos:line="47" pos:column="27"/></expr_stmt> <comment type="block" pos:line="47" pos:column="28">/* wait for a most one second */</comment>

	<expr_stmt><expr><name pos:line="49" pos:column="9">done<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <literal type="number" pos:line="49" pos:column="16">0<pos:position pos:line="49" pos:column="17"/></literal></expr>;<pos:position pos:line="49" pos:column="18"/></expr_stmt>
	<while pos:line="50" pos:column="9">while <condition pos:line="50" pos:column="15">(<expr><name pos:line="50" pos:column="16">done<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">==<pos:position pos:line="50" pos:column="23"/></operator> <literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal></expr>)<pos:position pos:line="50" pos:column="26"/></condition>
	<block pos:line="51" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="52" pos:column="17">struct<pos:position pos:line="52" pos:column="23"/></name> <name pos:line="52" pos:column="24">timeval<pos:position pos:line="52" pos:column="31"/></name></name></type> <name pos:line="52" pos:column="32">time_left<pos:position pos:line="52" pos:column="41"/></name></decl>;<pos:position pos:line="52" pos:column="42"/></decl_stmt>

		<if pos:line="54" pos:column="17">if <condition pos:line="54" pos:column="20">(<expr><call><name pos:line="54" pos:column="21">gettimeofday<pos:position pos:line="54" pos:column="33"/></name> <argument_list pos:line="54" pos:column="34">(<argument><expr><operator pos:line="54" pos:column="35">&amp;<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="36">time_now<pos:position pos:line="54" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="46">NULL<pos:position pos:line="54" pos:column="50"/></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call> <operator pos:line="54" pos:column="52">&lt;<pos:position pos:line="54" pos:column="56"/></operator> <literal type="number" pos:line="54" pos:column="54">0<pos:position pos:line="54" pos:column="55"/></literal></expr>)<pos:position pos:line="54" pos:column="56"/></condition><then pos:line="54" pos:column="56">
		<block pos:line="55" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="56" pos:column="25">char<pos:position pos:line="56" pos:column="29"/></name></type> <name><name pos:line="56" pos:column="30">errbuf<pos:position pos:line="56" pos:column="36"/></name><index pos:line="56" pos:column="36">[<expr><literal type="number" pos:line="56" pos:column="37">1024<pos:position pos:line="56" pos:column="41"/></literal></expr>]<pos:position pos:line="56" pos:column="42"/></index></name></decl>;<pos:position pos:line="56" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="57" pos:column="25">ERROR<pos:position pos:line="57" pos:column="30"/></name> <argument_list pos:line="57" pos:column="31">(<argument><expr><literal type="string" pos:line="57" pos:column="32">"ntpd plugin: gettimeofday failed: %s"<pos:position pos:line="57" pos:column="70"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="58" pos:column="41">sstrerror<pos:position pos:line="58" pos:column="50"/></name> <argument_list pos:line="58" pos:column="51">(<argument><expr><name pos:line="58" pos:column="52">errno<pos:position pos:line="58" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="59">errbuf<pos:position pos:line="58" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="67">sizeof <argument_list pos:line="58" pos:column="74">(<argument><expr><name pos:line="58" pos:column="75">errbuf<pos:position pos:line="58" pos:column="81"/></name></expr></argument>)<pos:position pos:line="58" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="85"/></expr_stmt>
			<return pos:line="59" pos:column="25">return <expr><operator pos:line="59" pos:column="32">(<pos:position pos:line="59" pos:column="33"/></operator><operator pos:line="59" pos:column="33">-<pos:position pos:line="59" pos:column="34"/></operator><literal type="number" pos:line="59" pos:column="34">1<pos:position pos:line="59" pos:column="35"/></literal><operator pos:line="59" pos:column="35">)<pos:position pos:line="59" pos:column="36"/></operator></expr>;<pos:position pos:line="59" pos:column="37"/></return>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if>

		<if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><call><name pos:line="62" pos:column="21">timeval_cmp<pos:position pos:line="62" pos:column="32"/></name> <argument_list pos:line="62" pos:column="33">(<argument><expr><name pos:line="62" pos:column="34">time_end<pos:position pos:line="62" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="44">time_now<pos:position pos:line="62" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="54">&amp;<pos:position pos:line="62" pos:column="59"/></operator><name pos:line="62" pos:column="55">time_left<pos:position pos:line="62" pos:column="64"/></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call> <operator pos:line="62" pos:column="66">&lt;=<pos:position pos:line="62" pos:column="71"/></operator> <literal type="number" pos:line="62" pos:column="69">0<pos:position pos:line="62" pos:column="70"/></literal></expr>)<pos:position pos:line="62" pos:column="71"/></condition><then pos:line="62" pos:column="71">
			<block type="pseudo"><expr_stmt><expr><name pos:line="63" pos:column="25">timeout<pos:position pos:line="63" pos:column="32"/></name> <operator pos:line="63" pos:column="33">=<pos:position pos:line="63" pos:column="34"/></operator> <literal type="number" pos:line="63" pos:column="35">0<pos:position pos:line="63" pos:column="36"/></literal></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt></block></then>
		<else pos:line="64" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="65" pos:column="25">timeout<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">=<pos:position pos:line="65" pos:column="34"/></operator> <literal type="number" pos:line="65" pos:column="35">1000<pos:position pos:line="65" pos:column="39"/></literal> <operator pos:line="65" pos:column="40">*<pos:position pos:line="65" pos:column="41"/></operator> <name><name pos:line="65" pos:column="42">time_left<pos:position pos:line="65" pos:column="51"/></name><operator pos:line="65" pos:column="51">.<pos:position pos:line="65" pos:column="52"/></operator><name pos:line="65" pos:column="52">tv_sec<pos:position pos:line="65" pos:column="58"/></name></name>
				<operator pos:line="66" pos:column="33">+<pos:position pos:line="66" pos:column="34"/></operator> <operator pos:line="66" pos:column="35">(<pos:position pos:line="66" pos:column="36"/></operator><operator pos:line="66" pos:column="36">(<pos:position pos:line="66" pos:column="37"/></operator><name><name pos:line="66" pos:column="37">time_left<pos:position pos:line="66" pos:column="46"/></name><operator pos:line="66" pos:column="46">.<pos:position pos:line="66" pos:column="47"/></operator><name pos:line="66" pos:column="47">tv_usec<pos:position pos:line="66" pos:column="54"/></name></name> <operator pos:line="66" pos:column="55">+<pos:position pos:line="66" pos:column="56"/></operator> <literal type="number" pos:line="66" pos:column="57">500<pos:position pos:line="66" pos:column="60"/></literal><operator pos:line="66" pos:column="60">)<pos:position pos:line="66" pos:column="61"/></operator> <operator pos:line="66" pos:column="62">/<pos:position pos:line="66" pos:column="63"/></operator> <literal type="number" pos:line="66" pos:column="64">1000<pos:position pos:line="66" pos:column="68"/></literal><operator pos:line="66" pos:column="68">)<pos:position pos:line="66" pos:column="69"/></operator></expr>;<pos:position pos:line="66" pos:column="70"/></expr_stmt></block></else></if>

		<comment type="block" pos:line="68" pos:column="17">/* timeout reached */</comment>
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><name pos:line="69" pos:column="21">timeout<pos:position pos:line="69" pos:column="28"/></name> <operator pos:line="69" pos:column="29">&lt;=<pos:position pos:line="69" pos:column="34"/></operator> <literal type="number" pos:line="69" pos:column="32">0<pos:position pos:line="69" pos:column="33"/></literal></expr>)<pos:position pos:line="69" pos:column="34"/></condition><then pos:line="69" pos:column="34">
			<block type="pseudo"><break pos:line="70" pos:column="25">break;<pos:position pos:line="70" pos:column="31"/></break></block></then></if>

		<expr_stmt><expr><name><name pos:line="72" pos:column="17">poll_s<pos:position pos:line="72" pos:column="23"/></name><operator pos:line="72" pos:column="23">.<pos:position pos:line="72" pos:column="24"/></operator><name pos:line="72" pos:column="24">fd<pos:position pos:line="72" pos:column="26"/></name></name>      <operator pos:line="72" pos:column="32">=<pos:position pos:line="72" pos:column="33"/></operator> <name pos:line="72" pos:column="34">sd<pos:position pos:line="72" pos:column="36"/></name></expr>;<pos:position pos:line="72" pos:column="37"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="73" pos:column="17">poll_s<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">events<pos:position pos:line="73" pos:column="30"/></name></name>  <operator pos:line="73" pos:column="32">=<pos:position pos:line="73" pos:column="33"/></operator> <name pos:line="73" pos:column="34">POLLIN<pos:position pos:line="73" pos:column="40"/></name> <operator pos:line="73" pos:column="41">|<pos:position pos:line="73" pos:column="42"/></operator> <name pos:line="73" pos:column="43">POLLPRI<pos:position pos:line="73" pos:column="50"/></name></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="74" pos:column="17">poll_s<pos:position pos:line="74" pos:column="23"/></name><operator pos:line="74" pos:column="23">.<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="24">revents<pos:position pos:line="74" pos:column="31"/></name></name> <operator pos:line="74" pos:column="32">=<pos:position pos:line="74" pos:column="33"/></operator> <literal type="number" pos:line="74" pos:column="34">0<pos:position pos:line="74" pos:column="35"/></literal></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>
		
		<expr_stmt><expr><call><name pos:line="76" pos:column="17">DEBUG<pos:position pos:line="76" pos:column="22"/></name> <argument_list pos:line="76" pos:column="23">(<argument><expr><literal type="string" pos:line="76" pos:column="24">"Polling for %ims"<pos:position pos:line="76" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="44">timeout<pos:position pos:line="76" pos:column="51"/></name></expr></argument>)<pos:position pos:line="76" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="53"/></expr_stmt>
		<expr_stmt><expr><name pos:line="77" pos:column="17">status<pos:position pos:line="77" pos:column="23"/></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <call><name pos:line="77" pos:column="26">poll<pos:position pos:line="77" pos:column="30"/></name> <argument_list pos:line="77" pos:column="31">(<argument><expr><operator pos:line="77" pos:column="32">&amp;<pos:position pos:line="77" pos:column="37"/></operator><name pos:line="77" pos:column="33">poll_s<pos:position pos:line="77" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="41">1<pos:position pos:line="77" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="44">timeout<pos:position pos:line="77" pos:column="51"/></name></expr></argument>)<pos:position pos:line="77" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="53"/></expr_stmt>

		<if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><operator pos:line="79" pos:column="21">(<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="22">status<pos:position pos:line="79" pos:column="28"/></name> <operator pos:line="79" pos:column="29">&lt;<pos:position pos:line="79" pos:column="33"/></operator> <literal type="number" pos:line="79" pos:column="31">0<pos:position pos:line="79" pos:column="32"/></literal><operator pos:line="79" pos:column="32">)<pos:position pos:line="79" pos:column="33"/></operator> <operator pos:line="79" pos:column="34">&amp;&amp;<pos:position pos:line="79" pos:column="44"/></operator> <operator pos:line="79" pos:column="37">(<pos:position pos:line="79" pos:column="38"/></operator><operator pos:line="79" pos:column="38">(<pos:position pos:line="79" pos:column="39"/></operator><name pos:line="79" pos:column="39">errno<pos:position pos:line="79" pos:column="44"/></name> <operator pos:line="79" pos:column="45">==<pos:position pos:line="79" pos:column="47"/></operator> <name pos:line="79" pos:column="48">EAGAIN<pos:position pos:line="79" pos:column="54"/></name><operator pos:line="79" pos:column="54">)<pos:position pos:line="79" pos:column="55"/></operator> <operator pos:line="79" pos:column="56">||<pos:position pos:line="79" pos:column="58"/></operator> <operator pos:line="79" pos:column="59">(<pos:position pos:line="79" pos:column="60"/></operator><name pos:line="79" pos:column="60">errno<pos:position pos:line="79" pos:column="65"/></name> <operator pos:line="79" pos:column="66">==<pos:position pos:line="79" pos:column="68"/></operator> <name pos:line="79" pos:column="69">EINTR<pos:position pos:line="79" pos:column="74"/></name><operator pos:line="79" pos:column="74">)<pos:position pos:line="79" pos:column="75"/></operator><operator pos:line="79" pos:column="75">)<pos:position pos:line="79" pos:column="76"/></operator></expr>)<pos:position pos:line="79" pos:column="77"/></condition><then pos:line="79" pos:column="77">
			<block type="pseudo"><continue pos:line="80" pos:column="25">continue;<pos:position pos:line="80" pos:column="34"/></continue></block></then></if>

		<if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">status<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">&lt;<pos:position pos:line="82" pos:column="32"/></operator> <literal type="number" pos:line="82" pos:column="30">0<pos:position pos:line="82" pos:column="31"/></literal></expr>)<pos:position pos:line="82" pos:column="32"/></condition><then pos:line="82" pos:column="32">
		<block pos:line="83" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="84" pos:column="25">char<pos:position pos:line="84" pos:column="29"/></name></type> <name><name pos:line="84" pos:column="30">errbuf<pos:position pos:line="84" pos:column="36"/></name><index pos:line="84" pos:column="36">[<expr><literal type="number" pos:line="84" pos:column="37">1024<pos:position pos:line="84" pos:column="41"/></literal></expr>]<pos:position pos:line="84" pos:column="42"/></index></name></decl>;<pos:position pos:line="84" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">ERROR<pos:position pos:line="85" pos:column="30"/></name> <argument_list pos:line="85" pos:column="31">(<argument><expr><literal type="string" pos:line="85" pos:column="32">"ntpd plugin: poll failed: %s"<pos:position pos:line="85" pos:column="62"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="86" pos:column="41">sstrerror<pos:position pos:line="86" pos:column="50"/></name> <argument_list pos:line="86" pos:column="51">(<argument><expr><name pos:line="86" pos:column="52">errno<pos:position pos:line="86" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="59">errbuf<pos:position pos:line="86" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="67">sizeof <argument_list pos:line="86" pos:column="74">(<argument><expr><name pos:line="86" pos:column="75">errbuf<pos:position pos:line="86" pos:column="81"/></name></expr></argument>)<pos:position pos:line="86" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="86" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="86" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="85"/></expr_stmt>
			<return pos:line="87" pos:column="25">return <expr><operator pos:line="87" pos:column="32">(<pos:position pos:line="87" pos:column="33"/></operator><operator pos:line="87" pos:column="33">-<pos:position pos:line="87" pos:column="34"/></operator><literal type="number" pos:line="87" pos:column="34">1<pos:position pos:line="87" pos:column="35"/></literal><operator pos:line="87" pos:column="35">)<pos:position pos:line="87" pos:column="36"/></operator></expr>;<pos:position pos:line="87" pos:column="37"/></return>
		}<pos:position pos:line="88" pos:column="18"/></block></then></if>

		<if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><name pos:line="90" pos:column="21">status<pos:position pos:line="90" pos:column="27"/></name> <operator pos:line="90" pos:column="28">==<pos:position pos:line="90" pos:column="30"/></operator> <literal type="number" pos:line="90" pos:column="31">0<pos:position pos:line="90" pos:column="32"/></literal></expr>)<pos:position pos:line="90" pos:column="33"/></condition><then pos:line="90" pos:column="33"> <comment type="block" pos:line="90" pos:column="34">/* timeout */</comment>
		<block pos:line="91" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="92" pos:column="25">DEBUG<pos:position pos:line="92" pos:column="30"/></name> <argument_list pos:line="92" pos:column="31">(<argument><expr><literal type="string" pos:line="92" pos:column="32">"timeout reached."<pos:position pos:line="92" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="52"/></expr_stmt>
			<break pos:line="93" pos:column="25">break;<pos:position pos:line="93" pos:column="31"/></break>
		}<pos:position pos:line="94" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="96" pos:column="17">memset<pos:position pos:line="96" pos:column="23"/></name> <argument_list pos:line="96" pos:column="24">(<argument><expr><operator pos:line="96" pos:column="25">(<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="26">void<pos:position pos:line="96" pos:column="30"/></name> <operator pos:line="96" pos:column="31">*<pos:position pos:line="96" pos:column="32"/></operator><operator pos:line="96" pos:column="32">)<pos:position pos:line="96" pos:column="33"/></operator> <operator pos:line="96" pos:column="34">&amp;<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="35">res<pos:position pos:line="96" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="96" pos:column="40">'\0'<pos:position pos:line="96" pos:column="44"/></literal></expr></argument>, <argument><expr><sizeof pos:line="96" pos:column="46">sizeof <argument_list pos:line="96" pos:column="53">(<argument><expr><name pos:line="96" pos:column="54">res<pos:position pos:line="96" pos:column="57"/></name></expr></argument>)<pos:position pos:line="96" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="96" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="60"/></expr_stmt>
		<expr_stmt><expr><name pos:line="97" pos:column="17">status<pos:position pos:line="97" pos:column="23"/></name> <operator pos:line="97" pos:column="24">=<pos:position pos:line="97" pos:column="25"/></operator> <call><name pos:line="97" pos:column="26">recv<pos:position pos:line="97" pos:column="30"/></name> <argument_list pos:line="97" pos:column="31">(<argument><expr><name pos:line="97" pos:column="32">sd<pos:position pos:line="97" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="36">(<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="37">void<pos:position pos:line="97" pos:column="41"/></name> <operator pos:line="97" pos:column="42">*<pos:position pos:line="97" pos:column="43"/></operator><operator pos:line="97" pos:column="43">)<pos:position pos:line="97" pos:column="44"/></operator> <operator pos:line="97" pos:column="45">&amp;<pos:position pos:line="97" pos:column="50"/></operator><name pos:line="97" pos:column="46">res<pos:position pos:line="97" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="51">sizeof <argument_list pos:line="97" pos:column="58">(<argument><expr><name pos:line="97" pos:column="59">res<pos:position pos:line="97" pos:column="62"/></name></expr></argument>)<pos:position pos:line="97" pos:column="63"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="97" pos:column="65">0<pos:position pos:line="97" pos:column="66"/></literal></expr></argument> <comment type="block" pos:line="97" pos:column="67">/* no flags */</comment>)<pos:position pos:line="97" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="83"/></expr_stmt>

		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><operator pos:line="99" pos:column="21">(<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="22">status<pos:position pos:line="99" pos:column="28"/></name> <operator pos:line="99" pos:column="29">&lt;<pos:position pos:line="99" pos:column="33"/></operator> <literal type="number" pos:line="99" pos:column="31">0<pos:position pos:line="99" pos:column="32"/></literal><operator pos:line="99" pos:column="32">)<pos:position pos:line="99" pos:column="33"/></operator> <operator pos:line="99" pos:column="34">&amp;&amp;<pos:position pos:line="99" pos:column="44"/></operator> <operator pos:line="99" pos:column="37">(<pos:position pos:line="99" pos:column="38"/></operator><operator pos:line="99" pos:column="38">(<pos:position pos:line="99" pos:column="39"/></operator><name pos:line="99" pos:column="39">errno<pos:position pos:line="99" pos:column="44"/></name> <operator pos:line="99" pos:column="45">==<pos:position pos:line="99" pos:column="47"/></operator> <name pos:line="99" pos:column="48">EAGAIN<pos:position pos:line="99" pos:column="54"/></name><operator pos:line="99" pos:column="54">)<pos:position pos:line="99" pos:column="55"/></operator> <operator pos:line="99" pos:column="56">||<pos:position pos:line="99" pos:column="58"/></operator> <operator pos:line="99" pos:column="59">(<pos:position pos:line="99" pos:column="60"/></operator><name pos:line="99" pos:column="60">errno<pos:position pos:line="99" pos:column="65"/></name> <operator pos:line="99" pos:column="66">==<pos:position pos:line="99" pos:column="68"/></operator> <name pos:line="99" pos:column="69">EINTR<pos:position pos:line="99" pos:column="74"/></name><operator pos:line="99" pos:column="74">)<pos:position pos:line="99" pos:column="75"/></operator><operator pos:line="99" pos:column="75">)<pos:position pos:line="99" pos:column="76"/></operator></expr>)<pos:position pos:line="99" pos:column="77"/></condition><then pos:line="99" pos:column="77">
			<block type="pseudo"><continue pos:line="100" pos:column="25">continue;<pos:position pos:line="100" pos:column="34"/></continue></block></then></if>

		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><name pos:line="102" pos:column="21">status<pos:position pos:line="102" pos:column="27"/></name> <operator pos:line="102" pos:column="28">&lt;<pos:position pos:line="102" pos:column="32"/></operator> <literal type="number" pos:line="102" pos:column="30">0<pos:position pos:line="102" pos:column="31"/></literal></expr>)<pos:position pos:line="102" pos:column="32"/></condition><then pos:line="102" pos:column="32">
		<block pos:line="103" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="104" pos:column="25">char<pos:position pos:line="104" pos:column="29"/></name></type> <name><name pos:line="104" pos:column="30">errbuf<pos:position pos:line="104" pos:column="36"/></name><index pos:line="104" pos:column="36">[<expr><literal type="number" pos:line="104" pos:column="37">1024<pos:position pos:line="104" pos:column="41"/></literal></expr>]<pos:position pos:line="104" pos:column="42"/></index></name></decl>;<pos:position pos:line="104" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="105" pos:column="25">INFO<pos:position pos:line="105" pos:column="29"/></name> <argument_list pos:line="105" pos:column="30">(<argument><expr><literal type="string" pos:line="105" pos:column="31">"recv(2) failed: %s"<pos:position pos:line="105" pos:column="51"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="106" pos:column="41">sstrerror<pos:position pos:line="106" pos:column="50"/></name> <argument_list pos:line="106" pos:column="51">(<argument><expr><name pos:line="106" pos:column="52">errno<pos:position pos:line="106" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="59">errbuf<pos:position pos:line="106" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="106" pos:column="67">sizeof <argument_list pos:line="106" pos:column="74">(<argument><expr><name pos:line="106" pos:column="75">errbuf<pos:position pos:line="106" pos:column="81"/></name></expr></argument>)<pos:position pos:line="106" pos:column="82"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="106" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="106" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="85"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="107" pos:column="25">DEBUG<pos:position pos:line="107" pos:column="30"/></name> <argument_list pos:line="107" pos:column="31">(<argument><expr><literal type="string" pos:line="107" pos:column="32">"Closing socket #%i"<pos:position pos:line="107" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="54">sd<pos:position pos:line="107" pos:column="56"/></name></expr></argument>)<pos:position pos:line="107" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="58"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="108" pos:column="25">close<pos:position pos:line="108" pos:column="30"/></name> <argument_list pos:line="108" pos:column="31">(<argument><expr><name pos:line="108" pos:column="32">sd<pos:position pos:line="108" pos:column="34"/></name></expr></argument>)<pos:position pos:line="108" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="36"/></expr_stmt>
			<expr_stmt><expr><name pos:line="109" pos:column="25">sock_descr<pos:position pos:line="109" pos:column="35"/></name> <operator pos:line="109" pos:column="36">=<pos:position pos:line="109" pos:column="37"/></operator> <name pos:line="109" pos:column="38">sd<pos:position pos:line="109" pos:column="40"/></name> <operator pos:line="109" pos:column="41">=<pos:position pos:line="109" pos:column="42"/></operator> <operator pos:line="109" pos:column="43">-<pos:position pos:line="109" pos:column="44"/></operator><literal type="number" pos:line="109" pos:column="44">1<pos:position pos:line="109" pos:column="45"/></literal></expr>;<pos:position pos:line="109" pos:column="46"/></expr_stmt>
			<return pos:line="110" pos:column="25">return <expr><operator pos:line="110" pos:column="32">(<pos:position pos:line="110" pos:column="33"/></operator><operator pos:line="110" pos:column="33">-<pos:position pos:line="110" pos:column="34"/></operator><literal type="number" pos:line="110" pos:column="34">1<pos:position pos:line="110" pos:column="35"/></literal><operator pos:line="110" pos:column="35">)<pos:position pos:line="110" pos:column="36"/></operator></expr>;<pos:position pos:line="110" pos:column="37"/></return>
		}<pos:position pos:line="111" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="113" pos:column="17">DEBUG<pos:position pos:line="113" pos:column="22"/></name> <argument_list pos:line="113" pos:column="23">(<argument><expr><literal type="string" pos:line="113" pos:column="24">"recv'd %i bytes"<pos:position pos:line="113" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="43">status<pos:position pos:line="113" pos:column="49"/></name></expr></argument>)<pos:position pos:line="113" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="51"/></expr_stmt>

		<comment type="block" pos:line="115" pos:column="17">/* 
		 * Do some sanity checks first
		 */</comment>
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><name pos:line="118" pos:column="21">status<pos:position pos:line="118" pos:column="27"/></name> <operator pos:line="118" pos:column="28">&lt;<pos:position pos:line="118" pos:column="32"/></operator> <name pos:line="118" pos:column="30">RESP_HEADER_SIZE<pos:position pos:line="118" pos:column="46"/></name></expr>)<pos:position pos:line="118" pos:column="47"/></condition><then pos:line="118" pos:column="47">
		<block pos:line="119" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">WARNING<pos:position pos:line="120" pos:column="32"/></name> <argument_list pos:line="120" pos:column="33">(<argument><expr><literal type="string" pos:line="120" pos:column="34">"ntpd plugin: Short (%i bytes) packet received"<pos:position pos:line="120" pos:column="81"/></literal></expr></argument>,
					<argument><expr><operator pos:line="121" pos:column="41">(<pos:position pos:line="121" pos:column="42"/></operator><name pos:line="121" pos:column="42">int<pos:position pos:line="121" pos:column="45"/></name><operator pos:line="121" pos:column="45">)<pos:position pos:line="121" pos:column="46"/></operator> <name pos:line="121" pos:column="47">status<pos:position pos:line="121" pos:column="53"/></name></expr></argument>)<pos:position pos:line="121" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="55"/></expr_stmt>
			<continue pos:line="122" pos:column="25">continue;<pos:position pos:line="122" pos:column="34"/></continue>
		}<pos:position pos:line="123" pos:column="18"/></block></then></if>
		<if pos:line="124" pos:column="17">if <condition pos:line="124" pos:column="20">(<expr><call><name pos:line="124" pos:column="21">INFO_MODE<pos:position pos:line="124" pos:column="30"/></name> <argument_list pos:line="124" pos:column="31">(<argument><expr><name><name pos:line="124" pos:column="32">res<pos:position pos:line="124" pos:column="35"/></name><operator pos:line="124" pos:column="35">.<pos:position pos:line="124" pos:column="36"/></operator><name pos:line="124" pos:column="36">rm_vn_mode<pos:position pos:line="124" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="47"/></argument_list></call> <operator pos:line="124" pos:column="48">!=<pos:position pos:line="124" pos:column="50"/></operator> <name pos:line="124" pos:column="51">MODE_PRIVATE<pos:position pos:line="124" pos:column="63"/></name></expr>)<pos:position pos:line="124" pos:column="64"/></condition><then pos:line="124" pos:column="64">
		<block pos:line="125" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="126" pos:column="25">NOTICE<pos:position pos:line="126" pos:column="31"/></name> <argument_list pos:line="126" pos:column="32">(<argument><expr><literal type="string" pos:line="126" pos:column="33">"ntpd plugin: Packet received with mode %i"<pos:position pos:line="126" pos:column="76"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="127" pos:column="41">INFO_MODE<pos:position pos:line="127" pos:column="50"/></name> <argument_list pos:line="127" pos:column="51">(<argument><expr><name><name pos:line="127" pos:column="52">res<pos:position pos:line="127" pos:column="55"/></name><operator pos:line="127" pos:column="55">.<pos:position pos:line="127" pos:column="56"/></operator><name pos:line="127" pos:column="56">rm_vn_mode<pos:position pos:line="127" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="69"/></expr_stmt>
			<continue pos:line="128" pos:column="25">continue;<pos:position pos:line="128" pos:column="34"/></continue>
		}<pos:position pos:line="129" pos:column="18"/></block></then></if>
		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><call><name pos:line="130" pos:column="21">INFO_IS_AUTH<pos:position pos:line="130" pos:column="33"/></name> <argument_list pos:line="130" pos:column="34">(<argument><expr><name><name pos:line="130" pos:column="35">res<pos:position pos:line="130" pos:column="38"/></name><operator pos:line="130" pos:column="38">.<pos:position pos:line="130" pos:column="39"/></operator><name pos:line="130" pos:column="39">auth_seq<pos:position pos:line="130" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="49"/></condition><then pos:line="130" pos:column="49">
		<block pos:line="131" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="132" pos:column="25">NOTICE<pos:position pos:line="132" pos:column="31"/></name> <argument_list pos:line="132" pos:column="32">(<argument><expr><literal type="string" pos:line="132" pos:column="33">"ntpd plugin: Encrypted packet received"<pos:position pos:line="132" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="75"/></expr_stmt>
			<continue pos:line="133" pos:column="25">continue;<pos:position pos:line="133" pos:column="34"/></continue>
		}<pos:position pos:line="134" pos:column="18"/></block></then></if>
		<if pos:line="135" pos:column="17">if <condition pos:line="135" pos:column="20">(<expr><operator pos:line="135" pos:column="21">!<pos:position pos:line="135" pos:column="22"/></operator><call><name pos:line="135" pos:column="22">ISRESPONSE<pos:position pos:line="135" pos:column="32"/></name> <argument_list pos:line="135" pos:column="33">(<argument><expr><name><name pos:line="135" pos:column="34">res<pos:position pos:line="135" pos:column="37"/></name><operator pos:line="135" pos:column="37">.<pos:position pos:line="135" pos:column="38"/></operator><name pos:line="135" pos:column="38">rm_vn_mode<pos:position pos:line="135" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="135" pos:column="50"/></condition><then pos:line="135" pos:column="50">
		<block pos:line="136" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="137" pos:column="25">NOTICE<pos:position pos:line="137" pos:column="31"/></name> <argument_list pos:line="137" pos:column="32">(<argument><expr><literal type="string" pos:line="137" pos:column="33">"ntpd plugin: Received request packet, "<pos:position pos:line="137" pos:column="73"/></literal>
					<literal type="string" pos:line="138" pos:column="41">"wanted response"<pos:position pos:line="138" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="60"/></expr_stmt>
			<continue pos:line="139" pos:column="25">continue;<pos:position pos:line="139" pos:column="34"/></continue>
		}<pos:position pos:line="140" pos:column="18"/></block></then></if>
		<if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><call><name pos:line="141" pos:column="21">INFO_MBZ<pos:position pos:line="141" pos:column="29"/></name> <argument_list pos:line="141" pos:column="30">(<argument><expr><name><name pos:line="141" pos:column="31">res<pos:position pos:line="141" pos:column="34"/></name><operator pos:line="141" pos:column="34">.<pos:position pos:line="141" pos:column="35"/></operator><name pos:line="141" pos:column="35">mbz_itemsize<pos:position pos:line="141" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="141" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="141" pos:column="49"/></condition><then pos:line="141" pos:column="49">
		<block pos:line="142" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="143" pos:column="25">WARNING<pos:position pos:line="143" pos:column="32"/></name> <argument_list pos:line="143" pos:column="33">(<argument><expr><literal type="string" pos:line="143" pos:column="34">"ntpd plugin: Received packet with nonzero "<pos:position pos:line="143" pos:column="78"/></literal>
					<literal type="string" pos:line="144" pos:column="41">"MBZ field!"<pos:position pos:line="144" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="55"/></expr_stmt>
			<continue pos:line="145" pos:column="25">continue;<pos:position pos:line="145" pos:column="34"/></continue>
		}<pos:position pos:line="146" pos:column="18"/></block></then></if>
		<if pos:line="147" pos:column="17">if <condition pos:line="147" pos:column="20">(<expr><name><name pos:line="147" pos:column="21">res<pos:position pos:line="147" pos:column="24"/></name><operator pos:line="147" pos:column="24">.<pos:position pos:line="147" pos:column="25"/></operator><name pos:line="147" pos:column="25">implementation<pos:position pos:line="147" pos:column="39"/></name></name> <operator pos:line="147" pos:column="40">!=<pos:position pos:line="147" pos:column="42"/></operator> <name pos:line="147" pos:column="43">IMPL_XNTPD<pos:position pos:line="147" pos:column="53"/></name></expr>)<pos:position pos:line="147" pos:column="54"/></condition><then pos:line="147" pos:column="54">
		<block pos:line="148" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="149" pos:column="25">WARNING<pos:position pos:line="149" pos:column="32"/></name> <argument_list pos:line="149" pos:column="33">(<argument><expr><literal type="string" pos:line="149" pos:column="34">"ntpd plugin: Asked for request of type %i, "<pos:position pos:line="149" pos:column="79"/></literal>
					<literal type="string" pos:line="150" pos:column="41">"got %i"<pos:position pos:line="150" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="150" pos:column="51">(<pos:position pos:line="150" pos:column="52"/></operator><name pos:line="150" pos:column="52">int<pos:position pos:line="150" pos:column="55"/></name><operator pos:line="150" pos:column="55">)<pos:position pos:line="150" pos:column="56"/></operator> <name pos:line="150" pos:column="57">IMPL_XNTPD<pos:position pos:line="150" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="150" pos:column="69">(<pos:position pos:line="150" pos:column="70"/></operator><name pos:line="150" pos:column="70">int<pos:position pos:line="150" pos:column="73"/></name><operator pos:line="150" pos:column="73">)<pos:position pos:line="150" pos:column="74"/></operator> <name><name pos:line="150" pos:column="75">res<pos:position pos:line="150" pos:column="78"/></name><operator pos:line="150" pos:column="78">.<pos:position pos:line="150" pos:column="79"/></operator><name pos:line="150" pos:column="79">implementation<pos:position pos:line="150" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="150" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="95"/></expr_stmt>
			<continue pos:line="151" pos:column="25">continue;<pos:position pos:line="151" pos:column="34"/></continue>
		}<pos:position pos:line="152" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="154" pos:column="17">/* Check for error code */</comment>
		<if pos:line="155" pos:column="17">if <condition pos:line="155" pos:column="20">(<expr><call><name pos:line="155" pos:column="21">INFO_ERR<pos:position pos:line="155" pos:column="29"/></name> <argument_list pos:line="155" pos:column="30">(<argument><expr><name><name pos:line="155" pos:column="31">res<pos:position pos:line="155" pos:column="34"/></name><operator pos:line="155" pos:column="34">.<pos:position pos:line="155" pos:column="35"/></operator><name pos:line="155" pos:column="35">err_nitems<pos:position pos:line="155" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="46"/></argument_list></call> <operator pos:line="155" pos:column="47">!=<pos:position pos:line="155" pos:column="49"/></operator> <literal type="number" pos:line="155" pos:column="50">0<pos:position pos:line="155" pos:column="51"/></literal></expr>)<pos:position pos:line="155" pos:column="52"/></condition><then pos:line="155" pos:column="52">
		<block pos:line="156" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="157" pos:column="25">ERROR<pos:position pos:line="157" pos:column="30"/></name> <argument_list pos:line="157" pos:column="31">(<argument><expr><literal type="string" pos:line="157" pos:column="32">"ntpd plugin: Received error code %i"<pos:position pos:line="157" pos:column="69"/></literal></expr></argument>,
					<argument><expr><operator pos:line="158" pos:column="41">(<pos:position pos:line="158" pos:column="42"/></operator><name pos:line="158" pos:column="42">int<pos:position pos:line="158" pos:column="45"/></name><operator pos:line="158" pos:column="45">)<pos:position pos:line="158" pos:column="46"/></operator> <call><name pos:line="158" pos:column="47">INFO_ERR<pos:position pos:line="158" pos:column="55"/></name><argument_list pos:line="158" pos:column="55">(<argument><expr><name><name pos:line="158" pos:column="56">res<pos:position pos:line="158" pos:column="59"/></name><operator pos:line="158" pos:column="59">.<pos:position pos:line="158" pos:column="60"/></operator><name pos:line="158" pos:column="60">err_nitems<pos:position pos:line="158" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="158" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="73"/></expr_stmt>
			<return pos:line="159" pos:column="25">return <expr><operator pos:line="159" pos:column="32">(<pos:position pos:line="159" pos:column="33"/></operator><operator pos:line="159" pos:column="33">(<pos:position pos:line="159" pos:column="34"/></operator><name pos:line="159" pos:column="34">int<pos:position pos:line="159" pos:column="37"/></name><operator pos:line="159" pos:column="37">)<pos:position pos:line="159" pos:column="38"/></operator> <call><name pos:line="159" pos:column="39">INFO_ERR<pos:position pos:line="159" pos:column="47"/></name> <argument_list pos:line="159" pos:column="48">(<argument><expr><name><name pos:line="159" pos:column="49">res<pos:position pos:line="159" pos:column="52"/></name><operator pos:line="159" pos:column="52">.<pos:position pos:line="159" pos:column="53"/></operator><name pos:line="159" pos:column="53">err_nitems<pos:position pos:line="159" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="64"/></argument_list></call><operator pos:line="159" pos:column="64">)<pos:position pos:line="159" pos:column="65"/></operator></expr>;<pos:position pos:line="159" pos:column="66"/></return>
		}<pos:position pos:line="160" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="162" pos:column="17">/* extract number of items in this packet and the size of these items */</comment>
		<expr_stmt><expr><name pos:line="163" pos:column="17">pkt_item_num<pos:position pos:line="163" pos:column="29"/></name> <operator pos:line="163" pos:column="30">=<pos:position pos:line="163" pos:column="31"/></operator> <call><name pos:line="163" pos:column="32">INFO_NITEMS<pos:position pos:line="163" pos:column="43"/></name> <argument_list pos:line="163" pos:column="44">(<argument><expr><name><name pos:line="163" pos:column="45">res<pos:position pos:line="163" pos:column="48"/></name><operator pos:line="163" pos:column="48">.<pos:position pos:line="163" pos:column="49"/></operator><name pos:line="163" pos:column="49">err_nitems<pos:position pos:line="163" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="163" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="164" pos:column="17">pkt_item_len<pos:position pos:line="164" pos:column="29"/></name> <operator pos:line="164" pos:column="30">=<pos:position pos:line="164" pos:column="31"/></operator> <call><name pos:line="164" pos:column="32">INFO_ITEMSIZE<pos:position pos:line="164" pos:column="45"/></name> <argument_list pos:line="164" pos:column="46">(<argument><expr><name><name pos:line="164" pos:column="47">res<pos:position pos:line="164" pos:column="50"/></name><operator pos:line="164" pos:column="50">.<pos:position pos:line="164" pos:column="51"/></operator><name pos:line="164" pos:column="51">mbz_itemsize<pos:position pos:line="164" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="65"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="165" pos:column="17">DEBUG<pos:position pos:line="165" pos:column="22"/></name> <argument_list pos:line="165" pos:column="23">(<argument><expr><literal type="string" pos:line="165" pos:column="24">"pkt_item_num = %i; pkt_item_len = %i;"<pos:position pos:line="165" pos:column="63"/></literal></expr></argument>,
				<argument><expr><name pos:line="166" pos:column="33">pkt_item_num<pos:position pos:line="166" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="47">pkt_item_len<pos:position pos:line="166" pos:column="59"/></name></expr></argument>)<pos:position pos:line="166" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="61"/></expr_stmt>

		<comment type="block" pos:line="168" pos:column="17">/* Check if the reported items fit in the packet */</comment>
		<if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><operator pos:line="169" pos:column="21">(<pos:position pos:line="169" pos:column="22"/></operator><name pos:line="169" pos:column="22">pkt_item_num<pos:position pos:line="169" pos:column="34"/></name> <operator pos:line="169" pos:column="35">*<pos:position pos:line="169" pos:column="36"/></operator> <name pos:line="169" pos:column="37">pkt_item_len<pos:position pos:line="169" pos:column="49"/></name><operator pos:line="169" pos:column="49">)<pos:position pos:line="169" pos:column="50"/></operator> <operator pos:line="169" pos:column="51">&gt;<pos:position pos:line="169" pos:column="55"/></operator> <operator pos:line="169" pos:column="53">(<pos:position pos:line="169" pos:column="54"/></operator><name pos:line="169" pos:column="54">status<pos:position pos:line="169" pos:column="60"/></name> <operator pos:line="169" pos:column="61">-<pos:position pos:line="169" pos:column="62"/></operator> <name pos:line="169" pos:column="63">RESP_HEADER_SIZE<pos:position pos:line="169" pos:column="79"/></name><operator pos:line="169" pos:column="79">)<pos:position pos:line="169" pos:column="80"/></operator></expr>)<pos:position pos:line="169" pos:column="81"/></condition><then pos:line="169" pos:column="81">
		<block pos:line="170" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="171" pos:column="25">ERROR<pos:position pos:line="171" pos:column="30"/></name> <argument_list pos:line="171" pos:column="31">(<argument><expr><literal type="string" pos:line="171" pos:column="32">"ntpd plugin: %i items * %i bytes &gt; "<pos:position pos:line="171" pos:column="72"/></literal>
					<literal type="string" pos:line="172" pos:column="41">"%i bytes - %i bytes header"<pos:position pos:line="172" pos:column="69"/></literal></expr></argument>,
					<argument><expr><operator pos:line="173" pos:column="41">(<pos:position pos:line="173" pos:column="42"/></operator><name pos:line="173" pos:column="42">int<pos:position pos:line="173" pos:column="45"/></name><operator pos:line="173" pos:column="45">)<pos:position pos:line="173" pos:column="46"/></operator> <name pos:line="173" pos:column="47">pkt_item_num<pos:position pos:line="173" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="173" pos:column="61">(<pos:position pos:line="173" pos:column="62"/></operator><name pos:line="173" pos:column="62">int<pos:position pos:line="173" pos:column="65"/></name><operator pos:line="173" pos:column="65">)<pos:position pos:line="173" pos:column="66"/></operator> <name pos:line="173" pos:column="67">pkt_item_len<pos:position pos:line="173" pos:column="79"/></name></expr></argument>,
					<argument><expr><operator pos:line="174" pos:column="41">(<pos:position pos:line="174" pos:column="42"/></operator><name pos:line="174" pos:column="42">int<pos:position pos:line="174" pos:column="45"/></name><operator pos:line="174" pos:column="45">)<pos:position pos:line="174" pos:column="46"/></operator> <name pos:line="174" pos:column="47">status<pos:position pos:line="174" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="174" pos:column="55">(<pos:position pos:line="174" pos:column="56"/></operator><name pos:line="174" pos:column="56">int<pos:position pos:line="174" pos:column="59"/></name><operator pos:line="174" pos:column="59">)<pos:position pos:line="174" pos:column="60"/></operator> <name pos:line="174" pos:column="61">RESP_HEADER_SIZE<pos:position pos:line="174" pos:column="77"/></name></expr></argument>)<pos:position pos:line="174" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="79"/></expr_stmt>
			<continue pos:line="175" pos:column="25">continue;<pos:position pos:line="175" pos:column="34"/></continue>
		}<pos:position pos:line="176" pos:column="18"/></block></then></if>

		<if pos:line="178" pos:column="17">if <condition pos:line="178" pos:column="20">(<expr><name pos:line="178" pos:column="21">pkt_item_len<pos:position pos:line="178" pos:column="33"/></name> <operator pos:line="178" pos:column="34">&gt;<pos:position pos:line="178" pos:column="38"/></operator> <name pos:line="178" pos:column="36">res_item_size<pos:position pos:line="178" pos:column="49"/></name></expr>)<pos:position pos:line="178" pos:column="50"/></condition><then pos:line="178" pos:column="50">
		<block pos:line="179" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="180" pos:column="25">ERROR<pos:position pos:line="180" pos:column="30"/></name> <argument_list pos:line="180" pos:column="31">(<argument><expr><literal type="string" pos:line="180" pos:column="32">"ntpd plugin: (pkt_item_len = %i) "<pos:position pos:line="180" pos:column="67"/></literal>
					<literal type="string" pos:line="181" pos:column="41">"&gt;= (res_item_size = %i)"<pos:position pos:line="181" pos:column="69"/></literal></expr></argument>,
					<argument><expr><name pos:line="182" pos:column="41">pkt_item_len<pos:position pos:line="182" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="182" pos:column="55">res_item_size<pos:position pos:line="182" pos:column="68"/></name></expr></argument>)<pos:position pos:line="182" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="70"/></expr_stmt>
			<continue pos:line="183" pos:column="25">continue;<pos:position pos:line="183" pos:column="34"/></continue>
		}<pos:position pos:line="184" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="186" pos:column="17">/* If this is the first packet (time wise, not sequence wise),
		 * set `res_size'. If it's not the first packet check if the
		 * items have the same size. Discard invalid packets. */</comment>
		<if pos:line="189" pos:column="17">if <condition pos:line="189" pos:column="20">(<expr><name pos:line="189" pos:column="21">items_num<pos:position pos:line="189" pos:column="30"/></name> <operator pos:line="189" pos:column="31">==<pos:position pos:line="189" pos:column="33"/></operator> <literal type="number" pos:line="189" pos:column="34">0<pos:position pos:line="189" pos:column="35"/></literal></expr>)<pos:position pos:line="189" pos:column="36"/></condition><then pos:line="189" pos:column="36"> <comment type="block" pos:line="189" pos:column="37">/* first packet */</comment>
		<block pos:line="190" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="191" pos:column="25">DEBUG<pos:position pos:line="191" pos:column="30"/></name> <argument_list pos:line="191" pos:column="31">(<argument><expr><literal type="string" pos:line="191" pos:column="32">"*res_size = %i"<pos:position pos:line="191" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="50">pkt_item_len<pos:position pos:line="191" pos:column="62"/></name></expr></argument>)<pos:position pos:line="191" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><operator pos:line="192" pos:column="25">*<pos:position pos:line="192" pos:column="26"/></operator><name pos:line="192" pos:column="26">res_size<pos:position pos:line="192" pos:column="34"/></name> <operator pos:line="192" pos:column="35">=<pos:position pos:line="192" pos:column="36"/></operator> <name pos:line="192" pos:column="37">pkt_item_len<pos:position pos:line="192" pos:column="49"/></name></expr>;<pos:position pos:line="192" pos:column="50"/></expr_stmt>
		}<pos:position pos:line="193" pos:column="18"/></block></then>
		<elseif pos:line="194" pos:column="17">else <if pos:line="194" pos:column="22">if <condition pos:line="194" pos:column="25">(<expr><operator pos:line="194" pos:column="26">*<pos:position pos:line="194" pos:column="27"/></operator><name pos:line="194" pos:column="27">res_size<pos:position pos:line="194" pos:column="35"/></name> <operator pos:line="194" pos:column="36">!=<pos:position pos:line="194" pos:column="38"/></operator> <name pos:line="194" pos:column="39">pkt_item_len<pos:position pos:line="194" pos:column="51"/></name></expr>)<pos:position pos:line="194" pos:column="52"/></condition><then pos:line="194" pos:column="52">
		<block pos:line="195" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="196" pos:column="25">DEBUG<pos:position pos:line="196" pos:column="30"/></name> <argument_list pos:line="196" pos:column="31">(<argument><expr><literal type="string" pos:line="196" pos:column="32">"Error: *res_size = %i; pkt_item_len = %i;"<pos:position pos:line="196" pos:column="75"/></literal></expr></argument>,
					<argument><expr><operator pos:line="197" pos:column="41">*<pos:position pos:line="197" pos:column="42"/></operator><name pos:line="197" pos:column="42">res_size<pos:position pos:line="197" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="197" pos:column="52">pkt_item_len<pos:position pos:line="197" pos:column="64"/></name></expr></argument>)<pos:position pos:line="197" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="198" pos:column="25">ERROR<pos:position pos:line="198" pos:column="30"/></name> <argument_list pos:line="198" pos:column="31">(<argument><expr><literal type="string" pos:line="198" pos:column="32">"Item sizes differ."<pos:position pos:line="198" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="54"/></expr_stmt>
			<continue pos:line="199" pos:column="25">continue;<pos:position pos:line="199" pos:column="34"/></continue>
		}<pos:position pos:line="200" pos:column="18"/></block></then></if></elseif></if>

		<comment type="block" pos:line="202" pos:column="17">/*
		 * Because the items in the packet may be smaller than the
		 * items requested, the following holds true:
		 */</comment>
		<expr_stmt><expr><call><name pos:line="206" pos:column="17">assert<pos:position pos:line="206" pos:column="23"/></name> <argument_list pos:line="206" pos:column="24">(<argument><expr><operator pos:line="206" pos:column="25">(<pos:position pos:line="206" pos:column="26"/></operator><operator pos:line="206" pos:column="26">*<pos:position pos:line="206" pos:column="27"/></operator><name pos:line="206" pos:column="27">res_size<pos:position pos:line="206" pos:column="35"/></name> <operator pos:line="206" pos:column="36">==<pos:position pos:line="206" pos:column="38"/></operator> <name pos:line="206" pos:column="39">pkt_item_len<pos:position pos:line="206" pos:column="51"/></name><operator pos:line="206" pos:column="51">)<pos:position pos:line="206" pos:column="52"/></operator>
				<operator pos:line="207" pos:column="33">&amp;&amp;<pos:position pos:line="207" pos:column="43"/></operator> <operator pos:line="207" pos:column="36">(<pos:position pos:line="207" pos:column="37"/></operator><name pos:line="207" pos:column="37">pkt_item_len<pos:position pos:line="207" pos:column="49"/></name> <operator pos:line="207" pos:column="50">&lt;=<pos:position pos:line="207" pos:column="55"/></operator> <name pos:line="207" pos:column="53">res_item_size<pos:position pos:line="207" pos:column="66"/></name><operator pos:line="207" pos:column="66">)<pos:position pos:line="207" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="207" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="69"/></expr_stmt>

		<comment type="block" pos:line="209" pos:column="17">/* Calculate the padding. No idea why there might be any padding.. */</comment>
		<expr_stmt><expr><name pos:line="210" pos:column="17">pkt_padding<pos:position pos:line="210" pos:column="28"/></name> <operator pos:line="210" pos:column="29">=<pos:position pos:line="210" pos:column="30"/></operator> <literal type="number" pos:line="210" pos:column="31">0<pos:position pos:line="210" pos:column="32"/></literal></expr>;<pos:position pos:line="210" pos:column="33"/></expr_stmt>
		<if pos:line="211" pos:column="17">if <condition pos:line="211" pos:column="20">(<expr><name pos:line="211" pos:column="21">pkt_item_len<pos:position pos:line="211" pos:column="33"/></name> <operator pos:line="211" pos:column="34">&lt;<pos:position pos:line="211" pos:column="38"/></operator> <name pos:line="211" pos:column="36">res_item_size<pos:position pos:line="211" pos:column="49"/></name></expr>)<pos:position pos:line="211" pos:column="50"/></condition><then pos:line="211" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><name pos:line="212" pos:column="25">pkt_padding<pos:position pos:line="212" pos:column="36"/></name> <operator pos:line="212" pos:column="37">=<pos:position pos:line="212" pos:column="38"/></operator> <name pos:line="212" pos:column="39">res_item_size<pos:position pos:line="212" pos:column="52"/></name> <operator pos:line="212" pos:column="53">-<pos:position pos:line="212" pos:column="54"/></operator> <name pos:line="212" pos:column="55">pkt_item_len<pos:position pos:line="212" pos:column="67"/></name></expr>;<pos:position pos:line="212" pos:column="68"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="213" pos:column="17">DEBUG<pos:position pos:line="213" pos:column="22"/></name> <argument_list pos:line="213" pos:column="23">(<argument><expr><literal type="string" pos:line="213" pos:column="24">"res_item_size = %i; pkt_padding = %zi;"<pos:position pos:line="213" pos:column="64"/></literal></expr></argument>,
				<argument><expr><name pos:line="214" pos:column="33">res_item_size<pos:position pos:line="214" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="214" pos:column="48">pkt_padding<pos:position pos:line="214" pos:column="59"/></name></expr></argument>)<pos:position pos:line="214" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="61"/></expr_stmt>

		<comment type="block" pos:line="216" pos:column="17">/* Extract the sequence number */</comment>
		<expr_stmt><expr><name pos:line="217" pos:column="17">pkt_sequence<pos:position pos:line="217" pos:column="29"/></name> <operator pos:line="217" pos:column="30">=<pos:position pos:line="217" pos:column="31"/></operator> <call><name pos:line="217" pos:column="32">INFO_SEQ<pos:position pos:line="217" pos:column="40"/></name> <argument_list pos:line="217" pos:column="41">(<argument><expr><name><name pos:line="217" pos:column="42">res<pos:position pos:line="217" pos:column="45"/></name><operator pos:line="217" pos:column="45">.<pos:position pos:line="217" pos:column="46"/></operator><name pos:line="217" pos:column="46">auth_seq<pos:position pos:line="217" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="217" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="56"/></expr_stmt>
		<if pos:line="218" pos:column="17">if <condition pos:line="218" pos:column="20">(<expr><operator pos:line="218" pos:column="21">(<pos:position pos:line="218" pos:column="22"/></operator><name pos:line="218" pos:column="22">pkt_sequence<pos:position pos:line="218" pos:column="34"/></name> <operator pos:line="218" pos:column="35">&lt;<pos:position pos:line="218" pos:column="39"/></operator> <literal type="number" pos:line="218" pos:column="37">0<pos:position pos:line="218" pos:column="38"/></literal><operator pos:line="218" pos:column="38">)<pos:position pos:line="218" pos:column="39"/></operator> <operator pos:line="218" pos:column="40">||<pos:position pos:line="218" pos:column="42"/></operator> <operator pos:line="218" pos:column="43">(<pos:position pos:line="218" pos:column="44"/></operator><name pos:line="218" pos:column="44">pkt_sequence<pos:position pos:line="218" pos:column="56"/></name> <operator pos:line="218" pos:column="57">&gt;<pos:position pos:line="218" pos:column="61"/></operator> <name pos:line="218" pos:column="59">MAXSEQ<pos:position pos:line="218" pos:column="65"/></name><operator pos:line="218" pos:column="65">)<pos:position pos:line="218" pos:column="66"/></operator></expr>)<pos:position pos:line="218" pos:column="67"/></condition><then pos:line="218" pos:column="67">
		<block pos:line="219" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="220" pos:column="25">ERROR<pos:position pos:line="220" pos:column="30"/></name> <argument_list pos:line="220" pos:column="31">(<argument><expr><literal type="string" pos:line="220" pos:column="32">"ntpd plugin: Received packet with sequence %i"<pos:position pos:line="220" pos:column="79"/></literal></expr></argument>,
					<argument><expr><name pos:line="221" pos:column="41">pkt_sequence<pos:position pos:line="221" pos:column="53"/></name></expr></argument>)<pos:position pos:line="221" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="55"/></expr_stmt>
			<continue pos:line="222" pos:column="25">continue;<pos:position pos:line="222" pos:column="34"/></continue>
		}<pos:position pos:line="223" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="225" pos:column="17">/* Check if this sequence has been received before. If so, discard it. */</comment>
		<if pos:line="226" pos:column="17">if <condition pos:line="226" pos:column="20">(<expr><name><name pos:line="226" pos:column="21">pkt_recvd<pos:position pos:line="226" pos:column="30"/></name><index pos:line="226" pos:column="30">[<expr><name pos:line="226" pos:column="31">pkt_sequence<pos:position pos:line="226" pos:column="43"/></name></expr>]<pos:position pos:line="226" pos:column="44"/></index></name> <operator pos:line="226" pos:column="45">!=<pos:position pos:line="226" pos:column="47"/></operator> <literal type="char" pos:line="226" pos:column="48">'\0'<pos:position pos:line="226" pos:column="52"/></literal></expr>)<pos:position pos:line="226" pos:column="53"/></condition><then pos:line="226" pos:column="53">
		<block pos:line="227" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="228" pos:column="25">NOTICE<pos:position pos:line="228" pos:column="31"/></name> <argument_list pos:line="228" pos:column="32">(<argument><expr><literal type="string" pos:line="228" pos:column="33">"ntpd plugin: Sequence %i received twice"<pos:position pos:line="228" pos:column="74"/></literal></expr></argument>,
					<argument><expr><name pos:line="229" pos:column="41">pkt_sequence<pos:position pos:line="229" pos:column="53"/></name></expr></argument>)<pos:position pos:line="229" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="55"/></expr_stmt>
			<continue pos:line="230" pos:column="25">continue;<pos:position pos:line="230" pos:column="34"/></continue>
		}<pos:position pos:line="231" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="233" pos:column="17">/* If `pkt_lastseq != -1' another packet without `more bit' has
		 * been received. */</comment>
		<if pos:line="235" pos:column="17">if <condition pos:line="235" pos:column="20">(<expr><operator pos:line="235" pos:column="21">!<pos:position pos:line="235" pos:column="22"/></operator><call><name pos:line="235" pos:column="22">ISMORE<pos:position pos:line="235" pos:column="28"/></name> <argument_list pos:line="235" pos:column="29">(<argument><expr><name><name pos:line="235" pos:column="30">res<pos:position pos:line="235" pos:column="33"/></name><operator pos:line="235" pos:column="33">.<pos:position pos:line="235" pos:column="34"/></operator><name pos:line="235" pos:column="34">rm_vn_mode<pos:position pos:line="235" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="235" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="235" pos:column="46"/></condition><then pos:line="235" pos:column="46">
		<block pos:line="236" pos:column="17">{
			<if pos:line="237" pos:column="25">if <condition pos:line="237" pos:column="28">(<expr><name pos:line="237" pos:column="29">pkt_lastseq<pos:position pos:line="237" pos:column="40"/></name> <operator pos:line="237" pos:column="41">!=<pos:position pos:line="237" pos:column="43"/></operator> <operator pos:line="237" pos:column="44">-<pos:position pos:line="237" pos:column="45"/></operator><literal type="number" pos:line="237" pos:column="45">1<pos:position pos:line="237" pos:column="46"/></literal></expr>)<pos:position pos:line="237" pos:column="47"/></condition><then pos:line="237" pos:column="47">
			<block pos:line="238" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="239" pos:column="33">ERROR<pos:position pos:line="239" pos:column="38"/></name> <argument_list pos:line="239" pos:column="39">(<argument><expr><literal type="string" pos:line="239" pos:column="40">"ntpd plugin: Two packets which both "<pos:position pos:line="239" pos:column="78"/></literal>
						<literal type="string" pos:line="240" pos:column="49">"claim to be the last one in the "<pos:position pos:line="240" pos:column="83"/></literal>
						<literal type="string" pos:line="241" pos:column="49">"sequence have been received."<pos:position pos:line="241" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="241" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="81"/></expr_stmt>
				<continue pos:line="242" pos:column="33">continue;<pos:position pos:line="242" pos:column="42"/></continue>
			}<pos:position pos:line="243" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name pos:line="244" pos:column="25">pkt_lastseq<pos:position pos:line="244" pos:column="36"/></name> <operator pos:line="244" pos:column="37">=<pos:position pos:line="244" pos:column="38"/></operator> <name pos:line="244" pos:column="39">pkt_sequence<pos:position pos:line="244" pos:column="51"/></name></expr>;<pos:position pos:line="244" pos:column="52"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="245" pos:column="25">DEBUG<pos:position pos:line="245" pos:column="30"/></name> <argument_list pos:line="245" pos:column="31">(<argument><expr><literal type="string" pos:line="245" pos:column="32">"Last sequence = %i;"<pos:position pos:line="245" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="245" pos:column="55">pkt_lastseq<pos:position pos:line="245" pos:column="66"/></name></expr></argument>)<pos:position pos:line="245" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="68"/></expr_stmt>
		}<pos:position pos:line="246" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="248" pos:column="17">/*
		 * Enough with the checks. Copy the data now.
		 * We start by allocating some more memory.
		 */</comment>
		<expr_stmt><expr><call><name pos:line="252" pos:column="17">DEBUG<pos:position pos:line="252" pos:column="22"/></name> <argument_list pos:line="252" pos:column="23">(<argument><expr><literal type="string" pos:line="252" pos:column="24">"realloc (%p, %zu)"<pos:position pos:line="252" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="252" pos:column="45">(<pos:position pos:line="252" pos:column="46"/></operator><name pos:line="252" pos:column="46">void<pos:position pos:line="252" pos:column="50"/></name> <operator pos:line="252" pos:column="51">*<pos:position pos:line="252" pos:column="52"/></operator><operator pos:line="252" pos:column="52">)<pos:position pos:line="252" pos:column="53"/></operator> <operator pos:line="252" pos:column="54">*<pos:position pos:line="252" pos:column="55"/></operator><name pos:line="252" pos:column="55">res_data<pos:position pos:line="252" pos:column="63"/></name></expr></argument>,
				<argument><expr><operator pos:line="253" pos:column="33">(<pos:position pos:line="253" pos:column="34"/></operator><name pos:line="253" pos:column="34">items_num<pos:position pos:line="253" pos:column="43"/></name> <operator pos:line="253" pos:column="44">+<pos:position pos:line="253" pos:column="45"/></operator> <name pos:line="253" pos:column="46">pkt_item_num<pos:position pos:line="253" pos:column="58"/></name><operator pos:line="253" pos:column="58">)<pos:position pos:line="253" pos:column="59"/></operator> <operator pos:line="253" pos:column="60">*<pos:position pos:line="253" pos:column="61"/></operator> <name pos:line="253" pos:column="62">res_item_size<pos:position pos:line="253" pos:column="75"/></name></expr></argument>)<pos:position pos:line="253" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="254" pos:column="17">items<pos:position pos:line="254" pos:column="22"/></name> <operator pos:line="254" pos:column="23">=<pos:position pos:line="254" pos:column="24"/></operator> <call><name pos:line="254" pos:column="25">realloc<pos:position pos:line="254" pos:column="32"/></name> <argument_list pos:line="254" pos:column="33">(<argument><expr><operator pos:line="254" pos:column="34">(<pos:position pos:line="254" pos:column="35"/></operator><name pos:line="254" pos:column="35">void<pos:position pos:line="254" pos:column="39"/></name> <operator pos:line="254" pos:column="40">*<pos:position pos:line="254" pos:column="41"/></operator><operator pos:line="254" pos:column="41">)<pos:position pos:line="254" pos:column="42"/></operator> <operator pos:line="254" pos:column="43">*<pos:position pos:line="254" pos:column="44"/></operator><name pos:line="254" pos:column="44">res_data<pos:position pos:line="254" pos:column="52"/></name></expr></argument>,
				<argument><expr><operator pos:line="255" pos:column="33">(<pos:position pos:line="255" pos:column="34"/></operator><name pos:line="255" pos:column="34">items_num<pos:position pos:line="255" pos:column="43"/></name> <operator pos:line="255" pos:column="44">+<pos:position pos:line="255" pos:column="45"/></operator> <name pos:line="255" pos:column="46">pkt_item_num<pos:position pos:line="255" pos:column="58"/></name><operator pos:line="255" pos:column="58">)<pos:position pos:line="255" pos:column="59"/></operator> <operator pos:line="255" pos:column="60">*<pos:position pos:line="255" pos:column="61"/></operator> <name pos:line="255" pos:column="62">res_item_size<pos:position pos:line="255" pos:column="75"/></name></expr></argument>)<pos:position pos:line="255" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="77"/></expr_stmt>
		<if pos:line="256" pos:column="17">if <condition pos:line="256" pos:column="20">(<expr><name pos:line="256" pos:column="21">items<pos:position pos:line="256" pos:column="26"/></name> <operator pos:line="256" pos:column="27">==<pos:position pos:line="256" pos:column="29"/></operator> <name pos:line="256" pos:column="30">NULL<pos:position pos:line="256" pos:column="34"/></name></expr>)<pos:position pos:line="256" pos:column="35"/></condition><then pos:line="256" pos:column="35">
		<block pos:line="257" pos:column="17">{
			<expr_stmt><expr><name pos:line="258" pos:column="25">items<pos:position pos:line="258" pos:column="30"/></name> <operator pos:line="258" pos:column="31">=<pos:position pos:line="258" pos:column="32"/></operator> <operator pos:line="258" pos:column="33">*<pos:position pos:line="258" pos:column="34"/></operator><name pos:line="258" pos:column="34">res_data<pos:position pos:line="258" pos:column="42"/></name></expr>;<pos:position pos:line="258" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="259" pos:column="25">ERROR<pos:position pos:line="259" pos:column="30"/></name> <argument_list pos:line="259" pos:column="31">(<argument><expr><literal type="string" pos:line="259" pos:column="32">"ntpd plugin: realloc failed."<pos:position pos:line="259" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="259" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="64"/></expr_stmt>
			<continue pos:line="260" pos:column="25">continue;<pos:position pos:line="260" pos:column="34"/></continue>
		}<pos:position pos:line="261" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name pos:line="262" pos:column="17">items_num<pos:position pos:line="262" pos:column="26"/></name> <operator pos:line="262" pos:column="27">+=<pos:position pos:line="262" pos:column="29"/></operator> <name pos:line="262" pos:column="30">pkt_item_num<pos:position pos:line="262" pos:column="42"/></name></expr>;<pos:position pos:line="262" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="263" pos:column="17">*<pos:position pos:line="263" pos:column="18"/></operator><name pos:line="263" pos:column="18">res_data<pos:position pos:line="263" pos:column="26"/></name> <operator pos:line="263" pos:column="27">=<pos:position pos:line="263" pos:column="28"/></operator> <name pos:line="263" pos:column="29">items<pos:position pos:line="263" pos:column="34"/></name></expr>;<pos:position pos:line="263" pos:column="35"/></expr_stmt>

		<for pos:line="265" pos:column="17">for <control pos:line="265" pos:column="21">(<init><expr><name pos:line="265" pos:column="22">i<pos:position pos:line="265" pos:column="23"/></name> <operator pos:line="265" pos:column="24">=<pos:position pos:line="265" pos:column="25"/></operator> <literal type="number" pos:line="265" pos:column="26">0<pos:position pos:line="265" pos:column="27"/></literal></expr>;<pos:position pos:line="265" pos:column="28"/></init> <condition><expr><name pos:line="265" pos:column="29">i<pos:position pos:line="265" pos:column="30"/></name> <operator pos:line="265" pos:column="31">&lt;<pos:position pos:line="265" pos:column="35"/></operator> <name pos:line="265" pos:column="33">pkt_item_num<pos:position pos:line="265" pos:column="45"/></name></expr>;<pos:position pos:line="265" pos:column="46"/></condition> <incr><expr><name pos:line="265" pos:column="47">i<pos:position pos:line="265" pos:column="48"/></name><operator pos:line="265" pos:column="48">++<pos:position pos:line="265" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="265" pos:column="51"/></control>
		<block pos:line="266" pos:column="17">{
			<comment type="block" pos:line="267" pos:column="25">/* dst: There are already `*res_items' items with
			 *      res_item_size bytes each in in `*res_data'. Set
			 *      dst to the first byte after that. */</comment>
			<decl_stmt><decl><type><name pos:line="270" pos:column="25">void<pos:position pos:line="270" pos:column="29"/></name> <modifier pos:line="270" pos:column="30">*<pos:position pos:line="270" pos:column="31"/></modifier></type><name pos:line="270" pos:column="31">dst<pos:position pos:line="270" pos:column="34"/></name> <init pos:line="270" pos:column="35">= <expr><operator pos:line="270" pos:column="37">(<pos:position pos:line="270" pos:column="38"/></operator><name pos:line="270" pos:column="38">void<pos:position pos:line="270" pos:column="42"/></name> <operator pos:line="270" pos:column="43">*<pos:position pos:line="270" pos:column="44"/></operator><operator pos:line="270" pos:column="44">)<pos:position pos:line="270" pos:column="45"/></operator> <operator pos:line="270" pos:column="46">(<pos:position pos:line="270" pos:column="47"/></operator><operator pos:line="270" pos:column="47">*<pos:position pos:line="270" pos:column="48"/></operator><name pos:line="270" pos:column="48">res_data<pos:position pos:line="270" pos:column="56"/></name> <operator pos:line="270" pos:column="57">+<pos:position pos:line="270" pos:column="58"/></operator> <operator pos:line="270" pos:column="59">(<pos:position pos:line="270" pos:column="60"/></operator><operator pos:line="270" pos:column="60">(<pos:position pos:line="270" pos:column="61"/></operator><operator pos:line="270" pos:column="61">*<pos:position pos:line="270" pos:column="62"/></operator><name pos:line="270" pos:column="62">res_items<pos:position pos:line="270" pos:column="71"/></name><operator pos:line="270" pos:column="71">)<pos:position pos:line="270" pos:column="72"/></operator> <operator pos:line="270" pos:column="73">*<pos:position pos:line="270" pos:column="74"/></operator> <name pos:line="270" pos:column="75">res_item_size<pos:position pos:line="270" pos:column="88"/></name><operator pos:line="270" pos:column="88">)<pos:position pos:line="270" pos:column="89"/></operator><operator pos:line="270" pos:column="89">)<pos:position pos:line="270" pos:column="90"/></operator></expr></init></decl>;<pos:position pos:line="270" pos:column="91"/></decl_stmt>
			<comment type="block" pos:line="271" pos:column="25">/* src: We use `pkt_item_len' to calculate the offset
			 *      from the beginning of the packet, because the
			 *      items in the packet may be smaller than the
			 *      items that were requested. We skip `i' such
			 *      items. */</comment>
			<decl_stmt><decl><type><name pos:line="276" pos:column="25">void<pos:position pos:line="276" pos:column="29"/></name> <modifier pos:line="276" pos:column="30">*<pos:position pos:line="276" pos:column="31"/></modifier></type><name pos:line="276" pos:column="31">src<pos:position pos:line="276" pos:column="34"/></name> <init pos:line="276" pos:column="35">= <expr><operator pos:line="276" pos:column="37">(<pos:position pos:line="276" pos:column="38"/></operator><name pos:line="276" pos:column="38">void<pos:position pos:line="276" pos:column="42"/></name> <operator pos:line="276" pos:column="43">*<pos:position pos:line="276" pos:column="44"/></operator><operator pos:line="276" pos:column="44">)<pos:position pos:line="276" pos:column="45"/></operator> <operator pos:line="276" pos:column="46">(<pos:position pos:line="276" pos:column="47"/></operator><operator pos:line="276" pos:column="47">(<pos:position pos:line="276" pos:column="48"/></operator><operator pos:line="276" pos:column="48">(<pos:position pos:line="276" pos:column="49"/></operator><name pos:line="276" pos:column="49">char<pos:position pos:line="276" pos:column="53"/></name> <operator pos:line="276" pos:column="54">*<pos:position pos:line="276" pos:column="55"/></operator><operator pos:line="276" pos:column="55">)<pos:position pos:line="276" pos:column="56"/></operator> <name><name pos:line="276" pos:column="57">res<pos:position pos:line="276" pos:column="60"/></name><operator pos:line="276" pos:column="60">.<pos:position pos:line="276" pos:column="61"/></operator><name pos:line="276" pos:column="61">data<pos:position pos:line="276" pos:column="65"/></name></name><operator pos:line="276" pos:column="65">)<pos:position pos:line="276" pos:column="66"/></operator> <operator pos:line="276" pos:column="67">+<pos:position pos:line="276" pos:column="68"/></operator> <operator pos:line="276" pos:column="69">(<pos:position pos:line="276" pos:column="70"/></operator><name pos:line="276" pos:column="70">i<pos:position pos:line="276" pos:column="71"/></name> <operator pos:line="276" pos:column="72">*<pos:position pos:line="276" pos:column="73"/></operator> <name pos:line="276" pos:column="74">pkt_item_len<pos:position pos:line="276" pos:column="86"/></name><operator pos:line="276" pos:column="86">)<pos:position pos:line="276" pos:column="87"/></operator><operator pos:line="276" pos:column="87">)<pos:position pos:line="276" pos:column="88"/></operator></expr></init></decl>;<pos:position pos:line="276" pos:column="89"/></decl_stmt>

			<comment type="block" pos:line="278" pos:column="25">/* Set the padding to zeros */</comment>
			<if pos:line="279" pos:column="25">if <condition pos:line="279" pos:column="28">(<expr><name pos:line="279" pos:column="29">pkt_padding<pos:position pos:line="279" pos:column="40"/></name> <operator pos:line="279" pos:column="41">!=<pos:position pos:line="279" pos:column="43"/></operator> <literal type="number" pos:line="279" pos:column="44">0<pos:position pos:line="279" pos:column="45"/></literal></expr>)<pos:position pos:line="279" pos:column="46"/></condition><then pos:line="279" pos:column="46">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="280" pos:column="33">memset<pos:position pos:line="280" pos:column="39"/></name> <argument_list pos:line="280" pos:column="40">(<argument><expr><name pos:line="280" pos:column="41">dst<pos:position pos:line="280" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="280" pos:column="46">'\0'<pos:position pos:line="280" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="280" pos:column="52">res_item_size<pos:position pos:line="280" pos:column="65"/></name></expr></argument>)<pos:position pos:line="280" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="67"/></expr_stmt></block></then></if>
			<expr_stmt><expr><call><name pos:line="281" pos:column="25">memcpy<pos:position pos:line="281" pos:column="31"/></name> <argument_list pos:line="281" pos:column="32">(<argument><expr><name pos:line="281" pos:column="33">dst<pos:position pos:line="281" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="281" pos:column="38">src<pos:position pos:line="281" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="281" pos:column="43">(<pos:position pos:line="281" pos:column="44"/></operator><name pos:line="281" pos:column="44">size_t<pos:position pos:line="281" pos:column="50"/></name><operator pos:line="281" pos:column="50">)<pos:position pos:line="281" pos:column="51"/></operator> <name pos:line="281" pos:column="52">pkt_item_len<pos:position pos:line="281" pos:column="64"/></name></expr></argument>)<pos:position pos:line="281" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="66"/></expr_stmt>

			<comment type="block" pos:line="283" pos:column="25">/* Increment `*res_items' by one, so `dst' will end up
			 * one further in the next round. */</comment>
			<expr_stmt><expr><operator pos:line="285" pos:column="25">(<pos:position pos:line="285" pos:column="26"/></operator><operator pos:line="285" pos:column="26">*<pos:position pos:line="285" pos:column="27"/></operator><name pos:line="285" pos:column="27">res_items<pos:position pos:line="285" pos:column="36"/></name><operator pos:line="285" pos:column="36">)<pos:position pos:line="285" pos:column="37"/></operator><operator pos:line="285" pos:column="37">++<pos:position pos:line="285" pos:column="39"/></operator></expr>;<pos:position pos:line="285" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="286" pos:column="18"/></block></for> <comment type="block" pos:line="286" pos:column="19">/* for (pkt_item_num) */</comment>

		<expr_stmt><expr><name><name pos:line="288" pos:column="17">pkt_recvd<pos:position pos:line="288" pos:column="26"/></name><index pos:line="288" pos:column="26">[<expr><name pos:line="288" pos:column="27">pkt_sequence<pos:position pos:line="288" pos:column="39"/></name></expr>]<pos:position pos:line="288" pos:column="40"/></index></name> <operator pos:line="288" pos:column="41">=<pos:position pos:line="288" pos:column="42"/></operator> <operator pos:line="288" pos:column="43">(<pos:position pos:line="288" pos:column="44"/></operator><name pos:line="288" pos:column="44">char<pos:position pos:line="288" pos:column="48"/></name><operator pos:line="288" pos:column="48">)<pos:position pos:line="288" pos:column="49"/></operator> <literal type="number" pos:line="288" pos:column="50">1<pos:position pos:line="288" pos:column="51"/></literal></expr>;<pos:position pos:line="288" pos:column="52"/></expr_stmt>
		<expr_stmt><expr><name pos:line="289" pos:column="17">pkt_recvd_num<pos:position pos:line="289" pos:column="30"/></name><operator pos:line="289" pos:column="30">++<pos:position pos:line="289" pos:column="32"/></operator></expr>;<pos:position pos:line="289" pos:column="33"/></expr_stmt>

		<if pos:line="291" pos:column="17">if <condition pos:line="291" pos:column="20">(<expr><operator pos:line="291" pos:column="21">(<pos:position pos:line="291" pos:column="22"/></operator><name pos:line="291" pos:column="22">pkt_recvd_num<pos:position pos:line="291" pos:column="35"/></name> <operator pos:line="291" pos:column="36">-<pos:position pos:line="291" pos:column="37"/></operator> <literal type="number" pos:line="291" pos:column="38">1<pos:position pos:line="291" pos:column="39"/></literal><operator pos:line="291" pos:column="39">)<pos:position pos:line="291" pos:column="40"/></operator> <operator pos:line="291" pos:column="41">==<pos:position pos:line="291" pos:column="43"/></operator> <name pos:line="291" pos:column="44">pkt_lastseq<pos:position pos:line="291" pos:column="55"/></name></expr>)<pos:position pos:line="291" pos:column="56"/></condition><then pos:line="291" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><name pos:line="292" pos:column="25">done<pos:position pos:line="292" pos:column="29"/></name> <operator pos:line="292" pos:column="30">=<pos:position pos:line="292" pos:column="31"/></operator> <literal type="number" pos:line="292" pos:column="32">1<pos:position pos:line="292" pos:column="33"/></literal></expr>;<pos:position pos:line="292" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="293" pos:column="10"/></block></while> <comment type="block" pos:line="293" pos:column="11">/* while (done == 0) */</comment>

	<return pos:line="295" pos:column="9">return <expr><operator pos:line="295" pos:column="16">(<pos:position pos:line="295" pos:column="17"/></operator><literal type="number" pos:line="295" pos:column="17">0<pos:position pos:line="295" pos:column="18"/></literal><operator pos:line="295" pos:column="18">)<pos:position pos:line="295" pos:column="19"/></operator></expr>;<pos:position pos:line="295" pos:column="20"/></return>
}<pos:position pos:line="296" pos:column="2"/></block></function></unit>

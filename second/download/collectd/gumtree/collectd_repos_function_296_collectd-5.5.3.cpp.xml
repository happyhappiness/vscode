<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_296_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">kafka_config_topic<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">rd_kafka_conf_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">conf<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="55">oconfig_item_t<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">ci<pos:position pos:line="1" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="74"/></parameter_list> <comment type="block" pos:line="1" pos:column="75">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type>                          <name pos:line="3" pos:column="34">status<pos:position pos:line="3" pos:column="40"/></name></decl>;<pos:position pos:line="3" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type>                          <name pos:line="4" pos:column="34">i<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">kafka_topic_context<pos:position pos:line="5" pos:column="31"/></name></name>  <modifier pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></modifier></type><name pos:line="5" pos:column="34">tctx<pos:position pos:line="5" pos:column="38"/></name></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name>                        <modifier pos:line="6" pos:column="33">*<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="34">key<pos:position pos:line="6" pos:column="37"/></name> <init pos:line="6" pos:column="38">= <expr><name pos:line="6" pos:column="40">NULL<pos:position pos:line="6" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name>                        <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">val<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type>                         <name><name pos:line="8" pos:column="34">callback_name<pos:position pos:line="8" pos:column="47"/></name><index pos:line="8" pos:column="47">[<expr><name pos:line="8" pos:column="48">DATA_MAX_NAME_LEN<pos:position pos:line="8" pos:column="65"/></name></expr>]<pos:position pos:line="8" pos:column="66"/></index></name></decl>;<pos:position pos:line="8" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name></type>                         <name><name pos:line="9" pos:column="34">errbuf<pos:position pos:line="9" pos:column="40"/></name><index pos:line="9" pos:column="40">[<expr><literal type="number" pos:line="9" pos:column="41">1024<pos:position pos:line="9" pos:column="45"/></literal></expr>]<pos:position pos:line="9" pos:column="46"/></index></name></decl>;<pos:position pos:line="9" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">user_data_t<pos:position pos:line="10" pos:column="16"/></name></type>                  <name pos:line="10" pos:column="34">ud<pos:position pos:line="10" pos:column="36"/></name></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">oconfig_item_t<pos:position pos:line="11" pos:column="23"/></name>              <modifier pos:line="11" pos:column="37">*<pos:position pos:line="11" pos:column="38"/></modifier></type><name pos:line="11" pos:column="38">child<pos:position pos:line="11" pos:column="43"/></name></decl>;<pos:position pos:line="11" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">rd_kafka_conf_res_t<pos:position pos:line="12" pos:column="24"/></name></type>          <name pos:line="12" pos:column="34">ret<pos:position pos:line="12" pos:column="37"/></name></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">tctx<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <call><name pos:line="14" pos:column="21">calloc<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><literal type="number" pos:line="14" pos:column="28">1<pos:position pos:line="14" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="31">sizeof <argument_list pos:line="14" pos:column="38">(<argument><expr><operator pos:line="14" pos:column="39">*<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">tctx<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call><operator pos:line="14" pos:column="46">)<pos:position pos:line="14" pos:column="47"/></operator> <operator pos:line="14" pos:column="48">==<pos:position pos:line="14" pos:column="50"/></operator> <name pos:line="14" pos:column="51">NULL<pos:position pos:line="14" pos:column="55"/></name></expr>)<pos:position pos:line="14" pos:column="56"/></condition><then pos:line="14" pos:column="56"> <block pos:line="14" pos:column="57">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"write_kafka plugin: calloc failed."<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">tctx<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">-&gt;<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="11">escape_char<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="char" pos:line="19" pos:column="25">'.'<pos:position pos:line="19" pos:column="28"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">tctx<pos:position pos:line="20" pos:column="9"/></name><operator pos:line="20" pos:column="9">-&gt;<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="11">store_rates<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">tctx<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">format<pos:position pos:line="21" pos:column="17"/></name></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">KAFKA_FORMAT_JSON<pos:position pos:line="21" pos:column="37"/></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name><name pos:line="23" pos:column="10">tctx<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">kafka_conf<pos:position pos:line="23" pos:column="26"/></name></name> <operator pos:line="23" pos:column="27">=<pos:position pos:line="23" pos:column="28"/></operator> <call><name pos:line="23" pos:column="29">rd_kafka_conf_dup<pos:position pos:line="23" pos:column="46"/></name><argument_list pos:line="23" pos:column="46">(<argument><expr><name pos:line="23" pos:column="47">conf<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call><operator pos:line="23" pos:column="52">)<pos:position pos:line="23" pos:column="53"/></operator> <operator pos:line="23" pos:column="54">==<pos:position pos:line="23" pos:column="56"/></operator> <name pos:line="23" pos:column="57">NULL<pos:position pos:line="23" pos:column="61"/></name></expr>)<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62"> <block pos:line="23" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">sfree<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">tctx<pos:position pos:line="24" pos:column="19"/></name></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">ERROR<pos:position pos:line="25" pos:column="14"/></name><argument_list pos:line="25" pos:column="14">(<argument><expr><literal type="string" pos:line="25" pos:column="15">"write_kafka plugin: cannot allocate memory for kafka config"<pos:position pos:line="25" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="78"/></expr_stmt>
        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

<cpp:ifdef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifdef<pos:position pos:line="29" pos:column="7"/></cpp:directive> <name pos:line="29" pos:column="8">HAVE_LIBRDKAFKA_LOG_CB<pos:position pos:line="29" pos:column="30"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">rd_kafka_conf_set_log_cb<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name><name pos:line="30" pos:column="30">tctx<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">kafka_conf<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="48">kafka_log<pos:position pos:line="30" pos:column="57"/></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">tctx<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">conf<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <call><name pos:line="33" pos:column="23">rd_kafka_topic_conf_new<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">()<pos:position pos:line="33" pos:column="48"/></argument_list></call><operator pos:line="33" pos:column="48">)<pos:position pos:line="33" pos:column="49"/></operator> <operator pos:line="33" pos:column="50">==<pos:position pos:line="33" pos:column="52"/></operator> <name pos:line="33" pos:column="53">NULL<pos:position pos:line="33" pos:column="57"/></name></expr>)<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58"> <block pos:line="33" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">rd_kafka_conf_destroy<pos:position pos:line="34" pos:column="30"/></name><argument_list pos:line="34" pos:column="30">(<argument><expr><name><name pos:line="34" pos:column="31">tctx<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">kafka_conf<pos:position pos:line="34" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">sfree<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">tctx<pos:position pos:line="35" pos:column="19"/></name></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">ERROR<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="string" pos:line="36" pos:column="16">"write_kafka plugin: cannot create topic configuration."<pos:position pos:line="36" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="74"/></expr_stmt>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">ci<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">values_num<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">!=<pos:position pos:line="40" pos:column="26"/></operator> <literal type="number" pos:line="40" pos:column="27">1<pos:position pos:line="40" pos:column="28"/></literal></expr>)<pos:position pos:line="40" pos:column="29"/></condition><then pos:line="40" pos:column="29"> <block pos:line="40" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">WARNING<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><literal type="string" pos:line="41" pos:column="17">"kafka topic name needed."<pos:position pos:line="41" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
        <goto pos:line="42" pos:column="9">goto <name pos:line="42" pos:column="14">errout<pos:position pos:line="42" pos:column="20"/></name>;<pos:position pos:line="42" pos:column="21"/></goto>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name><name pos:line="45" pos:column="9">ci<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">values<pos:position pos:line="45" pos:column="19"/></name><index pos:line="45" pos:column="19">[<expr><literal type="number" pos:line="45" pos:column="20">0<pos:position pos:line="45" pos:column="21"/></literal></expr>]<pos:position pos:line="45" pos:column="22"/></index></name><operator pos:line="45" pos:column="22">.<pos:position pos:line="45" pos:column="23"/></operator><name pos:line="45" pos:column="23">type<pos:position pos:line="45" pos:column="27"/></name> <operator pos:line="45" pos:column="28">!=<pos:position pos:line="45" pos:column="30"/></operator> <name pos:line="45" pos:column="31">OCONFIG_TYPE_STRING<pos:position pos:line="45" pos:column="50"/></name></expr>)<pos:position pos:line="45" pos:column="51"/></condition><then pos:line="45" pos:column="51"> <block pos:line="45" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">WARNING<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><literal type="string" pos:line="46" pos:column="17">"kafka topic needs a string argument."<pos:position pos:line="46" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
        <goto pos:line="47" pos:column="9">goto <name pos:line="47" pos:column="14">errout<pos:position pos:line="47" pos:column="20"/></name>;<pos:position pos:line="47" pos:column="21"/></goto>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><operator pos:line="50" pos:column="9">(<pos:position pos:line="50" pos:column="10"/></operator><name><name pos:line="50" pos:column="10">tctx<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">topic_name<pos:position pos:line="50" pos:column="26"/></name></name> <operator pos:line="50" pos:column="27">=<pos:position pos:line="50" pos:column="28"/></operator> <call><name pos:line="50" pos:column="29">strdup<pos:position pos:line="50" pos:column="35"/></name><argument_list pos:line="50" pos:column="35">(<argument><expr><name><name pos:line="50" pos:column="36">ci<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">values<pos:position pos:line="50" pos:column="46"/></name><index pos:line="50" pos:column="46">[<expr><literal type="number" pos:line="50" pos:column="47">0<pos:position pos:line="50" pos:column="48"/></literal></expr>]<pos:position pos:line="50" pos:column="49"/></index></name><operator pos:line="50" pos:column="49">.<pos:position pos:line="50" pos:column="50"/></operator><name><name pos:line="50" pos:column="50">value<pos:position pos:line="50" pos:column="55"/></name><operator pos:line="50" pos:column="55">.<pos:position pos:line="50" pos:column="56"/></operator><name pos:line="50" pos:column="56">string<pos:position pos:line="50" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call><operator pos:line="50" pos:column="63">)<pos:position pos:line="50" pos:column="64"/></operator> <operator pos:line="50" pos:column="65">==<pos:position pos:line="50" pos:column="67"/></operator> <name pos:line="50" pos:column="68">NULL<pos:position pos:line="50" pos:column="72"/></name></expr>)<pos:position pos:line="50" pos:column="73"/></condition><then pos:line="50" pos:column="73"> <block pos:line="50" pos:column="74">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">ERROR<pos:position pos:line="51" pos:column="14"/></name><argument_list pos:line="51" pos:column="14">(<argument><expr><literal type="string" pos:line="51" pos:column="15">"write_kafka plugin: cannot copy topic name."<pos:position pos:line="51" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt>
        <goto pos:line="52" pos:column="9">goto <name pos:line="52" pos:column="14">errout<pos:position pos:line="52" pos:column="20"/></name>;<pos:position pos:line="52" pos:column="21"/></goto>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>

	<for pos:line="55" pos:column="9">for <control pos:line="55" pos:column="13">(<init><expr><name pos:line="55" pos:column="14">i<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <literal type="number" pos:line="55" pos:column="18">0<pos:position pos:line="55" pos:column="19"/></literal></expr>;<pos:position pos:line="55" pos:column="20"/></init> <condition><expr><name pos:line="55" pos:column="21">i<pos:position pos:line="55" pos:column="22"/></name> <operator pos:line="55" pos:column="23">&lt;<pos:position pos:line="55" pos:column="27"/></operator> <name><name pos:line="55" pos:column="25">ci<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">-&gt;<pos:position pos:line="55" pos:column="32"/></operator><name pos:line="55" pos:column="29">children_num<pos:position pos:line="55" pos:column="41"/></name></name></expr>;<pos:position pos:line="55" pos:column="42"/></condition> <incr><expr><name pos:line="55" pos:column="43">i<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">++<pos:position pos:line="55" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="55" pos:column="47"/></control> <block pos:line="55" pos:column="48">{
		<comment type="block" pos:line="56" pos:column="17">/*
		 * The code here could be simplified but makes room
		 * for easy adding of new options later on.
		 */</comment>
		<expr_stmt><expr><name pos:line="60" pos:column="17">child<pos:position pos:line="60" pos:column="22"/></name> <operator pos:line="60" pos:column="23">=<pos:position pos:line="60" pos:column="24"/></operator> <operator pos:line="60" pos:column="25">&amp;<pos:position pos:line="60" pos:column="30"/></operator><name><name pos:line="60" pos:column="26">ci<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">children<pos:position pos:line="60" pos:column="38"/></name><index pos:line="60" pos:column="38">[<expr><name pos:line="60" pos:column="39">i<pos:position pos:line="60" pos:column="40"/></name></expr>]<pos:position pos:line="60" pos:column="41"/></index></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="61" pos:column="17">status<pos:position pos:line="61" pos:column="23"/></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <literal type="number" pos:line="61" pos:column="26">0<pos:position pos:line="61" pos:column="27"/></literal></expr>;<pos:position pos:line="61" pos:column="28"/></expr_stmt>

		<if pos:line="63" pos:column="17">if <condition pos:line="63" pos:column="20">(<expr><call><name pos:line="63" pos:column="21">strcasecmp<pos:position pos:line="63" pos:column="31"/></name> <argument_list pos:line="63" pos:column="32">(<argument><expr><literal type="string" pos:line="63" pos:column="33">"Property"<pos:position pos:line="63" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="45">child<pos:position pos:line="63" pos:column="50"/></name><operator pos:line="63" pos:column="50">-&gt;<pos:position pos:line="63" pos:column="55"/></operator><name pos:line="63" pos:column="52">key<pos:position pos:line="63" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="56"/></argument_list></call> <operator pos:line="63" pos:column="57">==<pos:position pos:line="63" pos:column="59"/></operator> <literal type="number" pos:line="63" pos:column="60">0<pos:position pos:line="63" pos:column="61"/></literal></expr>)<pos:position pos:line="63" pos:column="62"/></condition><then pos:line="63" pos:column="62"> <block pos:line="63" pos:column="63">{
			<if pos:line="64" pos:column="25">if <condition pos:line="64" pos:column="28">(<expr><name><name pos:line="64" pos:column="29">child<pos:position pos:line="64" pos:column="34"/></name><operator pos:line="64" pos:column="34">-&gt;<pos:position pos:line="64" pos:column="39"/></operator><name pos:line="64" pos:column="36">values_num<pos:position pos:line="64" pos:column="46"/></name></name> <operator pos:line="64" pos:column="47">!=<pos:position pos:line="64" pos:column="49"/></operator> <literal type="number" pos:line="64" pos:column="50">2<pos:position pos:line="64" pos:column="51"/></literal></expr>)<pos:position pos:line="64" pos:column="52"/></condition><then pos:line="64" pos:column="52"> <block pos:line="64" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="65" pos:column="33">WARNING<pos:position pos:line="65" pos:column="40"/></name><argument_list pos:line="65" pos:column="40">(<argument><expr><literal type="string" pos:line="65" pos:column="41">"kafka properties need both a key and a value."<pos:position pos:line="65" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="90"/></expr_stmt>
                <goto pos:line="66" pos:column="17">goto <name pos:line="66" pos:column="22">errout<pos:position pos:line="66" pos:column="28"/></name>;<pos:position pos:line="66" pos:column="29"/></goto>
			}<pos:position pos:line="67" pos:column="26"/></block></then></if>
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><name><name pos:line="68" pos:column="29">child<pos:position pos:line="68" pos:column="34"/></name><operator pos:line="68" pos:column="34">-&gt;<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="36">values<pos:position pos:line="68" pos:column="42"/></name><index pos:line="68" pos:column="42">[<expr><literal type="number" pos:line="68" pos:column="43">0<pos:position pos:line="68" pos:column="44"/></literal></expr>]<pos:position pos:line="68" pos:column="45"/></index></name><operator pos:line="68" pos:column="45">.<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="46">type<pos:position pos:line="68" pos:column="50"/></name> <operator pos:line="68" pos:column="51">!=<pos:position pos:line="68" pos:column="53"/></operator> <name pos:line="68" pos:column="54">OCONFIG_TYPE_STRING<pos:position pos:line="68" pos:column="73"/></name> <operator pos:line="68" pos:column="74">||<pos:position pos:line="68" pos:column="76"/></operator>
			    <name><name pos:line="69" pos:column="29">child<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">values<pos:position pos:line="69" pos:column="42"/></name><index pos:line="69" pos:column="42">[<expr><literal type="number" pos:line="69" pos:column="43">1<pos:position pos:line="69" pos:column="44"/></literal></expr>]<pos:position pos:line="69" pos:column="45"/></index></name><operator pos:line="69" pos:column="45">.<pos:position pos:line="69" pos:column="46"/></operator><name pos:line="69" pos:column="46">type<pos:position pos:line="69" pos:column="50"/></name> <operator pos:line="69" pos:column="51">!=<pos:position pos:line="69" pos:column="53"/></operator> <name pos:line="69" pos:column="54">OCONFIG_TYPE_STRING<pos:position pos:line="69" pos:column="73"/></name></expr>)<pos:position pos:line="69" pos:column="74"/></condition><then pos:line="69" pos:column="74"> <block pos:line="69" pos:column="75">{
				<expr_stmt><expr><call><name pos:line="70" pos:column="33">WARNING<pos:position pos:line="70" pos:column="40"/></name><argument_list pos:line="70" pos:column="40">(<argument><expr><literal type="string" pos:line="70" pos:column="41">"kafka properties needs string arguments."<pos:position pos:line="70" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="85"/></expr_stmt>
                <goto pos:line="71" pos:column="17">goto <name pos:line="71" pos:column="22">errout<pos:position pos:line="71" pos:column="28"/></name>;<pos:position pos:line="71" pos:column="29"/></goto>
			}<pos:position pos:line="72" pos:column="26"/></block></then></if>
            <expr_stmt><expr><name pos:line="73" pos:column="13">key<pos:position pos:line="73" pos:column="16"/></name> <operator pos:line="73" pos:column="17">=<pos:position pos:line="73" pos:column="18"/></operator> <name><name pos:line="73" pos:column="19">child<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">-&gt;<pos:position pos:line="73" pos:column="29"/></operator><name pos:line="73" pos:column="26">values<pos:position pos:line="73" pos:column="32"/></name><index pos:line="73" pos:column="32">[<expr><literal type="number" pos:line="73" pos:column="33">0<pos:position pos:line="73" pos:column="34"/></literal></expr>]<pos:position pos:line="73" pos:column="35"/></index></name><operator pos:line="73" pos:column="35">.<pos:position pos:line="73" pos:column="36"/></operator><name><name pos:line="73" pos:column="36">value<pos:position pos:line="73" pos:column="41"/></name><operator pos:line="73" pos:column="41">.<pos:position pos:line="73" pos:column="42"/></operator><name pos:line="73" pos:column="42">string<pos:position pos:line="73" pos:column="48"/></name></name></expr>;<pos:position pos:line="73" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="74" pos:column="13">val<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">=<pos:position pos:line="74" pos:column="18"/></operator> <name><name pos:line="74" pos:column="19">child<pos:position pos:line="74" pos:column="24"/></name><operator pos:line="74" pos:column="24">-&gt;<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="26">values<pos:position pos:line="74" pos:column="32"/></name><index pos:line="74" pos:column="32">[<expr><literal type="number" pos:line="74" pos:column="33">1<pos:position pos:line="74" pos:column="34"/></literal></expr>]<pos:position pos:line="74" pos:column="35"/></index></name><operator pos:line="74" pos:column="35">.<pos:position pos:line="74" pos:column="36"/></operator><name><name pos:line="74" pos:column="36">value<pos:position pos:line="74" pos:column="41"/></name><operator pos:line="74" pos:column="41">.<pos:position pos:line="74" pos:column="42"/></operator><name pos:line="74" pos:column="42">string<pos:position pos:line="74" pos:column="48"/></name></name></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="75" pos:column="13">ret<pos:position pos:line="75" pos:column="16"/></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <call><name pos:line="75" pos:column="19">rd_kafka_topic_conf_set<pos:position pos:line="75" pos:column="42"/></name><argument_list pos:line="75" pos:column="42">(<argument><expr><name><name pos:line="75" pos:column="43">tctx<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">-&gt;<pos:position pos:line="75" pos:column="52"/></operator><name pos:line="75" pos:column="49">conf<pos:position pos:line="75" pos:column="53"/></name></name></expr></argument>,<argument><expr><name pos:line="75" pos:column="54">key<pos:position pos:line="75" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="59">val<pos:position pos:line="75" pos:column="62"/></name></expr></argument>,
                                          <argument><expr><name pos:line="76" pos:column="43">errbuf<pos:position pos:line="76" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="76" pos:column="51">sizeof<argument_list pos:line="76" pos:column="57">(<argument><expr><name pos:line="76" pos:column="58">errbuf<pos:position pos:line="76" pos:column="64"/></name></expr></argument>)<pos:position pos:line="76" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="76" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="67"/></expr_stmt>
            <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">ret<pos:position pos:line="77" pos:column="20"/></name> <operator pos:line="77" pos:column="21">!=<pos:position pos:line="77" pos:column="23"/></operator> <name pos:line="77" pos:column="24">RD_KAFKA_CONF_OK<pos:position pos:line="77" pos:column="40"/></name></expr>)<pos:position pos:line="77" pos:column="41"/></condition><then pos:line="77" pos:column="41"> <block pos:line="77" pos:column="42">{
				<expr_stmt><expr><call><name pos:line="78" pos:column="33">WARNING<pos:position pos:line="78" pos:column="40"/></name><argument_list pos:line="78" pos:column="40">(<argument><expr><literal type="string" pos:line="78" pos:column="41">"cannot set kafka topic property %s to %s: %s."<pos:position pos:line="78" pos:column="88"/></literal></expr></argument>,
                        <argument><expr><name pos:line="79" pos:column="25">key<pos:position pos:line="79" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">val<pos:position pos:line="79" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="35">errbuf<pos:position pos:line="79" pos:column="41"/></name></expr></argument>)<pos:position pos:line="79" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="43"/></expr_stmt>
                <goto pos:line="80" pos:column="17">goto <name pos:line="80" pos:column="22">errout<pos:position pos:line="80" pos:column="28"/></name>;<pos:position pos:line="80" pos:column="29"/></goto>
			}<pos:position pos:line="81" pos:column="26"/></block></then></if>

        }<pos:position pos:line="83" pos:column="10"/></block></then> <elseif pos:line="83" pos:column="11">else <if pos:line="83" pos:column="16">if <condition pos:line="83" pos:column="19">(<expr><call><name pos:line="83" pos:column="20">strcasecmp<pos:position pos:line="83" pos:column="30"/></name> <argument_list pos:line="83" pos:column="31">(<argument><expr><literal type="string" pos:line="83" pos:column="32">"Key"<pos:position pos:line="83" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="39">child<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">-&gt;<pos:position pos:line="83" pos:column="49"/></operator><name pos:line="83" pos:column="46">key<pos:position pos:line="83" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="83" pos:column="50"/></argument_list></call> <operator pos:line="83" pos:column="51">==<pos:position pos:line="83" pos:column="53"/></operator> <literal type="number" pos:line="83" pos:column="54">0<pos:position pos:line="83" pos:column="55"/></literal></expr>)<pos:position pos:line="83" pos:column="56"/></condition><then pos:line="83" pos:column="56">  <block pos:line="83" pos:column="58">{
            <decl_stmt><decl><type><name pos:line="84" pos:column="13">char<pos:position pos:line="84" pos:column="17"/></name> <modifier pos:line="84" pos:column="18">*<pos:position pos:line="84" pos:column="19"/></modifier></type><name pos:line="84" pos:column="19">tmp_buf<pos:position pos:line="84" pos:column="26"/></name> <init pos:line="84" pos:column="27">= <expr><name pos:line="84" pos:column="29">NULL<pos:position pos:line="84" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="84" pos:column="34"/></decl_stmt>
            <expr_stmt><expr><name pos:line="85" pos:column="13">status<pos:position pos:line="85" pos:column="19"/></name> <operator pos:line="85" pos:column="20">=<pos:position pos:line="85" pos:column="21"/></operator> <call><name pos:line="85" pos:column="22">cf_util_get_string<pos:position pos:line="85" pos:column="40"/></name><argument_list pos:line="85" pos:column="40">(<argument><expr><name pos:line="85" pos:column="41">child<pos:position pos:line="85" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="85" pos:column="48">&amp;<pos:position pos:line="85" pos:column="53"/></operator><name pos:line="85" pos:column="49">tmp_buf<pos:position pos:line="85" pos:column="56"/></name></expr></argument>)<pos:position pos:line="85" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="58"/></expr_stmt>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name pos:line="86" pos:column="17">status<pos:position pos:line="86" pos:column="23"/></name> <operator pos:line="86" pos:column="24">!=<pos:position pos:line="86" pos:column="26"/></operator> <literal type="number" pos:line="86" pos:column="27">0<pos:position pos:line="86" pos:column="28"/></literal></expr>)<pos:position pos:line="86" pos:column="29"/></condition><then pos:line="86" pos:column="29"> <block pos:line="86" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="87" pos:column="17">WARNING<pos:position pos:line="87" pos:column="24"/></name><argument_list pos:line="87" pos:column="24">(<argument><expr><literal type="string" pos:line="87" pos:column="25">"write_kafka plugin: invalid key supplied"<pos:position pos:line="87" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="69"/></expr_stmt>
                <break pos:line="88" pos:column="17">break;<pos:position pos:line="88" pos:column="23"/></break>
            }<pos:position pos:line="89" pos:column="14"/></block></then></if>

            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">(<expr><call><name pos:line="91" pos:column="17">strcasecmp<pos:position pos:line="91" pos:column="27"/></name><argument_list pos:line="91" pos:column="27">(<argument><expr><name pos:line="91" pos:column="28">tmp_buf<pos:position pos:line="91" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="37">"Random"<pos:position pos:line="91" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="46"/></argument_list></call> <operator pos:line="91" pos:column="47">!=<pos:position pos:line="91" pos:column="49"/></operator> <literal type="number" pos:line="91" pos:column="50">0<pos:position pos:line="91" pos:column="51"/></literal></expr>)<pos:position pos:line="91" pos:column="52"/></condition><then pos:line="91" pos:column="52"> <block pos:line="91" pos:column="53">{
                <expr_stmt><expr><name><name pos:line="92" pos:column="17">tctx<pos:position pos:line="92" pos:column="21"/></name><operator pos:line="92" pos:column="21">-&gt;<pos:position pos:line="92" pos:column="26"/></operator><name pos:line="92" pos:column="23">has_key<pos:position pos:line="92" pos:column="30"/></name></name> <operator pos:line="92" pos:column="31">=<pos:position pos:line="92" pos:column="32"/></operator> <literal type="number" pos:line="92" pos:column="33">1<pos:position pos:line="92" pos:column="34"/></literal></expr>;<pos:position pos:line="92" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="93" pos:column="17">tctx<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">-&gt;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="23">key<pos:position pos:line="93" pos:column="26"/></name></name> <operator pos:line="93" pos:column="27">=<pos:position pos:line="93" pos:column="28"/></operator> <call><name pos:line="93" pos:column="29">crc32_buffer<pos:position pos:line="93" pos:column="41"/></name><argument_list pos:line="93" pos:column="41">(<argument><expr><operator pos:line="93" pos:column="42">(<pos:position pos:line="93" pos:column="43"/></operator><name pos:line="93" pos:column="43">u_char<pos:position pos:line="93" pos:column="49"/></name> <operator pos:line="93" pos:column="50">*<pos:position pos:line="93" pos:column="51"/></operator><operator pos:line="93" pos:column="51">)<pos:position pos:line="93" pos:column="52"/></operator><name pos:line="93" pos:column="52">tmp_buf<pos:position pos:line="93" pos:column="59"/></name></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="61">strlen<pos:position pos:line="93" pos:column="67"/></name><argument_list pos:line="93" pos:column="67">(<argument><expr><name pos:line="93" pos:column="68">tmp_buf<pos:position pos:line="93" pos:column="75"/></name></expr></argument>)<pos:position pos:line="93" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="78"/></expr_stmt>
            }<pos:position pos:line="94" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">sfree<pos:position pos:line="95" pos:column="18"/></name><argument_list pos:line="95" pos:column="18">(<argument><expr><name pos:line="95" pos:column="19">tmp_buf<pos:position pos:line="95" pos:column="26"/></name></expr></argument>)<pos:position pos:line="95" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="28"/></expr_stmt>

        }<pos:position pos:line="97" pos:column="10"/></block></then></if></elseif> <elseif pos:line="97" pos:column="11">else <if pos:line="97" pos:column="16">if <condition pos:line="97" pos:column="19">(<expr><call><name pos:line="97" pos:column="20">strcasecmp<pos:position pos:line="97" pos:column="30"/></name> <argument_list pos:line="97" pos:column="31">(<argument><expr><literal type="string" pos:line="97" pos:column="32">"Format"<pos:position pos:line="97" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="42">child<pos:position pos:line="97" pos:column="47"/></name><operator pos:line="97" pos:column="47">-&gt;<pos:position pos:line="97" pos:column="52"/></operator><name pos:line="97" pos:column="49">key<pos:position pos:line="97" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="53"/></argument_list></call> <operator pos:line="97" pos:column="54">==<pos:position pos:line="97" pos:column="56"/></operator> <literal type="number" pos:line="97" pos:column="57">0<pos:position pos:line="97" pos:column="58"/></literal></expr>)<pos:position pos:line="97" pos:column="59"/></condition><then pos:line="97" pos:column="59"> <block pos:line="97" pos:column="60">{
            <expr_stmt><expr><name pos:line="98" pos:column="13">status<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">=<pos:position pos:line="98" pos:column="21"/></operator> <call><name pos:line="98" pos:column="22">cf_util_get_string<pos:position pos:line="98" pos:column="40"/></name><argument_list pos:line="98" pos:column="40">(<argument><expr><name pos:line="98" pos:column="41">child<pos:position pos:line="98" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="48">&amp;<pos:position pos:line="98" pos:column="53"/></operator><name pos:line="98" pos:column="49">key<pos:position pos:line="98" pos:column="52"/></name></expr></argument>)<pos:position pos:line="98" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="54"/></expr_stmt>
            <if pos:line="99" pos:column="13">if <condition pos:line="99" pos:column="16">(<expr><name pos:line="99" pos:column="17">status<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">!=<pos:position pos:line="99" pos:column="26"/></operator> <literal type="number" pos:line="99" pos:column="27">0<pos:position pos:line="99" pos:column="28"/></literal></expr>)<pos:position pos:line="99" pos:column="29"/></condition><then pos:line="99" pos:column="29">
                <block type="pseudo"><goto pos:line="100" pos:column="17">goto <name pos:line="100" pos:column="22">errout<pos:position pos:line="100" pos:column="28"/></name>;<pos:position pos:line="100" pos:column="29"/></goto></block></then></if>

            <expr_stmt><expr><call><name pos:line="102" pos:column="13">assert<pos:position pos:line="102" pos:column="19"/></name><argument_list pos:line="102" pos:column="19">(<argument><expr><name pos:line="102" pos:column="20">key<pos:position pos:line="102" pos:column="23"/></name> <operator pos:line="102" pos:column="24">!=<pos:position pos:line="102" pos:column="26"/></operator> <name pos:line="102" pos:column="27">NULL<pos:position pos:line="102" pos:column="31"/></name></expr></argument>)<pos:position pos:line="102" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="33"/></expr_stmt>

            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><call><name pos:line="104" pos:column="17">strcasecmp<pos:position pos:line="104" pos:column="27"/></name><argument_list pos:line="104" pos:column="27">(<argument><expr><name pos:line="104" pos:column="28">key<pos:position pos:line="104" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="33">"Command"<pos:position pos:line="104" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="43"/></argument_list></call> <operator pos:line="104" pos:column="44">==<pos:position pos:line="104" pos:column="46"/></operator> <literal type="number" pos:line="104" pos:column="47">0<pos:position pos:line="104" pos:column="48"/></literal></expr>)<pos:position pos:line="104" pos:column="49"/></condition><then pos:line="104" pos:column="49"> <block pos:line="104" pos:column="50">{
                <expr_stmt><expr><name><name pos:line="105" pos:column="17">tctx<pos:position pos:line="105" pos:column="21"/></name><operator pos:line="105" pos:column="21">-&gt;<pos:position pos:line="105" pos:column="26"/></operator><name pos:line="105" pos:column="23">format<pos:position pos:line="105" pos:column="29"/></name></name> <operator pos:line="105" pos:column="30">=<pos:position pos:line="105" pos:column="31"/></operator> <name pos:line="105" pos:column="32">KAFKA_FORMAT_COMMAND<pos:position pos:line="105" pos:column="52"/></name></expr>;<pos:position pos:line="105" pos:column="53"/></expr_stmt>

            }<pos:position pos:line="107" pos:column="14"/></block></then> <elseif pos:line="107" pos:column="15">else <if pos:line="107" pos:column="20">if <condition pos:line="107" pos:column="23">(<expr><call><name pos:line="107" pos:column="24">strcasecmp<pos:position pos:line="107" pos:column="34"/></name><argument_list pos:line="107" pos:column="34">(<argument><expr><name pos:line="107" pos:column="35">key<pos:position pos:line="107" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="40">"Graphite"<pos:position pos:line="107" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="51"/></argument_list></call> <operator pos:line="107" pos:column="52">==<pos:position pos:line="107" pos:column="54"/></operator> <literal type="number" pos:line="107" pos:column="55">0<pos:position pos:line="107" pos:column="56"/></literal></expr>)<pos:position pos:line="107" pos:column="57"/></condition><then pos:line="107" pos:column="57"> <block pos:line="107" pos:column="58">{
                <expr_stmt><expr><name><name pos:line="108" pos:column="17">tctx<pos:position pos:line="108" pos:column="21"/></name><operator pos:line="108" pos:column="21">-&gt;<pos:position pos:line="108" pos:column="26"/></operator><name pos:line="108" pos:column="23">format<pos:position pos:line="108" pos:column="29"/></name></name> <operator pos:line="108" pos:column="30">=<pos:position pos:line="108" pos:column="31"/></operator> <name pos:line="108" pos:column="32">KAFKA_FORMAT_GRAPHITE<pos:position pos:line="108" pos:column="53"/></name></expr>;<pos:position pos:line="108" pos:column="54"/></expr_stmt>

            }<pos:position pos:line="110" pos:column="14"/></block></then></if></elseif> <elseif pos:line="110" pos:column="15">else <if pos:line="110" pos:column="20">if <condition pos:line="110" pos:column="23">(<expr><call><name pos:line="110" pos:column="24">strcasecmp<pos:position pos:line="110" pos:column="34"/></name><argument_list pos:line="110" pos:column="34">(<argument><expr><name pos:line="110" pos:column="35">key<pos:position pos:line="110" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="40">"Json"<pos:position pos:line="110" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="47"/></argument_list></call> <operator pos:line="110" pos:column="48">==<pos:position pos:line="110" pos:column="50"/></operator> <literal type="number" pos:line="110" pos:column="51">0<pos:position pos:line="110" pos:column="52"/></literal></expr>)<pos:position pos:line="110" pos:column="53"/></condition><then pos:line="110" pos:column="53"> <block pos:line="110" pos:column="54">{
                <expr_stmt><expr><name><name pos:line="111" pos:column="17">tctx<pos:position pos:line="111" pos:column="21"/></name><operator pos:line="111" pos:column="21">-&gt;<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="23">format<pos:position pos:line="111" pos:column="29"/></name></name> <operator pos:line="111" pos:column="30">=<pos:position pos:line="111" pos:column="31"/></operator> <name pos:line="111" pos:column="32">KAFKA_FORMAT_JSON<pos:position pos:line="111" pos:column="49"/></name></expr>;<pos:position pos:line="111" pos:column="50"/></expr_stmt>

            }<pos:position pos:line="113" pos:column="14"/></block></then></if></elseif> <else pos:line="113" pos:column="15">else <block pos:line="113" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="114" pos:column="17">WARNING<pos:position pos:line="114" pos:column="24"/></name> <argument_list pos:line="114" pos:column="25">(<argument><expr><literal type="string" pos:line="114" pos:column="26">"write_kafka plugin: Invalid format string: %s"<pos:position pos:line="114" pos:column="73"/></literal></expr></argument>,
                         <argument><expr><name pos:line="115" pos:column="26">key<pos:position pos:line="115" pos:column="29"/></name></expr></argument>)<pos:position pos:line="115" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="116" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name pos:line="118" pos:column="13">sfree<pos:position pos:line="118" pos:column="18"/></name><argument_list pos:line="118" pos:column="18">(<argument><expr><name pos:line="118" pos:column="19">key<pos:position pos:line="118" pos:column="22"/></name></expr></argument>)<pos:position pos:line="118" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="24"/></expr_stmt>

        }<pos:position pos:line="120" pos:column="10"/></block></then></if></elseif> <elseif pos:line="120" pos:column="11">else <if pos:line="120" pos:column="16">if <condition pos:line="120" pos:column="19">(<expr><call><name pos:line="120" pos:column="20">strcasecmp<pos:position pos:line="120" pos:column="30"/></name> <argument_list pos:line="120" pos:column="31">(<argument><expr><literal type="string" pos:line="120" pos:column="32">"StoreRates"<pos:position pos:line="120" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="46">child<pos:position pos:line="120" pos:column="51"/></name><operator pos:line="120" pos:column="51">-&gt;<pos:position pos:line="120" pos:column="56"/></operator><name pos:line="120" pos:column="53">key<pos:position pos:line="120" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="57"/></argument_list></call> <operator pos:line="120" pos:column="58">==<pos:position pos:line="120" pos:column="60"/></operator> <literal type="number" pos:line="120" pos:column="61">0<pos:position pos:line="120" pos:column="62"/></literal></expr>)<pos:position pos:line="120" pos:column="63"/></condition><then pos:line="120" pos:column="63"> <block pos:line="120" pos:column="64">{
            <expr_stmt><expr><name pos:line="121" pos:column="13">status<pos:position pos:line="121" pos:column="19"/></name> <operator pos:line="121" pos:column="20">=<pos:position pos:line="121" pos:column="21"/></operator> <call><name pos:line="121" pos:column="22">cf_util_get_boolean<pos:position pos:line="121" pos:column="41"/></name> <argument_list pos:line="121" pos:column="42">(<argument><expr><name pos:line="121" pos:column="43">child<pos:position pos:line="121" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="121" pos:column="50">&amp;<pos:position pos:line="121" pos:column="55"/></operator><name><name pos:line="121" pos:column="51">tctx<pos:position pos:line="121" pos:column="55"/></name><operator pos:line="121" pos:column="55">-&gt;<pos:position pos:line="121" pos:column="60"/></operator><name pos:line="121" pos:column="57">store_rates<pos:position pos:line="121" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="122" pos:column="13">(<pos:position pos:line="122" pos:column="14"/></operator><name pos:line="122" pos:column="14">void<pos:position pos:line="122" pos:column="18"/></name><operator pos:line="122" pos:column="18">)<pos:position pos:line="122" pos:column="19"/></operator> <call><name pos:line="122" pos:column="20">cf_util_get_flag<pos:position pos:line="122" pos:column="36"/></name> <argument_list pos:line="122" pos:column="37">(<argument><expr><name pos:line="122" pos:column="38">child<pos:position pos:line="122" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="45">&amp;<pos:position pos:line="122" pos:column="50"/></operator><name><name pos:line="122" pos:column="46">tctx<pos:position pos:line="122" pos:column="50"/></name><operator pos:line="122" pos:column="50">-&gt;<pos:position pos:line="122" pos:column="55"/></operator><name pos:line="122" pos:column="52">graphite_flags<pos:position pos:line="122" pos:column="66"/></name></name></expr></argument>,
                                     <argument><expr><name pos:line="123" pos:column="38">GRAPHITE_STORE_RATES<pos:position pos:line="123" pos:column="58"/></name></expr></argument>)<pos:position pos:line="123" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="60"/></expr_stmt>

        }<pos:position pos:line="125" pos:column="10"/></block></then></if></elseif> <elseif pos:line="125" pos:column="11">else <if pos:line="125" pos:column="16">if <condition pos:line="125" pos:column="19">(<expr><call><name pos:line="125" pos:column="20">strcasecmp<pos:position pos:line="125" pos:column="30"/></name> <argument_list pos:line="125" pos:column="31">(<argument><expr><literal type="string" pos:line="125" pos:column="32">"GraphiteSeparateInstances"<pos:position pos:line="125" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="61">child<pos:position pos:line="125" pos:column="66"/></name><operator pos:line="125" pos:column="66">-&gt;<pos:position pos:line="125" pos:column="71"/></operator><name pos:line="125" pos:column="68">key<pos:position pos:line="125" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="72"/></argument_list></call> <operator pos:line="125" pos:column="73">==<pos:position pos:line="125" pos:column="75"/></operator> <literal type="number" pos:line="125" pos:column="76">0<pos:position pos:line="125" pos:column="77"/></literal></expr>)<pos:position pos:line="125" pos:column="78"/></condition><then pos:line="125" pos:column="78"> <block pos:line="125" pos:column="79">{
            <expr_stmt><expr><name pos:line="126" pos:column="13">status<pos:position pos:line="126" pos:column="19"/></name> <operator pos:line="126" pos:column="20">=<pos:position pos:line="126" pos:column="21"/></operator> <call><name pos:line="126" pos:column="22">cf_util_get_flag<pos:position pos:line="126" pos:column="38"/></name> <argument_list pos:line="126" pos:column="39">(<argument><expr><name pos:line="126" pos:column="40">child<pos:position pos:line="126" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="47">&amp;<pos:position pos:line="126" pos:column="52"/></operator><name><name pos:line="126" pos:column="48">tctx<pos:position pos:line="126" pos:column="52"/></name><operator pos:line="126" pos:column="52">-&gt;<pos:position pos:line="126" pos:column="57"/></operator><name pos:line="126" pos:column="54">graphite_flags<pos:position pos:line="126" pos:column="68"/></name></name></expr></argument>,
                                       <argument><expr><name pos:line="127" pos:column="40">GRAPHITE_SEPARATE_INSTANCES<pos:position pos:line="127" pos:column="67"/></name></expr></argument>)<pos:position pos:line="127" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="69"/></expr_stmt>

        }<pos:position pos:line="129" pos:column="10"/></block></then></if></elseif> <elseif pos:line="129" pos:column="11">else <if pos:line="129" pos:column="16">if <condition pos:line="129" pos:column="19">(<expr><call><name pos:line="129" pos:column="20">strcasecmp<pos:position pos:line="129" pos:column="30"/></name> <argument_list pos:line="129" pos:column="31">(<argument><expr><literal type="string" pos:line="129" pos:column="32">"GraphiteAlwaysAppendDS"<pos:position pos:line="129" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="58">child<pos:position pos:line="129" pos:column="63"/></name><operator pos:line="129" pos:column="63">-&gt;<pos:position pos:line="129" pos:column="68"/></operator><name pos:line="129" pos:column="65">key<pos:position pos:line="129" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="69"/></argument_list></call> <operator pos:line="129" pos:column="70">==<pos:position pos:line="129" pos:column="72"/></operator> <literal type="number" pos:line="129" pos:column="73">0<pos:position pos:line="129" pos:column="74"/></literal></expr>)<pos:position pos:line="129" pos:column="75"/></condition><then pos:line="129" pos:column="75"> <block pos:line="129" pos:column="76">{
            <expr_stmt><expr><name pos:line="130" pos:column="13">status<pos:position pos:line="130" pos:column="19"/></name> <operator pos:line="130" pos:column="20">=<pos:position pos:line="130" pos:column="21"/></operator> <call><name pos:line="130" pos:column="22">cf_util_get_flag<pos:position pos:line="130" pos:column="38"/></name> <argument_list pos:line="130" pos:column="39">(<argument><expr><name pos:line="130" pos:column="40">child<pos:position pos:line="130" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="130" pos:column="47">&amp;<pos:position pos:line="130" pos:column="52"/></operator><name><name pos:line="130" pos:column="48">tctx<pos:position pos:line="130" pos:column="52"/></name><operator pos:line="130" pos:column="52">-&gt;<pos:position pos:line="130" pos:column="57"/></operator><name pos:line="130" pos:column="54">graphite_flags<pos:position pos:line="130" pos:column="68"/></name></name></expr></argument>,
                                       <argument><expr><name pos:line="131" pos:column="40">GRAPHITE_ALWAYS_APPEND_DS<pos:position pos:line="131" pos:column="65"/></name></expr></argument>)<pos:position pos:line="131" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="67"/></expr_stmt>

        }<pos:position pos:line="133" pos:column="10"/></block></then></if></elseif> <elseif pos:line="133" pos:column="11">else <if pos:line="133" pos:column="16">if <condition pos:line="133" pos:column="19">(<expr><call><name pos:line="133" pos:column="20">strcasecmp<pos:position pos:line="133" pos:column="30"/></name> <argument_list pos:line="133" pos:column="31">(<argument><expr><literal type="string" pos:line="133" pos:column="32">"GraphitePrefix"<pos:position pos:line="133" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="50">child<pos:position pos:line="133" pos:column="55"/></name><operator pos:line="133" pos:column="55">-&gt;<pos:position pos:line="133" pos:column="60"/></operator><name pos:line="133" pos:column="57">key<pos:position pos:line="133" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="61"/></argument_list></call> <operator pos:line="133" pos:column="62">==<pos:position pos:line="133" pos:column="64"/></operator> <literal type="number" pos:line="133" pos:column="65">0<pos:position pos:line="133" pos:column="66"/></literal></expr>)<pos:position pos:line="133" pos:column="67"/></condition><then pos:line="133" pos:column="67"> <block pos:line="133" pos:column="68">{
            <expr_stmt><expr><name pos:line="134" pos:column="13">status<pos:position pos:line="134" pos:column="19"/></name> <operator pos:line="134" pos:column="20">=<pos:position pos:line="134" pos:column="21"/></operator> <call><name pos:line="134" pos:column="22">cf_util_get_string<pos:position pos:line="134" pos:column="40"/></name> <argument_list pos:line="134" pos:column="41">(<argument><expr><name pos:line="134" pos:column="42">child<pos:position pos:line="134" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="134" pos:column="49">&amp;<pos:position pos:line="134" pos:column="54"/></operator><name><name pos:line="134" pos:column="50">tctx<pos:position pos:line="134" pos:column="54"/></name><operator pos:line="134" pos:column="54">-&gt;<pos:position pos:line="134" pos:column="59"/></operator><name pos:line="134" pos:column="56">prefix<pos:position pos:line="134" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="134" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="135" pos:column="10"/></block></then></if></elseif> <elseif pos:line="135" pos:column="11">else <if pos:line="135" pos:column="16">if <condition pos:line="135" pos:column="19">(<expr><call><name pos:line="135" pos:column="20">strcasecmp<pos:position pos:line="135" pos:column="30"/></name> <argument_list pos:line="135" pos:column="31">(<argument><expr><literal type="string" pos:line="135" pos:column="32">"GraphitePostfix"<pos:position pos:line="135" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="51">child<pos:position pos:line="135" pos:column="56"/></name><operator pos:line="135" pos:column="56">-&gt;<pos:position pos:line="135" pos:column="61"/></operator><name pos:line="135" pos:column="58">key<pos:position pos:line="135" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="62"/></argument_list></call> <operator pos:line="135" pos:column="63">==<pos:position pos:line="135" pos:column="65"/></operator> <literal type="number" pos:line="135" pos:column="66">0<pos:position pos:line="135" pos:column="67"/></literal></expr>)<pos:position pos:line="135" pos:column="68"/></condition><then pos:line="135" pos:column="68"> <block pos:line="135" pos:column="69">{
            <expr_stmt><expr><name pos:line="136" pos:column="13">status<pos:position pos:line="136" pos:column="19"/></name> <operator pos:line="136" pos:column="20">=<pos:position pos:line="136" pos:column="21"/></operator> <call><name pos:line="136" pos:column="22">cf_util_get_string<pos:position pos:line="136" pos:column="40"/></name> <argument_list pos:line="136" pos:column="41">(<argument><expr><name pos:line="136" pos:column="42">child<pos:position pos:line="136" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="49">&amp;<pos:position pos:line="136" pos:column="54"/></operator><name><name pos:line="136" pos:column="50">tctx<pos:position pos:line="136" pos:column="54"/></name><operator pos:line="136" pos:column="54">-&gt;<pos:position pos:line="136" pos:column="59"/></operator><name pos:line="136" pos:column="56">postfix<pos:position pos:line="136" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="137" pos:column="10"/></block></then></if></elseif> <elseif pos:line="137" pos:column="11">else <if pos:line="137" pos:column="16">if <condition pos:line="137" pos:column="19">(<expr><call><name pos:line="137" pos:column="20">strcasecmp<pos:position pos:line="137" pos:column="30"/></name> <argument_list pos:line="137" pos:column="31">(<argument><expr><literal type="string" pos:line="137" pos:column="32">"GraphiteEscapeChar"<pos:position pos:line="137" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="54">child<pos:position pos:line="137" pos:column="59"/></name><operator pos:line="137" pos:column="59">-&gt;<pos:position pos:line="137" pos:column="64"/></operator><name pos:line="137" pos:column="61">key<pos:position pos:line="137" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="137" pos:column="65"/></argument_list></call> <operator pos:line="137" pos:column="66">==<pos:position pos:line="137" pos:column="68"/></operator> <literal type="number" pos:line="137" pos:column="69">0<pos:position pos:line="137" pos:column="70"/></literal></expr>)<pos:position pos:line="137" pos:column="71"/></condition><then pos:line="137" pos:column="71"> <block pos:line="137" pos:column="72">{
            <decl_stmt><decl><type><name pos:line="138" pos:column="13">char<pos:position pos:line="138" pos:column="17"/></name> <modifier pos:line="138" pos:column="18">*<pos:position pos:line="138" pos:column="19"/></modifier></type><name pos:line="138" pos:column="19">tmp_buff<pos:position pos:line="138" pos:column="27"/></name> <init pos:line="138" pos:column="28">= <expr><name pos:line="138" pos:column="30">NULL<pos:position pos:line="138" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="138" pos:column="35"/></decl_stmt>
            <expr_stmt><expr><name pos:line="139" pos:column="13">status<pos:position pos:line="139" pos:column="19"/></name> <operator pos:line="139" pos:column="20">=<pos:position pos:line="139" pos:column="21"/></operator> <call><name pos:line="139" pos:column="22">cf_util_get_string<pos:position pos:line="139" pos:column="40"/></name> <argument_list pos:line="139" pos:column="41">(<argument><expr><name pos:line="139" pos:column="42">child<pos:position pos:line="139" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="139" pos:column="49">&amp;<pos:position pos:line="139" pos:column="54"/></operator><name pos:line="139" pos:column="50">tmp_buff<pos:position pos:line="139" pos:column="58"/></name></expr></argument>)<pos:position pos:line="139" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="60"/></expr_stmt>
            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><call><name pos:line="140" pos:column="17">strlen<pos:position pos:line="140" pos:column="23"/></name> <argument_list pos:line="140" pos:column="24">(<argument><expr><name pos:line="140" pos:column="25">tmp_buff<pos:position pos:line="140" pos:column="33"/></name></expr></argument>)<pos:position pos:line="140" pos:column="34"/></argument_list></call> <operator pos:line="140" pos:column="35">&gt;<pos:position pos:line="140" pos:column="39"/></operator> <literal type="number" pos:line="140" pos:column="37">1<pos:position pos:line="140" pos:column="38"/></literal></expr>)<pos:position pos:line="140" pos:column="39"/></condition><then pos:line="140" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="141" pos:column="17">WARNING<pos:position pos:line="141" pos:column="24"/></name> <argument_list pos:line="141" pos:column="25">(<argument><expr><literal type="string" pos:line="141" pos:column="26">"write_kafka plugin: The option \"GraphiteEscapeChar\" handles "<pos:position pos:line="141" pos:column="90"/></literal>
                        <literal type="string" pos:line="142" pos:column="25">"only one character. Others will be ignored."<pos:position pos:line="142" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="72"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name><name pos:line="143" pos:column="13">tctx<pos:position pos:line="143" pos:column="17"/></name><operator pos:line="143" pos:column="17">-&gt;<pos:position pos:line="143" pos:column="22"/></operator><name pos:line="143" pos:column="19">escape_char<pos:position pos:line="143" pos:column="30"/></name></name> <operator pos:line="143" pos:column="31">=<pos:position pos:line="143" pos:column="32"/></operator> <name><name pos:line="143" pos:column="33">tmp_buff<pos:position pos:line="143" pos:column="41"/></name><index pos:line="143" pos:column="41">[<expr><literal type="number" pos:line="143" pos:column="42">0<pos:position pos:line="143" pos:column="43"/></literal></expr>]<pos:position pos:line="143" pos:column="44"/></index></name></expr>;<pos:position pos:line="143" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="144" pos:column="13">sfree<pos:position pos:line="144" pos:column="18"/></name> <argument_list pos:line="144" pos:column="19">(<argument><expr><name pos:line="144" pos:column="20">tmp_buff<pos:position pos:line="144" pos:column="28"/></name></expr></argument>)<pos:position pos:line="144" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="145" pos:column="10"/></block></then></if></elseif> <else pos:line="145" pos:column="11">else <block pos:line="145" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">WARNING<pos:position pos:line="146" pos:column="20"/></name> <argument_list pos:line="146" pos:column="21">(<argument><expr><literal type="string" pos:line="146" pos:column="22">"write_kafka plugin: Invalid directive: %s."<pos:position pos:line="146" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="68">child<pos:position pos:line="146" pos:column="73"/></name><operator pos:line="146" pos:column="73">-&gt;<pos:position pos:line="146" pos:column="78"/></operator><name pos:line="146" pos:column="75">key<pos:position pos:line="146" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="146" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="147" pos:column="10"/></block></else></if>

        <if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name pos:line="149" pos:column="13">status<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">!=<pos:position pos:line="149" pos:column="22"/></operator> <literal type="number" pos:line="149" pos:column="23">0<pos:position pos:line="149" pos:column="24"/></literal></expr>)<pos:position pos:line="149" pos:column="25"/></condition><then pos:line="149" pos:column="25">
            <block type="pseudo"><break pos:line="150" pos:column="13">break;<pos:position pos:line="150" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="151" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="153" pos:column="5">rd_kafka_topic_conf_set_partitioner_cb<pos:position pos:line="153" pos:column="43"/></name><argument_list pos:line="153" pos:column="43">(<argument><expr><name><name pos:line="153" pos:column="44">tctx<pos:position pos:line="153" pos:column="48"/></name><operator pos:line="153" pos:column="48">-&gt;<pos:position pos:line="153" pos:column="53"/></operator><name pos:line="153" pos:column="50">conf<pos:position pos:line="153" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="56">kafka_partition<pos:position pos:line="153" pos:column="71"/></name></expr></argument>)<pos:position pos:line="153" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="154" pos:column="5">rd_kafka_topic_conf_set_opaque<pos:position pos:line="154" pos:column="35"/></name><argument_list pos:line="154" pos:column="35">(<argument><expr><name><name pos:line="154" pos:column="36">tctx<pos:position pos:line="154" pos:column="40"/></name><operator pos:line="154" pos:column="40">-&gt;<pos:position pos:line="154" pos:column="45"/></operator><name pos:line="154" pos:column="42">conf<pos:position pos:line="154" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="154" pos:column="48">tctx<pos:position pos:line="154" pos:column="52"/></name></expr></argument>)<pos:position pos:line="154" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="156" pos:column="5">ssnprintf<pos:position pos:line="156" pos:column="14"/></name><argument_list pos:line="156" pos:column="14">(<argument><expr><name pos:line="156" pos:column="15">callback_name<pos:position pos:line="156" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="156" pos:column="30">sizeof<argument_list pos:line="156" pos:column="36">(<argument><expr><name pos:line="156" pos:column="37">callback_name<pos:position pos:line="156" pos:column="50"/></name></expr></argument>)<pos:position pos:line="156" pos:column="51"/></argument_list></sizeof></expr></argument>,
              <argument><expr><literal type="string" pos:line="157" pos:column="15">"write_kafka/%s"<pos:position pos:line="157" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="157" pos:column="33">tctx<pos:position pos:line="157" pos:column="37"/></name><operator pos:line="157" pos:column="37">-&gt;<pos:position pos:line="157" pos:column="42"/></operator><name pos:line="157" pos:column="39">topic_name<pos:position pos:line="157" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="157" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="159" pos:column="5">ud<pos:position pos:line="159" pos:column="7"/></name><operator pos:line="159" pos:column="7">.<pos:position pos:line="159" pos:column="8"/></operator><name pos:line="159" pos:column="8">data<pos:position pos:line="159" pos:column="12"/></name></name> <operator pos:line="159" pos:column="13">=<pos:position pos:line="159" pos:column="14"/></operator> <name pos:line="159" pos:column="15">tctx<pos:position pos:line="159" pos:column="19"/></name></expr>;<pos:position pos:line="159" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="160" pos:column="5">ud<pos:position pos:line="160" pos:column="7"/></name><operator pos:line="160" pos:column="7">.<pos:position pos:line="160" pos:column="8"/></operator><name pos:line="160" pos:column="8">free_func<pos:position pos:line="160" pos:column="17"/></name></name> <operator pos:line="160" pos:column="18">=<pos:position pos:line="160" pos:column="19"/></operator> <name pos:line="160" pos:column="20">kafka_topic_context_free<pos:position pos:line="160" pos:column="44"/></name></expr>;<pos:position pos:line="160" pos:column="45"/></expr_stmt>

	<expr_stmt><expr><name pos:line="162" pos:column="9">status<pos:position pos:line="162" pos:column="15"/></name> <operator pos:line="162" pos:column="16">=<pos:position pos:line="162" pos:column="17"/></operator> <call><name pos:line="162" pos:column="18">plugin_register_write<pos:position pos:line="162" pos:column="39"/></name> <argument_list pos:line="162" pos:column="40">(<argument><expr><name pos:line="162" pos:column="41">callback_name<pos:position pos:line="162" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="56">kafka_write<pos:position pos:line="162" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="162" pos:column="69">&amp;<pos:position pos:line="162" pos:column="74"/></operator><name pos:line="162" pos:column="70">ud<pos:position pos:line="162" pos:column="72"/></name></expr></argument>)<pos:position pos:line="162" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="74"/></expr_stmt>
	<if pos:line="163" pos:column="9">if <condition pos:line="163" pos:column="12">(<expr><name pos:line="163" pos:column="13">status<pos:position pos:line="163" pos:column="19"/></name> <operator pos:line="163" pos:column="20">!=<pos:position pos:line="163" pos:column="22"/></operator> <literal type="number" pos:line="163" pos:column="23">0<pos:position pos:line="163" pos:column="24"/></literal></expr>)<pos:position pos:line="163" pos:column="25"/></condition><then pos:line="163" pos:column="25"> <block pos:line="163" pos:column="26">{
		<expr_stmt><expr><call><name pos:line="164" pos:column="17">WARNING<pos:position pos:line="164" pos:column="24"/></name> <argument_list pos:line="164" pos:column="25">(<argument><expr><literal type="string" pos:line="164" pos:column="26">"write_kafka plugin: plugin_register_write (\"%s\") "<pos:position pos:line="164" pos:column="79"/></literal>
				<literal type="string" pos:line="165" pos:column="33">"failed with status %i."<pos:position pos:line="165" pos:column="57"/></literal></expr></argument>,
				<argument><expr><name pos:line="166" pos:column="33">callback_name<pos:position pos:line="166" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="48">status<pos:position pos:line="166" pos:column="54"/></name></expr></argument>)<pos:position pos:line="166" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="56"/></expr_stmt>
        <goto pos:line="167" pos:column="9">goto <name pos:line="167" pos:column="14">errout<pos:position pos:line="167" pos:column="20"/></name>;<pos:position pos:line="167" pos:column="21"/></goto>
    }<pos:position pos:line="168" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="170" pos:column="5">pthread_mutex_init<pos:position pos:line="170" pos:column="23"/></name> <argument_list pos:line="170" pos:column="24">(<argument><expr><operator pos:line="170" pos:column="25">&amp;<pos:position pos:line="170" pos:column="30"/></operator><name><name pos:line="170" pos:column="26">tctx<pos:position pos:line="170" pos:column="30"/></name><operator pos:line="170" pos:column="30">-&gt;<pos:position pos:line="170" pos:column="35"/></operator><name pos:line="170" pos:column="32">lock<pos:position pos:line="170" pos:column="36"/></name></name></expr></argument>, <comment type="block" pos:line="170" pos:column="38">/* attr = */</comment> <argument><expr><name pos:line="170" pos:column="51">NULL<pos:position pos:line="170" pos:column="55"/></name></expr></argument>)<pos:position pos:line="170" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="57"/></expr_stmt>

    <return pos:line="172" pos:column="5">return;<pos:position pos:line="172" pos:column="12"/></return>
 <label><name pos:line="173" pos:column="2">errout<pos:position pos:line="173" pos:column="8"/></name>:<pos:position pos:line="173" pos:column="9"/></label>
    <if pos:line="174" pos:column="5">if <condition pos:line="174" pos:column="8">(<expr><name><name pos:line="174" pos:column="9">tctx<pos:position pos:line="174" pos:column="13"/></name><operator pos:line="174" pos:column="13">-&gt;<pos:position pos:line="174" pos:column="18"/></operator><name pos:line="174" pos:column="15">topic_name<pos:position pos:line="174" pos:column="25"/></name></name> <operator pos:line="174" pos:column="26">!=<pos:position pos:line="174" pos:column="28"/></operator> <name pos:line="174" pos:column="29">NULL<pos:position pos:line="174" pos:column="33"/></name></expr>)<pos:position pos:line="174" pos:column="34"/></condition><then pos:line="174" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="175" pos:column="9">free<pos:position pos:line="175" pos:column="13"/></name><argument_list pos:line="175" pos:column="13">(<argument><expr><name><name pos:line="175" pos:column="14">tctx<pos:position pos:line="175" pos:column="18"/></name><operator pos:line="175" pos:column="18">-&gt;<pos:position pos:line="175" pos:column="23"/></operator><name pos:line="175" pos:column="20">topic_name<pos:position pos:line="175" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="32"/></expr_stmt></block></then></if>
    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><name><name pos:line="176" pos:column="9">tctx<pos:position pos:line="176" pos:column="13"/></name><operator pos:line="176" pos:column="13">-&gt;<pos:position pos:line="176" pos:column="18"/></operator><name pos:line="176" pos:column="15">conf<pos:position pos:line="176" pos:column="19"/></name></name> <operator pos:line="176" pos:column="20">!=<pos:position pos:line="176" pos:column="22"/></operator> <name pos:line="176" pos:column="23">NULL<pos:position pos:line="176" pos:column="27"/></name></expr>)<pos:position pos:line="176" pos:column="28"/></condition><then pos:line="176" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="177" pos:column="9">rd_kafka_topic_conf_destroy<pos:position pos:line="177" pos:column="36"/></name><argument_list pos:line="177" pos:column="36">(<argument><expr><name><name pos:line="177" pos:column="37">tctx<pos:position pos:line="177" pos:column="41"/></name><operator pos:line="177" pos:column="41">-&gt;<pos:position pos:line="177" pos:column="46"/></operator><name pos:line="177" pos:column="43">conf<pos:position pos:line="177" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="177" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="49"/></expr_stmt></block></then></if>
    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><name><name pos:line="178" pos:column="9">tctx<pos:position pos:line="178" pos:column="13"/></name><operator pos:line="178" pos:column="13">-&gt;<pos:position pos:line="178" pos:column="18"/></operator><name pos:line="178" pos:column="15">kafka_conf<pos:position pos:line="178" pos:column="25"/></name></name> <operator pos:line="178" pos:column="26">!=<pos:position pos:line="178" pos:column="28"/></operator> <name pos:line="178" pos:column="29">NULL<pos:position pos:line="178" pos:column="33"/></name></expr>)<pos:position pos:line="178" pos:column="34"/></condition><then pos:line="178" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="179" pos:column="17">rd_kafka_conf_destroy<pos:position pos:line="179" pos:column="38"/></name><argument_list pos:line="179" pos:column="38">(<argument><expr><name><name pos:line="179" pos:column="39">tctx<pos:position pos:line="179" pos:column="43"/></name><operator pos:line="179" pos:column="43">-&gt;<pos:position pos:line="179" pos:column="48"/></operator><name pos:line="179" pos:column="45">kafka_conf<pos:position pos:line="179" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="179" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="179" pos:column="57"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="180" pos:column="5">sfree<pos:position pos:line="180" pos:column="10"/></name><argument_list pos:line="180" pos:column="10">(<argument><expr><name pos:line="180" pos:column="11">tctx<pos:position pos:line="180" pos:column="15"/></name></expr></argument>)<pos:position pos:line="180" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="17"/></expr_stmt>
}<pos:position pos:line="181" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1696_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wg_flush_nolock<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">cdtime_t<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">timeout<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="47">struct<pos:position pos:line="1" pos:column="53"/></name> <name pos:line="1" pos:column="54">wg_callback<pos:position pos:line="1" pos:column="65"/></name></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">cb<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">status<pos:position pos:line="3" pos:column="15"/></name></decl>;<pos:position pos:line="3" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">DEBUG<pos:position pos:line="5" pos:column="10"/></name> <argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="string" pos:line="5" pos:column="12">"write_graphite plugin: wg_flush_nolock: timeout = %.3f; "<pos:position pos:line="5" pos:column="70"/></literal>
            <literal type="string" pos:line="6" pos:column="13">"send_buf_fill = %zu;"<pos:position pos:line="6" pos:column="35"/></literal></expr></argument>,
            <argument><expr><operator pos:line="7" pos:column="13">(<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">double<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">)<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">timeout<pos:position pos:line="7" pos:column="28"/></name></expr></argument>,
            <argument><expr><name><name pos:line="8" pos:column="13">cb<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">send_buf_fill<pos:position pos:line="8" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* timeout == 0  =&gt; flush unconditionally */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">timeout<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&gt;<pos:position pos:line="11" pos:column="21"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
    <block pos:line="12" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">cdtime_t<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">now<pos:position pos:line="13" pos:column="21"/></name></decl>;<pos:position pos:line="13" pos:column="22"/></decl_stmt>

        <expr_stmt><expr><name pos:line="15" pos:column="9">now<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">cdtime<pos:position pos:line="15" pos:column="21"/></name> <argument_list pos:line="15" pos:column="22">()<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">(<pos:position pos:line="16" pos:column="14"/></operator><name><name pos:line="16" pos:column="14">cb<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">send_buf_init_time<pos:position pos:line="16" pos:column="36"/></name></name> <operator pos:line="16" pos:column="37">+<pos:position pos:line="16" pos:column="38"/></operator> <name pos:line="16" pos:column="39">timeout<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">)<pos:position pos:line="16" pos:column="47"/></operator> <operator pos:line="16" pos:column="48">&gt;<pos:position pos:line="16" pos:column="52"/></operator> <name pos:line="16" pos:column="50">now<pos:position pos:line="16" pos:column="53"/></name></expr>)<pos:position pos:line="16" pos:column="54"/></condition><then pos:line="16" pos:column="54">
            <block type="pseudo"><return pos:line="17" pos:column="13">return <expr><operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal><operator pos:line="17" pos:column="22">)<pos:position pos:line="17" pos:column="23"/></operator></expr>;<pos:position pos:line="17" pos:column="24"/></return></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">cb<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">send_buf_fill<pos:position pos:line="20" pos:column="26"/></name></name> <operator pos:line="20" pos:column="27">&lt;=<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
    <block pos:line="21" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">cb<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">send_buf_init_time<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">=<pos:position pos:line="22" pos:column="33"/></operator> <call><name pos:line="22" pos:column="34">cdtime<pos:position pos:line="22" pos:column="40"/></name> <argument_list pos:line="22" pos:column="41">()<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator></expr>;<pos:position pos:line="23" pos:column="20"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="26" pos:column="5">status<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <call><name pos:line="26" pos:column="14">wg_send_buffer<pos:position pos:line="26" pos:column="28"/></name> <argument_list pos:line="26" pos:column="29">(<argument><expr><name pos:line="26" pos:column="30">cb<pos:position pos:line="26" pos:column="32"/></name></expr></argument>)<pos:position pos:line="26" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">wg_reset_buffer<pos:position pos:line="27" pos:column="20"/></name> <argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">cb<pos:position pos:line="27" pos:column="24"/></name></expr></argument>)<pos:position pos:line="27" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>

    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">(<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">status<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">)<pos:position pos:line="29" pos:column="20"/></operator></expr>;<pos:position pos:line="29" pos:column="21"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_416_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nut_ca_path<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">value<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">value<pos:position pos:line="2" pos:column="12"/></name> <operator pos:line="2" pos:column="13">!=<pos:position pos:line="2" pos:column="15"/></operator> <name pos:line="2" pos:column="16">NULL<pos:position pos:line="2" pos:column="20"/></name> <operator pos:line="2" pos:column="21">&amp;&amp;<pos:position pos:line="2" pos:column="31"/></operator> <call><name pos:line="2" pos:column="24">strcmp<pos:position pos:line="2" pos:column="30"/></name><argument_list pos:line="2" pos:column="30">(<argument><expr><name pos:line="2" pos:column="31">value<pos:position pos:line="2" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="38">""<pos:position pos:line="2" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="41"/></argument_list></call> <operator pos:line="2" pos:column="42">!=<pos:position pos:line="2" pos:column="44"/></operator> <literal type="number" pos:line="2" pos:column="45">0<pos:position pos:line="2" pos:column="46"/></literal></expr>)<pos:position pos:line="2" pos:column="47"/></condition><then pos:line="2" pos:column="47"> <block pos:line="2" pos:column="48">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">ca_path<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">=<pos:position pos:line="3" pos:column="14"/></operator> <call><name pos:line="3" pos:column="15">malloc<pos:position pos:line="3" pos:column="21"/></name><argument_list pos:line="3" pos:column="21">(<argument><expr><call><name pos:line="3" pos:column="22">strlen<pos:position pos:line="3" pos:column="28"/></name><argument_list pos:line="3" pos:column="28">(<argument><expr><name pos:line="3" pos:column="29">value<pos:position pos:line="3" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call> <operator pos:line="3" pos:column="36">+<pos:position pos:line="3" pos:column="37"/></operator> <literal type="number" pos:line="3" pos:column="38">1<pos:position pos:line="3" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">strncpy<pos:position pos:line="4" pos:column="12"/></name><argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">ca_path<pos:position pos:line="4" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="22">value<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="29">(<pos:position pos:line="4" pos:column="30"/></operator><call><name pos:line="4" pos:column="30">strlen<pos:position pos:line="4" pos:column="36"/></name><argument_list pos:line="4" pos:column="36">(<argument><expr><name pos:line="4" pos:column="37">value<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call> <operator pos:line="4" pos:column="44">+<pos:position pos:line="4" pos:column="45"/></operator> <literal type="number" pos:line="4" pos:column="46">1<pos:position pos:line="4" pos:column="47"/></literal><operator pos:line="4" pos:column="47">)<pos:position pos:line="4" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt>
  }<pos:position pos:line="5" pos:column="4"/></block></then> <else pos:line="5" pos:column="5">else <block pos:line="5" pos:column="10">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">ca_path<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">=<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt> <comment type="line" pos:line="6" pos:column="21">// Should alread be set to NULL from initialization</comment>
  }<pos:position pos:line="7" pos:column="4"/></block></else></if>
  <return pos:line="8" pos:column="3">return <expr><literal type="number" pos:line="8" pos:column="10">0<pos:position pos:line="8" pos:column="11"/></literal></expr>;<pos:position pos:line="8" pos:column="12"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2063_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">submit<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><specifier pos:line="1" pos:column="20">const<pos:position pos:line="1" pos:column="25"/></specifier> <name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">dev<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">type<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">ti1<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                   <parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">ti2<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">value_t<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">val<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">size_t<pos:position pos:line="2" pos:column="57"/></name></type> <name pos:line="2" pos:column="58">len<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list> <block pos:line="2" pos:column="63">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">value_list_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">vl<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="3" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name><name pos:line="5" pos:column="3">vl<pos:position pos:line="5" pos:column="5"/></name><operator pos:line="5" pos:column="5">.<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">values<pos:position pos:line="5" pos:column="12"/></name></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">val<pos:position pos:line="5" pos:column="18"/></name></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">vl<pos:position pos:line="6" pos:column="5"/></name><operator pos:line="6" pos:column="5">.<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">values_len<pos:position pos:line="6" pos:column="16"/></name></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">len<pos:position pos:line="6" pos:column="22"/></name></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">sstrncpy<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name><name pos:line="7" pos:column="12">vl<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">.<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">plugin<pos:position pos:line="7" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="23">"madwifi"<pos:position pos:line="7" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="34">sizeof<argument_list pos:line="7" pos:column="40">(<argument><expr><name><name pos:line="7" pos:column="41">vl<pos:position pos:line="7" pos:column="43"/></name><operator pos:line="7" pos:column="43">.<pos:position pos:line="7" pos:column="44"/></operator><name pos:line="7" pos:column="44">plugin<pos:position pos:line="7" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">sstrncpy<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">vl<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">.<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">plugin_instance<pos:position pos:line="8" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">dev<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="37">sizeof<argument_list pos:line="8" pos:column="43">(<argument><expr><name><name pos:line="8" pos:column="44">vl<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">plugin_instance<pos:position pos:line="8" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">sstrncpy<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">vl<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">type<pos:position pos:line="9" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="21">type<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="27">sizeof<argument_list pos:line="9" pos:column="33">(<argument><expr><name><name pos:line="9" pos:column="34">vl<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">type<pos:position pos:line="9" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">(<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">ti1<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">!=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">NULL<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">)<pos:position pos:line="11" pos:column="20"/></operator> <operator pos:line="11" pos:column="21">&amp;&amp;<pos:position pos:line="11" pos:column="31"/></operator> <operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="25">ti2<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">!=<pos:position pos:line="11" pos:column="31"/></operator> <name pos:line="11" pos:column="32">NULL<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">)<pos:position pos:line="11" pos:column="37"/></operator></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="5">snprintf<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name><name pos:line="12" pos:column="14">vl<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">type_instance<pos:position pos:line="12" pos:column="30"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="32">sizeof<argument_list pos:line="12" pos:column="38">(<argument><expr><name><name pos:line="12" pos:column="39">vl<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">type_instance<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="58">"%s-%s"<pos:position pos:line="12" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="67">ti1<pos:position pos:line="12" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="72">ti2<pos:position pos:line="12" pos:column="75"/></name></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt></block></then>
  <elseif pos:line="13" pos:column="3">else <if pos:line="13" pos:column="8">if <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">ti1<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">!=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator> <operator pos:line="13" pos:column="26">&amp;&amp;<pos:position pos:line="13" pos:column="36"/></operator> <operator pos:line="13" pos:column="29">(<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">ti2<pos:position pos:line="13" pos:column="33"/></name> <operator pos:line="13" pos:column="34">==<pos:position pos:line="13" pos:column="36"/></operator> <name pos:line="13" pos:column="37">NULL<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">)<pos:position pos:line="13" pos:column="42"/></operator></expr>)<pos:position pos:line="13" pos:column="43"/></condition><then pos:line="13" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="5">sstrncpy<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><name><name pos:line="14" pos:column="14">vl<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">.<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">type_instance<pos:position pos:line="14" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="32">ti1<pos:position pos:line="14" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="37">sizeof<argument_list pos:line="14" pos:column="43">(<argument><expr><name><name pos:line="14" pos:column="44">vl<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">.<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">type_instance<pos:position pos:line="14" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="63"/></expr_stmt></block></then></if></elseif></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">plugin_dispatch_values<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><operator pos:line="16" pos:column="26">&amp;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="27">vl<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

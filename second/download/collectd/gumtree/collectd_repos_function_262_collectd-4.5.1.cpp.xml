<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_262_collectd-4.5.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nut_read<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">nut_ups_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">ups<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">success<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">pthread_mutex_lock<pos:position pos:line="6" pos:column="21"/></name> <argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="24">read_lock<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="7" pos:column="3">success<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <name pos:line="7" pos:column="13">read_busy<pos:position pos:line="7" pos:column="22"/></name></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">read_busy<pos:position pos:line="8" pos:column="12"/></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">pthread_mutex_unlock<pos:position pos:line="9" pos:column="23"/></name> <argument_list pos:line="9" pos:column="24">(<argument><expr><operator pos:line="9" pos:column="25">&amp;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="26">read_lock<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">success<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">!=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator></expr>;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

  <for pos:line="14" pos:column="3">for <control pos:line="14" pos:column="7">(<init><expr><name pos:line="14" pos:column="8">ups<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">upslist_head<pos:position pos:line="14" pos:column="26"/></name></expr>;<pos:position pos:line="14" pos:column="27"/></init> <condition><expr><name pos:line="14" pos:column="28">ups<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">!=<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="35">NULL<pos:position pos:line="14" pos:column="39"/></name></expr>;<pos:position pos:line="14" pos:column="40"/></condition> <incr><expr><name pos:line="14" pos:column="41">ups<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">=<pos:position pos:line="14" pos:column="46"/></operator> <name><name pos:line="14" pos:column="47">ups<pos:position pos:line="14" pos:column="50"/></name><operator pos:line="14" pos:column="50">-&gt;<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="52">next<pos:position pos:line="14" pos:column="56"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="57"/></control>
    <block type="pseudo"><if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">nut_read_one<pos:position pos:line="15" pos:column="21"/></name> <argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">ups<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call> <operator pos:line="15" pos:column="28">==<pos:position pos:line="15" pos:column="30"/></operator> <literal type="number" pos:line="15" pos:column="31">0<pos:position pos:line="15" pos:column="32"/></literal></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">success<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">++<pos:position pos:line="16" pos:column="16"/></operator></expr>;<pos:position pos:line="16" pos:column="17"/></expr_stmt></block></then></if></block></for>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">pthread_mutex_lock<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">read_lock<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">read_busy<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="number" pos:line="19" pos:column="15">0<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">pthread_mutex_unlock<pos:position pos:line="20" pos:column="23"/></name> <argument_list pos:line="20" pos:column="24">(<argument><expr><operator pos:line="20" pos:column="25">&amp;<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="26">read_lock<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>

  <return pos:line="22" pos:column="3">return <expr><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><ternary><condition><expr><operator pos:line="22" pos:column="11">(<pos:position pos:line="22" pos:column="12"/></operator><name pos:line="22" pos:column="12">success<pos:position pos:line="22" pos:column="19"/></name> <operator pos:line="22" pos:column="20">!=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal><operator pos:line="22" pos:column="24">)<pos:position pos:line="22" pos:column="25"/></operator></expr> ?<pos:position pos:line="22" pos:column="27"/></condition><then pos:line="22" pos:column="27"> <expr><literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr> <pos:position pos:line="22" pos:column="30"/></then><else pos:line="22" pos:column="30">: <expr><operator pos:line="22" pos:column="32">-<pos:position pos:line="22" pos:column="33"/></operator><literal type="number" pos:line="22" pos:column="33">1<pos:position pos:line="22" pos:column="34"/></literal></expr></else></ternary><operator pos:line="22" pos:column="34">)<pos:position pos:line="22" pos:column="35"/></operator></expr>;<pos:position pos:line="22" pos:column="36"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

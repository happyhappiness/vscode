<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1474_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">cmd_status_t<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">cmd_handle_listval<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">FILE<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">fh<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">buffer<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">cmd_error_handler_t<pos:position pos:line="2" pos:column="22"/></name></type> <name pos:line="2" pos:column="23">err<pos:position pos:line="2" pos:column="26"/></name> <init pos:line="2" pos:column="27">= <expr><block pos:line="2" pos:column="29">{<expr><name pos:line="2" pos:column="30">cmd_error_fh<pos:position pos:line="2" pos:column="42"/></name></expr>, <expr><name pos:line="2" pos:column="44">fh<pos:position pos:line="2" pos:column="46"/></name></expr>}<pos:position pos:line="2" pos:column="47"/></block></expr></init></decl>;<pos:position pos:line="2" pos:column="48"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">cmd_status_t<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">status<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cmd_t<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">cmd<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier><modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">names<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">NULL<pos:position pos:line="6" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">cdtime_t<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">times<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">size_t<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">number<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUG<pos:position pos:line="10" pos:column="8"/></name><argument_list pos:line="10" pos:column="8">(<argument><expr><literal type="string" pos:line="10" pos:column="9">"utils_cmd_listval: handle_listval (fh = %p, buffer = %s);"<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>, <argument><expr><operator pos:line="10" pos:column="70">(<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="71">void<pos:position pos:line="10" pos:column="75"/></name> <operator pos:line="10" pos:column="76">*<pos:position pos:line="10" pos:column="77"/></operator><operator pos:line="10" pos:column="77">)<pos:position pos:line="10" pos:column="78"/></operator><name pos:line="10" pos:column="78">fh<pos:position pos:line="10" pos:column="80"/></name></expr></argument>,
        <argument><expr><name pos:line="11" pos:column="9">buffer<pos:position pos:line="11" pos:column="15"/></name></expr></argument>)<pos:position pos:line="11" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">status<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">cmd_parse<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">buffer<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="36">cmd<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">NULL<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="47">&amp;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="48">err<pos:position pos:line="13" pos:column="51"/></name></expr></argument>)<pos:position pos:line="13" pos:column="52"/></argument_list></call><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator> <operator pos:line="13" pos:column="54">!=<pos:position pos:line="13" pos:column="56"/></operator> <name pos:line="13" pos:column="57">CMD_OK<pos:position pos:line="13" pos:column="63"/></name></expr>)<pos:position pos:line="13" pos:column="64"/></condition><then pos:line="13" pos:column="64">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name><name pos:line="15" pos:column="7">cmd<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">.<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">type<pos:position pos:line="15" pos:column="15"/></name></name> <operator pos:line="15" pos:column="16">!=<pos:position pos:line="15" pos:column="18"/></operator> <name pos:line="15" pos:column="19">CMD_LISTVAL<pos:position pos:line="15" pos:column="30"/></name></expr>)<pos:position pos:line="15" pos:column="31"/></condition><then pos:line="15" pos:column="31"> <block pos:line="15" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">cmd_error<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">CMD_UNKNOWN_COMMAND<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="37">err<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="42">"Unexpected command: `%s'."<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="17" pos:column="15">CMD_TO_STRING<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name><name pos:line="17" pos:column="29">cmd<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">.<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">type<pos:position pos:line="17" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">free_everything_and_return<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">CMD_UNKNOWN_COMMAND<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="21" pos:column="3">status<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">uc_get_names<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><operator pos:line="21" pos:column="25">&amp;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="26">names<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="33">&amp;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="34">times<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="41">&amp;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="42">number<pos:position pos:line="21" pos:column="48"/></name></expr></argument>)<pos:position pos:line="21" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="50"/></expr_stmt>
  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">!=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">0<pos:position pos:line="22" pos:column="18"/></literal></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">DEBUG<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"command listval: uc_get_names failed with status %i"<pos:position pos:line="23" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="66">status<pos:position pos:line="23" pos:column="72"/></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">cmd_error<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">CMD_ERROR<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="26">&amp;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="27">err<pos:position pos:line="24" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="32">"uc_get_names failed."<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">free_everything_and_return<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">CMD_ERROR<pos:position pos:line="25" pos:column="41"/></name></expr></argument>)<pos:position pos:line="25" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="43"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="28" pos:column="3">print_to_socket<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">fh<pos:position pos:line="28" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"%i Value%s found\n"<pos:position pos:line="28" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="28" pos:column="45">(<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="46">int<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">)<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">number<pos:position pos:line="28" pos:column="56"/></name></expr></argument>,
                  <argument><expr><ternary><condition><expr><operator pos:line="29" pos:column="19">(<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">number<pos:position pos:line="29" pos:column="26"/></name> <operator pos:line="29" pos:column="27">==<pos:position pos:line="29" pos:column="29"/></operator> <literal type="number" pos:line="29" pos:column="30">1<pos:position pos:line="29" pos:column="31"/></literal><operator pos:line="29" pos:column="31">)<pos:position pos:line="29" pos:column="32"/></operator></expr> ?<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34"> <expr><literal type="string" pos:line="29" pos:column="35">""<pos:position pos:line="29" pos:column="37"/></literal></expr> <pos:position pos:line="29" pos:column="38"/></then><else pos:line="29" pos:column="38">: <expr><literal type="string" pos:line="29" pos:column="40">"s"<pos:position pos:line="29" pos:column="43"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="29" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>
  <for pos:line="30" pos:column="3">for <control pos:line="30" pos:column="7">(<init><decl><type><name pos:line="30" pos:column="8">size_t<pos:position pos:line="30" pos:column="14"/></name></type> <name pos:line="30" pos:column="15">i<pos:position pos:line="30" pos:column="16"/></name> <init pos:line="30" pos:column="17">= <expr><literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="21"/></init> <condition><expr><name pos:line="30" pos:column="22">i<pos:position pos:line="30" pos:column="23"/></name> <operator pos:line="30" pos:column="24">&lt;<pos:position pos:line="30" pos:column="28"/></operator> <name pos:line="30" pos:column="26">number<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></condition> <incr><expr><name pos:line="30" pos:column="34">i<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">++<pos:position pos:line="30" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="30" pos:column="38"/></control>
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="5">print_to_socket<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">fh<pos:position pos:line="31" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="25">"%.3f %s\n"<pos:position pos:line="31" pos:column="36"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="38">CDTIME_T_TO_DOUBLE<pos:position pos:line="31" pos:column="56"/></name><argument_list pos:line="31" pos:column="56">(<argument><expr><name><name pos:line="31" pos:column="57">times<pos:position pos:line="31" pos:column="62"/></name><index pos:line="31" pos:column="62">[<expr><name pos:line="31" pos:column="63">i<pos:position pos:line="31" pos:column="64"/></name></expr>]<pos:position pos:line="31" pos:column="65"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="68">names<pos:position pos:line="31" pos:column="73"/></name><index pos:line="31" pos:column="73">[<expr><name pos:line="31" pos:column="74">i<pos:position pos:line="31" pos:column="75"/></name></expr>]<pos:position pos:line="31" pos:column="76"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="78"/></expr_stmt></block></for>

  <expr_stmt><expr><call><name pos:line="33" pos:column="3">free_everything_and_return<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">CMD_OK<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

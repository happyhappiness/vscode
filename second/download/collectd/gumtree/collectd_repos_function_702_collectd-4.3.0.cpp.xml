<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_702_collectd-4.3.0.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ut_check_threshold<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">data_set_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ds<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">value_list_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">vl<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">threshold_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">th<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gauge_t<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">values<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">threshold_tree<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">==<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator></expr>;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>
  <comment type="block" pos:line="9" pos:column="3">/* Is this lock really necessary? So far, thresholds are only inserted at
   * startup. -octo */</comment>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">pthread_mutex_lock<pos:position pos:line="11" pos:column="21"/></name> <argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="24">threshold_lock<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="12" pos:column="3">th<pos:position pos:line="12" pos:column="5"/></name> <operator pos:line="12" pos:column="6">=<pos:position pos:line="12" pos:column="7"/></operator> <call><name pos:line="12" pos:column="8">threshold_search<pos:position pos:line="12" pos:column="24"/></name> <argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">ds<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="30">vl<pos:position pos:line="12" pos:column="32"/></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">pthread_mutex_unlock<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><operator pos:line="13" pos:column="25">&amp;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="26">threshold_lock<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">th<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">==<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">NULL<pos:position pos:line="14" pos:column="17"/></name></expr>)<pos:position pos:line="14" pos:column="18"/></condition><then pos:line="14" pos:column="18">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator></expr>;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="17" pos:column="3">DEBUG<pos:position pos:line="17" pos:column="8"/></name> <argument_list pos:line="17" pos:column="9">(<argument><expr><literal type="string" pos:line="17" pos:column="10">"ut_check_threshold: Found matching threshold"<pos:position pos:line="17" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>

  <expr_stmt><expr><name pos:line="19" pos:column="3">values<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">uc_get_rate<pos:position pos:line="19" pos:column="23"/></name> <argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">ds<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">vl<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">values<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal><operator pos:line="21" pos:column="14">)<pos:position pos:line="21" pos:column="15"/></operator></expr>;<pos:position pos:line="21" pos:column="16"/></return></block></then></if>

  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><expr><name pos:line="23" pos:column="8">i<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <literal type="number" pos:line="23" pos:column="12">0<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></init> <condition><expr><name pos:line="23" pos:column="15">i<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">&lt;<pos:position pos:line="23" pos:column="21"/></operator> <name><name pos:line="23" pos:column="19">ds<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">-&gt;<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="23">ds_num<pos:position pos:line="23" pos:column="29"/></name></name></expr>;<pos:position pos:line="23" pos:column="30"/></condition> <incr><expr><name pos:line="23" pos:column="31">i<pos:position pos:line="23" pos:column="32"/></name><operator pos:line="23" pos:column="32">++<pos:position pos:line="23" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="35"/></control>
  <block pos:line="24" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">is_inverted<pos:position pos:line="25" pos:column="20"/></name> <init pos:line="25" pos:column="21">= <expr><literal type="number" pos:line="25" pos:column="23">0<pos:position pos:line="25" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="25" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">is_warning<pos:position pos:line="26" pos:column="19"/></name> <init pos:line="26" pos:column="20">= <expr><literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">is_failure<pos:position pos:line="27" pos:column="19"/></name> <init pos:line="27" pos:column="20">= <expr><literal type="number" pos:line="27" pos:column="22">0<pos:position pos:line="27" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="24"/></decl_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name><name pos:line="29" pos:column="10">th<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">flags<pos:position pos:line="29" pos:column="19"/></name></name> <operator pos:line="29" pos:column="20">&amp;<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="22">UT_FLAG_INVERT<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">)<pos:position pos:line="29" pos:column="37"/></operator> <operator pos:line="29" pos:column="38">!=<pos:position pos:line="29" pos:column="40"/></operator> <literal type="number" pos:line="29" pos:column="41">0<pos:position pos:line="29" pos:column="42"/></literal></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="7">is_inverted<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">=<pos:position pos:line="30" pos:column="20"/></operator> <literal type="number" pos:line="30" pos:column="21">1<pos:position pos:line="30" pos:column="22"/></literal></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt></block></then></if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">!<pos:position pos:line="31" pos:column="11"/></operator><call><name pos:line="31" pos:column="11">isnan<pos:position pos:line="31" pos:column="16"/></name> <argument_list pos:line="31" pos:column="17">(<argument><expr><name><name pos:line="31" pos:column="18">th<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">failure_min<pos:position pos:line="31" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call> <operator pos:line="31" pos:column="35">&amp;&amp;<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="38">(<pos:position pos:line="31" pos:column="39"/></operator><name><name pos:line="31" pos:column="39">th<pos:position pos:line="31" pos:column="41"/></name><operator pos:line="31" pos:column="41">-&gt;<pos:position pos:line="31" pos:column="46"/></operator><name pos:line="31" pos:column="43">failure_min<pos:position pos:line="31" pos:column="54"/></name></name> <operator pos:line="31" pos:column="55">&gt;<pos:position pos:line="31" pos:column="59"/></operator> <name><name pos:line="31" pos:column="57">values<pos:position pos:line="31" pos:column="63"/></name><index pos:line="31" pos:column="63">[<expr><name pos:line="31" pos:column="64">i<pos:position pos:line="31" pos:column="65"/></name></expr>]<pos:position pos:line="31" pos:column="66"/></index></name><operator pos:line="31" pos:column="66">)<pos:position pos:line="31" pos:column="67"/></operator><operator pos:line="31" pos:column="67">)<pos:position pos:line="31" pos:column="68"/></operator>
	<operator pos:line="32" pos:column="9">||<pos:position pos:line="32" pos:column="11"/></operator> <operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><operator pos:line="32" pos:column="13">!<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">isnan<pos:position pos:line="32" pos:column="19"/></name> <argument_list pos:line="32" pos:column="20">(<argument><expr><name><name pos:line="32" pos:column="21">th<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">failure_max<pos:position pos:line="32" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call> <operator pos:line="32" pos:column="38">&amp;&amp;<pos:position pos:line="32" pos:column="48"/></operator> <operator pos:line="32" pos:column="41">(<pos:position pos:line="32" pos:column="42"/></operator><name><name pos:line="32" pos:column="42">th<pos:position pos:line="32" pos:column="44"/></name><operator pos:line="32" pos:column="44">-&gt;<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="46">failure_max<pos:position pos:line="32" pos:column="57"/></name></name> <operator pos:line="32" pos:column="58">&lt;<pos:position pos:line="32" pos:column="62"/></operator> <name><name pos:line="32" pos:column="60">values<pos:position pos:line="32" pos:column="66"/></name><index pos:line="32" pos:column="66">[<expr><name pos:line="32" pos:column="67">i<pos:position pos:line="32" pos:column="68"/></name></expr>]<pos:position pos:line="32" pos:column="69"/></index></name><operator pos:line="32" pos:column="69">)<pos:position pos:line="32" pos:column="70"/></operator><operator pos:line="32" pos:column="70">)<pos:position pos:line="32" pos:column="71"/></operator></expr>)<pos:position pos:line="32" pos:column="72"/></condition><then pos:line="32" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="7">is_failure<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name pos:line="33" pos:column="20">is_inverted<pos:position pos:line="33" pos:column="31"/></name> <operator pos:line="33" pos:column="32">-<pos:position pos:line="33" pos:column="33"/></operator> <literal type="number" pos:line="33" pos:column="34">1<pos:position pos:line="33" pos:column="35"/></literal></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt></block></then></if>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">(<pos:position pos:line="34" pos:column="10"/></operator><operator pos:line="34" pos:column="10">!<pos:position pos:line="34" pos:column="11"/></operator><call><name pos:line="34" pos:column="11">isnan<pos:position pos:line="34" pos:column="16"/></name> <argument_list pos:line="34" pos:column="17">(<argument><expr><name><name pos:line="34" pos:column="18">th<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">warning_min<pos:position pos:line="34" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call> <operator pos:line="34" pos:column="35">&amp;&amp;<pos:position pos:line="34" pos:column="45"/></operator> <operator pos:line="34" pos:column="38">(<pos:position pos:line="34" pos:column="39"/></operator><name><name pos:line="34" pos:column="39">th<pos:position pos:line="34" pos:column="41"/></name><operator pos:line="34" pos:column="41">-&gt;<pos:position pos:line="34" pos:column="46"/></operator><name pos:line="34" pos:column="43">warning_min<pos:position pos:line="34" pos:column="54"/></name></name> <operator pos:line="34" pos:column="55">&gt;<pos:position pos:line="34" pos:column="59"/></operator> <name><name pos:line="34" pos:column="57">values<pos:position pos:line="34" pos:column="63"/></name><index pos:line="34" pos:column="63">[<expr><name pos:line="34" pos:column="64">i<pos:position pos:line="34" pos:column="65"/></name></expr>]<pos:position pos:line="34" pos:column="66"/></index></name><operator pos:line="34" pos:column="66">)<pos:position pos:line="34" pos:column="67"/></operator><operator pos:line="34" pos:column="67">)<pos:position pos:line="34" pos:column="68"/></operator>
	<operator pos:line="35" pos:column="9">||<pos:position pos:line="35" pos:column="11"/></operator> <operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><call><name pos:line="35" pos:column="14">isnan<pos:position pos:line="35" pos:column="19"/></name> <argument_list pos:line="35" pos:column="20">(<argument><expr><name><name pos:line="35" pos:column="21">th<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">warning_max<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="37"/></argument_list></call> <operator pos:line="35" pos:column="38">&amp;&amp;<pos:position pos:line="35" pos:column="48"/></operator> <operator pos:line="35" pos:column="41">(<pos:position pos:line="35" pos:column="42"/></operator><name><name pos:line="35" pos:column="42">th<pos:position pos:line="35" pos:column="44"/></name><operator pos:line="35" pos:column="44">-&gt;<pos:position pos:line="35" pos:column="49"/></operator><name pos:line="35" pos:column="46">warning_max<pos:position pos:line="35" pos:column="57"/></name></name> <operator pos:line="35" pos:column="58">&lt;<pos:position pos:line="35" pos:column="62"/></operator> <name><name pos:line="35" pos:column="60">values<pos:position pos:line="35" pos:column="66"/></name><index pos:line="35" pos:column="66">[<expr><name pos:line="35" pos:column="67">i<pos:position pos:line="35" pos:column="68"/></name></expr>]<pos:position pos:line="35" pos:column="69"/></index></name><operator pos:line="35" pos:column="69">)<pos:position pos:line="35" pos:column="70"/></operator><operator pos:line="35" pos:column="70">)<pos:position pos:line="35" pos:column="71"/></operator></expr>)<pos:position pos:line="35" pos:column="72"/></condition><then pos:line="35" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">is_warning<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <name pos:line="36" pos:column="20">is_inverted<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">-<pos:position pos:line="36" pos:column="33"/></operator> <literal type="number" pos:line="36" pos:column="34">1<pos:position pos:line="36" pos:column="35"/></literal></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">(<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">is_failure<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">!=<pos:position pos:line="38" pos:column="23"/></operator> <literal type="number" pos:line="38" pos:column="24">0<pos:position pos:line="38" pos:column="25"/></literal><operator pos:line="38" pos:column="25">)<pos:position pos:line="38" pos:column="26"/></operator> <operator pos:line="38" pos:column="27">||<pos:position pos:line="38" pos:column="29"/></operator> <operator pos:line="38" pos:column="30">(<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">is_warning<pos:position pos:line="38" pos:column="41"/></name> <operator pos:line="38" pos:column="42">!=<pos:position pos:line="38" pos:column="44"/></operator> <literal type="number" pos:line="38" pos:column="45">0<pos:position pos:line="38" pos:column="46"/></literal><operator pos:line="38" pos:column="46">)<pos:position pos:line="38" pos:column="47"/></operator></expr>)<pos:position pos:line="38" pos:column="48"/></condition><then pos:line="38" pos:column="48">
    <block pos:line="39" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">notification_t<pos:position pos:line="40" pos:column="21"/></name></type> <name pos:line="40" pos:column="22">n<pos:position pos:line="40" pos:column="23"/></name></decl>;<pos:position pos:line="40" pos:column="24"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="41" pos:column="7">char<pos:position pos:line="41" pos:column="11"/></name> <modifier pos:line="41" pos:column="12">*<pos:position pos:line="41" pos:column="13"/></modifier></type><name pos:line="41" pos:column="13">buf<pos:position pos:line="41" pos:column="16"/></name></decl>;<pos:position pos:line="41" pos:column="17"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="42" pos:column="7">size_t<pos:position pos:line="42" pos:column="13"/></name></type> <name pos:line="42" pos:column="14">bufsize<pos:position pos:line="42" pos:column="21"/></name></decl>;<pos:position pos:line="42" pos:column="22"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="43" pos:column="7">int<pos:position pos:line="43" pos:column="10"/></name></type> <name pos:line="43" pos:column="11">status<pos:position pos:line="43" pos:column="17"/></name></decl>;<pos:position pos:line="43" pos:column="18"/></decl_stmt>

      <decl_stmt><decl><type><name pos:line="45" pos:column="7">double<pos:position pos:line="45" pos:column="13"/></name></type> <name pos:line="45" pos:column="14">min<pos:position pos:line="45" pos:column="17"/></name></decl>;<pos:position pos:line="45" pos:column="18"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="46" pos:column="7">double<pos:position pos:line="46" pos:column="13"/></name></type> <name pos:line="46" pos:column="14">max<pos:position pos:line="46" pos:column="17"/></name></decl>;<pos:position pos:line="46" pos:column="18"/></decl_stmt>

      <expr_stmt><expr><name pos:line="48" pos:column="7">min<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="48" pos:column="13">(<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">is_failure<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">!=<pos:position pos:line="48" pos:column="27"/></operator> <literal type="number" pos:line="48" pos:column="28">0<pos:position pos:line="48" pos:column="29"/></literal><operator pos:line="48" pos:column="29">)<pos:position pos:line="48" pos:column="30"/></operator></expr> ?<pos:position pos:line="48" pos:column="32"/></condition><then pos:line="48" pos:column="32"> <expr><name><name pos:line="48" pos:column="33">th<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">failure_min<pos:position pos:line="48" pos:column="48"/></name></name></expr> <pos:position pos:line="48" pos:column="49"/></then><else pos:line="48" pos:column="49">: <expr><name><name pos:line="48" pos:column="51">th<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">-&gt;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="55">warning_min<pos:position pos:line="48" pos:column="66"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="48" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><name pos:line="49" pos:column="7">max<pos:position pos:line="49" pos:column="10"/></name> <operator pos:line="49" pos:column="11">=<pos:position pos:line="49" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">is_failure<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">!=<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="28">0<pos:position pos:line="49" pos:column="29"/></literal><operator pos:line="49" pos:column="29">)<pos:position pos:line="49" pos:column="30"/></operator></expr> ?<pos:position pos:line="49" pos:column="32"/></condition><then pos:line="49" pos:column="32"> <expr><name><name pos:line="49" pos:column="33">th<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">-&gt;<pos:position pos:line="49" pos:column="40"/></operator><name pos:line="49" pos:column="37">failure_max<pos:position pos:line="49" pos:column="48"/></name></name></expr> <pos:position pos:line="49" pos:column="49"/></then><else pos:line="49" pos:column="49">: <expr><name><name pos:line="49" pos:column="51">th<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">warning_max<pos:position pos:line="49" pos:column="66"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="49" pos:column="67"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="51" pos:column="7">DEBUG<pos:position pos:line="51" pos:column="12"/></name> <argument_list pos:line="51" pos:column="13">(<argument><expr><literal type="string" pos:line="51" pos:column="14">"ut_check_threshold: ds[%s]: %lf &lt;= !%lf &lt;= %lf (invert: %s)"<pos:position pos:line="51" pos:column="81"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="52" pos:column="11">ds<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">ds<pos:position pos:line="52" pos:column="17"/></name><index pos:line="52" pos:column="17">[<expr><name pos:line="52" pos:column="18">i<pos:position pos:line="52" pos:column="19"/></name></expr>]<pos:position pos:line="52" pos:column="20"/></index></name><operator pos:line="52" pos:column="20">.<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">name<pos:position pos:line="52" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="27">min<pos:position pos:line="52" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="32">values<pos:position pos:line="52" pos:column="38"/></name><index pos:line="52" pos:column="38">[<expr><name pos:line="52" pos:column="39">i<pos:position pos:line="52" pos:column="40"/></name></expr>]<pos:position pos:line="52" pos:column="41"/></index></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">max<pos:position pos:line="52" pos:column="46"/></name></expr></argument>,
	  <argument><expr><ternary><condition><expr><name pos:line="53" pos:column="11">is_inverted<pos:position pos:line="53" pos:column="22"/></name></expr> ?<pos:position pos:line="53" pos:column="24"/></condition><then pos:line="53" pos:column="24"> <expr><literal type="string" pos:line="53" pos:column="25">"true"<pos:position pos:line="53" pos:column="31"/></literal></expr> <pos:position pos:line="53" pos:column="32"/></then><else pos:line="53" pos:column="32">: <expr><literal type="string" pos:line="53" pos:column="34">"false"<pos:position pos:line="53" pos:column="41"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>

      <comment type="block" pos:line="55" pos:column="7">/* Copy the associative members */</comment>
      <expr_stmt><expr><call><name pos:line="56" pos:column="7">NOTIFICATION_INIT_VL<pos:position pos:line="56" pos:column="27"/></name> <argument_list pos:line="56" pos:column="28">(<argument><expr><operator pos:line="56" pos:column="29">&amp;<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="30">n<pos:position pos:line="56" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="33">vl<pos:position pos:line="56" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="37">ds<pos:position pos:line="56" pos:column="39"/></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="41"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="58" pos:column="7">n<pos:position pos:line="58" pos:column="8"/></name><operator pos:line="58" pos:column="8">.<pos:position pos:line="58" pos:column="9"/></operator><name pos:line="58" pos:column="9">severity<pos:position pos:line="58" pos:column="17"/></name></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <ternary><condition><expr><operator pos:line="58" pos:column="20">(<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">is_failure<pos:position pos:line="58" pos:column="31"/></name> <operator pos:line="58" pos:column="32">!=<pos:position pos:line="58" pos:column="34"/></operator> <literal type="number" pos:line="58" pos:column="35">0<pos:position pos:line="58" pos:column="36"/></literal><operator pos:line="58" pos:column="36">)<pos:position pos:line="58" pos:column="37"/></operator></expr> ?<pos:position pos:line="58" pos:column="39"/></condition><then pos:line="58" pos:column="39"> <expr><name pos:line="58" pos:column="40">NOTIF_FAILURE<pos:position pos:line="58" pos:column="53"/></name></expr> <pos:position pos:line="58" pos:column="54"/></then><else pos:line="58" pos:column="54">: <expr><name pos:line="58" pos:column="56">NOTIF_WARNING<pos:position pos:line="58" pos:column="69"/></name></expr></else></ternary></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="59" pos:column="7">n<pos:position pos:line="59" pos:column="8"/></name><operator pos:line="59" pos:column="8">.<pos:position pos:line="59" pos:column="9"/></operator><name pos:line="59" pos:column="9">time<pos:position pos:line="59" pos:column="13"/></name></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <name><name pos:line="59" pos:column="16">vl<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">time<pos:position pos:line="59" pos:column="24"/></name></name></expr>;<pos:position pos:line="59" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><name pos:line="61" pos:column="7">buf<pos:position pos:line="61" pos:column="10"/></name> <operator pos:line="61" pos:column="11">=<pos:position pos:line="61" pos:column="12"/></operator> <name><name pos:line="61" pos:column="13">n<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">.<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="15">message<pos:position pos:line="61" pos:column="22"/></name></name></expr>;<pos:position pos:line="61" pos:column="23"/></expr_stmt>
      <expr_stmt><expr><name pos:line="62" pos:column="7">bufsize<pos:position pos:line="62" pos:column="14"/></name> <operator pos:line="62" pos:column="15">=<pos:position pos:line="62" pos:column="16"/></operator> <sizeof pos:line="62" pos:column="17">sizeof <argument_list pos:line="62" pos:column="24">(<argument><expr><name><name pos:line="62" pos:column="25">n<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">.<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">message<pos:position pos:line="62" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="62" pos:column="36"/></expr_stmt>

      <expr_stmt><expr><name pos:line="64" pos:column="7">status<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">=<pos:position pos:line="64" pos:column="15"/></operator> <call><name pos:line="64" pos:column="16">snprintf<pos:position pos:line="64" pos:column="24"/></name> <argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">buf<pos:position pos:line="64" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="31">bufsize<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="40">"Host %s, plugin %s"<pos:position pos:line="64" pos:column="60"/></literal></expr></argument>,
	  <argument><expr><name><name pos:line="65" pos:column="11">vl<pos:position pos:line="65" pos:column="13"/></name><operator pos:line="65" pos:column="13">-&gt;<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="15">host<pos:position pos:line="65" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="21">vl<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">-&gt;<pos:position pos:line="65" pos:column="28"/></operator><name pos:line="65" pos:column="25">plugin<pos:position pos:line="65" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><name pos:line="66" pos:column="7">buf<pos:position pos:line="66" pos:column="10"/></name> <operator pos:line="66" pos:column="11">+=<pos:position pos:line="66" pos:column="13"/></operator> <name pos:line="66" pos:column="14">status<pos:position pos:line="66" pos:column="20"/></name></expr>;<pos:position pos:line="66" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="67" pos:column="7">bufsize<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">-=<pos:position pos:line="67" pos:column="17"/></operator> <name pos:line="67" pos:column="18">status<pos:position pos:line="67" pos:column="24"/></name></expr>;<pos:position pos:line="67" pos:column="25"/></expr_stmt>

      <if pos:line="69" pos:column="7">if <condition pos:line="69" pos:column="10">(<expr><name><name pos:line="69" pos:column="11">vl<pos:position pos:line="69" pos:column="13"/></name><operator pos:line="69" pos:column="13">-&gt;<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="15">plugin_instance<pos:position pos:line="69" pos:column="30"/></name><index pos:line="69" pos:column="30">[<expr><literal type="number" pos:line="69" pos:column="31">0<pos:position pos:line="69" pos:column="32"/></literal></expr>]<pos:position pos:line="69" pos:column="33"/></index></name> <operator pos:line="69" pos:column="34">!=<pos:position pos:line="69" pos:column="36"/></operator> <literal type="char" pos:line="69" pos:column="37">'\0'<pos:position pos:line="69" pos:column="41"/></literal></expr>)<pos:position pos:line="69" pos:column="42"/></condition><then pos:line="69" pos:column="42">
      <block pos:line="70" pos:column="7">{
	<expr_stmt><expr><name pos:line="71" pos:column="9">status<pos:position pos:line="71" pos:column="15"/></name> <operator pos:line="71" pos:column="16">=<pos:position pos:line="71" pos:column="17"/></operator> <call><name pos:line="71" pos:column="18">snprintf<pos:position pos:line="71" pos:column="26"/></name> <argument_list pos:line="71" pos:column="27">(<argument><expr><name pos:line="71" pos:column="28">buf<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="33">bufsize<pos:position pos:line="71" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="42">" (instance %s)"<pos:position pos:line="71" pos:column="58"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="72" pos:column="13">vl<pos:position pos:line="72" pos:column="15"/></name><operator pos:line="72" pos:column="15">-&gt;<pos:position pos:line="72" pos:column="20"/></operator><name pos:line="72" pos:column="17">plugin_instance<pos:position pos:line="72" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name pos:line="73" pos:column="9">buf<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">+=<pos:position pos:line="73" pos:column="15"/></operator> <name pos:line="73" pos:column="16">status<pos:position pos:line="73" pos:column="22"/></name></expr>;<pos:position pos:line="73" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="74" pos:column="9">bufsize<pos:position pos:line="74" pos:column="16"/></name> <operator pos:line="74" pos:column="17">-=<pos:position pos:line="74" pos:column="19"/></operator> <name pos:line="74" pos:column="20">status<pos:position pos:line="74" pos:column="26"/></name></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="75" pos:column="8"/></block></then></if>

      <expr_stmt><expr><name pos:line="77" pos:column="7">status<pos:position pos:line="77" pos:column="13"/></name> <operator pos:line="77" pos:column="14">=<pos:position pos:line="77" pos:column="15"/></operator> <call><name pos:line="77" pos:column="16">snprintf<pos:position pos:line="77" pos:column="24"/></name> <argument_list pos:line="77" pos:column="25">(<argument><expr><name pos:line="77" pos:column="26">buf<pos:position pos:line="77" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="31">bufsize<pos:position pos:line="77" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="40">" type %s"<pos:position pos:line="77" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="52">ds<pos:position pos:line="77" pos:column="54"/></name><operator pos:line="77" pos:column="54">-&gt;<pos:position pos:line="77" pos:column="59"/></operator><name pos:line="77" pos:column="56">type<pos:position pos:line="77" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="62"/></expr_stmt>
      <expr_stmt><expr><name pos:line="78" pos:column="7">buf<pos:position pos:line="78" pos:column="10"/></name> <operator pos:line="78" pos:column="11">+=<pos:position pos:line="78" pos:column="13"/></operator> <name pos:line="78" pos:column="14">status<pos:position pos:line="78" pos:column="20"/></name></expr>;<pos:position pos:line="78" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="79" pos:column="7">bufsize<pos:position pos:line="79" pos:column="14"/></name> <operator pos:line="79" pos:column="15">-=<pos:position pos:line="79" pos:column="17"/></operator> <name pos:line="79" pos:column="18">status<pos:position pos:line="79" pos:column="24"/></name></expr>;<pos:position pos:line="79" pos:column="25"/></expr_stmt>

      <if pos:line="81" pos:column="7">if <condition pos:line="81" pos:column="10">(<expr><name><name pos:line="81" pos:column="11">vl<pos:position pos:line="81" pos:column="13"/></name><operator pos:line="81" pos:column="13">-&gt;<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="15">type_instance<pos:position pos:line="81" pos:column="28"/></name><index pos:line="81" pos:column="28">[<expr><literal type="number" pos:line="81" pos:column="29">0<pos:position pos:line="81" pos:column="30"/></literal></expr>]<pos:position pos:line="81" pos:column="31"/></index></name> <operator pos:line="81" pos:column="32">!=<pos:position pos:line="81" pos:column="34"/></operator> <literal type="char" pos:line="81" pos:column="35">'\0'<pos:position pos:line="81" pos:column="39"/></literal></expr>)<pos:position pos:line="81" pos:column="40"/></condition><then pos:line="81" pos:column="40">
      <block pos:line="82" pos:column="7">{
	<expr_stmt><expr><name pos:line="83" pos:column="9">status<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <call><name pos:line="83" pos:column="18">snprintf<pos:position pos:line="83" pos:column="26"/></name> <argument_list pos:line="83" pos:column="27">(<argument><expr><name pos:line="83" pos:column="28">buf<pos:position pos:line="83" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="33">bufsize<pos:position pos:line="83" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="42">" (instance %s)"<pos:position pos:line="83" pos:column="58"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="84" pos:column="13">vl<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">type_instance<pos:position pos:line="84" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="85" pos:column="9">buf<pos:position pos:line="85" pos:column="12"/></name> <operator pos:line="85" pos:column="13">+=<pos:position pos:line="85" pos:column="15"/></operator> <name pos:line="85" pos:column="16">status<pos:position pos:line="85" pos:column="22"/></name></expr>;<pos:position pos:line="85" pos:column="23"/></expr_stmt>
	<expr_stmt><expr><name pos:line="86" pos:column="9">bufsize<pos:position pos:line="86" pos:column="16"/></name> <operator pos:line="86" pos:column="17">-=<pos:position pos:line="86" pos:column="19"/></operator> <name pos:line="86" pos:column="20">status<pos:position pos:line="86" pos:column="26"/></name></expr>;<pos:position pos:line="86" pos:column="27"/></expr_stmt>
      }<pos:position pos:line="87" pos:column="8"/></block></then></if>

      <if pos:line="89" pos:column="7">if <condition pos:line="89" pos:column="10">(<expr><name pos:line="89" pos:column="11">is_inverted<pos:position pos:line="89" pos:column="22"/></name></expr>)<pos:position pos:line="89" pos:column="23"/></condition><then pos:line="89" pos:column="23">
      <block pos:line="90" pos:column="7">{
	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><call><name pos:line="91" pos:column="14">isnan<pos:position pos:line="91" pos:column="19"/></name> <argument_list pos:line="91" pos:column="20">(<argument><expr><name pos:line="91" pos:column="21">min<pos:position pos:line="91" pos:column="24"/></name></expr></argument>)<pos:position pos:line="91" pos:column="25"/></argument_list></call> <operator pos:line="91" pos:column="26">&amp;&amp;<pos:position pos:line="91" pos:column="36"/></operator> <operator pos:line="91" pos:column="29">!<pos:position pos:line="91" pos:column="30"/></operator><call><name pos:line="91" pos:column="30">isnan<pos:position pos:line="91" pos:column="35"/></name> <argument_list pos:line="91" pos:column="36">(<argument><expr><name pos:line="91" pos:column="37">max<pos:position pos:line="91" pos:column="40"/></name></expr></argument>)<pos:position pos:line="91" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="42"/></condition><then pos:line="91" pos:column="42">
	<block pos:line="92" pos:column="9">{
	  <expr_stmt><expr><name pos:line="93" pos:column="11">status<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <call><name pos:line="93" pos:column="20">snprintf<pos:position pos:line="93" pos:column="28"/></name> <argument_list pos:line="93" pos:column="29">(<argument><expr><name pos:line="93" pos:column="30">buf<pos:position pos:line="93" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="35">bufsize<pos:position pos:line="93" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="44">": Data source \"%s\" is currently "<pos:position pos:line="93" pos:column="80"/></literal>
	      <literal type="string" pos:line="94" pos:column="15">"%f. That is within the %s region of %f and %f."<pos:position pos:line="94" pos:column="63"/></literal></expr></argument>,
	      <argument><expr><name><name pos:line="95" pos:column="15">ds<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">-&gt;<pos:position pos:line="95" pos:column="22"/></operator><name pos:line="95" pos:column="19">ds<pos:position pos:line="95" pos:column="21"/></name><index pos:line="95" pos:column="21">[<expr><name pos:line="95" pos:column="22">i<pos:position pos:line="95" pos:column="23"/></name></expr>]<pos:position pos:line="95" pos:column="24"/></index></name><operator pos:line="95" pos:column="24">.<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="25">name<pos:position pos:line="95" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="31">values<pos:position pos:line="95" pos:column="37"/></name><index pos:line="95" pos:column="37">[<expr><name pos:line="95" pos:column="38">i<pos:position pos:line="95" pos:column="39"/></name></expr>]<pos:position pos:line="95" pos:column="40"/></index></name></expr></argument>,
	      <argument><expr><ternary><condition><expr><operator pos:line="96" pos:column="15">(<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">is_failure<pos:position pos:line="96" pos:column="26"/></name> <operator pos:line="96" pos:column="27">!=<pos:position pos:line="96" pos:column="29"/></operator> <literal type="number" pos:line="96" pos:column="30">0<pos:position pos:line="96" pos:column="31"/></literal><operator pos:line="96" pos:column="31">)<pos:position pos:line="96" pos:column="32"/></operator></expr> ?<pos:position pos:line="96" pos:column="34"/></condition><then pos:line="96" pos:column="34"> <expr><literal type="string" pos:line="96" pos:column="35">"failure"<pos:position pos:line="96" pos:column="44"/></literal></expr> <pos:position pos:line="96" pos:column="45"/></then><else pos:line="96" pos:column="45">: <expr><literal type="string" pos:line="96" pos:column="47">"warning"<pos:position pos:line="96" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
	      <argument><expr><name pos:line="97" pos:column="15">min<pos:position pos:line="97" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="20">min<pos:position pos:line="97" pos:column="23"/></name></expr></argument>)<pos:position pos:line="97" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="25"/></expr_stmt>
	}<pos:position pos:line="98" pos:column="10"/></block></then>
	<else pos:line="99" pos:column="9">else
	<block pos:line="100" pos:column="9">{
	  <expr_stmt><expr><name pos:line="101" pos:column="11">status<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <call><name pos:line="101" pos:column="20">snprintf<pos:position pos:line="101" pos:column="28"/></name> <argument_list pos:line="101" pos:column="29">(<argument><expr><name pos:line="101" pos:column="30">buf<pos:position pos:line="101" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="35">bufsize<pos:position pos:line="101" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="44">": Data source \"%s\" is currently "<pos:position pos:line="101" pos:column="80"/></literal>
	      <literal type="string" pos:line="102" pos:column="15">"%f. That is %s the %s threshold of %f."<pos:position pos:line="102" pos:column="55"/></literal></expr></argument>,
	      <argument><expr><name><name pos:line="103" pos:column="15">ds<pos:position pos:line="103" pos:column="17"/></name><operator pos:line="103" pos:column="17">-&gt;<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="19">ds<pos:position pos:line="103" pos:column="21"/></name><index pos:line="103" pos:column="21">[<expr><name pos:line="103" pos:column="22">i<pos:position pos:line="103" pos:column="23"/></name></expr>]<pos:position pos:line="103" pos:column="24"/></index></name><operator pos:line="103" pos:column="24">.<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="25">name<pos:position pos:line="103" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="31">values<pos:position pos:line="103" pos:column="37"/></name><index pos:line="103" pos:column="37">[<expr><name pos:line="103" pos:column="38">i<pos:position pos:line="103" pos:column="39"/></name></expr>]<pos:position pos:line="103" pos:column="40"/></index></name></expr></argument>,
	      <argument><expr><ternary><condition><expr><call><name pos:line="104" pos:column="15">isnan<pos:position pos:line="104" pos:column="20"/></name> <argument_list pos:line="104" pos:column="21">(<argument><expr><name pos:line="104" pos:column="22">min<pos:position pos:line="104" pos:column="25"/></name></expr></argument>)<pos:position pos:line="104" pos:column="26"/></argument_list></call></expr> ?<pos:position pos:line="104" pos:column="28"/></condition><then pos:line="104" pos:column="28"> <expr><literal type="string" pos:line="104" pos:column="29">"below"<pos:position pos:line="104" pos:column="36"/></literal></expr> <pos:position pos:line="104" pos:column="37"/></then><else pos:line="104" pos:column="37">: <expr><literal type="string" pos:line="104" pos:column="39">"above"<pos:position pos:line="104" pos:column="46"/></literal></expr></else></ternary></expr></argument>,
	      <argument><expr><ternary><condition><expr><operator pos:line="105" pos:column="15">(<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="16">is_failure<pos:position pos:line="105" pos:column="26"/></name> <operator pos:line="105" pos:column="27">!=<pos:position pos:line="105" pos:column="29"/></operator> <literal type="number" pos:line="105" pos:column="30">0<pos:position pos:line="105" pos:column="31"/></literal><operator pos:line="105" pos:column="31">)<pos:position pos:line="105" pos:column="32"/></operator></expr> ?<pos:position pos:line="105" pos:column="34"/></condition><then pos:line="105" pos:column="34"> <expr><literal type="string" pos:line="105" pos:column="35">"failure"<pos:position pos:line="105" pos:column="44"/></literal></expr> <pos:position pos:line="105" pos:column="45"/></then><else pos:line="105" pos:column="45">: <expr><literal type="string" pos:line="105" pos:column="47">"warning"<pos:position pos:line="105" pos:column="56"/></literal></expr></else></ternary></expr></argument>,
	      <argument><expr><ternary><condition><expr><call><name pos:line="106" pos:column="15">isnan<pos:position pos:line="106" pos:column="20"/></name> <argument_list pos:line="106" pos:column="21">(<argument><expr><name pos:line="106" pos:column="22">min<pos:position pos:line="106" pos:column="25"/></name></expr></argument>)<pos:position pos:line="106" pos:column="26"/></argument_list></call></expr> ?<pos:position pos:line="106" pos:column="28"/></condition><then pos:line="106" pos:column="28"> <expr><name pos:line="106" pos:column="29">max<pos:position pos:line="106" pos:column="32"/></name></expr> <pos:position pos:line="106" pos:column="33"/></then><else pos:line="106" pos:column="33">: <expr><name pos:line="106" pos:column="35">min<pos:position pos:line="106" pos:column="38"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="106" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="107" pos:column="10"/></block></else></if>
      }<pos:position pos:line="108" pos:column="8"/></block></then>
      <else pos:line="109" pos:column="7">else <comment type="block" pos:line="109" pos:column="12">/* (!is_inverted) */</comment>
      <block pos:line="110" pos:column="7">{
	<expr_stmt><expr><name pos:line="111" pos:column="9">status<pos:position pos:line="111" pos:column="15"/></name> <operator pos:line="111" pos:column="16">=<pos:position pos:line="111" pos:column="17"/></operator> <call><name pos:line="111" pos:column="18">snprintf<pos:position pos:line="111" pos:column="26"/></name> <argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">buf<pos:position pos:line="111" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="33">bufsize<pos:position pos:line="111" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="42">": Data source \"%s\" is currently "<pos:position pos:line="111" pos:column="78"/></literal>
	    <literal type="string" pos:line="112" pos:column="13">"%f. That is %s the %s threshold of %f."<pos:position pos:line="112" pos:column="53"/></literal></expr></argument>,
	    <argument><expr><name><name pos:line="113" pos:column="13">ds<pos:position pos:line="113" pos:column="15"/></name><operator pos:line="113" pos:column="15">-&gt;<pos:position pos:line="113" pos:column="20"/></operator><name pos:line="113" pos:column="17">ds<pos:position pos:line="113" pos:column="19"/></name><index pos:line="113" pos:column="19">[<expr><name pos:line="113" pos:column="20">i<pos:position pos:line="113" pos:column="21"/></name></expr>]<pos:position pos:line="113" pos:column="22"/></index></name><operator pos:line="113" pos:column="22">.<pos:position pos:line="113" pos:column="23"/></operator><name pos:line="113" pos:column="23">name<pos:position pos:line="113" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="113" pos:column="29">values<pos:position pos:line="113" pos:column="35"/></name><index pos:line="113" pos:column="35">[<expr><name pos:line="113" pos:column="36">i<pos:position pos:line="113" pos:column="37"/></name></expr>]<pos:position pos:line="113" pos:column="38"/></index></name></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="114" pos:column="13">(<pos:position pos:line="114" pos:column="14"/></operator><name><name pos:line="114" pos:column="14">values<pos:position pos:line="114" pos:column="20"/></name><index pos:line="114" pos:column="20">[<expr><name pos:line="114" pos:column="21">i<pos:position pos:line="114" pos:column="22"/></name></expr>]<pos:position pos:line="114" pos:column="23"/></index></name> <operator pos:line="114" pos:column="24">&lt;<pos:position pos:line="114" pos:column="28"/></operator> <name pos:line="114" pos:column="26">min<pos:position pos:line="114" pos:column="29"/></name><operator pos:line="114" pos:column="29">)<pos:position pos:line="114" pos:column="30"/></operator></expr> ?<pos:position pos:line="114" pos:column="32"/></condition><then pos:line="114" pos:column="32"> <expr><literal type="string" pos:line="114" pos:column="33">"below"<pos:position pos:line="114" pos:column="40"/></literal></expr> <pos:position pos:line="114" pos:column="41"/></then><else pos:line="114" pos:column="41">: <expr><literal type="string" pos:line="114" pos:column="43">"above"<pos:position pos:line="114" pos:column="50"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="115" pos:column="13">(<pos:position pos:line="115" pos:column="14"/></operator><name pos:line="115" pos:column="14">is_failure<pos:position pos:line="115" pos:column="24"/></name> <operator pos:line="115" pos:column="25">!=<pos:position pos:line="115" pos:column="27"/></operator> <literal type="number" pos:line="115" pos:column="28">0<pos:position pos:line="115" pos:column="29"/></literal><operator pos:line="115" pos:column="29">)<pos:position pos:line="115" pos:column="30"/></operator></expr> ?<pos:position pos:line="115" pos:column="32"/></condition><then pos:line="115" pos:column="32"> <expr><literal type="string" pos:line="115" pos:column="33">"failure"<pos:position pos:line="115" pos:column="42"/></literal></expr> <pos:position pos:line="115" pos:column="43"/></then><else pos:line="115" pos:column="43">: <expr><literal type="string" pos:line="115" pos:column="45">"warning"<pos:position pos:line="115" pos:column="54"/></literal></expr></else></ternary></expr></argument>,
	    <argument><expr><ternary><condition><expr><operator pos:line="116" pos:column="13">(<pos:position pos:line="116" pos:column="14"/></operator><name><name pos:line="116" pos:column="14">values<pos:position pos:line="116" pos:column="20"/></name><index pos:line="116" pos:column="20">[<expr><name pos:line="116" pos:column="21">i<pos:position pos:line="116" pos:column="22"/></name></expr>]<pos:position pos:line="116" pos:column="23"/></index></name> <operator pos:line="116" pos:column="24">&lt;<pos:position pos:line="116" pos:column="28"/></operator> <name pos:line="116" pos:column="26">min<pos:position pos:line="116" pos:column="29"/></name><operator pos:line="116" pos:column="29">)<pos:position pos:line="116" pos:column="30"/></operator></expr> ?<pos:position pos:line="116" pos:column="32"/></condition><then pos:line="116" pos:column="32"> <expr><name pos:line="116" pos:column="33">min<pos:position pos:line="116" pos:column="36"/></name></expr> <pos:position pos:line="116" pos:column="37"/></then><else pos:line="116" pos:column="37">: <expr><name pos:line="116" pos:column="39">max<pos:position pos:line="116" pos:column="42"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="116" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="44"/></expr_stmt>
      }<pos:position pos:line="117" pos:column="8"/></block></else></if>
      <expr_stmt><expr><name pos:line="118" pos:column="7">buf<pos:position pos:line="118" pos:column="10"/></name> <operator pos:line="118" pos:column="11">+=<pos:position pos:line="118" pos:column="13"/></operator> <name pos:line="118" pos:column="14">status<pos:position pos:line="118" pos:column="20"/></name></expr>;<pos:position pos:line="118" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="119" pos:column="7">bufsize<pos:position pos:line="119" pos:column="14"/></name> <operator pos:line="119" pos:column="15">-=<pos:position pos:line="119" pos:column="17"/></operator> <name pos:line="119" pos:column="18">status<pos:position pos:line="119" pos:column="24"/></name></expr>;<pos:position pos:line="119" pos:column="25"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="121" pos:column="7">plugin_dispatch_notification<pos:position pos:line="121" pos:column="35"/></name> <argument_list pos:line="121" pos:column="36">(<argument><expr><operator pos:line="121" pos:column="37">&amp;<pos:position pos:line="121" pos:column="42"/></operator><name pos:line="121" pos:column="38">n<pos:position pos:line="121" pos:column="39"/></name></expr></argument>)<pos:position pos:line="121" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if>
  }<pos:position pos:line="123" pos:column="4"/></block></for> <comment type="block" pos:line="123" pos:column="5">/* for (i = 0; i &lt; ds-&gt;ds_num; i++) */</comment>

  <expr_stmt><expr><call><name pos:line="125" pos:column="3">sfree<pos:position pos:line="125" pos:column="8"/></name> <argument_list pos:line="125" pos:column="9">(<argument><expr><name pos:line="125" pos:column="10">values<pos:position pos:line="125" pos:column="16"/></name></expr></argument>)<pos:position pos:line="125" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="18"/></expr_stmt>

  <return pos:line="127" pos:column="3">return <expr><operator pos:line="127" pos:column="10">(<pos:position pos:line="127" pos:column="11"/></operator><literal type="number" pos:line="127" pos:column="11">0<pos:position pos:line="127" pos:column="12"/></literal><operator pos:line="127" pos:column="12">)<pos:position pos:line="127" pos:column="13"/></operator></expr>;<pos:position pos:line="127" pos:column="14"/></return>
}<pos:position pos:line="128" pos:column="2"/></block></function></unit>

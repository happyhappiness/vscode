<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_857_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Values_repr<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">PyObject<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">PyObject<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">ret<pos:position pos:line="2" pos:column="16"/></name></decl>, <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="2" pos:column="19">tmp<pos:position pos:line="2" pos:column="22"/></name></decl>;<pos:position pos:line="2" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="3" pos:column="3">static<pos:position pos:line="3" pos:column="9"/></specifier> <type><name pos:line="3" pos:column="10">PyObject<pos:position pos:line="3" pos:column="18"/></name> <modifier pos:line="3" pos:column="19">*<pos:position pos:line="3" pos:column="20"/></modifier></type><name pos:line="3" pos:column="20">l_interval<pos:position pos:line="3" pos:column="30"/></name> <init pos:line="3" pos:column="31">= <expr><name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="39">*<pos:position pos:line="3" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="40">l_values<pos:position pos:line="3" pos:column="48"/></name> <init pos:line="3" pos:column="49">= <expr><name pos:line="3" pos:column="51">NULL<pos:position pos:line="3" pos:column="55"/></name></expr></init></decl>, <modifier pos:line="3" pos:column="57">*<pos:position pos:line="3" pos:column="58"/></modifier><decl><type ref="prev"/><name pos:line="3" pos:column="58">l_meta<pos:position pos:line="3" pos:column="64"/></name> <init pos:line="3" pos:column="65">= <expr><name pos:line="3" pos:column="67">NULL<pos:position pos:line="3" pos:column="71"/></name></expr></init></decl>,
                  <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">l_closing<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">Values<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">self<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">Values<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></operator><operator pos:line="5" pos:column="27">)<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">s<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">l_interval<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">l_interval<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">cpy_string_to_unicode_or_bytes<pos:position pos:line="8" pos:column="48"/></name><argument_list pos:line="8" pos:column="48">(<argument><expr><literal type="string" pos:line="8" pos:column="49">",interval="<pos:position pos:line="8" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="63"/></expr_stmt></block></then></if>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">l_values<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">l_values<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">cpy_string_to_unicode_or_bytes<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><literal type="string" pos:line="10" pos:column="47">",values="<pos:position pos:line="10" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="59"/></expr_stmt></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">l_meta<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">l_meta<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">cpy_string_to_unicode_or_bytes<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><literal type="string" pos:line="12" pos:column="45">",meta="<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="55"/></expr_stmt></block></then></if>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">l_closing<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">==<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="5">l_closing<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <call><name pos:line="14" pos:column="17">cpy_string_to_unicode_or_bytes<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><literal type="string" pos:line="14" pos:column="48">")"<pos:position pos:line="14" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="53"/></expr_stmt></block></then></if>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">l_interval<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">NULL<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">||<pos:position pos:line="16" pos:column="28"/></operator> <name pos:line="16" pos:column="29">l_values<pos:position pos:line="16" pos:column="37"/></name> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="41">NULL<pos:position pos:line="16" pos:column="45"/></name> <operator pos:line="16" pos:column="46">||<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">l_meta<pos:position pos:line="16" pos:column="55"/></name> <operator pos:line="16" pos:column="56">==<pos:position pos:line="16" pos:column="58"/></operator> <name pos:line="16" pos:column="59">NULL<pos:position pos:line="16" pos:column="63"/></name> <operator pos:line="16" pos:column="64">||<pos:position pos:line="16" pos:column="66"/></operator>
      <name pos:line="17" pos:column="7">l_closing<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">==<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">NULL<pos:position pos:line="17" pos:column="24"/></name></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">NULL<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">ret<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">cpy_common_repr<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><name pos:line="20" pos:column="25">s<pos:position pos:line="20" pos:column="26"/></name></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name><name pos:line="21" pos:column="7">self<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">interval<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">!=<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">CPY_STRCAT<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><operator pos:line="22" pos:column="16">&amp;<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="17">ret<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">l_interval<pos:position pos:line="22" pos:column="32"/></name></expr></argument>)<pos:position pos:line="22" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">tmp<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">PyFloat_FromDouble<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name><name pos:line="23" pos:column="30">self<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">interval<pos:position pos:line="23" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">CPY_SUBSTITUTE<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">PyObject_Repr<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="35">tmp<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="40">tmp<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">ret<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="30">tmp<pos:position pos:line="25" pos:column="33"/></name></expr></argument>)<pos:position pos:line="25" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name><name pos:line="27" pos:column="7">self<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">values<pos:position pos:line="27" pos:column="19"/></name></name> <operator pos:line="27" pos:column="20">&amp;&amp;<pos:position pos:line="27" pos:column="30"/></operator>
      <operator pos:line="28" pos:column="7">(<pos:position pos:line="28" pos:column="8"/></operator><operator pos:line="28" pos:column="8">!<pos:position pos:line="28" pos:column="9"/></operator><call><name pos:line="28" pos:column="9">PyList_Check<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name><name pos:line="28" pos:column="22">self<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">values<pos:position pos:line="28" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call> <operator pos:line="28" pos:column="36">||<pos:position pos:line="28" pos:column="38"/></operator> <call><name pos:line="28" pos:column="39">PySequence_Length<pos:position pos:line="28" pos:column="56"/></name><argument_list pos:line="28" pos:column="56">(<argument><expr><name><name pos:line="28" pos:column="57">self<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">-&gt;<pos:position pos:line="28" pos:column="66"/></operator><name pos:line="28" pos:column="63">values<pos:position pos:line="28" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="70"/></argument_list></call> <operator pos:line="28" pos:column="71">&gt;<pos:position pos:line="28" pos:column="75"/></operator> <literal type="number" pos:line="28" pos:column="73">0<pos:position pos:line="28" pos:column="74"/></literal><operator pos:line="28" pos:column="74">)<pos:position pos:line="28" pos:column="75"/></operator></expr>)<pos:position pos:line="28" pos:column="76"/></condition><then pos:line="28" pos:column="76"> <block pos:line="28" pos:column="77">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">CPY_STRCAT<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><operator pos:line="29" pos:column="16">&amp;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="17">ret<pos:position pos:line="29" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="22">l_values<pos:position pos:line="29" pos:column="30"/></name></expr></argument>)<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">tmp<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">PyObject_Repr<pos:position pos:line="30" pos:column="24"/></name><argument_list pos:line="30" pos:column="24">(<argument><expr><name><name pos:line="30" pos:column="25">self<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">values<pos:position pos:line="30" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><operator pos:line="31" pos:column="24">&amp;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="25">ret<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">tmp<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name><name pos:line="33" pos:column="7">self<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">meta<pos:position pos:line="33" pos:column="17"/></name></name> <operator pos:line="33" pos:column="18">&amp;&amp;<pos:position pos:line="33" pos:column="28"/></operator>
      <operator pos:line="34" pos:column="7">(<pos:position pos:line="34" pos:column="8"/></operator><operator pos:line="34" pos:column="8">!<pos:position pos:line="34" pos:column="9"/></operator><call><name pos:line="34" pos:column="9">PyDict_Check<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name><name pos:line="34" pos:column="22">self<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">meta<pos:position pos:line="34" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call> <operator pos:line="34" pos:column="34">||<pos:position pos:line="34" pos:column="36"/></operator> <call><name pos:line="34" pos:column="37">PyDict_Size<pos:position pos:line="34" pos:column="48"/></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name><name pos:line="34" pos:column="49">self<pos:position pos:line="34" pos:column="53"/></name><operator pos:line="34" pos:column="53">-&gt;<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="55">meta<pos:position pos:line="34" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="60"/></argument_list></call> <operator pos:line="34" pos:column="61">&gt;<pos:position pos:line="34" pos:column="65"/></operator> <literal type="number" pos:line="34" pos:column="63">0<pos:position pos:line="34" pos:column="64"/></literal><operator pos:line="34" pos:column="64">)<pos:position pos:line="34" pos:column="65"/></operator></expr>)<pos:position pos:line="34" pos:column="66"/></condition><then pos:line="34" pos:column="66"> <block pos:line="34" pos:column="67">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">CPY_STRCAT<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><operator pos:line="35" pos:column="16">&amp;<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="17">ret<pos:position pos:line="35" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="22">l_meta<pos:position pos:line="35" pos:column="28"/></name></expr></argument>)<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">tmp<pos:position pos:line="36" pos:column="8"/></name> <operator pos:line="36" pos:column="9">=<pos:position pos:line="36" pos:column="10"/></operator> <call><name pos:line="36" pos:column="11">PyObject_Repr<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name><name pos:line="36" pos:column="25">self<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">-&gt;<pos:position pos:line="36" pos:column="34"/></operator><name pos:line="36" pos:column="31">meta<pos:position pos:line="36" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">CPY_STRCAT_AND_DEL<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><operator pos:line="37" pos:column="24">&amp;<pos:position pos:line="37" pos:column="29"/></operator><name pos:line="37" pos:column="25">ret<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">tmp<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">CPY_STRCAT<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><operator pos:line="39" pos:column="14">&amp;<pos:position pos:line="39" pos:column="19"/></operator><name pos:line="39" pos:column="15">ret<pos:position pos:line="39" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="20">l_closing<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
  <return pos:line="40" pos:column="3">return <expr><name pos:line="40" pos:column="10">ret<pos:position pos:line="40" pos:column="13"/></name></expr>;<pos:position pos:line="40" pos:column="14"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1516_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">format_protobuf<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">ProtobufCBuffer<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">buffer<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">pthread_mutex_lock<pos:position pos:line="2" pos:column="21"/></name><argument_list pos:line="2" pos:column="21">(<argument><expr><operator pos:line="2" pos:column="22">&amp;<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="23">metrics_lock<pos:position pos:line="2" pos:column="35"/></name></expr></argument>)<pos:position pos:line="2" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="37"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">unused_name<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">Io__Prometheus__Client__MetricFamily<pos:position pos:line="5" pos:column="39"/></name> <modifier pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></modifier></type><name pos:line="5" pos:column="41">fam<pos:position pos:line="5" pos:column="44"/></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">c_avl_iterator_t<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">iter<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><call><name pos:line="6" pos:column="28">c_avl_get_iterator<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">metrics<pos:position pos:line="6" pos:column="54"/></name></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
  <while pos:line="7" pos:column="3">while <condition pos:line="7" pos:column="9">(<expr><call><name pos:line="7" pos:column="10">c_avl_iterator_next<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">iter<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="36">(<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">void<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></operator><operator pos:line="7" pos:column="43">)<pos:position pos:line="7" pos:column="44"/></operator><operator pos:line="7" pos:column="44">&amp;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="45">unused_name<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="58">(<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="59">void<pos:position pos:line="7" pos:column="63"/></name> <operator pos:line="7" pos:column="64">*<pos:position pos:line="7" pos:column="65"/></operator><operator pos:line="7" pos:column="65">)<pos:position pos:line="7" pos:column="66"/></operator><operator pos:line="7" pos:column="66">&amp;<pos:position pos:line="7" pos:column="71"/></operator><name pos:line="7" pos:column="67">fam<pos:position pos:line="7" pos:column="70"/></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call> <operator pos:line="7" pos:column="72">==<pos:position pos:line="7" pos:column="74"/></operator> <literal type="number" pos:line="7" pos:column="75">0<pos:position pos:line="7" pos:column="76"/></literal></expr>)<pos:position pos:line="7" pos:column="77"/></condition> <block pos:line="7" pos:column="78">{
    <comment type="block" pos:line="8" pos:column="5">/* Prometheus uses a message length prefix to determine where one
     * MetricFamily ends and the next begins. This delimiter is encoded as a
     * "varint", which is common in Protobufs. */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">uint8_t<pos:position pos:line="11" pos:column="12"/></name></type> <name><name pos:line="11" pos:column="13">delim<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><name pos:line="11" pos:column="19">VARINT_UINT32_BYTES<pos:position pos:line="11" pos:column="38"/></name></expr>]<pos:position pos:line="11" pos:column="39"/></index></name> <init pos:line="11" pos:column="40">= <expr><block pos:line="11" pos:column="42">{<expr><literal type="number" pos:line="11" pos:column="43">0<pos:position pos:line="11" pos:column="44"/></literal></expr>}<pos:position pos:line="11" pos:column="45"/></block></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">size_t<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">delim_len<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><call><name pos:line="12" pos:column="24">varint<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(
        <argument><expr><name pos:line="13" pos:column="9">delim<pos:position pos:line="13" pos:column="14"/></name></expr></argument>,
        <argument><expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">uint32_t<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">)<pos:position pos:line="14" pos:column="19"/></operator><call><name pos:line="14" pos:column="19">io__prometheus__client__metric_family__get_packed_size<pos:position pos:line="14" pos:column="73"/></name><argument_list pos:line="14" pos:column="73">(<argument><expr><name pos:line="14" pos:column="74">fam<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">buffer<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">append<pos:position pos:line="15" pos:column="19"/></name></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">buffer<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">delim_len<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="39">delim<pos:position pos:line="15" pos:column="44"/></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">io__prometheus__client__metric_family__pack_to_buffer<pos:position pos:line="17" pos:column="58"/></name><argument_list pos:line="17" pos:column="58">(<argument><expr><name pos:line="17" pos:column="59">fam<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">buffer<pos:position pos:line="17" pos:column="70"/></name></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="72"/></expr_stmt>
  }<pos:position pos:line="18" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">c_avl_iterator_destroy<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">iter<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">pthread_mutex_unlock<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><operator pos:line="21" pos:column="24">&amp;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="25">metrics_lock<pos:position pos:line="21" pos:column="37"/></name></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

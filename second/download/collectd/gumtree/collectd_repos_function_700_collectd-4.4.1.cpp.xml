<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_700_collectd-4.4.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">memory_init<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_HOST_STATISTICS<pos:position pos:line="3" pos:column="25"/></name></expr></cpp:if>
	<expr_stmt><expr><name pos:line="4" pos:column="9">port_host<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">=<pos:position pos:line="4" pos:column="20"/></operator> <call><name pos:line="4" pos:column="21">mach_host_self<pos:position pos:line="4" pos:column="35"/></name> <argument_list pos:line="4" pos:column="36">()<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="5" pos:column="9">host_page_size<pos:position pos:line="5" pos:column="23"/></name> <argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">port_host<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="36">&amp;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="37">pagesize<pos:position pos:line="5" pos:column="45"/></name></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
<comment type="block" pos:line="6" pos:column="1">/* #endif HAVE_HOST_STATISTICS */</comment>

<cpp:elif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">elif<pos:position pos:line="8" pos:column="6"/></cpp:directive> <expr><name pos:line="8" pos:column="7">HAVE_SYSCTLBYNAME<pos:position pos:line="8" pos:column="24"/></name></expr></cpp:elif>
<comment type="block" pos:line="9" pos:column="1">/* no init stuff */</comment>
<comment type="block" pos:line="10" pos:column="1">/* #endif HAVE_SYSCTLBYNAME */</comment>

<cpp:elif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">elif<pos:position pos:line="12" pos:column="6"/></cpp:directive> <expr><call><name pos:line="12" pos:column="7">defined<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">KERNEL_LINUX<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr></cpp:elif>
<comment type="block" pos:line="13" pos:column="1">/* no init stuff */</comment>
<comment type="block" pos:line="14" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">elif<pos:position pos:line="16" pos:column="6"/></cpp:directive> <expr><call><name pos:line="16" pos:column="7">defined<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">HAVE_LIBKSTAT<pos:position pos:line="16" pos:column="28"/></name></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr></cpp:elif>
	<comment type="block" pos:line="17" pos:column="9">/* getpagesize(3C) tells me this does not fail.. */</comment>
	<expr_stmt><expr><name pos:line="18" pos:column="9">pagesize<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <call><name pos:line="18" pos:column="20">getpagesize<pos:position pos:line="18" pos:column="31"/></name> <argument_list pos:line="18" pos:column="32">()<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
	<if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">get_kstat<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><operator pos:line="19" pos:column="24">&amp;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="25">ksp<pos:position pos:line="19" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="30">"unix"<pos:position pos:line="19" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="38">0<pos:position pos:line="19" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="41">"system_pages"<pos:position pos:line="19" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="57"/></condition><then pos:line="19" pos:column="57">
		<block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="17">ksp<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">NULL<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt></block></then></if>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="21" pos:column="8">/* HAVE_LIBKSTAT */</comment>

	<return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator></expr>;<pos:position pos:line="23" pos:column="20"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

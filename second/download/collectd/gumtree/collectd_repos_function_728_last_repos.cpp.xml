<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_728_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">submit_match<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name><name pos:line="1" pos:column="31">struct<pos:position pos:line="1" pos:column="37"/></name> <name pos:line="1" pos:column="38">ipt_entry_match<pos:position pos:line="1" pos:column="53"/></name></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">match<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name><name pos:line="2" pos:column="31">struct<pos:position pos:line="2" pos:column="37"/></name> <name pos:line="2" pos:column="38">ipt_entry<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">entry<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier> <name pos:line="2" pos:column="62">ip_chain_t<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">chain<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
                        <parameter><decl><type><name pos:line="3" pos:column="25">int<pos:position pos:line="3" pos:column="28"/></name></type> <name pos:line="3" pos:column="29">rule_num<pos:position pos:line="3" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="38"/></parameter_list> <block pos:line="3" pos:column="39">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">value_list_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">vl<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="7" pos:column="3">/* Select the rules to collect */</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">chain<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">rule_type<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">RTYPE_NUM<pos:position pos:line="8" pos:column="36"/></name></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37"> <block pos:line="8" pos:column="38">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">chain<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">rule<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">num<pos:position pos:line="9" pos:column="24"/></name></name> <operator pos:line="9" pos:column="25">!=<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">rule_num<pos:position pos:line="9" pos:column="36"/></name></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><literal type="number" pos:line="10" pos:column="14">0<pos:position pos:line="10" pos:column="15"/></literal></expr>;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="11" pos:column="4"/></block></then> <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name pos:line="12" pos:column="9">strcmp<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name><name pos:line="12" pos:column="16">match<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">-&gt;<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="23">u<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">.<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">user<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">.<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">name<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="36">"comment"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call> <operator pos:line="12" pos:column="47">!=<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52">
      <block type="pseudo"><return pos:line="13" pos:column="7">return <expr><literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">chain<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">rule_type<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">==<pos:position pos:line="14" pos:column="29"/></operator> <name pos:line="14" pos:column="30">RTYPE_COMMENT<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">)<pos:position pos:line="14" pos:column="44"/></operator> <operator pos:line="14" pos:column="45">&amp;&amp;<pos:position pos:line="14" pos:column="55"/></operator>
        <operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><call><name pos:line="15" pos:column="10">strcmp<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><name><name pos:line="15" pos:column="17">chain<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">rule<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">comment<pos:position pos:line="15" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="38">(<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">char<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">*<pos:position pos:line="15" pos:column="45"/></operator><operator pos:line="15" pos:column="45">)<pos:position pos:line="15" pos:column="46"/></operator><name><name pos:line="15" pos:column="46">match<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">data<pos:position pos:line="15" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="58"/></argument_list></call> <operator pos:line="15" pos:column="59">!=<pos:position pos:line="15" pos:column="61"/></operator> <literal type="number" pos:line="15" pos:column="62">0<pos:position pos:line="15" pos:column="63"/></literal><operator pos:line="15" pos:column="63">)<pos:position pos:line="15" pos:column="64"/></operator></expr>)<pos:position pos:line="15" pos:column="65"/></condition><then pos:line="15" pos:column="65">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><literal type="number" pos:line="16" pos:column="14">0<pos:position pos:line="16" pos:column="15"/></literal></expr>;<pos:position pos:line="16" pos:column="16"/></return></block></then></if>
  }<pos:position pos:line="17" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="19" pos:column="3">sstrncpy<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">vl<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">plugin<pos:position pos:line="19" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"iptables"<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="35">sizeof<argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">vl<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">plugin<pos:position pos:line="19" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>

  <expr_stmt><expr><name pos:line="21" pos:column="3">status<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <call><name pos:line="21" pos:column="12">snprintf<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name><name pos:line="21" pos:column="21">vl<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">.<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">plugin_instance<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="41">sizeof<argument_list pos:line="21" pos:column="47">(<argument><expr><name><name pos:line="21" pos:column="48">vl<pos:position pos:line="21" pos:column="50"/></name><operator pos:line="21" pos:column="50">.<pos:position pos:line="21" pos:column="51"/></operator><name pos:line="21" pos:column="51">plugin_instance<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="67"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="69">"%s-%s"<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="22" pos:column="21">chain<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">table<pos:position pos:line="22" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="35">chain<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">-&gt;<pos:position pos:line="22" pos:column="45"/></operator><name pos:line="22" pos:column="42">chain<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">status<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">&lt;<pos:position pos:line="23" pos:column="19"/></operator> <literal type="number" pos:line="23" pos:column="17">1<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator> <operator pos:line="23" pos:column="20">||<pos:position pos:line="23" pos:column="22"/></operator> <operator pos:line="23" pos:column="23">(<pos:position pos:line="23" pos:column="24"/></operator><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">unsigned<pos:position pos:line="23" pos:column="33"/></name> <name pos:line="23" pos:column="34">int<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">)<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="38">status<pos:position pos:line="23" pos:column="44"/></name> <operator pos:line="23" pos:column="45">&gt;=<pos:position pos:line="23" pos:column="50"/></operator> <sizeof pos:line="23" pos:column="48">sizeof<argument_list pos:line="23" pos:column="54">(<argument><expr><name><name pos:line="23" pos:column="55">vl<pos:position pos:line="23" pos:column="57"/></name><operator pos:line="23" pos:column="57">.<pos:position pos:line="23" pos:column="58"/></operator><name pos:line="23" pos:column="58">plugin_instance<pos:position pos:line="23" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="74"/></argument_list></sizeof><operator pos:line="23" pos:column="74">)<pos:position pos:line="23" pos:column="75"/></operator></expr>)<pos:position pos:line="23" pos:column="76"/></condition><then pos:line="23" pos:column="76">
    <block type="pseudo"><return pos:line="24" pos:column="5">return <expr><literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></return></block></then></if>

  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">chain<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">-&gt;<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="14">name<pos:position pos:line="26" pos:column="18"/></name><index pos:line="26" pos:column="18">[<expr><literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal></expr>]<pos:position pos:line="26" pos:column="21"/></index></name> <operator pos:line="26" pos:column="22">!=<pos:position pos:line="26" pos:column="24"/></operator> <literal type="char" pos:line="26" pos:column="25">'\0'<pos:position pos:line="26" pos:column="29"/></literal></expr>)<pos:position pos:line="26" pos:column="30"/></condition><then pos:line="26" pos:column="30"> <block pos:line="26" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">sstrncpy<pos:position pos:line="27" pos:column="13"/></name><argument_list pos:line="27" pos:column="13">(<argument><expr><name><name pos:line="27" pos:column="14">vl<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">.<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">type_instance<pos:position pos:line="27" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="32">chain<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">name<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="45">sizeof<argument_list pos:line="27" pos:column="51">(<argument><expr><name><name pos:line="27" pos:column="52">vl<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">.<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="55">type_instance<pos:position pos:line="27" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="28" pos:column="4"/></block></then> <else pos:line="28" pos:column="5">else <block pos:line="28" pos:column="10">{
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">chain<pos:position pos:line="29" pos:column="14"/></name><operator pos:line="29" pos:column="14">-&gt;<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="16">rule_type<pos:position pos:line="29" pos:column="25"/></name></name> <operator pos:line="29" pos:column="26">==<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="29">RTYPE_NUM<pos:position pos:line="29" pos:column="38"/></name></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">snprintf<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name><name pos:line="30" pos:column="16">vl<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">.<pos:position pos:line="30" pos:column="19"/></operator><name pos:line="30" pos:column="19">type_instance<pos:position pos:line="30" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="34">sizeof<argument_list pos:line="30" pos:column="40">(<argument><expr><name><name pos:line="30" pos:column="41">vl<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">.<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">type_instance<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="60">"%i"<pos:position pos:line="30" pos:column="64"/></literal></expr></argument>,
               <argument><expr><name><name pos:line="31" pos:column="16">chain<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">-&gt;<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="23">rule<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">.<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">num<pos:position pos:line="31" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt></block></then>
    <else pos:line="32" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="7">sstrncpy<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name><name pos:line="33" pos:column="16">vl<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">.<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">type_instance<pos:position pos:line="33" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="34">(<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">char<pos:position pos:line="33" pos:column="39"/></name> <operator pos:line="33" pos:column="40">*<pos:position pos:line="33" pos:column="41"/></operator><operator pos:line="33" pos:column="41">)<pos:position pos:line="33" pos:column="42"/></operator><name><name pos:line="33" pos:column="42">match<pos:position pos:line="33" pos:column="47"/></name><operator pos:line="33" pos:column="47">-&gt;<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="49">data<pos:position pos:line="33" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="55">sizeof<argument_list pos:line="33" pos:column="61">(<argument><expr><name><name pos:line="33" pos:column="62">vl<pos:position pos:line="33" pos:column="64"/></name><operator pos:line="33" pos:column="64">.<pos:position pos:line="33" pos:column="65"/></operator><name pos:line="33" pos:column="65">type_instance<pos:position pos:line="33" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt></block></else></if>
  }<pos:position pos:line="34" pos:column="4"/></block></else></if>

  <expr_stmt><expr><call><name pos:line="36" pos:column="3">sstrncpy<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name><name pos:line="36" pos:column="12">vl<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">.<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="15">type<pos:position pos:line="36" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="21">"ipt_bytes"<pos:position pos:line="36" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="34">sizeof<argument_list pos:line="36" pos:column="40">(<argument><expr><name><name pos:line="36" pos:column="41">vl<pos:position pos:line="36" pos:column="43"/></name><operator pos:line="36" pos:column="43">.<pos:position pos:line="36" pos:column="44"/></operator><name pos:line="36" pos:column="44">type<pos:position pos:line="36" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">vl<pos:position pos:line="37" pos:column="5"/></name><operator pos:line="37" pos:column="5">.<pos:position pos:line="37" pos:column="6"/></operator><name pos:line="37" pos:column="6">values<pos:position pos:line="37" pos:column="12"/></name></name> <operator pos:line="37" pos:column="13">=<pos:position pos:line="37" pos:column="14"/></operator> <operator pos:line="37" pos:column="15">&amp;<pos:position pos:line="37" pos:column="20"/></operator><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">value_t<pos:position pos:line="37" pos:column="24"/></name><operator pos:line="37" pos:column="24">)<pos:position pos:line="37" pos:column="25"/></operator><block pos:line="37" pos:column="25">{<expr><operator pos:line="37" pos:column="26">.<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="27">derive<pos:position pos:line="37" pos:column="33"/></name> <operator pos:line="37" pos:column="34">=<pos:position pos:line="37" pos:column="35"/></operator> <operator pos:line="37" pos:column="36">(<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">derive_t<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">)<pos:position pos:line="37" pos:column="46"/></operator><name><name pos:line="37" pos:column="46">entry<pos:position pos:line="37" pos:column="51"/></name><operator pos:line="37" pos:column="51">-&gt;<pos:position pos:line="37" pos:column="56"/></operator><name pos:line="37" pos:column="53">counters<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">.<pos:position pos:line="37" pos:column="62"/></operator><name pos:line="37" pos:column="62">bcnt<pos:position pos:line="37" pos:column="66"/></name></name></expr>}<pos:position pos:line="37" pos:column="67"/></block></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">vl<pos:position pos:line="38" pos:column="5"/></name><operator pos:line="38" pos:column="5">.<pos:position pos:line="38" pos:column="6"/></operator><name pos:line="38" pos:column="6">values_len<pos:position pos:line="38" pos:column="16"/></name></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">1<pos:position pos:line="38" pos:column="20"/></literal></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">plugin_dispatch_values<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><operator pos:line="39" pos:column="26">&amp;<pos:position pos:line="39" pos:column="31"/></operator><name pos:line="39" pos:column="27">vl<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="41" pos:column="3">sstrncpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name><name pos:line="41" pos:column="12">vl<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">type<pos:position pos:line="41" pos:column="19"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="21">"ipt_packets"<pos:position pos:line="41" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="36">sizeof<argument_list pos:line="41" pos:column="42">(<argument><expr><name><name pos:line="41" pos:column="43">vl<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">.<pos:position pos:line="41" pos:column="46"/></operator><name pos:line="41" pos:column="46">type<pos:position pos:line="41" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="42" pos:column="3">vl<pos:position pos:line="42" pos:column="5"/></name><operator pos:line="42" pos:column="5">.<pos:position pos:line="42" pos:column="6"/></operator><name pos:line="42" pos:column="6">values<pos:position pos:line="42" pos:column="12"/></name></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <operator pos:line="42" pos:column="15">&amp;<pos:position pos:line="42" pos:column="20"/></operator><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">value_t<pos:position pos:line="42" pos:column="24"/></name><operator pos:line="42" pos:column="24">)<pos:position pos:line="42" pos:column="25"/></operator><block pos:line="42" pos:column="25">{<expr><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">derive<pos:position pos:line="42" pos:column="33"/></name> <operator pos:line="42" pos:column="34">=<pos:position pos:line="42" pos:column="35"/></operator> <operator pos:line="42" pos:column="36">(<pos:position pos:line="42" pos:column="37"/></operator><name pos:line="42" pos:column="37">derive_t<pos:position pos:line="42" pos:column="45"/></name><operator pos:line="42" pos:column="45">)<pos:position pos:line="42" pos:column="46"/></operator><name><name pos:line="42" pos:column="46">entry<pos:position pos:line="42" pos:column="51"/></name><operator pos:line="42" pos:column="51">-&gt;<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="53">counters<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">.<pos:position pos:line="42" pos:column="62"/></operator><name pos:line="42" pos:column="62">pcnt<pos:position pos:line="42" pos:column="66"/></name></name></expr>}<pos:position pos:line="42" pos:column="67"/></block></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">plugin_dispatch_values<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><operator pos:line="43" pos:column="26">&amp;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="27">vl<pos:position pos:line="43" pos:column="29"/></name></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>

  <return pos:line="45" pos:column="3">return <expr><literal type="number" pos:line="45" pos:column="10">0<pos:position pos:line="45" pos:column="11"/></literal></expr>;<pos:position pos:line="45" pos:column="12"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

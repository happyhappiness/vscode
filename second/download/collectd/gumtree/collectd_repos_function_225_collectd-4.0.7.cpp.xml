<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_225_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name pos:line="1" pos:column="13">ps_read_tasks<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">int<pos:position pos:line="1" pos:column="31"/></name></type> <name pos:line="1" pos:column="32">pid<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">list<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>  <name pos:line="4" pos:column="14">list_size<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">1<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt> <comment type="block" pos:line="4" pos:column="29">/* size of allocated space, in elements */</comment>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>  <name pos:line="5" pos:column="14">list_len<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><literal type="number" pos:line="5" pos:column="25">0<pos:position pos:line="5" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>  <comment type="block" pos:line="5" pos:column="29">/* number of currently used elements */</comment>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name></type>           <name><name pos:line="7" pos:column="24">dirname<pos:position pos:line="7" pos:column="31"/></name><index pos:line="7" pos:column="31">[<expr><literal type="number" pos:line="7" pos:column="32">64<pos:position pos:line="7" pos:column="34"/></literal></expr>]<pos:position pos:line="7" pos:column="35"/></index></name></decl>;<pos:position pos:line="7" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">DIR<pos:position pos:line="8" pos:column="12"/></name>           <modifier pos:line="8" pos:column="23">*<pos:position pos:line="8" pos:column="24"/></modifier></type><name pos:line="8" pos:column="24">dh<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="9" pos:column="9">struct<pos:position pos:line="9" pos:column="15"/></name> <name pos:line="9" pos:column="16">dirent<pos:position pos:line="9" pos:column="22"/></name></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">ent<pos:position pos:line="9" pos:column="27"/></name></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="11" pos:column="9">snprintf<pos:position pos:line="11" pos:column="17"/></name> <argument_list pos:line="11" pos:column="18">(<argument><expr><name pos:line="11" pos:column="19">dirname<pos:position pos:line="11" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="28">64<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="32">"/proc/%i/task"<pos:position pos:line="11" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="49">pid<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="12" pos:column="9">dirname<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><literal type="number" pos:line="12" pos:column="17">63<pos:position pos:line="12" pos:column="19"/></literal></expr>]<pos:position pos:line="12" pos:column="20"/></index></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <literal type="char" pos:line="12" pos:column="23">'\0'<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">(<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">dh<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">opendir<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">dirname<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call><operator pos:line="14" pos:column="36">)<pos:position pos:line="14" pos:column="37"/></operator> <operator pos:line="14" pos:column="38">==<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="41">NULL<pos:position pos:line="14" pos:column="45"/></name></expr>)<pos:position pos:line="14" pos:column="46"/></condition><then pos:line="14" pos:column="46">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">DEBUG<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"Failed to open directory `%s'"<pos:position pos:line="16" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="57">dirname<pos:position pos:line="16" pos:column="64"/></name></expr></argument>)<pos:position pos:line="16" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="66"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator></expr>;<pos:position pos:line="17" pos:column="31"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">ent<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">readdir<pos:position pos:line="20" pos:column="30"/></name> <argument_list pos:line="20" pos:column="31">(<argument><expr><name pos:line="20" pos:column="32">dh<pos:position pos:line="20" pos:column="34"/></name></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call><operator pos:line="20" pos:column="35">)<pos:position pos:line="20" pos:column="36"/></operator> <operator pos:line="20" pos:column="37">!=<pos:position pos:line="20" pos:column="39"/></operator> <name pos:line="20" pos:column="40">NULL<pos:position pos:line="20" pos:column="44"/></name></expr>)<pos:position pos:line="20" pos:column="45"/></condition>
	<block pos:line="21" pos:column="9">{
		<if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><operator pos:line="22" pos:column="21">!<pos:position pos:line="22" pos:column="22"/></operator><call><name pos:line="22" pos:column="22">isdigit<pos:position pos:line="22" pos:column="29"/></name> <argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">ent<pos:position pos:line="22" pos:column="34"/></name><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">d_name<pos:position pos:line="22" pos:column="42"/></name><index pos:line="22" pos:column="42">[<expr><literal type="number" pos:line="22" pos:column="43">0<pos:position pos:line="22" pos:column="44"/></literal></expr>]<pos:position pos:line="22" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="47"/></condition><then pos:line="22" pos:column="47">
			<block type="pseudo"><continue pos:line="23" pos:column="25">continue;<pos:position pos:line="23" pos:column="34"/></continue></block></then></if>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">(<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">list_len<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">+<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="36">&gt;=<pos:position pos:line="25" pos:column="41"/></operator> <name pos:line="25" pos:column="39">list_size<pos:position pos:line="25" pos:column="48"/></name></expr>)<pos:position pos:line="25" pos:column="49"/></condition><then pos:line="25" pos:column="49">
		<block pos:line="26" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="27" pos:column="25">int<pos:position pos:line="27" pos:column="28"/></name> <modifier pos:line="27" pos:column="29">*<pos:position pos:line="27" pos:column="30"/></modifier></type><name pos:line="27" pos:column="30">new_ptr<pos:position pos:line="27" pos:column="37"/></name></decl>;<pos:position pos:line="27" pos:column="38"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="28" pos:column="25">int<pos:position pos:line="28" pos:column="28"/></name></type>  <name pos:line="28" pos:column="30">new_size<pos:position pos:line="28" pos:column="38"/></name> <init pos:line="28" pos:column="39">= <expr><literal type="number" pos:line="28" pos:column="41">2<pos:position pos:line="28" pos:column="42"/></literal> <operator pos:line="28" pos:column="43">*<pos:position pos:line="28" pos:column="44"/></operator> <name pos:line="28" pos:column="45">list_size<pos:position pos:line="28" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="55"/></decl_stmt>
			<comment type="block" pos:line="29" pos:column="25">/* Comes in sizes: 2, 4, 8, 16, ... */</comment>

			<expr_stmt><expr><name pos:line="31" pos:column="25">new_ptr<pos:position pos:line="31" pos:column="32"/></name> <operator pos:line="31" pos:column="33">=<pos:position pos:line="31" pos:column="34"/></operator> <operator pos:line="31" pos:column="35">(<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">int<pos:position pos:line="31" pos:column="39"/></name> <operator pos:line="31" pos:column="40">*<pos:position pos:line="31" pos:column="41"/></operator><operator pos:line="31" pos:column="41">)<pos:position pos:line="31" pos:column="42"/></operator> <call><name pos:line="31" pos:column="43">realloc<pos:position pos:line="31" pos:column="50"/></name> <argument_list pos:line="31" pos:column="51">(<argument><expr><name pos:line="31" pos:column="52">list<pos:position pos:line="31" pos:column="56"/></name></expr></argument>, <argument><expr><call pos:line="31" pos:column="58">(<name pos:line="31" pos:column="59">size_t<pos:position pos:line="31" pos:column="65"/></name>) <argument_list pos:line="31" pos:column="67">(<argument><expr><sizeof pos:line="31" pos:column="68">sizeof <argument_list pos:line="31" pos:column="75">(<argument><expr><name pos:line="31" pos:column="76">int<pos:position pos:line="31" pos:column="79"/></name></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></sizeof> <operator pos:line="31" pos:column="81">*<pos:position pos:line="31" pos:column="82"/></operator> <name pos:line="31" pos:column="83">new_size<pos:position pos:line="31" pos:column="91"/></name></expr></argument>)<pos:position pos:line="31" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="94"/></expr_stmt>
			<if pos:line="32" pos:column="25">if <condition pos:line="32" pos:column="28">(<expr><name pos:line="32" pos:column="29">new_ptr<pos:position pos:line="32" pos:column="36"/></name> <operator pos:line="32" pos:column="37">==<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">NULL<pos:position pos:line="32" pos:column="44"/></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45">
			<block pos:line="33" pos:column="25">{
				<if pos:line="34" pos:column="33">if <condition pos:line="34" pos:column="36">(<expr><name pos:line="34" pos:column="37">list<pos:position pos:line="34" pos:column="41"/></name> <operator pos:line="34" pos:column="42">!=<pos:position pos:line="34" pos:column="44"/></operator> <name pos:line="34" pos:column="45">NULL<pos:position pos:line="34" pos:column="49"/></name></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50">
					<block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="41">free<pos:position pos:line="35" pos:column="45"/></name> <argument_list pos:line="35" pos:column="46">(<argument><expr><name pos:line="35" pos:column="47">list<pos:position pos:line="35" pos:column="51"/></name></expr></argument>)<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt></block></then></if>
				<expr_stmt><expr><call><name pos:line="36" pos:column="33">ERROR<pos:position pos:line="36" pos:column="38"/></name> <argument_list pos:line="36" pos:column="39">(<argument><expr><literal type="string" pos:line="36" pos:column="40">"processes plugin: "<pos:position pos:line="36" pos:column="60"/></literal>
						<literal type="string" pos:line="37" pos:column="49">"Failed to allocate more memory."<pos:position pos:line="37" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="84"/></expr_stmt>
				<return pos:line="38" pos:column="33">return <expr><operator pos:line="38" pos:column="40">(<pos:position pos:line="38" pos:column="41"/></operator><name pos:line="38" pos:column="41">NULL<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">)<pos:position pos:line="38" pos:column="46"/></operator></expr>;<pos:position pos:line="38" pos:column="47"/></return>
			}<pos:position pos:line="39" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="41" pos:column="25">list<pos:position pos:line="41" pos:column="29"/></name> <operator pos:line="41" pos:column="30">=<pos:position pos:line="41" pos:column="31"/></operator> <name pos:line="41" pos:column="32">new_ptr<pos:position pos:line="41" pos:column="39"/></name></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
			<expr_stmt><expr><name pos:line="42" pos:column="25">list_size<pos:position pos:line="42" pos:column="34"/></name> <operator pos:line="42" pos:column="35">=<pos:position pos:line="42" pos:column="36"/></operator> <name pos:line="42" pos:column="37">new_size<pos:position pos:line="42" pos:column="45"/></name></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="44" pos:column="25">memset<pos:position pos:line="44" pos:column="31"/></name> <argument_list pos:line="44" pos:column="32">(<argument><expr><name pos:line="44" pos:column="33">list<pos:position pos:line="44" pos:column="37"/></name> <operator pos:line="44" pos:column="38">+<pos:position pos:line="44" pos:column="39"/></operator> <name pos:line="44" pos:column="40">list_len<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="50">0<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="53">sizeof <argument_list pos:line="44" pos:column="60">(<argument><expr><name pos:line="44" pos:column="61">int<pos:position pos:line="44" pos:column="64"/></name></expr></argument>)<pos:position pos:line="44" pos:column="65"/></argument_list></sizeof> <operator pos:line="44" pos:column="66">*<pos:position pos:line="44" pos:column="67"/></operator> <operator pos:line="44" pos:column="68">(<pos:position pos:line="44" pos:column="69"/></operator><name pos:line="44" pos:column="69">list_size<pos:position pos:line="44" pos:column="78"/></name> <operator pos:line="44" pos:column="79">-<pos:position pos:line="44" pos:column="80"/></operator> <name pos:line="44" pos:column="81">list_len<pos:position pos:line="44" pos:column="89"/></name><operator pos:line="44" pos:column="89">)<pos:position pos:line="44" pos:column="90"/></operator></expr></argument>)<pos:position pos:line="44" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="92"/></expr_stmt>
		}<pos:position pos:line="45" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="47" pos:column="17">list<pos:position pos:line="47" pos:column="21"/></name><index pos:line="47" pos:column="21">[<expr><name pos:line="47" pos:column="22">list_len<pos:position pos:line="47" pos:column="30"/></name></expr>]<pos:position pos:line="47" pos:column="31"/></index></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <call><name pos:line="47" pos:column="34">atoi<pos:position pos:line="47" pos:column="38"/></name> <argument_list pos:line="47" pos:column="39">(<argument><expr><name><name pos:line="47" pos:column="40">ent<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">-&gt;<pos:position pos:line="47" pos:column="48"/></operator><name pos:line="47" pos:column="45">d_name<pos:position pos:line="47" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="53"/></expr_stmt>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name><name pos:line="48" pos:column="21">list<pos:position pos:line="48" pos:column="25"/></name><index pos:line="48" pos:column="25">[<expr><name pos:line="48" pos:column="26">list_len<pos:position pos:line="48" pos:column="34"/></name></expr>]<pos:position pos:line="48" pos:column="35"/></index></name> <operator pos:line="48" pos:column="36">!=<pos:position pos:line="48" pos:column="38"/></operator> <literal type="number" pos:line="48" pos:column="39">0<pos:position pos:line="48" pos:column="40"/></literal></expr>)<pos:position pos:line="48" pos:column="41"/></condition><then pos:line="48" pos:column="41">
			<block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="25">list_len<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">++<pos:position pos:line="49" pos:column="35"/></operator></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt></block></then></if>
	}<pos:position pos:line="50" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">closedir<pos:position pos:line="52" pos:column="17"/></name> <argument_list pos:line="52" pos:column="18">(<argument><expr><name pos:line="52" pos:column="19">dh<pos:position pos:line="52" pos:column="21"/></name></expr></argument>)<pos:position pos:line="52" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="23"/></expr_stmt>

	<if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">list_len<pos:position pos:line="54" pos:column="21"/></name> <operator pos:line="54" pos:column="22">==<pos:position pos:line="54" pos:column="24"/></operator> <literal type="number" pos:line="54" pos:column="25">0<pos:position pos:line="54" pos:column="26"/></literal></expr>)<pos:position pos:line="54" pos:column="27"/></condition><then pos:line="54" pos:column="27">
		<block type="pseudo"><return pos:line="55" pos:column="17">return <expr><operator pos:line="55" pos:column="24">(<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="25">NULL<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">)<pos:position pos:line="55" pos:column="30"/></operator></expr>;<pos:position pos:line="55" pos:column="31"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="57" pos:column="9">assert<pos:position pos:line="57" pos:column="15"/></name> <argument_list pos:line="57" pos:column="16">(<argument><expr><name pos:line="57" pos:column="17">list_len<pos:position pos:line="57" pos:column="25"/></name> <operator pos:line="57" pos:column="26">&lt;<pos:position pos:line="57" pos:column="30"/></operator> <name pos:line="57" pos:column="28">list_size<pos:position pos:line="57" pos:column="37"/></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">assert<pos:position pos:line="58" pos:column="15"/></name> <argument_list pos:line="58" pos:column="16">(<argument><expr><name><name pos:line="58" pos:column="17">list<pos:position pos:line="58" pos:column="21"/></name><index pos:line="58" pos:column="21">[<expr><name pos:line="58" pos:column="22">list_len<pos:position pos:line="58" pos:column="30"/></name></expr>]<pos:position pos:line="58" pos:column="31"/></index></name> <operator pos:line="58" pos:column="32">==<pos:position pos:line="58" pos:column="34"/></operator> <literal type="number" pos:line="58" pos:column="35">0<pos:position pos:line="58" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="38"/></expr_stmt>

	<return pos:line="60" pos:column="9">return <expr><operator pos:line="60" pos:column="16">(<pos:position pos:line="60" pos:column="17"/></operator><name pos:line="60" pos:column="17">list<pos:position pos:line="60" pos:column="21"/></name><operator pos:line="60" pos:column="21">)<pos:position pos:line="60" pos:column="22"/></operator></expr>;<pos:position pos:line="60" pos:column="23"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

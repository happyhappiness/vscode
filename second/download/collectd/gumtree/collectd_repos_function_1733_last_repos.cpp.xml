<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1733_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">yajl_gen_status<pos:position pos:line="1" pos:column="23"/></name></type> <name pos:line="1" pos:column="24">ovs_yajl_gen_val<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">yajl_gen<pos:position pos:line="1" pos:column="49"/></name></type> <name pos:line="1" pos:column="50">jgen<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">yajl_val<pos:position pos:line="1" pos:column="64"/></name></type> <name pos:line="1" pos:column="65">jval<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list> <block pos:line="1" pos:column="71">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">size_t<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">array_len<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><literal type="number" pos:line="2" pos:column="22">0<pos:position pos:line="2" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">yajl_val<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">jvalues<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name pos:line="3" pos:column="23">NULL<pos:position pos:line="3" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">yajl_val<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">jobj_value<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">obj_key<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">NULL<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">size_t<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">obj_len<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">yajl_gen_status<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">yajl_gen_ret<pos:position pos:line="7" pos:column="31"/></name> <init pos:line="7" pos:column="32">= <expr><name pos:line="7" pos:column="34">yajl_gen_status_ok<pos:position pos:line="7" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">jval<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">yajl_gen_generation_complete<pos:position pos:line="10" pos:column="40"/></name></expr>;<pos:position pos:line="10" pos:column="41"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">YAJL_IS_STRING<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><name pos:line="12" pos:column="22">jval<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">ovs_yajl_gen_tstring<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="41">jgen<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="47">YAJL_GET_STRING<pos:position pos:line="13" pos:column="62"/></name><argument_list pos:line="13" pos:column="62">(<argument><expr><name pos:line="13" pos:column="63">jval<pos:position pos:line="13" pos:column="67"/></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></expr_stmt></block></then>
  <elseif pos:line="14" pos:column="3">else <if pos:line="14" pos:column="8">if <condition pos:line="14" pos:column="11">(<expr><call><name pos:line="14" pos:column="12">YAJL_IS_DOUBLE<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">jval<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">yajl_gen_double<pos:position pos:line="15" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="36">jgen<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="42">YAJL_GET_DOUBLE<pos:position pos:line="15" pos:column="57"/></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name pos:line="15" pos:column="58">jval<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="16" pos:column="3">else <if pos:line="16" pos:column="8">if <condition pos:line="16" pos:column="11">(<expr><call><name pos:line="16" pos:column="12">YAJL_IS_INTEGER<pos:position pos:line="16" pos:column="27"/></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">jval<pos:position pos:line="16" pos:column="32"/></name></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">yajl_gen_double<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">jgen<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="42">YAJL_GET_INTEGER<pos:position pos:line="17" pos:column="58"/></name><argument_list pos:line="17" pos:column="58">(<argument><expr><name pos:line="17" pos:column="59">jval<pos:position pos:line="17" pos:column="63"/></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="18" pos:column="3">else <if pos:line="18" pos:column="8">if <condition pos:line="18" pos:column="11">(<expr><call><name pos:line="18" pos:column="12">YAJL_IS_TRUE<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">jval<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name pos:line="19" pos:column="19">yajl_gen_bool<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="34">jgen<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="40">1<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="20" pos:column="3">else <if pos:line="20" pos:column="8">if <condition pos:line="20" pos:column="11">(<expr><call><name pos:line="20" pos:column="12">YAJL_IS_FALSE<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">jval<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="21" pos:column="18"/></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name pos:line="21" pos:column="19">yajl_gen_bool<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="34">jgen<pos:position pos:line="21" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="40">0<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="22" pos:column="3">else <if pos:line="22" pos:column="8">if <condition pos:line="22" pos:column="11">(<expr><call><name pos:line="22" pos:column="12">YAJL_IS_NULL<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">jval<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name pos:line="23" pos:column="19">yajl_gen_null<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">jgen<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt></block></then></if></elseif>
  <elseif pos:line="24" pos:column="3">else <if pos:line="24" pos:column="8">if <condition pos:line="24" pos:column="11">(<expr><call><name pos:line="24" pos:column="12">YAJL_IS_ARRAY<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">jval<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32"> <block pos:line="24" pos:column="33">{
    <comment type="block" pos:line="25" pos:column="5">/* create new array and add all elements into the array */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">array_len<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <call><name pos:line="26" pos:column="17">YAJL_GET_ARRAY<pos:position pos:line="26" pos:column="31"/></name><argument_list pos:line="26" pos:column="31">(<argument><expr><name pos:line="26" pos:column="32">jval<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">len<pos:position pos:line="26" pos:column="42"/></name></expr>;<pos:position pos:line="26" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">jvalues<pos:position pos:line="27" pos:column="12"/></name> <operator pos:line="27" pos:column="13">=<pos:position pos:line="27" pos:column="14"/></operator> <call><name pos:line="27" pos:column="15">YAJL_GET_ARRAY<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><name pos:line="27" pos:column="30">jval<pos:position pos:line="27" pos:column="34"/></name></expr></argument>)<pos:position pos:line="27" pos:column="35"/></argument_list></call><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">values<pos:position pos:line="27" pos:column="43"/></name></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="28" pos:column="18"/></name><argument_list pos:line="28" pos:column="18">(<argument><expr><name pos:line="28" pos:column="19">yajl_gen_array_open<pos:position pos:line="28" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="40">jgen<pos:position pos:line="28" pos:column="44"/></name></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>
    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><decl><type><name pos:line="29" pos:column="10">size_t<pos:position pos:line="29" pos:column="16"/></name></type> <name pos:line="29" pos:column="17">i<pos:position pos:line="29" pos:column="18"/></name> <init pos:line="29" pos:column="19">= <expr><literal type="number" pos:line="29" pos:column="21">0<pos:position pos:line="29" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="23"/></init> <condition><expr><name pos:line="29" pos:column="24">i<pos:position pos:line="29" pos:column="25"/></name> <operator pos:line="29" pos:column="26">&lt;<pos:position pos:line="29" pos:column="30"/></operator> <name pos:line="29" pos:column="28">array_len<pos:position pos:line="29" pos:column="37"/></name></expr>;<pos:position pos:line="29" pos:column="38"/></condition> <incr><expr><name pos:line="29" pos:column="39">i<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">++<pos:position pos:line="29" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="43"/></control>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">OVS_YAJL_CALL<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">ovs_yajl_gen_val<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">jgen<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="45">jvalues<pos:position pos:line="30" pos:column="52"/></name><index pos:line="30" pos:column="52">[<expr><name pos:line="30" pos:column="53">i<pos:position pos:line="30" pos:column="54"/></name></expr>]<pos:position pos:line="30" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">yajl_gen_array_close<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">jgen<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if></elseif> <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">YAJL_IS_OBJECT<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">jval<pos:position pos:line="32" pos:column="33"/></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="35"/></condition><then pos:line="32" pos:column="35"> <block pos:line="32" pos:column="36">{
    <comment type="block" pos:line="33" pos:column="5">/* create new object and add all elements into the object */</comment>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="34" pos:column="18"/></name><argument_list pos:line="34" pos:column="18">(<argument><expr><name pos:line="34" pos:column="19">yajl_gen_map_open<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="38">jgen<pos:position pos:line="34" pos:column="42"/></name></expr></argument>)<pos:position pos:line="34" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">obj_len<pos:position pos:line="35" pos:column="12"/></name> <operator pos:line="35" pos:column="13">=<pos:position pos:line="35" pos:column="14"/></operator> <call><name pos:line="35" pos:column="15">YAJL_GET_OBJECT<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">jval<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="38">len<pos:position pos:line="35" pos:column="41"/></name></expr>;<pos:position pos:line="35" pos:column="42"/></expr_stmt>
    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><decl><type><name pos:line="36" pos:column="10">size_t<pos:position pos:line="36" pos:column="16"/></name></type> <name pos:line="36" pos:column="17">i<pos:position pos:line="36" pos:column="18"/></name> <init pos:line="36" pos:column="19">= <expr><literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="36" pos:column="23"/></init> <condition><expr><name pos:line="36" pos:column="24">i<pos:position pos:line="36" pos:column="25"/></name> <operator pos:line="36" pos:column="26">&lt;<pos:position pos:line="36" pos:column="30"/></operator> <name pos:line="36" pos:column="28">obj_len<pos:position pos:line="36" pos:column="35"/></name></expr>;<pos:position pos:line="36" pos:column="36"/></condition> <incr><expr><name pos:line="36" pos:column="37">i<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">++<pos:position pos:line="36" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="36" pos:column="41"/></control> <block pos:line="36" pos:column="42">{
      <expr_stmt><expr><name pos:line="37" pos:column="7">obj_key<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator> <call><name pos:line="37" pos:column="17">YAJL_GET_OBJECT<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">jval<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name><name pos:line="37" pos:column="40">keys<pos:position pos:line="37" pos:column="44"/></name><index pos:line="37" pos:column="44">[<expr><name pos:line="37" pos:column="45">i<pos:position pos:line="37" pos:column="46"/></name></expr>]<pos:position pos:line="37" pos:column="47"/></index></name></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><name pos:line="38" pos:column="7">jobj_value<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">YAJL_GET_OBJECT<pos:position pos:line="38" pos:column="35"/></name><argument_list pos:line="38" pos:column="35">(<argument><expr><name pos:line="38" pos:column="36">jval<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call><operator pos:line="38" pos:column="41">-&gt;<pos:position pos:line="38" pos:column="46"/></operator><name><name pos:line="38" pos:column="43">values<pos:position pos:line="38" pos:column="49"/></name><index pos:line="38" pos:column="49">[<expr><name pos:line="38" pos:column="50">i<pos:position pos:line="38" pos:column="51"/></name></expr>]<pos:position pos:line="38" pos:column="52"/></index></name></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">OVS_YAJL_CALL<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">ovs_yajl_gen_tstring<pos:position pos:line="39" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">jgen<pos:position pos:line="39" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="49">obj_key<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="40" pos:column="7">OVS_YAJL_CALL<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">ovs_yajl_gen_val<pos:position pos:line="40" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="39">jgen<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="45">jobj_value<pos:position pos:line="40" pos:column="55"/></name></expr></argument>)<pos:position pos:line="40" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">OVS_YAJL_CALL<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name pos:line="42" pos:column="19">yajl_gen_map_close<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="39">jgen<pos:position pos:line="42" pos:column="43"/></name></expr></argument>)<pos:position pos:line="42" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if></elseif> <else pos:line="43" pos:column="5">else <block pos:line="43" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">OVS_ERROR<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><literal type="string" pos:line="44" pos:column="15">"%s() unsupported value type %d (skip)"<pos:position pos:line="44" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="56">__FUNCTION__<pos:position pos:line="44" pos:column="68"/></name></expr></argument>,
              <argument><expr><call pos:line="45" pos:column="15">(<name pos:line="45" pos:column="16">int<pos:position pos:line="45" pos:column="19"/></name>)<argument_list pos:line="45" pos:column="20">(<argument><expr><name pos:line="45" pos:column="21">jval<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call><operator pos:line="45" pos:column="26">-&gt;<pos:position pos:line="45" pos:column="31"/></operator><name pos:line="45" pos:column="28">type<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
    <goto pos:line="46" pos:column="5">goto <name pos:line="46" pos:column="10">yajl_gen_failure<pos:position pos:line="46" pos:column="26"/></name>;<pos:position pos:line="46" pos:column="27"/></goto>
  }<pos:position pos:line="47" pos:column="4"/></block></else></if>
  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">yajl_gen_status_ok<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></return>

<label><name pos:line="50" pos:column="1">yajl_gen_failure<pos:position pos:line="50" pos:column="17"/></name>:<pos:position pos:line="50" pos:column="18"/></label>
  <expr_stmt><expr><call><name pos:line="51" pos:column="3">OVS_ERROR<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><literal type="string" pos:line="51" pos:column="13">"%s() error to generate value"<pos:position pos:line="51" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="45">__FUNCTION__<pos:position pos:line="51" pos:column="57"/></name></expr></argument>)<pos:position pos:line="51" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="59"/></expr_stmt>
  <return pos:line="52" pos:column="3">return <expr><name pos:line="52" pos:column="10">yajl_gen_ret<pos:position pos:line="52" pos:column="22"/></name></expr>;<pos:position pos:line="52" pos:column="23"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2486_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_block_plugin<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">oconfig_item_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ci<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
  <decl_stmt><decl><type><specifier pos:line="2" pos:column="3">const<pos:position pos:line="2" pos:column="8"/></specifier> <name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">name<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">strcasecmp<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name><name pos:line="4" pos:column="18">ci<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">key<pos:position pos:line="4" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"Plugin"<pos:position pos:line="4" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call> <operator pos:line="4" pos:column="37">!=<pos:position pos:line="4" pos:column="39"/></operator> <literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr>)<pos:position pos:line="4" pos:column="42"/></condition><then pos:line="4" pos:column="42">
    <block type="pseudo"><return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><operator pos:line="5" pos:column="13">-<pos:position pos:line="5" pos:column="14"/></operator><literal type="number" pos:line="5" pos:column="14">1<pos:position pos:line="5" pos:column="15"/></literal><operator pos:line="5" pos:column="15">)<pos:position pos:line="5" pos:column="16"/></operator></expr>;<pos:position pos:line="5" pos:column="17"/></return></block></then></if>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">ci<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">values_num<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">&lt;<pos:position pos:line="6" pos:column="26"/></operator> <literal type="number" pos:line="6" pos:column="24">1<pos:position pos:line="6" pos:column="25"/></literal></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><operator pos:line="7" pos:column="13">-<pos:position pos:line="7" pos:column="14"/></operator><literal type="number" pos:line="7" pos:column="14">1<pos:position pos:line="7" pos:column="15"/></literal><operator pos:line="7" pos:column="15">)<pos:position pos:line="7" pos:column="16"/></operator></expr>;<pos:position pos:line="7" pos:column="17"/></return></block></then></if>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">ci<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">-&gt;<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="11">values<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>]<pos:position pos:line="8" pos:column="20"/></index></name><operator pos:line="8" pos:column="20">.<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">type<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">!=<pos:position pos:line="8" pos:column="28"/></operator> <name pos:line="8" pos:column="29">OCONFIG_TYPE_STRING<pos:position pos:line="8" pos:column="48"/></name></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">name<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name><name pos:line="11" pos:column="10">ci<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">values<pos:position pos:line="11" pos:column="20"/></name><index pos:line="11" pos:column="20">[<expr><literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr>]<pos:position pos:line="11" pos:column="23"/></index></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name><name pos:line="11" pos:column="24">value<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">.<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">string<pos:position pos:line="11" pos:column="36"/></name></name></expr>;<pos:position pos:line="11" pos:column="37"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><call><name pos:line="12" pos:column="7">strcmp<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="string" pos:line="12" pos:column="14">"libvirt"<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="25">name<pos:position pos:line="12" pos:column="29"/></name></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call> <operator pos:line="12" pos:column="31">==<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr>)<pos:position pos:line="12" pos:column="36"/></condition><then pos:line="12" pos:column="36"> <block pos:line="12" pos:column="37">{
    <comment type="block" pos:line="13" pos:column="5">/* TODO(octo): Remove this legacy. */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">WARNING<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"The \"libvirt\" plugin has been renamed to \"virt\" to avoid "<pos:position pos:line="14" pos:column="76"/></literal>
            <literal type="string" pos:line="15" pos:column="13">"problems with the build system. "<pos:position pos:line="15" pos:column="47"/></literal>
            <literal type="string" pos:line="16" pos:column="13">"Your configuration is still using the old name. "<pos:position pos:line="16" pos:column="63"/></literal>
            <literal type="string" pos:line="17" pos:column="13">"Please change it to use \"virt\" as soon as possible. "<pos:position pos:line="17" pos:column="69"/></literal>
            <literal type="string" pos:line="18" pos:column="13">"This compatibility code will go away eventually."<pos:position pos:line="18" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">name<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <literal type="string" pos:line="19" pos:column="12">"virt"<pos:position pos:line="19" pos:column="18"/></literal></expr>;<pos:position pos:line="19" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><call><name pos:line="22" pos:column="7">IS_TRUE<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><call><name pos:line="22" pos:column="15">global_option_get<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><literal type="string" pos:line="22" pos:column="33">"AutoLoadPlugin"<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52"> <block pos:line="22" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">plugin_ctx_t<pos:position pos:line="23" pos:column="17"/></name></type> <name pos:line="23" pos:column="18">ctx<pos:position pos:line="23" pos:column="21"/></name> <init pos:line="23" pos:column="22">= <expr><block pos:line="23" pos:column="24">{<expr><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr>}<pos:position pos:line="23" pos:column="27"/></block></expr></init></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">plugin_ctx_t<pos:position pos:line="24" pos:column="17"/></name></type> <name pos:line="24" pos:column="18">old_ctx<pos:position pos:line="24" pos:column="25"/></name></decl>;<pos:position pos:line="24" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">int<pos:position pos:line="25" pos:column="8"/></name></type> <name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name></decl>;<pos:position pos:line="25" pos:column="16"/></decl_stmt>

    <comment type="block" pos:line="27" pos:column="5">/* default to the global interval set before loading this plugin */</comment>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">ctx<pos:position pos:line="28" pos:column="8"/></name><operator pos:line="28" pos:column="8">.<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">interval<pos:position pos:line="28" pos:column="17"/></name></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">cf_get_default_interval<pos:position pos:line="28" pos:column="43"/></name><argument_list pos:line="28" pos:column="43">()<pos:position pos:line="28" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name pos:line="30" pos:column="5">old_ctx<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">plugin_set_ctx<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">ctx<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">status<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">=<pos:position pos:line="31" pos:column="13"/></operator> <call><name pos:line="31" pos:column="14">plugin_load<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">name<pos:position pos:line="31" pos:column="30"/></name></expr></argument>, <comment type="block" pos:line="31" pos:column="32">/* flags = */</comment> <argument><expr><literal type="number" pos:line="31" pos:column="46">0<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
    <comment type="block" pos:line="32" pos:column="5">/* reset to the "global" context */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">plugin_set_ctx<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">old_ctx<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">status<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">!=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>)<pos:position pos:line="35" pos:column="21"/></condition><then pos:line="35" pos:column="21"> <block pos:line="35" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">ERROR<pos:position pos:line="36" pos:column="12"/></name><argument_list pos:line="36" pos:column="12">(<argument><expr><literal type="string" pos:line="36" pos:column="13">"Automatically loading plugin \"%s\" failed "<pos:position pos:line="36" pos:column="58"/></literal>
            <literal type="string" pos:line="37" pos:column="13">"with status %i."<pos:position pos:line="37" pos:column="30"/></literal></expr></argument>,
            <argument><expr><name pos:line="38" pos:column="13">name<pos:position pos:line="38" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="19">status<pos:position pos:line="38" pos:column="25"/></name></expr></argument>)<pos:position pos:line="38" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="27"/></expr_stmt>
      <return pos:line="39" pos:column="7">return <expr><operator pos:line="39" pos:column="14">(<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">status<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">)<pos:position pos:line="39" pos:column="22"/></operator></expr>;<pos:position pos:line="39" pos:column="23"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="43" pos:column="3">/* Check for a complex callback first */</comment>
  <for pos:line="44" pos:column="3">for <control pos:line="44" pos:column="7">(<init><decl><type><name pos:line="44" pos:column="8">cf_complex_callback_t<pos:position pos:line="44" pos:column="29"/></name> <modifier pos:line="44" pos:column="30">*<pos:position pos:line="44" pos:column="31"/></modifier></type><name pos:line="44" pos:column="31">cb<pos:position pos:line="44" pos:column="33"/></name> <init pos:line="44" pos:column="34">= <expr><name pos:line="44" pos:column="36">complex_callback_head<pos:position pos:line="44" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="44" pos:column="58"/></init> <condition><expr><name pos:line="44" pos:column="59">cb<pos:position pos:line="44" pos:column="61"/></name> <operator pos:line="44" pos:column="62">!=<pos:position pos:line="44" pos:column="64"/></operator> <name pos:line="44" pos:column="65">NULL<pos:position pos:line="44" pos:column="69"/></name></expr>;<pos:position pos:line="44" pos:column="70"/></condition>
       <incr><expr><name pos:line="45" pos:column="8">cb<pos:position pos:line="45" pos:column="10"/></name> <operator pos:line="45" pos:column="11">=<pos:position pos:line="45" pos:column="12"/></operator> <name><name pos:line="45" pos:column="13">cb<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">-&gt;<pos:position pos:line="45" pos:column="20"/></operator><name pos:line="45" pos:column="17">next<pos:position pos:line="45" pos:column="21"/></name></name></expr></incr>)<pos:position pos:line="45" pos:column="22"/></control> <block pos:line="45" pos:column="23">{
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">strcasecmp<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">name<pos:position pos:line="46" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="26">cb<pos:position pos:line="46" pos:column="28"/></name><operator pos:line="46" pos:column="28">-&gt;<pos:position pos:line="46" pos:column="33"/></operator><name pos:line="46" pos:column="30">type<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call> <operator pos:line="46" pos:column="36">==<pos:position pos:line="46" pos:column="38"/></operator> <literal type="number" pos:line="46" pos:column="39">0<pos:position pos:line="46" pos:column="40"/></literal></expr>)<pos:position pos:line="46" pos:column="41"/></condition><then pos:line="46" pos:column="41"> <block pos:line="46" pos:column="42">{
      <decl_stmt><decl><type><name pos:line="47" pos:column="7">plugin_ctx_t<pos:position pos:line="47" pos:column="19"/></name></type> <name pos:line="47" pos:column="20">old_ctx<pos:position pos:line="47" pos:column="27"/></name></decl>;<pos:position pos:line="47" pos:column="28"/></decl_stmt>
      <decl_stmt><decl><type><name pos:line="48" pos:column="7">int<pos:position pos:line="48" pos:column="10"/></name></type> <name pos:line="48" pos:column="11">ret_val<pos:position pos:line="48" pos:column="18"/></name></decl>;<pos:position pos:line="48" pos:column="19"/></decl_stmt>

      <expr_stmt><expr><name pos:line="50" pos:column="7">old_ctx<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <call><name pos:line="50" pos:column="17">plugin_set_ctx<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name><name pos:line="50" pos:column="32">cb<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">ctx<pos:position pos:line="50" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">ret_val<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <operator pos:line="51" pos:column="17">(<pos:position pos:line="51" pos:column="18"/></operator><call><name><name pos:line="51" pos:column="18">cb<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">callback<pos:position pos:line="51" pos:column="30"/></name></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">ci<pos:position pos:line="51" pos:column="33"/></name></expr></argument>)<pos:position pos:line="51" pos:column="34"/></argument_list></call><operator pos:line="51" pos:column="34">)<pos:position pos:line="51" pos:column="35"/></operator></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">plugin_set_ctx<pos:position pos:line="52" pos:column="21"/></name><argument_list pos:line="52" pos:column="21">(<argument><expr><name pos:line="52" pos:column="22">old_ctx<pos:position pos:line="52" pos:column="29"/></name></expr></argument>)<pos:position pos:line="52" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="31"/></expr_stmt>
      <return pos:line="53" pos:column="7">return <expr><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">ret_val<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">)<pos:position pos:line="53" pos:column="23"/></operator></expr>;<pos:position pos:line="53" pos:column="24"/></return>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>
  }<pos:position pos:line="55" pos:column="4"/></block></for>

  <comment type="block" pos:line="57" pos:column="3">/* Hm, no complex plugin found. Dispatch the values one by one */</comment>
  <for pos:line="58" pos:column="3">for <control pos:line="58" pos:column="7">(<init><decl><type><name pos:line="58" pos:column="8">int<pos:position pos:line="58" pos:column="11"/></name></type> <name pos:line="58" pos:column="12">i<pos:position pos:line="58" pos:column="13"/></name> <init pos:line="58" pos:column="14">= <expr><literal type="number" pos:line="58" pos:column="16">0<pos:position pos:line="58" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="58" pos:column="18"/></init> <condition><expr><name pos:line="58" pos:column="19">i<pos:position pos:line="58" pos:column="20"/></name> <operator pos:line="58" pos:column="21">&lt;<pos:position pos:line="58" pos:column="25"/></operator> <name><name pos:line="58" pos:column="23">ci<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">children_num<pos:position pos:line="58" pos:column="39"/></name></name></expr>;<pos:position pos:line="58" pos:column="40"/></condition> <incr><expr><name pos:line="58" pos:column="41">i<pos:position pos:line="58" pos:column="42"/></name><operator pos:line="58" pos:column="42">++<pos:position pos:line="58" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="58" pos:column="45"/></control> <block pos:line="58" pos:column="46">{
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">ci<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">children<pos:position pos:line="59" pos:column="21"/></name><index pos:line="59" pos:column="21">[<expr><name pos:line="59" pos:column="22">i<pos:position pos:line="59" pos:column="23"/></name></expr>]<pos:position pos:line="59" pos:column="24"/></index></name><operator pos:line="59" pos:column="24">.<pos:position pos:line="59" pos:column="25"/></operator><name pos:line="59" pos:column="25">children<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">==<pos:position pos:line="59" pos:column="36"/></operator> <name pos:line="59" pos:column="37">NULL<pos:position pos:line="59" pos:column="41"/></name></expr>)<pos:position pos:line="59" pos:column="42"/></condition><then pos:line="59" pos:column="42">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="7">dispatch_value_plugin<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">name<pos:position pos:line="60" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="60" pos:column="35">ci<pos:position pos:line="60" pos:column="37"/></name><operator pos:line="60" pos:column="37">-&gt;<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="39">children<pos:position pos:line="60" pos:column="47"/></name></name> <operator pos:line="60" pos:column="48">+<pos:position pos:line="60" pos:column="49"/></operator> <name pos:line="60" pos:column="50">i<pos:position pos:line="60" pos:column="51"/></name></expr></argument>)<pos:position pos:line="60" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="53"/></expr_stmt></block></then>
    <else pos:line="61" pos:column="5">else <block pos:line="61" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">WARNING<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><literal type="string" pos:line="62" pos:column="15">"There is a `%s' block within the "<pos:position pos:line="62" pos:column="50"/></literal>
              <literal type="string" pos:line="63" pos:column="15">"configuration for the %s plugin. "<pos:position pos:line="63" pos:column="50"/></literal>
              <literal type="string" pos:line="64" pos:column="15">"The plugin either only expects "<pos:position pos:line="64" pos:column="48"/></literal>
              <literal type="string" pos:line="65" pos:column="15">"\"simple\" configuration statements "<pos:position pos:line="65" pos:column="53"/></literal>
              <literal type="string" pos:line="66" pos:column="15">"or wasn't loaded using `LoadPlugin'."<pos:position pos:line="66" pos:column="53"/></literal>
              <literal type="string" pos:line="67" pos:column="15">" Please check your configuration."<pos:position pos:line="67" pos:column="50"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="68" pos:column="15">ci<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">-&gt;<pos:position pos:line="68" pos:column="22"/></operator><name pos:line="68" pos:column="19">children<pos:position pos:line="68" pos:column="27"/></name><index pos:line="68" pos:column="27">[<expr><name pos:line="68" pos:column="28">i<pos:position pos:line="68" pos:column="29"/></name></expr>]<pos:position pos:line="68" pos:column="30"/></index></name><operator pos:line="68" pos:column="30">.<pos:position pos:line="68" pos:column="31"/></operator><name pos:line="68" pos:column="31">key<pos:position pos:line="68" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="36">name<pos:position pos:line="68" pos:column="40"/></name></expr></argument>)<pos:position pos:line="68" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>
  }<pos:position pos:line="70" pos:column="4"/></block></for>

  <return pos:line="72" pos:column="3">return <expr><operator pos:line="72" pos:column="10">(<pos:position pos:line="72" pos:column="11"/></operator><literal type="number" pos:line="72" pos:column="11">0<pos:position pos:line="72" pos:column="12"/></literal><operator pos:line="72" pos:column="12">)<pos:position pos:line="72" pos:column="13"/></operator></expr>;<pos:position pos:line="72" pos:column="14"/></return>
}<pos:position pos:line="73" pos:column="2"/></block></function></unit>

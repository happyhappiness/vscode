<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_651_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cjni_callback_register<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">JNIEnv<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">jvm_env<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="52">/* {{{ */</comment>
                                  <parameter><decl><type><name pos:line="2" pos:column="35">jobject<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">o_name<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">jobject<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">o_callback<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">int<pos:position pos:line="3" pos:column="38"/></name></type> <name pos:line="3" pos:column="39">type<pos:position pos:line="3" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="44"/></parameter_list> <block pos:line="3" pos:column="45">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">cjni_callback_info_t<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">cbi<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">cjni_callback_info_t<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">tmp<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">COLLECT_DEBUG<pos:position pos:line="6" pos:column="18"/></name></expr></cpp:if>
  <decl_stmt><decl><type><specifier pos:line="7" pos:column="3">const<pos:position pos:line="7" pos:column="8"/></specifier> <name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">type_str<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="10" pos:column="3">cbi<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">cjni_callback_info_create<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">jvm_env<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">o_name<pos:position pos:line="10" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="52">o_callback<pos:position pos:line="10" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="64">type<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">cbi<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">==<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">NULL<pos:position pos:line="11" pos:column="18"/></name></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">-<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">1<pos:position pos:line="12" pos:column="14"/></literal></expr>;<pos:position pos:line="12" pos:column="15"/></return></block></then></if>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">COLLECT_DEBUG<pos:position pos:line="14" pos:column="18"/></name></expr></cpp:if>
  <switch pos:line="15" pos:column="3">switch <condition pos:line="15" pos:column="10">(<expr><name pos:line="15" pos:column="11">type<pos:position pos:line="15" pos:column="15"/></name></expr>)<pos:position pos:line="15" pos:column="16"/></condition> <block pos:line="15" pos:column="17">{
  <case pos:line="16" pos:column="3">case <expr><name pos:line="16" pos:column="8">CB_TYPE_CONFIG<pos:position pos:line="16" pos:column="22"/></name></expr>:<pos:position pos:line="16" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="17" pos:column="5">type_str<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="string" pos:line="17" pos:column="16">"config"<pos:position pos:line="17" pos:column="24"/></literal></expr>;<pos:position pos:line="17" pos:column="25"/></expr_stmt>
    <break pos:line="18" pos:column="5">break;<pos:position pos:line="18" pos:column="11"/></break>

  <case pos:line="20" pos:column="3">case <expr><name pos:line="20" pos:column="8">CB_TYPE_INIT<pos:position pos:line="20" pos:column="20"/></name></expr>:<pos:position pos:line="20" pos:column="21"/></case>
    <expr_stmt><expr><name pos:line="21" pos:column="5">type_str<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">=<pos:position pos:line="21" pos:column="15"/></operator> <literal type="string" pos:line="21" pos:column="16">"init"<pos:position pos:line="21" pos:column="22"/></literal></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
    <break pos:line="22" pos:column="5">break;<pos:position pos:line="22" pos:column="11"/></break>

  <case pos:line="24" pos:column="3">case <expr><name pos:line="24" pos:column="8">CB_TYPE_SHUTDOWN<pos:position pos:line="24" pos:column="24"/></name></expr>:<pos:position pos:line="24" pos:column="25"/></case>
    <expr_stmt><expr><name pos:line="25" pos:column="5">type_str<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <literal type="string" pos:line="25" pos:column="16">"shutdown"<pos:position pos:line="25" pos:column="26"/></literal></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    <break pos:line="26" pos:column="5">break;<pos:position pos:line="26" pos:column="11"/></break>

  <case pos:line="28" pos:column="3">case <expr><name pos:line="28" pos:column="8">CB_TYPE_MATCH<pos:position pos:line="28" pos:column="21"/></name></expr>:<pos:position pos:line="28" pos:column="22"/></case>
    <expr_stmt><expr><name pos:line="29" pos:column="5">type_str<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <literal type="string" pos:line="29" pos:column="16">"match"<pos:position pos:line="29" pos:column="23"/></literal></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt>
    <break pos:line="30" pos:column="5">break;<pos:position pos:line="30" pos:column="11"/></break>

  <case pos:line="32" pos:column="3">case <expr><name pos:line="32" pos:column="8">CB_TYPE_TARGET<pos:position pos:line="32" pos:column="22"/></name></expr>:<pos:position pos:line="32" pos:column="23"/></case>
    <expr_stmt><expr><name pos:line="33" pos:column="5">type_str<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <literal type="string" pos:line="33" pos:column="16">"target"<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>

  <default pos:line="36" pos:column="3">default:<pos:position pos:line="36" pos:column="11"/></default>
    <expr_stmt><expr><name pos:line="37" pos:column="5">type_str<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="string" pos:line="37" pos:column="16">"&lt;unknown&gt;"<pos:position pos:line="37" pos:column="33"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="38" pos:column="4"/></block></switch>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">DEBUG<pos:position pos:line="39" pos:column="8"/></name><argument_list pos:line="39" pos:column="8">(<argument><expr><literal type="string" pos:line="39" pos:column="9">"java plugin: Registering new %s callback: %s"<pos:position pos:line="39" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">type_str<pos:position pos:line="39" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="67">cbi<pos:position pos:line="39" pos:column="70"/></name><operator pos:line="39" pos:column="70">-&gt;<pos:position pos:line="39" pos:column="75"/></operator><name pos:line="39" pos:column="72">name<pos:position pos:line="39" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="78"/></expr_stmt>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><call><name pos:line="42" pos:column="3">pthread_mutex_lock<pos:position pos:line="42" pos:column="21"/></name><argument_list pos:line="42" pos:column="21">(<argument><expr><operator pos:line="42" pos:column="22">&amp;<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="23">java_callbacks_lock<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>

  <expr_stmt><expr><name pos:line="44" pos:column="3">tmp<pos:position pos:line="44" pos:column="6"/></name> <operator pos:line="44" pos:column="7">=<pos:position pos:line="44" pos:column="8"/></operator> <call><name pos:line="44" pos:column="9">realloc<pos:position pos:line="44" pos:column="16"/></name><argument_list pos:line="44" pos:column="16">(<argument><expr><name pos:line="44" pos:column="17">java_callbacks<pos:position pos:line="44" pos:column="31"/></name></expr></argument>,
                <argument><expr><operator pos:line="45" pos:column="17">(<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="18">java_callbacks_num<pos:position pos:line="45" pos:column="36"/></name> <operator pos:line="45" pos:column="37">+<pos:position pos:line="45" pos:column="38"/></operator> <literal type="number" pos:line="45" pos:column="39">1<pos:position pos:line="45" pos:column="40"/></literal><operator pos:line="45" pos:column="40">)<pos:position pos:line="45" pos:column="41"/></operator> <operator pos:line="45" pos:column="42">*<pos:position pos:line="45" pos:column="43"/></operator> <sizeof pos:line="45" pos:column="44">sizeof<argument_list pos:line="45" pos:column="50">(<argument><expr><operator pos:line="45" pos:column="51">*<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="52">java_callbacks<pos:position pos:line="45" pos:column="66"/></name></expr></argument>)<pos:position pos:line="45" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="69"/></expr_stmt>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">tmp<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">==<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">NULL<pos:position pos:line="46" pos:column="18"/></name></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19"> <block pos:line="46" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">pthread_mutex_unlock<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><operator pos:line="47" pos:column="26">&amp;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="27">java_callbacks_lock<pos:position pos:line="47" pos:column="46"/></name></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ERROR<pos:position pos:line="48" pos:column="10"/></name><argument_list pos:line="48" pos:column="10">(<argument><expr><literal type="string" pos:line="48" pos:column="11">"java plugin: cjni_callback_register: realloc failed."<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name><operator pos:line="50" pos:column="5">(<pos:position pos:line="50" pos:column="6"/></operator><operator pos:line="50" pos:column="6">*<pos:position pos:line="50" pos:column="7"/></operator><name pos:line="50" pos:column="7">jvm_env<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">)<pos:position pos:line="50" pos:column="15"/></operator><operator pos:line="50" pos:column="15">-&gt;<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="17">DeleteGlobalRef<pos:position pos:line="50" pos:column="32"/></name></name><argument_list pos:line="50" pos:column="32">(<argument><expr><name pos:line="50" pos:column="33">jvm_env<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="42">cbi<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">-&gt;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="47">object<pos:position pos:line="50" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">free<pos:position pos:line="51" pos:column="9"/></name><argument_list pos:line="51" pos:column="9">(<argument><expr><name pos:line="51" pos:column="10">cbi<pos:position pos:line="51" pos:column="13"/></name></expr></argument>)<pos:position pos:line="51" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt>

    <return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">-<pos:position pos:line="53" pos:column="13"/></operator><literal type="number" pos:line="53" pos:column="13">1<pos:position pos:line="53" pos:column="14"/></literal></expr>;<pos:position pos:line="53" pos:column="15"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="55" pos:column="3">java_callbacks<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <name pos:line="55" pos:column="20">tmp<pos:position pos:line="55" pos:column="23"/></name></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="56" pos:column="3">java_callbacks<pos:position pos:line="56" pos:column="17"/></name><index pos:line="56" pos:column="17">[<expr><name pos:line="56" pos:column="18">java_callbacks_num<pos:position pos:line="56" pos:column="36"/></name></expr>]<pos:position pos:line="56" pos:column="37"/></index></name> <operator pos:line="56" pos:column="38">=<pos:position pos:line="56" pos:column="39"/></operator> <operator pos:line="56" pos:column="40">*<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="41">cbi<pos:position pos:line="56" pos:column="44"/></name></expr>;<pos:position pos:line="56" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="57" pos:column="3">java_callbacks_num<pos:position pos:line="57" pos:column="21"/></name><operator pos:line="57" pos:column="21">++<pos:position pos:line="57" pos:column="23"/></operator></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">pthread_mutex_unlock<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><operator pos:line="59" pos:column="24">&amp;<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="25">java_callbacks_lock<pos:position pos:line="59" pos:column="44"/></name></expr></argument>)<pos:position pos:line="59" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="46"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="61" pos:column="3">free<pos:position pos:line="61" pos:column="7"/></name><argument_list pos:line="61" pos:column="7">(<argument><expr><name pos:line="61" pos:column="8">cbi<pos:position pos:line="61" pos:column="11"/></name></expr></argument>)<pos:position pos:line="61" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="13"/></expr_stmt>
  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

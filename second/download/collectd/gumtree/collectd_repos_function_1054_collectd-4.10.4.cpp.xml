<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1054_collectd-4.10.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">unsigned<pos:position pos:line="1" pos:column="16"/></name> <name pos:line="1" pos:column="17">char<pos:position pos:line="1" pos:column="21"/></name></type>
<name pos:line="2" pos:column="1">fromhex<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">c<pos:position pos:line="2" pos:column="15"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="16"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<if pos:line="4" pos:column="9">if<condition pos:line="4" pos:column="11">(<expr><call><name pos:line="4" pos:column="12">isdigit<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><operator pos:line="4" pos:column="20">(<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">int<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">)<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">c<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28"> <block pos:line="4" pos:column="29">{
		<return pos:line="5" pos:column="17">return <expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">c<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">-<pos:position pos:line="5" pos:column="28"/></operator> <literal type="char" pos:line="5" pos:column="29">'0'<pos:position pos:line="5" pos:column="32"/></literal><operator pos:line="5" pos:column="32">)<pos:position pos:line="5" pos:column="33"/></operator></expr>;<pos:position pos:line="5" pos:column="34"/></return>
	}<pos:position pos:line="6" pos:column="10"/></block></then> <elseif pos:line="6" pos:column="11">else <if pos:line="6" pos:column="16">if<condition pos:line="6" pos:column="18">(<expr><call><name pos:line="6" pos:column="19">islower<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">int<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">)<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">c<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="35"/></condition><then pos:line="6" pos:column="35"> <block pos:line="6" pos:column="36">{
		<return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">c<pos:position pos:line="7" pos:column="26"/></name> <operator pos:line="7" pos:column="27">-<pos:position pos:line="7" pos:column="28"/></operator> <literal type="char" pos:line="7" pos:column="29">'a'<pos:position pos:line="7" pos:column="32"/></literal> <operator pos:line="7" pos:column="33">+<pos:position pos:line="7" pos:column="34"/></operator> <literal type="number" pos:line="7" pos:column="35">10<pos:position pos:line="7" pos:column="37"/></literal><operator pos:line="7" pos:column="37">)<pos:position pos:line="7" pos:column="38"/></operator></expr>;<pos:position pos:line="7" pos:column="39"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if></elseif> <else pos:line="8" pos:column="11">else <block pos:line="8" pos:column="16">{
		<return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">c<pos:position pos:line="9" pos:column="26"/></name> <operator pos:line="9" pos:column="27">-<pos:position pos:line="9" pos:column="28"/></operator> <literal type="char" pos:line="9" pos:column="29">'A'<pos:position pos:line="9" pos:column="32"/></literal> <operator pos:line="9" pos:column="33">+<pos:position pos:line="9" pos:column="34"/></operator> <literal type="number" pos:line="9" pos:column="35">10<pos:position pos:line="9" pos:column="37"/></literal><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator></expr>;<pos:position pos:line="9" pos:column="39"/></return>
	}<pos:position pos:line="10" pos:column="10"/></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

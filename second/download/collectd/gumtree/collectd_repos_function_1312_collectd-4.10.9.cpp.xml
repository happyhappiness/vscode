<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1312_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csv_config<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">key<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><literal type="string" pos:line="3" pos:column="25">"DataDir"<pos:position pos:line="3" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="36">key<pos:position pos:line="3" pos:column="39"/></name></expr></argument>)<pos:position pos:line="3" pos:column="40"/></argument_list></call> <operator pos:line="3" pos:column="41">==<pos:position pos:line="3" pos:column="43"/></operator> <literal type="number" pos:line="3" pos:column="44">0<pos:position pos:line="3" pos:column="45"/></literal></expr>)<pos:position pos:line="3" pos:column="46"/></condition><then pos:line="3" pos:column="46">
	<block pos:line="4" pos:column="9">{
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><name pos:line="5" pos:column="21">datadir<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">!=<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="25">free<pos:position pos:line="6" pos:column="29"/></name> <argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">datadir<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt></block></then></if>
		<if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">strcasecmp<pos:position pos:line="7" pos:column="31"/></name> <argument_list pos:line="7" pos:column="32">(<argument><expr><literal type="string" pos:line="7" pos:column="33">"stdout"<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="43">value<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call> <operator pos:line="7" pos:column="50">==<pos:position pos:line="7" pos:column="52"/></operator> <literal type="number" pos:line="7" pos:column="53">0<pos:position pos:line="7" pos:column="54"/></literal></expr>)<pos:position pos:line="7" pos:column="55"/></condition><then pos:line="7" pos:column="55">
		<block pos:line="8" pos:column="17">{
			<expr_stmt><expr><name pos:line="9" pos:column="25">use_stdio<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">=<pos:position pos:line="9" pos:column="36"/></operator> <literal type="number" pos:line="9" pos:column="37">1<pos:position pos:line="9" pos:column="38"/></literal></expr>;<pos:position pos:line="9" pos:column="39"/></expr_stmt>
			<return pos:line="10" pos:column="25">return <expr><operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><literal type="number" pos:line="10" pos:column="33">0<pos:position pos:line="10" pos:column="34"/></literal><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator></expr>;<pos:position pos:line="10" pos:column="36"/></return>
		}<pos:position pos:line="11" pos:column="18"/></block></then>
		<elseif pos:line="12" pos:column="17">else <if pos:line="12" pos:column="22">if <condition pos:line="12" pos:column="25">(<expr><call><name pos:line="12" pos:column="26">strcasecmp<pos:position pos:line="12" pos:column="36"/></name> <argument_list pos:line="12" pos:column="37">(<argument><expr><literal type="string" pos:line="12" pos:column="38">"stderr"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="48">value<pos:position pos:line="12" pos:column="53"/></name></expr></argument>)<pos:position pos:line="12" pos:column="54"/></argument_list></call> <operator pos:line="12" pos:column="55">==<pos:position pos:line="12" pos:column="57"/></operator> <literal type="number" pos:line="12" pos:column="58">0<pos:position pos:line="12" pos:column="59"/></literal></expr>)<pos:position pos:line="12" pos:column="60"/></condition><then pos:line="12" pos:column="60">
		<block pos:line="13" pos:column="17">{
			<expr_stmt><expr><name pos:line="14" pos:column="25">use_stdio<pos:position pos:line="14" pos:column="34"/></name> <operator pos:line="14" pos:column="35">=<pos:position pos:line="14" pos:column="36"/></operator> <literal type="number" pos:line="14" pos:column="37">2<pos:position pos:line="14" pos:column="38"/></literal></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
			<return pos:line="15" pos:column="25">return <expr><operator pos:line="15" pos:column="32">(<pos:position pos:line="15" pos:column="33"/></operator><literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator></expr>;<pos:position pos:line="15" pos:column="36"/></return>
		}<pos:position pos:line="16" pos:column="18"/></block></then></if></elseif></if>
		<expr_stmt><expr><name pos:line="17" pos:column="17">datadir<pos:position pos:line="17" pos:column="24"/></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <call><name pos:line="17" pos:column="27">strdup<pos:position pos:line="17" pos:column="33"/></name> <argument_list pos:line="17" pos:column="34">(<argument><expr><name pos:line="17" pos:column="35">value<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name pos:line="18" pos:column="21">datadir<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">NULL<pos:position pos:line="18" pos:column="36"/></name></expr>)<pos:position pos:line="18" pos:column="37"/></condition><then pos:line="18" pos:column="37">
		<block pos:line="19" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="20" pos:column="25">int<pos:position pos:line="20" pos:column="28"/></name></type> <name pos:line="20" pos:column="29">len<pos:position pos:line="20" pos:column="32"/></name> <init pos:line="20" pos:column="33">= <expr><call><name pos:line="20" pos:column="35">strlen<pos:position pos:line="20" pos:column="41"/></name> <argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">datadir<pos:position pos:line="20" pos:column="50"/></name></expr></argument>)<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="20" pos:column="52"/></decl_stmt>
			<while pos:line="21" pos:column="25">while <condition pos:line="21" pos:column="31">(<expr><operator pos:line="21" pos:column="32">(<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">len<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">&gt;<pos:position pos:line="21" pos:column="41"/></operator> <literal type="number" pos:line="21" pos:column="39">0<pos:position pos:line="21" pos:column="40"/></literal><operator pos:line="21" pos:column="40">)<pos:position pos:line="21" pos:column="41"/></operator> <operator pos:line="21" pos:column="42">&amp;&amp;<pos:position pos:line="21" pos:column="52"/></operator> <operator pos:line="21" pos:column="45">(<pos:position pos:line="21" pos:column="46"/></operator><name><name pos:line="21" pos:column="46">datadir<pos:position pos:line="21" pos:column="53"/></name><index pos:line="21" pos:column="53">[<expr><name pos:line="21" pos:column="54">len<pos:position pos:line="21" pos:column="57"/></name> <operator pos:line="21" pos:column="58">-<pos:position pos:line="21" pos:column="59"/></operator> <literal type="number" pos:line="21" pos:column="60">1<pos:position pos:line="21" pos:column="61"/></literal></expr>]<pos:position pos:line="21" pos:column="62"/></index></name> <operator pos:line="21" pos:column="63">==<pos:position pos:line="21" pos:column="65"/></operator> <literal type="char" pos:line="21" pos:column="66">'/'<pos:position pos:line="21" pos:column="69"/></literal><operator pos:line="21" pos:column="69">)<pos:position pos:line="21" pos:column="70"/></operator></expr>)<pos:position pos:line="21" pos:column="71"/></condition>
			<block pos:line="22" pos:column="25">{
				<expr_stmt><expr><name pos:line="23" pos:column="33">len<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">--<pos:position pos:line="23" pos:column="38"/></operator></expr>;<pos:position pos:line="23" pos:column="39"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="24" pos:column="33">datadir<pos:position pos:line="24" pos:column="40"/></name><index pos:line="24" pos:column="40">[<expr><name pos:line="24" pos:column="41">len<pos:position pos:line="24" pos:column="44"/></name></expr>]<pos:position pos:line="24" pos:column="45"/></index></name> <operator pos:line="24" pos:column="46">=<pos:position pos:line="24" pos:column="47"/></operator> <literal type="char" pos:line="24" pos:column="48">'\0'<pos:position pos:line="24" pos:column="52"/></literal></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>
			}<pos:position pos:line="25" pos:column="26"/></block></while>
			<if pos:line="26" pos:column="25">if <condition pos:line="26" pos:column="28">(<expr><name pos:line="26" pos:column="29">len<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">&lt;=<pos:position pos:line="26" pos:column="38"/></operator> <literal type="number" pos:line="26" pos:column="36">0<pos:position pos:line="26" pos:column="37"/></literal></expr>)<pos:position pos:line="26" pos:column="38"/></condition><then pos:line="26" pos:column="38">
			<block pos:line="27" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="28" pos:column="33">free<pos:position pos:line="28" pos:column="37"/></name> <argument_list pos:line="28" pos:column="38">(<argument><expr><name pos:line="28" pos:column="39">datadir<pos:position pos:line="28" pos:column="46"/></name></expr></argument>)<pos:position pos:line="28" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
				<expr_stmt><expr><name pos:line="29" pos:column="33">datadir<pos:position pos:line="29" pos:column="40"/></name> <operator pos:line="29" pos:column="41">=<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">NULL<pos:position pos:line="29" pos:column="47"/></name></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
			}<pos:position pos:line="30" pos:column="26"/></block></then></if>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></then>
	<elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><call><name pos:line="33" pos:column="18">strcasecmp<pos:position pos:line="33" pos:column="28"/></name> <argument_list pos:line="33" pos:column="29">(<argument><expr><literal type="string" pos:line="33" pos:column="30">"StoreRates"<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="44">key<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call> <operator pos:line="33" pos:column="49">==<pos:position pos:line="33" pos:column="51"/></operator> <literal type="number" pos:line="33" pos:column="52">0<pos:position pos:line="33" pos:column="53"/></literal></expr>)<pos:position pos:line="33" pos:column="54"/></condition><then pos:line="33" pos:column="54">
	<block pos:line="34" pos:column="9">{
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><call><name pos:line="35" pos:column="21">IS_TRUE<pos:position pos:line="35" pos:column="28"/></name> <argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">value<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="37"/></condition><then pos:line="35" pos:column="37">
			<block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="25">store_rates<pos:position pos:line="36" pos:column="36"/></name> <operator pos:line="36" pos:column="37">=<pos:position pos:line="36" pos:column="38"/></operator> <literal type="number" pos:line="36" pos:column="39">1<pos:position pos:line="36" pos:column="40"/></literal></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt></block></then>
		<else pos:line="37" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">store_rates<pos:position pos:line="38" pos:column="36"/></name> <operator pos:line="38" pos:column="37">=<pos:position pos:line="38" pos:column="38"/></operator> <literal type="number" pos:line="38" pos:column="39">0<pos:position pos:line="38" pos:column="40"/></literal></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt></block></else></if>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif>
	<else pos:line="40" pos:column="9">else
	<block pos:line="41" pos:column="9">{
		<return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><operator pos:line="42" pos:column="25">-<pos:position pos:line="42" pos:column="26"/></operator><literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal><operator pos:line="42" pos:column="27">)<pos:position pos:line="42" pos:column="28"/></operator></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></else></if>
	<return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal><operator pos:line="44" pos:column="18">)<pos:position pos:line="44" pos:column="19"/></operator></expr>;<pos:position pos:line="44" pos:column="20"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

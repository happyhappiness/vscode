<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_585_collectd-4.2.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cache_check<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">type<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="43">const<pos:position pos:line="1" pos:column="48"/></specifier> <name pos:line="1" pos:column="49">value_list_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">vl<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="66"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name></type> <name><name pos:line="3" pos:column="14">key<pos:position pos:line="3" pos:column="17"/></name><index pos:line="3" pos:column="17">[<expr><literal type="number" pos:line="3" pos:column="18">1024<pos:position pos:line="3" pos:column="22"/></literal></expr>]<pos:position pos:line="3" pos:column="23"/></index></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">time_t<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">value<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">retval<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><operator pos:line="5" pos:column="22">-<pos:position pos:line="5" pos:column="23"/></operator><literal type="number" pos:line="5" pos:column="23">1<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">cache_tree<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><operator pos:line="8" pos:column="25">-<pos:position pos:line="8" pos:column="26"/></operator><literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator></expr>;<pos:position pos:line="8" pos:column="29"/></return></block></then></if>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">format_name<pos:position pos:line="10" pos:column="24"/></name> <argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">key<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="31">sizeof <argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">key<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="45">vl<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">-&gt;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="49">host<pos:position pos:line="10" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="55">vl<pos:position pos:line="10" pos:column="57"/></name><operator pos:line="10" pos:column="57">-&gt;<pos:position pos:line="10" pos:column="62"/></operator><name pos:line="10" pos:column="59">plugin<pos:position pos:line="10" pos:column="65"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="11" pos:column="33">vl<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">-&gt;<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="37">plugin_instance<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">type<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="60">vl<pos:position pos:line="11" pos:column="62"/></name><operator pos:line="11" pos:column="62">-&gt;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="64">type_instance<pos:position pos:line="11" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="79"/></condition><then pos:line="11" pos:column="79">
		<block type="pseudo"><return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="14" pos:column="9">pthread_mutex_lock<pos:position pos:line="14" pos:column="27"/></name> <argument_list pos:line="14" pos:column="28">(<argument><expr><operator pos:line="14" pos:column="29">&amp;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="30">cache_lock<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name pos:line="16" pos:column="13">c_avl_get<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">cache_tree<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="36">key<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="41">(<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="42">void<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">*<pos:position pos:line="16" pos:column="48"/></operator><operator pos:line="16" pos:column="48">)<pos:position pos:line="16" pos:column="49"/></operator> <operator pos:line="16" pos:column="50">&amp;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="51">value<pos:position pos:line="16" pos:column="56"/></name></expr></argument>)<pos:position pos:line="16" pos:column="57"/></argument_list></call> <operator pos:line="16" pos:column="58">==<pos:position pos:line="16" pos:column="60"/></operator> <literal type="number" pos:line="16" pos:column="61">0<pos:position pos:line="16" pos:column="62"/></literal></expr>)<pos:position pos:line="16" pos:column="63"/></condition><then pos:line="16" pos:column="63">
	<block pos:line="17" pos:column="9">{
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">*<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">value<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&lt;<pos:position pos:line="18" pos:column="32"/></operator> <name><name pos:line="18" pos:column="30">vl<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">-&gt;<pos:position pos:line="18" pos:column="37"/></operator><name pos:line="18" pos:column="34">time<pos:position pos:line="18" pos:column="38"/></name></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
		<block pos:line="19" pos:column="17">{
			<expr_stmt><expr><operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">value<pos:position pos:line="20" pos:column="31"/></name> <operator pos:line="20" pos:column="32">=<pos:position pos:line="20" pos:column="33"/></operator> <name><name pos:line="20" pos:column="34">vl<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">time<pos:position pos:line="20" pos:column="42"/></name></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><name pos:line="21" pos:column="25">retval<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="number" pos:line="21" pos:column="34">0<pos:position pos:line="21" pos:column="35"/></literal></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="22" pos:column="18"/></block></then>
		<else pos:line="23" pos:column="17">else
		<block pos:line="24" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">DEBUG<pos:position pos:line="25" pos:column="30"/></name> <argument_list pos:line="25" pos:column="31">(<argument><expr><literal type="string" pos:line="25" pos:column="32">"network plugin: cache_check: *value = %i &gt;= vl-&gt;time = %i"<pos:position pos:line="25" pos:column="97"/></literal></expr></argument>,
					<argument><expr><operator pos:line="26" pos:column="41">(<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">int<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">)<pos:position pos:line="26" pos:column="46"/></operator> <operator pos:line="26" pos:column="47">*<pos:position pos:line="26" pos:column="48"/></operator><name pos:line="26" pos:column="48">value<pos:position pos:line="26" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="55">(<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">int<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">)<pos:position pos:line="26" pos:column="60"/></operator> <name><name pos:line="26" pos:column="61">vl<pos:position pos:line="26" pos:column="63"/></name><operator pos:line="26" pos:column="63">-&gt;<pos:position pos:line="26" pos:column="68"/></operator><name pos:line="26" pos:column="65">time<pos:position pos:line="26" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="71"/></expr_stmt>
			<expr_stmt><expr><name pos:line="27" pos:column="25">retval<pos:position pos:line="27" pos:column="31"/></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="34">1<pos:position pos:line="27" pos:column="35"/></literal></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></then>
	<else pos:line="30" pos:column="9">else
	<block pos:line="31" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="32" pos:column="17">char<pos:position pos:line="32" pos:column="21"/></name> <modifier pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></modifier></type><name pos:line="32" pos:column="23">key_copy<pos:position pos:line="32" pos:column="31"/></name> <init pos:line="32" pos:column="32">= <expr><call><name pos:line="32" pos:column="34">strdup<pos:position pos:line="32" pos:column="40"/></name> <argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">key<pos:position pos:line="32" pos:column="45"/></name></expr></argument>)<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="47"/></decl_stmt>
		<expr_stmt><expr><name pos:line="33" pos:column="17">value<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <call><name pos:line="33" pos:column="25">malloc<pos:position pos:line="33" pos:column="31"/></name> <argument_list pos:line="33" pos:column="32">(<argument><expr><sizeof pos:line="33" pos:column="33">sizeof <argument_list pos:line="33" pos:column="40">(<argument><expr><name pos:line="33" pos:column="41">time_t<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="50"/></expr_stmt>
		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><operator pos:line="34" pos:column="21">(<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">key_copy<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">!=<pos:position pos:line="34" pos:column="33"/></operator> <name pos:line="34" pos:column="34">NULL<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">)<pos:position pos:line="34" pos:column="39"/></operator> <operator pos:line="34" pos:column="40">&amp;&amp;<pos:position pos:line="34" pos:column="50"/></operator> <operator pos:line="34" pos:column="43">(<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="44">value<pos:position pos:line="34" pos:column="49"/></name> <operator pos:line="34" pos:column="50">!=<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="53">NULL<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">)<pos:position pos:line="34" pos:column="58"/></operator></expr>)<pos:position pos:line="34" pos:column="59"/></condition><then pos:line="34" pos:column="59">
		<block pos:line="35" pos:column="17">{
			<expr_stmt><expr><operator pos:line="36" pos:column="25">*<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">value<pos:position pos:line="36" pos:column="31"/></name> <operator pos:line="36" pos:column="32">=<pos:position pos:line="36" pos:column="33"/></operator> <name><name pos:line="36" pos:column="34">vl<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">time<pos:position pos:line="36" pos:column="42"/></name></name></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">c_avl_insert<pos:position pos:line="37" pos:column="37"/></name> <argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">cache_tree<pos:position pos:line="37" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="51">key_copy<pos:position pos:line="37" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="61">value<pos:position pos:line="37" pos:column="66"/></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
			<expr_stmt><expr><name pos:line="38" pos:column="25">retval<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <literal type="number" pos:line="38" pos:column="34">0<pos:position pos:line="38" pos:column="35"/></literal></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
		}<pos:position pos:line="39" pos:column="18"/></block></then>
		<else pos:line="40" pos:column="17">else
		<block pos:line="41" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="42" pos:column="25">sfree<pos:position pos:line="42" pos:column="30"/></name> <argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">key_copy<pos:position pos:line="42" pos:column="40"/></name></expr></argument>)<pos:position pos:line="42" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="42"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">sfree<pos:position pos:line="43" pos:column="30"/></name> <argument_list pos:line="43" pos:column="31">(<argument><expr><name pos:line="43" pos:column="32">value<pos:position pos:line="43" pos:column="37"/></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></else></if>
	}<pos:position pos:line="45" pos:column="10"/></block></else></if>

	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><call><name pos:line="47" pos:column="14">time<pos:position pos:line="47" pos:column="18"/></name> <argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">NULL<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call> <operator pos:line="47" pos:column="26">-<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">cache_flush_last<pos:position pos:line="47" pos:column="44"/></name><operator pos:line="47" pos:column="44">)<pos:position pos:line="47" pos:column="45"/></operator> <operator pos:line="47" pos:column="46">&gt;<pos:position pos:line="47" pos:column="50"/></operator> <name pos:line="47" pos:column="48">cache_flush_interval<pos:position pos:line="47" pos:column="68"/></name></expr>)<pos:position pos:line="47" pos:column="69"/></condition><then pos:line="47" pos:column="69">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="17">cache_flush<pos:position pos:line="48" pos:column="28"/></name> <argument_list pos:line="48" pos:column="29">()<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">pthread_mutex_unlock<pos:position pos:line="50" pos:column="29"/></name> <argument_list pos:line="50" pos:column="30">(<argument><expr><operator pos:line="50" pos:column="31">&amp;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="32">cache_lock<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">DEBUG<pos:position pos:line="52" pos:column="14"/></name> <argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="string" pos:line="52" pos:column="16">"network plugin: cache_check: key = %s; time = %i; retval = %i"<pos:position pos:line="52" pos:column="79"/></literal></expr></argument>,
			<argument><expr><name pos:line="53" pos:column="25">key<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="30">(<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">int<pos:position pos:line="53" pos:column="34"/></name><operator pos:line="53" pos:column="34">)<pos:position pos:line="53" pos:column="35"/></operator> <name><name pos:line="53" pos:column="36">vl<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">-&gt;<pos:position pos:line="53" pos:column="43"/></operator><name pos:line="53" pos:column="40">time<pos:position pos:line="53" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="46">retval<pos:position pos:line="53" pos:column="52"/></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>

	<return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">retval<pos:position pos:line="55" pos:column="23"/></name><operator pos:line="55" pos:column="23">)<pos:position pos:line="55" pos:column="24"/></operator></expr>;<pos:position pos:line="55" pos:column="25"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

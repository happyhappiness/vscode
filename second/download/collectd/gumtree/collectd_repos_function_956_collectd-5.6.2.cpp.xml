<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_956_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">zookeeper_read<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><literal type="number" pos:line="2" pos:column="12">4096<pos:position pos:line="2" pos:column="16"/></literal></expr>]<pos:position pos:line="2" pos:column="17"/></index></name></decl>;<pos:position pos:line="2" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ptr<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">save_ptr<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">line<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name><name pos:line="6" pos:column="9">fields<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><literal type="number" pos:line="6" pos:column="16">2<pos:position pos:line="6" pos:column="17"/></literal></expr>]<pos:position pos:line="6" pos:column="18"/></index></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">zookeeper_query<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="28">sizeof<argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">buf<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call> <operator pos:line="8" pos:column="41">&lt;<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="43">0<pos:position pos:line="8" pos:column="44"/></literal></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <block pos:line="8" pos:column="46">{
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><operator pos:line="9" pos:column="13">-<pos:position pos:line="9" pos:column="14"/></operator><literal type="number" pos:line="9" pos:column="14">1<pos:position pos:line="9" pos:column="15"/></literal><operator pos:line="9" pos:column="15">)<pos:position pos:line="9" pos:column="16"/></operator></expr>;<pos:position pos:line="9" pos:column="17"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">ptr<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <name pos:line="12" pos:column="9">buf<pos:position pos:line="12" pos:column="12"/></name></expr>;<pos:position pos:line="12" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><name pos:line="13" pos:column="3">save_ptr<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <name pos:line="13" pos:column="14">NULL<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><operator pos:line="14" pos:column="10">(<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">line<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">strtok_r<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">ptr<pos:position pos:line="14" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="32">"\n\r"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="41">save_ptr<pos:position pos:line="14" pos:column="49"/></name></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call><operator pos:line="14" pos:column="50">)<pos:position pos:line="14" pos:column="51"/></operator> <operator pos:line="14" pos:column="52">!=<pos:position pos:line="14" pos:column="54"/></operator> <name pos:line="14" pos:column="55">NULL<pos:position pos:line="14" pos:column="59"/></name></expr>)<pos:position pos:line="14" pos:column="60"/></condition> <block pos:line="14" pos:column="61">{
    <expr_stmt><expr><name pos:line="15" pos:column="5">ptr<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <name pos:line="15" pos:column="11">NULL<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">strsplit<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">line<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="24">fields<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="32">2<pos:position pos:line="16" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call> <operator pos:line="16" pos:column="35">!=<pos:position pos:line="16" pos:column="37"/></operator> <literal type="number" pos:line="16" pos:column="38">2<pos:position pos:line="16" pos:column="39"/></literal></expr>)<pos:position pos:line="16" pos:column="40"/></condition><then pos:line="16" pos:column="40"> <block pos:line="16" pos:column="41">{
      <continue pos:line="17" pos:column="7">continue;<pos:position pos:line="17" pos:column="16"/></continue>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:define pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">define<pos:position pos:line="19" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="19" pos:column="9">FIELD_CHECK<pos:position pos:line="19" pos:column="20"/></name><parameter_list pos:line="19" pos:column="20">(<parameter><type><name pos:line="19" pos:column="21">check<pos:position pos:line="19" pos:column="26"/></name></type></parameter>, <parameter><type><name pos:line="19" pos:column="28">expected<pos:position pos:line="19" pos:column="36"/></name></type></parameter>)<pos:position pos:line="19" pos:column="37"/></parameter_list></cpp:macro>                                           \
  <cpp:value pos:line="20" pos:column="3">(strncmp(check, expected, strlen(expected)) == 0)<pos:position pos:line="20" pos:column="52"/></cpp:value></cpp:define>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">FIELD_CHECK<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name><name pos:line="22" pos:column="21">fields<pos:position pos:line="22" pos:column="27"/></name><index pos:line="22" pos:column="27">[<expr><literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>]<pos:position pos:line="22" pos:column="30"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="32">"zk_avg_latency"<pos:position pos:line="22" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50"> <block pos:line="22" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><literal type="string" pos:line="23" pos:column="30">"latency"<pos:position pos:line="23" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="41">"avg"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="48">atol<pos:position pos:line="23" pos:column="52"/></name><argument_list pos:line="23" pos:column="52">(<argument><expr><name><name pos:line="23" pos:column="53">fields<pos:position pos:line="23" pos:column="59"/></name><index pos:line="23" pos:column="59">[<expr><literal type="number" pos:line="23" pos:column="60">1<pos:position pos:line="23" pos:column="61"/></literal></expr>]<pos:position pos:line="23" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then> <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><call><name pos:line="24" pos:column="16">FIELD_CHECK<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name><name pos:line="24" pos:column="28">fields<pos:position pos:line="24" pos:column="34"/></name><index pos:line="24" pos:column="34">[<expr><literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>]<pos:position pos:line="24" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="39">"zk_min_latency"<pos:position pos:line="24" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="57"/></condition><then pos:line="24" pos:column="57"> <block pos:line="24" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><literal type="string" pos:line="25" pos:column="30">"latency"<pos:position pos:line="25" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="41">"min"<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="48">atol<pos:position pos:line="25" pos:column="52"/></name><argument_list pos:line="25" pos:column="52">(<argument><expr><name><name pos:line="25" pos:column="53">fields<pos:position pos:line="25" pos:column="59"/></name><index pos:line="25" pos:column="59">[<expr><literal type="number" pos:line="25" pos:column="60">1<pos:position pos:line="25" pos:column="61"/></literal></expr>]<pos:position pos:line="25" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif> <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><call><name pos:line="26" pos:column="16">FIELD_CHECK<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name><name pos:line="26" pos:column="28">fields<pos:position pos:line="26" pos:column="34"/></name><index pos:line="26" pos:column="34">[<expr><literal type="number" pos:line="26" pos:column="35">0<pos:position pos:line="26" pos:column="36"/></literal></expr>]<pos:position pos:line="26" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"zk_max_latency"<pos:position pos:line="26" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="57"/></condition><then pos:line="26" pos:column="57"> <block pos:line="26" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="27" pos:column="29"/></name><argument_list pos:line="27" pos:column="29">(<argument><expr><literal type="string" pos:line="27" pos:column="30">"latency"<pos:position pos:line="27" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="41">"max"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="48">atol<pos:position pos:line="27" pos:column="52"/></name><argument_list pos:line="27" pos:column="52">(<argument><expr><name><name pos:line="27" pos:column="53">fields<pos:position pos:line="27" pos:column="59"/></name><index pos:line="27" pos:column="59">[<expr><literal type="number" pos:line="27" pos:column="60">1<pos:position pos:line="27" pos:column="61"/></literal></expr>]<pos:position pos:line="27" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif> <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><call><name pos:line="28" pos:column="16">FIELD_CHECK<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name><name pos:line="28" pos:column="28">fields<pos:position pos:line="28" pos:column="34"/></name><index pos:line="28" pos:column="34">[<expr><literal type="number" pos:line="28" pos:column="35">0<pos:position pos:line="28" pos:column="36"/></literal></expr>]<pos:position pos:line="28" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="39">"zk_packets_received"<pos:position pos:line="28" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="62"/></condition><then pos:line="28" pos:column="62"> <block pos:line="28" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">zookeeper_submit_derive<pos:position pos:line="29" pos:column="30"/></name><argument_list pos:line="29" pos:column="30">(<argument><expr><literal type="string" pos:line="29" pos:column="31">"packets"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="42">"received"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="29" pos:column="54">atol<pos:position pos:line="29" pos:column="58"/></name><argument_list pos:line="29" pos:column="58">(<argument><expr><name><name pos:line="29" pos:column="59">fields<pos:position pos:line="29" pos:column="65"/></name><index pos:line="29" pos:column="65">[<expr><literal type="number" pos:line="29" pos:column="66">1<pos:position pos:line="29" pos:column="67"/></literal></expr>]<pos:position pos:line="29" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if></elseif> <elseif pos:line="30" pos:column="7">else <if pos:line="30" pos:column="12">if <condition pos:line="30" pos:column="15">(<expr><call><name pos:line="30" pos:column="16">FIELD_CHECK<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">fields<pos:position pos:line="30" pos:column="34"/></name><index pos:line="30" pos:column="34">[<expr><literal type="number" pos:line="30" pos:column="35">0<pos:position pos:line="30" pos:column="36"/></literal></expr>]<pos:position pos:line="30" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="39">"zk_packets_sent"<pos:position pos:line="30" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="58"/></condition><then pos:line="30" pos:column="58"> <block pos:line="30" pos:column="59">{
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">zookeeper_submit_derive<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><literal type="string" pos:line="31" pos:column="31">"packets"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="42">"sent"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="50">atol<pos:position pos:line="31" pos:column="54"/></name><argument_list pos:line="31" pos:column="54">(<argument><expr><name><name pos:line="31" pos:column="55">fields<pos:position pos:line="31" pos:column="61"/></name><index pos:line="31" pos:column="61">[<expr><literal type="number" pos:line="31" pos:column="62">1<pos:position pos:line="31" pos:column="63"/></literal></expr>]<pos:position pos:line="31" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><call><name pos:line="32" pos:column="16">FIELD_CHECK<pos:position pos:line="32" pos:column="27"/></name><argument_list pos:line="32" pos:column="27">(<argument><expr><name><name pos:line="32" pos:column="28">fields<pos:position pos:line="32" pos:column="34"/></name><index pos:line="32" pos:column="34">[<expr><literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>]<pos:position pos:line="32" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="39">"zk_num_alive_connections"<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="67"/></condition><then pos:line="32" pos:column="67"> <block pos:line="32" pos:column="68">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><literal type="string" pos:line="33" pos:column="30">"current_connections"<pos:position pos:line="33" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="53">NULL<pos:position pos:line="33" pos:column="57"/></name></expr></argument>, <argument><expr><call><name pos:line="33" pos:column="59">atol<pos:position pos:line="33" pos:column="63"/></name><argument_list pos:line="33" pos:column="63">(<argument><expr><name><name pos:line="33" pos:column="64">fields<pos:position pos:line="33" pos:column="70"/></name><index pos:line="33" pos:column="70">[<expr><literal type="number" pos:line="33" pos:column="71">1<pos:position pos:line="33" pos:column="72"/></literal></expr>]<pos:position pos:line="33" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if></elseif> <elseif pos:line="34" pos:column="7">else <if pos:line="34" pos:column="12">if <condition pos:line="34" pos:column="15">(<expr><call><name pos:line="34" pos:column="16">FIELD_CHECK<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><name><name pos:line="34" pos:column="28">fields<pos:position pos:line="34" pos:column="34"/></name><index pos:line="34" pos:column="34">[<expr><literal type="number" pos:line="34" pos:column="35">0<pos:position pos:line="34" pos:column="36"/></literal></expr>]<pos:position pos:line="34" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="39">"zk_outstanding_requests"<pos:position pos:line="34" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="66"/></condition><then pos:line="34" pos:column="66"> <block pos:line="34" pos:column="67">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="35" pos:column="29"/></name><argument_list pos:line="35" pos:column="29">(<argument><expr><literal type="string" pos:line="35" pos:column="30">"requests"<pos:position pos:line="35" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="42">"outstanding"<pos:position pos:line="35" pos:column="55"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="57">atol<pos:position pos:line="35" pos:column="61"/></name><argument_list pos:line="35" pos:column="61">(<argument><expr><name><name pos:line="35" pos:column="62">fields<pos:position pos:line="35" pos:column="68"/></name><index pos:line="35" pos:column="68">[<expr><literal type="number" pos:line="35" pos:column="69">1<pos:position pos:line="35" pos:column="70"/></literal></expr>]<pos:position pos:line="35" pos:column="71"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif> <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><call><name pos:line="36" pos:column="16">FIELD_CHECK<pos:position pos:line="36" pos:column="27"/></name><argument_list pos:line="36" pos:column="27">(<argument><expr><name><name pos:line="36" pos:column="28">fields<pos:position pos:line="36" pos:column="34"/></name><index pos:line="36" pos:column="34">[<expr><literal type="number" pos:line="36" pos:column="35">0<pos:position pos:line="36" pos:column="36"/></literal></expr>]<pos:position pos:line="36" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="39">"zk_znode_count"<pos:position pos:line="36" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="57"/></condition><then pos:line="36" pos:column="57"> <block pos:line="36" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><literal type="string" pos:line="37" pos:column="30">"gauge"<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="39">"znode"<pos:position pos:line="37" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="48">atol<pos:position pos:line="37" pos:column="52"/></name><argument_list pos:line="37" pos:column="52">(<argument><expr><name><name pos:line="37" pos:column="53">fields<pos:position pos:line="37" pos:column="59"/></name><index pos:line="37" pos:column="59">[<expr><literal type="number" pos:line="37" pos:column="60">1<pos:position pos:line="37" pos:column="61"/></literal></expr>]<pos:position pos:line="37" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="37" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif> <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if <condition pos:line="38" pos:column="15">(<expr><call><name pos:line="38" pos:column="16">FIELD_CHECK<pos:position pos:line="38" pos:column="27"/></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name><name pos:line="38" pos:column="28">fields<pos:position pos:line="38" pos:column="34"/></name><index pos:line="38" pos:column="34">[<expr><literal type="number" pos:line="38" pos:column="35">0<pos:position pos:line="38" pos:column="36"/></literal></expr>]<pos:position pos:line="38" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="39">"zk_watch_count"<pos:position pos:line="38" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="57"/></condition><then pos:line="38" pos:column="57"> <block pos:line="38" pos:column="58">{
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><literal type="string" pos:line="39" pos:column="30">"gauge"<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="39">"watch"<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="48">atol<pos:position pos:line="39" pos:column="52"/></name><argument_list pos:line="39" pos:column="52">(<argument><expr><name><name pos:line="39" pos:column="53">fields<pos:position pos:line="39" pos:column="59"/></name><index pos:line="39" pos:column="59">[<expr><literal type="number" pos:line="39" pos:column="60">1<pos:position pos:line="39" pos:column="61"/></literal></expr>]<pos:position pos:line="39" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif> <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if <condition pos:line="40" pos:column="15">(<expr><call><name pos:line="40" pos:column="16">FIELD_CHECK<pos:position pos:line="40" pos:column="27"/></name><argument_list pos:line="40" pos:column="27">(<argument><expr><name><name pos:line="40" pos:column="28">fields<pos:position pos:line="40" pos:column="34"/></name><index pos:line="40" pos:column="34">[<expr><literal type="number" pos:line="40" pos:column="35">0<pos:position pos:line="40" pos:column="36"/></literal></expr>]<pos:position pos:line="40" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="39">"zk_ephemerals_count"<pos:position pos:line="40" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="62"/></condition><then pos:line="40" pos:column="62"> <block pos:line="40" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="41" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><literal type="string" pos:line="41" pos:column="30">"gauge"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="39">"ephemerals"<pos:position pos:line="41" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="53">atol<pos:position pos:line="41" pos:column="57"/></name><argument_list pos:line="41" pos:column="57">(<argument><expr><name><name pos:line="41" pos:column="58">fields<pos:position pos:line="41" pos:column="64"/></name><index pos:line="41" pos:column="64">[<expr><literal type="number" pos:line="41" pos:column="65">1<pos:position pos:line="41" pos:column="66"/></literal></expr>]<pos:position pos:line="41" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if></elseif> <elseif pos:line="42" pos:column="7">else <if pos:line="42" pos:column="12">if <condition pos:line="42" pos:column="15">(<expr><call><name pos:line="42" pos:column="16">FIELD_CHECK<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">fields<pos:position pos:line="42" pos:column="34"/></name><index pos:line="42" pos:column="34">[<expr><literal type="number" pos:line="42" pos:column="35">0<pos:position pos:line="42" pos:column="36"/></literal></expr>]<pos:position pos:line="42" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="39">"zk_ephemerals_count"<pos:position pos:line="42" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="62"/></condition><then pos:line="42" pos:column="62"> <block pos:line="42" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="43" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="43" pos:column="29"/></name><argument_list pos:line="43" pos:column="29">(<argument><expr><literal type="string" pos:line="43" pos:column="30">"gauge"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="39">"ephemerals"<pos:position pos:line="43" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="53">atol<pos:position pos:line="43" pos:column="57"/></name><argument_list pos:line="43" pos:column="57">(<argument><expr><name><name pos:line="43" pos:column="58">fields<pos:position pos:line="43" pos:column="64"/></name><index pos:line="43" pos:column="64">[<expr><literal type="number" pos:line="43" pos:column="65">1<pos:position pos:line="43" pos:column="66"/></literal></expr>]<pos:position pos:line="43" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if></elseif> <elseif pos:line="44" pos:column="7">else <if pos:line="44" pos:column="12">if <condition pos:line="44" pos:column="15">(<expr><call><name pos:line="44" pos:column="16">FIELD_CHECK<pos:position pos:line="44" pos:column="27"/></name><argument_list pos:line="44" pos:column="27">(<argument><expr><name><name pos:line="44" pos:column="28">fields<pos:position pos:line="44" pos:column="34"/></name><index pos:line="44" pos:column="34">[<expr><literal type="number" pos:line="44" pos:column="35">0<pos:position pos:line="44" pos:column="36"/></literal></expr>]<pos:position pos:line="44" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="39">"zk_ephemerals_count"<pos:position pos:line="44" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="62"/></condition><then pos:line="44" pos:column="62"> <block pos:line="44" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="45" pos:column="29"/></name><argument_list pos:line="45" pos:column="29">(<argument><expr><literal type="string" pos:line="45" pos:column="30">"gauge"<pos:position pos:line="45" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="39">"ephemerals"<pos:position pos:line="45" pos:column="51"/></literal></expr></argument>, <argument><expr><call><name pos:line="45" pos:column="53">atol<pos:position pos:line="45" pos:column="57"/></name><argument_list pos:line="45" pos:column="57">(<argument><expr><name><name pos:line="45" pos:column="58">fields<pos:position pos:line="45" pos:column="64"/></name><index pos:line="45" pos:column="64">[<expr><literal type="number" pos:line="45" pos:column="65">1<pos:position pos:line="45" pos:column="66"/></literal></expr>]<pos:position pos:line="45" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="45" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif> <elseif pos:line="46" pos:column="7">else <if pos:line="46" pos:column="12">if <condition pos:line="46" pos:column="15">(<expr><call><name pos:line="46" pos:column="16">FIELD_CHECK<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name><name pos:line="46" pos:column="28">fields<pos:position pos:line="46" pos:column="34"/></name><index pos:line="46" pos:column="34">[<expr><literal type="number" pos:line="46" pos:column="35">0<pos:position pos:line="46" pos:column="36"/></literal></expr>]<pos:position pos:line="46" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="39">"zk_approximate_data_size"<pos:position pos:line="46" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="67"/></condition><then pos:line="46" pos:column="67"> <block pos:line="46" pos:column="68">{
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><literal type="string" pos:line="47" pos:column="30">"bytes"<pos:position pos:line="47" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="39">"approximate_data_size"<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="64">atol<pos:position pos:line="47" pos:column="68"/></name><argument_list pos:line="47" pos:column="68">(<argument><expr><name><name pos:line="47" pos:column="69">fields<pos:position pos:line="47" pos:column="75"/></name><index pos:line="47" pos:column="75">[<expr><literal type="number" pos:line="47" pos:column="76">1<pos:position pos:line="47" pos:column="77"/></literal></expr>]<pos:position pos:line="47" pos:column="78"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if></elseif> <elseif pos:line="48" pos:column="7">else <if pos:line="48" pos:column="12">if <condition pos:line="48" pos:column="15">(<expr><call><name pos:line="48" pos:column="16">FIELD_CHECK<pos:position pos:line="48" pos:column="27"/></name><argument_list pos:line="48" pos:column="27">(<argument><expr><name><name pos:line="48" pos:column="28">fields<pos:position pos:line="48" pos:column="34"/></name><index pos:line="48" pos:column="34">[<expr><literal type="number" pos:line="48" pos:column="35">0<pos:position pos:line="48" pos:column="36"/></literal></expr>]<pos:position pos:line="48" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="39">"zk_followers"<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="55"/></condition><then pos:line="48" pos:column="55"> <block pos:line="48" pos:column="56">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">(<argument><expr><literal type="string" pos:line="49" pos:column="30">"count"<pos:position pos:line="49" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="39">"followers"<pos:position pos:line="49" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="52">atol<pos:position pos:line="49" pos:column="56"/></name><argument_list pos:line="49" pos:column="56">(<argument><expr><name><name pos:line="49" pos:column="57">fields<pos:position pos:line="49" pos:column="63"/></name><index pos:line="49" pos:column="63">[<expr><literal type="number" pos:line="49" pos:column="64">1<pos:position pos:line="49" pos:column="65"/></literal></expr>]<pos:position pos:line="49" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="49" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if></elseif> <elseif pos:line="50" pos:column="7">else <if pos:line="50" pos:column="12">if <condition pos:line="50" pos:column="15">(<expr><call><name pos:line="50" pos:column="16">FIELD_CHECK<pos:position pos:line="50" pos:column="27"/></name><argument_list pos:line="50" pos:column="27">(<argument><expr><name><name pos:line="50" pos:column="28">fields<pos:position pos:line="50" pos:column="34"/></name><index pos:line="50" pos:column="34">[<expr><literal type="number" pos:line="50" pos:column="35">0<pos:position pos:line="50" pos:column="36"/></literal></expr>]<pos:position pos:line="50" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="39">"zk_synced_followers"<pos:position pos:line="50" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="62"/></condition><then pos:line="50" pos:column="62"> <block pos:line="50" pos:column="63">{
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="51" pos:column="29"/></name><argument_list pos:line="51" pos:column="29">(<argument><expr><literal type="string" pos:line="51" pos:column="30">"count"<pos:position pos:line="51" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="39">"synced_followers"<pos:position pos:line="51" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="59">atol<pos:position pos:line="51" pos:column="63"/></name><argument_list pos:line="51" pos:column="63">(<argument><expr><name><name pos:line="51" pos:column="64">fields<pos:position pos:line="51" pos:column="70"/></name><index pos:line="51" pos:column="70">[<expr><literal type="number" pos:line="51" pos:column="71">1<pos:position pos:line="51" pos:column="72"/></literal></expr>]<pos:position pos:line="51" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if></elseif> <elseif pos:line="52" pos:column="7">else <if pos:line="52" pos:column="12">if <condition pos:line="52" pos:column="15">(<expr><call><name pos:line="52" pos:column="16">FIELD_CHECK<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name><name pos:line="52" pos:column="28">fields<pos:position pos:line="52" pos:column="34"/></name><index pos:line="52" pos:column="34">[<expr><literal type="number" pos:line="52" pos:column="35">0<pos:position pos:line="52" pos:column="36"/></literal></expr>]<pos:position pos:line="52" pos:column="37"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="39">"zk_pending_syncs"<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="59"/></condition><then pos:line="52" pos:column="59"> <block pos:line="52" pos:column="60">{
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">zookeeper_submit_gauge<pos:position pos:line="53" pos:column="29"/></name><argument_list pos:line="53" pos:column="29">(<argument><expr><literal type="string" pos:line="53" pos:column="30">"count"<pos:position pos:line="53" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="39">"pending_syncs"<pos:position pos:line="53" pos:column="54"/></literal></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="56">atol<pos:position pos:line="53" pos:column="60"/></name><argument_list pos:line="53" pos:column="60">(<argument><expr><name><name pos:line="53" pos:column="61">fields<pos:position pos:line="53" pos:column="67"/></name><index pos:line="53" pos:column="67">[<expr><literal type="number" pos:line="53" pos:column="68">1<pos:position pos:line="53" pos:column="69"/></literal></expr>]<pos:position pos:line="53" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="53" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if></elseif> <else pos:line="54" pos:column="7">else <block pos:line="54" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="55" pos:column="7">DEBUG<pos:position pos:line="55" pos:column="12"/></name><argument_list pos:line="55" pos:column="12">(<argument><expr><literal type="string" pos:line="55" pos:column="13">"Uncollected zookeeper MNTR field %s"<pos:position pos:line="55" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="52">fields<pos:position pos:line="55" pos:column="58"/></name><index pos:line="55" pos:column="58">[<expr><literal type="number" pos:line="55" pos:column="59">0<pos:position pos:line="55" pos:column="60"/></literal></expr>]<pos:position pos:line="55" pos:column="61"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>
  }<pos:position pos:line="57" pos:column="4"/></block></while>

  <return pos:line="59" pos:column="3">return <expr><operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><literal type="number" pos:line="59" pos:column="11">0<pos:position pos:line="59" pos:column="12"/></literal><operator pos:line="59" pos:column="12">)<pos:position pos:line="59" pos:column="13"/></operator></expr>;<pos:position pos:line="59" pos:column="14"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

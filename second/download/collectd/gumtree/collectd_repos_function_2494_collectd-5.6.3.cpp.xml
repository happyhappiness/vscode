<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2494_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oconfig_item_t<pos:position pos:line="1" pos:column="22"/></name> <modifier pos:line="1" pos:column="23">*<pos:position pos:line="1" pos:column="24"/></modifier></type><name pos:line="1" pos:column="24">cf_read_file<pos:position pos:line="1" pos:column="36"/></name><parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">file<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">char<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">pattern<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                                    <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">depth<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> <block pos:line="2" pos:column="48">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">oconfig_item_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">root<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name pos:line="6" pos:column="10">depth<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&lt;<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="18">CF_MAX_DEPTH<pos:position pos:line="6" pos:column="30"/></name></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">pattern<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">!=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">HAVE_FNMATCH_H<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">&amp;&amp;<pos:position pos:line="9" pos:column="30"/></operator> <name pos:line="9" pos:column="23">HAVE_LIBGEN_H<pos:position pos:line="9" pos:column="36"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">tmp<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><call><name pos:line="10" pos:column="17">sstrdup<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">(<argument><expr><name pos:line="10" pos:column="25">file<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">filename<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><call><name pos:line="11" pos:column="22">basename<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name pos:line="11" pos:column="31">tmp<pos:position pos:line="11" pos:column="34"/></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">filename<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">!=<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">NULL<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">)<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="28">&amp;&amp;<pos:position pos:line="13" pos:column="38"/></operator> <operator pos:line="13" pos:column="31">(<pos:position pos:line="13" pos:column="32"/></operator><call><name pos:line="13" pos:column="32">fnmatch<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">pattern<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">filename<pos:position pos:line="13" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="59">0<pos:position pos:line="13" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call> <operator pos:line="13" pos:column="62">!=<pos:position pos:line="13" pos:column="64"/></operator> <literal type="number" pos:line="13" pos:column="65">0<pos:position pos:line="13" pos:column="66"/></literal><operator pos:line="13" pos:column="66">)<pos:position pos:line="13" pos:column="67"/></operator></expr>)<pos:position pos:line="13" pos:column="68"/></condition><then pos:line="13" pos:column="68"> <block pos:line="13" pos:column="69">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">DEBUG<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><literal type="string" pos:line="14" pos:column="13">"configfile: Not including `%s' because it "<pos:position pos:line="14" pos:column="57"/></literal>
            <literal type="string" pos:line="15" pos:column="13">"does not match pattern `%s'."<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>,
            <argument><expr><name pos:line="16" pos:column="13">filename<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">pattern<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">free<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">tmp<pos:position pos:line="17" pos:column="15"/></name></expr></argument>)<pos:position pos:line="17" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="17"/></expr_stmt>
      <return pos:line="18" pos:column="7">return <expr><operator pos:line="18" pos:column="14">(<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">NULL<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">)<pos:position pos:line="18" pos:column="20"/></operator></expr>;<pos:position pos:line="18" pos:column="21"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">free<pos:position pos:line="21" pos:column="9"/></name><argument_list pos:line="21" pos:column="9">(<argument><expr><name pos:line="21" pos:column="10">tmp<pos:position pos:line="21" pos:column="13"/></name></expr></argument>)<pos:position pos:line="21" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="15"/></expr_stmt>
<cpp:else pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">else<pos:position pos:line="22" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">ERROR<pos:position pos:line="23" pos:column="10"/></name><argument_list pos:line="23" pos:column="10">(<argument><expr><literal type="string" pos:line="23" pos:column="11">"configfile: Cannot apply pattern filter '%s' "<pos:position pos:line="23" pos:column="58"/></literal>
          <literal type="string" pos:line="24" pos:column="11">"to file '%s': functions basename() and / or "<pos:position pos:line="24" pos:column="57"/></literal>
          <literal type="string" pos:line="25" pos:column="11">"fnmatch() not available."<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>,
          <argument><expr><name pos:line="26" pos:column="11">pattern<pos:position pos:line="26" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="20">file<pos:position pos:line="26" pos:column="24"/></name></expr></argument>)<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="27" pos:column="8">/* HAVE_FNMATCH_H &amp;&amp; HAVE_LIBGEN_H */</comment>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="30" pos:column="3">root<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator> <call><name pos:line="30" pos:column="10">oconfig_parse_file<pos:position pos:line="30" pos:column="28"/></name><argument_list pos:line="30" pos:column="28">(<argument><expr><name pos:line="30" pos:column="29">file<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">root<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">==<pos:position pos:line="31" pos:column="14"/></operator> <name pos:line="31" pos:column="15">NULL<pos:position pos:line="31" pos:column="19"/></name></expr>)<pos:position pos:line="31" pos:column="20"/></condition><then pos:line="31" pos:column="20"> <block pos:line="31" pos:column="21">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"configfile: Cannot read file `%s'."<pos:position pos:line="32" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="49">file<pos:position pos:line="32" pos:column="53"/></name></expr></argument>)<pos:position pos:line="32" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="55"/></expr_stmt>
    <return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">NULL<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">)<pos:position pos:line="33" pos:column="18"/></operator></expr>;<pos:position pos:line="33" pos:column="19"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="36" pos:column="3">status<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">cf_include_all<pos:position pos:line="36" pos:column="26"/></name><argument_list pos:line="36" pos:column="26">(<argument><expr><name pos:line="36" pos:column="27">root<pos:position pos:line="36" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="33">depth<pos:position pos:line="36" pos:column="38"/></name></expr></argument>)<pos:position pos:line="36" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="40"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">!=<pos:position pos:line="37" pos:column="16"/></operator> <literal type="number" pos:line="37" pos:column="17">0<pos:position pos:line="37" pos:column="18"/></literal></expr>)<pos:position pos:line="37" pos:column="19"/></condition><then pos:line="37" pos:column="19"> <block pos:line="37" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">oconfig_free<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name pos:line="38" pos:column="18">root<pos:position pos:line="38" pos:column="22"/></name></expr></argument>)<pos:position pos:line="38" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">NULL<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">)<pos:position pos:line="39" pos:column="18"/></operator></expr>;<pos:position pos:line="39" pos:column="19"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <return pos:line="42" pos:column="3">return <expr><operator pos:line="42" pos:column="10">(<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="11">root<pos:position pos:line="42" pos:column="15"/></name><operator pos:line="42" pos:column="15">)<pos:position pos:line="42" pos:column="16"/></operator></expr>;<pos:position pos:line="42" pos:column="17"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

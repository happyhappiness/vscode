<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_942_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">serial_read<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list> <block pos:line="1" pos:column="30">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">FILE<pos:position pos:line="2" pos:column="7"/></name> <modifier pos:line="2" pos:column="8">*<pos:position pos:line="2" pos:column="9"/></modifier></type><name pos:line="2" pos:column="9">fh<pos:position pos:line="2" pos:column="11"/></name></decl>;<pos:position pos:line="2" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* there are a variety of names for the serial device */</comment>
  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">fh<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <call><name pos:line="6" pos:column="13">fopen<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><literal type="string" pos:line="6" pos:column="19">"/proc/tty/driver/serial"<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="46">"r"<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call><operator pos:line="6" pos:column="50">)<pos:position pos:line="6" pos:column="51"/></operator> <operator pos:line="6" pos:column="52">==<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="55">NULL<pos:position pos:line="6" pos:column="59"/></name> <operator pos:line="6" pos:column="60">&amp;&amp;<pos:position pos:line="6" pos:column="70"/></operator>
      <operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">fh<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call><name pos:line="7" pos:column="13">fopen<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><literal type="string" pos:line="7" pos:column="19">"/proc/tty/driver/ttyS"<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="44">"r"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call><operator pos:line="7" pos:column="48">)<pos:position pos:line="7" pos:column="49"/></operator> <operator pos:line="7" pos:column="50">==<pos:position pos:line="7" pos:column="52"/></operator> <name pos:line="7" pos:column="53">NULL<pos:position pos:line="7" pos:column="57"/></name></expr>)<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58"> <block pos:line="7" pos:column="59">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">errbuf<pos:position pos:line="8" pos:column="16"/></name><index pos:line="8" pos:column="16">[<expr><literal type="number" pos:line="8" pos:column="17">1024<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">WARNING<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><literal type="string" pos:line="9" pos:column="13">"serial: fopen: %s"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="34">sstrerror<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">errno<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="51">errbuf<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="59">sizeof<argument_list pos:line="9" pos:column="65">(<argument><expr><name pos:line="9" pos:column="66">errbuf<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><operator pos:line="10" pos:column="13">-<pos:position pos:line="10" pos:column="14"/></operator><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal><operator pos:line="10" pos:column="15">)<pos:position pos:line="10" pos:column="16"/></operator></expr>;<pos:position pos:line="10" pos:column="17"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><call><name pos:line="13" pos:column="10">fgets<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">buffer<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="24">sizeof<argument_list pos:line="13" pos:column="30">(<argument><expr><name pos:line="13" pos:column="31">buffer<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">fh<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call> <operator pos:line="13" pos:column="44">!=<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">NULL<pos:position pos:line="13" pos:column="51"/></name></expr>)<pos:position pos:line="13" pos:column="52"/></condition> <block pos:line="13" pos:column="53">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">derive_t<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">rx<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">derive_t<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">tx<pos:position pos:line="15" pos:column="16"/></name> <init pos:line="15" pos:column="17">= <expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">_Bool<pos:position pos:line="16" pos:column="10"/></name></type> <name pos:line="16" pos:column="11">have_rx<pos:position pos:line="16" pos:column="18"/></name> <init pos:line="16" pos:column="19">= <expr><literal type="number" pos:line="16" pos:column="21">0<pos:position pos:line="16" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="24">have_tx<pos:position pos:line="16" pos:column="31"/></name> <init pos:line="16" pos:column="32">= <expr><literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">size_t<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">len<pos:position pos:line="17" pos:column="15"/></name></decl>;<pos:position pos:line="17" pos:column="16"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name> <modifier pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></modifier></type><name><name pos:line="19" pos:column="11">fields<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><literal type="number" pos:line="19" pos:column="18">16<pos:position pos:line="19" pos:column="20"/></literal></expr>]<pos:position pos:line="19" pos:column="21"/></index></name></decl>;<pos:position pos:line="19" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">numfields<pos:position pos:line="20" pos:column="18"/></name></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">numfields<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">strsplit<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">buffer<pos:position pos:line="22" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="34">fields<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="42">STATIC_ARRAY_SIZE<pos:position pos:line="22" pos:column="59"/></name><argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">fields<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">numfields<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="21">6<pos:position pos:line="23" pos:column="22"/></literal></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23">
      <block type="pseudo"><continue pos:line="24" pos:column="7">continue;<pos:position pos:line="24" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/*
     * 0: uart:16550A port:000003F8 irq:4 tx:0 rx:0
     * 1: uart:16550A port:000002F8 irq:3 tx:0 rx:0
     */</comment>
    <expr_stmt><expr><name pos:line="30" pos:column="5">len<pos:position pos:line="30" pos:column="8"/></name> <operator pos:line="30" pos:column="9">=<pos:position pos:line="30" pos:column="10"/></operator> <call><name pos:line="30" pos:column="11">strlen<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name><name pos:line="30" pos:column="18">fields<pos:position pos:line="30" pos:column="24"/></name><index pos:line="30" pos:column="24">[<expr><literal type="number" pos:line="30" pos:column="25">0<pos:position pos:line="30" pos:column="26"/></literal></expr>]<pos:position pos:line="30" pos:column="27"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="29"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">len<pos:position pos:line="31" pos:column="12"/></name> <operator pos:line="31" pos:column="13">&lt;<pos:position pos:line="31" pos:column="17"/></operator> <literal type="number" pos:line="31" pos:column="15">2<pos:position pos:line="31" pos:column="16"/></literal></expr>)<pos:position pos:line="31" pos:column="17"/></condition><then pos:line="31" pos:column="17">
      <block type="pseudo"><continue pos:line="32" pos:column="7">continue;<pos:position pos:line="32" pos:column="16"/></continue></block></then></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">fields<pos:position pos:line="33" pos:column="15"/></name><index pos:line="33" pos:column="15">[<expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>]<pos:position pos:line="33" pos:column="18"/></index><index pos:line="33" pos:column="18">[<expr><name pos:line="33" pos:column="19">len<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">-<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">1<pos:position pos:line="33" pos:column="26"/></literal></expr>]<pos:position pos:line="33" pos:column="27"/></index></name> <operator pos:line="33" pos:column="28">!=<pos:position pos:line="33" pos:column="30"/></operator> <literal type="char" pos:line="33" pos:column="31">':'<pos:position pos:line="33" pos:column="34"/></literal></expr>)<pos:position pos:line="33" pos:column="35"/></condition><then pos:line="33" pos:column="35">
      <block type="pseudo"><continue pos:line="34" pos:column="7">continue;<pos:position pos:line="34" pos:column="16"/></continue></block></then></if>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">fields<pos:position pos:line="35" pos:column="11"/></name><index pos:line="35" pos:column="11">[<expr><literal type="number" pos:line="35" pos:column="12">0<pos:position pos:line="35" pos:column="13"/></literal></expr>]<pos:position pos:line="35" pos:column="14"/></index><index pos:line="35" pos:column="14">[<expr><name pos:line="35" pos:column="15">len<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">-<pos:position pos:line="35" pos:column="20"/></operator> <literal type="number" pos:line="35" pos:column="21">1<pos:position pos:line="35" pos:column="22"/></literal></expr>]<pos:position pos:line="35" pos:column="23"/></index></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <literal type="number" pos:line="35" pos:column="26">0<pos:position pos:line="35" pos:column="27"/></literal></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>

    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><decl><type><name pos:line="37" pos:column="10">int<pos:position pos:line="37" pos:column="13"/></name></type> <name pos:line="37" pos:column="14">i<pos:position pos:line="37" pos:column="15"/></name> <init pos:line="37" pos:column="16">= <expr><literal type="number" pos:line="37" pos:column="18">1<pos:position pos:line="37" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="37" pos:column="20"/></init> <condition><expr><name pos:line="37" pos:column="21">i<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&lt;<pos:position pos:line="37" pos:column="27"/></operator> <name pos:line="37" pos:column="25">numfields<pos:position pos:line="37" pos:column="34"/></name></expr>;<pos:position pos:line="37" pos:column="35"/></condition> <incr><expr><name pos:line="37" pos:column="36">i<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">++<pos:position pos:line="37" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="37" pos:column="40"/></control> <block pos:line="37" pos:column="41">{
      <expr_stmt><expr><name pos:line="38" pos:column="7">len<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <call><name pos:line="38" pos:column="13">strlen<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name><name pos:line="38" pos:column="20">fields<pos:position pos:line="38" pos:column="26"/></name><index pos:line="38" pos:column="26">[<expr><name pos:line="38" pos:column="27">i<pos:position pos:line="38" pos:column="28"/></name></expr>]<pos:position pos:line="38" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
      <if pos:line="39" pos:column="7">if <condition pos:line="39" pos:column="10">(<expr><name pos:line="39" pos:column="11">len<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">&lt;<pos:position pos:line="39" pos:column="19"/></operator> <literal type="number" pos:line="39" pos:column="17">4<pos:position pos:line="39" pos:column="18"/></literal></expr>)<pos:position pos:line="39" pos:column="19"/></condition><then pos:line="39" pos:column="19">
        <block type="pseudo"><continue pos:line="40" pos:column="9">continue;<pos:position pos:line="40" pos:column="18"/></continue></block></then></if>

      <if pos:line="42" pos:column="7">if <condition pos:line="42" pos:column="10">(<expr><call><name pos:line="42" pos:column="11">strncmp<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name><name pos:line="42" pos:column="19">fields<pos:position pos:line="42" pos:column="25"/></name><index pos:line="42" pos:column="25">[<expr><name pos:line="42" pos:column="26">i<pos:position pos:line="42" pos:column="27"/></name></expr>]<pos:position pos:line="42" pos:column="28"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="30">"tx:"<pos:position pos:line="42" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="37">3<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call> <operator pos:line="42" pos:column="40">==<pos:position pos:line="42" pos:column="42"/></operator> <literal type="number" pos:line="42" pos:column="43">0<pos:position pos:line="42" pos:column="44"/></literal></expr>)<pos:position pos:line="42" pos:column="45"/></condition><then pos:line="42" pos:column="45"> <block pos:line="42" pos:column="46">{
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">strtoderive<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name><name pos:line="43" pos:column="25">fields<pos:position pos:line="43" pos:column="31"/></name><index pos:line="43" pos:column="31">[<expr><name pos:line="43" pos:column="32">i<pos:position pos:line="43" pos:column="33"/></name></expr>]<pos:position pos:line="43" pos:column="34"/></index></name> <operator pos:line="43" pos:column="35">+<pos:position pos:line="43" pos:column="36"/></operator> <literal type="number" pos:line="43" pos:column="37">3<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="43" pos:column="40">&amp;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="41">tx<pos:position pos:line="43" pos:column="43"/></name></expr></argument>)<pos:position pos:line="43" pos:column="44"/></argument_list></call> <operator pos:line="43" pos:column="45">==<pos:position pos:line="43" pos:column="47"/></operator> <literal type="number" pos:line="43" pos:column="48">0<pos:position pos:line="43" pos:column="49"/></literal></expr>)<pos:position pos:line="43" pos:column="50"/></condition><then pos:line="43" pos:column="50">
          <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="11">have_tx<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="21">1<pos:position pos:line="44" pos:column="22"/></literal></expr>;<pos:position pos:line="44" pos:column="23"/></expr_stmt></block></then></if>
      }<pos:position pos:line="45" pos:column="8"/></block></then> <elseif pos:line="45" pos:column="9">else <if pos:line="45" pos:column="14">if <condition pos:line="45" pos:column="17">(<expr><call><name pos:line="45" pos:column="18">strncmp<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name><name pos:line="45" pos:column="26">fields<pos:position pos:line="45" pos:column="32"/></name><index pos:line="45" pos:column="32">[<expr><name pos:line="45" pos:column="33">i<pos:position pos:line="45" pos:column="34"/></name></expr>]<pos:position pos:line="45" pos:column="35"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="37">"rx:"<pos:position pos:line="45" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="44">3<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call> <operator pos:line="45" pos:column="47">==<pos:position pos:line="45" pos:column="49"/></operator> <literal type="number" pos:line="45" pos:column="50">0<pos:position pos:line="45" pos:column="51"/></literal></expr>)<pos:position pos:line="45" pos:column="52"/></condition><then pos:line="45" pos:column="52"> <block pos:line="45" pos:column="53">{
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">strtoderive<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name><name pos:line="46" pos:column="25">fields<pos:position pos:line="46" pos:column="31"/></name><index pos:line="46" pos:column="31">[<expr><name pos:line="46" pos:column="32">i<pos:position pos:line="46" pos:column="33"/></name></expr>]<pos:position pos:line="46" pos:column="34"/></index></name> <operator pos:line="46" pos:column="35">+<pos:position pos:line="46" pos:column="36"/></operator> <literal type="number" pos:line="46" pos:column="37">3<pos:position pos:line="46" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="40">&amp;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="41">rx<pos:position pos:line="46" pos:column="43"/></name></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call> <operator pos:line="46" pos:column="45">==<pos:position pos:line="46" pos:column="47"/></operator> <literal type="number" pos:line="46" pos:column="48">0<pos:position pos:line="46" pos:column="49"/></literal></expr>)<pos:position pos:line="46" pos:column="50"/></condition><then pos:line="46" pos:column="50">
          <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="11">have_rx<pos:position pos:line="47" pos:column="18"/></name> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <literal type="number" pos:line="47" pos:column="21">1<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt></block></then></if>
      }<pos:position pos:line="48" pos:column="8"/></block></then></if></elseif></if>
    }<pos:position pos:line="49" pos:column="6"/></block></for>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">have_rx<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">&amp;&amp;<pos:position pos:line="51" pos:column="27"/></operator> <name pos:line="51" pos:column="20">have_tx<pos:position pos:line="51" pos:column="27"/></name></expr>)<pos:position pos:line="51" pos:column="28"/></condition><then pos:line="51" pos:column="28">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">serial_submit<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name><name pos:line="52" pos:column="21">fields<pos:position pos:line="52" pos:column="27"/></name><index pos:line="52" pos:column="27">[<expr><literal type="number" pos:line="52" pos:column="28">0<pos:position pos:line="52" pos:column="29"/></literal></expr>]<pos:position pos:line="52" pos:column="30"/></index></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="32">rx<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">tx<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="55" pos:column="3">fclose<pos:position pos:line="55" pos:column="9"/></name><argument_list pos:line="55" pos:column="9">(<argument><expr><name pos:line="55" pos:column="10">fh<pos:position pos:line="55" pos:column="12"/></name></expr></argument>)<pos:position pos:line="55" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="14"/></expr_stmt>
  <return pos:line="56" pos:column="3">return <expr><operator pos:line="56" pos:column="10">(<pos:position pos:line="56" pos:column="11"/></operator><literal type="number" pos:line="56" pos:column="11">0<pos:position pos:line="56" pos:column="12"/></literal><operator pos:line="56" pos:column="12">)<pos:position pos:line="56" pos:column="13"/></operator></expr>;<pos:position pos:line="56" pos:column="14"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

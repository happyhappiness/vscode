<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_280_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ping_dispatch_all<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">pingobj_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">pingobj<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pingobj_iter_t<pos:position pos:line="3" pos:column="17"/></name> <modifier pos:line="3" pos:column="18">*<pos:position pos:line="3" pos:column="19"/></modifier></type><name pos:line="3" pos:column="19">iter<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">hostlist_t<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">hl<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <for pos:line="7" pos:column="3">for <control pos:line="7" pos:column="7">(<init><expr><name pos:line="7" pos:column="8">iter<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">ping_iterator_get<pos:position pos:line="7" pos:column="32"/></name> <argument_list pos:line="7" pos:column="33">(<argument><expr><name pos:line="7" pos:column="34">pingobj<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></init>
      <condition><expr><name pos:line="8" pos:column="7">iter<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">!=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></condition>
      <incr><expr><name pos:line="9" pos:column="7">iter<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">ping_iterator_next<pos:position pos:line="9" pos:column="32"/></name> <argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">iter<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr></incr>)<pos:position pos:line="9" pos:column="40"/></control>
  <block pos:line="10" pos:column="3">{ <comment type="block" pos:line="10" pos:column="5">/* {{{ */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name><name pos:line="11" pos:column="10">userhost<pos:position pos:line="11" pos:column="18"/></name><index pos:line="11" pos:column="18">[<expr><name pos:line="11" pos:column="19">NI_MAXHOST<pos:position pos:line="11" pos:column="29"/></name></expr>]<pos:position pos:line="11" pos:column="30"/></index></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">double<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">latency<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">param_size<pos:position pos:line="13" pos:column="22"/></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">param_size<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">=<pos:position pos:line="15" pos:column="17"/></operator> <sizeof pos:line="15" pos:column="18">sizeof <argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">userhost<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">status<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">ping_iterator_get_info<pos:position pos:line="16" pos:column="36"/></name> <argument_list pos:line="16" pos:column="37">(<argument><expr><name pos:line="16" pos:column="38">iter<pos:position pos:line="16" pos:column="42"/></name></expr></argument>,
<cpp:ifdef pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">ifdef<pos:position pos:line="17" pos:column="7"/></cpp:directive> <name pos:line="17" pos:column="8">PING_INFO_USERNAME<pos:position pos:line="17" pos:column="26"/></name></cpp:ifdef>
        <argument><expr><name pos:line="18" pos:column="9">PING_INFO_USERNAME<pos:position pos:line="18" pos:column="27"/></name></expr></argument>,
<cpp:else pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">else<pos:position pos:line="19" pos:column="6"/></cpp:directive></cpp:else>
        <argument><expr><name pos:line="20" pos:column="9">PING_INFO_HOSTNAME<pos:position pos:line="20" pos:column="27"/></name></expr></argument>,
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
        <argument><expr><name pos:line="22" pos:column="9">userhost<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="19">&amp;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="20">param_size<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">status<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">!=<pos:position pos:line="23" pos:column="18"/></operator> <literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21">
    <block pos:line="24" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="25" pos:column="7">WARNING<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="string" pos:line="25" pos:column="16">"ping plugin: ping_iterator_get_info failed: %s"<pos:position pos:line="25" pos:column="64"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="26" pos:column="11">ping_get_error<pos:position pos:line="26" pos:column="25"/></name> <argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">pingobj<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
      <continue pos:line="27" pos:column="7">continue;<pos:position pos:line="27" pos:column="16"/></continue>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <for pos:line="30" pos:column="5">for <control pos:line="30" pos:column="9">(<init><expr><name pos:line="30" pos:column="10">hl<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">hostlist_head<pos:position pos:line="30" pos:column="28"/></name></expr>;<pos:position pos:line="30" pos:column="29"/></init> <condition><expr><name pos:line="30" pos:column="30">hl<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">!=<pos:position pos:line="30" pos:column="35"/></operator> <name pos:line="30" pos:column="36">NULL<pos:position pos:line="30" pos:column="40"/></name></expr>;<pos:position pos:line="30" pos:column="41"/></condition> <incr><expr><name pos:line="30" pos:column="42">hl<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">=<pos:position pos:line="30" pos:column="46"/></operator> <name><name pos:line="30" pos:column="47">hl<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">-&gt;<pos:position pos:line="30" pos:column="54"/></operator><name pos:line="30" pos:column="51">next<pos:position pos:line="30" pos:column="55"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="56"/></control>
      <block type="pseudo"><if pos:line="31" pos:column="7">if <condition pos:line="31" pos:column="10">(<expr><call><name pos:line="31" pos:column="11">strcmp<pos:position pos:line="31" pos:column="17"/></name> <argument_list pos:line="31" pos:column="18">(<argument><expr><name pos:line="31" pos:column="19">userhost<pos:position pos:line="31" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="29">hl<pos:position pos:line="31" pos:column="31"/></name><operator pos:line="31" pos:column="31">-&gt;<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="33">host<pos:position pos:line="31" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call> <operator pos:line="31" pos:column="39">==<pos:position pos:line="31" pos:column="41"/></operator> <literal type="number" pos:line="31" pos:column="42">0<pos:position pos:line="31" pos:column="43"/></literal></expr>)<pos:position pos:line="31" pos:column="44"/></condition><then pos:line="31" pos:column="44">
        <block type="pseudo"><break pos:line="32" pos:column="9">break;<pos:position pos:line="32" pos:column="15"/></break></block></then></if></block></for>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">hl<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">==<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">NULL<pos:position pos:line="34" pos:column="19"/></name></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20">
    <block pos:line="35" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">WARNING<pos:position pos:line="36" pos:column="14"/></name> <argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="string" pos:line="36" pos:column="16">"ping plugin: Cannot find host %s."<pos:position pos:line="36" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="53">userhost<pos:position pos:line="36" pos:column="61"/></name></expr></argument>)<pos:position pos:line="36" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="63"/></expr_stmt>
      <continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="40" pos:column="5">param_size<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <sizeof pos:line="40" pos:column="18">sizeof <argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">latency<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></sizeof></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">status<pos:position pos:line="41" pos:column="11"/></name> <operator pos:line="41" pos:column="12">=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">ping_iterator_get_info<pos:position pos:line="41" pos:column="36"/></name> <argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">iter<pos:position pos:line="41" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="44">PING_INFO_LATENCY<pos:position pos:line="41" pos:column="61"/></name></expr></argument>,
        <argument><expr><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">void<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">*<pos:position pos:line="42" pos:column="16"/></operator><operator pos:line="42" pos:column="16">)<pos:position pos:line="42" pos:column="17"/></operator> <operator pos:line="42" pos:column="18">&amp;<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="19">latency<pos:position pos:line="42" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="28">&amp;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="29">param_size<pos:position pos:line="42" pos:column="39"/></name></expr></argument>)<pos:position pos:line="42" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="41"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">status<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">!=<pos:position pos:line="43" pos:column="18"/></operator> <literal type="number" pos:line="43" pos:column="19">0<pos:position pos:line="43" pos:column="20"/></literal></expr>)<pos:position pos:line="43" pos:column="21"/></condition><then pos:line="43" pos:column="21">
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">WARNING<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="string" pos:line="45" pos:column="16">"ping plugin: ping_iterator_get_info failed: %s"<pos:position pos:line="45" pos:column="64"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="46" pos:column="11">ping_get_error<pos:position pos:line="46" pos:column="25"/></name> <argument_list pos:line="46" pos:column="26">(<argument><expr><name pos:line="46" pos:column="27">pingobj<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="37"/></expr_stmt>
      <continue pos:line="47" pos:column="7">continue;<pos:position pos:line="47" pos:column="16"/></continue>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">hl<pos:position pos:line="50" pos:column="7"/></name><operator pos:line="50" pos:column="7">-&gt;<pos:position pos:line="50" pos:column="12"/></operator><name pos:line="50" pos:column="9">pkg_sent<pos:position pos:line="50" pos:column="17"/></name></name><operator pos:line="50" pos:column="17">++<pos:position pos:line="50" pos:column="19"/></operator></expr>;<pos:position pos:line="50" pos:column="20"/></expr_stmt>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">latency<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">&gt;=<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="20">0.0<pos:position pos:line="51" pos:column="23"/></literal></expr>)<pos:position pos:line="51" pos:column="24"/></condition><then pos:line="51" pos:column="24">
    <block pos:line="52" pos:column="5">{
      <expr_stmt><expr><name><name pos:line="53" pos:column="7">hl<pos:position pos:line="53" pos:column="9"/></name><operator pos:line="53" pos:column="9">-&gt;<pos:position pos:line="53" pos:column="14"/></operator><name pos:line="53" pos:column="11">pkg_recv<pos:position pos:line="53" pos:column="19"/></name></name><operator pos:line="53" pos:column="19">++<pos:position pos:line="53" pos:column="21"/></operator></expr>;<pos:position pos:line="53" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="54" pos:column="7">hl<pos:position pos:line="54" pos:column="9"/></name><operator pos:line="54" pos:column="9">-&gt;<pos:position pos:line="54" pos:column="14"/></operator><name pos:line="54" pos:column="11">latency_total<pos:position pos:line="54" pos:column="24"/></name></name> <operator pos:line="54" pos:column="25">+=<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">latency<pos:position pos:line="54" pos:column="35"/></name></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="55" pos:column="7">hl<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">latency_squared<pos:position pos:line="55" pos:column="26"/></name></name> <operator pos:line="55" pos:column="27">+=<pos:position pos:line="55" pos:column="29"/></operator> <operator pos:line="55" pos:column="30">(<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="31">latency<pos:position pos:line="55" pos:column="38"/></name> <operator pos:line="55" pos:column="39">*<pos:position pos:line="55" pos:column="40"/></operator> <name pos:line="55" pos:column="41">latency<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">)<pos:position pos:line="55" pos:column="49"/></operator></expr>;<pos:position pos:line="55" pos:column="50"/></expr_stmt>

      <comment type="block" pos:line="57" pos:column="7">/* reset missed packages counter */</comment>
      <expr_stmt><expr><name><name pos:line="58" pos:column="7">hl<pos:position pos:line="58" pos:column="9"/></name><operator pos:line="58" pos:column="9">-&gt;<pos:position pos:line="58" pos:column="14"/></operator><name pos:line="58" pos:column="11">pkg_missed<pos:position pos:line="58" pos:column="21"/></name></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <literal type="number" pos:line="58" pos:column="24">0<pos:position pos:line="58" pos:column="25"/></literal></expr>;<pos:position pos:line="58" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then> <else pos:line="59" pos:column="7">else
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="7">hl<pos:position pos:line="60" pos:column="9"/></name><operator pos:line="60" pos:column="9">-&gt;<pos:position pos:line="60" pos:column="14"/></operator><name pos:line="60" pos:column="11">pkg_missed<pos:position pos:line="60" pos:column="21"/></name></name><operator pos:line="60" pos:column="21">++<pos:position pos:line="60" pos:column="23"/></operator></expr>;<pos:position pos:line="60" pos:column="24"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="62" pos:column="5">/* if the host did not answer our last N packages, trigger a resolv. */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">ping_max_missed<pos:position pos:line="63" pos:column="24"/></name> <operator pos:line="63" pos:column="25">&gt;=<pos:position pos:line="63" pos:column="30"/></operator> <literal type="number" pos:line="63" pos:column="28">0<pos:position pos:line="63" pos:column="29"/></literal> <operator pos:line="63" pos:column="30">&amp;&amp;<pos:position pos:line="63" pos:column="40"/></operator> <name><name pos:line="63" pos:column="33">hl<pos:position pos:line="63" pos:column="35"/></name><operator pos:line="63" pos:column="35">-&gt;<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="37">pkg_missed<pos:position pos:line="63" pos:column="47"/></name></name> <operator pos:line="63" pos:column="48">&gt;=<pos:position pos:line="63" pos:column="53"/></operator> <name pos:line="63" pos:column="51">ping_max_missed<pos:position pos:line="63" pos:column="66"/></name></expr>)<pos:position pos:line="63" pos:column="67"/></condition><then pos:line="63" pos:column="67">
    <block pos:line="64" pos:column="5">{ <comment type="block" pos:line="64" pos:column="7">/* {{{ */</comment>
      <comment type="block" pos:line="65" pos:column="7">/* we reset the missed package counter here, since we only want to
       * trigger a resolv every N packages and not every package _AFTER_ N
       * missed packages */</comment>
      <expr_stmt><expr><name><name pos:line="68" pos:column="7">hl<pos:position pos:line="68" pos:column="9"/></name><operator pos:line="68" pos:column="9">-&gt;<pos:position pos:line="68" pos:column="14"/></operator><name pos:line="68" pos:column="11">pkg_missed<pos:position pos:line="68" pos:column="21"/></name></name> <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <literal type="number" pos:line="68" pos:column="24">0<pos:position pos:line="68" pos:column="25"/></literal></expr>;<pos:position pos:line="68" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="70" pos:column="7">WARNING<pos:position pos:line="70" pos:column="14"/></name> <argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="string" pos:line="70" pos:column="16">"ping plugin: host %s has not answered %d PING requests,"<pos:position pos:line="70" pos:column="73"/></literal>
          <literal type="string" pos:line="71" pos:column="11">" triggering resolve"<pos:position pos:line="71" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="34">hl<pos:position pos:line="71" pos:column="36"/></name><operator pos:line="71" pos:column="36">-&gt;<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="38">host<pos:position pos:line="71" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="44">ping_max_missed<pos:position pos:line="71" pos:column="59"/></name></expr></argument>)<pos:position pos:line="71" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="61"/></expr_stmt>

      <comment type="block" pos:line="73" pos:column="7">/* we trigger the resolv simply be removeing and adding the host to our
       * ping object */</comment>
      <expr_stmt><expr><name pos:line="75" pos:column="7">status<pos:position pos:line="75" pos:column="13"/></name> <operator pos:line="75" pos:column="14">=<pos:position pos:line="75" pos:column="15"/></operator> <call><name pos:line="75" pos:column="16">ping_host_remove<pos:position pos:line="75" pos:column="32"/></name> <argument_list pos:line="75" pos:column="33">(<argument><expr><name pos:line="75" pos:column="34">pingobj<pos:position pos:line="75" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="43">hl<pos:position pos:line="75" pos:column="45"/></name><operator pos:line="75" pos:column="45">-&gt;<pos:position pos:line="75" pos:column="50"/></operator><name pos:line="75" pos:column="47">host<pos:position pos:line="75" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="53"/></expr_stmt>
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><name pos:line="76" pos:column="11">status<pos:position pos:line="76" pos:column="17"/></name> <operator pos:line="76" pos:column="18">!=<pos:position pos:line="76" pos:column="20"/></operator> <literal type="number" pos:line="76" pos:column="21">0<pos:position pos:line="76" pos:column="22"/></literal></expr>)<pos:position pos:line="76" pos:column="23"/></condition><then pos:line="76" pos:column="23">
      <block pos:line="77" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">WARNING<pos:position pos:line="78" pos:column="16"/></name> <argument_list pos:line="78" pos:column="17">(<argument><expr><literal type="string" pos:line="78" pos:column="18">"ping plugin: ping_host_remove (%s) failed."<pos:position pos:line="78" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="64">hl<pos:position pos:line="78" pos:column="66"/></name><operator pos:line="78" pos:column="66">-&gt;<pos:position pos:line="78" pos:column="71"/></operator><name pos:line="78" pos:column="68">host<pos:position pos:line="78" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="79" pos:column="8"/></block></then>
      <else pos:line="80" pos:column="7">else
      <block pos:line="81" pos:column="7">{
        <expr_stmt><expr><name pos:line="82" pos:column="9">status<pos:position pos:line="82" pos:column="15"/></name> <operator pos:line="82" pos:column="16">=<pos:position pos:line="82" pos:column="17"/></operator> <call><name pos:line="82" pos:column="18">ping_host_add<pos:position pos:line="82" pos:column="31"/></name> <argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">pingobj<pos:position pos:line="82" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="42">hl<pos:position pos:line="82" pos:column="44"/></name><operator pos:line="82" pos:column="44">-&gt;<pos:position pos:line="82" pos:column="49"/></operator><name pos:line="82" pos:column="46">host<pos:position pos:line="82" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="52"/></expr_stmt>
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name pos:line="83" pos:column="13">status<pos:position pos:line="83" pos:column="19"/></name> <operator pos:line="83" pos:column="20">!=<pos:position pos:line="83" pos:column="22"/></operator> <literal type="number" pos:line="83" pos:column="23">0<pos:position pos:line="83" pos:column="24"/></literal></expr>)<pos:position pos:line="83" pos:column="25"/></condition><then pos:line="83" pos:column="25">
          <block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="11">ERROR<pos:position pos:line="84" pos:column="16"/></name> <argument_list pos:line="84" pos:column="17">(<argument><expr><literal type="string" pos:line="84" pos:column="18">"ping plugin: ping_host_add (%s) failed."<pos:position pos:line="84" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="61">hl<pos:position pos:line="84" pos:column="63"/></name><operator pos:line="84" pos:column="63">-&gt;<pos:position pos:line="84" pos:column="68"/></operator><name pos:line="84" pos:column="65">host<pos:position pos:line="84" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="71"/></expr_stmt></block></then></if>
      }<pos:position pos:line="85" pos:column="8"/></block></else></if>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if> <comment type="block" pos:line="86" pos:column="7">/* }}} ping_max_missed */</comment>
  }<pos:position pos:line="87" pos:column="4"/></block></for> <comment type="block" pos:line="87" pos:column="5">/* }}} for (iter) */</comment>

  <return pos:line="89" pos:column="3">return <expr><operator pos:line="89" pos:column="10">(<pos:position pos:line="89" pos:column="11"/></operator><literal type="number" pos:line="89" pos:column="11">0<pos:position pos:line="89" pos:column="12"/></literal><operator pos:line="89" pos:column="12">)<pos:position pos:line="89" pos:column="13"/></operator></expr>;<pos:position pos:line="89" pos:column="14"/></return>
}<pos:position pos:line="90" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_686_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mic_init<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">U32<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">U32<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">mic_count<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">mic_handle<pos:position pos:line="6" pos:column="23"/></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator></expr>;<pos:position pos:line="7" pos:column="28"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">mic_count<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">=<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">(<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="22">U32<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">)<pos:position pos:line="9" pos:column="26"/></operator> <call><name pos:line="9" pos:column="27">STATIC_ARRAY_SIZE<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><name pos:line="9" pos:column="45">mics<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="51"/></expr_stmt>
	<expr_stmt><expr><name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">MicInitAPI<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><operator pos:line="10" pos:column="26">&amp;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="27">mic_handle<pos:position pos:line="10" pos:column="37"/></name></expr></argument>,  <argument><expr><name pos:line="10" pos:column="40">eTARGET_SCIF_DRIVER<pos:position pos:line="10" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="61">mics<pos:position pos:line="10" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="67">&amp;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="68">mic_count<pos:position pos:line="10" pos:column="77"/></name></expr></argument>)<pos:position pos:line="10" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="79"/></expr_stmt>
	<if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">ret<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">!=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">MIC_ACCESS_API_SUCCESS<pos:position pos:line="11" pos:column="42"/></name></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block pos:line="11" pos:column="44">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">ERROR<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><literal type="string" pos:line="12" pos:column="23">"mic plugin: Problem initializing MicAccessAPI: %s"<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="13" pos:column="33">MicGetErrorString<pos:position pos:line="13" pos:column="50"/></name><argument_list pos:line="13" pos:column="50">(<argument><expr><name pos:line="13" pos:column="51">ret<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="15" pos:column="9">DEBUG<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="string" pos:line="15" pos:column="15">"mic plugin: found: %"<pos:position pos:line="15" pos:column="37"/></literal><name pos:line="15" pos:column="37">PRIu32<pos:position pos:line="15" pos:column="43"/></name><literal type="string" pos:line="15" pos:column="43">" MIC(s)"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>,<argument><expr><name pos:line="15" pos:column="53">mic_count<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>

	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">mic_count<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">&lt;<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal> <operator pos:line="17" pos:column="25">||<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">mic_count<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">&gt;=<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="39">MAX_MICS<pos:position pos:line="17" pos:column="47"/></name></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48"> <block pos:line="17" pos:column="49">{
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">ERROR<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><literal type="string" pos:line="18" pos:column="23">"mic plugin: No Intel MICs in system"<pos:position pos:line="18" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="62"/></expr_stmt>
		<return pos:line="19" pos:column="17">return <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><literal type="number" pos:line="19" pos:column="25">1<pos:position pos:line="19" pos:column="26"/></literal><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator></expr>;<pos:position pos:line="19" pos:column="28"/></return>
	}<pos:position pos:line="20" pos:column="10"/></block></then>
	<else pos:line="21" pos:column="9">else <block pos:line="21" pos:column="14">{
		<expr_stmt><expr><name pos:line="22" pos:column="17">num_mics<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">mic_count<pos:position pos:line="22" pos:column="37"/></name></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
		<return pos:line="23" pos:column="17">return <expr><operator pos:line="23" pos:column="24">(<pos:position pos:line="23" pos:column="25"/></operator><literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal><operator pos:line="23" pos:column="26">)<pos:position pos:line="23" pos:column="27"/></operator></expr>;<pos:position pos:line="23" pos:column="28"/></return>
	}<pos:position pos:line="24" pos:column="10"/></block></else></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

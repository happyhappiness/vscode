<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1195_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cldap_submit_value<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">char<pos:position pos:line="1" pos:column="43"/></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">type<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <name pos:line="1" pos:column="57">char<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">type_instance<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="78">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">value_t<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">value<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">cldap_t<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">st<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">value_list_t<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">vl<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="6" pos:column="9">vl<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">values<pos:position pos:line="6" pos:column="18"/></name></name>     <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <operator pos:line="6" pos:column="25">&amp;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="26">value<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="7" pos:column="9">vl<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">values_len<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name><name pos:line="9" pos:column="14">st<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">host<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">==<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">)<pos:position pos:line="9" pos:column="31"/></operator>
			<operator pos:line="10" pos:column="25">||<pos:position pos:line="10" pos:column="27"/></operator> <operator pos:line="10" pos:column="28">(<pos:position pos:line="10" pos:column="29"/></operator><call><name pos:line="10" pos:column="29">strcmp<pos:position pos:line="10" pos:column="35"/></name> <argument_list pos:line="10" pos:column="36">(<argument><expr><literal type="string" pos:line="10" pos:column="37">""<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="41">st<pos:position pos:line="10" pos:column="43"/></name><operator pos:line="10" pos:column="43">-&gt;<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="45">host<pos:position pos:line="10" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call> <operator pos:line="10" pos:column="51">==<pos:position pos:line="10" pos:column="53"/></operator> <literal type="number" pos:line="10" pos:column="54">0<pos:position pos:line="10" pos:column="55"/></literal><operator pos:line="10" pos:column="55">)<pos:position pos:line="10" pos:column="56"/></operator>
			<operator pos:line="11" pos:column="25">||<pos:position pos:line="11" pos:column="27"/></operator> <operator pos:line="11" pos:column="28">(<pos:position pos:line="11" pos:column="29"/></operator><call><name pos:line="11" pos:column="29">strcmp<pos:position pos:line="11" pos:column="35"/></name> <argument_list pos:line="11" pos:column="36">(<argument><expr><literal type="string" pos:line="11" pos:column="37">"localhost"<pos:position pos:line="11" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="50">st<pos:position pos:line="11" pos:column="52"/></name><operator pos:line="11" pos:column="52">-&gt;<pos:position pos:line="11" pos:column="57"/></operator><name pos:line="11" pos:column="54">host<pos:position pos:line="11" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call> <operator pos:line="11" pos:column="60">==<pos:position pos:line="11" pos:column="62"/></operator> <literal type="number" pos:line="11" pos:column="63">0<pos:position pos:line="11" pos:column="64"/></literal><operator pos:line="11" pos:column="64">)<pos:position pos:line="11" pos:column="65"/></operator></expr>)<pos:position pos:line="11" pos:column="66"/></condition><then pos:line="11" pos:column="66">
	<block pos:line="12" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="13" pos:column="17">sstrncpy<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">vl<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">host<pos:position pos:line="13" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="36">hostname_g<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="48">sizeof <argument_list pos:line="13" pos:column="55">(<argument><expr><name><name pos:line="13" pos:column="56">vl<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">.<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="59">host<pos:position pos:line="13" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></expr_stmt>
	}<pos:position pos:line="14" pos:column="10"/></block></then>
	<else pos:line="15" pos:column="9">else
	<block pos:line="16" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="17" pos:column="17">sstrncpy<pos:position pos:line="17" pos:column="25"/></name> <argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">vl<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">host<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="36">st<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">host<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="46">sizeof <argument_list pos:line="17" pos:column="53">(<argument><expr><name><name pos:line="17" pos:column="54">vl<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">.<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">host<pos:position pos:line="17" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>
	}<pos:position pos:line="18" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="20" pos:column="9">sstrncpy<pos:position pos:line="20" pos:column="17"/></name> <argument_list pos:line="20" pos:column="18">(<argument><expr><name><name pos:line="20" pos:column="19">vl<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">plugin<pos:position pos:line="20" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="30">"openldap"<pos:position pos:line="20" pos:column="40"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="42">sizeof <argument_list pos:line="20" pos:column="49">(<argument><expr><name><name pos:line="20" pos:column="50">vl<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">.<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">plugin<pos:position pos:line="20" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="62"/></expr_stmt>
	<if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name><name pos:line="21" pos:column="13">st<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">name<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">!=<pos:position pos:line="21" pos:column="24"/></operator> <name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="17">sstrncpy<pos:position pos:line="22" pos:column="25"/></name> <argument_list pos:line="22" pos:column="26">(<argument><expr><name><name pos:line="22" pos:column="27">vl<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">plugin_instance<pos:position pos:line="22" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="47">st<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">name<pos:position pos:line="22" pos:column="55"/></name></name></expr></argument>,
				<argument><expr><sizeof pos:line="23" pos:column="33">sizeof <argument_list pos:line="23" pos:column="40">(<argument><expr><name><name pos:line="23" pos:column="41">vl<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">.<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="44">plugin_instance<pos:position pos:line="23" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="62"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="25" pos:column="9">sstrncpy<pos:position pos:line="25" pos:column="17"/></name> <argument_list pos:line="25" pos:column="18">(<argument><expr><name><name pos:line="25" pos:column="19">vl<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">type<pos:position pos:line="25" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">type<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="34">sizeof <argument_list pos:line="25" pos:column="41">(<argument><expr><name><name pos:line="25" pos:column="42">vl<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">.<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">type<pos:position pos:line="25" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">type_instance<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">!=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">NULL<pos:position pos:line="26" pos:column="34"/></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="17">sstrncpy<pos:position pos:line="27" pos:column="25"/></name> <argument_list pos:line="27" pos:column="26">(<argument><expr><name><name pos:line="27" pos:column="27">vl<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">type_instance<pos:position pos:line="27" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="45">type_instance<pos:position pos:line="27" pos:column="58"/></name></expr></argument>,
				<argument><expr><sizeof pos:line="28" pos:column="33">sizeof <argument_list pos:line="28" pos:column="40">(<argument><expr><name><name pos:line="28" pos:column="41">vl<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">.<pos:position pos:line="28" pos:column="44"/></operator><name pos:line="28" pos:column="44">type_instance<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="30" pos:column="9">plugin_dispatch_values<pos:position pos:line="30" pos:column="31"/></name> <argument_list pos:line="30" pos:column="32">(<argument><expr><operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="34">vl<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1948_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_devname<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><specifier pos:line="1" pos:column="26">const<pos:position pos:line="1" pos:column="31"/></specifier> <name pos:line="1" pos:column="32">char<pos:position pos:line="1" pos:column="36"/></name> <modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">dev<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><name pos:line="2" pos:column="12">PATH_MAX<pos:position pos:line="2" pos:column="20"/></name></expr>]<pos:position pos:line="2" pos:column="21"/></index></name></decl>;<pos:position pos:line="2" pos:column="22"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buf2<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">PATH_MAX<pos:position pos:line="3" pos:column="21"/></name></expr>]<pos:position pos:line="3" pos:column="22"/></index></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name><name pos:line="6" pos:column="7">dev<pos:position pos:line="6" pos:column="10"/></name><index pos:line="6" pos:column="10">[<expr><literal type="number" pos:line="6" pos:column="11">0<pos:position pos:line="6" pos:column="12"/></literal></expr>]<pos:position pos:line="6" pos:column="13"/></index></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <literal type="char" pos:line="6" pos:column="17">'.'<pos:position pos:line="6" pos:column="20"/></literal></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">ssnprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">buf<pos:position pos:line="9" pos:column="16"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="18">sizeof<argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">buf<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"/sys/class/net/%s/device/driver"<pos:position pos:line="9" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="66">dev<pos:position pos:line="9" pos:column="69"/></name></expr></argument>)<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="71"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="10" pos:column="3">buf<pos:position pos:line="10" pos:column="6"/></name><index pos:line="10" pos:column="6">[<expr><sizeof pos:line="10" pos:column="7">sizeof<argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">buf<pos:position pos:line="10" pos:column="17"/></name></expr></argument>)<pos:position pos:line="10" pos:column="18"/></argument_list></sizeof> <operator pos:line="10" pos:column="19">-<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal></expr>]<pos:position pos:line="10" pos:column="23"/></index></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="char" pos:line="10" pos:column="26">'\0'<pos:position pos:line="10" pos:column="30"/></literal></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">i<pos:position pos:line="12" pos:column="4"/></name> <operator pos:line="12" pos:column="5">=<pos:position pos:line="12" pos:column="6"/></operator> <call><name pos:line="12" pos:column="7">readlink<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">buf<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="21">buf2<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="27">sizeof<argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">buf2<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></sizeof> <operator pos:line="12" pos:column="40">-<pos:position pos:line="12" pos:column="41"/></operator> <literal type="number" pos:line="12" pos:column="42">1<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">i<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">&lt;<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="11">0<pos:position pos:line="13" pos:column="12"/></literal></expr>)<pos:position pos:line="13" pos:column="13"/></condition><then pos:line="13" pos:column="13">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">0<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="16" pos:column="3">buf2<pos:position pos:line="16" pos:column="7"/></name><index pos:line="16" pos:column="7">[<expr><name pos:line="16" pos:column="8">i<pos:position pos:line="16" pos:column="9"/></name></expr>]<pos:position pos:line="16" pos:column="10"/></index></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="char" pos:line="16" pos:column="13">'\0'<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><call><name pos:line="18" pos:column="7">strstr<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><name pos:line="18" pos:column="14">buf2<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="20">"/drivers/ath_"<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call> <operator pos:line="18" pos:column="37">==<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="40">NULL<pos:position pos:line="18" pos:column="44"/></name></expr>)<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45">
    <block type="pseudo"><return pos:line="19" pos:column="5">return <expr><literal type="number" pos:line="19" pos:column="12">0<pos:position pos:line="19" pos:column="13"/></literal></expr>;<pos:position pos:line="19" pos:column="14"/></return></block></then></if>
  <return pos:line="20" pos:column="3">return <expr><literal type="number" pos:line="20" pos:column="10">1<pos:position pos:line="20" pos:column="11"/></literal></expr>;<pos:position pos:line="20" pos:column="12"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

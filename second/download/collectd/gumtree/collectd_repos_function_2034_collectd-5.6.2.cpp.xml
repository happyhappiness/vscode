<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2034_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ctail_config_add_match<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">cu_tail_match_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">tm<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>,
                                  <parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="47">plugin_instance<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>,
                                  <parameter><decl><type><name pos:line="3" pos:column="35">oconfig_item_t<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">ci<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">cdtime_t<pos:position pos:line="3" pos:column="63"/></name></type> <name pos:line="3" pos:column="64">interval<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list> <block pos:line="3" pos:column="74">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">ctail_config_match_t<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">cm<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><block pos:line="4" pos:column="29">{<expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr>}<pos:position pos:line="4" pos:column="32"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">ci<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">values_num<pos:position pos:line="7" pos:column="21"/></name></name> <operator pos:line="7" pos:column="22">!=<pos:position pos:line="7" pos:column="24"/></operator> <literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27"> <block pos:line="7" pos:column="28">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">WARNING<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><literal type="string" pos:line="8" pos:column="13">"tail plugin: Ignoring arguments for the `Match' block."<pos:position pos:line="8" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="71"/></expr_stmt>
  }<pos:position pos:line="9" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">status<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>
  <for pos:line="12" pos:column="3">for <control pos:line="12" pos:column="7">(<init><decl><type><name pos:line="12" pos:column="8">int<pos:position pos:line="12" pos:column="11"/></name></type> <name pos:line="12" pos:column="12">i<pos:position pos:line="12" pos:column="13"/></name> <init pos:line="12" pos:column="14">= <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="18"/></init> <condition><expr><name pos:line="12" pos:column="19">i<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&lt;<pos:position pos:line="12" pos:column="25"/></operator> <name><name pos:line="12" pos:column="23">ci<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">children_num<pos:position pos:line="12" pos:column="39"/></name></name></expr>;<pos:position pos:line="12" pos:column="40"/></condition> <incr><expr><name pos:line="12" pos:column="41">i<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">++<pos:position pos:line="12" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="45"/></control> <block pos:line="12" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">oconfig_item_t<pos:position pos:line="13" pos:column="19"/></name> <modifier pos:line="13" pos:column="20">*<pos:position pos:line="13" pos:column="21"/></modifier></type><name pos:line="13" pos:column="21">option<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><name><name pos:line="13" pos:column="30">ci<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">children<pos:position pos:line="13" pos:column="42"/></name></name> <operator pos:line="13" pos:column="43">+<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">i<pos:position pos:line="13" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="47"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strcasecmp<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="string" pos:line="15" pos:column="20">"Regex"<pos:position pos:line="15" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="29">option<pos:position pos:line="15" pos:column="35"/></name><operator pos:line="15" pos:column="35">-&gt;<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="37">key<pos:position pos:line="15" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call> <operator pos:line="15" pos:column="42">==<pos:position pos:line="15" pos:column="44"/></operator> <literal type="number" pos:line="15" pos:column="45">0<pos:position pos:line="15" pos:column="46"/></literal></expr>)<pos:position pos:line="15" pos:column="47"/></condition><then pos:line="15" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="7">status<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <call><name pos:line="16" pos:column="16">cf_util_get_string<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">option<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="43">&amp;<pos:position pos:line="16" pos:column="48"/></operator><name><name pos:line="16" pos:column="44">cm<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">.<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">regex<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt></block></then>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">strcasecmp<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><literal type="string" pos:line="17" pos:column="25">"ExcludeRegex"<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="41">option<pos:position pos:line="17" pos:column="47"/></name><operator pos:line="17" pos:column="47">-&gt;<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="49">key<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call> <operator pos:line="17" pos:column="54">==<pos:position pos:line="17" pos:column="56"/></operator> <literal type="number" pos:line="17" pos:column="57">0<pos:position pos:line="17" pos:column="58"/></literal></expr>)<pos:position pos:line="17" pos:column="59"/></condition><then pos:line="17" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">cf_util_get_string<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">option<pos:position pos:line="18" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="43">&amp;<pos:position pos:line="18" pos:column="48"/></operator><name><name pos:line="18" pos:column="44">cm<pos:position pos:line="18" pos:column="46"/></name><operator pos:line="18" pos:column="46">.<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">excluderegex<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="19" pos:column="5">else <if pos:line="19" pos:column="10">if <condition pos:line="19" pos:column="13">(<expr><call><name pos:line="19" pos:column="14">strcasecmp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><literal type="string" pos:line="19" pos:column="25">"DSType"<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="35">option<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">-&gt;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="43">key<pos:position pos:line="19" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="47"/></argument_list></call> <operator pos:line="19" pos:column="48">==<pos:position pos:line="19" pos:column="50"/></operator> <literal type="number" pos:line="19" pos:column="51">0<pos:position pos:line="19" pos:column="52"/></literal></expr>)<pos:position pos:line="19" pos:column="53"/></condition><then pos:line="19" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="7">status<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">=<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">ctail_config_add_match_dstype<pos:position pos:line="20" pos:column="45"/></name><argument_list pos:line="20" pos:column="45">(<argument><expr><operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="47">cm<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">option<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="21" pos:column="5">else <if pos:line="21" pos:column="10">if <condition pos:line="21" pos:column="13">(<expr><call><name pos:line="21" pos:column="14">strcasecmp<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><literal type="string" pos:line="21" pos:column="25">"Type"<pos:position pos:line="21" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="33">option<pos:position pos:line="21" pos:column="39"/></name><operator pos:line="21" pos:column="39">-&gt;<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="41">key<pos:position pos:line="21" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call> <operator pos:line="21" pos:column="46">==<pos:position pos:line="21" pos:column="48"/></operator> <literal type="number" pos:line="21" pos:column="49">0<pos:position pos:line="21" pos:column="50"/></literal></expr>)<pos:position pos:line="21" pos:column="51"/></condition><then pos:line="21" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="7">status<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">cf_util_get_string<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">option<pos:position pos:line="22" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="43">&amp;<pos:position pos:line="22" pos:column="48"/></operator><name><name pos:line="22" pos:column="44">cm<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">.<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">type<pos:position pos:line="22" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="23" pos:column="5">else <if pos:line="23" pos:column="10">if <condition pos:line="23" pos:column="13">(<expr><call><name pos:line="23" pos:column="14">strcasecmp<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><literal type="string" pos:line="23" pos:column="25">"Instance"<pos:position pos:line="23" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="37">option<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">key<pos:position pos:line="23" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="49"/></argument_list></call> <operator pos:line="23" pos:column="50">==<pos:position pos:line="23" pos:column="52"/></operator> <literal type="number" pos:line="23" pos:column="53">0<pos:position pos:line="23" pos:column="54"/></literal></expr>)<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <call><name pos:line="24" pos:column="16">cf_util_get_string<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">option<pos:position pos:line="24" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="43">&amp;<pos:position pos:line="24" pos:column="48"/></operator><name><name pos:line="24" pos:column="44">cm<pos:position pos:line="24" pos:column="46"/></name><operator pos:line="24" pos:column="46">.<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="47">type_instance<pos:position pos:line="24" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <else pos:line="25" pos:column="5">else <block pos:line="25" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">WARNING<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="string" pos:line="26" pos:column="15">"tail plugin: Option `%s' not allowed here."<pos:position pos:line="26" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="61">option<pos:position pos:line="26" pos:column="67"/></name><operator pos:line="26" pos:column="67">-&gt;<pos:position pos:line="26" pos:column="72"/></operator><name pos:line="26" pos:column="69">key<pos:position pos:line="26" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt>
      <expr_stmt><expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <operator pos:line="27" pos:column="16">-<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">1<pos:position pos:line="27" pos:column="18"/></literal></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">status<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">!=<pos:position pos:line="30" pos:column="18"/></operator> <literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr>)<pos:position pos:line="30" pos:column="21"/></condition><then pos:line="30" pos:column="21">
      <block type="pseudo"><break pos:line="31" pos:column="7">break;<pos:position pos:line="31" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></for> <comment type="block" pos:line="32" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <while pos:line="34" pos:column="3">while <condition pos:line="34" pos:column="9">(<expr><name pos:line="34" pos:column="10">status<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">==<pos:position pos:line="34" pos:column="19"/></operator> <literal type="number" pos:line="34" pos:column="20">0<pos:position pos:line="34" pos:column="21"/></literal></expr>)<pos:position pos:line="34" pos:column="22"/></condition> <block pos:line="34" pos:column="23">{
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name><name pos:line="35" pos:column="9">cm<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">regex<pos:position pos:line="35" pos:column="17"/></name></name> <operator pos:line="35" pos:column="18">==<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">NULL<pos:position pos:line="35" pos:column="25"/></name></expr>)<pos:position pos:line="35" pos:column="26"/></condition><then pos:line="35" pos:column="26"> <block pos:line="35" pos:column="27">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">WARNING<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><literal type="string" pos:line="36" pos:column="15">"tail plugin: `Regex' missing in `Match' block."<pos:position pos:line="36" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="37" pos:column="7">status<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <operator pos:line="37" pos:column="16">-<pos:position pos:line="37" pos:column="17"/></operator><literal type="number" pos:line="37" pos:column="17">1<pos:position pos:line="37" pos:column="18"/></literal></expr>;<pos:position pos:line="37" pos:column="19"/></expr_stmt>
      <break pos:line="38" pos:column="7">break;<pos:position pos:line="38" pos:column="13"/></break>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name><name pos:line="41" pos:column="9">cm<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">.<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="12">type<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">==<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">NULL<pos:position pos:line="41" pos:column="24"/></name></expr>)<pos:position pos:line="41" pos:column="25"/></condition><then pos:line="41" pos:column="25"> <block pos:line="41" pos:column="26">{
      <expr_stmt><expr><call><name pos:line="42" pos:column="7">WARNING<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"tail plugin: `Type' missing in `Match' block."<pos:position pos:line="42" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">status<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">=<pos:position pos:line="43" pos:column="15"/></operator> <operator pos:line="43" pos:column="16">-<pos:position pos:line="43" pos:column="17"/></operator><literal type="number" pos:line="43" pos:column="17">1<pos:position pos:line="43" pos:column="18"/></literal></expr>;<pos:position pos:line="43" pos:column="19"/></expr_stmt>
      <break pos:line="44" pos:column="7">break;<pos:position pos:line="44" pos:column="13"/></break>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">cm<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">.<pos:position pos:line="47" pos:column="12"/></operator><name pos:line="47" pos:column="12">flags<pos:position pos:line="47" pos:column="17"/></name></name> <operator pos:line="47" pos:column="18">==<pos:position pos:line="47" pos:column="20"/></operator> <literal type="number" pos:line="47" pos:column="21">0<pos:position pos:line="47" pos:column="22"/></literal></expr>)<pos:position pos:line="47" pos:column="23"/></condition><then pos:line="47" pos:column="23"> <block pos:line="47" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">WARNING<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><literal type="string" pos:line="48" pos:column="15">"tail plugin: `DSType' missing in `Match' block."<pos:position pos:line="48" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><name pos:line="49" pos:column="7">status<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">=<pos:position pos:line="49" pos:column="15"/></operator> <operator pos:line="49" pos:column="16">-<pos:position pos:line="49" pos:column="17"/></operator><literal type="number" pos:line="49" pos:column="17">1<pos:position pos:line="49" pos:column="18"/></literal></expr>;<pos:position pos:line="49" pos:column="19"/></expr_stmt>
      <break pos:line="50" pos:column="7">break;<pos:position pos:line="50" pos:column="13"/></break>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <break pos:line="53" pos:column="5">break;<pos:position pos:line="53" pos:column="11"/></break>
  }<pos:position pos:line="54" pos:column="4"/></block></while> <comment type="block" pos:line="54" pos:column="5">/* while (status == 0) */</comment>

  <if pos:line="56" pos:column="3">if <condition pos:line="56" pos:column="6">(<expr><name pos:line="56" pos:column="7">status<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">==<pos:position pos:line="56" pos:column="16"/></operator> <literal type="number" pos:line="56" pos:column="17">0<pos:position pos:line="56" pos:column="18"/></literal></expr>)<pos:position pos:line="56" pos:column="19"/></condition><then pos:line="56" pos:column="19"> <block pos:line="56" pos:column="20">{
    <expr_stmt><expr><name pos:line="57" pos:column="5">status<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">tail_match_add_match_simple<pos:position pos:line="57" pos:column="41"/></name><argument_list pos:line="57" pos:column="41">(<argument><expr><name pos:line="57" pos:column="42">tm<pos:position pos:line="57" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="46">cm<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">.<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">regex<pos:position pos:line="57" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="56">cm<pos:position pos:line="57" pos:column="58"/></name><operator pos:line="57" pos:column="58">.<pos:position pos:line="57" pos:column="59"/></operator><name pos:line="57" pos:column="59">excluderegex<pos:position pos:line="57" pos:column="71"/></name></name></expr></argument>,
                                         <argument><expr><name><name pos:line="58" pos:column="42">cm<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">.<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="45">flags<pos:position pos:line="58" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="52">"tail"<pos:position pos:line="58" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="60">plugin_instance<pos:position pos:line="58" pos:column="75"/></name></expr></argument>,
                                         <argument><expr><name><name pos:line="59" pos:column="42">cm<pos:position pos:line="59" pos:column="44"/></name><operator pos:line="59" pos:column="44">.<pos:position pos:line="59" pos:column="45"/></operator><name pos:line="59" pos:column="45">type<pos:position pos:line="59" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="51">cm<pos:position pos:line="59" pos:column="53"/></name><operator pos:line="59" pos:column="53">.<pos:position pos:line="59" pos:column="54"/></operator><name pos:line="59" pos:column="54">type_instance<pos:position pos:line="59" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="69">interval<pos:position pos:line="59" pos:column="77"/></name></expr></argument>)<pos:position pos:line="59" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="79"/></expr_stmt>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">status<pos:position pos:line="61" pos:column="15"/></name> <operator pos:line="61" pos:column="16">!=<pos:position pos:line="61" pos:column="18"/></operator> <literal type="number" pos:line="61" pos:column="19">0<pos:position pos:line="61" pos:column="20"/></literal></expr>)<pos:position pos:line="61" pos:column="21"/></condition><then pos:line="61" pos:column="21"> <block pos:line="61" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">ERROR<pos:position pos:line="62" pos:column="12"/></name><argument_list pos:line="62" pos:column="12">(<argument><expr><literal type="string" pos:line="62" pos:column="13">"tail plugin: tail_match_add_match_simple failed."<pos:position pos:line="62" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then></if>
  }<pos:position pos:line="64" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="66" pos:column="3">sfree<pos:position pos:line="66" pos:column="8"/></name><argument_list pos:line="66" pos:column="8">(<argument><expr><name><name pos:line="66" pos:column="9">cm<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">.<pos:position pos:line="66" pos:column="12"/></operator><name pos:line="66" pos:column="12">regex<pos:position pos:line="66" pos:column="17"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="67" pos:column="3">sfree<pos:position pos:line="67" pos:column="8"/></name><argument_list pos:line="67" pos:column="8">(<argument><expr><name><name pos:line="67" pos:column="9">cm<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">.<pos:position pos:line="67" pos:column="12"/></operator><name pos:line="67" pos:column="12">excluderegex<pos:position pos:line="67" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="68" pos:column="3">sfree<pos:position pos:line="68" pos:column="8"/></name><argument_list pos:line="68" pos:column="8">(<argument><expr><name><name pos:line="68" pos:column="9">cm<pos:position pos:line="68" pos:column="11"/></name><operator pos:line="68" pos:column="11">.<pos:position pos:line="68" pos:column="12"/></operator><name pos:line="68" pos:column="12">type<pos:position pos:line="68" pos:column="16"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="69" pos:column="3">sfree<pos:position pos:line="69" pos:column="8"/></name><argument_list pos:line="69" pos:column="8">(<argument><expr><name><name pos:line="69" pos:column="9">cm<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">.<pos:position pos:line="69" pos:column="12"/></operator><name pos:line="69" pos:column="12">type_instance<pos:position pos:line="69" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="27"/></expr_stmt>

  <return pos:line="71" pos:column="3">return <expr><operator pos:line="71" pos:column="10">(<pos:position pos:line="71" pos:column="11"/></operator><name pos:line="71" pos:column="11">status<pos:position pos:line="71" pos:column="17"/></name><operator pos:line="71" pos:column="17">)<pos:position pos:line="71" pos:column="18"/></operator></expr>;<pos:position pos:line="71" pos:column="19"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

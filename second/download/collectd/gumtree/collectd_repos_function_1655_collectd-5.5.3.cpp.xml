<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1655_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ntpd_read<pos:position pos:line="1" pos:column="21"/></name> <parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">info_kernel<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="29">ik<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type>                 <name pos:line="4" pos:column="29">ik_num<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>                 <name pos:line="5" pos:column="29">ik_size<pos:position pos:line="5" pos:column="36"/></name></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">info_peer_summary<pos:position pos:line="7" pos:column="33"/></name></name> <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier></type><name pos:line="7" pos:column="35">ps<pos:position pos:line="7" pos:column="37"/></name></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type>                       <name pos:line="8" pos:column="35">ps_num<pos:position pos:line="8" pos:column="41"/></name></decl>;<pos:position pos:line="8" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>                       <name pos:line="9" pos:column="35">ps_size<pos:position pos:line="9" pos:column="42"/></name></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="11" pos:column="9">gauge_t<pos:position pos:line="11" pos:column="16"/></name></type> <name pos:line="11" pos:column="17">offset_loop<pos:position pos:line="11" pos:column="28"/></name></decl>;<pos:position pos:line="11" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">gauge_t<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">freq_loop<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="13" pos:column="9">gauge_t<pos:position pos:line="13" pos:column="16"/></name></type> <name pos:line="13" pos:column="17">offset_error<pos:position pos:line="13" pos:column="29"/></name></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">status<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>

	<comment type="block" pos:line="18" pos:column="9">/* On Linux, if the STA_NANO bit is set in ik-&gt;status, then ik-&gt;offset
	 * is is nanoseconds, otherwise it's microseconds.
	 * TODO(octo): STA_NANO is defined in the Linux specific &lt;sys/timex.h&gt; header. */</comment>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">double<pos:position pos:line="21" pos:column="15"/></name></type> <name pos:line="21" pos:column="16">scale_loop<pos:position pos:line="21" pos:column="26"/></name>  <init pos:line="21" pos:column="28">= <expr><literal type="number" pos:line="21" pos:column="30">1e-6<pos:position pos:line="21" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">double<pos:position pos:line="22" pos:column="15"/></name></type> <name pos:line="22" pos:column="16">scale_error<pos:position pos:line="22" pos:column="27"/></name> <init pos:line="22" pos:column="28">= <expr><literal type="number" pos:line="22" pos:column="30">1e-6<pos:position pos:line="22" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>

	<expr_stmt><expr><name pos:line="24" pos:column="9">ik<pos:position pos:line="24" pos:column="11"/></name>      <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">NULL<pos:position pos:line="24" pos:column="23"/></name></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
	<expr_stmt><expr><name pos:line="25" pos:column="9">ik_num<pos:position pos:line="25" pos:column="15"/></name>  <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <literal type="number" pos:line="25" pos:column="19">0<pos:position pos:line="25" pos:column="20"/></literal></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
	<expr_stmt><expr><name pos:line="26" pos:column="9">ik_size<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="19">0<pos:position pos:line="26" pos:column="20"/></literal></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><name pos:line="28" pos:column="9">status<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">ntpd_do_query<pos:position pos:line="28" pos:column="31"/></name> <argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">REQ_GET_KERNEL<pos:position pos:line="28" pos:column="47"/></name></expr></argument>,
			<argument><expr><literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="28">0<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">NULL<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <comment type="block" pos:line="29" pos:column="37">/* request data */</comment>
			<argument><expr><operator pos:line="30" pos:column="25">&amp;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="26">ik_num<pos:position pos:line="30" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="34">&amp;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="35">ik_size<pos:position pos:line="30" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="44">(<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="45">char<pos:position pos:line="30" pos:column="49"/></name> <operator pos:line="30" pos:column="50">*<pos:position pos:line="30" pos:column="51"/></operator><operator pos:line="30" pos:column="51">*<pos:position pos:line="30" pos:column="52"/></operator><operator pos:line="30" pos:column="52">)<pos:position pos:line="30" pos:column="53"/></operator> <operator pos:line="30" pos:column="54">(<pos:position pos:line="30" pos:column="55"/></operator><operator pos:line="30" pos:column="55">(<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="56">void<pos:position pos:line="30" pos:column="60"/></name> <operator pos:line="30" pos:column="61">*<pos:position pos:line="30" pos:column="62"/></operator><operator pos:line="30" pos:column="62">)<pos:position pos:line="30" pos:column="63"/></operator> <operator pos:line="30" pos:column="64">&amp;<pos:position pos:line="30" pos:column="69"/></operator><name pos:line="30" pos:column="65">ik<pos:position pos:line="30" pos:column="67"/></name><operator pos:line="30" pos:column="67">)<pos:position pos:line="30" pos:column="68"/></operator></expr></argument>, <comment type="block" pos:line="30" pos:column="70">/* response data */</comment>
			<argument><expr><sizeof pos:line="31" pos:column="25">sizeof <argument_list pos:line="31" pos:column="32">(<argument><expr pos:line="31" pos:column="33">struct <name pos:line="31" pos:column="40">info_kernel<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="54"/></expr_stmt>
	<if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">status<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">!=<pos:position pos:line="32" pos:column="22"/></operator> <literal type="number" pos:line="32" pos:column="23">0<pos:position pos:line="32" pos:column="24"/></literal></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25">
	<block pos:line="33" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">ERROR<pos:position pos:line="34" pos:column="22"/></name> <argument_list pos:line="34" pos:column="23">(<argument><expr><literal type="string" pos:line="34" pos:column="24">"ntpd plugin: ntpd_do_query (REQ_GET_KERNEL) failed with status %i"<pos:position pos:line="34" pos:column="91"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="93">status<pos:position pos:line="34" pos:column="99"/></name></expr></argument>)<pos:position pos:line="34" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="101"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">status<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">)<pos:position pos:line="35" pos:column="32"/></operator></expr>;<pos:position pos:line="35" pos:column="33"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then>
	<elseif pos:line="37" pos:column="9">else <if pos:line="37" pos:column="14">if <condition pos:line="37" pos:column="17">(<expr><operator pos:line="37" pos:column="18">(<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">ik<pos:position pos:line="37" pos:column="21"/></name> <operator pos:line="37" pos:column="22">==<pos:position pos:line="37" pos:column="24"/></operator> <name pos:line="37" pos:column="25">NULL<pos:position pos:line="37" pos:column="29"/></name><operator pos:line="37" pos:column="29">)<pos:position pos:line="37" pos:column="30"/></operator> <operator pos:line="37" pos:column="31">||<pos:position pos:line="37" pos:column="33"/></operator> <operator pos:line="37" pos:column="34">(<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">ik_num<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">==<pos:position pos:line="37" pos:column="44"/></operator> <literal type="number" pos:line="37" pos:column="45">0<pos:position pos:line="37" pos:column="46"/></literal><operator pos:line="37" pos:column="46">)<pos:position pos:line="37" pos:column="47"/></operator> <operator pos:line="37" pos:column="48">||<pos:position pos:line="37" pos:column="50"/></operator> <operator pos:line="37" pos:column="51">(<pos:position pos:line="37" pos:column="52"/></operator><name pos:line="37" pos:column="52">ik_size<pos:position pos:line="37" pos:column="59"/></name> <operator pos:line="37" pos:column="60">==<pos:position pos:line="37" pos:column="62"/></operator> <literal type="number" pos:line="37" pos:column="63">0<pos:position pos:line="37" pos:column="64"/></literal><operator pos:line="37" pos:column="64">)<pos:position pos:line="37" pos:column="65"/></operator></expr>)<pos:position pos:line="37" pos:column="66"/></condition><then pos:line="37" pos:column="66">
	<block pos:line="38" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">ERROR<pos:position pos:line="39" pos:column="22"/></name> <argument_list pos:line="39" pos:column="23">(<argument><expr><literal type="string" pos:line="39" pos:column="24">"ntpd plugin: ntpd_do_query returned unexpected data. "<pos:position pos:line="39" pos:column="79"/></literal>
				<literal type="string" pos:line="40" pos:column="33">"(ik = %p; ik_num = %i; ik_size = %i)"<pos:position pos:line="40" pos:column="71"/></literal></expr></argument>,
				<argument><expr><operator pos:line="41" pos:column="33">(<pos:position pos:line="41" pos:column="34"/></operator><name pos:line="41" pos:column="34">void<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">*<pos:position pos:line="41" pos:column="40"/></operator><operator pos:line="41" pos:column="40">)<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">ik<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">ik_num<pos:position pos:line="41" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">ik_size<pos:position pos:line="41" pos:column="61"/></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="63"/></expr_stmt>
		<return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">(<pos:position pos:line="42" pos:column="25"/></operator><operator pos:line="42" pos:column="25">-<pos:position pos:line="42" pos:column="26"/></operator><literal type="number" pos:line="42" pos:column="26">1<pos:position pos:line="42" pos:column="27"/></literal><operator pos:line="42" pos:column="27">)<pos:position pos:line="42" pos:column="28"/></operator></expr>;<pos:position pos:line="42" pos:column="29"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif></if>

	<comment type="block" pos:line="45" pos:column="9">/* kerninfo -&gt; estimated error */</comment>
	<expr_stmt><expr><name pos:line="46" pos:column="9">offset_loop<pos:position pos:line="46" pos:column="20"/></name>  <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">scale_loop<pos:position pos:line="46" pos:column="34"/></name> <operator pos:line="46" pos:column="35">*<pos:position pos:line="46" pos:column="36"/></operator> <operator pos:line="46" pos:column="37">(<pos:position pos:line="46" pos:column="38"/></operator><operator pos:line="46" pos:column="38">(<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="39">gauge_t<pos:position pos:line="46" pos:column="46"/></name><operator pos:line="46" pos:column="46">)<pos:position pos:line="46" pos:column="47"/></operator> <call><name pos:line="46" pos:column="48">ntohl<pos:position pos:line="46" pos:column="53"/></name> <argument_list pos:line="46" pos:column="54">(<argument><expr><name><name pos:line="46" pos:column="55">ik<pos:position pos:line="46" pos:column="57"/></name><operator pos:line="46" pos:column="57">-&gt;<pos:position pos:line="46" pos:column="62"/></operator><name pos:line="46" pos:column="59">offset<pos:position pos:line="46" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="66"/></argument_list></call><operator pos:line="46" pos:column="66">)<pos:position pos:line="46" pos:column="67"/></operator></expr>;<pos:position pos:line="46" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name pos:line="47" pos:column="9">freq_loop<pos:position pos:line="47" pos:column="18"/></name>    <operator pos:line="47" pos:column="22">=<pos:position pos:line="47" pos:column="23"/></operator> <call><name pos:line="47" pos:column="24">ntpd_read_fp<pos:position pos:line="47" pos:column="36"/></name> <argument_list pos:line="47" pos:column="37">(<argument><expr><name><name pos:line="47" pos:column="38">ik<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">freq<pos:position pos:line="47" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">offset_error<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">scale_error<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">*<pos:position pos:line="48" pos:column="37"/></operator> <operator pos:line="48" pos:column="38">(<pos:position pos:line="48" pos:column="39"/></operator><operator pos:line="48" pos:column="39">(<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="40">gauge_t<pos:position pos:line="48" pos:column="47"/></name><operator pos:line="48" pos:column="47">)<pos:position pos:line="48" pos:column="48"/></operator> <call><name pos:line="48" pos:column="49">ntohl<pos:position pos:line="48" pos:column="54"/></name> <argument_list pos:line="48" pos:column="55">(<argument><expr><name><name pos:line="48" pos:column="56">ik<pos:position pos:line="48" pos:column="58"/></name><operator pos:line="48" pos:column="58">-&gt;<pos:position pos:line="48" pos:column="63"/></operator><name pos:line="48" pos:column="60">esterror<pos:position pos:line="48" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="69"/></argument_list></call><operator pos:line="48" pos:column="69">)<pos:position pos:line="48" pos:column="70"/></operator></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="50" pos:column="9">DEBUG<pos:position pos:line="50" pos:column="14"/></name> <argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="string" pos:line="50" pos:column="16">"info_kernel:\n"<pos:position pos:line="50" pos:column="32"/></literal>
			<literal type="string" pos:line="51" pos:column="25">"  pll offset    = %.8g\n"<pos:position pos:line="51" pos:column="51"/></literal>
			<literal type="string" pos:line="52" pos:column="25">"  pll frequency = %.8g\n"<pos:position pos:line="52" pos:column="51"/></literal> <comment type="block" pos:line="52" pos:column="52">/* drift compensation */</comment>
			<literal type="string" pos:line="53" pos:column="25">"  est error     = %.8g\n"<pos:position pos:line="53" pos:column="51"/></literal></expr></argument>,
			<argument><expr><name pos:line="54" pos:column="25">offset_loop<pos:position pos:line="54" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="38">freq_loop<pos:position pos:line="54" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="49">offset_error<pos:position pos:line="54" pos:column="61"/></name></expr></argument>)<pos:position pos:line="54" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="63"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="56" pos:column="9">ntpd_submit<pos:position pos:line="56" pos:column="20"/></name> <argument_list pos:line="56" pos:column="21">(<argument><expr><literal type="string" pos:line="56" pos:column="22">"frequency_offset"<pos:position pos:line="56" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="42">"loop"<pos:position pos:line="56" pos:column="48"/></literal></expr></argument>,  <argument><expr><name pos:line="56" pos:column="51">freq_loop<pos:position pos:line="56" pos:column="60"/></name></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="62"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="57" pos:column="9">ntpd_submit<pos:position pos:line="57" pos:column="20"/></name> <argument_list pos:line="57" pos:column="21">(<argument><expr><literal type="string" pos:line="57" pos:column="22">"time_offset"<pos:position pos:line="57" pos:column="35"/></literal></expr></argument>,      <argument><expr><literal type="string" pos:line="57" pos:column="42">"loop"<pos:position pos:line="57" pos:column="48"/></literal></expr></argument>,  <argument><expr><name pos:line="57" pos:column="51">offset_loop<pos:position pos:line="57" pos:column="62"/></name></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="58" pos:column="9">ntpd_submit<pos:position pos:line="58" pos:column="20"/></name> <argument_list pos:line="58" pos:column="21">(<argument><expr><literal type="string" pos:line="58" pos:column="22">"time_offset"<pos:position pos:line="58" pos:column="35"/></literal></expr></argument>,      <argument><expr><literal type="string" pos:line="58" pos:column="42">"error"<pos:position pos:line="58" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="51">offset_error<pos:position pos:line="58" pos:column="63"/></name></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="60" pos:column="9">free<pos:position pos:line="60" pos:column="13"/></name> <argument_list pos:line="60" pos:column="14">(<argument><expr><name pos:line="60" pos:column="15">ik<pos:position pos:line="60" pos:column="17"/></name></expr></argument>)<pos:position pos:line="60" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="61" pos:column="9">ik<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <name pos:line="61" pos:column="14">NULL<pos:position pos:line="61" pos:column="18"/></name></expr>;<pos:position pos:line="61" pos:column="19"/></expr_stmt>

	<expr_stmt><expr><name pos:line="63" pos:column="9">status<pos:position pos:line="63" pos:column="15"/></name> <operator pos:line="63" pos:column="16">=<pos:position pos:line="63" pos:column="17"/></operator> <call><name pos:line="63" pos:column="18">ntpd_do_query<pos:position pos:line="63" pos:column="31"/></name> <argument_list pos:line="63" pos:column="32">(<argument><expr><name pos:line="63" pos:column="33">REQ_PEER_LIST_SUM<pos:position pos:line="63" pos:column="50"/></name></expr></argument>,
			<argument><expr><literal type="number" pos:line="64" pos:column="25">0<pos:position pos:line="64" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="28">0<pos:position pos:line="64" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="31">NULL<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <comment type="block" pos:line="64" pos:column="37">/* request data */</comment>
			<argument><expr><operator pos:line="65" pos:column="25">&amp;<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="26">ps_num<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="34">&amp;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="35">ps_size<pos:position pos:line="65" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="44">(<pos:position pos:line="65" pos:column="45"/></operator><name pos:line="65" pos:column="45">char<pos:position pos:line="65" pos:column="49"/></name> <operator pos:line="65" pos:column="50">*<pos:position pos:line="65" pos:column="51"/></operator><operator pos:line="65" pos:column="51">*<pos:position pos:line="65" pos:column="52"/></operator><operator pos:line="65" pos:column="52">)<pos:position pos:line="65" pos:column="53"/></operator> <operator pos:line="65" pos:column="54">(<pos:position pos:line="65" pos:column="55"/></operator><operator pos:line="65" pos:column="55">(<pos:position pos:line="65" pos:column="56"/></operator><name pos:line="65" pos:column="56">void<pos:position pos:line="65" pos:column="60"/></name> <operator pos:line="65" pos:column="61">*<pos:position pos:line="65" pos:column="62"/></operator><operator pos:line="65" pos:column="62">)<pos:position pos:line="65" pos:column="63"/></operator> <operator pos:line="65" pos:column="64">&amp;<pos:position pos:line="65" pos:column="69"/></operator><name pos:line="65" pos:column="65">ps<pos:position pos:line="65" pos:column="67"/></name><operator pos:line="65" pos:column="67">)<pos:position pos:line="65" pos:column="68"/></operator></expr></argument>, <comment type="block" pos:line="65" pos:column="70">/* response data */</comment>
			<argument><expr><sizeof pos:line="66" pos:column="25">sizeof <argument_list pos:line="66" pos:column="32">(<argument><expr pos:line="66" pos:column="33">struct <name pos:line="66" pos:column="40">info_peer_summary<pos:position pos:line="66" pos:column="57"/></name></expr></argument>)<pos:position pos:line="66" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="66" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="60"/></expr_stmt>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">status<pos:position pos:line="67" pos:column="19"/></name> <operator pos:line="67" pos:column="20">!=<pos:position pos:line="67" pos:column="22"/></operator> <literal type="number" pos:line="67" pos:column="23">0<pos:position pos:line="67" pos:column="24"/></literal></expr>)<pos:position pos:line="67" pos:column="25"/></condition><then pos:line="67" pos:column="25">
	<block pos:line="68" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="69" pos:column="17">ERROR<pos:position pos:line="69" pos:column="22"/></name> <argument_list pos:line="69" pos:column="23">(<argument><expr><literal type="string" pos:line="69" pos:column="24">"ntpd plugin: ntpd_do_query (REQ_PEER_LIST_SUM) failed with status %i"<pos:position pos:line="69" pos:column="94"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="96">status<pos:position pos:line="69" pos:column="102"/></name></expr></argument>)<pos:position pos:line="69" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="104"/></expr_stmt>
		<return pos:line="70" pos:column="17">return <expr><operator pos:line="70" pos:column="24">(<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="25">status<pos:position pos:line="70" pos:column="31"/></name><operator pos:line="70" pos:column="31">)<pos:position pos:line="70" pos:column="32"/></operator></expr>;<pos:position pos:line="70" pos:column="33"/></return>
	}<pos:position pos:line="71" pos:column="10"/></block></then>
	<elseif pos:line="72" pos:column="9">else <if pos:line="72" pos:column="14">if <condition pos:line="72" pos:column="17">(<expr><operator pos:line="72" pos:column="18">(<pos:position pos:line="72" pos:column="19"/></operator><name pos:line="72" pos:column="19">ps<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">==<pos:position pos:line="72" pos:column="24"/></operator> <name pos:line="72" pos:column="25">NULL<pos:position pos:line="72" pos:column="29"/></name><operator pos:line="72" pos:column="29">)<pos:position pos:line="72" pos:column="30"/></operator> <operator pos:line="72" pos:column="31">||<pos:position pos:line="72" pos:column="33"/></operator> <operator pos:line="72" pos:column="34">(<pos:position pos:line="72" pos:column="35"/></operator><name pos:line="72" pos:column="35">ps_num<pos:position pos:line="72" pos:column="41"/></name> <operator pos:line="72" pos:column="42">==<pos:position pos:line="72" pos:column="44"/></operator> <literal type="number" pos:line="72" pos:column="45">0<pos:position pos:line="72" pos:column="46"/></literal><operator pos:line="72" pos:column="46">)<pos:position pos:line="72" pos:column="47"/></operator> <operator pos:line="72" pos:column="48">||<pos:position pos:line="72" pos:column="50"/></operator> <operator pos:line="72" pos:column="51">(<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="52">ps_size<pos:position pos:line="72" pos:column="59"/></name> <operator pos:line="72" pos:column="60">==<pos:position pos:line="72" pos:column="62"/></operator> <literal type="number" pos:line="72" pos:column="63">0<pos:position pos:line="72" pos:column="64"/></literal><operator pos:line="72" pos:column="64">)<pos:position pos:line="72" pos:column="65"/></operator></expr>)<pos:position pos:line="72" pos:column="66"/></condition><then pos:line="72" pos:column="66">
	<block pos:line="73" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="74" pos:column="17">ERROR<pos:position pos:line="74" pos:column="22"/></name> <argument_list pos:line="74" pos:column="23">(<argument><expr><literal type="string" pos:line="74" pos:column="24">"ntpd plugin: ntpd_do_query returned unexpected data. "<pos:position pos:line="74" pos:column="79"/></literal>
				<literal type="string" pos:line="75" pos:column="33">"(ps = %p; ps_num = %i; ps_size = %i)"<pos:position pos:line="75" pos:column="71"/></literal></expr></argument>,
				<argument><expr><operator pos:line="76" pos:column="33">(<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="34">void<pos:position pos:line="76" pos:column="38"/></name> <operator pos:line="76" pos:column="39">*<pos:position pos:line="76" pos:column="40"/></operator><operator pos:line="76" pos:column="40">)<pos:position pos:line="76" pos:column="41"/></operator> <name pos:line="76" pos:column="42">ps<pos:position pos:line="76" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="46">ps_num<pos:position pos:line="76" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="54">ps_size<pos:position pos:line="76" pos:column="61"/></name></expr></argument>)<pos:position pos:line="76" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="63"/></expr_stmt>
		<return pos:line="77" pos:column="17">return <expr><operator pos:line="77" pos:column="24">(<pos:position pos:line="77" pos:column="25"/></operator><operator pos:line="77" pos:column="25">-<pos:position pos:line="77" pos:column="26"/></operator><literal type="number" pos:line="77" pos:column="26">1<pos:position pos:line="77" pos:column="27"/></literal><operator pos:line="77" pos:column="27">)<pos:position pos:line="77" pos:column="28"/></operator></expr>;<pos:position pos:line="77" pos:column="29"/></return>
	}<pos:position pos:line="78" pos:column="10"/></block></then></if></elseif></if>

	<for pos:line="80" pos:column="9">for <control pos:line="80" pos:column="13">(<init><expr><name pos:line="80" pos:column="14">i<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <literal type="number" pos:line="80" pos:column="18">0<pos:position pos:line="80" pos:column="19"/></literal></expr>;<pos:position pos:line="80" pos:column="20"/></init> <condition><expr><name pos:line="80" pos:column="21">i<pos:position pos:line="80" pos:column="22"/></name> <operator pos:line="80" pos:column="23">&lt;<pos:position pos:line="80" pos:column="27"/></operator> <name pos:line="80" pos:column="25">ps_num<pos:position pos:line="80" pos:column="31"/></name></expr>;<pos:position pos:line="80" pos:column="32"/></condition> <incr><expr><name pos:line="80" pos:column="33">i<pos:position pos:line="80" pos:column="34"/></name><operator pos:line="80" pos:column="34">++<pos:position pos:line="80" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="80" pos:column="37"/></control>
	<block pos:line="81" pos:column="9">{
		<decl_stmt><decl><type><name><name pos:line="82" pos:column="17">struct<pos:position pos:line="82" pos:column="23"/></name> <name pos:line="82" pos:column="24">info_peer_summary<pos:position pos:line="82" pos:column="41"/></name></name> <modifier pos:line="82" pos:column="42">*<pos:position pos:line="82" pos:column="43"/></modifier></type><name pos:line="82" pos:column="43">ptr<pos:position pos:line="82" pos:column="46"/></name></decl>;<pos:position pos:line="82" pos:column="47"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="83" pos:column="17">double<pos:position pos:line="83" pos:column="23"/></name></type> <name pos:line="83" pos:column="24">offset<pos:position pos:line="83" pos:column="30"/></name></decl>;<pos:position pos:line="83" pos:column="31"/></decl_stmt>

		<decl_stmt><decl><type><name pos:line="85" pos:column="17">char<pos:position pos:line="85" pos:column="21"/></name></type> <name><name pos:line="85" pos:column="22">peername<pos:position pos:line="85" pos:column="30"/></name><index pos:line="85" pos:column="30">[<expr><name pos:line="85" pos:column="31">NI_MAXHOST<pos:position pos:line="85" pos:column="41"/></name></expr>]<pos:position pos:line="85" pos:column="42"/></index></name></decl>;<pos:position pos:line="85" pos:column="43"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="86" pos:column="17">uint32_t<pos:position pos:line="86" pos:column="25"/></name></type> <name pos:line="86" pos:column="26">refclock_id<pos:position pos:line="86" pos:column="37"/></name></decl>;<pos:position pos:line="86" pos:column="38"/></decl_stmt>

		<expr_stmt><expr><name pos:line="88" pos:column="17">ptr<pos:position pos:line="88" pos:column="20"/></name> <operator pos:line="88" pos:column="21">=<pos:position pos:line="88" pos:column="22"/></operator> <name pos:line="88" pos:column="23">ps<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">+<pos:position pos:line="88" pos:column="27"/></operator> <name pos:line="88" pos:column="28">i<pos:position pos:line="88" pos:column="29"/></name></expr>;<pos:position pos:line="88" pos:column="30"/></expr_stmt>

		<expr_stmt><expr><name pos:line="90" pos:column="17">status<pos:position pos:line="90" pos:column="23"/></name> <operator pos:line="90" pos:column="24">=<pos:position pos:line="90" pos:column="25"/></operator> <call><name pos:line="90" pos:column="26">ntpd_get_name<pos:position pos:line="90" pos:column="39"/></name> <argument_list pos:line="90" pos:column="40">(<argument><expr><name pos:line="90" pos:column="41">peername<pos:position pos:line="90" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="90" pos:column="51">sizeof <argument_list pos:line="90" pos:column="58">(<argument><expr><name pos:line="90" pos:column="59">peername<pos:position pos:line="90" pos:column="67"/></name></expr></argument>)<pos:position pos:line="90" pos:column="68"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="90" pos:column="70">ptr<pos:position pos:line="90" pos:column="73"/></name></expr></argument>)<pos:position pos:line="90" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="75"/></expr_stmt>
		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name pos:line="91" pos:column="21">status<pos:position pos:line="91" pos:column="27"/></name> <operator pos:line="91" pos:column="28">!=<pos:position pos:line="91" pos:column="30"/></operator> <literal type="number" pos:line="91" pos:column="31">0<pos:position pos:line="91" pos:column="32"/></literal></expr>)<pos:position pos:line="91" pos:column="33"/></condition><then pos:line="91" pos:column="33">
		<block pos:line="92" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="93" pos:column="25">ERROR<pos:position pos:line="93" pos:column="30"/></name> <argument_list pos:line="93" pos:column="31">(<argument><expr><literal type="string" pos:line="93" pos:column="32">"ntpd plugin: Determining name of peer failed."<pos:position pos:line="93" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="81"/></expr_stmt>
			<continue pos:line="94" pos:column="25">continue;<pos:position pos:line="94" pos:column="34"/></continue>
		}<pos:position pos:line="95" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="97" pos:column="17">refclock_id<pos:position pos:line="97" pos:column="28"/></name> <operator pos:line="97" pos:column="29">=<pos:position pos:line="97" pos:column="30"/></operator> <call><name pos:line="97" pos:column="31">ntpd_get_refclock_id<pos:position pos:line="97" pos:column="51"/></name> <argument_list pos:line="97" pos:column="52">(<argument><expr><name pos:line="97" pos:column="53">ptr<pos:position pos:line="97" pos:column="56"/></name></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="58"/></expr_stmt>

		<comment type="block" pos:line="99" pos:column="17">/* Convert the `long floating point' offset value to double */</comment>
		<expr_stmt><expr><call><name pos:line="100" pos:column="17">M_LFPTOD<pos:position pos:line="100" pos:column="25"/></name> <argument_list pos:line="100" pos:column="26">(<argument><expr><call><name pos:line="100" pos:column="27">ntohl<pos:position pos:line="100" pos:column="32"/></name> <argument_list pos:line="100" pos:column="33">(<argument><expr><name><name pos:line="100" pos:column="34">ptr<pos:position pos:line="100" pos:column="37"/></name><operator pos:line="100" pos:column="37">-&gt;<pos:position pos:line="100" pos:column="42"/></operator><name pos:line="100" pos:column="39">offset_int<pos:position pos:line="100" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="50"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="52">ntohl<pos:position pos:line="100" pos:column="57"/></name> <argument_list pos:line="100" pos:column="58">(<argument><expr><name><name pos:line="100" pos:column="59">ptr<pos:position pos:line="100" pos:column="62"/></name><operator pos:line="100" pos:column="62">-&gt;<pos:position pos:line="100" pos:column="67"/></operator><name pos:line="100" pos:column="64">offset_frc<pos:position pos:line="100" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="100" pos:column="77">offset<pos:position pos:line="100" pos:column="83"/></name></expr></argument>)<pos:position pos:line="100" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="85"/></expr_stmt>

		<expr_stmt><expr><call><name pos:line="102" pos:column="17">DEBUG<pos:position pos:line="102" pos:column="22"/></name> <argument_list pos:line="102" pos:column="23">(<argument><expr><literal type="string" pos:line="102" pos:column="24">"peer %i:\n"<pos:position pos:line="102" pos:column="36"/></literal>
				<literal type="string" pos:line="103" pos:column="33">"  peername   = %s\n"<pos:position pos:line="103" pos:column="54"/></literal>
				<literal type="string" pos:line="104" pos:column="33">"  srcadr     = 0x%08x\n"<pos:position pos:line="104" pos:column="58"/></literal>
				<literal type="string" pos:line="105" pos:column="33">"  reach      = 0%03o\n"<pos:position pos:line="105" pos:column="57"/></literal>
				<literal type="string" pos:line="106" pos:column="33">"  delay      = %f\n"<pos:position pos:line="106" pos:column="54"/></literal>
				<literal type="string" pos:line="107" pos:column="33">"  offset_int = %i\n"<pos:position pos:line="107" pos:column="54"/></literal>
				<literal type="string" pos:line="108" pos:column="33">"  offset_frc = %i\n"<pos:position pos:line="108" pos:column="54"/></literal>
				<literal type="string" pos:line="109" pos:column="33">"  offset     = %f\n"<pos:position pos:line="109" pos:column="54"/></literal>
				<literal type="string" pos:line="110" pos:column="33">"  dispersion = %f\n"<pos:position pos:line="110" pos:column="54"/></literal></expr></argument>,
				<argument><expr><name pos:line="111" pos:column="33">i<pos:position pos:line="111" pos:column="34"/></name></expr></argument>,
				<argument><expr><name pos:line="112" pos:column="33">peername<pos:position pos:line="112" pos:column="41"/></name></expr></argument>,
				<argument><expr><call><name pos:line="113" pos:column="33">ntohl<pos:position pos:line="113" pos:column="38"/></name> <argument_list pos:line="113" pos:column="39">(<argument><expr><name><name pos:line="113" pos:column="40">ptr<pos:position pos:line="113" pos:column="43"/></name><operator pos:line="113" pos:column="43">-&gt;<pos:position pos:line="113" pos:column="48"/></operator><name pos:line="113" pos:column="45">srcadr<pos:position pos:line="113" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr></argument>,
				<argument><expr><name><name pos:line="114" pos:column="33">ptr<pos:position pos:line="114" pos:column="36"/></name><operator pos:line="114" pos:column="36">-&gt;<pos:position pos:line="114" pos:column="41"/></operator><name pos:line="114" pos:column="38">reach<pos:position pos:line="114" pos:column="43"/></name></name></expr></argument>,
				<argument><expr><call><name pos:line="115" pos:column="33">ntpd_read_fp<pos:position pos:line="115" pos:column="45"/></name> <argument_list pos:line="115" pos:column="46">(<argument><expr><name><name pos:line="115" pos:column="47">ptr<pos:position pos:line="115" pos:column="50"/></name><operator pos:line="115" pos:column="50">-&gt;<pos:position pos:line="115" pos:column="55"/></operator><name pos:line="115" pos:column="52">delay<pos:position pos:line="115" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="58"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="116" pos:column="33">ntohl<pos:position pos:line="116" pos:column="38"/></name> <argument_list pos:line="116" pos:column="39">(<argument><expr><name><name pos:line="116" pos:column="40">ptr<pos:position pos:line="116" pos:column="43"/></name><operator pos:line="116" pos:column="43">-&gt;<pos:position pos:line="116" pos:column="48"/></operator><name pos:line="116" pos:column="45">offset_int<pos:position pos:line="116" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="116" pos:column="56"/></argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="117" pos:column="33">ntohl<pos:position pos:line="117" pos:column="38"/></name> <argument_list pos:line="117" pos:column="39">(<argument><expr><name><name pos:line="117" pos:column="40">ptr<pos:position pos:line="117" pos:column="43"/></name><operator pos:line="117" pos:column="43">-&gt;<pos:position pos:line="117" pos:column="48"/></operator><name pos:line="117" pos:column="45">offset_frc<pos:position pos:line="117" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="56"/></argument_list></call></expr></argument>,
				<argument><expr><name pos:line="118" pos:column="33">offset<pos:position pos:line="118" pos:column="39"/></name></expr></argument>,
				<argument><expr><call><name pos:line="119" pos:column="33">ntpd_read_fp<pos:position pos:line="119" pos:column="45"/></name> <argument_list pos:line="119" pos:column="46">(<argument><expr><name><name pos:line="119" pos:column="47">ptr<pos:position pos:line="119" pos:column="50"/></name><operator pos:line="119" pos:column="50">-&gt;<pos:position pos:line="119" pos:column="55"/></operator><name pos:line="119" pos:column="52">dispersion<pos:position pos:line="119" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="119" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="65"/></expr_stmt>

		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name pos:line="121" pos:column="21">refclock_id<pos:position pos:line="121" pos:column="32"/></name> <operator pos:line="121" pos:column="33">!=<pos:position pos:line="121" pos:column="35"/></operator> <literal type="number" pos:line="121" pos:column="36">1<pos:position pos:line="121" pos:column="37"/></literal></expr>)<pos:position pos:line="121" pos:column="38"/></condition><then pos:line="121" pos:column="38"> <comment type="block" pos:line="121" pos:column="39">/* not the system clock (offset will always be zero.. */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="25">ntpd_submit_reach<pos:position pos:line="122" pos:column="42"/></name> <argument_list pos:line="122" pos:column="43">(<argument><expr><literal type="string" pos:line="122" pos:column="44">"time_offset"<pos:position pos:line="122" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="59">peername<pos:position pos:line="122" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="69">ptr<pos:position pos:line="122" pos:column="72"/></name><operator pos:line="122" pos:column="72">-&gt;<pos:position pos:line="122" pos:column="77"/></operator><name pos:line="122" pos:column="74">reach<pos:position pos:line="122" pos:column="79"/></name></name></expr></argument>,
					<argument><expr><name pos:line="123" pos:column="41">offset<pos:position pos:line="123" pos:column="47"/></name></expr></argument>)<pos:position pos:line="123" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="49"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="124" pos:column="17">ntpd_submit_reach<pos:position pos:line="124" pos:column="34"/></name> <argument_list pos:line="124" pos:column="35">(<argument><expr><literal type="string" pos:line="124" pos:column="36">"time_dispersion"<pos:position pos:line="124" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="55">peername<pos:position pos:line="124" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="65">ptr<pos:position pos:line="124" pos:column="68"/></name><operator pos:line="124" pos:column="68">-&gt;<pos:position pos:line="124" pos:column="73"/></operator><name pos:line="124" pos:column="70">reach<pos:position pos:line="124" pos:column="75"/></name></name></expr></argument>,
				<argument><expr><call><name pos:line="125" pos:column="33">ntpd_read_fp<pos:position pos:line="125" pos:column="45"/></name> <argument_list pos:line="125" pos:column="46">(<argument><expr><name><name pos:line="125" pos:column="47">ptr<pos:position pos:line="125" pos:column="50"/></name><operator pos:line="125" pos:column="50">-&gt;<pos:position pos:line="125" pos:column="55"/></operator><name pos:line="125" pos:column="52">dispersion<pos:position pos:line="125" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="65"/></expr_stmt>
		<if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><name pos:line="126" pos:column="21">refclock_id<pos:position pos:line="126" pos:column="32"/></name> <operator pos:line="126" pos:column="33">==<pos:position pos:line="126" pos:column="35"/></operator> <literal type="number" pos:line="126" pos:column="36">0<pos:position pos:line="126" pos:column="37"/></literal></expr>)<pos:position pos:line="126" pos:column="38"/></condition><then pos:line="126" pos:column="38"> <comment type="block" pos:line="126" pos:column="39">/* not a reference clock */</comment>
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="127" pos:column="25">ntpd_submit_reach<pos:position pos:line="127" pos:column="42"/></name> <argument_list pos:line="127" pos:column="43">(<argument><expr><literal type="string" pos:line="127" pos:column="44">"delay"<pos:position pos:line="127" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="53">peername<pos:position pos:line="127" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="63">ptr<pos:position pos:line="127" pos:column="66"/></name><operator pos:line="127" pos:column="66">-&gt;<pos:position pos:line="127" pos:column="71"/></operator><name pos:line="127" pos:column="68">reach<pos:position pos:line="127" pos:column="73"/></name></name></expr></argument>,
					<argument><expr><call><name pos:line="128" pos:column="41">ntpd_read_fp<pos:position pos:line="128" pos:column="53"/></name> <argument_list pos:line="128" pos:column="54">(<argument><expr><name><name pos:line="128" pos:column="55">ptr<pos:position pos:line="128" pos:column="58"/></name><operator pos:line="128" pos:column="58">-&gt;<pos:position pos:line="128" pos:column="63"/></operator><name pos:line="128" pos:column="60">delay<pos:position pos:line="128" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="128" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="68"/></expr_stmt></block></then></if>
	}<pos:position pos:line="129" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="131" pos:column="9">free<pos:position pos:line="131" pos:column="13"/></name> <argument_list pos:line="131" pos:column="14">(<argument><expr><name pos:line="131" pos:column="15">ps<pos:position pos:line="131" pos:column="17"/></name></expr></argument>)<pos:position pos:line="131" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="132" pos:column="9">ps<pos:position pos:line="132" pos:column="11"/></name> <operator pos:line="132" pos:column="12">=<pos:position pos:line="132" pos:column="13"/></operator> <name pos:line="132" pos:column="14">NULL<pos:position pos:line="132" pos:column="18"/></name></expr>;<pos:position pos:line="132" pos:column="19"/></expr_stmt>

	<return pos:line="134" pos:column="9">return <expr><operator pos:line="134" pos:column="16">(<pos:position pos:line="134" pos:column="17"/></operator><literal type="number" pos:line="134" pos:column="17">0<pos:position pos:line="134" pos:column="18"/></literal><operator pos:line="134" pos:column="18">)<pos:position pos:line="134" pos:column="19"/></operator></expr>;<pos:position pos:line="134" pos:column="20"/></return>
}<pos:position pos:line="135" pos:column="2"/></block></function></unit>

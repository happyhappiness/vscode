<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_569_collectd-4.9.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">handle_ip<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name><name pos:line="2" pos:column="17">struct<pos:position pos:line="2" pos:column="23"/></name> <name pos:line="2" pos:column="24">ip<pos:position pos:line="2" pos:column="26"/></name></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">ip<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">len<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">PCAP_SNAPLEN<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">offset<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name><name pos:line="5" pos:column="18">ip<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">ip_hl<pos:position pos:line="5" pos:column="27"/></name></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="number" pos:line="5" pos:column="31">2<pos:position pos:line="5" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">in6_addr<pos:position pos:line="6" pos:column="20"/></name></name></type> <name pos:line="6" pos:column="21">s_addr<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">in6_addr<pos:position pos:line="7" pos:column="20"/></name></name></type> <name pos:line="7" pos:column="21">d_addr<pos:position pos:line="7" pos:column="27"/></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">ip<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">ip_v<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">6<pos:position pos:line="9" pos:column="22"/></literal></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
	<block type="pseudo"><return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><call><name pos:line="10" pos:column="17">handle_ipv6<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><operator pos:line="10" pos:column="30">(<pos:position pos:line="10" pos:column="31"/></operator>struct <name pos:line="10" pos:column="38">ip6_hdr<pos:position pos:line="10" pos:column="45"/></name> <operator pos:line="10" pos:column="46">*<pos:position pos:line="10" pos:column="47"/></operator><operator pos:line="10" pos:column="47">)<pos:position pos:line="10" pos:column="48"/></operator> <name pos:line="10" pos:column="49">ip<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">len<pos:position pos:line="10" pos:column="56"/></name></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call><operator pos:line="10" pos:column="57">)<pos:position pos:line="10" pos:column="58"/></operator></expr>;<pos:position pos:line="10" pos:column="59"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">in6_addr_from_buffer<pos:position pos:line="12" pos:column="25"/></name> <argument_list pos:line="12" pos:column="26">(<argument><expr><operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="28">s_addr<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="36">&amp;<pos:position pos:line="12" pos:column="41"/></operator><name><name pos:line="12" pos:column="37">ip<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">ip_src<pos:position pos:line="12" pos:column="47"/></name><operator pos:line="12" pos:column="47">.<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">s_addr<pos:position pos:line="12" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="56">sizeof <argument_list pos:line="12" pos:column="63">(<argument><expr><name><name pos:line="12" pos:column="64">ip<pos:position pos:line="12" pos:column="66"/></name><operator pos:line="12" pos:column="66">-&gt;<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="68">ip_src<pos:position pos:line="12" pos:column="74"/></name><operator pos:line="12" pos:column="74">.<pos:position pos:line="12" pos:column="75"/></operator><name pos:line="12" pos:column="75">s_addr<pos:position pos:line="12" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="12" pos:column="84">AF_INET<pos:position pos:line="12" pos:column="91"/></name></expr></argument>)<pos:position pos:line="12" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">in6_addr_from_buffer<pos:position pos:line="13" pos:column="25"/></name> <argument_list pos:line="13" pos:column="26">(<argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">d_addr<pos:position pos:line="13" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="36">&amp;<pos:position pos:line="13" pos:column="41"/></operator><name><name pos:line="13" pos:column="37">ip<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">ip_dst<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">.<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="48">s_addr<pos:position pos:line="13" pos:column="54"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="56">sizeof <argument_list pos:line="13" pos:column="63">(<argument><expr><name><name pos:line="13" pos:column="64">ip<pos:position pos:line="13" pos:column="66"/></name><operator pos:line="13" pos:column="66">-&gt;<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="68">ip_dst<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">.<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="75">s_addr<pos:position pos:line="13" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="82"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="84">AF_INET<pos:position pos:line="13" pos:column="91"/></name></expr></argument>)<pos:position pos:line="13" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="93"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">ignore_list_match<pos:position pos:line="14" pos:column="26"/></name> <argument_list pos:line="14" pos:column="27">(<argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">s_addr<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="37"/></condition><then pos:line="14" pos:column="37">
	    <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><operator pos:line="15" pos:column="20">(<pos:position pos:line="15" pos:column="21"/></operator><literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal><operator pos:line="15" pos:column="22">)<pos:position pos:line="15" pos:column="23"/></operator></expr>;<pos:position pos:line="15" pos:column="24"/></return></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">IPPROTO_UDP<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">!=<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="24">ip<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">ip_p<pos:position pos:line="16" pos:column="32"/></name></name></expr>)<pos:position pos:line="16" pos:column="33"/></condition><then pos:line="16" pos:column="33">
	<block type="pseudo"><return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memcpy<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">buf<pos:position pos:line="18" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="17">(<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">void<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></operator><operator pos:line="18" pos:column="24">)<pos:position pos:line="18" pos:column="25"/></operator> <name pos:line="18" pos:column="26">ip<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">+<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">offset<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">len<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">-<pos:position pos:line="18" pos:column="44"/></operator> <name pos:line="18" pos:column="45">offset<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><literal type="number" pos:line="19" pos:column="9">0<pos:position pos:line="19" pos:column="10"/></literal> <operator pos:line="19" pos:column="11">==<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">handle_udp<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator>struct <name pos:line="19" pos:column="33">udphdr<pos:position pos:line="19" pos:column="39"/></name> <operator pos:line="19" pos:column="40">*<pos:position pos:line="19" pos:column="41"/></operator><operator pos:line="19" pos:column="41">)<pos:position pos:line="19" pos:column="42"/></operator> <name pos:line="19" pos:column="43">buf<pos:position pos:line="19" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="48">len<pos:position pos:line="19" pos:column="51"/></name> <operator pos:line="19" pos:column="52">-<pos:position pos:line="19" pos:column="53"/></operator> <name pos:line="19" pos:column="54">offset<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="62"/></condition><then pos:line="19" pos:column="62">
	<block type="pseudo"><return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return></block></then></if>
    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">1<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

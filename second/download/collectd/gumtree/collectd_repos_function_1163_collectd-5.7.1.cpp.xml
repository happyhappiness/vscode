<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1163_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_submit_volume_usage_data<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">hostname<pos:position pos:line="1" pos:column="61"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="63">/* {{{ */</comment>
                                        <parameter><decl><type><name pos:line="2" pos:column="41">cfg_volume_usage_t<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">cfg_volume<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">int<pos:position pos:line="3" pos:column="44"/></name></type> <name pos:line="3" pos:column="45">interval<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="54"/></parameter_list> <block pos:line="3" pos:column="55">{
  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init><decl><type><name pos:line="4" pos:column="8">data_volume_usage_t<pos:position pos:line="4" pos:column="27"/></name> <modifier pos:line="4" pos:column="28">*<pos:position pos:line="4" pos:column="29"/></modifier></type><name pos:line="4" pos:column="29">v<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name><name pos:line="4" pos:column="33">cfg_volume<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">-&gt;<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="45">volumes<pos:position pos:line="4" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></init> <condition><expr><name pos:line="4" pos:column="54">v<pos:position pos:line="4" pos:column="55"/></name> <operator pos:line="4" pos:column="56">!=<pos:position pos:line="4" pos:column="58"/></operator> <name pos:line="4" pos:column="59">NULL<pos:position pos:line="4" pos:column="63"/></name></expr>;<pos:position pos:line="4" pos:column="64"/></condition> <incr><expr><name pos:line="4" pos:column="65">v<pos:position pos:line="4" pos:column="66"/></name> <operator pos:line="4" pos:column="67">=<pos:position pos:line="4" pos:column="68"/></operator> <name><name pos:line="4" pos:column="69">v<pos:position pos:line="4" pos:column="70"/></name><operator pos:line="4" pos:column="70">-&gt;<pos:position pos:line="4" pos:column="75"/></operator><name pos:line="4" pos:column="72">next<pos:position pos:line="4" pos:column="76"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="77"/></control> <block pos:line="4" pos:column="78">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">plugin_instance<pos:position pos:line="5" pos:column="25"/></name><index pos:line="5" pos:column="25">[<expr><name pos:line="5" pos:column="26">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="43"/></name></expr>]<pos:position pos:line="5" pos:column="44"/></index></name></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">uint64_t<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">norm_used<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name><name pos:line="7" pos:column="26">v<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">norm_used<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">uint64_t<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">norm_free<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name><name pos:line="8" pos:column="26">v<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">norm_free<pos:position pos:line="8" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">uint64_t<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">sis_saved<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name><name pos:line="9" pos:column="26">v<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">sis_saved<pos:position pos:line="9" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">uint64_t<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">compress_saved<pos:position pos:line="10" pos:column="28"/></name> <init pos:line="10" pos:column="29">= <expr><name><name pos:line="10" pos:column="31">v<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">compress_saved<pos:position pos:line="10" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">uint64_t<pos:position pos:line="11" pos:column="13"/></name></type> <name pos:line="11" pos:column="14">dedup_saved<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><name><name pos:line="11" pos:column="28">v<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">-&gt;<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="31">dedup_saved<pos:position pos:line="11" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">uint64_t<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">snap_reserve_used<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">uint64_t<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">snap_reserve_free<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><name><name pos:line="13" pos:column="34">v<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">-&gt;<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="37">snap_reserved<pos:position pos:line="13" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">uint64_t<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">snap_norm_used<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><name><name pos:line="14" pos:column="31">v<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">-&gt;<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="34">snap_used<pos:position pos:line="14" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="14" pos:column="44"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ssnprintf<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><name pos:line="16" pos:column="15">plugin_instance<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="32">sizeof<argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">plugin_instance<pos:position pos:line="16" pos:column="54"/></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="57">"volume-%s"<pos:position pos:line="16" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="70">v<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">-&gt;<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="73">name<pos:position pos:line="16" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="79"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name><name pos:line="18" pos:column="23">v<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">flags<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="18" pos:column="60"/></name> <operator pos:line="18" pos:column="61">|<pos:position pos:line="18" pos:column="62"/></operator>
                                    <name pos:line="19" pos:column="37">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="66"/></condition><then pos:line="19" pos:column="66"> <block pos:line="19" pos:column="67">{
      <if pos:line="20" pos:column="7">if <condition pos:line="20" pos:column="10">(<expr><name><name pos:line="20" pos:column="11">v<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">snap_reserved<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">&gt;<pos:position pos:line="20" pos:column="32"/></operator> <name><name pos:line="20" pos:column="30">v<pos:position pos:line="20" pos:column="31"/></name><operator pos:line="20" pos:column="31">-&gt;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="33">snap_used<pos:position pos:line="20" pos:column="42"/></name></name></expr>)<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <block pos:line="20" pos:column="44">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">snap_reserve_free<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <name><name pos:line="21" pos:column="29">v<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">-&gt;<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="32">snap_reserved<pos:position pos:line="21" pos:column="45"/></name></name> <operator pos:line="21" pos:column="46">-<pos:position pos:line="21" pos:column="47"/></operator> <name><name pos:line="21" pos:column="48">v<pos:position pos:line="21" pos:column="49"/></name><operator pos:line="21" pos:column="49">-&gt;<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="51">snap_used<pos:position pos:line="21" pos:column="60"/></name></name></expr>;<pos:position pos:line="21" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">snap_reserve_used<pos:position pos:line="22" pos:column="26"/></name> <operator pos:line="22" pos:column="27">=<pos:position pos:line="22" pos:column="28"/></operator> <name><name pos:line="22" pos:column="29">v<pos:position pos:line="22" pos:column="30"/></name><operator pos:line="22" pos:column="30">-&gt;<pos:position pos:line="22" pos:column="35"/></operator><name pos:line="22" pos:column="32">snap_used<pos:position pos:line="22" pos:column="41"/></name></name></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">snap_norm_used<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">=<pos:position pos:line="23" pos:column="25"/></operator> <literal type="number" pos:line="23" pos:column="26">0<pos:position pos:line="23" pos:column="27"/></literal></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
      }<pos:position pos:line="24" pos:column="8"/></block></then> <else pos:line="24" pos:column="9">else <block pos:line="24" pos:column="14">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">snap_reserve_free<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">=<pos:position pos:line="25" pos:column="28"/></operator> <literal type="number" pos:line="25" pos:column="29">0<pos:position pos:line="25" pos:column="30"/></literal></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">snap_reserve_used<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">=<pos:position pos:line="26" pos:column="28"/></operator> <name><name pos:line="26" pos:column="29">v<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">snap_reserved<pos:position pos:line="26" pos:column="45"/></name></name></expr>;<pos:position pos:line="26" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">snap_norm_used<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">=<pos:position pos:line="27" pos:column="25"/></operator> <name><name pos:line="27" pos:column="26">v<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="29">snap_used<pos:position pos:line="27" pos:column="38"/></name></name> <operator pos:line="27" pos:column="39">-<pos:position pos:line="27" pos:column="40"/></operator> <name><name pos:line="27" pos:column="41">v<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">-&gt;<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="44">snap_reserved<pos:position pos:line="27" pos:column="57"/></name></name></expr>;<pos:position pos:line="27" pos:column="58"/></expr_stmt>
      }<pos:position pos:line="28" pos:column="8"/></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* The space used by snapshots but not reserved for them is included in
     * both, norm_used and snap_norm_used. If possible, subtract this here. */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name><name pos:line="33" pos:column="23">v<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">flags<pos:position pos:line="33" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="33">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="33" pos:column="60"/></name> <operator pos:line="33" pos:column="61">|<pos:position pos:line="33" pos:column="62"/></operator>
                                    <name pos:line="34" pos:column="37">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="66"/></condition><then pos:line="34" pos:column="66"> <block pos:line="34" pos:column="67">{
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name pos:line="35" pos:column="11">norm_used<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">&gt;=<pos:position pos:line="35" pos:column="26"/></operator> <name pos:line="35" pos:column="24">snap_norm_used<pos:position pos:line="35" pos:column="38"/></name></expr>)<pos:position pos:line="35" pos:column="39"/></condition><then pos:line="35" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="9">norm_used<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">-=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">snap_norm_used<pos:position pos:line="36" pos:column="36"/></name></expr>;<pos:position pos:line="36" pos:column="37"/></expr_stmt></block></then>
      <else pos:line="37" pos:column="7">else <block pos:line="37" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">ERROR<pos:position pos:line="38" pos:column="14"/></name><argument_list pos:line="38" pos:column="14">(<argument><expr><literal type="string" pos:line="38" pos:column="15">"netapp plugin: (norm_used = %"<pos:position pos:line="38" pos:column="46"/></literal> <name pos:line="38" pos:column="47">PRIu64<pos:position pos:line="38" pos:column="53"/></name> <literal type="string" pos:line="38" pos:column="54">") &lt; (snap_norm_used = "<pos:position pos:line="38" pos:column="81"/></literal>
              <literal type="string" pos:line="39" pos:column="15">"%"<pos:position pos:line="39" pos:column="18"/></literal> <name pos:line="39" pos:column="19">PRIu64<pos:position pos:line="39" pos:column="25"/></name> <literal type="string" pos:line="39" pos:column="26">") for host %s. Invalidating both."<pos:position pos:line="39" pos:column="61"/></literal></expr></argument>,
              <argument><expr><name pos:line="40" pos:column="15">norm_used<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="26">snap_norm_used<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">hostname<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="41" pos:column="9">v<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">flags<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">&amp;=<pos:position pos:line="41" pos:column="24"/></operator>
            <operator pos:line="42" pos:column="13">~<pos:position pos:line="42" pos:column="14"/></operator><operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="42" pos:column="42"/></name> <operator pos:line="42" pos:column="43">|<pos:position pos:line="42" pos:column="44"/></operator> <name pos:line="42" pos:column="45">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="42" pos:column="72"/></name><operator pos:line="42" pos:column="72">)<pos:position pos:line="42" pos:column="73"/></operator></expr>;<pos:position pos:line="42" pos:column="74"/></expr_stmt>
      }<pos:position pos:line="43" pos:column="8"/></block></else></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="46" pos:column="22"/></name><argument_list pos:line="46" pos:column="22">(<argument><expr><name><name pos:line="46" pos:column="23">v<pos:position pos:line="46" pos:column="24"/></name><operator pos:line="46" pos:column="24">-&gt;<pos:position pos:line="46" pos:column="29"/></operator><name pos:line="46" pos:column="26">flags<pos:position pos:line="46" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="33">HAVE_VOLUME_USAGE_NORM_FREE<pos:position pos:line="46" pos:column="60"/></name></expr></argument>)<pos:position pos:line="46" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="62"/></condition><then pos:line="46" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="7">submit_double<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">hostname<pos:position pos:line="47" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="47" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="47" pos:column="55">plugin_instance<pos:position pos:line="47" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="48" pos:column="21">"df_complex"<pos:position pos:line="48" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="35">"free"<pos:position pos:line="48" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="48" pos:column="43">(<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">double<pos:position pos:line="48" pos:column="50"/></name><operator pos:line="48" pos:column="50">)<pos:position pos:line="48" pos:column="51"/></operator><name pos:line="48" pos:column="51">norm_free<pos:position pos:line="48" pos:column="60"/></name></expr></argument>,
                    <comment type="block" pos:line="49" pos:column="21">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="49" pos:column="39">0<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="42">interval<pos:position pos:line="49" pos:column="50"/></name></expr></argument>)<pos:position pos:line="49" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><call><name pos:line="51" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="51" pos:column="22"/></name><argument_list pos:line="51" pos:column="22">(<argument><expr><name><name pos:line="51" pos:column="23">v<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">flags<pos:position pos:line="51" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="33">HAVE_VOLUME_USAGE_SIS_SAVED<pos:position pos:line="51" pos:column="60"/></name></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="7">submit_double<pos:position pos:line="52" pos:column="20"/></name><argument_list pos:line="52" pos:column="20">(<argument><expr><name pos:line="52" pos:column="21">hostname<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="52" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="52" pos:column="55">plugin_instance<pos:position pos:line="52" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="53" pos:column="21">"df_complex"<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="35">"sis_saved"<pos:position pos:line="53" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="53" pos:column="48">(<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">double<pos:position pos:line="53" pos:column="55"/></name><operator pos:line="53" pos:column="55">)<pos:position pos:line="53" pos:column="56"/></operator><name pos:line="53" pos:column="56">sis_saved<pos:position pos:line="53" pos:column="65"/></name></expr></argument>,
                    <comment type="block" pos:line="54" pos:column="21">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="54" pos:column="39">0<pos:position pos:line="54" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="54" pos:column="42">interval<pos:position pos:line="54" pos:column="50"/></name></expr></argument>)<pos:position pos:line="54" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="52"/></expr_stmt></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><call><name pos:line="56" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="56" pos:column="22"/></name><argument_list pos:line="56" pos:column="22">(<argument><expr><name><name pos:line="56" pos:column="23">v<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">flags<pos:position pos:line="56" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="33">HAVE_VOLUME_USAGE_COMPRESS_SAVED<pos:position pos:line="56" pos:column="65"/></name></expr></argument>)<pos:position pos:line="56" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="67"/></condition><then pos:line="56" pos:column="67">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">submit_double<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">hostname<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="57" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="57" pos:column="55">plugin_instance<pos:position pos:line="57" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="58" pos:column="21">"df_complex"<pos:position pos:line="58" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="35">"compression_saved"<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="58" pos:column="56">(<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="57">double<pos:position pos:line="58" pos:column="63"/></name><operator pos:line="58" pos:column="63">)<pos:position pos:line="58" pos:column="64"/></operator><name pos:line="58" pos:column="64">compress_saved<pos:position pos:line="58" pos:column="78"/></name></expr></argument>,
                    <comment type="block" pos:line="59" pos:column="21">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="59" pos:column="39">0<pos:position pos:line="59" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">interval<pos:position pos:line="59" pos:column="50"/></name></expr></argument>)<pos:position pos:line="59" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="52"/></expr_stmt></block></then></if>

    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><call><name pos:line="61" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><name><name pos:line="61" pos:column="23">v<pos:position pos:line="61" pos:column="24"/></name><operator pos:line="61" pos:column="24">-&gt;<pos:position pos:line="61" pos:column="29"/></operator><name pos:line="61" pos:column="26">flags<pos:position pos:line="61" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="33">HAVE_VOLUME_USAGE_DEDUP_SAVED<pos:position pos:line="61" pos:column="62"/></name></expr></argument>)<pos:position pos:line="61" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="64"/></condition><then pos:line="61" pos:column="64">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="7">submit_double<pos:position pos:line="62" pos:column="20"/></name><argument_list pos:line="62" pos:column="20">(<argument><expr><name pos:line="62" pos:column="21">hostname<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="62" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="62" pos:column="55">plugin_instance<pos:position pos:line="62" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="63" pos:column="21">"df_complex"<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="35">"dedup_saved"<pos:position pos:line="63" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="63" pos:column="50">(<pos:position pos:line="63" pos:column="51"/></operator><name pos:line="63" pos:column="51">double<pos:position pos:line="63" pos:column="57"/></name><operator pos:line="63" pos:column="57">)<pos:position pos:line="63" pos:column="58"/></operator><name pos:line="63" pos:column="58">dedup_saved<pos:position pos:line="63" pos:column="69"/></name></expr></argument>,
                    <comment type="block" pos:line="64" pos:column="21">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="64" pos:column="39">0<pos:position pos:line="64" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="42">interval<pos:position pos:line="64" pos:column="50"/></name></expr></argument>)<pos:position pos:line="64" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="52"/></expr_stmt></block></then></if>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><call><name pos:line="66" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="66" pos:column="22"/></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name><name pos:line="66" pos:column="23">v<pos:position pos:line="66" pos:column="24"/></name><operator pos:line="66" pos:column="24">-&gt;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="26">flags<pos:position pos:line="66" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="33">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="66" pos:column="60"/></name></expr></argument>)<pos:position pos:line="66" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="62"/></condition><then pos:line="66" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">submit_double<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">hostname<pos:position pos:line="67" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="67" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="67" pos:column="55">plugin_instance<pos:position pos:line="67" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="68" pos:column="21">"df_complex"<pos:position pos:line="68" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="35">"used"<pos:position pos:line="68" pos:column="41"/></literal></expr></argument>, <argument><expr><operator pos:line="68" pos:column="43">(<pos:position pos:line="68" pos:column="44"/></operator><name pos:line="68" pos:column="44">double<pos:position pos:line="68" pos:column="50"/></name><operator pos:line="68" pos:column="50">)<pos:position pos:line="68" pos:column="51"/></operator><name pos:line="68" pos:column="51">norm_used<pos:position pos:line="68" pos:column="60"/></name></expr></argument>,
                    <comment type="block" pos:line="69" pos:column="21">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="69" pos:column="39">0<pos:position pos:line="69" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="42">interval<pos:position pos:line="69" pos:column="50"/></name></expr></argument>)<pos:position pos:line="69" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="52"/></expr_stmt></block></then></if>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><call><name pos:line="71" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="71" pos:column="22"/></name><argument_list pos:line="71" pos:column="22">(<argument><expr><name><name pos:line="71" pos:column="23">v<pos:position pos:line="71" pos:column="24"/></name><operator pos:line="71" pos:column="24">-&gt;<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="26">flags<pos:position pos:line="71" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="33">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="71" pos:column="60"/></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="62"/></condition><then pos:line="71" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="72" pos:column="7">submit_double<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name pos:line="72" pos:column="21">hostname<pos:position pos:line="72" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="72" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="72" pos:column="55">plugin_instance<pos:position pos:line="72" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="73" pos:column="21">"df_complex"<pos:position pos:line="73" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="35">"snap_reserved"<pos:position pos:line="73" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="73" pos:column="52">(<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="53">double<pos:position pos:line="73" pos:column="59"/></name><operator pos:line="73" pos:column="59">)<pos:position pos:line="73" pos:column="60"/></operator><name pos:line="73" pos:column="60">snap_reserve_free<pos:position pos:line="73" pos:column="77"/></name></expr></argument>,
                    <comment type="block" pos:line="74" pos:column="21">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="74" pos:column="39">0<pos:position pos:line="74" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="42">interval<pos:position pos:line="74" pos:column="50"/></name></expr></argument>)<pos:position pos:line="74" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="52"/></expr_stmt></block></then></if>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><call><name pos:line="76" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="76" pos:column="22"/></name><argument_list pos:line="76" pos:column="22">(<argument><expr><name><name pos:line="76" pos:column="23">v<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">flags<pos:position pos:line="76" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="33">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="76" pos:column="60"/></name> <operator pos:line="76" pos:column="61">|<pos:position pos:line="76" pos:column="62"/></operator>
                                    <name pos:line="77" pos:column="37">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="77" pos:column="64"/></name></expr></argument>)<pos:position pos:line="77" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="78" pos:column="7">submit_double<pos:position pos:line="78" pos:column="20"/></name><argument_list pos:line="78" pos:column="20">(<argument><expr><name pos:line="78" pos:column="21">hostname<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="78" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="78" pos:column="55">plugin_instance<pos:position pos:line="78" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="79" pos:column="21">"df_complex"<pos:position pos:line="79" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="35">"snap_reserve_used"<pos:position pos:line="79" pos:column="54"/></literal></expr></argument>,
                    <argument><expr><operator pos:line="80" pos:column="21">(<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">double<pos:position pos:line="80" pos:column="28"/></name><operator pos:line="80" pos:column="28">)<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="29">snap_reserve_used<pos:position pos:line="80" pos:column="46"/></name></expr></argument>, <comment type="block" pos:line="80" pos:column="48">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="80" pos:column="66">0<pos:position pos:line="80" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="80" pos:column="69">interval<pos:position pos:line="80" pos:column="77"/></name></expr></argument>)<pos:position pos:line="80" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="79"/></expr_stmt></block></then></if>

    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><call><name pos:line="82" pos:column="9">HAS_ALL_FLAGS<pos:position pos:line="82" pos:column="22"/></name><argument_list pos:line="82" pos:column="22">(<argument><expr><name><name pos:line="82" pos:column="23">v<pos:position pos:line="82" pos:column="24"/></name><operator pos:line="82" pos:column="24">-&gt;<pos:position pos:line="82" pos:column="29"/></operator><name pos:line="82" pos:column="26">flags<pos:position pos:line="82" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="33">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="82" pos:column="60"/></name></expr></argument>)<pos:position pos:line="82" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="82" pos:column="62"/></condition><then pos:line="82" pos:column="62">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="83" pos:column="7">submit_double<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">hostname<pos:position pos:line="83" pos:column="29"/></name></expr></argument>, <comment type="block" pos:line="83" pos:column="31">/* plugin instance = */</comment> <argument><expr><name pos:line="83" pos:column="55">plugin_instance<pos:position pos:line="83" pos:column="70"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="84" pos:column="21">"df_complex"<pos:position pos:line="84" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="84" pos:column="35">"snap_normal_used"<pos:position pos:line="84" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="84" pos:column="55">(<pos:position pos:line="84" pos:column="56"/></operator><name pos:line="84" pos:column="56">double<pos:position pos:line="84" pos:column="62"/></name><operator pos:line="84" pos:column="62">)<pos:position pos:line="84" pos:column="63"/></operator><name pos:line="84" pos:column="63">snap_norm_used<pos:position pos:line="84" pos:column="77"/></name></expr></argument>,
                    <comment type="block" pos:line="85" pos:column="21">/* timestamp = */</comment> <argument><expr><literal type="number" pos:line="85" pos:column="39">0<pos:position pos:line="85" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="42">interval<pos:position pos:line="85" pos:column="50"/></name></expr></argument>)<pos:position pos:line="85" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="52"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="87" pos:column="5">/* Clear all the HAVE_* flags */</comment>
    <expr_stmt><expr><name><name pos:line="88" pos:column="5">v<pos:position pos:line="88" pos:column="6"/></name><operator pos:line="88" pos:column="6">-&gt;<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="8">flags<pos:position pos:line="88" pos:column="13"/></name></name> <operator pos:line="88" pos:column="14">&amp;=<pos:position pos:line="88" pos:column="20"/></operator> <operator pos:line="88" pos:column="17">~<pos:position pos:line="88" pos:column="18"/></operator><name pos:line="88" pos:column="18">HAVE_VOLUME_USAGE_ALL<pos:position pos:line="88" pos:column="39"/></name></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="89" pos:column="4"/></block></for> <comment type="block" pos:line="89" pos:column="5">/* for (v = cfg_volume-&gt;volumes) */</comment>

  <return pos:line="91" pos:column="3">return <expr><operator pos:line="91" pos:column="10">(<pos:position pos:line="91" pos:column="11"/></operator><literal type="number" pos:line="91" pos:column="11">0<pos:position pos:line="91" pos:column="12"/></literal><operator pos:line="91" pos:column="12">)<pos:position pos:line="91" pos:column="13"/></operator></expr>;<pos:position pos:line="91" pos:column="14"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

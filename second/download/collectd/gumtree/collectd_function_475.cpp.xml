<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_475.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Notification_dispatch<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">Notification<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">self<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">PyObject<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">args<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                                       <parameter><decl><type><name pos:line="2" pos:column="40">PyObject<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">kwds<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list> <block pos:line="2" pos:column="56">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">ret<pos:position pos:line="3" pos:column="10"/></name></decl>;<pos:position pos:line="3" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">data_set_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ds<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">notification_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">notification<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">double<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">t<pos:position pos:line="6" pos:column="11"/></name> <init pos:line="6" pos:column="12">= <expr><name><name pos:line="6" pos:column="14">self<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">data<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">time<pos:position pos:line="6" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">PyObject<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">meta<pos:position pos:line="7" pos:column="17"/></name> <init pos:line="7" pos:column="18">= <expr><name><name pos:line="7" pos:column="20">self<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">meta<pos:position pos:line="7" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">severity<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name><name pos:line="8" pos:column="18">self<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">-&gt;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="24">severity<pos:position pos:line="8" pos:column="32"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name> <modifier pos:line="9" pos:column="8">*<pos:position pos:line="9" pos:column="9"/></modifier></type><name pos:line="9" pos:column="9">host<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">NULL<pos:position pos:line="9" pos:column="20"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="22">*<pos:position pos:line="9" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="23">plugin<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name pos:line="9" pos:column="32">NULL<pos:position pos:line="9" pos:column="36"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="39">plugin_instance<pos:position pos:line="9" pos:column="54"/></name> <init pos:line="9" pos:column="55">= <expr><name pos:line="9" pos:column="57">NULL<pos:position pos:line="9" pos:column="61"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="63">*<pos:position pos:line="9" pos:column="64"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="64">type<pos:position pos:line="9" pos:column="68"/></name> <init pos:line="9" pos:column="69">= <expr><name pos:line="9" pos:column="71">NULL<pos:position pos:line="9" pos:column="75"/></name></expr></init></decl>,
       <modifier pos:line="10" pos:column="8">*<pos:position pos:line="10" pos:column="9"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="9">type_instance<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name> <modifier pos:line="11" pos:column="8">*<pos:position pos:line="11" pos:column="9"/></modifier></type><name pos:line="11" pos:column="9">message<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

  <decl_stmt><decl><specifier pos:line="13" pos:column="3">static<pos:position pos:line="13" pos:column="9"/></specifier> <type><name pos:line="13" pos:column="10">char<pos:position pos:line="13" pos:column="14"/></name> <modifier pos:line="13" pos:column="15">*<pos:position pos:line="13" pos:column="16"/></modifier></type><name><name pos:line="13" pos:column="16">kwlist<pos:position pos:line="13" pos:column="22"/></name><index pos:line="13" pos:column="22">[]<pos:position pos:line="13" pos:column="24"/></index></name> <init pos:line="13" pos:column="25">= <expr><block pos:line="13" pos:column="27">{
      <expr><literal type="string" pos:line="14" pos:column="7">"type"<pos:position pos:line="14" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="14" pos:column="15">"message"<pos:position pos:line="14" pos:column="24"/></literal></expr>, <expr><literal type="string" pos:line="14" pos:column="26">"plugin_instance"<pos:position pos:line="14" pos:column="43"/></literal></expr>, <expr><literal type="string" pos:line="14" pos:column="45">"type_instance"<pos:position pos:line="14" pos:column="60"/></literal></expr>, <expr><literal type="string" pos:line="14" pos:column="62">"plugin"<pos:position pos:line="14" pos:column="70"/></literal></expr>,
      <expr><literal type="string" pos:line="15" pos:column="7">"host"<pos:position pos:line="15" pos:column="13"/></literal></expr>, <expr><literal type="string" pos:line="15" pos:column="15">"time"<pos:position pos:line="15" pos:column="21"/></literal></expr>,    <expr><literal type="string" pos:line="15" pos:column="26">"severity"<pos:position pos:line="15" pos:column="36"/></literal></expr>,        <expr><literal type="string" pos:line="15" pos:column="45">"meta"<pos:position pos:line="15" pos:column="51"/></literal></expr>,          <expr><name pos:line="15" pos:column="62">NULL<pos:position pos:line="15" pos:column="66"/></name></expr>}<pos:position pos:line="15" pos:column="67"/></block></expr></init></decl>;<pos:position pos:line="15" pos:column="68"/></decl_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><operator pos:line="16" pos:column="7">!<pos:position pos:line="16" pos:column="8"/></operator><call><name pos:line="16" pos:column="8">PyArg_ParseTupleAndKeywords<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><name pos:line="16" pos:column="36">args<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">kwds<pos:position pos:line="16" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="48">"|etetetetetetdiO"<pos:position pos:line="16" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="68">kwlist<pos:position pos:line="16" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="76">NULL<pos:position pos:line="16" pos:column="80"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="17" pos:column="36">&amp;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="37">type<pos:position pos:line="17" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="43">NULL<pos:position pos:line="17" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="49">&amp;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="50">message<pos:position pos:line="17" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="59">NULL<pos:position pos:line="17" pos:column="63"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="18" pos:column="36">&amp;<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="37">plugin_instance<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">NULL<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="60">&amp;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="61">type_instance<pos:position pos:line="18" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="76">NULL<pos:position pos:line="18" pos:column="80"/></name></expr></argument>,
                                   <argument><expr><operator pos:line="19" pos:column="36">&amp;<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="37">plugin<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">NULL<pos:position pos:line="19" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="51">&amp;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="52">host<pos:position pos:line="19" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="58">&amp;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="59">t<pos:position pos:line="19" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="62">&amp;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="63">severity<pos:position pos:line="19" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="73">&amp;<pos:position pos:line="19" pos:column="78"/></operator><name pos:line="19" pos:column="74">meta<pos:position pos:line="19" pos:column="78"/></name></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="80"/></condition><then pos:line="19" pos:column="80">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">NULL<pos:position pos:line="20" pos:column="16"/></name></expr>;<pos:position pos:line="20" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name><name pos:line="22" pos:column="3">notification<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">time<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">DOUBLE_TO_CDTIME_T<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">t<pos:position pos:line="22" pos:column="43"/></name></expr></argument>)<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">notification<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">severity<pos:position pos:line="23" pos:column="24"/></name></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <name pos:line="23" pos:column="27">severity<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="24" pos:column="3">sstrncpy<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name><name pos:line="24" pos:column="12">notification<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">message<pos:position pos:line="24" pos:column="32"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="24" pos:column="34">message<pos:position pos:line="24" pos:column="41"/></name></expr> ?<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <expr><name pos:line="24" pos:column="44">message<pos:position pos:line="24" pos:column="51"/></name></expr> <pos:position pos:line="24" pos:column="52"/></then><else pos:line="24" pos:column="52">: <expr><name><name pos:line="24" pos:column="54">self<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">-&gt;<pos:position pos:line="24" pos:column="63"/></operator><name pos:line="24" pos:column="60">message<pos:position pos:line="24" pos:column="67"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="25" pos:column="12">sizeof<argument_list pos:line="25" pos:column="18">(<argument><expr><name><name pos:line="25" pos:column="19">notification<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">.<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">message<pos:position pos:line="25" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="26" pos:column="3">sstrncpy<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">notification<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">host<pos:position pos:line="26" pos:column="29"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="26" pos:column="31">host<pos:position pos:line="26" pos:column="35"/></name></expr> ?<pos:position pos:line="26" pos:column="37"/></condition><then pos:line="26" pos:column="37"> <expr><name pos:line="26" pos:column="38">host<pos:position pos:line="26" pos:column="42"/></name></expr> <pos:position pos:line="26" pos:column="43"/></then><else pos:line="26" pos:column="43">: <expr><name><name pos:line="26" pos:column="45">self<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">data<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">.<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">host<pos:position pos:line="26" pos:column="60"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="27" pos:column="12">sizeof<argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">notification<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">.<pos:position pos:line="27" pos:column="32"/></operator><name pos:line="27" pos:column="32">host<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="28" pos:column="3">sstrncpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">notification<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">.<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">plugin<pos:position pos:line="28" pos:column="31"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="28" pos:column="33">plugin<pos:position pos:line="28" pos:column="39"/></name></expr> ?<pos:position pos:line="28" pos:column="41"/></condition><then pos:line="28" pos:column="41"> <expr><name pos:line="28" pos:column="42">plugin<pos:position pos:line="28" pos:column="48"/></name></expr> <pos:position pos:line="28" pos:column="49"/></then><else pos:line="28" pos:column="49">: <expr><name><name pos:line="28" pos:column="51">self<pos:position pos:line="28" pos:column="55"/></name><operator pos:line="28" pos:column="55">-&gt;<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="57">data<pos:position pos:line="28" pos:column="61"/></name><operator pos:line="28" pos:column="61">.<pos:position pos:line="28" pos:column="62"/></operator><name pos:line="28" pos:column="62">plugin<pos:position pos:line="28" pos:column="68"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="29" pos:column="12">sizeof<argument_list pos:line="29" pos:column="18">(<argument><expr><name><name pos:line="29" pos:column="19">notification<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">.<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">plugin<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">sstrncpy<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name><name pos:line="30" pos:column="12">notification<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">plugin_instance<pos:position pos:line="30" pos:column="40"/></name></name></expr></argument>,
           <argument><expr><ternary><condition><expr><name pos:line="31" pos:column="12">plugin_instance<pos:position pos:line="31" pos:column="27"/></name></expr> ?<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29"> <expr><name pos:line="31" pos:column="30">plugin_instance<pos:position pos:line="31" pos:column="45"/></name></expr> <pos:position pos:line="31" pos:column="46"/></then><else pos:line="31" pos:column="46">: <expr><name><name pos:line="31" pos:column="48">self<pos:position pos:line="31" pos:column="52"/></name><operator pos:line="31" pos:column="52">-&gt;<pos:position pos:line="31" pos:column="57"/></operator><name pos:line="31" pos:column="54">data<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">.<pos:position pos:line="31" pos:column="59"/></operator><name pos:line="31" pos:column="59">plugin_instance<pos:position pos:line="31" pos:column="74"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="32" pos:column="12">sizeof<argument_list pos:line="32" pos:column="18">(<argument><expr><name><name pos:line="32" pos:column="19">notification<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">.<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">plugin_instance<pos:position pos:line="32" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="33" pos:column="3">sstrncpy<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name><name pos:line="33" pos:column="12">notification<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">type<pos:position pos:line="33" pos:column="29"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="33" pos:column="31">type<pos:position pos:line="33" pos:column="35"/></name></expr> ?<pos:position pos:line="33" pos:column="37"/></condition><then pos:line="33" pos:column="37"> <expr><name pos:line="33" pos:column="38">type<pos:position pos:line="33" pos:column="42"/></name></expr> <pos:position pos:line="33" pos:column="43"/></then><else pos:line="33" pos:column="43">: <expr><name><name pos:line="33" pos:column="45">self<pos:position pos:line="33" pos:column="49"/></name><operator pos:line="33" pos:column="49">-&gt;<pos:position pos:line="33" pos:column="54"/></operator><name pos:line="33" pos:column="51">data<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">.<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="56">type<pos:position pos:line="33" pos:column="60"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="34" pos:column="12">sizeof<argument_list pos:line="34" pos:column="18">(<argument><expr><name><name pos:line="34" pos:column="19">notification<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">type<pos:position pos:line="34" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">sstrncpy<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><name><name pos:line="35" pos:column="12">notification<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">.<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">type_instance<pos:position pos:line="35" pos:column="38"/></name></name></expr></argument>,
           <argument><expr><ternary><condition><expr><name pos:line="36" pos:column="12">type_instance<pos:position pos:line="36" pos:column="25"/></name></expr> ?<pos:position pos:line="36" pos:column="27"/></condition><then pos:line="36" pos:column="27"> <expr><name pos:line="36" pos:column="28">type_instance<pos:position pos:line="36" pos:column="41"/></name></expr> <pos:position pos:line="36" pos:column="42"/></then><else pos:line="36" pos:column="42">: <expr><name><name pos:line="36" pos:column="44">self<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">data<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">.<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="55">type_instance<pos:position pos:line="36" pos:column="68"/></name></name></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="37" pos:column="12">sizeof<argument_list pos:line="37" pos:column="18">(<argument><expr><name><name pos:line="37" pos:column="19">notification<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">type_instance<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">notification<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">meta<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">NULL<pos:position pos:line="38" pos:column="27"/></name></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">FreeAll<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">()<pos:position pos:line="39" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="13"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="40" pos:column="3">PyMem_Free<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><name pos:line="40" pos:column="14">message<pos:position pos:line="40" pos:column="21"/></name></expr></argument>)<pos:position pos:line="40" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="23"/></expr_stmt>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name><name pos:line="42" pos:column="7">notification<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">type<pos:position pos:line="42" pos:column="24"/></name><index pos:line="42" pos:column="24">[<expr><literal type="number" pos:line="42" pos:column="25">0<pos:position pos:line="42" pos:column="26"/></literal></expr>]<pos:position pos:line="42" pos:column="27"/></index></name> <operator pos:line="42" pos:column="28">==<pos:position pos:line="42" pos:column="30"/></operator> <literal type="number" pos:line="42" pos:column="31">0<pos:position pos:line="42" pos:column="32"/></literal></expr>)<pos:position pos:line="42" pos:column="33"/></condition><then pos:line="42" pos:column="33"> <block pos:line="42" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">PyErr_SetString<pos:position pos:line="43" pos:column="20"/></name><argument_list pos:line="43" pos:column="20">(<argument><expr><name pos:line="43" pos:column="21">PyExc_RuntimeError<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="41">"type not set"<pos:position pos:line="43" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><name pos:line="44" pos:column="12">NULL<pos:position pos:line="44" pos:column="16"/></name></expr>;<pos:position pos:line="44" pos:column="17"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="46" pos:column="3">ds<pos:position pos:line="46" pos:column="5"/></name> <operator pos:line="46" pos:column="6">=<pos:position pos:line="46" pos:column="7"/></operator> <call><name pos:line="46" pos:column="8">plugin_get_ds<pos:position pos:line="46" pos:column="21"/></name><argument_list pos:line="46" pos:column="21">(<argument><expr><name><name pos:line="46" pos:column="22">notification<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">.<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">type<pos:position pos:line="46" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
  <if pos:line="47" pos:column="3">if <condition pos:line="47" pos:column="6">(<expr><name pos:line="47" pos:column="7">ds<pos:position pos:line="47" pos:column="9"/></name> <operator pos:line="47" pos:column="10">==<pos:position pos:line="47" pos:column="12"/></operator> <name pos:line="47" pos:column="13">NULL<pos:position pos:line="47" pos:column="17"/></name></expr>)<pos:position pos:line="47" pos:column="18"/></condition><then pos:line="47" pos:column="18"> <block pos:line="47" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">PyErr_Format<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><name pos:line="48" pos:column="18">PyExc_TypeError<pos:position pos:line="48" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="35">"Dataset %s not found"<pos:position pos:line="48" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="59">notification<pos:position pos:line="48" pos:column="71"/></name><operator pos:line="48" pos:column="71">.<pos:position pos:line="48" pos:column="72"/></operator><name pos:line="48" pos:column="72">type<pos:position pos:line="48" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="78"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><name pos:line="49" pos:column="12">NULL<pos:position pos:line="49" pos:column="16"/></name></expr>;<pos:position pos:line="49" pos:column="17"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></then></if>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">meta<pos:position pos:line="51" pos:column="11"/></name> <operator pos:line="51" pos:column="12">!=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">NULL<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">&amp;&amp;<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="23">meta<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">!=<pos:position pos:line="51" pos:column="30"/></operator> <name pos:line="51" pos:column="31">Py_None<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">&amp;&amp;<pos:position pos:line="51" pos:column="49"/></operator> <operator pos:line="51" pos:column="42">!<pos:position pos:line="51" pos:column="43"/></operator><call><name pos:line="51" pos:column="43">PyDict_Check<pos:position pos:line="51" pos:column="55"/></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name pos:line="51" pos:column="56">meta<pos:position pos:line="51" pos:column="60"/></name></expr></argument>)<pos:position pos:line="51" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="62"/></condition><then pos:line="51" pos:column="62"> <block pos:line="51" pos:column="63">{
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">PyErr_Format<pos:position pos:line="52" pos:column="17"/></name><argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">PyExc_TypeError<pos:position pos:line="52" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="35">"meta must be a dict"<pos:position pos:line="52" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><name pos:line="53" pos:column="12">NULL<pos:position pos:line="53" pos:column="16"/></name></expr>;<pos:position pos:line="53" pos:column="17"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">cpy_build_notification_meta<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="32">notification<pos:position pos:line="55" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="46">meta<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name><name pos:line="57" pos:column="7">notification<pos:position pos:line="57" pos:column="19"/></name><operator pos:line="57" pos:column="19">.<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="20">time<pos:position pos:line="57" pos:column="24"/></name></name> <operator pos:line="57" pos:column="25">==<pos:position pos:line="57" pos:column="27"/></operator> <literal type="number" pos:line="57" pos:column="28">0<pos:position pos:line="57" pos:column="29"/></literal></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="5">notification<pos:position pos:line="58" pos:column="17"/></name><operator pos:line="58" pos:column="17">.<pos:position pos:line="58" pos:column="18"/></operator><name pos:line="58" pos:column="18">time<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <call><name pos:line="58" pos:column="25">cdtime<pos:position pos:line="58" pos:column="31"/></name><argument_list pos:line="58" pos:column="31">()<pos:position pos:line="58" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="34"/></expr_stmt></block></then></if>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name><name pos:line="59" pos:column="7">notification<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">.<pos:position pos:line="59" pos:column="20"/></operator><name pos:line="59" pos:column="20">host<pos:position pos:line="59" pos:column="24"/></name><index pos:line="59" pos:column="24">[<expr><literal type="number" pos:line="59" pos:column="25">0<pos:position pos:line="59" pos:column="26"/></literal></expr>]<pos:position pos:line="59" pos:column="27"/></index></name> <operator pos:line="59" pos:column="28">==<pos:position pos:line="59" pos:column="30"/></operator> <literal type="number" pos:line="59" pos:column="31">0<pos:position pos:line="59" pos:column="32"/></literal></expr>)<pos:position pos:line="59" pos:column="33"/></condition><then pos:line="59" pos:column="33">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="5">sstrncpy<pos:position pos:line="60" pos:column="13"/></name><argument_list pos:line="60" pos:column="13">(<argument><expr><name><name pos:line="60" pos:column="14">notification<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">.<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">host<pos:position pos:line="60" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="33">hostname_g<pos:position pos:line="60" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="60" pos:column="45">sizeof<argument_list pos:line="60" pos:column="51">(<argument><expr><name><name pos:line="60" pos:column="52">notification<pos:position pos:line="60" pos:column="64"/></name><operator pos:line="60" pos:column="64">.<pos:position pos:line="60" pos:column="65"/></operator><name pos:line="60" pos:column="65">host<pos:position pos:line="60" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="72"/></expr_stmt></block></then></if>
  <if pos:line="61" pos:column="3">if <condition pos:line="61" pos:column="6">(<expr><name><name pos:line="61" pos:column="7">notification<pos:position pos:line="61" pos:column="19"/></name><operator pos:line="61" pos:column="19">.<pos:position pos:line="61" pos:column="20"/></operator><name pos:line="61" pos:column="20">plugin<pos:position pos:line="61" pos:column="26"/></name><index pos:line="61" pos:column="26">[<expr><literal type="number" pos:line="61" pos:column="27">0<pos:position pos:line="61" pos:column="28"/></literal></expr>]<pos:position pos:line="61" pos:column="29"/></index></name> <operator pos:line="61" pos:column="30">==<pos:position pos:line="61" pos:column="32"/></operator> <literal type="number" pos:line="61" pos:column="33">0<pos:position pos:line="61" pos:column="34"/></literal></expr>)<pos:position pos:line="61" pos:column="35"/></condition><then pos:line="61" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="5">sstrncpy<pos:position pos:line="62" pos:column="13"/></name><argument_list pos:line="62" pos:column="13">(<argument><expr><name><name pos:line="62" pos:column="14">notification<pos:position pos:line="62" pos:column="26"/></name><operator pos:line="62" pos:column="26">.<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">plugin<pos:position pos:line="62" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="35">"python"<pos:position pos:line="62" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="62" pos:column="45">sizeof<argument_list pos:line="62" pos:column="51">(<argument><expr><name><name pos:line="62" pos:column="52">notification<pos:position pos:line="62" pos:column="64"/></name><operator pos:line="62" pos:column="64">.<pos:position pos:line="62" pos:column="65"/></operator><name pos:line="62" pos:column="65">plugin<pos:position pos:line="62" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="62" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="74"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="63" pos:column="3">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="63" pos:column="25"/></name></expr>;<pos:position pos:line="63" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name pos:line="64" pos:column="3">ret<pos:position pos:line="64" pos:column="6"/></name> <operator pos:line="64" pos:column="7">=<pos:position pos:line="64" pos:column="8"/></operator> <call><name pos:line="64" pos:column="9">plugin_dispatch_notification<pos:position pos:line="64" pos:column="37"/></name><argument_list pos:line="64" pos:column="37">(<argument><expr><operator pos:line="64" pos:column="38">&amp;<pos:position pos:line="64" pos:column="43"/></operator><name pos:line="64" pos:column="39">notification<pos:position pos:line="64" pos:column="51"/></name></expr></argument>)<pos:position pos:line="64" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="53"/></expr_stmt>
  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name><name pos:line="65" pos:column="7">notification<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">.<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="20">meta<pos:position pos:line="65" pos:column="24"/></name></name></expr>)<pos:position pos:line="65" pos:column="25"/></condition><then pos:line="65" pos:column="25">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="5">plugin_notification_meta_free<pos:position pos:line="66" pos:column="34"/></name><argument_list pos:line="66" pos:column="34">(<argument><expr><name><name pos:line="66" pos:column="35">notification<pos:position pos:line="66" pos:column="47"/></name><operator pos:line="66" pos:column="47">.<pos:position pos:line="66" pos:column="48"/></operator><name pos:line="66" pos:column="48">meta<pos:position pos:line="66" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt></block></then></if>
  <expr_stmt><expr><name pos:line="67" pos:column="3">Py_END_ALLOW_THREADS<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
  <if pos:line="68" pos:column="3">if <condition pos:line="68" pos:column="6">(<expr><name pos:line="68" pos:column="7">ret<pos:position pos:line="68" pos:column="10"/></name> <operator pos:line="68" pos:column="11">!=<pos:position pos:line="68" pos:column="13"/></operator> <literal type="number" pos:line="68" pos:column="14">0<pos:position pos:line="68" pos:column="15"/></literal></expr>)<pos:position pos:line="68" pos:column="16"/></condition><then pos:line="68" pos:column="16"> <block pos:line="68" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="69" pos:column="5">PyErr_SetString<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">PyExc_RuntimeError<pos:position pos:line="69" pos:column="39"/></name></expr></argument>,
                    <argument><expr><literal type="string" pos:line="70" pos:column="21">"error dispatching notification, read the logs"<pos:position pos:line="70" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="70"/></expr_stmt>
    <return pos:line="71" pos:column="5">return <expr><name pos:line="71" pos:column="12">NULL<pos:position pos:line="71" pos:column="16"/></name></expr>;<pos:position pos:line="71" pos:column="17"/></return>
  }<pos:position pos:line="72" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="73" pos:column="3">Py_RETURN_NONE<pos:position pos:line="73" pos:column="17"/></name></expr>;<pos:position pos:line="73" pos:column="18"/></expr_stmt>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

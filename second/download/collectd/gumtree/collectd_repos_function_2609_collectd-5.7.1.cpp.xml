<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2609_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_loadplugin<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">oconfig_item_t<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">ci<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><specifier pos:line="2" pos:column="3">const<pos:position pos:line="2" pos:column="8"/></specifier> <name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">name<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">unsigned<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">int<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">flags<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">plugin_ctx_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">ctx<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><block pos:line="4" pos:column="22">{<expr><literal type="number" pos:line="4" pos:column="23">0<pos:position pos:line="4" pos:column="24"/></literal></expr>}<pos:position pos:line="4" pos:column="25"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">plugin_ctx_t<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">old_ctx<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ret_val<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">assert<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><call><name pos:line="8" pos:column="10">strcasecmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name><name pos:line="8" pos:column="21">ci<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">key<pos:position pos:line="8" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"LoadPlugin"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">==<pos:position pos:line="8" pos:column="46"/></operator> <literal type="number" pos:line="8" pos:column="47">0<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name><name pos:line="10" pos:column="7">ci<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">values_num<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">!=<pos:position pos:line="10" pos:column="24"/></operator> <literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return></block></then></if>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">ci<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">values<pos:position pos:line="12" pos:column="17"/></name><index pos:line="12" pos:column="17">[<expr><literal type="number" pos:line="12" pos:column="18">0<pos:position pos:line="12" pos:column="19"/></literal></expr>]<pos:position pos:line="12" pos:column="20"/></index></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">type<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">!=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">OCONFIG_TYPE_STRING<pos:position pos:line="12" pos:column="48"/></name></expr>)<pos:position pos:line="12" pos:column="49"/></condition><then pos:line="12" pos:column="49">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="15" pos:column="3">name<pos:position pos:line="15" pos:column="7"/></name> <operator pos:line="15" pos:column="8">=<pos:position pos:line="15" pos:column="9"/></operator> <name><name pos:line="15" pos:column="10">ci<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">values<pos:position pos:line="15" pos:column="20"/></name><index pos:line="15" pos:column="20">[<expr><literal type="number" pos:line="15" pos:column="21">0<pos:position pos:line="15" pos:column="22"/></literal></expr>]<pos:position pos:line="15" pos:column="23"/></index></name><operator pos:line="15" pos:column="23">.<pos:position pos:line="15" pos:column="24"/></operator><name><name pos:line="15" pos:column="24">value<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">.<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="30">string<pos:position pos:line="15" pos:column="36"/></name></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><call><name pos:line="16" pos:column="7">strcmp<pos:position pos:line="16" pos:column="13"/></name><argument_list pos:line="16" pos:column="13">(<argument><expr><literal type="string" pos:line="16" pos:column="14">"libvirt"<pos:position pos:line="16" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="25">name<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call> <operator pos:line="16" pos:column="31">==<pos:position pos:line="16" pos:column="33"/></operator> <literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36">
    <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="5">name<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">=<pos:position pos:line="17" pos:column="11"/></operator> <literal type="string" pos:line="17" pos:column="12">"virt"<pos:position pos:line="17" pos:column="18"/></literal></expr>;<pos:position pos:line="17" pos:column="19"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="19" pos:column="3">/* default to the global interval set before loading this plugin */</comment>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">ctx<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">.<pos:position pos:line="20" pos:column="7"/></operator><name pos:line="20" pos:column="7">interval<pos:position pos:line="20" pos:column="15"/></name></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <call><name pos:line="20" pos:column="18">cf_get_default_interval<pos:position pos:line="20" pos:column="41"/></name><argument_list pos:line="20" pos:column="41">()<pos:position pos:line="20" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">ctx<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">.<pos:position pos:line="21" pos:column="7"/></operator><name pos:line="21" pos:column="7">flush_interval<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="number" pos:line="21" pos:column="24">0<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">ctx<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">.<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">flush_timeout<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="23">0<pos:position pos:line="22" pos:column="24"/></literal></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>

  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><decl><type><name pos:line="24" pos:column="8">int<pos:position pos:line="24" pos:column="11"/></name></type> <name pos:line="24" pos:column="12">i<pos:position pos:line="24" pos:column="13"/></name> <init pos:line="24" pos:column="14">= <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="18"/></init> <condition><expr><name pos:line="24" pos:column="19">i<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&lt;<pos:position pos:line="24" pos:column="25"/></operator> <name><name pos:line="24" pos:column="23">ci<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">children_num<pos:position pos:line="24" pos:column="39"/></name></name></expr>;<pos:position pos:line="24" pos:column="40"/></condition> <incr><expr><operator pos:line="24" pos:column="41">++<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">i<pos:position pos:line="24" pos:column="44"/></name></expr></incr>)<pos:position pos:line="24" pos:column="45"/></control> <block pos:line="24" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">oconfig_item_t<pos:position pos:line="25" pos:column="19"/></name> <modifier pos:line="25" pos:column="20">*<pos:position pos:line="25" pos:column="21"/></modifier></type><name pos:line="25" pos:column="21">child<pos:position pos:line="25" pos:column="26"/></name> <init pos:line="25" pos:column="27">= <expr><name><name pos:line="25" pos:column="29">ci<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">children<pos:position pos:line="25" pos:column="41"/></name></name> <operator pos:line="25" pos:column="42">+<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="44">i<pos:position pos:line="25" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="46"/></decl_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">strcasecmp<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="string" pos:line="27" pos:column="20">"Globals"<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="31">child<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">key<pos:position pos:line="27" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call> <operator pos:line="27" pos:column="43">==<pos:position pos:line="27" pos:column="45"/></operator> <literal type="number" pos:line="27" pos:column="46">0<pos:position pos:line="27" pos:column="47"/></literal></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="7">cf_util_get_flag<pos:position pos:line="28" pos:column="23"/></name><argument_list pos:line="28" pos:column="23">(<argument><expr><name pos:line="28" pos:column="24">child<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="31">&amp;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="32">flags<pos:position pos:line="28" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="39">PLUGIN_FLAGS_GLOBAL<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt></block></then>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><call><name pos:line="29" pos:column="14">strcasecmp<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"Interval"<pos:position pos:line="29" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="37">child<pos:position pos:line="29" pos:column="42"/></name><operator pos:line="29" pos:column="42">-&gt;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="44">key<pos:position pos:line="29" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="48"/></argument_list></call> <operator pos:line="29" pos:column="49">==<pos:position pos:line="29" pos:column="51"/></operator> <literal type="number" pos:line="29" pos:column="52">0<pos:position pos:line="29" pos:column="53"/></literal></expr>)<pos:position pos:line="29" pos:column="54"/></condition><then pos:line="29" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="7">cf_util_get_cdtime<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">child<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator><name><name pos:line="30" pos:column="34">ctx<pos:position pos:line="30" pos:column="37"/></name><operator pos:line="30" pos:column="37">.<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="38">interval<pos:position pos:line="30" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="31" pos:column="5">else <if pos:line="31" pos:column="10">if <condition pos:line="31" pos:column="13">(<expr><call><name pos:line="31" pos:column="14">strcasecmp<pos:position pos:line="31" pos:column="24"/></name><argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"FlushInterval"<pos:position pos:line="31" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="42">child<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">key<pos:position pos:line="31" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="53"/></argument_list></call> <operator pos:line="31" pos:column="54">==<pos:position pos:line="31" pos:column="56"/></operator> <literal type="number" pos:line="31" pos:column="57">0<pos:position pos:line="31" pos:column="58"/></literal></expr>)<pos:position pos:line="31" pos:column="59"/></condition><then pos:line="31" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="7">cf_util_get_cdtime<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">child<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="33">&amp;<pos:position pos:line="32" pos:column="38"/></operator><name><name pos:line="32" pos:column="34">ctx<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">.<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">flush_interval<pos:position pos:line="32" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="33" pos:column="5">else <if pos:line="33" pos:column="10">if <condition pos:line="33" pos:column="13">(<expr><call><name pos:line="33" pos:column="14">strcasecmp<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><literal type="string" pos:line="33" pos:column="25">"FlushTimeout"<pos:position pos:line="33" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="41">child<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">key<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call> <operator pos:line="33" pos:column="53">==<pos:position pos:line="33" pos:column="55"/></operator> <literal type="number" pos:line="33" pos:column="56">0<pos:position pos:line="33" pos:column="57"/></literal></expr>)<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">cf_util_get_cdtime<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name pos:line="34" pos:column="26">child<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="33">&amp;<pos:position pos:line="34" pos:column="38"/></operator><name><name pos:line="34" pos:column="34">ctx<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">.<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">flush_timeout<pos:position pos:line="34" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <else pos:line="35" pos:column="5">else <block pos:line="35" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">WARNING<pos:position pos:line="36" pos:column="14"/></name><argument_list pos:line="36" pos:column="14">(<argument><expr><literal type="string" pos:line="36" pos:column="15">"Ignoring unknown LoadPlugin option \"%s\" "<pos:position pos:line="36" pos:column="59"/></literal>
              <literal type="string" pos:line="37" pos:column="15">"for plugin \"%s\""<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="38" pos:column="15">child<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">key<pos:position pos:line="38" pos:column="25"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="27">ci<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">values<pos:position pos:line="38" pos:column="37"/></name><index pos:line="38" pos:column="37">[<expr><literal type="number" pos:line="38" pos:column="38">0<pos:position pos:line="38" pos:column="39"/></literal></expr>]<pos:position pos:line="38" pos:column="40"/></index></name><operator pos:line="38" pos:column="40">.<pos:position pos:line="38" pos:column="41"/></operator><name><name pos:line="38" pos:column="41">value<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">.<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">string<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>
  }<pos:position pos:line="40" pos:column="4"/></block></for>

  <expr_stmt><expr><name pos:line="42" pos:column="3">old_ctx<pos:position pos:line="42" pos:column="10"/></name> <operator pos:line="42" pos:column="11">=<pos:position pos:line="42" pos:column="12"/></operator> <call><name pos:line="42" pos:column="13">plugin_set_ctx<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">ctx<pos:position pos:line="42" pos:column="31"/></name></expr></argument>)<pos:position pos:line="42" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="43" pos:column="3">ret_val<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">=<pos:position pos:line="43" pos:column="12"/></operator> <call><name pos:line="43" pos:column="13">plugin_load<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><name pos:line="43" pos:column="25">name<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="31">(<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="32">uint32_t<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">)<pos:position pos:line="43" pos:column="41"/></operator><name pos:line="43" pos:column="41">flags<pos:position pos:line="43" pos:column="46"/></name></expr></argument>)<pos:position pos:line="43" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="48"/></expr_stmt>
  <comment type="block" pos:line="44" pos:column="3">/* reset to the "global" context */</comment>
  <expr_stmt><expr><call><name pos:line="45" pos:column="3">plugin_set_ctx<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name pos:line="45" pos:column="18">old_ctx<pos:position pos:line="45" pos:column="25"/></name></expr></argument>)<pos:position pos:line="45" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="27"/></expr_stmt>

  <return pos:line="47" pos:column="3">return <expr><operator pos:line="47" pos:column="10">(<pos:position pos:line="47" pos:column="11"/></operator><name pos:line="47" pos:column="11">ret_val<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">)<pos:position pos:line="47" pos:column="19"/></operator></expr>;<pos:position pos:line="47" pos:column="20"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

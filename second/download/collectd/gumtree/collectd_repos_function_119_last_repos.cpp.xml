<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_119_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_stats_preinit<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">DPDK_STATS_TRACE<pos:position pos:line="2" pos:column="19"/></name><argument_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="22"/></expr_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">g_hc<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">!=<pos:position pos:line="4" pos:column="14"/></operator> <name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
    <comment type="block" pos:line="5" pos:column="5">/* already initialized if config callback was called before init callback */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">DEBUG<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><literal type="string" pos:line="6" pos:column="11">"dpdk_stats_preinit: helper already initialized"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="61"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal></expr>;<pos:position pos:line="7" pos:column="14"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">ret<pos:position pos:line="10" pos:column="10"/></name> <init pos:line="10" pos:column="11">= <expr><call><name pos:line="10" pos:column="13">dpdk_helper_init<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">g_shm_name<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="42">sizeof<argument_list pos:line="10" pos:column="48">(<argument><expr><name pos:line="10" pos:column="49">dpdk_stats_ctx_t<pos:position pos:line="10" pos:column="65"/></name></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="10" pos:column="68">&amp;<pos:position pos:line="10" pos:column="73"/></operator><name pos:line="10" pos:column="69">g_hc<pos:position pos:line="10" pos:column="73"/></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="75"/></decl_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">ret<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">!=<pos:position pos:line="11" pos:column="13"/></operator> <literal type="number" pos:line="11" pos:column="14">0<pos:position pos:line="11" pos:column="15"/></literal></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16"> <block pos:line="11" pos:column="17">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">errbuf<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><name pos:line="12" pos:column="17">ERR_BUF_SIZE<pos:position pos:line="12" pos:column="29"/></name></expr>]<pos:position pos:line="12" pos:column="30"/></index></name></decl>;<pos:position pos:line="12" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">ERROR<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"%s: failed to initialize %s helper(error: %s)"<pos:position pos:line="13" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="60">DPDK_STATS_PLUGIN<pos:position pos:line="13" pos:column="77"/></name></expr></argument>,
          <argument><expr><name pos:line="14" pos:column="11">g_shm_name<pos:position pos:line="14" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="23">sstrerror<pos:position pos:line="14" pos:column="32"/></name><argument_list pos:line="14" pos:column="32">(<argument><expr><name pos:line="14" pos:column="33">errno<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">errbuf<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="48">sizeof<argument_list pos:line="14" pos:column="54">(<argument><expr><name pos:line="14" pos:column="55">errbuf<pos:position pos:line="14" pos:column="61"/></name></expr></argument>)<pos:position pos:line="14" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">ret<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">dpdk_stats_default_config<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">()<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
  <return pos:line="19" pos:column="3">return <expr><name pos:line="19" pos:column="10">ret<pos:position pos:line="19" pos:column="13"/></name></expr>;<pos:position pos:line="19" pos:column="14"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

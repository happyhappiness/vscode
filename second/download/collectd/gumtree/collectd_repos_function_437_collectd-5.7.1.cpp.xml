<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_437_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">battery_read<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">query_statefs<pos:position pos:line="5" pos:column="20"/></name></expr>)<pos:position pos:line="5" pos:column="21"/></condition><then pos:line="5" pos:column="21">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><call><name pos:line="6" pos:column="12">battery_read_statefs<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">DEBUG<pos:position pos:line="8" pos:column="8"/></name><argument_list pos:line="8" pos:column="8">(<argument><expr><literal type="string" pos:line="8" pos:column="9">"battery plugin: Trying sysfs ..."<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name pos:line="9" pos:column="3">status<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <call><name pos:line="9" pos:column="12">read_sysfs<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">()<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal><operator pos:line="11" pos:column="14">)<pos:position pos:line="11" pos:column="15"/></operator></expr>;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="13" pos:column="3">DEBUG<pos:position pos:line="13" pos:column="8"/></name><argument_list pos:line="13" pos:column="8">(<argument><expr><literal type="string" pos:line="13" pos:column="9">"battery plugin: Trying acpi ..."<pos:position pos:line="13" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name pos:line="14" pos:column="3">status<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">read_acpi<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">()<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">status<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">==<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">0<pos:position pos:line="15" pos:column="18"/></literal></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator></expr>;<pos:position pos:line="16" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="18" pos:column="3">DEBUG<pos:position pos:line="18" pos:column="8"/></name><argument_list pos:line="18" pos:column="8">(<argument><expr><literal type="string" pos:line="18" pos:column="9">"battery plugin: Trying pmu ..."<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
  <expr_stmt><expr><name pos:line="19" pos:column="3">status<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">=<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">read_pmu<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">()<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
  <if pos:line="20" pos:column="3">if <condition pos:line="20" pos:column="6">(<expr><name pos:line="20" pos:column="7">status<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">==<pos:position pos:line="20" pos:column="16"/></operator> <literal type="number" pos:line="20" pos:column="17">0<pos:position pos:line="20" pos:column="18"/></literal></expr>)<pos:position pos:line="20" pos:column="19"/></condition><then pos:line="20" pos:column="19">
    <block type="pseudo"><return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">0<pos:position pos:line="21" pos:column="14"/></literal><operator pos:line="21" pos:column="14">)<pos:position pos:line="21" pos:column="15"/></operator></expr>;<pos:position pos:line="21" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="23" pos:column="3">ERROR<pos:position pos:line="23" pos:column="8"/></name><argument_list pos:line="23" pos:column="8">(<argument><expr><literal type="string" pos:line="23" pos:column="9">"battery plugin: All available input methods failed."<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="64"/></expr_stmt>
  <return pos:line="24" pos:column="3">return <expr><operator pos:line="24" pos:column="10">(<pos:position pos:line="24" pos:column="11"/></operator><operator pos:line="24" pos:column="11">-<pos:position pos:line="24" pos:column="12"/></operator><literal type="number" pos:line="24" pos:column="12">1<pos:position pos:line="24" pos:column="13"/></literal><operator pos:line="24" pos:column="13">)<pos:position pos:line="24" pos:column="14"/></operator></expr>;<pos:position pos:line="24" pos:column="15"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

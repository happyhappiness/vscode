<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_865_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sl_config<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">key<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">value<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><call><name pos:line="2" pos:column="7">strcasecmp<pos:position pos:line="2" pos:column="17"/></name><argument_list pos:line="2" pos:column="17">(<argument><expr><name pos:line="2" pos:column="18">key<pos:position pos:line="2" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="2" pos:column="23">"LogLevel"<pos:position pos:line="2" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="2" pos:column="34"/></argument_list></call> <operator pos:line="2" pos:column="35">==<pos:position pos:line="2" pos:column="37"/></operator> <literal type="number" pos:line="2" pos:column="38">0<pos:position pos:line="2" pos:column="39"/></literal></expr>)<pos:position pos:line="2" pos:column="40"/></condition><then pos:line="2" pos:column="40"> <block pos:line="2" pos:column="41">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">log_level<pos:position pos:line="3" pos:column="14"/></name> <operator pos:line="3" pos:column="15">=<pos:position pos:line="3" pos:column="16"/></operator> <call><name pos:line="3" pos:column="17">parse_log_severity<pos:position pos:line="3" pos:column="35"/></name><argument_list pos:line="3" pos:column="35">(<argument><expr><name pos:line="3" pos:column="36">value<pos:position pos:line="3" pos:column="41"/></name></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="43"/></expr_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">log_level<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">&lt;<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block pos:line="4" pos:column="24">{
      <expr_stmt><expr><name pos:line="5" pos:column="7">log_level<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">LOG_INFO<pos:position pos:line="5" pos:column="27"/></name></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="6" pos:column="7">ERROR<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><literal type="string" pos:line="6" pos:column="13">"syslog: invalid loglevel [%s] defaulting to 'info'"<pos:position pos:line="6" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="67">value<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="74"/></expr_stmt>
      <return pos:line="7" pos:column="7">return <expr><operator pos:line="7" pos:column="14">(<pos:position pos:line="7" pos:column="15"/></operator><literal type="number" pos:line="7" pos:column="15">1<pos:position pos:line="7" pos:column="16"/></literal><operator pos:line="7" pos:column="16">)<pos:position pos:line="7" pos:column="17"/></operator></expr>;<pos:position pos:line="7" pos:column="18"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
  }<pos:position pos:line="9" pos:column="4"/></block></then> <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><call><name pos:line="9" pos:column="14">strcasecmp<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><name pos:line="9" pos:column="25">key<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="30">"NotifyLevel"<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call> <operator pos:line="9" pos:column="45">==<pos:position pos:line="9" pos:column="47"/></operator> <literal type="number" pos:line="9" pos:column="48">0<pos:position pos:line="9" pos:column="49"/></literal></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
    <expr_stmt><expr><name pos:line="10" pos:column="5">notif_severity<pos:position pos:line="10" pos:column="19"/></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">parse_notif_severity<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">value<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">notif_severity<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&lt;<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>)<pos:position pos:line="11" pos:column="28"/></condition><then pos:line="11" pos:column="28">
      <block type="pseudo"><return pos:line="12" pos:column="7">return <expr><operator pos:line="12" pos:column="14">(<pos:position pos:line="12" pos:column="15"/></operator><literal type="number" pos:line="12" pos:column="15">1<pos:position pos:line="12" pos:column="16"/></literal><operator pos:line="12" pos:column="16">)<pos:position pos:line="12" pos:column="17"/></operator></expr>;<pos:position pos:line="12" pos:column="18"/></return></block></then></if>
  }<pos:position pos:line="13" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="15" pos:column="3">return <expr><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><literal type="number" pos:line="15" pos:column="11">0<pos:position pos:line="15" pos:column="12"/></literal><operator pos:line="15" pos:column="12">)<pos:position pos:line="15" pos:column="13"/></operator></expr>;<pos:position pos:line="15" pos:column="14"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1826_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">process_athstats<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">int<pos:position pos:line="1" pos:column="32"/></name></type> <name pos:line="1" pos:column="33">sk<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="37">const<pos:position pos:line="1" pos:column="42"/></specifier> <name pos:line="1" pos:column="43">char<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">dev<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">ifreq<pos:position pos:line="2" pos:column="15"/></name></name></type> <name pos:line="2" pos:column="16">ifr<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="3" pos:column="3">struct<pos:position pos:line="3" pos:column="9"/></name> <name pos:line="3" pos:column="10">ath_stats<pos:position pos:line="3" pos:column="19"/></name></name></type> <name pos:line="3" pos:column="20">stats<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">sstrncpy<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">ifr<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">ifr_name<pos:position pos:line="6" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="26">dev<pos:position pos:line="6" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="31">sizeof<argument_list pos:line="6" pos:column="37">(<argument><expr><name><name pos:line="6" pos:column="38">ifr<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">.<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">ifr_name<pos:position pos:line="6" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="7" pos:column="3">ifr<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">.<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">ifr_data<pos:position pos:line="7" pos:column="15"/></name></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">void<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">*<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">)<pos:position pos:line="7" pos:column="26"/></operator><operator pos:line="7" pos:column="26">&amp;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="27">stats<pos:position pos:line="7" pos:column="32"/></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="8" pos:column="3">status<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">ioctl<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">(<argument><expr><name pos:line="8" pos:column="18">sk<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">SIOCGATHSTATS<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="37">&amp;<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="38">ifr<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&lt;<pos:position pos:line="9" pos:column="18"/></operator> <literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
    <comment type="block" pos:line="10" pos:column="5">/* Silent, because not all interfaces support all ioctls. */</comment>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">DEBUG<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"madwifi plugin: Sending IO-control "<pos:position pos:line="11" pos:column="48"/></literal>
          <literal type="string" pos:line="12" pos:column="11">"SIOCGATHSTATS to device %s "<pos:position pos:line="12" pos:column="40"/></literal>
          <literal type="string" pos:line="13" pos:column="11">"failed with status %i."<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>,
          <argument><expr><name pos:line="14" pos:column="11">dev<pos:position pos:line="14" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="16">status<pos:position pos:line="14" pos:column="22"/></name></expr></argument>)<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">status<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator></expr>;<pos:position pos:line="15" pos:column="21"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="18" pos:column="3">/* These stats are handled as a special case, because they are
     eight values each */</comment>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><call><name pos:line="21" pos:column="7">item_watched<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">STAT_AST_ANT_RX<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="37"/></condition><then pos:line="21" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">submit_antx<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">dev<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="22">"ast_ant_rx"<pos:position pos:line="22" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="36">stats<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">.<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">ast_ant_rx<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="23" pos:column="17">STATIC_ARRAY_SIZE<pos:position pos:line="23" pos:column="34"/></name><argument_list pos:line="23" pos:column="34">(<argument><expr><name><name pos:line="23" pos:column="35">stats<pos:position pos:line="23" pos:column="40"/></name><operator pos:line="23" pos:column="40">.<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">ast_ant_rx<pos:position pos:line="23" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="54"/></expr_stmt></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><call><name pos:line="25" pos:column="7">item_watched<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">STAT_AST_ANT_TX<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="37"/></condition><then pos:line="25" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">submit_antx<pos:position pos:line="26" pos:column="16"/></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">dev<pos:position pos:line="26" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="22">"ast_ant_tx"<pos:position pos:line="26" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="36">stats<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">.<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">ast_ant_tx<pos:position pos:line="26" pos:column="52"/></name></name></expr></argument>,
                <argument><expr><call><name pos:line="27" pos:column="17">STATIC_ARRAY_SIZE<pos:position pos:line="27" pos:column="34"/></name><argument_list pos:line="27" pos:column="34">(<argument><expr><name><name pos:line="27" pos:column="35">stats<pos:position pos:line="27" pos:column="40"/></name><operator pos:line="27" pos:column="40">.<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="41">ast_ant_tx<pos:position pos:line="27" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="29" pos:column="3">/* All other ath statistics */</comment>
  <expr_stmt><expr><call><name pos:line="30" pos:column="3">process_stat_struct<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">ATH_STAT<pos:position pos:line="30" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="33">&amp;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="34">stats<pos:position pos:line="30" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="41">dev<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">NULL<pos:position pos:line="30" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="52">"ath_stat"<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="64">"ast_misc"<pos:position pos:line="30" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt>
  <return pos:line="31" pos:column="3">return <expr><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><literal type="number" pos:line="31" pos:column="11">0<pos:position pos:line="31" pos:column="12"/></literal><operator pos:line="31" pos:column="12">)<pos:position pos:line="31" pos:column="13"/></operator></expr>;<pos:position pos:line="31" pos:column="14"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

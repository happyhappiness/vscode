<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1703_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">snmp_agent_init<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">g_agent<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">||<pos:position pos:line="4" pos:column="25"/></operator> <operator pos:line="4" pos:column="26">(<pos:position pos:line="4" pos:column="27"/></operator><operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator><call><name pos:line="4" pos:column="28">llist_head<pos:position pos:line="4" pos:column="38"/></name><argument_list pos:line="4" pos:column="38">(<argument><expr><name><name pos:line="4" pos:column="39">g_agent<pos:position pos:line="4" pos:column="46"/></name><operator pos:line="4" pos:column="46">-&gt;<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="48">scalars<pos:position pos:line="4" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call> <operator pos:line="4" pos:column="57">==<pos:position pos:line="4" pos:column="59"/></operator> <name pos:line="4" pos:column="60">NULL<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">)<pos:position pos:line="4" pos:column="65"/></operator> <operator pos:line="4" pos:column="66">&amp;&amp;<pos:position pos:line="4" pos:column="76"/></operator>
                          <operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><call><name pos:line="5" pos:column="28">llist_head<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name><name pos:line="5" pos:column="39">g_agent<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">-&gt;<pos:position pos:line="5" pos:column="51"/></operator><name pos:line="5" pos:column="48">tables<pos:position pos:line="5" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call> <operator pos:line="5" pos:column="56">==<pos:position pos:line="5" pos:column="58"/></operator> <name pos:line="5" pos:column="59">NULL<pos:position pos:line="5" pos:column="63"/></name><operator pos:line="5" pos:column="63">)<pos:position pos:line="5" pos:column="64"/></operator><operator pos:line="5" pos:column="64">)<pos:position pos:line="5" pos:column="65"/></operator></expr>)<pos:position pos:line="5" pos:column="66"/></condition><then pos:line="5" pos:column="66"> <block pos:line="5" pos:column="67">{
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">ERROR<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">PLUGIN_NAME<pos:position pos:line="6" pos:column="22"/></name> <literal type="string" pos:line="6" pos:column="23">": snmp_agent_init: plugin not configured"<pos:position pos:line="6" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">EINVAL<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">plugin_register_shutdown<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">PLUGIN_NAME<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">snmp_agent_shutdown<pos:position pos:line="10" pos:column="60"/></name></expr></argument>)<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="62"/></expr_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">ret<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <call><name pos:line="12" pos:column="9">snmp_agent_register_scalar_oids<pos:position pos:line="12" pos:column="40"/></name><argument_list pos:line="12" pos:column="40">()<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">ret<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">!=<pos:position pos:line="13" pos:column="13"/></operator> <literal type="number" pos:line="13" pos:column="14">0<pos:position pos:line="13" pos:column="15"/></literal></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">ret<pos:position pos:line="14" pos:column="15"/></name></expr>;<pos:position pos:line="14" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">ret<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">snmp_agent_register_table_oids<pos:position pos:line="16" pos:column="39"/></name><argument_list pos:line="16" pos:column="39">()<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">ret<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">!=<pos:position pos:line="17" pos:column="13"/></operator> <literal type="number" pos:line="17" pos:column="14">0<pos:position pos:line="17" pos:column="15"/></literal></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16">
    <block type="pseudo"><return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">ret<pos:position pos:line="18" pos:column="15"/></name></expr>;<pos:position pos:line="18" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="20" pos:column="3">ret<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">pthread_mutex_init<pos:position pos:line="20" pos:column="27"/></name><argument_list pos:line="20" pos:column="27">(<argument><expr><operator pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></operator><name><name pos:line="20" pos:column="29">g_agent<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">lock<pos:position pos:line="20" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">NULL<pos:position pos:line="20" pos:column="48"/></name></expr></argument>)<pos:position pos:line="20" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="50"/></expr_stmt>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><name pos:line="21" pos:column="7">ret<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">!=<pos:position pos:line="21" pos:column="13"/></operator> <literal type="number" pos:line="21" pos:column="14">0<pos:position pos:line="21" pos:column="15"/></literal></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16"> <block pos:line="21" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">ERROR<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name pos:line="22" pos:column="11">PLUGIN_NAME<pos:position pos:line="22" pos:column="22"/></name> <literal type="string" pos:line="22" pos:column="23">": Failed to initialize mutex, err %u"<pos:position pos:line="22" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="63">ret<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">ret<pos:position pos:line="23" pos:column="15"/></name></expr>;<pos:position pos:line="23" pos:column="16"/></return>
  }<pos:position pos:line="24" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">ret<pos:position pos:line="26" pos:column="6"/></name> <operator pos:line="26" pos:column="7">=<pos:position pos:line="26" pos:column="8"/></operator> <call><name pos:line="26" pos:column="9">pthread_mutex_init<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><operator pos:line="26" pos:column="28">&amp;<pos:position pos:line="26" pos:column="33"/></operator><name><name pos:line="26" pos:column="29">g_agent<pos:position pos:line="26" pos:column="36"/></name><operator pos:line="26" pos:column="36">-&gt;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="38">agentx_lock<pos:position pos:line="26" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="51">NULL<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">ret<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">!=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16"> <block pos:line="27" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">PLUGIN_NAME<pos:position pos:line="28" pos:column="22"/></name> <literal type="string" pos:line="28" pos:column="23">": Failed to initialize AgentX mutex, err %u"<pos:position pos:line="28" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="70">ret<pos:position pos:line="28" pos:column="73"/></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">ret<pos:position pos:line="29" pos:column="15"/></name></expr>;<pos:position pos:line="29" pos:column="16"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* create a second thread to listen for requests from AgentX*/</comment>
  <expr_stmt><expr><name pos:line="33" pos:column="3">ret<pos:position pos:line="33" pos:column="6"/></name> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <call><name pos:line="33" pos:column="9">pthread_create<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><operator pos:line="33" pos:column="24">&amp;<pos:position pos:line="33" pos:column="29"/></operator><name><name pos:line="33" pos:column="25">g_agent<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">thread<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="42">NULL<pos:position pos:line="33" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="48">&amp;<pos:position pos:line="33" pos:column="53"/></operator><name pos:line="33" pos:column="49">snmp_agent_thread_run<pos:position pos:line="33" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="72">NULL<pos:position pos:line="33" pos:column="76"/></name></expr></argument>)<pos:position pos:line="33" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="78"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">ret<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">!=<pos:position pos:line="34" pos:column="13"/></operator> <literal type="number" pos:line="34" pos:column="14">0<pos:position pos:line="34" pos:column="15"/></literal></expr>)<pos:position pos:line="34" pos:column="16"/></condition><then pos:line="34" pos:column="16"> <block pos:line="34" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">ERROR<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><name pos:line="35" pos:column="11">PLUGIN_NAME<pos:position pos:line="35" pos:column="22"/></name> <literal type="string" pos:line="35" pos:column="23">": Failed to create a separate thread, err %u"<pos:position pos:line="35" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="71">ret<pos:position pos:line="35" pos:column="74"/></name></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><name pos:line="36" pos:column="12">ret<pos:position pos:line="36" pos:column="15"/></name></expr>;<pos:position pos:line="36" pos:column="16"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><call><name pos:line="39" pos:column="7">llist_head<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name><name pos:line="39" pos:column="18">g_agent<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">-&gt;<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="27">tables<pos:position pos:line="39" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call> <operator pos:line="39" pos:column="35">!=<pos:position pos:line="39" pos:column="37"/></operator> <name pos:line="39" pos:column="38">NULL<pos:position pos:line="39" pos:column="42"/></name></expr>)<pos:position pos:line="39" pos:column="43"/></condition><then pos:line="39" pos:column="43"> <block pos:line="39" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">plugin_register_write<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">PLUGIN_NAME<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">snmp_agent_collect<pos:position pos:line="40" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">NULL<pos:position pos:line="40" pos:column="64"/></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">plugin_register_missing<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">PLUGIN_NAME<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="42">snmp_agent_clear_missing<pos:position pos:line="41" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="68">NULL<pos:position pos:line="41" pos:column="72"/></name></expr></argument>)<pos:position pos:line="41" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="74"/></expr_stmt>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <return pos:line="44" pos:column="3">return <expr><literal type="number" pos:line="44" pos:column="10">0<pos:position pos:line="44" pos:column="11"/></literal></expr>;<pos:position pos:line="44" pos:column="12"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

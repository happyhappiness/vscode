<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_562_collectd-4.2.5.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">handle_putval<pos:position pos:line="1" pos:column="18"/></name> <parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">FILE<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">fh<pos:position pos:line="1" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier><modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">fields<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">fields_num<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">hostname<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">plugin<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">plugin_instance<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">type<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">char<pos:position pos:line="7" pos:column="13"/></name> <modifier pos:line="7" pos:column="14">*<pos:position pos:line="7" pos:column="15"/></modifier></type><name pos:line="7" pos:column="15">type_instance<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type>   <name pos:line="8" pos:column="15">status<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type>   <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name></decl>;<pos:position pos:line="9" pos:column="17"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">data_set_t<pos:position pos:line="11" pos:column="25"/></name> <modifier pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></modifier></type><name pos:line="11" pos:column="27">ds<pos:position pos:line="11" pos:column="29"/></name></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="12" pos:column="9">value_list_t<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">vl<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><name pos:line="12" pos:column="27">VALUE_LIST_INIT<pos:position pos:line="12" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>

	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">fields_num<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&lt;<pos:position pos:line="14" pos:column="28"/></operator> <literal type="number" pos:line="14" pos:column="26">3<pos:position pos:line="14" pos:column="27"/></literal></expr>)<pos:position pos:line="14" pos:column="28"/></condition><then pos:line="14" pos:column="28">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">DEBUG<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"cmd putval: Wrong number of fields: %i"<pos:position pos:line="16" pos:column="64"/></literal></expr></argument>,
			       	<argument><expr><name pos:line="17" pos:column="33">fields_num<pos:position pos:line="17" pos:column="43"/></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">fprintf<pos:position pos:line="18" pos:column="24"/></name> <argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">fh<pos:position pos:line="18" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="30">"-1 Wrong number of fields: Got %i, "<pos:position pos:line="18" pos:column="67"/></literal>
				<literal type="string" pos:line="19" pos:column="33">"expected at least 3.\n"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>,
				<argument><expr><name pos:line="20" pos:column="33">fields_num<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="21" pos:column="17">fflush<pos:position pos:line="21" pos:column="23"/></name> <argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">fh<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
		<return pos:line="22" pos:column="17">return <expr><operator pos:line="22" pos:column="24">(<pos:position pos:line="22" pos:column="25"/></operator><operator pos:line="22" pos:column="25">-<pos:position pos:line="22" pos:column="26"/></operator><literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal><operator pos:line="22" pos:column="27">)<pos:position pos:line="22" pos:column="28"/></operator></expr>;<pos:position pos:line="22" pos:column="29"/></return>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="25" pos:column="9">status<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <call><name pos:line="25" pos:column="18">parse_identifier<pos:position pos:line="25" pos:column="34"/></name> <argument_list pos:line="25" pos:column="35">(<argument><expr><name><name pos:line="25" pos:column="36">fields<pos:position pos:line="25" pos:column="42"/></name><index pos:line="25" pos:column="42">[<expr><literal type="number" pos:line="25" pos:column="43">1<pos:position pos:line="25" pos:column="44"/></literal></expr>]<pos:position pos:line="25" pos:column="45"/></index></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="47">&amp;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="48">hostname<pos:position pos:line="25" pos:column="56"/></name></expr></argument>,
			<argument><expr><operator pos:line="26" pos:column="25">&amp;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="26">plugin<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">&amp;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="35">plugin_instance<pos:position pos:line="26" pos:column="50"/></name></expr></argument>,
			<argument><expr><operator pos:line="27" pos:column="25">&amp;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="26">type<pos:position pos:line="27" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="32">&amp;<pos:position pos:line="27" pos:column="37"/></operator><name pos:line="27" pos:column="33">type_instance<pos:position pos:line="27" pos:column="46"/></name></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="48"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">status<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">!=<pos:position pos:line="28" pos:column="22"/></operator> <literal type="number" pos:line="28" pos:column="23">0<pos:position pos:line="28" pos:column="24"/></literal></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">DEBUG<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"cmd putval: Cannot parse `%s'"<pos:position pos:line="30" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="57">fields<pos:position pos:line="30" pos:column="63"/></name><index pos:line="30" pos:column="63">[<expr><literal type="number" pos:line="30" pos:column="64">1<pos:position pos:line="30" pos:column="65"/></literal></expr>]<pos:position pos:line="30" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">fprintf<pos:position pos:line="31" pos:column="24"/></name> <argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">fh<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"-1 Cannot parse identifier.\n"<pos:position pos:line="31" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="63"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">fflush<pos:position pos:line="32" pos:column="23"/></name> <argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">fh<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
		<return pos:line="33" pos:column="17">return <expr><operator pos:line="33" pos:column="24">(<pos:position pos:line="33" pos:column="25"/></operator><operator pos:line="33" pos:column="25">-<pos:position pos:line="33" pos:column="26"/></operator><literal type="number" pos:line="33" pos:column="26">1<pos:position pos:line="33" pos:column="27"/></literal><operator pos:line="33" pos:column="27">)<pos:position pos:line="33" pos:column="28"/></operator></expr>;<pos:position pos:line="33" pos:column="29"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><call><name pos:line="36" pos:column="14">strlen<pos:position pos:line="36" pos:column="20"/></name> <argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">hostname<pos:position pos:line="36" pos:column="30"/></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call> <operator pos:line="36" pos:column="32">&gt;=<pos:position pos:line="36" pos:column="37"/></operator> <sizeof pos:line="36" pos:column="35">sizeof <argument_list pos:line="36" pos:column="42">(<argument><expr><name><name pos:line="36" pos:column="43">vl<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">.<pos:position pos:line="36" pos:column="46"/></operator><name pos:line="36" pos:column="46">host<pos:position pos:line="36" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></sizeof><operator pos:line="36" pos:column="51">)<pos:position pos:line="36" pos:column="52"/></operator>
			<operator pos:line="37" pos:column="25">||<pos:position pos:line="37" pos:column="27"/></operator> <operator pos:line="37" pos:column="28">(<pos:position pos:line="37" pos:column="29"/></operator><call><name pos:line="37" pos:column="29">strlen<pos:position pos:line="37" pos:column="35"/></name> <argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">plugin<pos:position pos:line="37" pos:column="43"/></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call> <operator pos:line="37" pos:column="45">&gt;=<pos:position pos:line="37" pos:column="50"/></operator> <sizeof pos:line="37" pos:column="48">sizeof <argument_list pos:line="37" pos:column="55">(<argument><expr><name><name pos:line="37" pos:column="56">vl<pos:position pos:line="37" pos:column="58"/></name><operator pos:line="37" pos:column="58">.<pos:position pos:line="37" pos:column="59"/></operator><name pos:line="37" pos:column="59">plugin<pos:position pos:line="37" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></sizeof><operator pos:line="37" pos:column="66">)<pos:position pos:line="37" pos:column="67"/></operator>
			<operator pos:line="38" pos:column="25">||<pos:position pos:line="38" pos:column="27"/></operator> <operator pos:line="38" pos:column="28">(<pos:position pos:line="38" pos:column="29"/></operator><operator pos:line="38" pos:column="29">(<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">plugin_instance<pos:position pos:line="38" pos:column="45"/></name> <operator pos:line="38" pos:column="46">!=<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">NULL<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">)<pos:position pos:line="38" pos:column="54"/></operator>
				<operator pos:line="39" pos:column="33">&amp;&amp;<pos:position pos:line="39" pos:column="43"/></operator> <operator pos:line="39" pos:column="36">(<pos:position pos:line="39" pos:column="37"/></operator><call><name pos:line="39" pos:column="37">strlen<pos:position pos:line="39" pos:column="43"/></name> <argument_list pos:line="39" pos:column="44">(<argument><expr><name pos:line="39" pos:column="45">plugin_instance<pos:position pos:line="39" pos:column="60"/></name></expr></argument>)<pos:position pos:line="39" pos:column="61"/></argument_list></call> <operator pos:line="39" pos:column="62">&gt;=<pos:position pos:line="39" pos:column="67"/></operator> <sizeof pos:line="39" pos:column="65">sizeof <argument_list pos:line="39" pos:column="72">(<argument><expr><name><name pos:line="39" pos:column="73">vl<pos:position pos:line="39" pos:column="75"/></name><operator pos:line="39" pos:column="75">.<pos:position pos:line="39" pos:column="76"/></operator><name pos:line="39" pos:column="76">plugin_instance<pos:position pos:line="39" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="92"/></argument_list></sizeof><operator pos:line="39" pos:column="92">)<pos:position pos:line="39" pos:column="93"/></operator><operator pos:line="39" pos:column="93">)<pos:position pos:line="39" pos:column="94"/></operator>
			<operator pos:line="40" pos:column="25">||<pos:position pos:line="40" pos:column="27"/></operator> <operator pos:line="40" pos:column="28">(<pos:position pos:line="40" pos:column="29"/></operator><operator pos:line="40" pos:column="29">(<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">type_instance<pos:position pos:line="40" pos:column="43"/></name> <operator pos:line="40" pos:column="44">!=<pos:position pos:line="40" pos:column="46"/></operator> <name pos:line="40" pos:column="47">NULL<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">)<pos:position pos:line="40" pos:column="52"/></operator>
				<operator pos:line="41" pos:column="33">&amp;&amp;<pos:position pos:line="41" pos:column="43"/></operator> <operator pos:line="41" pos:column="36">(<pos:position pos:line="41" pos:column="37"/></operator><call><name pos:line="41" pos:column="37">strlen<pos:position pos:line="41" pos:column="43"/></name> <argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">type_instance<pos:position pos:line="41" pos:column="58"/></name></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call> <operator pos:line="41" pos:column="60">&gt;=<pos:position pos:line="41" pos:column="65"/></operator> <sizeof pos:line="41" pos:column="63">sizeof <argument_list pos:line="41" pos:column="70">(<argument><expr><name><name pos:line="41" pos:column="71">vl<pos:position pos:line="41" pos:column="73"/></name><operator pos:line="41" pos:column="73">.<pos:position pos:line="41" pos:column="74"/></operator><name pos:line="41" pos:column="74">type_instance<pos:position pos:line="41" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="88"/></argument_list></sizeof><operator pos:line="41" pos:column="88">)<pos:position pos:line="41" pos:column="89"/></operator><operator pos:line="41" pos:column="89">)<pos:position pos:line="41" pos:column="90"/></operator></expr>)<pos:position pos:line="41" pos:column="91"/></condition><then pos:line="41" pos:column="91">
	<block pos:line="42" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="43" pos:column="17">fprintf<pos:position pos:line="43" pos:column="24"/></name> <argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">fh<pos:position pos:line="43" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="30">"-1 Identifier too long."<pos:position pos:line="43" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="57"/></expr_stmt>
		<return pos:line="44" pos:column="17">return <expr><operator pos:line="44" pos:column="24">(<pos:position pos:line="44" pos:column="25"/></operator><operator pos:line="44" pos:column="25">-<pos:position pos:line="44" pos:column="26"/></operator><literal type="number" pos:line="44" pos:column="26">1<pos:position pos:line="44" pos:column="27"/></literal><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return>
	}<pos:position pos:line="45" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">strcpy<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><name><name pos:line="47" pos:column="17">vl<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">.<pos:position pos:line="47" pos:column="20"/></operator><name pos:line="47" pos:column="20">host<pos:position pos:line="47" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="26">hostname<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">strcpy<pos:position pos:line="48" pos:column="15"/></name> <argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">vl<pos:position pos:line="48" pos:column="19"/></name><operator pos:line="48" pos:column="19">.<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="20">plugin<pos:position pos:line="48" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="28">plugin<pos:position pos:line="48" pos:column="34"/></name></expr></argument>)<pos:position pos:line="48" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt>
	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">plugin_instance<pos:position pos:line="49" pos:column="28"/></name> <operator pos:line="49" pos:column="29">!=<pos:position pos:line="49" pos:column="31"/></operator> <name pos:line="49" pos:column="32">NULL<pos:position pos:line="49" pos:column="36"/></name></expr>)<pos:position pos:line="49" pos:column="37"/></condition><then pos:line="49" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="17">strcpy<pos:position pos:line="50" pos:column="23"/></name> <argument_list pos:line="50" pos:column="24">(<argument><expr><name><name pos:line="50" pos:column="25">vl<pos:position pos:line="50" pos:column="27"/></name><operator pos:line="50" pos:column="27">.<pos:position pos:line="50" pos:column="28"/></operator><name pos:line="50" pos:column="28">plugin_instance<pos:position pos:line="50" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="45">plugin_instance<pos:position pos:line="50" pos:column="60"/></name></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="62"/></expr_stmt></block></then></if>
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">type_instance<pos:position pos:line="51" pos:column="26"/></name> <operator pos:line="51" pos:column="27">!=<pos:position pos:line="51" pos:column="29"/></operator> <name pos:line="51" pos:column="30">NULL<pos:position pos:line="51" pos:column="34"/></name></expr>)<pos:position pos:line="51" pos:column="35"/></condition><then pos:line="51" pos:column="35">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="17">strcpy<pos:position pos:line="52" pos:column="23"/></name> <argument_list pos:line="52" pos:column="24">(<argument><expr><name><name pos:line="52" pos:column="25">vl<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">.<pos:position pos:line="52" pos:column="28"/></operator><name pos:line="52" pos:column="28">type_instance<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">type_instance<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="54" pos:column="9">ds<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">=<pos:position pos:line="54" pos:column="13"/></operator> <call><name pos:line="54" pos:column="14">plugin_get_ds<pos:position pos:line="54" pos:column="27"/></name> <argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">type<pos:position pos:line="54" pos:column="33"/></name></expr></argument>)<pos:position pos:line="54" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="35"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name pos:line="55" pos:column="13">ds<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">==<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="19">NULL<pos:position pos:line="55" pos:column="23"/></name></expr>)<pos:position pos:line="55" pos:column="24"/></condition><then pos:line="55" pos:column="24">
		<block type="pseudo"><return pos:line="56" pos:column="17">return <expr><operator pos:line="56" pos:column="24">(<pos:position pos:line="56" pos:column="25"/></operator><operator pos:line="56" pos:column="25">-<pos:position pos:line="56" pos:column="26"/></operator><literal type="number" pos:line="56" pos:column="26">1<pos:position pos:line="56" pos:column="27"/></literal><operator pos:line="56" pos:column="27">)<pos:position pos:line="56" pos:column="28"/></operator></expr>;<pos:position pos:line="56" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name><name pos:line="58" pos:column="9">vl<pos:position pos:line="58" pos:column="11"/></name><operator pos:line="58" pos:column="11">.<pos:position pos:line="58" pos:column="12"/></operator><name pos:line="58" pos:column="12">values_len<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name><name pos:line="58" pos:column="25">ds<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">ds_num<pos:position pos:line="58" pos:column="35"/></name></name></expr>;<pos:position pos:line="58" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="59" pos:column="9">vl<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">.<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">values<pos:position pos:line="59" pos:column="18"/></name></name> <operator pos:line="59" pos:column="19">=<pos:position pos:line="59" pos:column="20"/></operator> <operator pos:line="59" pos:column="21">(<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="22">value_t<pos:position pos:line="59" pos:column="29"/></name> <operator pos:line="59" pos:column="30">*<pos:position pos:line="59" pos:column="31"/></operator><operator pos:line="59" pos:column="31">)<pos:position pos:line="59" pos:column="32"/></operator> <call><name pos:line="59" pos:column="33">malloc<pos:position pos:line="59" pos:column="39"/></name> <argument_list pos:line="59" pos:column="40">(<argument><expr><name><name pos:line="59" pos:column="41">vl<pos:position pos:line="59" pos:column="43"/></name><operator pos:line="59" pos:column="43">.<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="44">values_len<pos:position pos:line="59" pos:column="54"/></name></name> <operator pos:line="59" pos:column="55">*<pos:position pos:line="59" pos:column="56"/></operator> <sizeof pos:line="59" pos:column="57">sizeof <argument_list pos:line="59" pos:column="64">(<argument><expr><name pos:line="59" pos:column="65">value_t<pos:position pos:line="59" pos:column="72"/></name></expr></argument>)<pos:position pos:line="59" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="59" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="75"/></expr_stmt>
	<if pos:line="60" pos:column="9">if <condition pos:line="60" pos:column="12">(<expr><name><name pos:line="60" pos:column="13">vl<pos:position pos:line="60" pos:column="15"/></name><operator pos:line="60" pos:column="15">.<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="16">values<pos:position pos:line="60" pos:column="22"/></name></name> <operator pos:line="60" pos:column="23">==<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="26">NULL<pos:position pos:line="60" pos:column="30"/></name></expr>)<pos:position pos:line="60" pos:column="31"/></condition><then pos:line="60" pos:column="31">
	<block pos:line="61" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="62" pos:column="17">fprintf<pos:position pos:line="62" pos:column="24"/></name> <argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">fh<pos:position pos:line="62" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="30">"-1 malloc failed."<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="51"/></expr_stmt>
		<return pos:line="63" pos:column="17">return <expr><operator pos:line="63" pos:column="24">(<pos:position pos:line="63" pos:column="25"/></operator><operator pos:line="63" pos:column="25">-<pos:position pos:line="63" pos:column="26"/></operator><literal type="number" pos:line="63" pos:column="26">1<pos:position pos:line="63" pos:column="27"/></literal><operator pos:line="63" pos:column="27">)<pos:position pos:line="63" pos:column="28"/></operator></expr>;<pos:position pos:line="63" pos:column="29"/></return>
	}<pos:position pos:line="64" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="66" pos:column="9">/* All the remaining fields are part of the optionlist. */</comment>
	<for pos:line="67" pos:column="9">for <control pos:line="67" pos:column="13">(<init><expr><name pos:line="67" pos:column="14">i<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="number" pos:line="67" pos:column="18">2<pos:position pos:line="67" pos:column="19"/></literal></expr>;<pos:position pos:line="67" pos:column="20"/></init> <condition><expr><name pos:line="67" pos:column="21">i<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">&lt;<pos:position pos:line="67" pos:column="27"/></operator> <name pos:line="67" pos:column="25">fields_num<pos:position pos:line="67" pos:column="35"/></name></expr>;<pos:position pos:line="67" pos:column="36"/></condition> <incr><expr><name pos:line="67" pos:column="37">i<pos:position pos:line="67" pos:column="38"/></name><operator pos:line="67" pos:column="38">++<pos:position pos:line="67" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="67" pos:column="41"/></control>
	<block pos:line="68" pos:column="9">{
		<if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><call><name pos:line="69" pos:column="21">strchr<pos:position pos:line="69" pos:column="27"/></name> <argument_list pos:line="69" pos:column="28">(<argument><expr><name><name pos:line="69" pos:column="29">fields<pos:position pos:line="69" pos:column="35"/></name><index pos:line="69" pos:column="35">[<expr><name pos:line="69" pos:column="36">i<pos:position pos:line="69" pos:column="37"/></name></expr>]<pos:position pos:line="69" pos:column="38"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="69" pos:column="40">':'<pos:position pos:line="69" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="44"/></argument_list></call> <operator pos:line="69" pos:column="45">!=<pos:position pos:line="69" pos:column="47"/></operator> <name pos:line="69" pos:column="48">NULL<pos:position pos:line="69" pos:column="52"/></name></expr>)<pos:position pos:line="69" pos:column="53"/></condition><then pos:line="69" pos:column="53">
		<block pos:line="70" pos:column="17">{
			<comment type="block" pos:line="71" pos:column="25">/* It's parse_value's job to write an error to `fh'.
			 * This is not the case with `parse_option below.
			 * Neither will write an success message. */</comment>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><call><name pos:line="74" pos:column="29">parse_value<pos:position pos:line="74" pos:column="40"/></name> <argument_list pos:line="74" pos:column="41">(<argument><expr><name pos:line="74" pos:column="42">ds<pos:position pos:line="74" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="74" pos:column="46">&amp;<pos:position pos:line="74" pos:column="51"/></operator><name pos:line="74" pos:column="47">vl<pos:position pos:line="74" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="51">type<pos:position pos:line="74" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="57">fh<pos:position pos:line="74" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="61">fields<pos:position pos:line="74" pos:column="67"/></name><index pos:line="74" pos:column="67">[<expr><name pos:line="74" pos:column="68">i<pos:position pos:line="74" pos:column="69"/></name></expr>]<pos:position pos:line="74" pos:column="70"/></index></name></expr></argument>)<pos:position pos:line="74" pos:column="71"/></argument_list></call> <operator pos:line="74" pos:column="72">!=<pos:position pos:line="74" pos:column="74"/></operator> <literal type="number" pos:line="74" pos:column="75">0<pos:position pos:line="74" pos:column="76"/></literal></expr>)<pos:position pos:line="74" pos:column="77"/></condition><then pos:line="74" pos:column="77">
				<block type="pseudo"><break pos:line="75" pos:column="33">break;<pos:position pos:line="75" pos:column="39"/></break></block></then></if>
		}<pos:position pos:line="76" pos:column="18"/></block></then>
		<elseif pos:line="77" pos:column="17">else <if pos:line="77" pos:column="22">if <condition pos:line="77" pos:column="25">(<expr><call><name pos:line="77" pos:column="26">strchr<pos:position pos:line="77" pos:column="32"/></name> <argument_list pos:line="77" pos:column="33">(<argument><expr><name><name pos:line="77" pos:column="34">fields<pos:position pos:line="77" pos:column="40"/></name><index pos:line="77" pos:column="40">[<expr><name pos:line="77" pos:column="41">i<pos:position pos:line="77" pos:column="42"/></name></expr>]<pos:position pos:line="77" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="77" pos:column="45">'='<pos:position pos:line="77" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="49"/></argument_list></call> <operator pos:line="77" pos:column="50">!=<pos:position pos:line="77" pos:column="52"/></operator> <name pos:line="77" pos:column="53">NULL<pos:position pos:line="77" pos:column="57"/></name></expr>)<pos:position pos:line="77" pos:column="58"/></condition><then pos:line="77" pos:column="58">
		<block pos:line="78" pos:column="17">{
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><call><name pos:line="79" pos:column="29">parse_option<pos:position pos:line="79" pos:column="41"/></name> <argument_list pos:line="79" pos:column="42">(<argument><expr><operator pos:line="79" pos:column="43">&amp;<pos:position pos:line="79" pos:column="48"/></operator><name pos:line="79" pos:column="44">vl<pos:position pos:line="79" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="48">fields<pos:position pos:line="79" pos:column="54"/></name><index pos:line="79" pos:column="54">[<expr><name pos:line="79" pos:column="55">i<pos:position pos:line="79" pos:column="56"/></name></expr>]<pos:position pos:line="79" pos:column="57"/></index></name></expr></argument>)<pos:position pos:line="79" pos:column="58"/></argument_list></call> <operator pos:line="79" pos:column="59">!=<pos:position pos:line="79" pos:column="61"/></operator> <literal type="number" pos:line="79" pos:column="62">0<pos:position pos:line="79" pos:column="63"/></literal></expr>)<pos:position pos:line="79" pos:column="64"/></condition><then pos:line="79" pos:column="64">
			<block pos:line="80" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="81" pos:column="33">fprintf<pos:position pos:line="81" pos:column="40"/></name> <argument_list pos:line="81" pos:column="41">(<argument><expr><name pos:line="81" pos:column="42">fh<pos:position pos:line="81" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="46">"-1 Error parsing option `%s'"<pos:position pos:line="81" pos:column="76"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="82" pos:column="49">fields<pos:position pos:line="82" pos:column="55"/></name><index pos:line="82" pos:column="55">[<expr><name pos:line="82" pos:column="56">i<pos:position pos:line="82" pos:column="57"/></name></expr>]<pos:position pos:line="82" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="60"/></expr_stmt>
				<break pos:line="83" pos:column="33">break;<pos:position pos:line="83" pos:column="39"/></break>
			}<pos:position pos:line="84" pos:column="26"/></block></then></if>
		}<pos:position pos:line="85" pos:column="18"/></block></then></if></elseif>
		<else pos:line="86" pos:column="17">else
		<block pos:line="87" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">WARNING<pos:position pos:line="88" pos:column="32"/></name> <argument_list pos:line="88" pos:column="33">(<argument><expr><literal type="string" pos:line="88" pos:column="34">"cmd putval: handle_putval: "<pos:position pos:line="88" pos:column="63"/></literal>
					<literal type="string" pos:line="89" pos:column="41">"Cannot parse field #%i `%s'; "<pos:position pos:line="89" pos:column="72"/></literal>
					<literal type="string" pos:line="90" pos:column="41">"Ignoring it.\n"<pos:position pos:line="90" pos:column="57"/></literal></expr></argument>,
					<argument><expr><name pos:line="91" pos:column="41">i<pos:position pos:line="91" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="44">fields<pos:position pos:line="91" pos:column="50"/></name><index pos:line="91" pos:column="50">[<expr><name pos:line="91" pos:column="51">i<pos:position pos:line="91" pos:column="52"/></name></expr>]<pos:position pos:line="91" pos:column="53"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="55"/></expr_stmt>
		}<pos:position pos:line="92" pos:column="18"/></block></else></if>
	}<pos:position pos:line="93" pos:column="10"/></block></for>
	<comment type="block" pos:line="94" pos:column="9">/* Done parsing the options. */</comment>

	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">i<pos:position pos:line="96" pos:column="14"/></name> <operator pos:line="96" pos:column="15">==<pos:position pos:line="96" pos:column="17"/></operator> <name pos:line="96" pos:column="18">fields_num<pos:position pos:line="96" pos:column="28"/></name></expr>)<pos:position pos:line="96" pos:column="29"/></condition><then pos:line="96" pos:column="29">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="17">fprintf<pos:position pos:line="97" pos:column="24"/></name> <argument_list pos:line="97" pos:column="25">(<argument><expr><name pos:line="97" pos:column="26">fh<pos:position pos:line="97" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="30">"0 Success\n"<pos:position pos:line="97" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="45"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="98" pos:column="9">fflush<pos:position pos:line="98" pos:column="15"/></name> <argument_list pos:line="98" pos:column="16">(<argument><expr><name pos:line="98" pos:column="17">fh<pos:position pos:line="98" pos:column="19"/></name></expr></argument>)<pos:position pos:line="98" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="100" pos:column="9">sfree<pos:position pos:line="100" pos:column="14"/></name> <argument_list pos:line="100" pos:column="15">(<argument><expr><name><name pos:line="100" pos:column="16">vl<pos:position pos:line="100" pos:column="18"/></name><operator pos:line="100" pos:column="18">.<pos:position pos:line="100" pos:column="19"/></operator><name pos:line="100" pos:column="19">values<pos:position pos:line="100" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="27"/></expr_stmt> 

	<return pos:line="102" pos:column="9">return <expr><operator pos:line="102" pos:column="16">(<pos:position pos:line="102" pos:column="17"/></operator><literal type="number" pos:line="102" pos:column="17">0<pos:position pos:line="102" pos:column="18"/></literal><operator pos:line="102" pos:column="18">)<pos:position pos:line="102" pos:column="19"/></operator></expr>;<pos:position pos:line="102" pos:column="20"/></return>
}<pos:position pos:line="103" pos:column="2"/></block></function></unit>

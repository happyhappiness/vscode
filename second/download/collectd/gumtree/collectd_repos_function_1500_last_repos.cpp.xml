<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1500_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_ipmi_thread_init<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">c_ipmi_instance_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">st<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list> <block pos:line="1" pos:column="54">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">ipmi_domain_id_t<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">domain_id<pos:position pos:line="2" pos:column="29"/></name></decl>;<pos:position pos:line="2" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name><name pos:line="5" pos:column="7">st<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">connaddr<pos:position pos:line="5" pos:column="19"/></name></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <block pos:line="5" pos:column="29">{
    <expr_stmt><expr><name pos:line="6" pos:column="5">status<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">ipmi_ip_setup_con<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(
        <argument><expr><operator pos:line="7" pos:column="9">&amp;<pos:position pos:line="7" pos:column="14"/></operator><name><name pos:line="7" pos:column="10">st<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">connaddr<pos:position pos:line="7" pos:column="22"/></name></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="24">&amp;<pos:position pos:line="7" pos:column="29"/></operator><operator pos:line="7" pos:column="25">(<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">char<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">*<pos:position pos:line="7" pos:column="32"/></operator><operator pos:line="7" pos:column="32">)<pos:position pos:line="7" pos:column="33"/></operator><block pos:line="7" pos:column="33">{<expr><name pos:line="7" pos:column="34">IPMI_LAN_STD_PORT_STR<pos:position pos:line="7" pos:column="55"/></name></expr>}<pos:position pos:line="7" pos:column="56"/></block></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="58">1<pos:position pos:line="7" pos:column="59"/></literal></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="61">st<pos:position pos:line="7" pos:column="63"/></name><operator pos:line="7" pos:column="63">-&gt;<pos:position pos:line="7" pos:column="68"/></operator><name pos:line="7" pos:column="65">authtype<pos:position pos:line="7" pos:column="73"/></name></name></expr></argument>,
        <argument><expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">unsigned<pos:position pos:line="8" pos:column="18"/></name> <name pos:line="8" pos:column="19">int<pos:position pos:line="8" pos:column="22"/></name><operator pos:line="8" pos:column="22">)<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">IPMI_PRIVILEGE_USER<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="44">st<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">-&gt;<pos:position pos:line="8" pos:column="51"/></operator><name pos:line="8" pos:column="48">username<pos:position pos:line="8" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="58">strlen<pos:position pos:line="8" pos:column="64"/></name><argument_list pos:line="8" pos:column="64">(<argument><expr><name><name pos:line="8" pos:column="65">st<pos:position pos:line="8" pos:column="67"/></name><operator pos:line="8" pos:column="67">-&gt;<pos:position pos:line="8" pos:column="72"/></operator><name pos:line="8" pos:column="69">username<pos:position pos:line="8" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr></argument>,
        <argument><expr><name><name pos:line="9" pos:column="9">st<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">password<pos:position pos:line="9" pos:column="21"/></name></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="23">strlen<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">st<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">password<pos:position pos:line="9" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="45">os_handler<pos:position pos:line="9" pos:column="55"/></name></expr></argument>,
        <comment type="block" pos:line="10" pos:column="9">/* user data = */</comment> <argument><expr><name pos:line="10" pos:column="27">NULL<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="33">&amp;<pos:position pos:line="10" pos:column="38"/></operator><name><name pos:line="10" pos:column="34">st<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">connection<pos:position pos:line="10" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">status<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21"> <block pos:line="11" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="12" pos:column="7">c_ipmi_error<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">st<pos:position pos:line="12" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="24">"ipmi_ip_setup_con"<pos:position pos:line="12" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">status<pos:position pos:line="12" pos:column="51"/></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
      <return pos:line="13" pos:column="7">return <expr><operator pos:line="13" pos:column="14">-<pos:position pos:line="13" pos:column="15"/></operator><literal type="number" pos:line="13" pos:column="15">1<pos:position pos:line="13" pos:column="16"/></literal></expr>;<pos:position pos:line="13" pos:column="17"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
  }<pos:position pos:line="15" pos:column="4"/></block></then> <else pos:line="15" pos:column="5">else <block pos:line="15" pos:column="10">{
    <expr_stmt><expr><name pos:line="16" pos:column="5">status<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">ipmi_smi_setup_con<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<comment type="block" pos:line="16" pos:column="33">/* if_num = */</comment> <argument><expr><literal type="number" pos:line="16" pos:column="48">0<pos:position pos:line="16" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">os_handler<pos:position pos:line="16" pos:column="61"/></name></expr></argument>,
                                <comment type="block" pos:line="17" pos:column="33">/* user data = */</comment> <argument><expr><name pos:line="17" pos:column="51">NULL<pos:position pos:line="17" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="57">&amp;<pos:position pos:line="17" pos:column="62"/></operator><name><name pos:line="17" pos:column="58">st<pos:position pos:line="17" pos:column="60"/></name><operator pos:line="17" pos:column="60">-&gt;<pos:position pos:line="17" pos:column="65"/></operator><name pos:line="17" pos:column="62">connection<pos:position pos:line="17" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="74"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">status<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <block pos:line="18" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">c_ipmi_error<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">st<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="24">"ipmi_smi_setup_con"<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="46">status<pos:position pos:line="19" pos:column="52"/></name></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
      <return pos:line="20" pos:column="7">return <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
  }<pos:position pos:line="22" pos:column="4"/></block></else></if>

  <decl_stmt><decl><type><name pos:line="24" pos:column="3">ipmi_open_option_t<pos:position pos:line="24" pos:column="21"/></name></type> <name><name pos:line="24" pos:column="22">opts<pos:position pos:line="24" pos:column="26"/></name><index pos:line="24" pos:column="26">[]<pos:position pos:line="24" pos:column="28"/></index></name> <init pos:line="24" pos:column="29">= <expr><block pos:line="24" pos:column="31">{
      <expr><block pos:line="25" pos:column="7">{<expr><operator pos:line="25" pos:column="8">.<pos:position pos:line="25" pos:column="9"/></operator><name pos:line="25" pos:column="9">option<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">IPMI_OPEN_OPTION_ALL<pos:position pos:line="25" pos:column="38"/></name></expr>, <expr><block pos:line="25" pos:column="40">{<expr><operator pos:line="25" pos:column="41">.<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="42">ival<pos:position pos:line="25" pos:column="46"/></name> <operator pos:line="25" pos:column="47">=<pos:position pos:line="25" pos:column="48"/></operator> <literal type="number" pos:line="25" pos:column="49">1<pos:position pos:line="25" pos:column="50"/></literal></expr>}<pos:position pos:line="25" pos:column="51"/></block></expr>}<pos:position pos:line="25" pos:column="52"/></block></expr>,
<cpp:ifdef pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">ifdef<pos:position pos:line="26" pos:column="7"/></cpp:directive> <name pos:line="26" pos:column="8">IPMI_OPEN_OPTION_USE_CACHE<pos:position pos:line="26" pos:column="34"/></name></cpp:ifdef>
      <comment type="block" pos:line="27" pos:column="7">/* OpenIPMI-2.0.17 and later: Disable SDR cache in local file */</comment>
      <expr><block pos:line="28" pos:column="7">{<expr><operator pos:line="28" pos:column="8">.<pos:position pos:line="28" pos:column="9"/></operator><name pos:line="28" pos:column="9">option<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <name pos:line="28" pos:column="18">IPMI_OPEN_OPTION_USE_CACHE<pos:position pos:line="28" pos:column="44"/></name></expr>, <expr><block pos:line="28" pos:column="46">{<expr><operator pos:line="28" pos:column="47">.<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">ival<pos:position pos:line="28" pos:column="52"/></name> <operator pos:line="28" pos:column="53">=<pos:position pos:line="28" pos:column="54"/></operator> <literal type="number" pos:line="28" pos:column="55">0<pos:position pos:line="28" pos:column="56"/></literal></expr>}<pos:position pos:line="28" pos:column="57"/></block></expr>}<pos:position pos:line="28" pos:column="58"/></block></expr>,
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="30" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="30" pos:column="5"/></decl_stmt>

  <comment type="block" pos:line="32" pos:column="3">/*
   * NOTE: Domain names must be unique. There is static `domains_list` common
   * to all threads inside lib/domain.c and some ops are done by name.
   */</comment>
  <expr_stmt><expr><name pos:line="36" pos:column="3">status<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">=<pos:position pos:line="36" pos:column="11"/></operator> <call><name pos:line="36" pos:column="12">ipmi_open_domain<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(
      <argument><expr><name><name pos:line="37" pos:column="7">st<pos:position pos:line="37" pos:column="9"/></name><operator pos:line="37" pos:column="9">-&gt;<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="11">name<pos:position pos:line="37" pos:column="15"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="17">&amp;<pos:position pos:line="37" pos:column="22"/></operator><name><name pos:line="37" pos:column="18">st<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">connection<pos:position pos:line="37" pos:column="32"/></name></name></expr></argument>, <comment type="block" pos:line="37" pos:column="34">/* num_con = */</comment> <argument><expr><literal type="number" pos:line="37" pos:column="50">1<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>,
      <argument><expr><name pos:line="38" pos:column="7">domain_connection_change_handler<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <comment type="block" pos:line="38" pos:column="41">/* user data = */</comment> <argument><expr><operator pos:line="38" pos:column="59">(<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">void<pos:position pos:line="38" pos:column="64"/></name> <operator pos:line="38" pos:column="65">*<pos:position pos:line="38" pos:column="66"/></operator><operator pos:line="38" pos:column="66">)<pos:position pos:line="38" pos:column="67"/></operator><name pos:line="38" pos:column="67">st<pos:position pos:line="38" pos:column="69"/></name></expr></argument>,
      <comment type="block" pos:line="39" pos:column="7">/* domain_fully_up_handler = */</comment> <argument><expr><name pos:line="39" pos:column="39">NULL<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <comment type="block" pos:line="39" pos:column="45">/* user data = */</comment> <argument><expr><name pos:line="39" pos:column="63">NULL<pos:position pos:line="39" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="69">opts<pos:position pos:line="39" pos:column="73"/></name></expr></argument>,
      <argument><expr><call><name pos:line="40" pos:column="7">STATIC_ARRAY_SIZE<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">opts<pos:position pos:line="40" pos:column="29"/></name></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="40" pos:column="32">&amp;<pos:position pos:line="40" pos:column="37"/></operator><name pos:line="40" pos:column="33">domain_id<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">status<pos:position pos:line="41" pos:column="13"/></name> <operator pos:line="41" pos:column="14">!=<pos:position pos:line="41" pos:column="16"/></operator> <literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr>)<pos:position pos:line="41" pos:column="19"/></condition><then pos:line="41" pos:column="19"> <block pos:line="41" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">c_ipmi_error<pos:position pos:line="42" pos:column="17"/></name><argument_list pos:line="42" pos:column="17">(<argument><expr><name pos:line="42" pos:column="18">st<pos:position pos:line="42" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="22">"ipmi_open_domain"<pos:position pos:line="42" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="42">status<pos:position pos:line="42" pos:column="48"/></name></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><operator pos:line="43" pos:column="12">-<pos:position pos:line="43" pos:column="13"/></operator><literal type="number" pos:line="43" pos:column="13">1<pos:position pos:line="43" pos:column="14"/></literal></expr>;<pos:position pos:line="43" pos:column="15"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <return pos:line="46" pos:column="3">return <expr><literal type="number" pos:line="46" pos:column="10">0<pos:position pos:line="46" pos:column="11"/></literal></expr>;<pos:position pos:line="46" pos:column="12"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

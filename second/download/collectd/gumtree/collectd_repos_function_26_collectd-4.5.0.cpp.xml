<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_26_collectd-4.5.0.cpp" pos:tabs="8"><function_decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_module<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">sys_wll_open<pos:position pos:line="2" pos:column="13"/></name> <parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">loader_data<pos:position pos:line="2" pos:column="26"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">filename<pos:position pos:line="2" pos:column="36"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_user_data<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">loader_data<pos:position pos:line="3" pos:column="30"/></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
     <decl_stmt><decl><type><specifier pos:line="4" pos:column="6">const<pos:position pos:line="4" pos:column="11"/></specifier> <name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">filename<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_dlhandle<pos:position pos:line="6" pos:column="14"/></name></type>	<name pos:line="6" pos:column="17">cur<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">lt_module<pos:position pos:line="7" pos:column="12"/></name></type>	<name pos:line="7" pos:column="17">module<pos:position pos:line="7" pos:column="23"/></name>	   <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="8" pos:column="3">const<pos:position pos:line="8" pos:column="8"/></specifier> <name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name>   <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">errormsg<pos:position pos:line="8" pos:column="25"/></name>   <init pos:line="8" pos:column="28">= <expr><literal type="number" pos:line="8" pos:column="30">0<pos:position pos:line="8" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">char<pos:position pos:line="9" pos:column="7"/></name>	       <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">searchname<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="number" pos:line="9" pos:column="30">0<pos:position pos:line="9" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">char<pos:position pos:line="10" pos:column="7"/></name>	       <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">ext<pos:position pos:line="10" pos:column="20"/></name></decl>;<pos:position pos:line="10" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">char<pos:position pos:line="11" pos:column="7"/></name></type>		<name><name pos:line="11" pos:column="17">self_name_buf<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><name pos:line="11" pos:column="31">MAX_PATH<pos:position pos:line="11" pos:column="39"/></name></expr>]<pos:position pos:line="11" pos:column="40"/></index></name></decl>;<pos:position pos:line="11" pos:column="41"/></decl_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><operator pos:line="13" pos:column="7">!<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">filename<pos:position pos:line="13" pos:column="16"/></name></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17">
    <block pos:line="14" pos:column="5">{
      <comment type="block" pos:line="15" pos:column="7">/* Get the name of main module */</comment>
      <expr_stmt><expr><operator pos:line="16" pos:column="7">*<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">self_name_buf<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">GetModuleFileName<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">NULL<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">self_name_buf<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="47">sizeof <argument_list pos:line="17" pos:column="54">(<argument><expr><name pos:line="17" pos:column="55">self_name_buf<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="71"/></expr_stmt>
      <expr_stmt><expr><name pos:line="18" pos:column="7">filename<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">ext<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <name pos:line="18" pos:column="24">self_name_buf<pos:position pos:line="18" pos:column="37"/></name></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then>
  <else pos:line="20" pos:column="3">else
    <block pos:line="21" pos:column="5">{
      <expr_stmt><expr><name pos:line="22" pos:column="7">ext<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <call><name pos:line="22" pos:column="13">strrchr<pos:position pos:line="22" pos:column="20"/></name> <argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">filename<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="22" pos:column="32">'.'<pos:position pos:line="22" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></else></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">ext<pos:position pos:line="25" pos:column="10"/></name></expr>)<pos:position pos:line="25" pos:column="11"/></condition><then pos:line="25" pos:column="11">
    <block pos:line="26" pos:column="5">{
      <comment type="block" pos:line="27" pos:column="7">/* FILENAME already has an extension. */</comment>
      <expr_stmt><expr><name pos:line="28" pos:column="7">searchname<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">lt_estrdup<pos:position pos:line="28" pos:column="30"/></name> <argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">filename<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then>
  <else pos:line="30" pos:column="3">else
    <block pos:line="31" pos:column="5">{
      <comment type="block" pos:line="32" pos:column="7">/* Append a `.' to stop Windows from adding an
	 implicit `.dll' extension. */</comment>
      <expr_stmt><expr><name pos:line="34" pos:column="7">searchname<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">=<pos:position pos:line="34" pos:column="19"/></operator> <call><name pos:line="34" pos:column="20">LT_EMALLOC<pos:position pos:line="34" pos:column="30"/></name> <argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">char<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="38">2<pos:position pos:line="34" pos:column="39"/></literal><operator pos:line="34" pos:column="39">+<pos:position pos:line="34" pos:column="40"/></operator> <call><name pos:line="34" pos:column="41">LT_STRLEN<pos:position pos:line="34" pos:column="50"/></name> <argument_list pos:line="34" pos:column="51">(<argument><expr><name pos:line="34" pos:column="52">filename<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="63"/></expr_stmt>
      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name pos:line="35" pos:column="11">searchname<pos:position pos:line="35" pos:column="21"/></name></expr>)<pos:position pos:line="35" pos:column="22"/></condition><then pos:line="35" pos:column="22">
	<block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="9">sprintf<pos:position pos:line="36" pos:column="16"/></name> <argument_list pos:line="36" pos:column="17">(<argument><expr><name pos:line="36" pos:column="18">searchname<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="30">"%s."<pos:position pos:line="36" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="37">filename<pos:position pos:line="36" pos:column="45"/></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="47"/></expr_stmt></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>
  <if pos:line="38" pos:column="3">if <condition pos:line="38" pos:column="6">(<expr><operator pos:line="38" pos:column="7">!<pos:position pos:line="38" pos:column="8"/></operator><name pos:line="38" pos:column="8">searchname<pos:position pos:line="38" pos:column="18"/></name></expr>)<pos:position pos:line="38" pos:column="19"/></condition><then pos:line="38" pos:column="19">
    <block type="pseudo"><return pos:line="39" pos:column="5">return <expr><literal type="number" pos:line="39" pos:column="12">0<pos:position pos:line="39" pos:column="13"/></literal></expr>;<pos:position pos:line="39" pos:column="14"/></return></block></then></if>

  <block pos:line="41" pos:column="3">{
    <comment type="block" pos:line="42" pos:column="5">/* Silence dialog from LoadLibrary on some failures.
       No way to get the error mode, but to set it,
       so set it twice to preserve any previous flags. */</comment>
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">UINT<pos:position pos:line="45" pos:column="9"/></name></type> <name pos:line="45" pos:column="10">errormode<pos:position pos:line="45" pos:column="19"/></name> <init pos:line="45" pos:column="20">= <expr><call><name pos:line="45" pos:column="22">SetErrorMode<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">SEM_FAILCRITICALERRORS<pos:position pos:line="45" pos:column="57"/></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="45" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">SetErrorMode<pos:position pos:line="46" pos:column="17"/></name><argument_list pos:line="46" pos:column="17">(<argument><expr><name pos:line="46" pos:column="18">errormode<pos:position pos:line="46" pos:column="27"/></name> <operator pos:line="46" pos:column="28">|<pos:position pos:line="46" pos:column="29"/></operator> <name pos:line="46" pos:column="30">SEM_FAILCRITICALERRORS<pos:position pos:line="46" pos:column="52"/></name></expr></argument>)<pos:position pos:line="46" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="54"/></expr_stmt>

<cpp:if pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">if<pos:position pos:line="48" pos:column="4"/></cpp:directive> <expr><call><name pos:line="48" pos:column="5">defined<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">__CYGWIN__<pos:position pos:line="48" pos:column="23"/></name></expr></argument>)<pos:position pos:line="48" pos:column="24"/></argument_list></call></expr></cpp:if>
    <block pos:line="49" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="50" pos:column="7">char<pos:position pos:line="50" pos:column="11"/></name></type> <name><name pos:line="50" pos:column="12">wpath<pos:position pos:line="50" pos:column="17"/></name><index pos:line="50" pos:column="17">[<expr><name pos:line="50" pos:column="18">MAX_PATH<pos:position pos:line="50" pos:column="26"/></name></expr>]<pos:position pos:line="50" pos:column="27"/></index></name></decl>;<pos:position pos:line="50" pos:column="28"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">cygwin_conv_to_full_win32_path<pos:position pos:line="51" pos:column="37"/></name> <argument_list pos:line="51" pos:column="38">(<argument><expr><name pos:line="51" pos:column="39">searchname<pos:position pos:line="51" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="51">wpath<pos:position pos:line="51" pos:column="56"/></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt>
      <expr_stmt><expr><name pos:line="52" pos:column="7">module<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">LoadLibrary<pos:position pos:line="52" pos:column="27"/></name> <argument_list pos:line="52" pos:column="28">(<argument><expr><name pos:line="52" pos:column="29">wpath<pos:position pos:line="52" pos:column="34"/></name></expr></argument>)<pos:position pos:line="52" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block>
<cpp:else pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">else<pos:position pos:line="54" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="55" pos:column="5">module<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <call><name pos:line="55" pos:column="14">LoadLibrary<pos:position pos:line="55" pos:column="25"/></name> <argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">searchname<pos:position pos:line="55" pos:column="37"/></name></expr></argument>)<pos:position pos:line="55" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="58" pos:column="5">/* Restore the error mode. */</comment>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">SetErrorMode<pos:position pos:line="59" pos:column="17"/></name><argument_list pos:line="59" pos:column="17">(<argument><expr><name pos:line="59" pos:column="18">errormode<pos:position pos:line="59" pos:column="27"/></name></expr></argument>)<pos:position pos:line="59" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="29"/></expr_stmt>
  }<pos:position pos:line="60" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="62" pos:column="3">LT_DLFREE<pos:position pos:line="62" pos:column="12"/></name> <argument_list pos:line="62" pos:column="13">(<argument><expr><name pos:line="62" pos:column="14">searchname<pos:position pos:line="62" pos:column="24"/></name></expr></argument>)<pos:position pos:line="62" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>

  <comment type="block" pos:line="64" pos:column="3">/* libltdl expects this function to fail if it is unable
     to physically load the library.  Sadly, LoadLibrary
     will search the loaded libraries for a match and return
     one of them if the path search load fails.

     We check whether LoadLibrary is returning a handle to
     an already loaded module, and simulate failure if we
     find one. */</comment>
  <expr_stmt><expr><call><name pos:line="72" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="72" pos:column="18"/></name> <argument_list pos:line="72" pos:column="19">()<pos:position pos:line="72" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name pos:line="73" pos:column="3">cur<pos:position pos:line="73" pos:column="6"/></name> <operator pos:line="73" pos:column="7">=<pos:position pos:line="73" pos:column="8"/></operator> <name pos:line="73" pos:column="9">handles<pos:position pos:line="73" pos:column="16"/></name></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>
  <while pos:line="74" pos:column="3">while <condition pos:line="74" pos:column="9">(<expr><name pos:line="74" pos:column="10">cur<pos:position pos:line="74" pos:column="13"/></name></expr>)<pos:position pos:line="74" pos:column="14"/></condition>
    <block pos:line="75" pos:column="5">{
      <if pos:line="76" pos:column="7">if <condition pos:line="76" pos:column="10">(<expr><operator pos:line="76" pos:column="11">!<pos:position pos:line="76" pos:column="12"/></operator><name><name pos:line="76" pos:column="12">cur<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">-&gt;<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="17">module<pos:position pos:line="76" pos:column="23"/></name></name></expr>)<pos:position pos:line="76" pos:column="24"/></condition><then pos:line="76" pos:column="24">
	<block pos:line="77" pos:column="9">{
	  <expr_stmt><expr><name pos:line="78" pos:column="11">cur<pos:position pos:line="78" pos:column="14"/></name> <operator pos:line="78" pos:column="15">=<pos:position pos:line="78" pos:column="16"/></operator> <literal type="number" pos:line="78" pos:column="17">0<pos:position pos:line="78" pos:column="18"/></literal></expr>;<pos:position pos:line="78" pos:column="19"/></expr_stmt>
	  <break pos:line="79" pos:column="11">break;<pos:position pos:line="79" pos:column="17"/></break>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>

      <if pos:line="82" pos:column="7">if <condition pos:line="82" pos:column="10">(<expr><name><name pos:line="82" pos:column="11">cur<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">module<pos:position pos:line="82" pos:column="22"/></name></name> <operator pos:line="82" pos:column="23">==<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">module<pos:position pos:line="82" pos:column="32"/></name></expr>)<pos:position pos:line="82" pos:column="33"/></condition><then pos:line="82" pos:column="33">
	<block pos:line="83" pos:column="9">{
	  <break pos:line="84" pos:column="11">break;<pos:position pos:line="84" pos:column="17"/></break>
	}<pos:position pos:line="85" pos:column="10"/></block></then></if>

      <expr_stmt><expr><name pos:line="87" pos:column="7">cur<pos:position pos:line="87" pos:column="10"/></name> <operator pos:line="87" pos:column="11">=<pos:position pos:line="87" pos:column="12"/></operator> <name><name pos:line="87" pos:column="13">cur<pos:position pos:line="87" pos:column="16"/></name><operator pos:line="87" pos:column="16">-&gt;<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="18">next<pos:position pos:line="87" pos:column="22"/></name></name></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="88" pos:column="4"/></block></while>
  <expr_stmt><expr><call><name pos:line="89" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="89" pos:column="20"/></name> <argument_list pos:line="89" pos:column="21">()<pos:position pos:line="89" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="24"/></expr_stmt>

  <if pos:line="91" pos:column="3">if <condition pos:line="91" pos:column="6">(<expr><name pos:line="91" pos:column="7">cur<pos:position pos:line="91" pos:column="10"/></name> <operator pos:line="91" pos:column="11">||<pos:position pos:line="91" pos:column="13"/></operator> <operator pos:line="91" pos:column="14">!<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="15">module<pos:position pos:line="91" pos:column="21"/></name></expr>)<pos:position pos:line="91" pos:column="22"/></condition><then pos:line="91" pos:column="22">
    <block pos:line="92" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="93" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="93" pos:column="26"/></name> <argument_list pos:line="93" pos:column="27">(<argument><expr><call><name pos:line="93" pos:column="28">LT_DLSTRERROR<pos:position pos:line="93" pos:column="41"/></name> <argument_list pos:line="93" pos:column="42">(<argument><expr><name pos:line="93" pos:column="43">CANNOT_OPEN<pos:position pos:line="93" pos:column="54"/></name></expr></argument>)<pos:position pos:line="93" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><name pos:line="94" pos:column="7">module<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <literal type="number" pos:line="94" pos:column="16">0<pos:position pos:line="94" pos:column="17"/></literal></expr>;<pos:position pos:line="94" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="95" pos:column="6"/></block></then></if>

  <return pos:line="97" pos:column="3">return <expr><name pos:line="97" pos:column="10">module<pos:position pos:line="97" pos:column="16"/></name></expr>;<pos:position pos:line="97" pos:column="17"/></return>
}<pos:position pos:line="98" pos:column="2"/></block></function_decl></unit>

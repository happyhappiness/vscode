<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2015_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sigrok_config<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">oconfig_item_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">ci<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<for pos:line="3" pos:column="9">for <control pos:line="3" pos:column="13">(<init><decl><type><name pos:line="3" pos:column="14">int<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">i<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></init> <condition><expr><name pos:line="3" pos:column="25">i<pos:position pos:line="3" pos:column="26"/></name> <operator pos:line="3" pos:column="27">&lt;<pos:position pos:line="3" pos:column="31"/></operator> <name><name pos:line="3" pos:column="29">ci<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">-&gt;<pos:position pos:line="3" pos:column="36"/></operator><name pos:line="3" pos:column="33">children_num<pos:position pos:line="3" pos:column="45"/></name></name></expr>;<pos:position pos:line="3" pos:column="46"/></condition> <incr><expr><name pos:line="3" pos:column="47">i<pos:position pos:line="3" pos:column="48"/></name><operator pos:line="3" pos:column="48">++<pos:position pos:line="3" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="51"/></control> <block pos:line="3" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="4" pos:column="17">oconfig_item_t<pos:position pos:line="4" pos:column="31"/></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">item<pos:position pos:line="4" pos:column="37"/></name> <init pos:line="4" pos:column="38">= <expr><name><name pos:line="4" pos:column="40">ci<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">children<pos:position pos:line="4" pos:column="52"/></name></name> <operator pos:line="4" pos:column="53">+<pos:position pos:line="4" pos:column="54"/></operator> <name pos:line="4" pos:column="55">i<pos:position pos:line="4" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="57"/></decl_stmt>
		<if pos:line="5" pos:column="17">if <condition pos:line="5" pos:column="20">(<expr><call><name pos:line="5" pos:column="21">strcasecmp<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><literal type="string" pos:line="5" pos:column="32">"LogLevel"<pos:position pos:line="5" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="44">item<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">-&gt;<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="50">key<pos:position pos:line="5" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call> <operator pos:line="5" pos:column="55">==<pos:position pos:line="5" pos:column="57"/></operator> <literal type="number" pos:line="5" pos:column="58">0<pos:position pos:line="5" pos:column="59"/></literal></expr>)<pos:position pos:line="5" pos:column="60"/></condition><then pos:line="5" pos:column="60"> <block pos:line="5" pos:column="61">{
			<decl_stmt><decl><type><name pos:line="6" pos:column="25">int<pos:position pos:line="6" pos:column="28"/></name></type> <name pos:line="6" pos:column="29">status<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="7" pos:column="25">int<pos:position pos:line="7" pos:column="28"/></name></type> <name pos:line="7" pos:column="29">tmp<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><operator pos:line="7" pos:column="35">-<pos:position pos:line="7" pos:column="36"/></operator><literal type="number" pos:line="7" pos:column="36">1<pos:position pos:line="7" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>

			<expr_stmt><expr><name pos:line="9" pos:column="25">status<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">=<pos:position pos:line="9" pos:column="33"/></operator> <call><name pos:line="9" pos:column="34">cf_util_get_int<pos:position pos:line="9" pos:column="49"/></name> <argument_list pos:line="9" pos:column="50">(<argument><expr><name pos:line="9" pos:column="51">item<pos:position pos:line="9" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="57">&amp;<pos:position pos:line="9" pos:column="62"/></operator><name pos:line="9" pos:column="58">tmp<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
			<if pos:line="10" pos:column="25">if <condition pos:line="10" pos:column="28">(<expr><name pos:line="10" pos:column="29">status<pos:position pos:line="10" pos:column="35"/></name> <operator pos:line="10" pos:column="36">!=<pos:position pos:line="10" pos:column="38"/></operator> <literal type="number" pos:line="10" pos:column="39">0<pos:position pos:line="10" pos:column="40"/></literal></expr>)<pos:position pos:line="10" pos:column="41"/></condition><then pos:line="10" pos:column="41">
				<block type="pseudo"><continue pos:line="11" pos:column="33">continue;<pos:position pos:line="11" pos:column="42"/></continue></block></then>
			<elseif pos:line="12" pos:column="25">else <if pos:line="12" pos:column="30">if <condition pos:line="12" pos:column="33">(<expr><operator pos:line="12" pos:column="34">(<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">tmp<pos:position pos:line="12" pos:column="38"/></name> <operator pos:line="12" pos:column="39">&lt;<pos:position pos:line="12" pos:column="43"/></operator> <literal type="number" pos:line="12" pos:column="41">0<pos:position pos:line="12" pos:column="42"/></literal><operator pos:line="12" pos:column="42">)<pos:position pos:line="12" pos:column="43"/></operator> <operator pos:line="12" pos:column="44">||<pos:position pos:line="12" pos:column="46"/></operator> <operator pos:line="12" pos:column="47">(<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="48">tmp<pos:position pos:line="12" pos:column="51"/></name> <operator pos:line="12" pos:column="52">&gt;<pos:position pos:line="12" pos:column="56"/></operator> <literal type="number" pos:line="12" pos:column="54">5<pos:position pos:line="12" pos:column="55"/></literal><operator pos:line="12" pos:column="55">)<pos:position pos:line="12" pos:column="56"/></operator></expr>)<pos:position pos:line="12" pos:column="57"/></condition><then pos:line="12" pos:column="57"> <block pos:line="12" pos:column="58">{
				<expr_stmt><expr><call><name pos:line="13" pos:column="33">ERROR<pos:position pos:line="13" pos:column="38"/></name> <argument_list pos:line="13" pos:column="39">(<argument><expr><literal type="string" pos:line="13" pos:column="40">"sigrok plugin: The \"LogLevel\" "<pos:position pos:line="13" pos:column="74"/></literal>
						<literal type="string" pos:line="14" pos:column="49">"configuration option expects "<pos:position pos:line="14" pos:column="80"/></literal>
						<literal type="string" pos:line="15" pos:column="49">"an integer between 0 and 5 "<pos:position pos:line="15" pos:column="78"/></literal>
						<literal type="string" pos:line="16" pos:column="49">"(inclusive); you provided %i."<pos:position pos:line="16" pos:column="80"/></literal></expr></argument>,
						<argument><expr><name pos:line="17" pos:column="49">tmp<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
				<continue pos:line="18" pos:column="33">continue;<pos:position pos:line="18" pos:column="42"/></continue>
			}<pos:position pos:line="19" pos:column="26"/></block></then></if></elseif></if>
			<expr_stmt><expr><name pos:line="20" pos:column="25">loglevel<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">=<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="36">tmp<pos:position pos:line="20" pos:column="39"/></name></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
		}<pos:position pos:line="21" pos:column="18"/></block></then> <elseif pos:line="21" pos:column="19">else <if pos:line="21" pos:column="24">if <condition pos:line="21" pos:column="27">(<expr><operator pos:line="21" pos:column="28">!<pos:position pos:line="21" pos:column="29"/></operator><call><name pos:line="21" pos:column="29">strcasecmp<pos:position pos:line="21" pos:column="39"/></name><argument_list pos:line="21" pos:column="39">(<argument><expr><name><name pos:line="21" pos:column="40">item<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">key<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="51">"Device"<pos:position pos:line="21" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="61"/></condition><then pos:line="21" pos:column="61">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="25">sigrok_config_device<pos:position pos:line="22" pos:column="45"/></name><argument_list pos:line="22" pos:column="45">(<argument><expr><name pos:line="22" pos:column="46">item<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt></block></then></if></elseif>
		<else pos:line="23" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="25">WARNING<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><literal type="string" pos:line="24" pos:column="33">"sigrok plugin: Invalid keyword \"%s\"."<pos:position pos:line="24" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="25" pos:column="41">item<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">key<pos:position pos:line="25" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt></block></else></if>
	}<pos:position pos:line="26" pos:column="10"/></block></for>

	<return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1206_collectd-4.8.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sockent_open<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">sockent_t<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">se<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="40"/></parameter_list> <comment type="block" pos:line="1" pos:column="41">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">addrinfo<pos:position pos:line="3" pos:column="24"/></name></name></type>  <name pos:line="3" pos:column="26">ai_hints<pos:position pos:line="3" pos:column="34"/></name></decl>;<pos:position pos:line="3" pos:column="35"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">addrinfo<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">ai_list<pos:position pos:line="4" pos:column="33"/></name></decl>, <modifier pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="36">ai_ptr<pos:position pos:line="4" pos:column="42"/></name></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>              <name pos:line="5" pos:column="26">ai_return<pos:position pos:line="5" pos:column="35"/></name></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">char<pos:position pos:line="7" pos:column="19"/></name> <modifier pos:line="7" pos:column="20">*<pos:position pos:line="7" pos:column="21"/></modifier></type><name pos:line="7" pos:column="21">node<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">service<pos:position pos:line="8" pos:column="28"/></name></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">se<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">==<pos:position pos:line="10" pos:column="18"/></operator> <name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr>)<pos:position pos:line="10" pos:column="24"/></condition><then pos:line="10" pos:column="24">
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><operator pos:line="11" pos:column="25">-<pos:position pos:line="11" pos:column="26"/></operator><literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal><operator pos:line="11" pos:column="27">)<pos:position pos:line="11" pos:column="28"/></operator></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

	<comment type="block" pos:line="13" pos:column="9">/* Set up the security structures. */</comment>
<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">HAVE_LIBGCRYPT<pos:position pos:line="14" pos:column="19"/></name></expr></cpp:if> <comment type="block" pos:line="14" pos:column="20">/* {{{ */</comment>
	<if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><name pos:line="15" pos:column="13">se<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">type<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">==<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">SOCKENT_TYPE_CLIENT<pos:position pos:line="15" pos:column="44"/></name></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45">
	<block pos:line="16" pos:column="9">{
		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name><name pos:line="17" pos:column="21">se<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">data<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">client<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">.<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="37">security_level<pos:position pos:line="17" pos:column="51"/></name></name> <operator pos:line="17" pos:column="52">&gt;<pos:position pos:line="17" pos:column="56"/></operator> <name pos:line="17" pos:column="54">SECURITY_LEVEL_NONE<pos:position pos:line="17" pos:column="73"/></name></expr>)<pos:position pos:line="17" pos:column="74"/></condition><then pos:line="17" pos:column="74">
		<block pos:line="18" pos:column="17">{
			<if pos:line="19" pos:column="25">if <condition pos:line="19" pos:column="28">(<expr><operator pos:line="19" pos:column="29">(<pos:position pos:line="19" pos:column="30"/></operator><name><name pos:line="19" pos:column="30">se<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">-&gt;<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="34">data<pos:position pos:line="19" pos:column="38"/></name><operator pos:line="19" pos:column="38">.<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">client<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">username<pos:position pos:line="19" pos:column="54"/></name></name> <operator pos:line="19" pos:column="55">==<pos:position pos:line="19" pos:column="57"/></operator> <name pos:line="19" pos:column="58">NULL<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">)<pos:position pos:line="19" pos:column="63"/></operator>
					<operator pos:line="20" pos:column="41">||<pos:position pos:line="20" pos:column="43"/></operator> <operator pos:line="20" pos:column="44">(<pos:position pos:line="20" pos:column="45"/></operator><name><name pos:line="20" pos:column="45">se<pos:position pos:line="20" pos:column="47"/></name><operator pos:line="20" pos:column="47">-&gt;<pos:position pos:line="20" pos:column="52"/></operator><name pos:line="20" pos:column="49">data<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">.<pos:position pos:line="20" pos:column="54"/></operator><name pos:line="20" pos:column="54">client<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">.<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="61">password<pos:position pos:line="20" pos:column="69"/></name></name> <operator pos:line="20" pos:column="70">==<pos:position pos:line="20" pos:column="72"/></operator> <name pos:line="20" pos:column="73">NULL<pos:position pos:line="20" pos:column="77"/></name><operator pos:line="20" pos:column="77">)<pos:position pos:line="20" pos:column="78"/></operator></expr>)<pos:position pos:line="20" pos:column="79"/></condition><then pos:line="20" pos:column="79">
			<block pos:line="21" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="22" pos:column="33">ERROR<pos:position pos:line="22" pos:column="38"/></name> <argument_list pos:line="22" pos:column="39">(<argument><expr><literal type="string" pos:line="22" pos:column="40">"network plugin: Client socket with "<pos:position pos:line="22" pos:column="77"/></literal>
						<literal type="string" pos:line="23" pos:column="49">"security requested, but no "<pos:position pos:line="23" pos:column="78"/></literal>
						<literal type="string" pos:line="24" pos:column="49">"credentials are configured."<pos:position pos:line="24" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="80"/></expr_stmt>
				<return pos:line="25" pos:column="33">return <expr><operator pos:line="25" pos:column="40">(<pos:position pos:line="25" pos:column="41"/></operator><operator pos:line="25" pos:column="41">-<pos:position pos:line="25" pos:column="42"/></operator><literal type="number" pos:line="25" pos:column="42">1<pos:position pos:line="25" pos:column="43"/></literal><operator pos:line="25" pos:column="43">)<pos:position pos:line="25" pos:column="44"/></operator></expr>;<pos:position pos:line="25" pos:column="45"/></return>
			}<pos:position pos:line="26" pos:column="26"/></block></then></if>
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">gcry_md_hash_buffer<pos:position pos:line="27" pos:column="44"/></name> <argument_list pos:line="27" pos:column="45">(<argument><expr><name pos:line="27" pos:column="46">GCRY_MD_SHA256<pos:position pos:line="27" pos:column="60"/></name></expr></argument>,
					<argument><expr><name><name pos:line="28" pos:column="41">se<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">-&gt;<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="45">data<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">client<pos:position pos:line="28" pos:column="56"/></name><operator pos:line="28" pos:column="56">.<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="57">password_hash<pos:position pos:line="28" pos:column="70"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="29" pos:column="41">se<pos:position pos:line="29" pos:column="43"/></name><operator pos:line="29" pos:column="43">-&gt;<pos:position pos:line="29" pos:column="48"/></operator><name pos:line="29" pos:column="45">data<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">.<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">client<pos:position pos:line="29" pos:column="56"/></name><operator pos:line="29" pos:column="56">.<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="57">password<pos:position pos:line="29" pos:column="65"/></name></name></expr></argument>,
					<argument><expr><call><name pos:line="30" pos:column="41">strlen<pos:position pos:line="30" pos:column="47"/></name> <argument_list pos:line="30" pos:column="48">(<argument><expr><name><name pos:line="30" pos:column="49">se<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">-&gt;<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="53">data<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">.<pos:position pos:line="30" pos:column="58"/></operator><name pos:line="30" pos:column="58">client<pos:position pos:line="30" pos:column="64"/></name><operator pos:line="30" pos:column="64">.<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="65">password<pos:position pos:line="30" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="76"/></expr_stmt>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>
	}<pos:position pos:line="32" pos:column="10"/></block></then>
	<else pos:line="33" pos:column="9">else <comment type="block" pos:line="33" pos:column="14">/* (se-&gt;type == SOCKENT_TYPE_SERVER) */</comment>
	<block pos:line="34" pos:column="9">{
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">se<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">data<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">.<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">server<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">.<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">security_level<pos:position pos:line="35" pos:column="51"/></name></name> <operator pos:line="35" pos:column="52">&gt;<pos:position pos:line="35" pos:column="56"/></operator> <name pos:line="35" pos:column="54">SECURITY_LEVEL_NONE<pos:position pos:line="35" pos:column="73"/></name></expr>)<pos:position pos:line="35" pos:column="74"/></condition><then pos:line="35" pos:column="74">
		<block pos:line="36" pos:column="17">{
			<if pos:line="37" pos:column="25">if <condition pos:line="37" pos:column="28">(<expr><name><name pos:line="37" pos:column="29">se<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">data<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">.<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">server<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">.<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">auth_file<pos:position pos:line="37" pos:column="54"/></name></name> <operator pos:line="37" pos:column="55">==<pos:position pos:line="37" pos:column="57"/></operator> <name pos:line="37" pos:column="58">NULL<pos:position pos:line="37" pos:column="62"/></name></expr>)<pos:position pos:line="37" pos:column="63"/></condition><then pos:line="37" pos:column="63">
			<block pos:line="38" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="39" pos:column="33">ERROR<pos:position pos:line="39" pos:column="38"/></name> <argument_list pos:line="39" pos:column="39">(<argument><expr><literal type="string" pos:line="39" pos:column="40">"network plugin: Server socket with "<pos:position pos:line="39" pos:column="77"/></literal>
						<literal type="string" pos:line="40" pos:column="49">"security requested, but no "<pos:position pos:line="40" pos:column="78"/></literal>
						<literal type="string" pos:line="41" pos:column="49">"password file is configured."<pos:position pos:line="41" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="81"/></expr_stmt>
				<return pos:line="42" pos:column="33">return <expr><operator pos:line="42" pos:column="40">(<pos:position pos:line="42" pos:column="41"/></operator><operator pos:line="42" pos:column="41">-<pos:position pos:line="42" pos:column="42"/></operator><literal type="number" pos:line="42" pos:column="42">1<pos:position pos:line="42" pos:column="43"/></literal><operator pos:line="42" pos:column="43">)<pos:position pos:line="42" pos:column="44"/></operator></expr>;<pos:position pos:line="42" pos:column="45"/></return>
			}<pos:position pos:line="43" pos:column="26"/></block></then></if>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">se<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">data<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">.<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">server<pos:position pos:line="45" pos:column="36"/></name><operator pos:line="45" pos:column="36">.<pos:position pos:line="45" pos:column="37"/></operator><name pos:line="45" pos:column="37">auth_file<pos:position pos:line="45" pos:column="46"/></name></name> <operator pos:line="45" pos:column="47">!=<pos:position pos:line="45" pos:column="49"/></operator> <name pos:line="45" pos:column="50">NULL<pos:position pos:line="45" pos:column="54"/></name></expr>)<pos:position pos:line="45" pos:column="55"/></condition><then pos:line="45" pos:column="55">
		<block pos:line="46" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="47" pos:column="25">se<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">-&gt;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="29">data<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">.<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">server<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">.<pos:position pos:line="47" pos:column="41"/></operator><name pos:line="47" pos:column="41">userdb<pos:position pos:line="47" pos:column="47"/></name></name> <operator pos:line="47" pos:column="48">=<pos:position pos:line="47" pos:column="49"/></operator> <call><name pos:line="47" pos:column="50">fbh_create<pos:position pos:line="47" pos:column="60"/></name> <argument_list pos:line="47" pos:column="61">(<argument><expr><name><name pos:line="47" pos:column="62">se<pos:position pos:line="47" pos:column="64"/></name><operator pos:line="47" pos:column="64">-&gt;<pos:position pos:line="47" pos:column="69"/></operator><name pos:line="47" pos:column="66">data<pos:position pos:line="47" pos:column="70"/></name><operator pos:line="47" pos:column="70">.<pos:position pos:line="47" pos:column="71"/></operator><name pos:line="47" pos:column="71">server<pos:position pos:line="47" pos:column="77"/></name><operator pos:line="47" pos:column="77">.<pos:position pos:line="47" pos:column="78"/></operator><name pos:line="47" pos:column="78">auth_file<pos:position pos:line="47" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="89"/></expr_stmt>
			<if pos:line="48" pos:column="25">if <condition pos:line="48" pos:column="28">(<expr><name><name pos:line="48" pos:column="29">se<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">data<pos:position pos:line="48" pos:column="37"/></name><operator pos:line="48" pos:column="37">.<pos:position pos:line="48" pos:column="38"/></operator><name pos:line="48" pos:column="38">server<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">.<pos:position pos:line="48" pos:column="45"/></operator><name pos:line="48" pos:column="45">userdb<pos:position pos:line="48" pos:column="51"/></name></name> <operator pos:line="48" pos:column="52">==<pos:position pos:line="48" pos:column="54"/></operator> <name pos:line="48" pos:column="55">NULL<pos:position pos:line="48" pos:column="59"/></name></expr>)<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60">
			<block pos:line="49" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="50" pos:column="33">ERROR<pos:position pos:line="50" pos:column="38"/></name> <argument_list pos:line="50" pos:column="39">(<argument><expr><literal type="string" pos:line="50" pos:column="40">"network plugin: Reading password file "<pos:position pos:line="50" pos:column="80"/></literal>
						<literal type="string" pos:line="51" pos:column="49">"`%s' failed."<pos:position pos:line="51" pos:column="63"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="52" pos:column="49">se<pos:position pos:line="52" pos:column="51"/></name><operator pos:line="52" pos:column="51">-&gt;<pos:position pos:line="52" pos:column="56"/></operator><name pos:line="52" pos:column="53">data<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">.<pos:position pos:line="52" pos:column="58"/></operator><name pos:line="52" pos:column="58">server<pos:position pos:line="52" pos:column="64"/></name><operator pos:line="52" pos:column="64">.<pos:position pos:line="52" pos:column="65"/></operator><name pos:line="52" pos:column="65">auth_file<pos:position pos:line="52" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="76"/></expr_stmt>
				<if pos:line="53" pos:column="33">if <condition pos:line="53" pos:column="36">(<expr><name><name pos:line="53" pos:column="37">se<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">-&gt;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="41">data<pos:position pos:line="53" pos:column="45"/></name><operator pos:line="53" pos:column="45">.<pos:position pos:line="53" pos:column="46"/></operator><name pos:line="53" pos:column="46">server<pos:position pos:line="53" pos:column="52"/></name><operator pos:line="53" pos:column="52">.<pos:position pos:line="53" pos:column="53"/></operator><name pos:line="53" pos:column="53">security_level<pos:position pos:line="53" pos:column="67"/></name></name> <operator pos:line="53" pos:column="68">&gt;<pos:position pos:line="53" pos:column="72"/></operator> <name pos:line="53" pos:column="70">SECURITY_LEVEL_NONE<pos:position pos:line="53" pos:column="89"/></name></expr>)<pos:position pos:line="53" pos:column="90"/></condition><then pos:line="53" pos:column="90">
					<block type="pseudo"><return pos:line="54" pos:column="41">return <expr><operator pos:line="54" pos:column="48">(<pos:position pos:line="54" pos:column="49"/></operator><operator pos:line="54" pos:column="49">-<pos:position pos:line="54" pos:column="50"/></operator><literal type="number" pos:line="54" pos:column="50">1<pos:position pos:line="54" pos:column="51"/></literal><operator pos:line="54" pos:column="51">)<pos:position pos:line="54" pos:column="52"/></operator></expr>;<pos:position pos:line="54" pos:column="53"/></return></block></then></if>
			}<pos:position pos:line="55" pos:column="26"/></block></then></if>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if>
	}<pos:position pos:line="57" pos:column="10"/></block></else></if>
<cpp:endif pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">endif<pos:position pos:line="58" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="58" pos:column="8">/* }}} HAVE_LIBGCRYPT */</comment>

        <expr_stmt><expr><name pos:line="60" pos:column="9">node<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">=<pos:position pos:line="60" pos:column="15"/></operator> <name><name pos:line="60" pos:column="16">se<pos:position pos:line="60" pos:column="18"/></name><operator pos:line="60" pos:column="18">-&gt;<pos:position pos:line="60" pos:column="23"/></operator><name pos:line="60" pos:column="20">node<pos:position pos:line="60" pos:column="24"/></name></name></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">service<pos:position pos:line="61" pos:column="16"/></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <name><name pos:line="61" pos:column="19">se<pos:position pos:line="61" pos:column="21"/></name><operator pos:line="61" pos:column="21">-&gt;<pos:position pos:line="61" pos:column="26"/></operator><name pos:line="61" pos:column="23">service<pos:position pos:line="61" pos:column="30"/></name></name></expr>;<pos:position pos:line="61" pos:column="31"/></expr_stmt>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">service<pos:position pos:line="63" pos:column="20"/></name> <operator pos:line="63" pos:column="21">==<pos:position pos:line="63" pos:column="23"/></operator> <name pos:line="63" pos:column="24">NULL<pos:position pos:line="63" pos:column="28"/></name></expr>)<pos:position pos:line="63" pos:column="29"/></condition><then pos:line="63" pos:column="29">
          <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="11">service<pos:position pos:line="64" pos:column="18"/></name> <operator pos:line="64" pos:column="19">=<pos:position pos:line="64" pos:column="20"/></operator> <name pos:line="64" pos:column="21">NET_DEFAULT_PORT<pos:position pos:line="64" pos:column="37"/></name></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="66" pos:column="9">DEBUG<pos:position pos:line="66" pos:column="14"/></name> <argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="string" pos:line="66" pos:column="16">"network plugin: sockent_open: node = %s; service = %s;"<pos:position pos:line="66" pos:column="72"/></literal></expr></argument>,
            <argument><expr><name pos:line="67" pos:column="13">node<pos:position pos:line="67" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="19">service<pos:position pos:line="67" pos:column="26"/></name></expr></argument>)<pos:position pos:line="67" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="69" pos:column="9">memset<pos:position pos:line="69" pos:column="15"/></name> <argument_list pos:line="69" pos:column="16">(<argument><expr><operator pos:line="69" pos:column="17">&amp;<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="18">ai_hints<pos:position pos:line="69" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="28">0<pos:position pos:line="69" pos:column="29"/></literal></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="31">sizeof <argument_list pos:line="69" pos:column="38">(<argument><expr><name pos:line="69" pos:column="39">ai_hints<pos:position pos:line="69" pos:column="47"/></name></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="50"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">ai_hints<pos:position pos:line="70" pos:column="17"/></name><operator pos:line="70" pos:column="17">.<pos:position pos:line="70" pos:column="18"/></operator><name pos:line="70" pos:column="18">ai_flags<pos:position pos:line="70" pos:column="26"/></name></name>  <operator pos:line="70" pos:column="28">=<pos:position pos:line="70" pos:column="29"/></operator> <literal type="number" pos:line="70" pos:column="30">0<pos:position pos:line="70" pos:column="31"/></literal></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>
<cpp:ifdef pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">ifdef<pos:position pos:line="71" pos:column="7"/></cpp:directive> <name pos:line="71" pos:column="8">AI_PASSIVE<pos:position pos:line="71" pos:column="18"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="72" pos:column="9">ai_hints<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">.<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">ai_flags<pos:position pos:line="72" pos:column="26"/></name></name> <operator pos:line="72" pos:column="27">|=<pos:position pos:line="72" pos:column="29"/></operator> <name pos:line="72" pos:column="30">AI_PASSIVE<pos:position pos:line="72" pos:column="40"/></name></expr>;<pos:position pos:line="72" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">endif<pos:position pos:line="73" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:ifdef pos:line="74" pos:column="1">#<cpp:directive pos:line="74" pos:column="2">ifdef<pos:position pos:line="74" pos:column="7"/></cpp:directive> <name pos:line="74" pos:column="8">AI_ADDRCONFIG<pos:position pos:line="74" pos:column="21"/></name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="75" pos:column="9">ai_hints<pos:position pos:line="75" pos:column="17"/></name><operator pos:line="75" pos:column="17">.<pos:position pos:line="75" pos:column="18"/></operator><name pos:line="75" pos:column="18">ai_flags<pos:position pos:line="75" pos:column="26"/></name></name> <operator pos:line="75" pos:column="27">|=<pos:position pos:line="75" pos:column="29"/></operator> <name pos:line="75" pos:column="30">AI_ADDRCONFIG<pos:position pos:line="75" pos:column="43"/></name></expr>;<pos:position pos:line="75" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif<pos:position pos:line="76" pos:column="7"/></cpp:directive></cpp:endif>
	<expr_stmt><expr><name><name pos:line="77" pos:column="9">ai_hints<pos:position pos:line="77" pos:column="17"/></name><operator pos:line="77" pos:column="17">.<pos:position pos:line="77" pos:column="18"/></operator><name pos:line="77" pos:column="18">ai_family<pos:position pos:line="77" pos:column="27"/></name></name>   <operator pos:line="77" pos:column="30">=<pos:position pos:line="77" pos:column="31"/></operator> <name pos:line="77" pos:column="32">AF_UNSPEC<pos:position pos:line="77" pos:column="41"/></name></expr>;<pos:position pos:line="77" pos:column="42"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="78" pos:column="9">ai_hints<pos:position pos:line="78" pos:column="17"/></name><operator pos:line="78" pos:column="17">.<pos:position pos:line="78" pos:column="18"/></operator><name pos:line="78" pos:column="18">ai_socktype<pos:position pos:line="78" pos:column="29"/></name></name> <operator pos:line="78" pos:column="30">=<pos:position pos:line="78" pos:column="31"/></operator> <name pos:line="78" pos:column="32">SOCK_DGRAM<pos:position pos:line="78" pos:column="42"/></name></expr>;<pos:position pos:line="78" pos:column="43"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="79" pos:column="9">ai_hints<pos:position pos:line="79" pos:column="17"/></name><operator pos:line="79" pos:column="17">.<pos:position pos:line="79" pos:column="18"/></operator><name pos:line="79" pos:column="18">ai_protocol<pos:position pos:line="79" pos:column="29"/></name></name> <operator pos:line="79" pos:column="30">=<pos:position pos:line="79" pos:column="31"/></operator> <name pos:line="79" pos:column="32">IPPROTO_UDP<pos:position pos:line="79" pos:column="43"/></name></expr>;<pos:position pos:line="79" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name pos:line="81" pos:column="9">ai_return<pos:position pos:line="81" pos:column="18"/></name> <operator pos:line="81" pos:column="19">=<pos:position pos:line="81" pos:column="20"/></operator> <call><name pos:line="81" pos:column="21">getaddrinfo<pos:position pos:line="81" pos:column="32"/></name> <argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">node<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="40">service<pos:position pos:line="81" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="49">&amp;<pos:position pos:line="81" pos:column="54"/></operator><name pos:line="81" pos:column="50">ai_hints<pos:position pos:line="81" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="81" pos:column="60">&amp;<pos:position pos:line="81" pos:column="65"/></operator><name pos:line="81" pos:column="61">ai_list<pos:position pos:line="81" pos:column="68"/></name></expr></argument>)<pos:position pos:line="81" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="70"/></expr_stmt>
	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name pos:line="82" pos:column="13">ai_return<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">!=<pos:position pos:line="82" pos:column="25"/></operator> <literal type="number" pos:line="82" pos:column="26">0<pos:position pos:line="82" pos:column="27"/></literal></expr>)<pos:position pos:line="82" pos:column="28"/></condition><then pos:line="82" pos:column="28">
	<block pos:line="83" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">ERROR<pos:position pos:line="84" pos:column="22"/></name> <argument_list pos:line="84" pos:column="23">(<argument><expr><literal type="string" pos:line="84" pos:column="24">"network plugin: getaddrinfo (%s, %s) failed: %s"<pos:position pos:line="84" pos:column="73"/></literal></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="85" pos:column="33">(<pos:position pos:line="85" pos:column="34"/></operator><name><name pos:line="85" pos:column="34">se<pos:position pos:line="85" pos:column="36"/></name><operator pos:line="85" pos:column="36">-&gt;<pos:position pos:line="85" pos:column="41"/></operator><name pos:line="85" pos:column="38">node<pos:position pos:line="85" pos:column="42"/></name></name> <operator pos:line="85" pos:column="43">==<pos:position pos:line="85" pos:column="45"/></operator> <name pos:line="85" pos:column="46">NULL<pos:position pos:line="85" pos:column="50"/></name><operator pos:line="85" pos:column="50">)<pos:position pos:line="85" pos:column="51"/></operator></expr> ?<pos:position pos:line="85" pos:column="53"/></condition><then pos:line="85" pos:column="53"> <expr><literal type="string" pos:line="85" pos:column="54">"(null)"<pos:position pos:line="85" pos:column="62"/></literal></expr> <pos:position pos:line="85" pos:column="63"/></then><else pos:line="85" pos:column="63">: <expr><name><name pos:line="85" pos:column="65">se<pos:position pos:line="85" pos:column="67"/></name><operator pos:line="85" pos:column="67">-&gt;<pos:position pos:line="85" pos:column="72"/></operator><name pos:line="85" pos:column="69">node<pos:position pos:line="85" pos:column="73"/></name></name></expr></else></ternary></expr></argument>,
				<argument><expr><ternary><condition><expr><operator pos:line="86" pos:column="33">(<pos:position pos:line="86" pos:column="34"/></operator><name><name pos:line="86" pos:column="34">se<pos:position pos:line="86" pos:column="36"/></name><operator pos:line="86" pos:column="36">-&gt;<pos:position pos:line="86" pos:column="41"/></operator><name pos:line="86" pos:column="38">service<pos:position pos:line="86" pos:column="45"/></name></name> <operator pos:line="86" pos:column="46">==<pos:position pos:line="86" pos:column="48"/></operator> <name pos:line="86" pos:column="49">NULL<pos:position pos:line="86" pos:column="53"/></name><operator pos:line="86" pos:column="53">)<pos:position pos:line="86" pos:column="54"/></operator></expr> ?<pos:position pos:line="86" pos:column="56"/></condition><then pos:line="86" pos:column="56"> <expr><literal type="string" pos:line="86" pos:column="57">"(null)"<pos:position pos:line="86" pos:column="65"/></literal></expr> <pos:position pos:line="86" pos:column="66"/></then><else pos:line="86" pos:column="66">: <expr><name><name pos:line="86" pos:column="68">se<pos:position pos:line="86" pos:column="70"/></name><operator pos:line="86" pos:column="70">-&gt;<pos:position pos:line="86" pos:column="75"/></operator><name pos:line="86" pos:column="72">service<pos:position pos:line="86" pos:column="79"/></name></name></expr></else></ternary></expr></argument>,
				<argument><expr><call><name pos:line="87" pos:column="33">gai_strerror<pos:position pos:line="87" pos:column="45"/></name> <argument_list pos:line="87" pos:column="46">(<argument><expr><name pos:line="87" pos:column="47">ai_return<pos:position pos:line="87" pos:column="56"/></name></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="59"/></expr_stmt>
		<return pos:line="88" pos:column="17">return <expr><operator pos:line="88" pos:column="24">(<pos:position pos:line="88" pos:column="25"/></operator><operator pos:line="88" pos:column="25">-<pos:position pos:line="88" pos:column="26"/></operator><literal type="number" pos:line="88" pos:column="26">1<pos:position pos:line="88" pos:column="27"/></literal><operator pos:line="88" pos:column="27">)<pos:position pos:line="88" pos:column="28"/></operator></expr>;<pos:position pos:line="88" pos:column="29"/></return>
	}<pos:position pos:line="89" pos:column="10"/></block></then></if>

	<for pos:line="91" pos:column="9">for <control pos:line="91" pos:column="13">(<init><expr><name pos:line="91" pos:column="14">ai_ptr<pos:position pos:line="91" pos:column="20"/></name> <operator pos:line="91" pos:column="21">=<pos:position pos:line="91" pos:column="22"/></operator> <name pos:line="91" pos:column="23">ai_list<pos:position pos:line="91" pos:column="30"/></name></expr>;<pos:position pos:line="91" pos:column="31"/></init> <condition><expr><name pos:line="91" pos:column="32">ai_ptr<pos:position pos:line="91" pos:column="38"/></name> <operator pos:line="91" pos:column="39">!=<pos:position pos:line="91" pos:column="41"/></operator> <name pos:line="91" pos:column="42">NULL<pos:position pos:line="91" pos:column="46"/></name></expr>;<pos:position pos:line="91" pos:column="47"/></condition> <incr><expr><name pos:line="91" pos:column="48">ai_ptr<pos:position pos:line="91" pos:column="54"/></name> <operator pos:line="91" pos:column="55">=<pos:position pos:line="91" pos:column="56"/></operator> <name><name pos:line="91" pos:column="57">ai_ptr<pos:position pos:line="91" pos:column="63"/></name><operator pos:line="91" pos:column="63">-&gt;<pos:position pos:line="91" pos:column="68"/></operator><name pos:line="91" pos:column="65">ai_next<pos:position pos:line="91" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="91" pos:column="73"/></control>
	<block pos:line="92" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="93" pos:column="17">int<pos:position pos:line="93" pos:column="20"/></name></type> <name pos:line="93" pos:column="21">status<pos:position pos:line="93" pos:column="27"/></name></decl>;<pos:position pos:line="93" pos:column="28"/></decl_stmt>

		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name><name pos:line="95" pos:column="21">se<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">-&gt;<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="25">type<pos:position pos:line="95" pos:column="29"/></name></name> <operator pos:line="95" pos:column="30">==<pos:position pos:line="95" pos:column="32"/></operator> <name pos:line="95" pos:column="33">SOCKENT_TYPE_SERVER<pos:position pos:line="95" pos:column="52"/></name></expr>)<pos:position pos:line="95" pos:column="53"/></condition><then pos:line="95" pos:column="53"> <comment type="block" pos:line="95" pos:column="54">/* {{{ */</comment>
		<block pos:line="96" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="97" pos:column="25">int<pos:position pos:line="97" pos:column="28"/></name> <modifier pos:line="97" pos:column="29">*<pos:position pos:line="97" pos:column="30"/></modifier></type><name pos:line="97" pos:column="30">tmp<pos:position pos:line="97" pos:column="33"/></name></decl>;<pos:position pos:line="97" pos:column="34"/></decl_stmt>

			<expr_stmt><expr><name pos:line="99" pos:column="25">tmp<pos:position pos:line="99" pos:column="28"/></name> <operator pos:line="99" pos:column="29">=<pos:position pos:line="99" pos:column="30"/></operator> <call><name pos:line="99" pos:column="31">realloc<pos:position pos:line="99" pos:column="38"/></name> <argument_list pos:line="99" pos:column="39">(<argument><expr><name><name pos:line="99" pos:column="40">se<pos:position pos:line="99" pos:column="42"/></name><operator pos:line="99" pos:column="42">-&gt;<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="44">data<pos:position pos:line="99" pos:column="48"/></name><operator pos:line="99" pos:column="48">.<pos:position pos:line="99" pos:column="49"/></operator><name pos:line="99" pos:column="49">server<pos:position pos:line="99" pos:column="55"/></name><operator pos:line="99" pos:column="55">.<pos:position pos:line="99" pos:column="56"/></operator><name pos:line="99" pos:column="56">fd<pos:position pos:line="99" pos:column="58"/></name></name></expr></argument>,
					<argument><expr><sizeof pos:line="100" pos:column="41">sizeof <argument_list pos:line="100" pos:column="48">(<argument><expr><operator pos:line="100" pos:column="49">*<pos:position pos:line="100" pos:column="50"/></operator><name pos:line="100" pos:column="50">tmp<pos:position pos:line="100" pos:column="53"/></name></expr></argument>)<pos:position pos:line="100" pos:column="54"/></argument_list></sizeof> <operator pos:line="100" pos:column="55">*<pos:position pos:line="100" pos:column="56"/></operator> <operator pos:line="100" pos:column="57">(<pos:position pos:line="100" pos:column="58"/></operator><name><name pos:line="100" pos:column="58">se<pos:position pos:line="100" pos:column="60"/></name><operator pos:line="100" pos:column="60">-&gt;<pos:position pos:line="100" pos:column="65"/></operator><name pos:line="100" pos:column="62">data<pos:position pos:line="100" pos:column="66"/></name><operator pos:line="100" pos:column="66">.<pos:position pos:line="100" pos:column="67"/></operator><name pos:line="100" pos:column="67">server<pos:position pos:line="100" pos:column="73"/></name><operator pos:line="100" pos:column="73">.<pos:position pos:line="100" pos:column="74"/></operator><name pos:line="100" pos:column="74">fd_num<pos:position pos:line="100" pos:column="80"/></name></name> <operator pos:line="100" pos:column="81">+<pos:position pos:line="100" pos:column="82"/></operator> <literal type="number" pos:line="100" pos:column="83">1<pos:position pos:line="100" pos:column="84"/></literal><operator pos:line="100" pos:column="84">)<pos:position pos:line="100" pos:column="85"/></operator></expr></argument>)<pos:position pos:line="100" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="87"/></expr_stmt>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><name pos:line="101" pos:column="29">tmp<pos:position pos:line="101" pos:column="32"/></name> <operator pos:line="101" pos:column="33">==<pos:position pos:line="101" pos:column="35"/></operator> <name pos:line="101" pos:column="36">NULL<pos:position pos:line="101" pos:column="40"/></name></expr>)<pos:position pos:line="101" pos:column="41"/></condition><then pos:line="101" pos:column="41">
			<block pos:line="102" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="103" pos:column="33">ERROR<pos:position pos:line="103" pos:column="38"/></name> <argument_list pos:line="103" pos:column="39">(<argument><expr><literal type="string" pos:line="103" pos:column="40">"network plugin: realloc failed."<pos:position pos:line="103" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="75"/></expr_stmt>
				<continue pos:line="104" pos:column="33">continue;<pos:position pos:line="104" pos:column="42"/></continue>
			}<pos:position pos:line="105" pos:column="26"/></block></then></if>
			<expr_stmt><expr><name><name pos:line="106" pos:column="25">se<pos:position pos:line="106" pos:column="27"/></name><operator pos:line="106" pos:column="27">-&gt;<pos:position pos:line="106" pos:column="32"/></operator><name pos:line="106" pos:column="29">data<pos:position pos:line="106" pos:column="33"/></name><operator pos:line="106" pos:column="33">.<pos:position pos:line="106" pos:column="34"/></operator><name pos:line="106" pos:column="34">server<pos:position pos:line="106" pos:column="40"/></name><operator pos:line="106" pos:column="40">.<pos:position pos:line="106" pos:column="41"/></operator><name pos:line="106" pos:column="41">fd<pos:position pos:line="106" pos:column="43"/></name></name> <operator pos:line="106" pos:column="44">=<pos:position pos:line="106" pos:column="45"/></operator> <name pos:line="106" pos:column="46">tmp<pos:position pos:line="106" pos:column="49"/></name></expr>;<pos:position pos:line="106" pos:column="50"/></expr_stmt>
			<expr_stmt><expr><name pos:line="107" pos:column="25">tmp<pos:position pos:line="107" pos:column="28"/></name> <operator pos:line="107" pos:column="29">=<pos:position pos:line="107" pos:column="30"/></operator> <name><name pos:line="107" pos:column="31">se<pos:position pos:line="107" pos:column="33"/></name><operator pos:line="107" pos:column="33">-&gt;<pos:position pos:line="107" pos:column="38"/></operator><name pos:line="107" pos:column="35">data<pos:position pos:line="107" pos:column="39"/></name><operator pos:line="107" pos:column="39">.<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="40">server<pos:position pos:line="107" pos:column="46"/></name><operator pos:line="107" pos:column="46">.<pos:position pos:line="107" pos:column="47"/></operator><name pos:line="107" pos:column="47">fd<pos:position pos:line="107" pos:column="49"/></name></name> <operator pos:line="107" pos:column="50">+<pos:position pos:line="107" pos:column="51"/></operator> <name><name pos:line="107" pos:column="52">se<pos:position pos:line="107" pos:column="54"/></name><operator pos:line="107" pos:column="54">-&gt;<pos:position pos:line="107" pos:column="59"/></operator><name pos:line="107" pos:column="56">data<pos:position pos:line="107" pos:column="60"/></name><operator pos:line="107" pos:column="60">.<pos:position pos:line="107" pos:column="61"/></operator><name pos:line="107" pos:column="61">server<pos:position pos:line="107" pos:column="67"/></name><operator pos:line="107" pos:column="67">.<pos:position pos:line="107" pos:column="68"/></operator><name pos:line="107" pos:column="68">fd_num<pos:position pos:line="107" pos:column="74"/></name></name></expr>;<pos:position pos:line="107" pos:column="75"/></expr_stmt>

			<expr_stmt><expr><operator pos:line="109" pos:column="25">*<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="26">tmp<pos:position pos:line="109" pos:column="29"/></name> <operator pos:line="109" pos:column="30">=<pos:position pos:line="109" pos:column="31"/></operator> <call><name pos:line="109" pos:column="32">socket<pos:position pos:line="109" pos:column="38"/></name> <argument_list pos:line="109" pos:column="39">(<argument><expr><name><name pos:line="109" pos:column="40">ai_ptr<pos:position pos:line="109" pos:column="46"/></name><operator pos:line="109" pos:column="46">-&gt;<pos:position pos:line="109" pos:column="51"/></operator><name pos:line="109" pos:column="48">ai_family<pos:position pos:line="109" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="59">ai_ptr<pos:position pos:line="109" pos:column="65"/></name><operator pos:line="109" pos:column="65">-&gt;<pos:position pos:line="109" pos:column="70"/></operator><name pos:line="109" pos:column="67">ai_socktype<pos:position pos:line="109" pos:column="78"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="110" pos:column="41">ai_ptr<pos:position pos:line="110" pos:column="47"/></name><operator pos:line="110" pos:column="47">-&gt;<pos:position pos:line="110" pos:column="52"/></operator><name pos:line="110" pos:column="49">ai_protocol<pos:position pos:line="110" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="62"/></expr_stmt>
			<if pos:line="111" pos:column="25">if <condition pos:line="111" pos:column="28">(<expr><operator pos:line="111" pos:column="29">*<pos:position pos:line="111" pos:column="30"/></operator><name pos:line="111" pos:column="30">tmp<pos:position pos:line="111" pos:column="33"/></name> <operator pos:line="111" pos:column="34">&lt;<pos:position pos:line="111" pos:column="38"/></operator> <literal type="number" pos:line="111" pos:column="36">0<pos:position pos:line="111" pos:column="37"/></literal></expr>)<pos:position pos:line="111" pos:column="38"/></condition><then pos:line="111" pos:column="38">
			<block pos:line="112" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="113" pos:column="33">char<pos:position pos:line="113" pos:column="37"/></name></type> <name><name pos:line="113" pos:column="38">errbuf<pos:position pos:line="113" pos:column="44"/></name><index pos:line="113" pos:column="44">[<expr><literal type="number" pos:line="113" pos:column="45">1024<pos:position pos:line="113" pos:column="49"/></literal></expr>]<pos:position pos:line="113" pos:column="50"/></index></name></decl>;<pos:position pos:line="113" pos:column="51"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="114" pos:column="33">ERROR<pos:position pos:line="114" pos:column="38"/></name> <argument_list pos:line="114" pos:column="39">(<argument><expr><literal type="string" pos:line="114" pos:column="40">"network plugin: socket(2) failed: %s"<pos:position pos:line="114" pos:column="78"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="115" pos:column="49">sstrerror<pos:position pos:line="115" pos:column="58"/></name> <argument_list pos:line="115" pos:column="59">(<argument><expr><name pos:line="115" pos:column="60">errno<pos:position pos:line="115" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="67">errbuf<pos:position pos:line="115" pos:column="73"/></name></expr></argument>,
							<argument><expr><sizeof pos:line="116" pos:column="57">sizeof <argument_list pos:line="116" pos:column="64">(<argument><expr><name pos:line="116" pos:column="65">errbuf<pos:position pos:line="116" pos:column="71"/></name></expr></argument>)<pos:position pos:line="116" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="116" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="75"/></expr_stmt>
				<continue pos:line="117" pos:column="33">continue;<pos:position pos:line="117" pos:column="42"/></continue>
			}<pos:position pos:line="118" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name pos:line="120" pos:column="25">status<pos:position pos:line="120" pos:column="31"/></name> <operator pos:line="120" pos:column="32">=<pos:position pos:line="120" pos:column="33"/></operator> <call><name pos:line="120" pos:column="34">network_bind_socket<pos:position pos:line="120" pos:column="53"/></name> <argument_list pos:line="120" pos:column="54">(<argument><expr><operator pos:line="120" pos:column="55">*<pos:position pos:line="120" pos:column="56"/></operator><name pos:line="120" pos:column="56">tmp<pos:position pos:line="120" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="61">ai_ptr<pos:position pos:line="120" pos:column="67"/></name></expr></argument>)<pos:position pos:line="120" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="69"/></expr_stmt>
			<if pos:line="121" pos:column="25">if <condition pos:line="121" pos:column="28">(<expr><name pos:line="121" pos:column="29">status<pos:position pos:line="121" pos:column="35"/></name> <operator pos:line="121" pos:column="36">!=<pos:position pos:line="121" pos:column="38"/></operator> <literal type="number" pos:line="121" pos:column="39">0<pos:position pos:line="121" pos:column="40"/></literal></expr>)<pos:position pos:line="121" pos:column="41"/></condition><then pos:line="121" pos:column="41">
			<block pos:line="122" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="123" pos:column="33">close<pos:position pos:line="123" pos:column="38"/></name> <argument_list pos:line="123" pos:column="39">(<argument><expr><operator pos:line="123" pos:column="40">*<pos:position pos:line="123" pos:column="41"/></operator><name pos:line="123" pos:column="41">tmp<pos:position pos:line="123" pos:column="44"/></name></expr></argument>)<pos:position pos:line="123" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="46"/></expr_stmt>
				<expr_stmt><expr><operator pos:line="124" pos:column="33">*<pos:position pos:line="124" pos:column="34"/></operator><name pos:line="124" pos:column="34">tmp<pos:position pos:line="124" pos:column="37"/></name> <operator pos:line="124" pos:column="38">=<pos:position pos:line="124" pos:column="39"/></operator> <operator pos:line="124" pos:column="40">-<pos:position pos:line="124" pos:column="41"/></operator><literal type="number" pos:line="124" pos:column="41">1<pos:position pos:line="124" pos:column="42"/></literal></expr>;<pos:position pos:line="124" pos:column="43"/></expr_stmt>
				<continue pos:line="125" pos:column="33">continue;<pos:position pos:line="125" pos:column="42"/></continue>
			}<pos:position pos:line="126" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name><name pos:line="128" pos:column="25">se<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">-&gt;<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="29">data<pos:position pos:line="128" pos:column="33"/></name><operator pos:line="128" pos:column="33">.<pos:position pos:line="128" pos:column="34"/></operator><name pos:line="128" pos:column="34">server<pos:position pos:line="128" pos:column="40"/></name><operator pos:line="128" pos:column="40">.<pos:position pos:line="128" pos:column="41"/></operator><name pos:line="128" pos:column="41">fd_num<pos:position pos:line="128" pos:column="47"/></name></name><operator pos:line="128" pos:column="47">++<pos:position pos:line="128" pos:column="49"/></operator></expr>;<pos:position pos:line="128" pos:column="50"/></expr_stmt>
			<continue pos:line="129" pos:column="25">continue;<pos:position pos:line="129" pos:column="34"/></continue>
		}<pos:position pos:line="130" pos:column="18"/></block></then> <comment type="block" pos:line="130" pos:column="19">/* }}} if (se-&gt;type == SOCKENT_TYPE_SERVER) */</comment>
		<else pos:line="131" pos:column="17">else <comment type="block" pos:line="131" pos:column="22">/* if (se-&gt;type == SOCKENT_TYPE_CLIENT) {{{ */</comment>
		<block pos:line="132" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="133" pos:column="25">se<pos:position pos:line="133" pos:column="27"/></name><operator pos:line="133" pos:column="27">-&gt;<pos:position pos:line="133" pos:column="32"/></operator><name pos:line="133" pos:column="29">data<pos:position pos:line="133" pos:column="33"/></name><operator pos:line="133" pos:column="33">.<pos:position pos:line="133" pos:column="34"/></operator><name pos:line="133" pos:column="34">client<pos:position pos:line="133" pos:column="40"/></name><operator pos:line="133" pos:column="40">.<pos:position pos:line="133" pos:column="41"/></operator><name pos:line="133" pos:column="41">fd<pos:position pos:line="133" pos:column="43"/></name></name> <operator pos:line="133" pos:column="44">=<pos:position pos:line="133" pos:column="45"/></operator> <call><name pos:line="133" pos:column="46">socket<pos:position pos:line="133" pos:column="52"/></name> <argument_list pos:line="133" pos:column="53">(<argument><expr><name><name pos:line="133" pos:column="54">ai_ptr<pos:position pos:line="133" pos:column="60"/></name><operator pos:line="133" pos:column="60">-&gt;<pos:position pos:line="133" pos:column="65"/></operator><name pos:line="133" pos:column="62">ai_family<pos:position pos:line="133" pos:column="71"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="134" pos:column="41">ai_ptr<pos:position pos:line="134" pos:column="47"/></name><operator pos:line="134" pos:column="47">-&gt;<pos:position pos:line="134" pos:column="52"/></operator><name pos:line="134" pos:column="49">ai_socktype<pos:position pos:line="134" pos:column="60"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="135" pos:column="41">ai_ptr<pos:position pos:line="135" pos:column="47"/></name><operator pos:line="135" pos:column="47">-&gt;<pos:position pos:line="135" pos:column="52"/></operator><name pos:line="135" pos:column="49">ai_protocol<pos:position pos:line="135" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="135" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="62"/></expr_stmt>
			<if pos:line="136" pos:column="25">if <condition pos:line="136" pos:column="28">(<expr><name><name pos:line="136" pos:column="29">se<pos:position pos:line="136" pos:column="31"/></name><operator pos:line="136" pos:column="31">-&gt;<pos:position pos:line="136" pos:column="36"/></operator><name pos:line="136" pos:column="33">data<pos:position pos:line="136" pos:column="37"/></name><operator pos:line="136" pos:column="37">.<pos:position pos:line="136" pos:column="38"/></operator><name pos:line="136" pos:column="38">client<pos:position pos:line="136" pos:column="44"/></name><operator pos:line="136" pos:column="44">.<pos:position pos:line="136" pos:column="45"/></operator><name pos:line="136" pos:column="45">fd<pos:position pos:line="136" pos:column="47"/></name></name> <operator pos:line="136" pos:column="48">&lt;<pos:position pos:line="136" pos:column="52"/></operator> <literal type="number" pos:line="136" pos:column="50">0<pos:position pos:line="136" pos:column="51"/></literal></expr>)<pos:position pos:line="136" pos:column="52"/></condition><then pos:line="136" pos:column="52">
			<block pos:line="137" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="138" pos:column="33">char<pos:position pos:line="138" pos:column="37"/></name></type> <name><name pos:line="138" pos:column="38">errbuf<pos:position pos:line="138" pos:column="44"/></name><index pos:line="138" pos:column="44">[<expr><literal type="number" pos:line="138" pos:column="45">1024<pos:position pos:line="138" pos:column="49"/></literal></expr>]<pos:position pos:line="138" pos:column="50"/></index></name></decl>;<pos:position pos:line="138" pos:column="51"/></decl_stmt>
				<expr_stmt><expr><call><name pos:line="139" pos:column="33">ERROR<pos:position pos:line="139" pos:column="38"/></name> <argument_list pos:line="139" pos:column="39">(<argument><expr><literal type="string" pos:line="139" pos:column="40">"network plugin: socket(2) failed: %s"<pos:position pos:line="139" pos:column="78"/></literal></expr></argument>,
						<argument><expr><call><name pos:line="140" pos:column="49">sstrerror<pos:position pos:line="140" pos:column="58"/></name> <argument_list pos:line="140" pos:column="59">(<argument><expr><name pos:line="140" pos:column="60">errno<pos:position pos:line="140" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="67">errbuf<pos:position pos:line="140" pos:column="73"/></name></expr></argument>,
							<argument><expr><sizeof pos:line="141" pos:column="57">sizeof <argument_list pos:line="141" pos:column="64">(<argument><expr><name pos:line="141" pos:column="65">errbuf<pos:position pos:line="141" pos:column="71"/></name></expr></argument>)<pos:position pos:line="141" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="141" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="141" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="75"/></expr_stmt>
				<continue pos:line="142" pos:column="33">continue;<pos:position pos:line="142" pos:column="42"/></continue>
			}<pos:position pos:line="143" pos:column="26"/></block></then></if>

			<expr_stmt><expr><name><name pos:line="145" pos:column="25">se<pos:position pos:line="145" pos:column="27"/></name><operator pos:line="145" pos:column="27">-&gt;<pos:position pos:line="145" pos:column="32"/></operator><name pos:line="145" pos:column="29">data<pos:position pos:line="145" pos:column="33"/></name><operator pos:line="145" pos:column="33">.<pos:position pos:line="145" pos:column="34"/></operator><name pos:line="145" pos:column="34">client<pos:position pos:line="145" pos:column="40"/></name><operator pos:line="145" pos:column="40">.<pos:position pos:line="145" pos:column="41"/></operator><name pos:line="145" pos:column="41">addr<pos:position pos:line="145" pos:column="45"/></name></name> <operator pos:line="145" pos:column="46">=<pos:position pos:line="145" pos:column="47"/></operator> <call><name pos:line="145" pos:column="48">malloc<pos:position pos:line="145" pos:column="54"/></name> <argument_list pos:line="145" pos:column="55">(<argument><expr><sizeof pos:line="145" pos:column="56">sizeof <argument_list pos:line="145" pos:column="63">(<argument><expr><operator pos:line="145" pos:column="64">*<pos:position pos:line="145" pos:column="65"/></operator><name><name pos:line="145" pos:column="65">se<pos:position pos:line="145" pos:column="67"/></name><operator pos:line="145" pos:column="67">-&gt;<pos:position pos:line="145" pos:column="72"/></operator><name pos:line="145" pos:column="69">data<pos:position pos:line="145" pos:column="73"/></name><operator pos:line="145" pos:column="73">.<pos:position pos:line="145" pos:column="74"/></operator><name pos:line="145" pos:column="74">client<pos:position pos:line="145" pos:column="80"/></name><operator pos:line="145" pos:column="80">.<pos:position pos:line="145" pos:column="81"/></operator><name pos:line="145" pos:column="81">addr<pos:position pos:line="145" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="145" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="145" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="88"/></expr_stmt>
			<if pos:line="146" pos:column="25">if <condition pos:line="146" pos:column="28">(<expr><name><name pos:line="146" pos:column="29">se<pos:position pos:line="146" pos:column="31"/></name><operator pos:line="146" pos:column="31">-&gt;<pos:position pos:line="146" pos:column="36"/></operator><name pos:line="146" pos:column="33">data<pos:position pos:line="146" pos:column="37"/></name><operator pos:line="146" pos:column="37">.<pos:position pos:line="146" pos:column="38"/></operator><name pos:line="146" pos:column="38">client<pos:position pos:line="146" pos:column="44"/></name><operator pos:line="146" pos:column="44">.<pos:position pos:line="146" pos:column="45"/></operator><name pos:line="146" pos:column="45">addr<pos:position pos:line="146" pos:column="49"/></name></name> <operator pos:line="146" pos:column="50">==<pos:position pos:line="146" pos:column="52"/></operator> <name pos:line="146" pos:column="53">NULL<pos:position pos:line="146" pos:column="57"/></name></expr>)<pos:position pos:line="146" pos:column="58"/></condition><then pos:line="146" pos:column="58">
			<block pos:line="147" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="148" pos:column="33">ERROR<pos:position pos:line="148" pos:column="38"/></name> <argument_list pos:line="148" pos:column="39">(<argument><expr><literal type="string" pos:line="148" pos:column="40">"network plugin: malloc failed."<pos:position pos:line="148" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="149" pos:column="33">close<pos:position pos:line="149" pos:column="38"/></name> <argument_list pos:line="149" pos:column="39">(<argument><expr><name><name pos:line="149" pos:column="40">se<pos:position pos:line="149" pos:column="42"/></name><operator pos:line="149" pos:column="42">-&gt;<pos:position pos:line="149" pos:column="47"/></operator><name pos:line="149" pos:column="44">data<pos:position pos:line="149" pos:column="48"/></name><operator pos:line="149" pos:column="48">.<pos:position pos:line="149" pos:column="49"/></operator><name pos:line="149" pos:column="49">client<pos:position pos:line="149" pos:column="55"/></name><operator pos:line="149" pos:column="55">.<pos:position pos:line="149" pos:column="56"/></operator><name pos:line="149" pos:column="56">fd<pos:position pos:line="149" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="60"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="150" pos:column="33">se<pos:position pos:line="150" pos:column="35"/></name><operator pos:line="150" pos:column="35">-&gt;<pos:position pos:line="150" pos:column="40"/></operator><name pos:line="150" pos:column="37">data<pos:position pos:line="150" pos:column="41"/></name><operator pos:line="150" pos:column="41">.<pos:position pos:line="150" pos:column="42"/></operator><name pos:line="150" pos:column="42">client<pos:position pos:line="150" pos:column="48"/></name><operator pos:line="150" pos:column="48">.<pos:position pos:line="150" pos:column="49"/></operator><name pos:line="150" pos:column="49">fd<pos:position pos:line="150" pos:column="51"/></name></name> <operator pos:line="150" pos:column="52">=<pos:position pos:line="150" pos:column="53"/></operator> <operator pos:line="150" pos:column="54">-<pos:position pos:line="150" pos:column="55"/></operator><literal type="number" pos:line="150" pos:column="55">1<pos:position pos:line="150" pos:column="56"/></literal></expr>;<pos:position pos:line="150" pos:column="57"/></expr_stmt>
				<continue pos:line="151" pos:column="33">continue;<pos:position pos:line="151" pos:column="42"/></continue>
			}<pos:position pos:line="152" pos:column="26"/></block></then></if>

			<expr_stmt><expr><call><name pos:line="154" pos:column="25">memset<pos:position pos:line="154" pos:column="31"/></name> <argument_list pos:line="154" pos:column="32">(<argument><expr><name><name pos:line="154" pos:column="33">se<pos:position pos:line="154" pos:column="35"/></name><operator pos:line="154" pos:column="35">-&gt;<pos:position pos:line="154" pos:column="40"/></operator><name pos:line="154" pos:column="37">data<pos:position pos:line="154" pos:column="41"/></name><operator pos:line="154" pos:column="41">.<pos:position pos:line="154" pos:column="42"/></operator><name pos:line="154" pos:column="42">client<pos:position pos:line="154" pos:column="48"/></name><operator pos:line="154" pos:column="48">.<pos:position pos:line="154" pos:column="49"/></operator><name pos:line="154" pos:column="49">addr<pos:position pos:line="154" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="154" pos:column="55">0<pos:position pos:line="154" pos:column="56"/></literal></expr></argument>, <argument><expr><sizeof pos:line="154" pos:column="58">sizeof <argument_list pos:line="154" pos:column="65">(<argument><expr><operator pos:line="154" pos:column="66">*<pos:position pos:line="154" pos:column="67"/></operator><name><name pos:line="154" pos:column="67">se<pos:position pos:line="154" pos:column="69"/></name><operator pos:line="154" pos:column="69">-&gt;<pos:position pos:line="154" pos:column="74"/></operator><name pos:line="154" pos:column="71">data<pos:position pos:line="154" pos:column="75"/></name><operator pos:line="154" pos:column="75">.<pos:position pos:line="154" pos:column="76"/></operator><name pos:line="154" pos:column="76">client<pos:position pos:line="154" pos:column="82"/></name><operator pos:line="154" pos:column="82">.<pos:position pos:line="154" pos:column="83"/></operator><name pos:line="154" pos:column="83">addr<pos:position pos:line="154" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="154" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="154" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="90"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="155" pos:column="25">assert<pos:position pos:line="155" pos:column="31"/></name> <argument_list pos:line="155" pos:column="32">(<argument><expr><sizeof pos:line="155" pos:column="33">sizeof <argument_list pos:line="155" pos:column="40">(<argument><expr><operator pos:line="155" pos:column="41">*<pos:position pos:line="155" pos:column="42"/></operator><name><name pos:line="155" pos:column="42">se<pos:position pos:line="155" pos:column="44"/></name><operator pos:line="155" pos:column="44">-&gt;<pos:position pos:line="155" pos:column="49"/></operator><name pos:line="155" pos:column="46">data<pos:position pos:line="155" pos:column="50"/></name><operator pos:line="155" pos:column="50">.<pos:position pos:line="155" pos:column="51"/></operator><name pos:line="155" pos:column="51">client<pos:position pos:line="155" pos:column="57"/></name><operator pos:line="155" pos:column="57">.<pos:position pos:line="155" pos:column="58"/></operator><name pos:line="155" pos:column="58">addr<pos:position pos:line="155" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="63"/></argument_list></sizeof> <operator pos:line="155" pos:column="64">&gt;=<pos:position pos:line="155" pos:column="69"/></operator> <name><name pos:line="155" pos:column="67">ai_ptr<pos:position pos:line="155" pos:column="73"/></name><operator pos:line="155" pos:column="73">-&gt;<pos:position pos:line="155" pos:column="78"/></operator><name pos:line="155" pos:column="75">ai_addrlen<pos:position pos:line="155" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="87"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="156" pos:column="25">memcpy<pos:position pos:line="156" pos:column="31"/></name> <argument_list pos:line="156" pos:column="32">(<argument><expr><name><name pos:line="156" pos:column="33">se<pos:position pos:line="156" pos:column="35"/></name><operator pos:line="156" pos:column="35">-&gt;<pos:position pos:line="156" pos:column="40"/></operator><name pos:line="156" pos:column="37">data<pos:position pos:line="156" pos:column="41"/></name><operator pos:line="156" pos:column="41">.<pos:position pos:line="156" pos:column="42"/></operator><name pos:line="156" pos:column="42">client<pos:position pos:line="156" pos:column="48"/></name><operator pos:line="156" pos:column="48">.<pos:position pos:line="156" pos:column="49"/></operator><name pos:line="156" pos:column="49">addr<pos:position pos:line="156" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="55">ai_ptr<pos:position pos:line="156" pos:column="61"/></name><operator pos:line="156" pos:column="61">-&gt;<pos:position pos:line="156" pos:column="66"/></operator><name pos:line="156" pos:column="63">ai_addr<pos:position pos:line="156" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="72">ai_ptr<pos:position pos:line="156" pos:column="78"/></name><operator pos:line="156" pos:column="78">-&gt;<pos:position pos:line="156" pos:column="83"/></operator><name pos:line="156" pos:column="80">ai_addrlen<pos:position pos:line="156" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="92"/></expr_stmt>
			<expr_stmt><expr><name><name pos:line="157" pos:column="25">se<pos:position pos:line="157" pos:column="27"/></name><operator pos:line="157" pos:column="27">-&gt;<pos:position pos:line="157" pos:column="32"/></operator><name pos:line="157" pos:column="29">data<pos:position pos:line="157" pos:column="33"/></name><operator pos:line="157" pos:column="33">.<pos:position pos:line="157" pos:column="34"/></operator><name pos:line="157" pos:column="34">client<pos:position pos:line="157" pos:column="40"/></name><operator pos:line="157" pos:column="40">.<pos:position pos:line="157" pos:column="41"/></operator><name pos:line="157" pos:column="41">addrlen<pos:position pos:line="157" pos:column="48"/></name></name> <operator pos:line="157" pos:column="49">=<pos:position pos:line="157" pos:column="50"/></operator> <name><name pos:line="157" pos:column="51">ai_ptr<pos:position pos:line="157" pos:column="57"/></name><operator pos:line="157" pos:column="57">-&gt;<pos:position pos:line="157" pos:column="62"/></operator><name pos:line="157" pos:column="59">ai_addrlen<pos:position pos:line="157" pos:column="69"/></name></name></expr>;<pos:position pos:line="157" pos:column="70"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="159" pos:column="25">network_set_ttl<pos:position pos:line="159" pos:column="40"/></name> <argument_list pos:line="159" pos:column="41">(<argument><expr><name pos:line="159" pos:column="42">se<pos:position pos:line="159" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="159" pos:column="46">ai_ptr<pos:position pos:line="159" pos:column="52"/></name></expr></argument>)<pos:position pos:line="159" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="54"/></expr_stmt>

			<comment type="block" pos:line="161" pos:column="25">/* We don't open more than one write-socket per
			 * node/service pair.. */</comment>
			<break pos:line="163" pos:column="25">break;<pos:position pos:line="163" pos:column="31"/></break>
		}<pos:position pos:line="164" pos:column="18"/></block></else></if> <comment type="block" pos:line="164" pos:column="19">/* }}} if (se-&gt;type == SOCKENT_TYPE_CLIENT) */</comment>
	}<pos:position pos:line="165" pos:column="10"/></block></for> <comment type="block" pos:line="165" pos:column="11">/* for (ai_list) */</comment>

	<expr_stmt><expr><call><name pos:line="167" pos:column="9">freeaddrinfo<pos:position pos:line="167" pos:column="21"/></name> <argument_list pos:line="167" pos:column="22">(<argument><expr><name pos:line="167" pos:column="23">ai_list<pos:position pos:line="167" pos:column="30"/></name></expr></argument>)<pos:position pos:line="167" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="32"/></expr_stmt>

	<comment type="block" pos:line="169" pos:column="9">/* Check if all went well. */</comment>
	<if pos:line="170" pos:column="9">if <condition pos:line="170" pos:column="12">(<expr><name><name pos:line="170" pos:column="13">se<pos:position pos:line="170" pos:column="15"/></name><operator pos:line="170" pos:column="15">-&gt;<pos:position pos:line="170" pos:column="20"/></operator><name pos:line="170" pos:column="17">type<pos:position pos:line="170" pos:column="21"/></name></name> <operator pos:line="170" pos:column="22">==<pos:position pos:line="170" pos:column="24"/></operator> <name pos:line="170" pos:column="25">SOCKENT_TYPE_SERVER<pos:position pos:line="170" pos:column="44"/></name></expr>)<pos:position pos:line="170" pos:column="45"/></condition><then pos:line="170" pos:column="45">
	<block pos:line="171" pos:column="9">{
		<if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><name><name pos:line="172" pos:column="21">se<pos:position pos:line="172" pos:column="23"/></name><operator pos:line="172" pos:column="23">-&gt;<pos:position pos:line="172" pos:column="28"/></operator><name pos:line="172" pos:column="25">data<pos:position pos:line="172" pos:column="29"/></name><operator pos:line="172" pos:column="29">.<pos:position pos:line="172" pos:column="30"/></operator><name pos:line="172" pos:column="30">server<pos:position pos:line="172" pos:column="36"/></name><operator pos:line="172" pos:column="36">.<pos:position pos:line="172" pos:column="37"/></operator><name pos:line="172" pos:column="37">fd_num<pos:position pos:line="172" pos:column="43"/></name></name> <operator pos:line="172" pos:column="44">&lt;=<pos:position pos:line="172" pos:column="49"/></operator> <literal type="number" pos:line="172" pos:column="47">0<pos:position pos:line="172" pos:column="48"/></literal></expr>)<pos:position pos:line="172" pos:column="49"/></condition><then pos:line="172" pos:column="49">
			<block type="pseudo"><return pos:line="173" pos:column="25">return <expr><operator pos:line="173" pos:column="32">(<pos:position pos:line="173" pos:column="33"/></operator><operator pos:line="173" pos:column="33">-<pos:position pos:line="173" pos:column="34"/></operator><literal type="number" pos:line="173" pos:column="34">1<pos:position pos:line="173" pos:column="35"/></literal><operator pos:line="173" pos:column="35">)<pos:position pos:line="173" pos:column="36"/></operator></expr>;<pos:position pos:line="173" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="174" pos:column="10"/></block></then>
	<else pos:line="175" pos:column="9">else <comment type="block" pos:line="175" pos:column="14">/* if (se-&gt;type == SOCKENT_TYPE_CLIENT) */</comment>
	<block pos:line="176" pos:column="9">{
		<if pos:line="177" pos:column="17">if <condition pos:line="177" pos:column="20">(<expr><name><name pos:line="177" pos:column="21">se<pos:position pos:line="177" pos:column="23"/></name><operator pos:line="177" pos:column="23">-&gt;<pos:position pos:line="177" pos:column="28"/></operator><name pos:line="177" pos:column="25">data<pos:position pos:line="177" pos:column="29"/></name><operator pos:line="177" pos:column="29">.<pos:position pos:line="177" pos:column="30"/></operator><name pos:line="177" pos:column="30">client<pos:position pos:line="177" pos:column="36"/></name><operator pos:line="177" pos:column="36">.<pos:position pos:line="177" pos:column="37"/></operator><name pos:line="177" pos:column="37">fd<pos:position pos:line="177" pos:column="39"/></name></name> <operator pos:line="177" pos:column="40">&lt;<pos:position pos:line="177" pos:column="44"/></operator> <literal type="number" pos:line="177" pos:column="42">0<pos:position pos:line="177" pos:column="43"/></literal></expr>)<pos:position pos:line="177" pos:column="44"/></condition><then pos:line="177" pos:column="44">
			<block type="pseudo"><return pos:line="178" pos:column="25">return <expr><operator pos:line="178" pos:column="32">(<pos:position pos:line="178" pos:column="33"/></operator><operator pos:line="178" pos:column="33">-<pos:position pos:line="178" pos:column="34"/></operator><literal type="number" pos:line="178" pos:column="34">1<pos:position pos:line="178" pos:column="35"/></literal><operator pos:line="178" pos:column="35">)<pos:position pos:line="178" pos:column="36"/></operator></expr>;<pos:position pos:line="178" pos:column="37"/></return></block></then></if>
	}<pos:position pos:line="179" pos:column="10"/></block></else></if>

	<return pos:line="181" pos:column="9">return <expr><operator pos:line="181" pos:column="16">(<pos:position pos:line="181" pos:column="17"/></operator><literal type="number" pos:line="181" pos:column="17">0<pos:position pos:line="181" pos:column="18"/></literal><operator pos:line="181" pos:column="18">)<pos:position pos:line="181" pos:column="19"/></operator></expr>;<pos:position pos:line="181" pos:column="20"/></return>
}<pos:position pos:line="182" pos:column="2"/></block></function></unit>

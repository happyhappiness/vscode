<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_687_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mic_config<pos:position pos:line="1" pos:column="22"/></name> <parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">key<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">char<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">value<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{
	<if pos:line="2" pos:column="9">if <condition pos:line="2" pos:column="12">(<expr><name pos:line="2" pos:column="13">temp_ignore<pos:position pos:line="2" pos:column="24"/></name> <operator pos:line="2" pos:column="25">==<pos:position pos:line="2" pos:column="27"/></operator> <name pos:line="2" pos:column="28">NULL<pos:position pos:line="2" pos:column="32"/></name></expr>)<pos:position pos:line="2" pos:column="33"/></condition><then pos:line="2" pos:column="33">
		<block type="pseudo"><expr_stmt><expr><name pos:line="3" pos:column="17">temp_ignore<pos:position pos:line="3" pos:column="28"/></name> <operator pos:line="3" pos:column="29">=<pos:position pos:line="3" pos:column="30"/></operator> <call><name pos:line="3" pos:column="31">ignorelist_create<pos:position pos:line="3" pos:column="48"/></name><argument_list pos:line="3" pos:column="48">(<argument><expr><literal type="number" pos:line="3" pos:column="49">1<pos:position pos:line="3" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="52"/></expr_stmt></block></then></if>
	<if pos:line="4" pos:column="9">if <condition pos:line="4" pos:column="12">(<expr><name pos:line="4" pos:column="13">power_ignore<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">==<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="29">NULL<pos:position pos:line="4" pos:column="33"/></name></expr>)<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34">
		<block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="17">power_ignore<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">=<pos:position pos:line="5" pos:column="31"/></operator> <call><name pos:line="5" pos:column="32">ignorelist_create<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><literal type="number" pos:line="5" pos:column="50">1<pos:position pos:line="5" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="53"/></expr_stmt></block></then></if>
	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">temp_ignore<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">==<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="28">NULL<pos:position pos:line="6" pos:column="32"/></name> <operator pos:line="6" pos:column="33">||<pos:position pos:line="6" pos:column="35"/></operator> <name pos:line="6" pos:column="36">power_ignore<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">==<pos:position pos:line="6" pos:column="51"/></operator> <name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr>)<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator></expr>;<pos:position pos:line="7" pos:column="28"/></return></block></then></if>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">strcasecmp<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><literal type="string" pos:line="9" pos:column="24">"ShowCPU"<pos:position pos:line="9" pos:column="33"/></literal></expr></argument>,<argument><expr><name pos:line="9" pos:column="34">key<pos:position pos:line="9" pos:column="37"/></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call> <operator pos:line="9" pos:column="39">==<pos:position pos:line="9" pos:column="41"/></operator> <literal type="number" pos:line="9" pos:column="42">0<pos:position pos:line="9" pos:column="43"/></literal></expr>)<pos:position pos:line="9" pos:column="44"/></condition><then pos:line="9" pos:column="44">
	<block pos:line="10" pos:column="9">{
		<expr_stmt><expr><name pos:line="11" pos:column="17">show_cpu<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <call><name pos:line="11" pos:column="28">IS_TRUE<pos:position pos:line="11" pos:column="35"/></name><argument_list pos:line="11" pos:column="35">(<argument><expr><name pos:line="11" pos:column="36">value<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
	}<pos:position pos:line="12" pos:column="10"/></block></then>
	<elseif pos:line="13" pos:column="9">else <if pos:line="13" pos:column="14">if <condition pos:line="13" pos:column="17">(<expr><call><name pos:line="13" pos:column="18">strcasecmp<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><literal type="string" pos:line="13" pos:column="29">"ShowCPUCores"<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>,<argument><expr><name pos:line="13" pos:column="44">key<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call> <operator pos:line="13" pos:column="49">==<pos:position pos:line="13" pos:column="51"/></operator> <literal type="number" pos:line="13" pos:column="52">0<pos:position pos:line="13" pos:column="53"/></literal></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><name pos:line="15" pos:column="17">show_cpu_cores<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <call><name pos:line="15" pos:column="34">IS_TRUE<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">value<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="17" pos:column="9">else <if pos:line="17" pos:column="14">if <condition pos:line="17" pos:column="17">(<expr><call><name pos:line="17" pos:column="18">strcasecmp<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><literal type="string" pos:line="17" pos:column="29">"ShowTemperatures"<pos:position pos:line="17" pos:column="47"/></literal></expr></argument>,<argument><expr><name pos:line="17" pos:column="48">key<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call> <operator pos:line="17" pos:column="53">==<pos:position pos:line="17" pos:column="55"/></operator> <literal type="number" pos:line="17" pos:column="56">0<pos:position pos:line="17" pos:column="57"/></literal></expr>)<pos:position pos:line="17" pos:column="58"/></condition><then pos:line="17" pos:column="58">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><name pos:line="19" pos:column="17">show_temps<pos:position pos:line="19" pos:column="27"/></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <call><name pos:line="19" pos:column="30">IS_TRUE<pos:position pos:line="19" pos:column="37"/></name><argument_list pos:line="19" pos:column="37">(<argument><expr><name pos:line="19" pos:column="38">value<pos:position pos:line="19" pos:column="43"/></name></expr></argument>)<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="20" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="21" pos:column="9">else <if pos:line="21" pos:column="14">if <condition pos:line="21" pos:column="17">(<expr><call><name pos:line="21" pos:column="18">strcasecmp<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><literal type="string" pos:line="21" pos:column="29">"ShowMemory"<pos:position pos:line="21" pos:column="41"/></literal></expr></argument>,<argument><expr><name pos:line="21" pos:column="42">key<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call> <operator pos:line="21" pos:column="47">==<pos:position pos:line="21" pos:column="49"/></operator> <literal type="number" pos:line="21" pos:column="50">0<pos:position pos:line="21" pos:column="51"/></literal></expr>)<pos:position pos:line="21" pos:column="52"/></condition><then pos:line="21" pos:column="52">
	<block pos:line="22" pos:column="9">{
		<expr_stmt><expr><name pos:line="23" pos:column="17">show_memory<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <call><name pos:line="23" pos:column="31">IS_TRUE<pos:position pos:line="23" pos:column="38"/></name><argument_list pos:line="23" pos:column="38">(<argument><expr><name pos:line="23" pos:column="39">value<pos:position pos:line="23" pos:column="44"/></name></expr></argument>)<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="46"/></expr_stmt>
	}<pos:position pos:line="24" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="25" pos:column="9">else <if pos:line="25" pos:column="14">if <condition pos:line="25" pos:column="17">(<expr><call><name pos:line="25" pos:column="18">strcasecmp<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="string" pos:line="25" pos:column="29">"ShowPower"<pos:position pos:line="25" pos:column="40"/></literal></expr></argument>,<argument><expr><name pos:line="25" pos:column="41">key<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call> <operator pos:line="25" pos:column="46">==<pos:position pos:line="25" pos:column="48"/></operator> <literal type="number" pos:line="25" pos:column="49">0<pos:position pos:line="25" pos:column="50"/></literal></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51">
	<block pos:line="26" pos:column="9">{
		<expr_stmt><expr><name pos:line="27" pos:column="17">show_power<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <call><name pos:line="27" pos:column="30">IS_TRUE<pos:position pos:line="27" pos:column="37"/></name><argument_list pos:line="27" pos:column="37">(<argument><expr><name pos:line="27" pos:column="38">value<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="28" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="29" pos:column="9">else <if pos:line="29" pos:column="14">if <condition pos:line="29" pos:column="17">(<expr><call><name pos:line="29" pos:column="18">strcasecmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><literal type="string" pos:line="29" pos:column="29">"Temperature"<pos:position pos:line="29" pos:column="42"/></literal></expr></argument>,<argument><expr><name pos:line="29" pos:column="43">key<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">==<pos:position pos:line="29" pos:column="50"/></operator> <literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
	<block pos:line="30" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">ignorelist_add<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">temp_ignore<pos:position pos:line="31" pos:column="43"/></name></expr></argument>,<argument><expr><name pos:line="31" pos:column="44">value<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="33" pos:column="9">else <if pos:line="33" pos:column="14">if <condition pos:line="33" pos:column="17">(<expr><call><name pos:line="33" pos:column="18">strcasecmp<pos:position pos:line="33" pos:column="28"/></name><argument_list pos:line="33" pos:column="28">(<argument><expr><literal type="string" pos:line="33" pos:column="29">"IgnoreSelectedTemperature"<pos:position pos:line="33" pos:column="56"/></literal></expr></argument>,<argument><expr><name pos:line="33" pos:column="57">key<pos:position pos:line="33" pos:column="60"/></name></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call> <operator pos:line="33" pos:column="62">==<pos:position pos:line="33" pos:column="64"/></operator> <literal type="number" pos:line="33" pos:column="65">0<pos:position pos:line="33" pos:column="66"/></literal></expr>)<pos:position pos:line="33" pos:column="67"/></condition><then pos:line="33" pos:column="67">
	<block pos:line="34" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="35" pos:column="17">int<pos:position pos:line="35" pos:column="20"/></name></type> <name pos:line="35" pos:column="21">invert<pos:position pos:line="35" pos:column="27"/></name> <init pos:line="35" pos:column="28">= <expr><literal type="number" pos:line="35" pos:column="30">1<pos:position pos:line="35" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="32"/></decl_stmt>
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><call><name pos:line="36" pos:column="21">IS_TRUE<pos:position pos:line="36" pos:column="28"/></name><argument_list pos:line="36" pos:column="28">(<argument><expr><name pos:line="36" pos:column="29">value<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="36"/></condition><then pos:line="36" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">invert<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">=<pos:position pos:line="37" pos:column="33"/></operator> <literal type="number" pos:line="37" pos:column="34">0<pos:position pos:line="37" pos:column="35"/></literal></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">ignorelist_set_invert<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">temp_ignore<pos:position pos:line="38" pos:column="50"/></name></expr></argument>,<argument><expr><name pos:line="38" pos:column="51">invert<pos:position pos:line="38" pos:column="57"/></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="40" pos:column="9">else <if pos:line="40" pos:column="14">if <condition pos:line="40" pos:column="17">(<expr><call><name pos:line="40" pos:column="18">strcasecmp<pos:position pos:line="40" pos:column="28"/></name><argument_list pos:line="40" pos:column="28">(<argument><expr><literal type="string" pos:line="40" pos:column="29">"Power"<pos:position pos:line="40" pos:column="36"/></literal></expr></argument>,<argument><expr><name pos:line="40" pos:column="37">key<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call> <operator pos:line="40" pos:column="42">==<pos:position pos:line="40" pos:column="44"/></operator> <literal type="number" pos:line="40" pos:column="45">0<pos:position pos:line="40" pos:column="46"/></literal></expr>)<pos:position pos:line="40" pos:column="47"/></condition><then pos:line="40" pos:column="47">
	<block pos:line="41" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="42" pos:column="17">ignorelist_add<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">power_ignore<pos:position pos:line="42" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="42" pos:column="45">value<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if></elseif>
	<elseif pos:line="44" pos:column="9">else <if pos:line="44" pos:column="14">if <condition pos:line="44" pos:column="17">(<expr><call><name pos:line="44" pos:column="18">strcasecmp<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><literal type="string" pos:line="44" pos:column="29">"IgnoreSelectedPower"<pos:position pos:line="44" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="44" pos:column="51">key<pos:position pos:line="44" pos:column="54"/></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call> <operator pos:line="44" pos:column="56">==<pos:position pos:line="44" pos:column="58"/></operator> <literal type="number" pos:line="44" pos:column="59">0<pos:position pos:line="44" pos:column="60"/></literal></expr>)<pos:position pos:line="44" pos:column="61"/></condition><then pos:line="44" pos:column="61">
	<block pos:line="45" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">int<pos:position pos:line="46" pos:column="20"/></name></type> <name pos:line="46" pos:column="21">invert<pos:position pos:line="46" pos:column="27"/></name> <init pos:line="46" pos:column="28">= <expr><literal type="number" pos:line="46" pos:column="30">1<pos:position pos:line="46" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="32"/></decl_stmt>
		<if pos:line="47" pos:column="17">if <condition pos:line="47" pos:column="20">(<expr><call><name pos:line="47" pos:column="21">IS_TRUE<pos:position pos:line="47" pos:column="28"/></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">value<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="36"/></condition><then pos:line="47" pos:column="36">
			<block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="25">invert<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <literal type="number" pos:line="48" pos:column="34">0<pos:position pos:line="48" pos:column="35"/></literal></expr>;<pos:position pos:line="48" pos:column="36"/></expr_stmt></block></then></if>
		<expr_stmt><expr><call><name pos:line="49" pos:column="17">ignorelist_set_invert<pos:position pos:line="49" pos:column="38"/></name><argument_list pos:line="49" pos:column="38">(<argument><expr><name pos:line="49" pos:column="39">power_ignore<pos:position pos:line="49" pos:column="51"/></name></expr></argument>,<argument><expr><name pos:line="49" pos:column="52">invert<pos:position pos:line="49" pos:column="58"/></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="60"/></expr_stmt>
	}<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif>
	<else pos:line="51" pos:column="9">else
	<block pos:line="52" pos:column="9">{
		<return pos:line="53" pos:column="17">return <expr><operator pos:line="53" pos:column="24">(<pos:position pos:line="53" pos:column="25"/></operator><operator pos:line="53" pos:column="25">-<pos:position pos:line="53" pos:column="26"/></operator><literal type="number" pos:line="53" pos:column="26">1<pos:position pos:line="53" pos:column="27"/></literal><operator pos:line="53" pos:column="27">)<pos:position pos:line="53" pos:column="28"/></operator></expr>;<pos:position pos:line="53" pos:column="29"/></return>
	}<pos:position pos:line="54" pos:column="10"/></block></else></if>
	<return pos:line="55" pos:column="9">return <expr><operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><literal type="number" pos:line="55" pos:column="17">0<pos:position pos:line="55" pos:column="18"/></literal><operator pos:line="55" pos:column="18">)<pos:position pos:line="55" pos:column="19"/></operator></expr>;<pos:position pos:line="55" pos:column="20"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_93_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_block_stats<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">block_device<pos:position pos:line="1" pos:column="47"/></name></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">block_dev<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="59"/></parameter_list> <block pos:line="1" pos:column="60">{

  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><operator pos:line="3" pos:column="7">!<pos:position pos:line="3" pos:column="8"/></operator><name pos:line="3" pos:column="8">block_dev<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18"> <block pos:line="3" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">ERROR<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><name pos:line="4" pos:column="11">PLUGIN_NAME<pos:position pos:line="4" pos:column="22"/></name> <literal type="string" pos:line="4" pos:column="23">" plugin: get_block_stats NULL pointer"<pos:position pos:line="4" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="64"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal></expr>;<pos:position pos:line="5" pos:column="15"/></return>
  }<pos:position pos:line="6" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="8" pos:column="3">struct<pos:position pos:line="8" pos:column="9"/></name> <name pos:line="8" pos:column="10">lv_block_info<pos:position pos:line="8" pos:column="23"/></name></name></type> <name pos:line="8" pos:column="24">binfo<pos:position pos:line="8" pos:column="29"/></name></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">init_block_info<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><operator pos:line="9" pos:column="19">&amp;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="20">binfo<pos:position pos:line="9" pos:column="25"/></name></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><call><name pos:line="11" pos:column="7">lv_domain_block_info<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name><name pos:line="11" pos:column="28">block_dev<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">-&gt;<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="39">dom<pos:position pos:line="11" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="44">block_dev<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">path<pos:position pos:line="11" pos:column="59"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="61">&amp;<pos:position pos:line="11" pos:column="66"/></operator><name pos:line="11" pos:column="62">binfo<pos:position pos:line="11" pos:column="67"/></name></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></call> <operator pos:line="11" pos:column="69">&lt;<pos:position pos:line="11" pos:column="73"/></operator> <literal type="number" pos:line="11" pos:column="71">0<pos:position pos:line="11" pos:column="72"/></literal></expr>)<pos:position pos:line="11" pos:column="73"/></condition><then pos:line="11" pos:column="73"> <block pos:line="11" pos:column="74">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">PLUGIN_NAME<pos:position pos:line="12" pos:column="22"/></name> <literal type="string" pos:line="12" pos:column="23">" plugin: lv_domain_block_info failed"<pos:position pos:line="12" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="63"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="16" pos:column="3">disk_submit<pos:position pos:line="16" pos:column="14"/></name><argument_list pos:line="16" pos:column="14">(<argument><expr><operator pos:line="16" pos:column="15">&amp;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="16">binfo<pos:position pos:line="16" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="23">block_dev<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">dom<pos:position pos:line="16" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="39">block_dev<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">-&gt;<pos:position pos:line="16" pos:column="53"/></operator><name pos:line="16" pos:column="50">path<pos:position pos:line="16" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
  <return pos:line="17" pos:column="3">return <expr><literal type="number" pos:line="17" pos:column="10">0<pos:position pos:line="17" pos:column="11"/></literal></expr>;<pos:position pos:line="17" pos:column="12"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

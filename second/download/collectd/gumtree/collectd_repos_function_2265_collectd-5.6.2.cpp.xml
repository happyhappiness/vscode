<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2265_collectd-5.6.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lcc_network_buffer_initialize<pos:position pos:line="1" pos:column="34"/></name><parameter_list pos:line="1" pos:column="34">(<parameter><decl><type><name pos:line="1" pos:column="35">lcc_network_buffer_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">nb<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list> <comment type="block" pos:line="1" pos:column="61">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><name pos:line="3" pos:column="7">nb<pos:position pos:line="3" pos:column="9"/></name> <operator pos:line="3" pos:column="10">==<pos:position pos:line="3" pos:column="12"/></operator> <name pos:line="3" pos:column="13">NULL<pos:position pos:line="3" pos:column="17"/></name></expr>)<pos:position pos:line="3" pos:column="18"/></condition><then pos:line="3" pos:column="18">
    <block type="pseudo"><return pos:line="4" pos:column="5">return <expr><operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">EINVAL<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">)<pos:position pos:line="4" pos:column="20"/></operator></expr>;<pos:position pos:line="4" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">memset<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name><name pos:line="6" pos:column="10">nb<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">buffer<pos:position pos:line="6" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="25">nb<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">size<pos:position pos:line="6" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">memset<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><operator pos:line="7" pos:column="10">&amp;<pos:position pos:line="7" pos:column="15"/></operator><name><name pos:line="7" pos:column="11">nb<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">state<pos:position pos:line="7" pos:column="20"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="25">sizeof<argument_list pos:line="7" pos:column="31">(<argument><expr><name><name pos:line="7" pos:column="32">nb<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">state<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="8" pos:column="3">nb<pos:position pos:line="8" pos:column="5"/></name><operator pos:line="8" pos:column="5">-&gt;<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="7">ptr<pos:position pos:line="8" pos:column="10"/></name></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name><name pos:line="8" pos:column="13">nb<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">buffer<pos:position pos:line="8" pos:column="23"/></name></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">nb<pos:position pos:line="9" pos:column="5"/></name><operator pos:line="9" pos:column="5">-&gt;<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="7">free<pos:position pos:line="9" pos:column="11"/></name></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name><name pos:line="9" pos:column="14">nb<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">size<pos:position pos:line="9" pos:column="22"/></name></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">HAVE_LIBGCRYPT<pos:position pos:line="11" pos:column="19"/></name></expr></cpp:if>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">nb<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">seclevel<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">==<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">SIGN<pos:position pos:line="12" pos:column="27"/></name></expr>)<pos:position pos:line="12" pos:column="28"/></condition><then pos:line="12" pos:column="28"> <block pos:line="12" pos:column="29">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">username_len<pos:position pos:line="13" pos:column="24"/></name></decl>;<pos:position pos:line="13" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">uint16_t<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">pkg_type<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><call><name pos:line="14" pos:column="25">htons<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">TYPE_SIGN_SHA256<pos:position pos:line="14" pos:column="47"/></name></expr></argument>)<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">uint16_t<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">pkg_length<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><name pos:line="15" pos:column="27">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="15" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="54"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name><name pos:line="17" pos:column="12">nb<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">username<pos:position pos:line="17" pos:column="24"/></name></name> <operator pos:line="17" pos:column="25">!=<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="28">NULL<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">username_len<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <call><name pos:line="18" pos:column="20">strlen<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name><name pos:line="18" pos:column="27">nb<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">-&gt;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="31">username<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">pkg_length<pos:position pos:line="19" pos:column="15"/></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <call><name pos:line="19" pos:column="18">htons<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">pkg_length<pos:position pos:line="19" pos:column="34"/></name> <operator pos:line="19" pos:column="35">+<pos:position pos:line="19" pos:column="36"/></operator> <operator pos:line="19" pos:column="37">(<pos:position pos:line="19" pos:column="38"/></operator><operator pos:line="19" pos:column="38">(<pos:position pos:line="19" pos:column="39"/></operator><name pos:line="19" pos:column="39">uint16_t<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">)<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="48">username_len<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">)<pos:position pos:line="19" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* Fill in everything but the hash value here. */</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">memcpy<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name><name pos:line="22" pos:column="12">nb<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">ptr<pos:position pos:line="22" pos:column="19"/></name></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="21">&amp;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="22">pkg_type<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="32">sizeof<argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">pkg_type<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">memcpy<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name><name pos:line="23" pos:column="12">nb<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">ptr<pos:position pos:line="23" pos:column="19"/></name></name> <operator pos:line="23" pos:column="20">+<pos:position pos:line="23" pos:column="21"/></operator> <sizeof pos:line="23" pos:column="22">sizeof<argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">pkg_type<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></sizeof></expr></argument>, <argument><expr><operator pos:line="23" pos:column="40">&amp;<pos:position pos:line="23" pos:column="45"/></operator><name pos:line="23" pos:column="41">pkg_length<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="53">sizeof<argument_list pos:line="23" pos:column="59">(<argument><expr><name pos:line="23" pos:column="60">pkg_length<pos:position pos:line="23" pos:column="70"/></name></expr></argument>)<pos:position pos:line="23" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">nb<pos:position pos:line="24" pos:column="7"/></name><operator pos:line="24" pos:column="7">-&gt;<pos:position pos:line="24" pos:column="12"/></operator><name pos:line="24" pos:column="9">ptr<pos:position pos:line="24" pos:column="12"/></name></name> <operator pos:line="24" pos:column="13">+=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="24" pos:column="42"/></name></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">nb<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">-&gt;<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="9">free<pos:position pos:line="25" pos:column="13"/></name></name> <operator pos:line="25" pos:column="14">-=<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">PART_SIGNATURE_SHA256_SIZE<pos:position pos:line="25" pos:column="43"/></name></expr>;<pos:position pos:line="25" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">memcpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">nb<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">ptr<pos:position pos:line="27" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="21">nb<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">-&gt;<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="25">username<pos:position pos:line="27" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="35">username_len<pos:position pos:line="27" pos:column="47"/></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">nb<pos:position pos:line="28" pos:column="7"/></name><operator pos:line="28" pos:column="7">-&gt;<pos:position pos:line="28" pos:column="12"/></operator><name pos:line="28" pos:column="9">ptr<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">+=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">username_len<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">nb<pos:position pos:line="29" pos:column="7"/></name><operator pos:line="29" pos:column="7">-&gt;<pos:position pos:line="29" pos:column="12"/></operator><name pos:line="29" pos:column="9">free<pos:position pos:line="29" pos:column="13"/></name></name> <operator pos:line="29" pos:column="14">-=<pos:position pos:line="29" pos:column="16"/></operator> <name pos:line="29" pos:column="17">username_len<pos:position pos:line="29" pos:column="29"/></name></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="30" pos:column="4"/></block></then> <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><name><name pos:line="30" pos:column="14">nb<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">seclevel<pos:position pos:line="30" pos:column="26"/></name></name> <operator pos:line="30" pos:column="27">==<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">ENCRYPT<pos:position pos:line="30" pos:column="37"/></name></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38"> <block pos:line="30" pos:column="39">{
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">size_t<pos:position pos:line="31" pos:column="11"/></name></type> <name pos:line="31" pos:column="12">username_length<pos:position pos:line="31" pos:column="27"/></name> <init pos:line="31" pos:column="28">= <expr><call><name pos:line="31" pos:column="30">strlen<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">(<argument><expr><name><name pos:line="31" pos:column="37">nb<pos:position pos:line="31" pos:column="39"/></name><operator pos:line="31" pos:column="39">-&gt;<pos:position pos:line="31" pos:column="44"/></operator><name pos:line="31" pos:column="41">username<pos:position pos:line="31" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="32" pos:column="5">uint16_t<pos:position pos:line="32" pos:column="13"/></name></type> <name pos:line="32" pos:column="14">pkg_type<pos:position pos:line="32" pos:column="22"/></name> <init pos:line="32" pos:column="23">= <expr><call><name pos:line="32" pos:column="25">htons<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">TYPE_ENCR_AES256<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">uint16_t<pos:position pos:line="33" pos:column="13"/></name></type> <name pos:line="33" pos:column="14">pkg_length<pos:position pos:line="33" pos:column="24"/></name> <init pos:line="33" pos:column="25">= <expr><literal type="number" pos:line="33" pos:column="27">0<pos:position pos:line="33" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="29"/></decl_stmt> <comment type="block" pos:line="33" pos:column="30">/* Filled in in finalize. */</comment>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">uint16_t<pos:position pos:line="34" pos:column="13"/></name></type> <name pos:line="34" pos:column="14">pkg_user_len<pos:position pos:line="34" pos:column="26"/></name> <init pos:line="34" pos:column="27">= <expr><call><name pos:line="34" pos:column="29">htons<pos:position pos:line="34" pos:column="34"/></name><argument_list pos:line="34" pos:column="34">(<argument><expr><operator pos:line="34" pos:column="35">(<pos:position pos:line="34" pos:column="36"/></operator><name pos:line="34" pos:column="36">uint16_t<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">)<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="45">username_length<pos:position pos:line="34" pos:column="60"/></name></expr></argument>)<pos:position pos:line="34" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="62"/></decl_stmt>
    <comment type="block" pos:line="35" pos:column="5">/* Filled in in finalize. */</comment>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">char<pos:position pos:line="36" pos:column="9"/></name></type> <name><name pos:line="36" pos:column="10">hash<pos:position pos:line="36" pos:column="14"/></name><index pos:line="36" pos:column="14">[<expr><literal type="number" pos:line="36" pos:column="15">20<pos:position pos:line="36" pos:column="17"/></literal></expr>]<pos:position pos:line="36" pos:column="18"/></index></name> <init pos:line="36" pos:column="19">= <expr><block pos:line="36" pos:column="21">{<expr><literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr>}<pos:position pos:line="36" pos:column="24"/></block></expr></init></decl>;<pos:position pos:line="36" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">nb<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">encr_header_len<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">username_length<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">nb<pos:position pos:line="39" pos:column="7"/></name><operator pos:line="39" pos:column="7">-&gt;<pos:position pos:line="39" pos:column="12"/></operator><name pos:line="39" pos:column="9">encr_header_len<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">+=<pos:position pos:line="39" pos:column="27"/></operator> <name pos:line="39" pos:column="28">PART_ENCRYPTION_AES256_SIZE<pos:position pos:line="39" pos:column="55"/></name></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">gcry_randomize<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><operator pos:line="41" pos:column="20">(<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="21">void<pos:position pos:line="41" pos:column="25"/></name> <operator pos:line="41" pos:column="26">*<pos:position pos:line="41" pos:column="27"/></operator><operator pos:line="41" pos:column="27">)<pos:position pos:line="41" pos:column="28"/></operator><operator pos:line="41" pos:column="28">&amp;<pos:position pos:line="41" pos:column="33"/></operator><name><name pos:line="41" pos:column="29">nb<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">encr_iv<pos:position pos:line="41" pos:column="40"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="42">sizeof<argument_list pos:line="41" pos:column="48">(<argument><expr><name><name pos:line="41" pos:column="49">nb<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">encr_iv<pos:position pos:line="41" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></sizeof></expr></argument>,
                   <argument><expr><name pos:line="42" pos:column="20">GCRY_STRONG_RANDOM<pos:position pos:line="42" pos:column="38"/></name></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ADD_STATIC<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><name pos:line="44" pos:column="16">nb<pos:position pos:line="44" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="20">pkg_type<pos:position pos:line="44" pos:column="28"/></name></expr></argument>)<pos:position pos:line="44" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">ADD_STATIC<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><name pos:line="45" pos:column="16">nb<pos:position pos:line="45" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="20">pkg_length<pos:position pos:line="45" pos:column="30"/></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">ADD_STATIC<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">nb<pos:position pos:line="46" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="20">pkg_user_len<pos:position pos:line="46" pos:column="32"/></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ADD_GENERIC<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">nb<pos:position pos:line="47" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="21">nb<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">-&gt;<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="25">username<pos:position pos:line="47" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">username_length<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">ADD_GENERIC<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">nb<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="21">nb<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">-&gt;<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="25">encr_iv<pos:position pos:line="48" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="34">sizeof<argument_list pos:line="48" pos:column="40">(<argument><expr><name><name pos:line="48" pos:column="41">nb<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">-&gt;<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="45">encr_iv<pos:position pos:line="48" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">ADD_GENERIC<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><name pos:line="49" pos:column="17">nb<pos:position pos:line="49" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="21">hash<pos:position pos:line="49" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="27">sizeof<argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">hash<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">assert<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><operator pos:line="50" pos:column="12">(<pos:position pos:line="50" pos:column="13"/></operator><name><name pos:line="50" pos:column="13">nb<pos:position pos:line="50" pos:column="15"/></name><operator pos:line="50" pos:column="15">-&gt;<pos:position pos:line="50" pos:column="20"/></operator><name pos:line="50" pos:column="17">encr_header_len<pos:position pos:line="50" pos:column="32"/></name></name> <operator pos:line="50" pos:column="33">+<pos:position pos:line="50" pos:column="34"/></operator> <name><name pos:line="50" pos:column="35">nb<pos:position pos:line="50" pos:column="37"/></name><operator pos:line="50" pos:column="37">-&gt;<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="39">free<pos:position pos:line="50" pos:column="43"/></name></name><operator pos:line="50" pos:column="43">)<pos:position pos:line="50" pos:column="44"/></operator> <operator pos:line="50" pos:column="45">==<pos:position pos:line="50" pos:column="47"/></operator> <name><name pos:line="50" pos:column="48">nb<pos:position pos:line="50" pos:column="50"/></name><operator pos:line="50" pos:column="50">-&gt;<pos:position pos:line="50" pos:column="55"/></operator><name pos:line="50" pos:column="52">size<pos:position pos:line="50" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if></elseif></if>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="54" pos:column="3">return <expr><operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><literal type="number" pos:line="54" pos:column="11">0<pos:position pos:line="54" pos:column="12"/></literal><operator pos:line="54" pos:column="12">)<pos:position pos:line="54" pos:column="13"/></operator></expr>;<pos:position pos:line="54" pos:column="14"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

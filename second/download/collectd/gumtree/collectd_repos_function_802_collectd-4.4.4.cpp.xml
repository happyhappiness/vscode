<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_802_collectd-4.4.4.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ut_check_interesting<pos:position pos:line="1" pos:column="25"/></name> <parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">name<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">name_copy<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">host<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">plugin<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">plugin_instance<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">char<pos:position pos:line="7" pos:column="7"/></name> <modifier pos:line="7" pos:column="8">*<pos:position pos:line="7" pos:column="9"/></modifier></type><name pos:line="7" pos:column="9">type<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">char<pos:position pos:line="8" pos:column="7"/></name> <modifier pos:line="8" pos:column="8">*<pos:position pos:line="8" pos:column="9"/></modifier></type><name pos:line="8" pos:column="9">type_instance<pos:position pos:line="8" pos:column="22"/></name> <init pos:line="8" pos:column="23">= <expr><name pos:line="8" pos:column="25">NULL<pos:position pos:line="8" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">status<pos:position pos:line="9" pos:column="13"/></name></decl>;<pos:position pos:line="9" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">data_set_t<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">ds<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="11" pos:column="3">value_list_t<pos:position pos:line="11" pos:column="15"/></name></type> <name pos:line="11" pos:column="16">vl<pos:position pos:line="11" pos:column="18"/></name></decl>;<pos:position pos:line="11" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="12" pos:column="3">threshold_t<pos:position pos:line="12" pos:column="14"/></name> <modifier pos:line="12" pos:column="15">*<pos:position pos:line="12" pos:column="16"/></modifier></type><name pos:line="12" pos:column="16">th<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>

  <comment type="block" pos:line="14" pos:column="3">/* If there is no tree nothing is interesting. */</comment>
  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">threshold_tree<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">==<pos:position pos:line="15" pos:column="24"/></operator> <name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
    <block type="pseudo"><return pos:line="16" pos:column="5">return <expr><operator pos:line="16" pos:column="12">(<pos:position pos:line="16" pos:column="13"/></operator><literal type="number" pos:line="16" pos:column="13">0<pos:position pos:line="16" pos:column="14"/></literal><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator></expr>;<pos:position pos:line="16" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="18" pos:column="3">name_copy<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <call><name pos:line="18" pos:column="15">strdup<pos:position pos:line="18" pos:column="21"/></name> <argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">name<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">name_copy<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">==<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">NULL<pos:position pos:line="19" pos:column="24"/></name></expr>)<pos:position pos:line="19" pos:column="25"/></condition><then pos:line="19" pos:column="25">
  <block pos:line="20" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">ERROR<pos:position pos:line="21" pos:column="10"/></name> <argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="string" pos:line="21" pos:column="12">"ut_check_interesting: strdup failed."<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="52"/></expr_stmt>
    <return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><operator pos:line="22" pos:column="13">-<pos:position pos:line="22" pos:column="14"/></operator><literal type="number" pos:line="22" pos:column="14">1<pos:position pos:line="22" pos:column="15"/></literal><operator pos:line="22" pos:column="15">)<pos:position pos:line="22" pos:column="16"/></operator></expr>;<pos:position pos:line="22" pos:column="17"/></return>
  }<pos:position pos:line="23" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="25" pos:column="3">status<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">parse_identifier<pos:position pos:line="25" pos:column="28"/></name> <argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">name_copy<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="41">&amp;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="42">host<pos:position pos:line="25" pos:column="46"/></name></expr></argument>,
      <argument><expr><operator pos:line="26" pos:column="7">&amp;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="8">plugin<pos:position pos:line="26" pos:column="14"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="16">&amp;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="17">plugin_instance<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="34">&amp;<pos:position pos:line="26" pos:column="39"/></operator><name pos:line="26" pos:column="35">type<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="41">&amp;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="42">type_instance<pos:position pos:line="26" pos:column="55"/></name></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">status<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">!=<pos:position pos:line="27" pos:column="16"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19">
  <block pos:line="28" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">ERROR<pos:position pos:line="29" pos:column="10"/></name> <argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="string" pos:line="29" pos:column="12">"ut_check_interesting: parse_identifier failed."<pos:position pos:line="29" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">sfree<pos:position pos:line="30" pos:column="10"/></name> <argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">name_copy<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><operator pos:line="31" pos:column="13">-<pos:position pos:line="31" pos:column="14"/></operator><literal type="number" pos:line="31" pos:column="14">1<pos:position pos:line="31" pos:column="15"/></literal><operator pos:line="31" pos:column="15">)<pos:position pos:line="31" pos:column="16"/></operator></expr>;<pos:position pos:line="31" pos:column="17"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="34" pos:column="3">memset<pos:position pos:line="34" pos:column="9"/></name> <argument_list pos:line="34" pos:column="10">(<argument><expr><operator pos:line="34" pos:column="11">&amp;<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="12">ds<pos:position pos:line="34" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="34" pos:column="16">'\0'<pos:position pos:line="34" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="22">sizeof <argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">ds<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">memset<pos:position pos:line="35" pos:column="9"/></name> <argument_list pos:line="35" pos:column="10">(<argument><expr><operator pos:line="35" pos:column="11">&amp;<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="12">vl<pos:position pos:line="35" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="35" pos:column="16">'\0'<pos:position pos:line="35" pos:column="20"/></literal></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="22">sizeof <argument_list pos:line="35" pos:column="29">(<argument><expr><name pos:line="35" pos:column="30">vl<pos:position pos:line="35" pos:column="32"/></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="37" pos:column="3">strncpy<pos:position pos:line="37" pos:column="10"/></name> <argument_list pos:line="37" pos:column="11">(<argument><expr><name><name pos:line="37" pos:column="12">vl<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">.<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">host<pos:position pos:line="37" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="21">host<pos:position pos:line="37" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="27">sizeof <argument_list pos:line="37" pos:column="34">(<argument><expr><name><name pos:line="37" pos:column="35">vl<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">.<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="38">host<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="38" pos:column="3">vl<pos:position pos:line="38" pos:column="5"/></name><operator pos:line="38" pos:column="5">.<pos:position pos:line="38" pos:column="6"/></operator><name pos:line="38" pos:column="6">host<pos:position pos:line="38" pos:column="10"/></name><index pos:line="38" pos:column="10">[<expr><sizeof pos:line="38" pos:column="11">sizeof <argument_list pos:line="38" pos:column="18">(<argument><expr><name><name pos:line="38" pos:column="19">vl<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">host<pos:position pos:line="38" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></sizeof> <operator pos:line="38" pos:column="28">-<pos:position pos:line="38" pos:column="29"/></operator> <literal type="number" pos:line="38" pos:column="30">1<pos:position pos:line="38" pos:column="31"/></literal></expr>]<pos:position pos:line="38" pos:column="32"/></index></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <literal type="char" pos:line="38" pos:column="35">'\0'<pos:position pos:line="38" pos:column="39"/></literal></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">strncpy<pos:position pos:line="39" pos:column="10"/></name> <argument_list pos:line="39" pos:column="11">(<argument><expr><name><name pos:line="39" pos:column="12">vl<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">plugin<pos:position pos:line="39" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="23">plugin<pos:position pos:line="39" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="31">sizeof <argument_list pos:line="39" pos:column="38">(<argument><expr><name><name pos:line="39" pos:column="39">vl<pos:position pos:line="39" pos:column="41"/></name><operator pos:line="39" pos:column="41">.<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">plugin<pos:position pos:line="39" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">vl<pos:position pos:line="40" pos:column="5"/></name><operator pos:line="40" pos:column="5">.<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">plugin<pos:position pos:line="40" pos:column="12"/></name><index pos:line="40" pos:column="12">[<expr><sizeof pos:line="40" pos:column="13">sizeof <argument_list pos:line="40" pos:column="20">(<argument><expr><name><name pos:line="40" pos:column="21">vl<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">plugin<pos:position pos:line="40" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="31"/></argument_list></sizeof> <operator pos:line="40" pos:column="32">-<pos:position pos:line="40" pos:column="33"/></operator> <literal type="number" pos:line="40" pos:column="34">1<pos:position pos:line="40" pos:column="35"/></literal></expr>]<pos:position pos:line="40" pos:column="36"/></index></name> <operator pos:line="40" pos:column="37">=<pos:position pos:line="40" pos:column="38"/></operator> <literal type="char" pos:line="40" pos:column="39">'\0'<pos:position pos:line="40" pos:column="43"/></literal></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">plugin_instance<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">!=<pos:position pos:line="41" pos:column="25"/></operator> <name pos:line="41" pos:column="26">NULL<pos:position pos:line="41" pos:column="30"/></name></expr>)<pos:position pos:line="41" pos:column="31"/></condition><then pos:line="41" pos:column="31">
  <block pos:line="42" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">strncpy<pos:position pos:line="43" pos:column="12"/></name> <argument_list pos:line="43" pos:column="13">(<argument><expr><name><name pos:line="43" pos:column="14">vl<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">.<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">plugin_instance<pos:position pos:line="43" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">plugin_instance<pos:position pos:line="43" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="51">sizeof <argument_list pos:line="43" pos:column="58">(<argument><expr><name><name pos:line="43" pos:column="59">vl<pos:position pos:line="43" pos:column="61"/></name><operator pos:line="43" pos:column="61">.<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="62">plugin_instance<pos:position pos:line="43" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">vl<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">.<pos:position pos:line="44" pos:column="8"/></operator><name pos:line="44" pos:column="8">plugin_instance<pos:position pos:line="44" pos:column="23"/></name><index pos:line="44" pos:column="23">[<expr><sizeof pos:line="44" pos:column="24">sizeof <argument_list pos:line="44" pos:column="31">(<argument><expr><name><name pos:line="44" pos:column="32">vl<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">.<pos:position pos:line="44" pos:column="35"/></operator><name pos:line="44" pos:column="35">plugin_instance<pos:position pos:line="44" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></sizeof> <operator pos:line="44" pos:column="52">-<pos:position pos:line="44" pos:column="53"/></operator> <literal type="number" pos:line="44" pos:column="54">1<pos:position pos:line="44" pos:column="55"/></literal></expr>]<pos:position pos:line="44" pos:column="56"/></index></name> <operator pos:line="44" pos:column="57">=<pos:position pos:line="44" pos:column="58"/></operator> <literal type="char" pos:line="44" pos:column="59">'\0'<pos:position pos:line="44" pos:column="63"/></literal></expr>;<pos:position pos:line="44" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">strncpy<pos:position pos:line="46" pos:column="10"/></name> <argument_list pos:line="46" pos:column="11">(<argument><expr><name><name pos:line="46" pos:column="12">ds<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">.<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">type<pos:position pos:line="46" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="21">type<pos:position pos:line="46" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="46" pos:column="27">sizeof <argument_list pos:line="46" pos:column="34">(<argument><expr><name><name pos:line="46" pos:column="35">ds<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">.<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="38">type<pos:position pos:line="46" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="47" pos:column="3">ds<pos:position pos:line="47" pos:column="5"/></name><operator pos:line="47" pos:column="5">.<pos:position pos:line="47" pos:column="6"/></operator><name pos:line="47" pos:column="6">type<pos:position pos:line="47" pos:column="10"/></name><index pos:line="47" pos:column="10">[<expr><sizeof pos:line="47" pos:column="11">sizeof <argument_list pos:line="47" pos:column="18">(<argument><expr><name><name pos:line="47" pos:column="19">ds<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">.<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">type<pos:position pos:line="47" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="27"/></argument_list></sizeof> <operator pos:line="47" pos:column="28">-<pos:position pos:line="47" pos:column="29"/></operator> <literal type="number" pos:line="47" pos:column="30">1<pos:position pos:line="47" pos:column="31"/></literal></expr>]<pos:position pos:line="47" pos:column="32"/></index></name> <operator pos:line="47" pos:column="33">=<pos:position pos:line="47" pos:column="34"/></operator> <literal type="char" pos:line="47" pos:column="35">'\0'<pos:position pos:line="47" pos:column="39"/></literal></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">type_instance<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">!=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">NULL<pos:position pos:line="48" pos:column="28"/></name></expr>)<pos:position pos:line="48" pos:column="29"/></condition><then pos:line="48" pos:column="29">
  <block pos:line="49" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">strncpy<pos:position pos:line="50" pos:column="12"/></name> <argument_list pos:line="50" pos:column="13">(<argument><expr><name><name pos:line="50" pos:column="14">vl<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">type_instance<pos:position pos:line="50" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="32">type_instance<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="47">sizeof <argument_list pos:line="50" pos:column="54">(<argument><expr><name><name pos:line="50" pos:column="55">vl<pos:position pos:line="50" pos:column="57"/></name><operator pos:line="50" pos:column="57">.<pos:position pos:line="50" pos:column="58"/></operator><name pos:line="50" pos:column="58">type_instance<pos:position pos:line="50" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">vl<pos:position pos:line="51" pos:column="7"/></name><operator pos:line="51" pos:column="7">.<pos:position pos:line="51" pos:column="8"/></operator><name pos:line="51" pos:column="8">type_instance<pos:position pos:line="51" pos:column="21"/></name><index pos:line="51" pos:column="21">[<expr><sizeof pos:line="51" pos:column="22">sizeof <argument_list pos:line="51" pos:column="29">(<argument><expr><name><name pos:line="51" pos:column="30">vl<pos:position pos:line="51" pos:column="32"/></name><operator pos:line="51" pos:column="32">.<pos:position pos:line="51" pos:column="33"/></operator><name pos:line="51" pos:column="33">type_instance<pos:position pos:line="51" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="47"/></argument_list></sizeof> <operator pos:line="51" pos:column="48">-<pos:position pos:line="51" pos:column="49"/></operator> <literal type="number" pos:line="51" pos:column="50">1<pos:position pos:line="51" pos:column="51"/></literal></expr>]<pos:position pos:line="51" pos:column="52"/></index></name> <operator pos:line="51" pos:column="53">=<pos:position pos:line="51" pos:column="54"/></operator> <literal type="char" pos:line="51" pos:column="55">'\0'<pos:position pos:line="51" pos:column="59"/></literal></expr>;<pos:position pos:line="51" pos:column="60"/></expr_stmt>
  }<pos:position pos:line="52" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="54" pos:column="3">sfree<pos:position pos:line="54" pos:column="8"/></name> <argument_list pos:line="54" pos:column="9">(<argument><expr><name pos:line="54" pos:column="10">name_copy<pos:position pos:line="54" pos:column="19"/></name></expr></argument>)<pos:position pos:line="54" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="55" pos:column="3">host<pos:position pos:line="55" pos:column="7"/></name> <operator pos:line="55" pos:column="8">=<pos:position pos:line="55" pos:column="9"/></operator> <name pos:line="55" pos:column="10">plugin<pos:position pos:line="55" pos:column="16"/></name> <operator pos:line="55" pos:column="17">=<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="19">plugin_instance<pos:position pos:line="55" pos:column="34"/></name> <operator pos:line="55" pos:column="35">=<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="37">type<pos:position pos:line="55" pos:column="41"/></name> <operator pos:line="55" pos:column="42">=<pos:position pos:line="55" pos:column="43"/></operator> <name pos:line="55" pos:column="44">type_instance<pos:position pos:line="55" pos:column="57"/></name> <operator pos:line="55" pos:column="58">=<pos:position pos:line="55" pos:column="59"/></operator> <name pos:line="55" pos:column="60">NULL<pos:position pos:line="55" pos:column="64"/></name></expr>;<pos:position pos:line="55" pos:column="65"/></expr_stmt>

  <expr_stmt><expr><name pos:line="57" pos:column="3">th<pos:position pos:line="57" pos:column="5"/></name> <operator pos:line="57" pos:column="6">=<pos:position pos:line="57" pos:column="7"/></operator> <call><name pos:line="57" pos:column="8">threshold_search<pos:position pos:line="57" pos:column="24"/></name> <argument_list pos:line="57" pos:column="25">(<argument><expr><operator pos:line="57" pos:column="26">&amp;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="27">ds<pos:position pos:line="57" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="31">&amp;<pos:position pos:line="57" pos:column="36"/></operator><name pos:line="57" pos:column="32">vl<pos:position pos:line="57" pos:column="34"/></name></expr></argument>)<pos:position pos:line="57" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="36"/></expr_stmt>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><name pos:line="58" pos:column="7">th<pos:position pos:line="58" pos:column="9"/></name> <operator pos:line="58" pos:column="10">==<pos:position pos:line="58" pos:column="12"/></operator> <name pos:line="58" pos:column="13">NULL<pos:position pos:line="58" pos:column="17"/></name></expr>)<pos:position pos:line="58" pos:column="18"/></condition><then pos:line="58" pos:column="18">
    <block type="pseudo"><return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">(<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="13">0<pos:position pos:line="59" pos:column="14"/></literal><operator pos:line="59" pos:column="14">)<pos:position pos:line="59" pos:column="15"/></operator></expr>;<pos:position pos:line="59" pos:column="16"/></return></block></then></if>
  <if pos:line="60" pos:column="3">if <condition pos:line="60" pos:column="6">(<expr><operator pos:line="60" pos:column="7">(<pos:position pos:line="60" pos:column="8"/></operator><name><name pos:line="60" pos:column="8">th<pos:position pos:line="60" pos:column="10"/></name><operator pos:line="60" pos:column="10">-&gt;<pos:position pos:line="60" pos:column="15"/></operator><name pos:line="60" pos:column="12">flags<pos:position pos:line="60" pos:column="17"/></name></name> <operator pos:line="60" pos:column="18">&amp;<pos:position pos:line="60" pos:column="23"/></operator> <name pos:line="60" pos:column="20">UT_FLAG_PERSIST<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">)<pos:position pos:line="60" pos:column="36"/></operator> <operator pos:line="60" pos:column="37">==<pos:position pos:line="60" pos:column="39"/></operator> <literal type="number" pos:line="60" pos:column="40">0<pos:position pos:line="60" pos:column="41"/></literal></expr>)<pos:position pos:line="60" pos:column="42"/></condition><then pos:line="60" pos:column="42">
    <block type="pseudo"><return pos:line="61" pos:column="5">return <expr><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><literal type="number" pos:line="61" pos:column="13">1<pos:position pos:line="61" pos:column="14"/></literal><operator pos:line="61" pos:column="14">)<pos:position pos:line="61" pos:column="15"/></operator></expr>;<pos:position pos:line="61" pos:column="16"/></return></block></then></if>
  <return pos:line="62" pos:column="3">return <expr><operator pos:line="62" pos:column="10">(<pos:position pos:line="62" pos:column="11"/></operator><literal type="number" pos:line="62" pos:column="11">2<pos:position pos:line="62" pos:column="12"/></literal><operator pos:line="62" pos:column="12">)<pos:position pos:line="62" pos:column="13"/></operator></expr>;<pos:position pos:line="62" pos:column="14"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

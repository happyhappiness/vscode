<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1532_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int64_t<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">rrd_get_random_variation<pos:position pos:line="1" pos:column="40"/></name> <parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><name pos:line="1" pos:column="42">void<pos:position pos:line="1" pos:column="46"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">long<pos:position pos:line="3" pos:column="7"/></name></type> <name pos:line="3" pos:column="8">min<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">long<pos:position pos:line="4" pos:column="7"/></name></type> <name pos:line="4" pos:column="8">max<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">random_timeout<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">==<pos:position pos:line="6" pos:column="24"/></operator> <literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="9" pos:column="3">/* Assure that "cache_timeout + random_variation" is never negative. */</comment>
  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><name pos:line="10" pos:column="7">random_timeout<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&gt;<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="24">cache_timeout<pos:position pos:line="10" pos:column="37"/></name></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
  <block pos:line="11" pos:column="3">{
	  <expr_stmt><expr><call><name pos:line="12" pos:column="11">INFO<pos:position pos:line="12" pos:column="15"/></name> <argument_list pos:line="12" pos:column="16">(<argument><expr><literal type="string" pos:line="12" pos:column="17">"rrdtool plugin: Adjusting \"RandomTimeout\" to %.3f seconds."<pos:position pos:line="12" pos:column="79"/></literal></expr></argument>,
			  <argument><expr><call><name pos:line="13" pos:column="27">CDTIME_T_TO_DOUBLE<pos:position pos:line="13" pos:column="45"/></name> <argument_list pos:line="13" pos:column="46">(<argument><expr><name pos:line="13" pos:column="47">cache_timeout<pos:position pos:line="13" pos:column="60"/></name></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
	  <expr_stmt><expr><name pos:line="14" pos:column="11">random_timeout<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <name pos:line="14" pos:column="28">cache_timeout<pos:position pos:line="14" pos:column="41"/></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="17" pos:column="3">max<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call pos:line="17" pos:column="9">(<name pos:line="17" pos:column="10">long<pos:position pos:line="17" pos:column="14"/></name>) <argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">random_timeout<pos:position pos:line="17" pos:column="31"/></name> <operator pos:line="17" pos:column="32">/<pos:position pos:line="17" pos:column="33"/></operator> <literal type="number" pos:line="17" pos:column="34">2<pos:position pos:line="17" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><name pos:line="18" pos:column="3">min<pos:position pos:line="18" pos:column="6"/></name> <operator pos:line="18" pos:column="7">=<pos:position pos:line="18" pos:column="8"/></operator> <name pos:line="18" pos:column="9">max<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">-<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">long<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">)<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">random_timeout<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">)<pos:position pos:line="18" pos:column="38"/></operator></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

  <return pos:line="20" pos:column="3">return <expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><operator pos:line="20" pos:column="11">(<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">int64_t<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">)<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">cdrand_range<pos:position pos:line="20" pos:column="33"/></name> <argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">min<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="40">max<pos:position pos:line="20" pos:column="43"/></name></expr></argument>)<pos:position pos:line="20" pos:column="44"/></argument_list></call><operator pos:line="20" pos:column="44">)<pos:position pos:line="20" pos:column="45"/></operator></expr>;<pos:position pos:line="20" pos:column="46"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

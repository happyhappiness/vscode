<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_290_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">varnish_config_instance<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">oconfig_item_t<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">ci<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="61"/></parameter_list> <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">user_config_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">conf<pos:position pos:line="3" pos:column="22"/></name></decl>;<pos:position pos:line="3" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">callback_name<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><name pos:line="4" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="4" pos:column="39"/></name></expr>]<pos:position pos:line="4" pos:column="40"/></index></name></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>

  <expr_stmt><expr><name pos:line="6" pos:column="3">conf<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">calloc<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="number" pos:line="6" pos:column="17">1<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="20">sizeof<argument_list pos:line="6" pos:column="26">(<argument><expr><operator pos:line="6" pos:column="27">*<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">conf<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">conf<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">ENOMEM<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">)<pos:position pos:line="8" pos:column="20"/></operator></expr>;<pos:position pos:line="8" pos:column="21"/></return></block></then></if>
  <expr_stmt><expr><name><name pos:line="9" pos:column="3">conf<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">instance<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="11" pos:column="3">varnish_config_apply_default<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">conf<pos:position pos:line="11" pos:column="36"/></name></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="38"/></expr_stmt>

  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name><name pos:line="13" pos:column="7">ci<pos:position pos:line="13" pos:column="9"/></name><operator pos:line="13" pos:column="9">-&gt;<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="11">values_num<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">==<pos:position pos:line="13" pos:column="24"/></operator> <literal type="number" pos:line="13" pos:column="25">1<pos:position pos:line="13" pos:column="26"/></literal></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27"> <block pos:line="13" pos:column="28">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name></decl>;<pos:position pos:line="14" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">status<pos:position pos:line="16" pos:column="11"/></name> <operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator> <call><name pos:line="16" pos:column="14">cf_util_get_string<pos:position pos:line="16" pos:column="32"/></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">ci<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="37">&amp;<pos:position pos:line="16" pos:column="42"/></operator><name><name pos:line="16" pos:column="38">conf<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">instance<pos:position pos:line="16" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">status<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">!=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">0<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21"> <block pos:line="17" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">sfree<pos:position pos:line="18" pos:column="12"/></name><argument_list pos:line="18" pos:column="12">(<argument><expr><name pos:line="18" pos:column="13">conf<pos:position pos:line="18" pos:column="17"/></name></expr></argument>)<pos:position pos:line="18" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
      <return pos:line="19" pos:column="7">return <expr><operator pos:line="19" pos:column="14">(<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">status<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">)<pos:position pos:line="19" pos:column="22"/></operator></expr>;<pos:position pos:line="19" pos:column="23"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name><name pos:line="21" pos:column="12">conf<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">instance<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">!=<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">NULL<pos:position pos:line="21" pos:column="34"/></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name pos:line="23" pos:column="9">strcmp<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="string" pos:line="23" pos:column="16">"localhost"<pos:position pos:line="23" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="29">conf<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">-&gt;<pos:position pos:line="23" pos:column="38"/></operator><name pos:line="23" pos:column="35">instance<pos:position pos:line="23" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call> <operator pos:line="23" pos:column="45">==<pos:position pos:line="23" pos:column="47"/></operator> <literal type="number" pos:line="23" pos:column="48">0<pos:position pos:line="23" pos:column="49"/></literal></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <block pos:line="23" pos:column="51">{
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">sfree<pos:position pos:line="24" pos:column="12"/></name><argument_list pos:line="24" pos:column="12">(<argument><expr><name><name pos:line="24" pos:column="13">conf<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">-&gt;<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="19">instance<pos:position pos:line="24" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="25" pos:column="7">conf<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">instance<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">=<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">NULL<pos:position pos:line="25" pos:column="28"/></name></expr>;<pos:position pos:line="25" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
  }<pos:position pos:line="27" pos:column="4"/></block></then> <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><name><name pos:line="27" pos:column="14">ci<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">values_num<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">&gt;<pos:position pos:line="27" pos:column="33"/></operator> <literal type="number" pos:line="27" pos:column="31">1<pos:position pos:line="27" pos:column="32"/></literal></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33"> <block pos:line="27" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">WARNING<pos:position pos:line="28" pos:column="12"/></name><argument_list pos:line="28" pos:column="12">(<argument><expr><literal type="string" pos:line="28" pos:column="13">"Varnish plugin: \"Instance\" blocks accept only "<pos:position pos:line="28" pos:column="63"/></literal>
            <literal type="string" pos:line="29" pos:column="13">"one argument."<pos:position pos:line="29" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">sfree<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><name pos:line="30" pos:column="11">conf<pos:position pos:line="30" pos:column="15"/></name></expr></argument>)<pos:position pos:line="30" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">EINVAL<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">)<pos:position pos:line="31" pos:column="20"/></operator></expr>;<pos:position pos:line="31" pos:column="21"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if></elseif></if>

  <for pos:line="34" pos:column="3">for <control pos:line="34" pos:column="7">(<init><decl><type><name pos:line="34" pos:column="8">int<pos:position pos:line="34" pos:column="11"/></name></type> <name pos:line="34" pos:column="12">i<pos:position pos:line="34" pos:column="13"/></name> <init pos:line="34" pos:column="14">= <expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="34" pos:column="18"/></init> <condition><expr><name pos:line="34" pos:column="19">i<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">&lt;<pos:position pos:line="34" pos:column="25"/></operator> <name><name pos:line="34" pos:column="23">ci<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">-&gt;<pos:position pos:line="34" pos:column="30"/></operator><name pos:line="34" pos:column="27">children_num<pos:position pos:line="34" pos:column="39"/></name></name></expr>;<pos:position pos:line="34" pos:column="40"/></condition> <incr><expr><name pos:line="34" pos:column="41">i<pos:position pos:line="34" pos:column="42"/></name><operator pos:line="34" pos:column="42">++<pos:position pos:line="34" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="34" pos:column="45"/></control> <block pos:line="34" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">oconfig_item_t<pos:position pos:line="35" pos:column="19"/></name> <modifier pos:line="35" pos:column="20">*<pos:position pos:line="35" pos:column="21"/></modifier></type><name pos:line="35" pos:column="21">child<pos:position pos:line="35" pos:column="26"/></name> <init pos:line="35" pos:column="27">= <expr><name><name pos:line="35" pos:column="29">ci<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">-&gt;<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="33">children<pos:position pos:line="35" pos:column="41"/></name></name> <operator pos:line="35" pos:column="42">+<pos:position pos:line="35" pos:column="43"/></operator> <name pos:line="35" pos:column="44">i<pos:position pos:line="35" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="46"/></decl_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">strcasecmp<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="string" pos:line="37" pos:column="20">"CollectCache"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">child<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">key<pos:position pos:line="37" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call> <operator pos:line="37" pos:column="48">==<pos:position pos:line="37" pos:column="50"/></operator> <literal type="number" pos:line="37" pos:column="51">0<pos:position pos:line="37" pos:column="52"/></literal></expr>)<pos:position pos:line="37" pos:column="53"/></condition><then pos:line="37" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="38" pos:column="7">cf_util_get_boolean<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">(<argument><expr><name pos:line="38" pos:column="27">child<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="34">&amp;<pos:position pos:line="38" pos:column="39"/></operator><name><name pos:line="38" pos:column="35">conf<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">collect_cache<pos:position pos:line="38" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="56"/></expr_stmt></block></then>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><literal type="string" pos:line="39" pos:column="25">"CollectConnections"<pos:position pos:line="39" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="47">child<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">key<pos:position pos:line="39" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call> <operator pos:line="39" pos:column="59">==<pos:position pos:line="39" pos:column="61"/></operator> <literal type="number" pos:line="39" pos:column="62">0<pos:position pos:line="39" pos:column="63"/></literal></expr>)<pos:position pos:line="39" pos:column="64"/></condition><then pos:line="39" pos:column="64">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">cf_util_get_boolean<pos:position pos:line="40" pos:column="26"/></name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">child<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="34">&amp;<pos:position pos:line="40" pos:column="39"/></operator><name><name pos:line="40" pos:column="35">conf<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">collect_connections<pos:position pos:line="40" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><literal type="string" pos:line="41" pos:column="25">"CollectESI"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">child<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">key<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call> <operator pos:line="41" pos:column="51">==<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="7">cf_util_get_boolean<pos:position pos:line="42" pos:column="26"/></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">child<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="34">&amp;<pos:position pos:line="42" pos:column="39"/></operator><name><name pos:line="42" pos:column="35">conf<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">collect_esi<pos:position pos:line="42" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><call><name pos:line="43" pos:column="14">strcasecmp<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><literal type="string" pos:line="43" pos:column="25">"CollectDirectorDNS"<pos:position pos:line="43" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="47">child<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">-&gt;<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="54">key<pos:position pos:line="43" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="58"/></argument_list></call> <operator pos:line="43" pos:column="59">==<pos:position pos:line="43" pos:column="61"/></operator> <literal type="number" pos:line="43" pos:column="62">0<pos:position pos:line="43" pos:column="63"/></literal></expr>)<pos:position pos:line="43" pos:column="64"/></condition><then pos:line="43" pos:column="64">
<cpp:ifdef pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">ifdef<pos:position pos:line="44" pos:column="7"/></cpp:directive> <name pos:line="44" pos:column="8">HAVE_VARNISH_V3<pos:position pos:line="44" pos:column="23"/></name></cpp:ifdef>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="7">cf_util_get_boolean<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">child<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="34">&amp;<pos:position pos:line="45" pos:column="39"/></operator><name><name pos:line="45" pos:column="35">conf<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">collect_dirdns<pos:position pos:line="45" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="57"/></expr_stmt></block></then></if></elseif></if>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="47" pos:column="7">WARNING<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><literal type="string" pos:line="47" pos:column="15">"Varnish plugin: \"%s\" is available for Varnish %s only."<pos:position pos:line="47" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="48" pos:column="15">child<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">key<pos:position pos:line="48" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"v3"<pos:position pos:line="48" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="50" pos:column="5">else <if pos:line="50" pos:column="10">if <condition pos:line="50" pos:column="13">(<expr><call><name pos:line="50" pos:column="14">strcasecmp<pos:position pos:line="50" pos:column="24"/></name><argument_list pos:line="50" pos:column="24">(<argument><expr><literal type="string" pos:line="50" pos:column="25">"CollectBackend"<pos:position pos:line="50" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="43">child<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">-&gt;<pos:position pos:line="50" pos:column="53"/></operator><name pos:line="50" pos:column="50">key<pos:position pos:line="50" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="54"/></argument_list></call> <operator pos:line="50" pos:column="55">==<pos:position pos:line="50" pos:column="57"/></operator> <literal type="number" pos:line="50" pos:column="58">0<pos:position pos:line="50" pos:column="59"/></literal></expr>)<pos:position pos:line="50" pos:column="60"/></condition><then pos:line="50" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="7">cf_util_get_boolean<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">child<pos:position pos:line="51" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="51" pos:column="34">&amp;<pos:position pos:line="51" pos:column="39"/></operator><name><name pos:line="51" pos:column="35">conf<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">-&gt;<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="41">collect_backend<pos:position pos:line="51" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="52" pos:column="5">else <if pos:line="52" pos:column="10">if <condition pos:line="52" pos:column="13">(<expr><call><name pos:line="52" pos:column="14">strcasecmp<pos:position pos:line="52" pos:column="24"/></name><argument_list pos:line="52" pos:column="24">(<argument><expr><literal type="string" pos:line="52" pos:column="25">"CollectFetch"<pos:position pos:line="52" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="41">child<pos:position pos:line="52" pos:column="46"/></name><operator pos:line="52" pos:column="46">-&gt;<pos:position pos:line="52" pos:column="51"/></operator><name pos:line="52" pos:column="48">key<pos:position pos:line="52" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call> <operator pos:line="52" pos:column="53">==<pos:position pos:line="52" pos:column="55"/></operator> <literal type="number" pos:line="52" pos:column="56">0<pos:position pos:line="52" pos:column="57"/></literal></expr>)<pos:position pos:line="52" pos:column="58"/></condition><then pos:line="52" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="7">cf_util_get_boolean<pos:position pos:line="53" pos:column="26"/></name><argument_list pos:line="53" pos:column="26">(<argument><expr><name pos:line="53" pos:column="27">child<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="34">&amp;<pos:position pos:line="53" pos:column="39"/></operator><name><name pos:line="53" pos:column="35">conf<pos:position pos:line="53" pos:column="39"/></name><operator pos:line="53" pos:column="39">-&gt;<pos:position pos:line="53" pos:column="44"/></operator><name pos:line="53" pos:column="41">collect_fetch<pos:position pos:line="53" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="54" pos:column="5">else <if pos:line="54" pos:column="10">if <condition pos:line="54" pos:column="13">(<expr><call><name pos:line="54" pos:column="14">strcasecmp<pos:position pos:line="54" pos:column="24"/></name><argument_list pos:line="54" pos:column="24">(<argument><expr><literal type="string" pos:line="54" pos:column="25">"CollectHCB"<pos:position pos:line="54" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="54" pos:column="39">child<pos:position pos:line="54" pos:column="44"/></name><operator pos:line="54" pos:column="44">-&gt;<pos:position pos:line="54" pos:column="49"/></operator><name pos:line="54" pos:column="46">key<pos:position pos:line="54" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="50"/></argument_list></call> <operator pos:line="54" pos:column="51">==<pos:position pos:line="54" pos:column="53"/></operator> <literal type="number" pos:line="54" pos:column="54">0<pos:position pos:line="54" pos:column="55"/></literal></expr>)<pos:position pos:line="54" pos:column="56"/></condition><then pos:line="54" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="7">cf_util_get_boolean<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">child<pos:position pos:line="55" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="34">&amp;<pos:position pos:line="55" pos:column="39"/></operator><name><name pos:line="55" pos:column="35">conf<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">-&gt;<pos:position pos:line="55" pos:column="44"/></operator><name pos:line="55" pos:column="41">collect_hcb<pos:position pos:line="55" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><call><name pos:line="56" pos:column="14">strcasecmp<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><literal type="string" pos:line="56" pos:column="25">"CollectObjects"<pos:position pos:line="56" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="43">child<pos:position pos:line="56" pos:column="48"/></name><operator pos:line="56" pos:column="48">-&gt;<pos:position pos:line="56" pos:column="53"/></operator><name pos:line="56" pos:column="50">key<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="54"/></argument_list></call> <operator pos:line="56" pos:column="55">==<pos:position pos:line="56" pos:column="57"/></operator> <literal type="number" pos:line="56" pos:column="58">0<pos:position pos:line="56" pos:column="59"/></literal></expr>)<pos:position pos:line="56" pos:column="60"/></condition><then pos:line="56" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="7">cf_util_get_boolean<pos:position pos:line="57" pos:column="26"/></name><argument_list pos:line="57" pos:column="26">(<argument><expr><name pos:line="57" pos:column="27">child<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="34">&amp;<pos:position pos:line="57" pos:column="39"/></operator><name><name pos:line="57" pos:column="35">conf<pos:position pos:line="57" pos:column="39"/></name><operator pos:line="57" pos:column="39">-&gt;<pos:position pos:line="57" pos:column="44"/></operator><name pos:line="57" pos:column="41">collect_objects<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="58" pos:column="5">else <if pos:line="58" pos:column="10">if <condition pos:line="58" pos:column="13">(<expr><call><name pos:line="58" pos:column="14">strcasecmp<pos:position pos:line="58" pos:column="24"/></name><argument_list pos:line="58" pos:column="24">(<argument><expr><literal type="string" pos:line="58" pos:column="25">"CollectPurge"<pos:position pos:line="58" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="41">child<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">-&gt;<pos:position pos:line="58" pos:column="51"/></operator><name pos:line="58" pos:column="48">key<pos:position pos:line="58" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call> <operator pos:line="58" pos:column="53">==<pos:position pos:line="58" pos:column="55"/></operator> <literal type="number" pos:line="58" pos:column="56">0<pos:position pos:line="58" pos:column="57"/></literal></expr>)<pos:position pos:line="58" pos:column="58"/></condition><then pos:line="58" pos:column="58">
<cpp:if pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">if<pos:position pos:line="59" pos:column="4"/></cpp:directive> <expr><name pos:line="59" pos:column="5">HAVE_VARNISH_V2<pos:position pos:line="59" pos:column="20"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="7">cf_util_get_boolean<pos:position pos:line="60" pos:column="26"/></name><argument_list pos:line="60" pos:column="26">(<argument><expr><name pos:line="60" pos:column="27">child<pos:position pos:line="60" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="34">&amp;<pos:position pos:line="60" pos:column="39"/></operator><name><name pos:line="60" pos:column="35">conf<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">-&gt;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="41">collect_purge<pos:position pos:line="60" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="56"/></expr_stmt></block></then></if></elseif>
<cpp:else pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">else<pos:position pos:line="61" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="62" pos:column="7">WARNING<pos:position pos:line="62" pos:column="14"/></name><argument_list pos:line="62" pos:column="14">(<argument><expr><literal type="string" pos:line="62" pos:column="15">"Varnish plugin: \"%s\" is available for Varnish %s only."<pos:position pos:line="62" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="63" pos:column="15">child<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">key<pos:position pos:line="63" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"v2"<pos:position pos:line="63" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="65" pos:column="5">else <if pos:line="65" pos:column="10">if <condition pos:line="65" pos:column="13">(<expr><call><name pos:line="65" pos:column="14">strcasecmp<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">(<argument><expr><literal type="string" pos:line="65" pos:column="25">"CollectBan"<pos:position pos:line="65" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="39">child<pos:position pos:line="65" pos:column="44"/></name><operator pos:line="65" pos:column="44">-&gt;<pos:position pos:line="65" pos:column="49"/></operator><name pos:line="65" pos:column="46">key<pos:position pos:line="65" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="50"/></argument_list></call> <operator pos:line="65" pos:column="51">==<pos:position pos:line="65" pos:column="53"/></operator> <literal type="number" pos:line="65" pos:column="54">0<pos:position pos:line="65" pos:column="55"/></literal></expr>)<pos:position pos:line="65" pos:column="56"/></condition><then pos:line="65" pos:column="56">
<cpp:if pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">if<pos:position pos:line="66" pos:column="4"/></cpp:directive> <expr><name pos:line="66" pos:column="5">HAVE_VARNISH_V2<pos:position pos:line="66" pos:column="20"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="7">WARNING<pos:position pos:line="67" pos:column="14"/></name><argument_list pos:line="67" pos:column="14">(<argument><expr><literal type="string" pos:line="67" pos:column="15">"Varnish plugin: \"%s\" is not available for Varnish %s."<pos:position pos:line="67" pos:column="72"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="68" pos:column="15">child<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">-&gt;<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="22">key<pos:position pos:line="68" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="27">"v2"<pos:position pos:line="68" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt></block></then></if></elseif>
<cpp:else pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">else<pos:position pos:line="69" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="70" pos:column="7">cf_util_get_boolean<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">(<argument><expr><name pos:line="70" pos:column="27">child<pos:position pos:line="70" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="34">&amp;<pos:position pos:line="70" pos:column="39"/></operator><name><name pos:line="70" pos:column="35">conf<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">-&gt;<pos:position pos:line="70" pos:column="44"/></operator><name pos:line="70" pos:column="41">collect_ban<pos:position pos:line="70" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="70" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="54"/></expr_stmt>
<cpp:endif pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">endif<pos:position pos:line="71" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="72" pos:column="5">else <if pos:line="72" pos:column="10">if <condition pos:line="72" pos:column="13">(<expr><call><name pos:line="72" pos:column="14">strcasecmp<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><literal type="string" pos:line="72" pos:column="25">"CollectSession"<pos:position pos:line="72" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="43">child<pos:position pos:line="72" pos:column="48"/></name><operator pos:line="72" pos:column="48">-&gt;<pos:position pos:line="72" pos:column="53"/></operator><name pos:line="72" pos:column="50">key<pos:position pos:line="72" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="54"/></argument_list></call> <operator pos:line="72" pos:column="55">==<pos:position pos:line="72" pos:column="57"/></operator> <literal type="number" pos:line="72" pos:column="58">0<pos:position pos:line="72" pos:column="59"/></literal></expr>)<pos:position pos:line="72" pos:column="60"/></condition><then pos:line="72" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="73" pos:column="7">cf_util_get_boolean<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">child<pos:position pos:line="73" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="34">&amp;<pos:position pos:line="73" pos:column="39"/></operator><name><name pos:line="73" pos:column="35">conf<pos:position pos:line="73" pos:column="39"/></name><operator pos:line="73" pos:column="39">-&gt;<pos:position pos:line="73" pos:column="44"/></operator><name pos:line="73" pos:column="41">collect_session<pos:position pos:line="73" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="74" pos:column="5">else <if pos:line="74" pos:column="10">if <condition pos:line="74" pos:column="13">(<expr><call><name pos:line="74" pos:column="14">strcasecmp<pos:position pos:line="74" pos:column="24"/></name><argument_list pos:line="74" pos:column="24">(<argument><expr><literal type="string" pos:line="74" pos:column="25">"CollectSHM"<pos:position pos:line="74" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="39">child<pos:position pos:line="74" pos:column="44"/></name><operator pos:line="74" pos:column="44">-&gt;<pos:position pos:line="74" pos:column="49"/></operator><name pos:line="74" pos:column="46">key<pos:position pos:line="74" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="50"/></argument_list></call> <operator pos:line="74" pos:column="51">==<pos:position pos:line="74" pos:column="53"/></operator> <literal type="number" pos:line="74" pos:column="54">0<pos:position pos:line="74" pos:column="55"/></literal></expr>)<pos:position pos:line="74" pos:column="56"/></condition><then pos:line="74" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="75" pos:column="7">cf_util_get_boolean<pos:position pos:line="75" pos:column="26"/></name><argument_list pos:line="75" pos:column="26">(<argument><expr><name pos:line="75" pos:column="27">child<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="34">&amp;<pos:position pos:line="75" pos:column="39"/></operator><name><name pos:line="75" pos:column="35">conf<pos:position pos:line="75" pos:column="39"/></name><operator pos:line="75" pos:column="39">-&gt;<pos:position pos:line="75" pos:column="44"/></operator><name pos:line="75" pos:column="41">collect_shm<pos:position pos:line="75" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="76" pos:column="5">else <if pos:line="76" pos:column="10">if <condition pos:line="76" pos:column="13">(<expr><call><name pos:line="76" pos:column="14">strcasecmp<pos:position pos:line="76" pos:column="24"/></name><argument_list pos:line="76" pos:column="24">(<argument><expr><literal type="string" pos:line="76" pos:column="25">"CollectSMS"<pos:position pos:line="76" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="39">child<pos:position pos:line="76" pos:column="44"/></name><operator pos:line="76" pos:column="44">-&gt;<pos:position pos:line="76" pos:column="49"/></operator><name pos:line="76" pos:column="46">key<pos:position pos:line="76" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call> <operator pos:line="76" pos:column="51">==<pos:position pos:line="76" pos:column="53"/></operator> <literal type="number" pos:line="76" pos:column="54">0<pos:position pos:line="76" pos:column="55"/></literal></expr>)<pos:position pos:line="76" pos:column="56"/></condition><then pos:line="76" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="7">cf_util_get_boolean<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><name pos:line="77" pos:column="27">child<pos:position pos:line="77" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="77" pos:column="34">&amp;<pos:position pos:line="77" pos:column="39"/></operator><name><name pos:line="77" pos:column="35">conf<pos:position pos:line="77" pos:column="39"/></name><operator pos:line="77" pos:column="39">-&gt;<pos:position pos:line="77" pos:column="44"/></operator><name pos:line="77" pos:column="41">collect_sms<pos:position pos:line="77" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="78" pos:column="5">else <if pos:line="78" pos:column="10">if <condition pos:line="78" pos:column="13">(<expr><call><name pos:line="78" pos:column="14">strcasecmp<pos:position pos:line="78" pos:column="24"/></name><argument_list pos:line="78" pos:column="24">(<argument><expr><literal type="string" pos:line="78" pos:column="25">"CollectSMA"<pos:position pos:line="78" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="39">child<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">key<pos:position pos:line="78" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="50"/></argument_list></call> <operator pos:line="78" pos:column="51">==<pos:position pos:line="78" pos:column="53"/></operator> <literal type="number" pos:line="78" pos:column="54">0<pos:position pos:line="78" pos:column="55"/></literal></expr>)<pos:position pos:line="78" pos:column="56"/></condition><then pos:line="78" pos:column="56">
<cpp:if pos:line="79" pos:column="1">#<cpp:directive pos:line="79" pos:column="2">if<pos:position pos:line="79" pos:column="4"/></cpp:directive> <expr><name pos:line="79" pos:column="5">HAVE_VARNISH_V2<pos:position pos:line="79" pos:column="20"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="80" pos:column="7">cf_util_get_boolean<pos:position pos:line="80" pos:column="26"/></name><argument_list pos:line="80" pos:column="26">(<argument><expr><name pos:line="80" pos:column="27">child<pos:position pos:line="80" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="80" pos:column="34">&amp;<pos:position pos:line="80" pos:column="39"/></operator><name><name pos:line="80" pos:column="35">conf<pos:position pos:line="80" pos:column="39"/></name><operator pos:line="80" pos:column="39">-&gt;<pos:position pos:line="80" pos:column="44"/></operator><name pos:line="80" pos:column="41">collect_sma<pos:position pos:line="80" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="54"/></expr_stmt></block></then></if></elseif>
<cpp:else pos:line="81" pos:column="1">#<cpp:directive pos:line="81" pos:column="2">else<pos:position pos:line="81" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="82" pos:column="7">WARNING<pos:position pos:line="82" pos:column="14"/></name><argument_list pos:line="82" pos:column="14">(<argument><expr><literal type="string" pos:line="82" pos:column="15">"Varnish plugin: \"%s\" is available for Varnish %s only."<pos:position pos:line="82" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="83" pos:column="15">child<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">key<pos:position pos:line="83" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="27">"v2"<pos:position pos:line="83" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="85" pos:column="5">else <if pos:line="85" pos:column="10">if <condition pos:line="85" pos:column="13">(<expr><call><name pos:line="85" pos:column="14">strcasecmp<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><literal type="string" pos:line="85" pos:column="25">"CollectSM"<pos:position pos:line="85" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="38">child<pos:position pos:line="85" pos:column="43"/></name><operator pos:line="85" pos:column="43">-&gt;<pos:position pos:line="85" pos:column="48"/></operator><name pos:line="85" pos:column="45">key<pos:position pos:line="85" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="49"/></argument_list></call> <operator pos:line="85" pos:column="50">==<pos:position pos:line="85" pos:column="52"/></operator> <literal type="number" pos:line="85" pos:column="53">0<pos:position pos:line="85" pos:column="54"/></literal></expr>)<pos:position pos:line="85" pos:column="55"/></condition><then pos:line="85" pos:column="55">
<cpp:if pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">if<pos:position pos:line="86" pos:column="4"/></cpp:directive> <expr><name pos:line="86" pos:column="5">HAVE_VARNISH_V2<pos:position pos:line="86" pos:column="20"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="87" pos:column="7">cf_util_get_boolean<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">child<pos:position pos:line="87" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="87" pos:column="34">&amp;<pos:position pos:line="87" pos:column="39"/></operator><name><name pos:line="87" pos:column="35">conf<pos:position pos:line="87" pos:column="39"/></name><operator pos:line="87" pos:column="39">-&gt;<pos:position pos:line="87" pos:column="44"/></operator><name pos:line="87" pos:column="41">collect_sm<pos:position pos:line="87" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="53"/></expr_stmt></block></then></if></elseif>
<cpp:else pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">else<pos:position pos:line="88" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="89" pos:column="7">WARNING<pos:position pos:line="89" pos:column="14"/></name><argument_list pos:line="89" pos:column="14">(<argument><expr><literal type="string" pos:line="89" pos:column="15">"Varnish plugin: \"%s\" is available for Varnish %s only."<pos:position pos:line="89" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="90" pos:column="15">child<pos:position pos:line="90" pos:column="20"/></name><operator pos:line="90" pos:column="20">-&gt;<pos:position pos:line="90" pos:column="25"/></operator><name pos:line="90" pos:column="22">key<pos:position pos:line="90" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="27">"v2"<pos:position pos:line="90" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="92" pos:column="5">else <if pos:line="92" pos:column="10">if <condition pos:line="92" pos:column="13">(<expr><call><name pos:line="92" pos:column="14">strcasecmp<pos:position pos:line="92" pos:column="24"/></name><argument_list pos:line="92" pos:column="24">(<argument><expr><literal type="string" pos:line="92" pos:column="25">"CollectStruct"<pos:position pos:line="92" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="42">child<pos:position pos:line="92" pos:column="47"/></name><operator pos:line="92" pos:column="47">-&gt;<pos:position pos:line="92" pos:column="52"/></operator><name pos:line="92" pos:column="49">key<pos:position pos:line="92" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call> <operator pos:line="92" pos:column="54">==<pos:position pos:line="92" pos:column="56"/></operator> <literal type="number" pos:line="92" pos:column="57">0<pos:position pos:line="92" pos:column="58"/></literal></expr>)<pos:position pos:line="92" pos:column="59"/></condition><then pos:line="92" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="7">cf_util_get_boolean<pos:position pos:line="93" pos:column="26"/></name><argument_list pos:line="93" pos:column="26">(<argument><expr><name pos:line="93" pos:column="27">child<pos:position pos:line="93" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="34">&amp;<pos:position pos:line="93" pos:column="39"/></operator><name><name pos:line="93" pos:column="35">conf<pos:position pos:line="93" pos:column="39"/></name><operator pos:line="93" pos:column="39">-&gt;<pos:position pos:line="93" pos:column="44"/></operator><name pos:line="93" pos:column="41">collect_struct<pos:position pos:line="93" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="94" pos:column="5">else <if pos:line="94" pos:column="10">if <condition pos:line="94" pos:column="13">(<expr><call><name pos:line="94" pos:column="14">strcasecmp<pos:position pos:line="94" pos:column="24"/></name><argument_list pos:line="94" pos:column="24">(<argument><expr><literal type="string" pos:line="94" pos:column="25">"CollectTotals"<pos:position pos:line="94" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="42">child<pos:position pos:line="94" pos:column="47"/></name><operator pos:line="94" pos:column="47">-&gt;<pos:position pos:line="94" pos:column="52"/></operator><name pos:line="94" pos:column="49">key<pos:position pos:line="94" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="53"/></argument_list></call> <operator pos:line="94" pos:column="54">==<pos:position pos:line="94" pos:column="56"/></operator> <literal type="number" pos:line="94" pos:column="57">0<pos:position pos:line="94" pos:column="58"/></literal></expr>)<pos:position pos:line="94" pos:column="59"/></condition><then pos:line="94" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="7">cf_util_get_boolean<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">child<pos:position pos:line="95" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="34">&amp;<pos:position pos:line="95" pos:column="39"/></operator><name><name pos:line="95" pos:column="35">conf<pos:position pos:line="95" pos:column="39"/></name><operator pos:line="95" pos:column="39">-&gt;<pos:position pos:line="95" pos:column="44"/></operator><name pos:line="95" pos:column="41">collect_totals<pos:position pos:line="95" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="57"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="96" pos:column="5">else <if pos:line="96" pos:column="10">if <condition pos:line="96" pos:column="13">(<expr><call><name pos:line="96" pos:column="14">strcasecmp<pos:position pos:line="96" pos:column="24"/></name><argument_list pos:line="96" pos:column="24">(<argument><expr><literal type="string" pos:line="96" pos:column="25">"CollectUptime"<pos:position pos:line="96" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="42">child<pos:position pos:line="96" pos:column="47"/></name><operator pos:line="96" pos:column="47">-&gt;<pos:position pos:line="96" pos:column="52"/></operator><name pos:line="96" pos:column="49">key<pos:position pos:line="96" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="53"/></argument_list></call> <operator pos:line="96" pos:column="54">==<pos:position pos:line="96" pos:column="56"/></operator> <literal type="number" pos:line="96" pos:column="57">0<pos:position pos:line="96" pos:column="58"/></literal></expr>)<pos:position pos:line="96" pos:column="59"/></condition><then pos:line="96" pos:column="59">
<cpp:if pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">if<pos:position pos:line="97" pos:column="4"/></cpp:directive> <expr><name pos:line="97" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="97" pos:column="20"/></name> <operator pos:line="97" pos:column="21">||<pos:position pos:line="97" pos:column="23"/></operator> <name pos:line="97" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="97" pos:column="39"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="7">cf_util_get_boolean<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">child<pos:position pos:line="98" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="34">&amp;<pos:position pos:line="98" pos:column="39"/></operator><name><name pos:line="98" pos:column="35">conf<pos:position pos:line="98" pos:column="39"/></name><operator pos:line="98" pos:column="39">-&gt;<pos:position pos:line="98" pos:column="44"/></operator><name pos:line="98" pos:column="41">collect_uptime<pos:position pos:line="98" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="57"/></expr_stmt></block></then></if></elseif>
<cpp:else pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">else<pos:position pos:line="99" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="100" pos:column="7">WARNING<pos:position pos:line="100" pos:column="14"/></name><argument_list pos:line="100" pos:column="14">(<argument><expr><literal type="string" pos:line="100" pos:column="15">"Varnish plugin: \"%s\" is available for Varnish %s only."<pos:position pos:line="100" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="101" pos:column="15">child<pos:position pos:line="101" pos:column="20"/></name><operator pos:line="101" pos:column="20">-&gt;<pos:position pos:line="101" pos:column="25"/></operator><name pos:line="101" pos:column="22">key<pos:position pos:line="101" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="27">"v3 and v4"<pos:position pos:line="101" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">endif<pos:position pos:line="102" pos:column="7"/></cpp:directive></cpp:endif>
    <elseif pos:line="103" pos:column="5">else <if pos:line="103" pos:column="10">if <condition pos:line="103" pos:column="13">(<expr><call><name pos:line="103" pos:column="14">strcasecmp<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><literal type="string" pos:line="103" pos:column="25">"CollectVCL"<pos:position pos:line="103" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="39">child<pos:position pos:line="103" pos:column="44"/></name><operator pos:line="103" pos:column="44">-&gt;<pos:position pos:line="103" pos:column="49"/></operator><name pos:line="103" pos:column="46">key<pos:position pos:line="103" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="50"/></argument_list></call> <operator pos:line="103" pos:column="51">==<pos:position pos:line="103" pos:column="53"/></operator> <literal type="number" pos:line="103" pos:column="54">0<pos:position pos:line="103" pos:column="55"/></literal></expr>)<pos:position pos:line="103" pos:column="56"/></condition><then pos:line="103" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="7">cf_util_get_boolean<pos:position pos:line="104" pos:column="26"/></name><argument_list pos:line="104" pos:column="26">(<argument><expr><name pos:line="104" pos:column="27">child<pos:position pos:line="104" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="104" pos:column="34">&amp;<pos:position pos:line="104" pos:column="39"/></operator><name><name pos:line="104" pos:column="35">conf<pos:position pos:line="104" pos:column="39"/></name><operator pos:line="104" pos:column="39">-&gt;<pos:position pos:line="104" pos:column="44"/></operator><name pos:line="104" pos:column="41">collect_vcl<pos:position pos:line="104" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="54"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="105" pos:column="5">else <if pos:line="105" pos:column="10">if <condition pos:line="105" pos:column="13">(<expr><call><name pos:line="105" pos:column="14">strcasecmp<pos:position pos:line="105" pos:column="24"/></name><argument_list pos:line="105" pos:column="24">(<argument><expr><literal type="string" pos:line="105" pos:column="25">"CollectWorkers"<pos:position pos:line="105" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="43">child<pos:position pos:line="105" pos:column="48"/></name><operator pos:line="105" pos:column="48">-&gt;<pos:position pos:line="105" pos:column="53"/></operator><name pos:line="105" pos:column="50">key<pos:position pos:line="105" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="54"/></argument_list></call> <operator pos:line="105" pos:column="55">==<pos:position pos:line="105" pos:column="57"/></operator> <literal type="number" pos:line="105" pos:column="58">0<pos:position pos:line="105" pos:column="59"/></literal></expr>)<pos:position pos:line="105" pos:column="60"/></condition><then pos:line="105" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="106" pos:column="7">cf_util_get_boolean<pos:position pos:line="106" pos:column="26"/></name><argument_list pos:line="106" pos:column="26">(<argument><expr><name pos:line="106" pos:column="27">child<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="34">&amp;<pos:position pos:line="106" pos:column="39"/></operator><name><name pos:line="106" pos:column="35">conf<pos:position pos:line="106" pos:column="39"/></name><operator pos:line="106" pos:column="39">-&gt;<pos:position pos:line="106" pos:column="44"/></operator><name pos:line="106" pos:column="41">collect_workers<pos:position pos:line="106" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="107" pos:column="5">else <if pos:line="107" pos:column="10">if <condition pos:line="107" pos:column="13">(<expr><call><name pos:line="107" pos:column="14">strcasecmp<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><literal type="string" pos:line="107" pos:column="25">"CollectVSM"<pos:position pos:line="107" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="107" pos:column="39">child<pos:position pos:line="107" pos:column="44"/></name><operator pos:line="107" pos:column="44">-&gt;<pos:position pos:line="107" pos:column="49"/></operator><name pos:line="107" pos:column="46">key<pos:position pos:line="107" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="50"/></argument_list></call> <operator pos:line="107" pos:column="51">==<pos:position pos:line="107" pos:column="53"/></operator> <literal type="number" pos:line="107" pos:column="54">0<pos:position pos:line="107" pos:column="55"/></literal></expr>)<pos:position pos:line="107" pos:column="56"/></condition><then pos:line="107" pos:column="56">
<cpp:if pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">if<pos:position pos:line="108" pos:column="4"/></cpp:directive> <expr><name pos:line="108" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="108" pos:column="20"/></name></expr></cpp:if>
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="109" pos:column="7">cf_util_get_boolean<pos:position pos:line="109" pos:column="26"/></name><argument_list pos:line="109" pos:column="26">(<argument><expr><name pos:line="109" pos:column="27">child<pos:position pos:line="109" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="34">&amp;<pos:position pos:line="109" pos:column="39"/></operator><name><name pos:line="109" pos:column="35">conf<pos:position pos:line="109" pos:column="39"/></name><operator pos:line="109" pos:column="39">-&gt;<pos:position pos:line="109" pos:column="44"/></operator><name pos:line="109" pos:column="41">collect_vsm<pos:position pos:line="109" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="54"/></expr_stmt></block></then></if></elseif>
<cpp:else pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">else<pos:position pos:line="110" pos:column="6"/></cpp:directive></cpp:else>
      <expr_stmt><expr><call><name pos:line="111" pos:column="7">WARNING<pos:position pos:line="111" pos:column="14"/></name><argument_list pos:line="111" pos:column="14">(<argument><expr><literal type="string" pos:line="111" pos:column="15">"Varnish plugin: \"%s\" is available for Varnish %s only."<pos:position pos:line="111" pos:column="73"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="112" pos:column="15">child<pos:position pos:line="112" pos:column="20"/></name><operator pos:line="112" pos:column="20">-&gt;<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="22">key<pos:position pos:line="112" pos:column="25"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="27">"v4"<pos:position pos:line="112" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>
    <else pos:line="114" pos:column="5">else <block pos:line="114" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="115" pos:column="7">WARNING<pos:position pos:line="115" pos:column="14"/></name><argument_list pos:line="115" pos:column="14">(<argument><expr><literal type="string" pos:line="115" pos:column="15">"Varnish plugin: Ignoring unknown "<pos:position pos:line="115" pos:column="50"/></literal>
              <literal type="string" pos:line="116" pos:column="15">"configuration option: \"%s\". Did "<pos:position pos:line="116" pos:column="51"/></literal>
              <literal type="string" pos:line="117" pos:column="15">"you forget to add an &lt;Instance /&gt; "<pos:position pos:line="117" pos:column="57"/></literal>
              <literal type="string" pos:line="118" pos:column="15">"block around the configuration?"<pos:position pos:line="118" pos:column="48"/></literal></expr></argument>,
              <argument><expr><name><name pos:line="119" pos:column="15">child<pos:position pos:line="119" pos:column="20"/></name><operator pos:line="119" pos:column="20">-&gt;<pos:position pos:line="119" pos:column="25"/></operator><name pos:line="119" pos:column="22">key<pos:position pos:line="119" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="119" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></else>
  }<pos:position pos:line="121" pos:column="4"/></block></for>

  <if pos:line="123" pos:column="3">if <condition pos:line="123" pos:column="6">(<expr><operator pos:line="123" pos:column="7">!<pos:position pos:line="123" pos:column="8"/></operator><name><name pos:line="123" pos:column="8">conf<pos:position pos:line="123" pos:column="12"/></name><operator pos:line="123" pos:column="12">-&gt;<pos:position pos:line="123" pos:column="17"/></operator><name pos:line="123" pos:column="14">collect_cache<pos:position pos:line="123" pos:column="27"/></name></name> <operator pos:line="123" pos:column="28">&amp;&amp;<pos:position pos:line="123" pos:column="38"/></operator> <operator pos:line="123" pos:column="31">!<pos:position pos:line="123" pos:column="32"/></operator><name><name pos:line="123" pos:column="32">conf<pos:position pos:line="123" pos:column="36"/></name><operator pos:line="123" pos:column="36">-&gt;<pos:position pos:line="123" pos:column="41"/></operator><name pos:line="123" pos:column="38">collect_connections<pos:position pos:line="123" pos:column="57"/></name></name> <operator pos:line="123" pos:column="58">&amp;&amp;<pos:position pos:line="123" pos:column="68"/></operator>
      <operator pos:line="124" pos:column="7">!<pos:position pos:line="124" pos:column="8"/></operator><name><name pos:line="124" pos:column="8">conf<pos:position pos:line="124" pos:column="12"/></name><operator pos:line="124" pos:column="12">-&gt;<pos:position pos:line="124" pos:column="17"/></operator><name pos:line="124" pos:column="14">collect_esi<pos:position pos:line="124" pos:column="25"/></name></name> <operator pos:line="124" pos:column="26">&amp;&amp;<pos:position pos:line="124" pos:column="36"/></operator> <operator pos:line="124" pos:column="29">!<pos:position pos:line="124" pos:column="30"/></operator><name><name pos:line="124" pos:column="30">conf<pos:position pos:line="124" pos:column="34"/></name><operator pos:line="124" pos:column="34">-&gt;<pos:position pos:line="124" pos:column="39"/></operator><name pos:line="124" pos:column="36">collect_backend<pos:position pos:line="124" pos:column="51"/></name></name>
<cpp:ifdef pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">ifdef<pos:position pos:line="125" pos:column="7"/></cpp:directive> <name pos:line="125" pos:column="8">HAVE_VARNISH_V3<pos:position pos:line="125" pos:column="23"/></name></cpp:ifdef>
      <operator pos:line="126" pos:column="7">&amp;&amp;<pos:position pos:line="126" pos:column="17"/></operator> <operator pos:line="126" pos:column="10">!<pos:position pos:line="126" pos:column="11"/></operator><name><name pos:line="126" pos:column="11">conf<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">-&gt;<pos:position pos:line="126" pos:column="20"/></operator><name pos:line="126" pos:column="17">collect_dirdns<pos:position pos:line="126" pos:column="31"/></name></name>
<cpp:endif pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">endif<pos:position pos:line="127" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="128" pos:column="7">&amp;&amp;<pos:position pos:line="128" pos:column="17"/></operator> <operator pos:line="128" pos:column="10">!<pos:position pos:line="128" pos:column="11"/></operator><name><name pos:line="128" pos:column="11">conf<pos:position pos:line="128" pos:column="15"/></name><operator pos:line="128" pos:column="15">-&gt;<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="17">collect_fetch<pos:position pos:line="128" pos:column="30"/></name></name> <operator pos:line="128" pos:column="31">&amp;&amp;<pos:position pos:line="128" pos:column="41"/></operator> <operator pos:line="128" pos:column="34">!<pos:position pos:line="128" pos:column="35"/></operator><name><name pos:line="128" pos:column="35">conf<pos:position pos:line="128" pos:column="39"/></name><operator pos:line="128" pos:column="39">-&gt;<pos:position pos:line="128" pos:column="44"/></operator><name pos:line="128" pos:column="41">collect_hcb<pos:position pos:line="128" pos:column="52"/></name></name> <operator pos:line="128" pos:column="53">&amp;&amp;<pos:position pos:line="128" pos:column="63"/></operator> <operator pos:line="128" pos:column="56">!<pos:position pos:line="128" pos:column="57"/></operator><name><name pos:line="128" pos:column="57">conf<pos:position pos:line="128" pos:column="61"/></name><operator pos:line="128" pos:column="61">-&gt;<pos:position pos:line="128" pos:column="66"/></operator><name pos:line="128" pos:column="63">collect_objects<pos:position pos:line="128" pos:column="78"/></name></name>
<cpp:if pos:line="129" pos:column="1">#<cpp:directive pos:line="129" pos:column="2">if<pos:position pos:line="129" pos:column="4"/></cpp:directive> <expr><name pos:line="129" pos:column="5">HAVE_VARNISH_V2<pos:position pos:line="129" pos:column="20"/></name></expr></cpp:if>
      <operator pos:line="130" pos:column="7">&amp;&amp;<pos:position pos:line="130" pos:column="17"/></operator> <operator pos:line="130" pos:column="10">!<pos:position pos:line="130" pos:column="11"/></operator><name><name pos:line="130" pos:column="11">conf<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">-&gt;<pos:position pos:line="130" pos:column="20"/></operator><name pos:line="130" pos:column="17">collect_purge<pos:position pos:line="130" pos:column="30"/></name></name>
<cpp:else pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">else<pos:position pos:line="131" pos:column="6"/></cpp:directive></cpp:else>
      <operator pos:line="132" pos:column="7">&amp;&amp;<pos:position pos:line="132" pos:column="17"/></operator> <operator pos:line="132" pos:column="10">!<pos:position pos:line="132" pos:column="11"/></operator><name><name pos:line="132" pos:column="11">conf<pos:position pos:line="132" pos:column="15"/></name><operator pos:line="132" pos:column="15">-&gt;<pos:position pos:line="132" pos:column="20"/></operator><name pos:line="132" pos:column="17">collect_ban<pos:position pos:line="132" pos:column="28"/></name></name>
<cpp:endif pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">endif<pos:position pos:line="133" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="134" pos:column="7">&amp;&amp;<pos:position pos:line="134" pos:column="17"/></operator> <operator pos:line="134" pos:column="10">!<pos:position pos:line="134" pos:column="11"/></operator><name><name pos:line="134" pos:column="11">conf<pos:position pos:line="134" pos:column="15"/></name><operator pos:line="134" pos:column="15">-&gt;<pos:position pos:line="134" pos:column="20"/></operator><name pos:line="134" pos:column="17">collect_session<pos:position pos:line="134" pos:column="32"/></name></name> <operator pos:line="134" pos:column="33">&amp;&amp;<pos:position pos:line="134" pos:column="43"/></operator> <operator pos:line="134" pos:column="36">!<pos:position pos:line="134" pos:column="37"/></operator><name><name pos:line="134" pos:column="37">conf<pos:position pos:line="134" pos:column="41"/></name><operator pos:line="134" pos:column="41">-&gt;<pos:position pos:line="134" pos:column="46"/></operator><name pos:line="134" pos:column="43">collect_shm<pos:position pos:line="134" pos:column="54"/></name></name> <operator pos:line="134" pos:column="55">&amp;&amp;<pos:position pos:line="134" pos:column="65"/></operator> <operator pos:line="134" pos:column="58">!<pos:position pos:line="134" pos:column="59"/></operator><name><name pos:line="134" pos:column="59">conf<pos:position pos:line="134" pos:column="63"/></name><operator pos:line="134" pos:column="63">-&gt;<pos:position pos:line="134" pos:column="68"/></operator><name pos:line="134" pos:column="65">collect_sms<pos:position pos:line="134" pos:column="76"/></name></name>
<cpp:if pos:line="135" pos:column="1">#<cpp:directive pos:line="135" pos:column="2">if<pos:position pos:line="135" pos:column="4"/></cpp:directive> <expr><name pos:line="135" pos:column="5">HAVE_VARNISH_V2<pos:position pos:line="135" pos:column="20"/></name></expr></cpp:if>
      <operator pos:line="136" pos:column="7">&amp;&amp;<pos:position pos:line="136" pos:column="17"/></operator> <operator pos:line="136" pos:column="10">!<pos:position pos:line="136" pos:column="11"/></operator><name><name pos:line="136" pos:column="11">conf<pos:position pos:line="136" pos:column="15"/></name><operator pos:line="136" pos:column="15">-&gt;<pos:position pos:line="136" pos:column="20"/></operator><name pos:line="136" pos:column="17">collect_sma<pos:position pos:line="136" pos:column="28"/></name></name> <operator pos:line="136" pos:column="29">&amp;&amp;<pos:position pos:line="136" pos:column="39"/></operator> <operator pos:line="136" pos:column="32">!<pos:position pos:line="136" pos:column="33"/></operator><name><name pos:line="136" pos:column="33">conf<pos:position pos:line="136" pos:column="37"/></name><operator pos:line="136" pos:column="37">-&gt;<pos:position pos:line="136" pos:column="42"/></operator><name pos:line="136" pos:column="39">collect_sm<pos:position pos:line="136" pos:column="49"/></name></name>
<cpp:endif pos:line="137" pos:column="1">#<cpp:directive pos:line="137" pos:column="2">endif<pos:position pos:line="137" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="138" pos:column="7">&amp;&amp;<pos:position pos:line="138" pos:column="17"/></operator> <operator pos:line="138" pos:column="10">!<pos:position pos:line="138" pos:column="11"/></operator><name><name pos:line="138" pos:column="11">conf<pos:position pos:line="138" pos:column="15"/></name><operator pos:line="138" pos:column="15">-&gt;<pos:position pos:line="138" pos:column="20"/></operator><name pos:line="138" pos:column="17">collect_struct<pos:position pos:line="138" pos:column="31"/></name></name> <operator pos:line="138" pos:column="32">&amp;&amp;<pos:position pos:line="138" pos:column="42"/></operator> <operator pos:line="138" pos:column="35">!<pos:position pos:line="138" pos:column="36"/></operator><name><name pos:line="138" pos:column="36">conf<pos:position pos:line="138" pos:column="40"/></name><operator pos:line="138" pos:column="40">-&gt;<pos:position pos:line="138" pos:column="45"/></operator><name pos:line="138" pos:column="42">collect_totals<pos:position pos:line="138" pos:column="56"/></name></name>
<cpp:if pos:line="139" pos:column="1">#<cpp:directive pos:line="139" pos:column="2">if<pos:position pos:line="139" pos:column="4"/></cpp:directive> <expr><name pos:line="139" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="139" pos:column="20"/></name> <operator pos:line="139" pos:column="21">||<pos:position pos:line="139" pos:column="23"/></operator> <name pos:line="139" pos:column="24">HAVE_VARNISH_V4<pos:position pos:line="139" pos:column="39"/></name></expr></cpp:if>
      <operator pos:line="140" pos:column="7">&amp;&amp;<pos:position pos:line="140" pos:column="17"/></operator> <operator pos:line="140" pos:column="10">!<pos:position pos:line="140" pos:column="11"/></operator><name><name pos:line="140" pos:column="11">conf<pos:position pos:line="140" pos:column="15"/></name><operator pos:line="140" pos:column="15">-&gt;<pos:position pos:line="140" pos:column="20"/></operator><name pos:line="140" pos:column="17">collect_uptime<pos:position pos:line="140" pos:column="31"/></name></name>
<cpp:endif pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">endif<pos:position pos:line="141" pos:column="7"/></cpp:directive></cpp:endif>
      <operator pos:line="142" pos:column="7">&amp;&amp;<pos:position pos:line="142" pos:column="17"/></operator> <operator pos:line="142" pos:column="10">!<pos:position pos:line="142" pos:column="11"/></operator><name><name pos:line="142" pos:column="11">conf<pos:position pos:line="142" pos:column="15"/></name><operator pos:line="142" pos:column="15">-&gt;<pos:position pos:line="142" pos:column="20"/></operator><name pos:line="142" pos:column="17">collect_vcl<pos:position pos:line="142" pos:column="28"/></name></name> <operator pos:line="142" pos:column="29">&amp;&amp;<pos:position pos:line="142" pos:column="39"/></operator> <operator pos:line="142" pos:column="32">!<pos:position pos:line="142" pos:column="33"/></operator><name><name pos:line="142" pos:column="33">conf<pos:position pos:line="142" pos:column="37"/></name><operator pos:line="142" pos:column="37">-&gt;<pos:position pos:line="142" pos:column="42"/></operator><name pos:line="142" pos:column="39">collect_workers<pos:position pos:line="142" pos:column="54"/></name></name>
<cpp:if pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">if<pos:position pos:line="143" pos:column="4"/></cpp:directive> <expr><name pos:line="143" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="143" pos:column="20"/></name></expr></cpp:if>
      <operator pos:line="144" pos:column="7">&amp;&amp;<pos:position pos:line="144" pos:column="17"/></operator> <operator pos:line="144" pos:column="10">!<pos:position pos:line="144" pos:column="11"/></operator><name><name pos:line="144" pos:column="11">conf<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">-&gt;<pos:position pos:line="144" pos:column="20"/></operator><name pos:line="144" pos:column="17">collect_vsm<pos:position pos:line="144" pos:column="28"/></name></name></expr>
<cpp:endif pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">endif<pos:position pos:line="145" pos:column="7"/></cpp:directive></cpp:endif>
      )<pos:position pos:line="146" pos:column="8"/></condition><then pos:line="146" pos:column="8"> <block pos:line="146" pos:column="9">{
    <expr_stmt><expr><call><name pos:line="147" pos:column="5">WARNING<pos:position pos:line="147" pos:column="12"/></name><argument_list pos:line="147" pos:column="12">(<argument><expr><literal type="string" pos:line="147" pos:column="13">"Varnish plugin: No metric has been configured for "<pos:position pos:line="147" pos:column="65"/></literal>
            <literal type="string" pos:line="148" pos:column="13">"instance \"%s\". Disabling this instance."<pos:position pos:line="148" pos:column="56"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="149" pos:column="13">(<pos:position pos:line="149" pos:column="14"/></operator><name><name pos:line="149" pos:column="14">conf<pos:position pos:line="149" pos:column="18"/></name><operator pos:line="149" pos:column="18">-&gt;<pos:position pos:line="149" pos:column="23"/></operator><name pos:line="149" pos:column="20">instance<pos:position pos:line="149" pos:column="28"/></name></name> <operator pos:line="149" pos:column="29">==<pos:position pos:line="149" pos:column="31"/></operator> <name pos:line="149" pos:column="32">NULL<pos:position pos:line="149" pos:column="36"/></name><operator pos:line="149" pos:column="36">)<pos:position pos:line="149" pos:column="37"/></operator></expr> ?<pos:position pos:line="149" pos:column="39"/></condition><then pos:line="149" pos:column="39"> <expr><literal type="string" pos:line="149" pos:column="40">"localhost"<pos:position pos:line="149" pos:column="51"/></literal></expr> <pos:position pos:line="149" pos:column="52"/></then><else pos:line="149" pos:column="52">: <expr><name><name pos:line="149" pos:column="54">conf<pos:position pos:line="149" pos:column="58"/></name><operator pos:line="149" pos:column="58">-&gt;<pos:position pos:line="149" pos:column="63"/></operator><name pos:line="149" pos:column="60">instance<pos:position pos:line="149" pos:column="68"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="149" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="150" pos:column="5">sfree<pos:position pos:line="150" pos:column="10"/></name><argument_list pos:line="150" pos:column="10">(<argument><expr><name pos:line="150" pos:column="11">conf<pos:position pos:line="150" pos:column="15"/></name></expr></argument>)<pos:position pos:line="150" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="17"/></expr_stmt>
    <return pos:line="151" pos:column="5">return <expr><operator pos:line="151" pos:column="12">(<pos:position pos:line="151" pos:column="13"/></operator><name pos:line="151" pos:column="13">EINVAL<pos:position pos:line="151" pos:column="19"/></name><operator pos:line="151" pos:column="19">)<pos:position pos:line="151" pos:column="20"/></operator></expr>;<pos:position pos:line="151" pos:column="21"/></return>
  }<pos:position pos:line="152" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="154" pos:column="3">ssnprintf<pos:position pos:line="154" pos:column="12"/></name><argument_list pos:line="154" pos:column="12">(<argument><expr><name pos:line="154" pos:column="13">callback_name<pos:position pos:line="154" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="154" pos:column="28">sizeof<argument_list pos:line="154" pos:column="34">(<argument><expr><name pos:line="154" pos:column="35">callback_name<pos:position pos:line="154" pos:column="48"/></name></expr></argument>)<pos:position pos:line="154" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="51">"varnish/%s"<pos:position pos:line="154" pos:column="63"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="155" pos:column="13">(<pos:position pos:line="155" pos:column="14"/></operator><name><name pos:line="155" pos:column="14">conf<pos:position pos:line="155" pos:column="18"/></name><operator pos:line="155" pos:column="18">-&gt;<pos:position pos:line="155" pos:column="23"/></operator><name pos:line="155" pos:column="20">instance<pos:position pos:line="155" pos:column="28"/></name></name> <operator pos:line="155" pos:column="29">==<pos:position pos:line="155" pos:column="31"/></operator> <name pos:line="155" pos:column="32">NULL<pos:position pos:line="155" pos:column="36"/></name><operator pos:line="155" pos:column="36">)<pos:position pos:line="155" pos:column="37"/></operator></expr> ?<pos:position pos:line="155" pos:column="39"/></condition><then pos:line="155" pos:column="39"> <expr><literal type="string" pos:line="155" pos:column="40">"localhost"<pos:position pos:line="155" pos:column="51"/></literal></expr> <pos:position pos:line="155" pos:column="52"/></then><else pos:line="155" pos:column="52">: <expr><name><name pos:line="155" pos:column="54">conf<pos:position pos:line="155" pos:column="58"/></name><operator pos:line="155" pos:column="58">-&gt;<pos:position pos:line="155" pos:column="63"/></operator><name pos:line="155" pos:column="60">instance<pos:position pos:line="155" pos:column="68"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="155" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="70"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="157" pos:column="3">plugin_register_complex_read<pos:position pos:line="157" pos:column="31"/></name><argument_list pos:line="157" pos:column="31">(
      <comment type="block" pos:line="158" pos:column="7">/* group = */</comment> <argument><expr><literal type="string" pos:line="158" pos:column="21">"varnish"<pos:position pos:line="158" pos:column="30"/></literal></expr></argument>,
      <comment type="block" pos:line="159" pos:column="7">/* name      = */</comment> <argument><expr><name pos:line="159" pos:column="25">callback_name<pos:position pos:line="159" pos:column="38"/></name></expr></argument>,
      <comment type="block" pos:line="160" pos:column="7">/* callback  = */</comment> <argument><expr><name pos:line="160" pos:column="25">varnish_read<pos:position pos:line="160" pos:column="37"/></name></expr></argument>,
      <comment type="block" pos:line="161" pos:column="7">/* interval  = */</comment> <argument><expr><literal type="number" pos:line="161" pos:column="25">0<pos:position pos:line="161" pos:column="26"/></literal></expr></argument>, <argument><expr><operator pos:line="161" pos:column="28">&amp;<pos:position pos:line="161" pos:column="33"/></operator><operator pos:line="161" pos:column="29">(<pos:position pos:line="161" pos:column="30"/></operator><name pos:line="161" pos:column="30">user_data_t<pos:position pos:line="161" pos:column="41"/></name><operator pos:line="161" pos:column="41">)<pos:position pos:line="161" pos:column="42"/></operator><block pos:line="161" pos:column="42">{
                               <expr><operator pos:line="162" pos:column="32">.<pos:position pos:line="162" pos:column="33"/></operator><name pos:line="162" pos:column="33">data<pos:position pos:line="162" pos:column="37"/></name> <operator pos:line="162" pos:column="38">=<pos:position pos:line="162" pos:column="39"/></operator> <name pos:line="162" pos:column="40">conf<pos:position pos:line="162" pos:column="44"/></name></expr>, <expr><operator pos:line="162" pos:column="46">.<pos:position pos:line="162" pos:column="47"/></operator><name pos:line="162" pos:column="47">free_func<pos:position pos:line="162" pos:column="56"/></name> <operator pos:line="162" pos:column="57">=<pos:position pos:line="162" pos:column="58"/></operator> <name pos:line="162" pos:column="59">varnish_config_free<pos:position pos:line="162" pos:column="78"/></name></expr>,
                           }<pos:position pos:line="163" pos:column="29"/></block></expr></argument>)<pos:position pos:line="163" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="165" pos:column="3">have_instance<pos:position pos:line="165" pos:column="16"/></name> <operator pos:line="165" pos:column="17">=<pos:position pos:line="165" pos:column="18"/></operator> <literal type="number" pos:line="165" pos:column="19">1<pos:position pos:line="165" pos:column="20"/></literal></expr>;<pos:position pos:line="165" pos:column="21"/></expr_stmt>

  <return pos:line="167" pos:column="3">return <expr><operator pos:line="167" pos:column="10">(<pos:position pos:line="167" pos:column="11"/></operator><literal type="number" pos:line="167" pos:column="11">0<pos:position pos:line="167" pos:column="12"/></literal><operator pos:line="167" pos:column="12">)<pos:position pos:line="167" pos:column="13"/></operator></expr>;<pos:position pos:line="167" pos:column="14"/></return>
}<pos:position pos:line="168" pos:column="2"/></block></function></unit>

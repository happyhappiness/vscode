<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1713_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_config_node<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
        <decl_stmt><decl><type><name pos:line="3" pos:column="9">wh_callback_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">cb<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">buffer_size<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><literal type="number" pos:line="4" pos:column="27">0<pos:position pos:line="4" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">callback_name<pos:position pos:line="5" pos:column="27"/></name><index pos:line="5" pos:column="27">[<expr><name pos:line="5" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="45"/></name></expr>]<pos:position pos:line="5" pos:column="46"/></index></name></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">status<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

        <expr_stmt><expr><name pos:line="8" pos:column="9">cb<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">calloc<pos:position pos:line="8" pos:column="20"/></name> <argument_list pos:line="8" pos:column="21">(<argument><expr><literal type="number" pos:line="8" pos:column="22">1<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="25">sizeof <argument_list pos:line="8" pos:column="32">(<argument><expr><operator pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">cb<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">cb<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
        <block pos:line="10" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="11" pos:column="17">ERROR<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><literal type="string" pos:line="11" pos:column="24">"write_http plugin: calloc failed."<pos:position pos:line="11" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="61"/></expr_stmt>
                <return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">(<pos:position pos:line="12" pos:column="25"/></operator><operator pos:line="12" pos:column="25">-<pos:position pos:line="12" pos:column="26"/></operator><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator></expr>;<pos:position pos:line="12" pos:column="29"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">cb<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">verify_peer<pos:position pos:line="14" pos:column="24"/></name></name> <operator pos:line="14" pos:column="25">=<pos:position pos:line="14" pos:column="26"/></operator> <literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">cb<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">verify_host<pos:position pos:line="15" pos:column="24"/></name></name> <operator pos:line="15" pos:column="25">=<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="27">1<pos:position pos:line="15" pos:column="28"/></literal></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">cb<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">format<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">WH_FORMAT_COMMAND<pos:position pos:line="16" pos:column="39"/></name></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">cb<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">sslversion<pos:position pos:line="17" pos:column="23"/></name></name> <operator pos:line="17" pos:column="24">=<pos:position pos:line="17" pos:column="25"/></operator> <name pos:line="17" pos:column="26">CURL_SSLVERSION_DEFAULT<pos:position pos:line="17" pos:column="49"/></name></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">cb<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">low_speed_limit<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">0<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">cb<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">timeout<pos:position pos:line="19" pos:column="20"/></name></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="23">0<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">cb<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">log_http_error<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <literal type="number" pos:line="20" pos:column="30">0<pos:position pos:line="20" pos:column="31"/></literal></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">cb<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">headers<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <name pos:line="21" pos:column="23">NULL<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">cb<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">send_metrics<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">1<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">cb<pos:position pos:line="23" pos:column="11"/></name><operator pos:line="23" pos:column="11">-&gt;<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="13">send_notifications<pos:position pos:line="23" pos:column="31"/></name></name> <operator pos:line="23" pos:column="32">=<pos:position pos:line="23" pos:column="33"/></operator> <literal type="number" pos:line="23" pos:column="34">0<pos:position pos:line="23" pos:column="35"/></literal></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="25" pos:column="9">pthread_mutex_init<pos:position pos:line="25" pos:column="27"/></name> <argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">&amp;<pos:position pos:line="25" pos:column="34"/></operator><name><name pos:line="25" pos:column="30">cb<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">-&gt;<pos:position pos:line="25" pos:column="37"/></operator><name pos:line="25" pos:column="34">send_lock<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>, <comment type="block" pos:line="25" pos:column="45">/* attr = */</comment> <argument><expr><name pos:line="25" pos:column="58">NULL<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">cf_util_get_string<pos:position pos:line="27" pos:column="27"/></name> <argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">ci<pos:position pos:line="27" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="33">&amp;<pos:position pos:line="27" pos:column="38"/></operator><name><name pos:line="27" pos:column="34">cb<pos:position pos:line="27" pos:column="36"/></name><operator pos:line="27" pos:column="36">-&gt;<pos:position pos:line="27" pos:column="41"/></operator><name pos:line="27" pos:column="38">name<pos:position pos:line="27" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>

        <comment type="block" pos:line="29" pos:column="9">/* FIXME: Remove this legacy mode in version 6. */</comment>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><call><name pos:line="30" pos:column="13">strcasecmp<pos:position pos:line="30" pos:column="23"/></name> <argument_list pos:line="30" pos:column="24">(<argument><expr><literal type="string" pos:line="30" pos:column="25">"URL"<pos:position pos:line="30" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="32">ci<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">key<pos:position pos:line="30" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="40"/></argument_list></call> <operator pos:line="30" pos:column="41">==<pos:position pos:line="30" pos:column="43"/></operator> <literal type="number" pos:line="30" pos:column="44">0<pos:position pos:line="30" pos:column="45"/></literal></expr>)<pos:position pos:line="30" pos:column="46"/></condition><then pos:line="30" pos:column="46">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="17">cf_util_get_string<pos:position pos:line="31" pos:column="35"/></name> <argument_list pos:line="31" pos:column="36">(<argument><expr><name pos:line="31" pos:column="37">ci<pos:position pos:line="31" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="41">&amp;<pos:position pos:line="31" pos:column="46"/></operator><name><name pos:line="31" pos:column="42">cb<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">-&gt;<pos:position pos:line="31" pos:column="49"/></operator><name pos:line="31" pos:column="46">location<pos:position pos:line="31" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt></block></then></if>

        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><decl><type><name pos:line="33" pos:column="14">int<pos:position pos:line="33" pos:column="17"/></name></type> <name pos:line="33" pos:column="18">i<pos:position pos:line="33" pos:column="19"/></name> <init pos:line="33" pos:column="20">= <expr><literal type="number" pos:line="33" pos:column="22">0<pos:position pos:line="33" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="24"/></init> <condition><expr><name pos:line="33" pos:column="25">i<pos:position pos:line="33" pos:column="26"/></name> <operator pos:line="33" pos:column="27">&lt;<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="29">ci<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">children_num<pos:position pos:line="33" pos:column="45"/></name></name></expr>;<pos:position pos:line="33" pos:column="46"/></condition> <incr><expr><name pos:line="33" pos:column="47">i<pos:position pos:line="33" pos:column="48"/></name><operator pos:line="33" pos:column="48">++<pos:position pos:line="33" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="51"/></control>
        <block pos:line="34" pos:column="9">{
                <decl_stmt><decl><type><name pos:line="35" pos:column="17">oconfig_item_t<pos:position pos:line="35" pos:column="31"/></name> <modifier pos:line="35" pos:column="32">*<pos:position pos:line="35" pos:column="33"/></modifier></type><name pos:line="35" pos:column="33">child<pos:position pos:line="35" pos:column="38"/></name> <init pos:line="35" pos:column="39">= <expr><name><name pos:line="35" pos:column="41">ci<pos:position pos:line="35" pos:column="43"/></name><operator pos:line="35" pos:column="43">-&gt;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="45">children<pos:position pos:line="35" pos:column="53"/></name></name> <operator pos:line="35" pos:column="54">+<pos:position pos:line="35" pos:column="55"/></operator> <name pos:line="35" pos:column="56">i<pos:position pos:line="35" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="35" pos:column="58"/></decl_stmt>

                <if pos:line="37" pos:column="17">if <condition pos:line="37" pos:column="20">(<expr><call><name pos:line="37" pos:column="21">strcasecmp<pos:position pos:line="37" pos:column="31"/></name> <argument_list pos:line="37" pos:column="32">(<argument><expr><literal type="string" pos:line="37" pos:column="33">"URL"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="40">child<pos:position pos:line="37" pos:column="45"/></name><operator pos:line="37" pos:column="45">-&gt;<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="47">key<pos:position pos:line="37" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="51"/></argument_list></call> <operator pos:line="37" pos:column="52">==<pos:position pos:line="37" pos:column="54"/></operator> <literal type="number" pos:line="37" pos:column="55">0<pos:position pos:line="37" pos:column="56"/></literal></expr>)<pos:position pos:line="37" pos:column="57"/></condition><then pos:line="37" pos:column="57">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="25">status<pos:position pos:line="38" pos:column="31"/></name> <operator pos:line="38" pos:column="32">=<pos:position pos:line="38" pos:column="33"/></operator> <call><name pos:line="38" pos:column="34">cf_util_get_string<pos:position pos:line="38" pos:column="52"/></name> <argument_list pos:line="38" pos:column="53">(<argument><expr><name pos:line="38" pos:column="54">child<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="61">&amp;<pos:position pos:line="38" pos:column="66"/></operator><name><name pos:line="38" pos:column="62">cb<pos:position pos:line="38" pos:column="64"/></name><operator pos:line="38" pos:column="64">-&gt;<pos:position pos:line="38" pos:column="69"/></operator><name pos:line="38" pos:column="66">location<pos:position pos:line="38" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt></block></then>
                <elseif pos:line="39" pos:column="17">else <if pos:line="39" pos:column="22">if <condition pos:line="39" pos:column="25">(<expr><call><name pos:line="39" pos:column="26">strcasecmp<pos:position pos:line="39" pos:column="36"/></name> <argument_list pos:line="39" pos:column="37">(<argument><expr><literal type="string" pos:line="39" pos:column="38">"User"<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="46">child<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">-&gt;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="53">key<pos:position pos:line="39" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call> <operator pos:line="39" pos:column="58">==<pos:position pos:line="39" pos:column="60"/></operator> <literal type="number" pos:line="39" pos:column="61">0<pos:position pos:line="39" pos:column="62"/></literal></expr>)<pos:position pos:line="39" pos:column="63"/></condition><then pos:line="39" pos:column="63">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="25">status<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">=<pos:position pos:line="40" pos:column="33"/></operator> <call><name pos:line="40" pos:column="34">cf_util_get_string<pos:position pos:line="40" pos:column="52"/></name> <argument_list pos:line="40" pos:column="53">(<argument><expr><name pos:line="40" pos:column="54">child<pos:position pos:line="40" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="61">&amp;<pos:position pos:line="40" pos:column="66"/></operator><name><name pos:line="40" pos:column="62">cb<pos:position pos:line="40" pos:column="64"/></name><operator pos:line="40" pos:column="64">-&gt;<pos:position pos:line="40" pos:column="69"/></operator><name pos:line="40" pos:column="66">user<pos:position pos:line="40" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="72"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><call><name pos:line="41" pos:column="26">strcasecmp<pos:position pos:line="41" pos:column="36"/></name> <argument_list pos:line="41" pos:column="37">(<argument><expr><literal type="string" pos:line="41" pos:column="38">"Password"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="50">child<pos:position pos:line="41" pos:column="55"/></name><operator pos:line="41" pos:column="55">-&gt;<pos:position pos:line="41" pos:column="60"/></operator><name pos:line="41" pos:column="57">key<pos:position pos:line="41" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="61"/></argument_list></call> <operator pos:line="41" pos:column="62">==<pos:position pos:line="41" pos:column="64"/></operator> <literal type="number" pos:line="41" pos:column="65">0<pos:position pos:line="41" pos:column="66"/></literal></expr>)<pos:position pos:line="41" pos:column="67"/></condition><then pos:line="41" pos:column="67">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="25">status<pos:position pos:line="42" pos:column="31"/></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <call><name pos:line="42" pos:column="34">cf_util_get_string<pos:position pos:line="42" pos:column="52"/></name> <argument_list pos:line="42" pos:column="53">(<argument><expr><name pos:line="42" pos:column="54">child<pos:position pos:line="42" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="61">&amp;<pos:position pos:line="42" pos:column="66"/></operator><name><name pos:line="42" pos:column="62">cb<pos:position pos:line="42" pos:column="64"/></name><operator pos:line="42" pos:column="64">-&gt;<pos:position pos:line="42" pos:column="69"/></operator><name pos:line="42" pos:column="66">pass<pos:position pos:line="42" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="72"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="43" pos:column="17">else <if pos:line="43" pos:column="22">if <condition pos:line="43" pos:column="25">(<expr><call><name pos:line="43" pos:column="26">strcasecmp<pos:position pos:line="43" pos:column="36"/></name> <argument_list pos:line="43" pos:column="37">(<argument><expr><literal type="string" pos:line="43" pos:column="38">"VerifyPeer"<pos:position pos:line="43" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="52">child<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">-&gt;<pos:position pos:line="43" pos:column="62"/></operator><name pos:line="43" pos:column="59">key<pos:position pos:line="43" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call> <operator pos:line="43" pos:column="64">==<pos:position pos:line="43" pos:column="66"/></operator> <literal type="number" pos:line="43" pos:column="67">0<pos:position pos:line="43" pos:column="68"/></literal></expr>)<pos:position pos:line="43" pos:column="69"/></condition><then pos:line="43" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="25">status<pos:position pos:line="44" pos:column="31"/></name> <operator pos:line="44" pos:column="32">=<pos:position pos:line="44" pos:column="33"/></operator> <call><name pos:line="44" pos:column="34">cf_util_get_boolean<pos:position pos:line="44" pos:column="53"/></name> <argument_list pos:line="44" pos:column="54">(<argument><expr><name pos:line="44" pos:column="55">child<pos:position pos:line="44" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="62">&amp;<pos:position pos:line="44" pos:column="67"/></operator><name><name pos:line="44" pos:column="63">cb<pos:position pos:line="44" pos:column="65"/></name><operator pos:line="44" pos:column="65">-&gt;<pos:position pos:line="44" pos:column="70"/></operator><name pos:line="44" pos:column="67">verify_peer<pos:position pos:line="44" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="80"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="45" pos:column="17">else <if pos:line="45" pos:column="22">if <condition pos:line="45" pos:column="25">(<expr><call><name pos:line="45" pos:column="26">strcasecmp<pos:position pos:line="45" pos:column="36"/></name> <argument_list pos:line="45" pos:column="37">(<argument><expr><literal type="string" pos:line="45" pos:column="38">"VerifyHost"<pos:position pos:line="45" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="52">child<pos:position pos:line="45" pos:column="57"/></name><operator pos:line="45" pos:column="57">-&gt;<pos:position pos:line="45" pos:column="62"/></operator><name pos:line="45" pos:column="59">key<pos:position pos:line="45" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="63"/></argument_list></call> <operator pos:line="45" pos:column="64">==<pos:position pos:line="45" pos:column="66"/></operator> <literal type="number" pos:line="45" pos:column="67">0<pos:position pos:line="45" pos:column="68"/></literal></expr>)<pos:position pos:line="45" pos:column="69"/></condition><then pos:line="45" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="25">status<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">=<pos:position pos:line="46" pos:column="33"/></operator> <call><name pos:line="46" pos:column="34">cf_util_get_boolean<pos:position pos:line="46" pos:column="53"/></name> <argument_list pos:line="46" pos:column="54">(<argument><expr><name pos:line="46" pos:column="55">child<pos:position pos:line="46" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="62">&amp;<pos:position pos:line="46" pos:column="67"/></operator><name><name pos:line="46" pos:column="63">cb<pos:position pos:line="46" pos:column="65"/></name><operator pos:line="46" pos:column="65">-&gt;<pos:position pos:line="46" pos:column="70"/></operator><name pos:line="46" pos:column="67">verify_host<pos:position pos:line="46" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="80"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="47" pos:column="17">else <if pos:line="47" pos:column="22">if <condition pos:line="47" pos:column="25">(<expr><call><name pos:line="47" pos:column="26">strcasecmp<pos:position pos:line="47" pos:column="36"/></name> <argument_list pos:line="47" pos:column="37">(<argument><expr><literal type="string" pos:line="47" pos:column="38">"CACert"<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="48">child<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">-&gt;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="55">key<pos:position pos:line="47" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="59"/></argument_list></call> <operator pos:line="47" pos:column="60">==<pos:position pos:line="47" pos:column="62"/></operator> <literal type="number" pos:line="47" pos:column="63">0<pos:position pos:line="47" pos:column="64"/></literal></expr>)<pos:position pos:line="47" pos:column="65"/></condition><then pos:line="47" pos:column="65">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="25">status<pos:position pos:line="48" pos:column="31"/></name> <operator pos:line="48" pos:column="32">=<pos:position pos:line="48" pos:column="33"/></operator> <call><name pos:line="48" pos:column="34">cf_util_get_string<pos:position pos:line="48" pos:column="52"/></name> <argument_list pos:line="48" pos:column="53">(<argument><expr><name pos:line="48" pos:column="54">child<pos:position pos:line="48" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="61">&amp;<pos:position pos:line="48" pos:column="66"/></operator><name><name pos:line="48" pos:column="62">cb<pos:position pos:line="48" pos:column="64"/></name><operator pos:line="48" pos:column="64">-&gt;<pos:position pos:line="48" pos:column="69"/></operator><name pos:line="48" pos:column="66">cacert<pos:position pos:line="48" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="74"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><call><name pos:line="49" pos:column="26">strcasecmp<pos:position pos:line="49" pos:column="36"/></name> <argument_list pos:line="49" pos:column="37">(<argument><expr><literal type="string" pos:line="49" pos:column="38">"CAPath"<pos:position pos:line="49" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="48">child<pos:position pos:line="49" pos:column="53"/></name><operator pos:line="49" pos:column="53">-&gt;<pos:position pos:line="49" pos:column="58"/></operator><name pos:line="49" pos:column="55">key<pos:position pos:line="49" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="59"/></argument_list></call> <operator pos:line="49" pos:column="60">==<pos:position pos:line="49" pos:column="62"/></operator> <literal type="number" pos:line="49" pos:column="63">0<pos:position pos:line="49" pos:column="64"/></literal></expr>)<pos:position pos:line="49" pos:column="65"/></condition><then pos:line="49" pos:column="65">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="25">status<pos:position pos:line="50" pos:column="31"/></name> <operator pos:line="50" pos:column="32">=<pos:position pos:line="50" pos:column="33"/></operator> <call><name pos:line="50" pos:column="34">cf_util_get_string<pos:position pos:line="50" pos:column="52"/></name> <argument_list pos:line="50" pos:column="53">(<argument><expr><name pos:line="50" pos:column="54">child<pos:position pos:line="50" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="61">&amp;<pos:position pos:line="50" pos:column="66"/></operator><name><name pos:line="50" pos:column="62">cb<pos:position pos:line="50" pos:column="64"/></name><operator pos:line="50" pos:column="64">-&gt;<pos:position pos:line="50" pos:column="69"/></operator><name pos:line="50" pos:column="66">capath<pos:position pos:line="50" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="51" pos:column="17">else <if pos:line="51" pos:column="22">if <condition pos:line="51" pos:column="25">(<expr><call><name pos:line="51" pos:column="26">strcasecmp<pos:position pos:line="51" pos:column="36"/></name> <argument_list pos:line="51" pos:column="37">(<argument><expr><literal type="string" pos:line="51" pos:column="38">"ClientKey"<pos:position pos:line="51" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="51">child<pos:position pos:line="51" pos:column="56"/></name><operator pos:line="51" pos:column="56">-&gt;<pos:position pos:line="51" pos:column="61"/></operator><name pos:line="51" pos:column="58">key<pos:position pos:line="51" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call> <operator pos:line="51" pos:column="63">==<pos:position pos:line="51" pos:column="65"/></operator> <literal type="number" pos:line="51" pos:column="66">0<pos:position pos:line="51" pos:column="67"/></literal></expr>)<pos:position pos:line="51" pos:column="68"/></condition><then pos:line="51" pos:column="68">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="25">status<pos:position pos:line="52" pos:column="31"/></name> <operator pos:line="52" pos:column="32">=<pos:position pos:line="52" pos:column="33"/></operator> <call><name pos:line="52" pos:column="34">cf_util_get_string<pos:position pos:line="52" pos:column="52"/></name> <argument_list pos:line="52" pos:column="53">(<argument><expr><name pos:line="52" pos:column="54">child<pos:position pos:line="52" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="61">&amp;<pos:position pos:line="52" pos:column="66"/></operator><name><name pos:line="52" pos:column="62">cb<pos:position pos:line="52" pos:column="64"/></name><operator pos:line="52" pos:column="64">-&gt;<pos:position pos:line="52" pos:column="69"/></operator><name pos:line="52" pos:column="66">clientkey<pos:position pos:line="52" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="77"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><call><name pos:line="53" pos:column="26">strcasecmp<pos:position pos:line="53" pos:column="36"/></name> <argument_list pos:line="53" pos:column="37">(<argument><expr><literal type="string" pos:line="53" pos:column="38">"ClientCert"<pos:position pos:line="53" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="52">child<pos:position pos:line="53" pos:column="57"/></name><operator pos:line="53" pos:column="57">-&gt;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="59">key<pos:position pos:line="53" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="63"/></argument_list></call> <operator pos:line="53" pos:column="64">==<pos:position pos:line="53" pos:column="66"/></operator> <literal type="number" pos:line="53" pos:column="67">0<pos:position pos:line="53" pos:column="68"/></literal></expr>)<pos:position pos:line="53" pos:column="69"/></condition><then pos:line="53" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="25">status<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">=<pos:position pos:line="54" pos:column="33"/></operator> <call><name pos:line="54" pos:column="34">cf_util_get_string<pos:position pos:line="54" pos:column="52"/></name> <argument_list pos:line="54" pos:column="53">(<argument><expr><name pos:line="54" pos:column="54">child<pos:position pos:line="54" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="61">&amp;<pos:position pos:line="54" pos:column="66"/></operator><name><name pos:line="54" pos:column="62">cb<pos:position pos:line="54" pos:column="64"/></name><operator pos:line="54" pos:column="64">-&gt;<pos:position pos:line="54" pos:column="69"/></operator><name pos:line="54" pos:column="66">clientcert<pos:position pos:line="54" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="78"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="55" pos:column="17">else <if pos:line="55" pos:column="22">if <condition pos:line="55" pos:column="25">(<expr><call><name pos:line="55" pos:column="26">strcasecmp<pos:position pos:line="55" pos:column="36"/></name> <argument_list pos:line="55" pos:column="37">(<argument><expr><literal type="string" pos:line="55" pos:column="38">"ClientKeyPass"<pos:position pos:line="55" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="55">child<pos:position pos:line="55" pos:column="60"/></name><operator pos:line="55" pos:column="60">-&gt;<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="62">key<pos:position pos:line="55" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="66"/></argument_list></call> <operator pos:line="55" pos:column="67">==<pos:position pos:line="55" pos:column="69"/></operator> <literal type="number" pos:line="55" pos:column="70">0<pos:position pos:line="55" pos:column="71"/></literal></expr>)<pos:position pos:line="55" pos:column="72"/></condition><then pos:line="55" pos:column="72">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="56" pos:column="25">status<pos:position pos:line="56" pos:column="31"/></name> <operator pos:line="56" pos:column="32">=<pos:position pos:line="56" pos:column="33"/></operator> <call><name pos:line="56" pos:column="34">cf_util_get_string<pos:position pos:line="56" pos:column="52"/></name> <argument_list pos:line="56" pos:column="53">(<argument><expr><name pos:line="56" pos:column="54">child<pos:position pos:line="56" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="56" pos:column="61">&amp;<pos:position pos:line="56" pos:column="66"/></operator><name><name pos:line="56" pos:column="62">cb<pos:position pos:line="56" pos:column="64"/></name><operator pos:line="56" pos:column="64">-&gt;<pos:position pos:line="56" pos:column="69"/></operator><name pos:line="56" pos:column="66">clientkeypass<pos:position pos:line="56" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="81"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="57" pos:column="17">else <if pos:line="57" pos:column="22">if <condition pos:line="57" pos:column="25">(<expr><call><name pos:line="57" pos:column="26">strcasecmp<pos:position pos:line="57" pos:column="36"/></name> <argument_list pos:line="57" pos:column="37">(<argument><expr><literal type="string" pos:line="57" pos:column="38">"SSLVersion"<pos:position pos:line="57" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="52">child<pos:position pos:line="57" pos:column="57"/></name><operator pos:line="57" pos:column="57">-&gt;<pos:position pos:line="57" pos:column="62"/></operator><name pos:line="57" pos:column="59">key<pos:position pos:line="57" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call> <operator pos:line="57" pos:column="64">==<pos:position pos:line="57" pos:column="66"/></operator> <literal type="number" pos:line="57" pos:column="67">0<pos:position pos:line="57" pos:column="68"/></literal></expr>)<pos:position pos:line="57" pos:column="69"/></condition><then pos:line="57" pos:column="69">
                <block pos:line="58" pos:column="17">{
                        <decl_stmt><decl><type><name pos:line="59" pos:column="25">char<pos:position pos:line="59" pos:column="29"/></name> <modifier pos:line="59" pos:column="30">*<pos:position pos:line="59" pos:column="31"/></modifier></type><name pos:line="59" pos:column="31">value<pos:position pos:line="59" pos:column="36"/></name> <init pos:line="59" pos:column="37">= <expr><name pos:line="59" pos:column="39">NULL<pos:position pos:line="59" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="59" pos:column="44"/></decl_stmt>

                        <expr_stmt><expr><name pos:line="61" pos:column="25">status<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">=<pos:position pos:line="61" pos:column="33"/></operator> <call><name pos:line="61" pos:column="34">cf_util_get_string<pos:position pos:line="61" pos:column="52"/></name> <argument_list pos:line="61" pos:column="53">(<argument><expr><name pos:line="61" pos:column="54">child<pos:position pos:line="61" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="61">&amp;<pos:position pos:line="61" pos:column="66"/></operator><name pos:line="61" pos:column="62">value<pos:position pos:line="61" pos:column="67"/></name></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt>
                        <if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><name pos:line="62" pos:column="29">status<pos:position pos:line="62" pos:column="35"/></name> <operator pos:line="62" pos:column="36">!=<pos:position pos:line="62" pos:column="38"/></operator> <literal type="number" pos:line="62" pos:column="39">0<pos:position pos:line="62" pos:column="40"/></literal></expr>)<pos:position pos:line="62" pos:column="41"/></condition><then pos:line="62" pos:column="41">
                                <block type="pseudo"><break pos:line="63" pos:column="33">break;<pos:position pos:line="63" pos:column="39"/></break></block></then></if>

                        <if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">value<pos:position pos:line="65" pos:column="34"/></name> <operator pos:line="65" pos:column="35">==<pos:position pos:line="65" pos:column="37"/></operator> <name pos:line="65" pos:column="38">NULL<pos:position pos:line="65" pos:column="42"/></name> <operator pos:line="65" pos:column="43">||<pos:position pos:line="65" pos:column="45"/></operator> <call><name pos:line="65" pos:column="46">strcasecmp<pos:position pos:line="65" pos:column="56"/></name> <argument_list pos:line="65" pos:column="57">(<argument><expr><literal type="string" pos:line="65" pos:column="58">"default"<pos:position pos:line="65" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="69">value<pos:position pos:line="65" pos:column="74"/></name></expr></argument>)<pos:position pos:line="65" pos:column="75"/></argument_list></call> <operator pos:line="65" pos:column="76">==<pos:position pos:line="65" pos:column="78"/></operator> <literal type="number" pos:line="65" pos:column="79">0<pos:position pos:line="65" pos:column="80"/></literal></expr>)<pos:position pos:line="65" pos:column="81"/></condition><then pos:line="65" pos:column="81">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="33">cb<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">sslversion<pos:position pos:line="66" pos:column="47"/></name></name> <operator pos:line="66" pos:column="48">=<pos:position pos:line="66" pos:column="49"/></operator> <name pos:line="66" pos:column="50">CURL_SSLVERSION_DEFAULT<pos:position pos:line="66" pos:column="73"/></name></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt></block></then>
                        <elseif pos:line="67" pos:column="25">else <if pos:line="67" pos:column="30">if <condition pos:line="67" pos:column="33">(<expr><call><name pos:line="67" pos:column="34">strcasecmp<pos:position pos:line="67" pos:column="44"/></name> <argument_list pos:line="67" pos:column="45">(<argument><expr><literal type="string" pos:line="67" pos:column="46">"SSLv2"<pos:position pos:line="67" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="55">value<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call> <operator pos:line="67" pos:column="62">==<pos:position pos:line="67" pos:column="64"/></operator> <literal type="number" pos:line="67" pos:column="65">0<pos:position pos:line="67" pos:column="66"/></literal></expr>)<pos:position pos:line="67" pos:column="67"/></condition><then pos:line="67" pos:column="67">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="33">cb<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">-&gt;<pos:position pos:line="68" pos:column="40"/></operator><name pos:line="68" pos:column="37">sslversion<pos:position pos:line="68" pos:column="47"/></name></name> <operator pos:line="68" pos:column="48">=<pos:position pos:line="68" pos:column="49"/></operator> <name pos:line="68" pos:column="50">CURL_SSLVERSION_SSLv2<pos:position pos:line="68" pos:column="71"/></name></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt></block></then></if></elseif>
                        <elseif pos:line="69" pos:column="25">else <if pos:line="69" pos:column="30">if <condition pos:line="69" pos:column="33">(<expr><call><name pos:line="69" pos:column="34">strcasecmp<pos:position pos:line="69" pos:column="44"/></name> <argument_list pos:line="69" pos:column="45">(<argument><expr><literal type="string" pos:line="69" pos:column="46">"SSLv3"<pos:position pos:line="69" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="55">value<pos:position pos:line="69" pos:column="60"/></name></expr></argument>)<pos:position pos:line="69" pos:column="61"/></argument_list></call> <operator pos:line="69" pos:column="62">==<pos:position pos:line="69" pos:column="64"/></operator> <literal type="number" pos:line="69" pos:column="65">0<pos:position pos:line="69" pos:column="66"/></literal></expr>)<pos:position pos:line="69" pos:column="67"/></condition><then pos:line="69" pos:column="67">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="70" pos:column="33">cb<pos:position pos:line="70" pos:column="35"/></name><operator pos:line="70" pos:column="35">-&gt;<pos:position pos:line="70" pos:column="40"/></operator><name pos:line="70" pos:column="37">sslversion<pos:position pos:line="70" pos:column="47"/></name></name> <operator pos:line="70" pos:column="48">=<pos:position pos:line="70" pos:column="49"/></operator> <name pos:line="70" pos:column="50">CURL_SSLVERSION_SSLv3<pos:position pos:line="70" pos:column="71"/></name></expr>;<pos:position pos:line="70" pos:column="72"/></expr_stmt></block></then></if></elseif>
                        <elseif pos:line="71" pos:column="25">else <if pos:line="71" pos:column="30">if <condition pos:line="71" pos:column="33">(<expr><call><name pos:line="71" pos:column="34">strcasecmp<pos:position pos:line="71" pos:column="44"/></name> <argument_list pos:line="71" pos:column="45">(<argument><expr><literal type="string" pos:line="71" pos:column="46">"TLSv1"<pos:position pos:line="71" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="55">value<pos:position pos:line="71" pos:column="60"/></name></expr></argument>)<pos:position pos:line="71" pos:column="61"/></argument_list></call> <operator pos:line="71" pos:column="62">==<pos:position pos:line="71" pos:column="64"/></operator> <literal type="number" pos:line="71" pos:column="65">0<pos:position pos:line="71" pos:column="66"/></literal></expr>)<pos:position pos:line="71" pos:column="67"/></condition><then pos:line="71" pos:column="67">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="72" pos:column="33">cb<pos:position pos:line="72" pos:column="35"/></name><operator pos:line="72" pos:column="35">-&gt;<pos:position pos:line="72" pos:column="40"/></operator><name pos:line="72" pos:column="37">sslversion<pos:position pos:line="72" pos:column="47"/></name></name> <operator pos:line="72" pos:column="48">=<pos:position pos:line="72" pos:column="49"/></operator> <name pos:line="72" pos:column="50">CURL_SSLVERSION_TLSv1<pos:position pos:line="72" pos:column="71"/></name></expr>;<pos:position pos:line="72" pos:column="72"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="73" pos:column="1">#<cpp:directive pos:line="73" pos:column="2">if<pos:position pos:line="73" pos:column="4"/></cpp:directive> <expr><operator pos:line="73" pos:column="5">(<pos:position pos:line="73" pos:column="6"/></operator><name pos:line="73" pos:column="6">LIBCURL_VERSION_MAJOR<pos:position pos:line="73" pos:column="27"/></name> <operator pos:line="73" pos:column="28">&gt;<pos:position pos:line="73" pos:column="32"/></operator> <literal type="number" pos:line="73" pos:column="30">7<pos:position pos:line="73" pos:column="31"/></literal><operator pos:line="73" pos:column="31">)<pos:position pos:line="73" pos:column="32"/></operator> <operator pos:line="73" pos:column="33">||<pos:position pos:line="73" pos:column="35"/></operator> <operator pos:line="73" pos:column="36">(<pos:position pos:line="73" pos:column="37"/></operator><name pos:line="73" pos:column="37">LIBCURL_VERSION_MAJOR<pos:position pos:line="73" pos:column="58"/></name> <operator pos:line="73" pos:column="59">==<pos:position pos:line="73" pos:column="61"/></operator> <literal type="number" pos:line="73" pos:column="62">7<pos:position pos:line="73" pos:column="63"/></literal> <operator pos:line="73" pos:column="64">&amp;&amp;<pos:position pos:line="73" pos:column="74"/></operator> <name pos:line="73" pos:column="67">LIBCURL_VERSION_MINOR<pos:position pos:line="73" pos:column="88"/></name> <operator pos:line="73" pos:column="89">&gt;=<pos:position pos:line="73" pos:column="94"/></operator> <literal type="number" pos:line="73" pos:column="92">34<pos:position pos:line="73" pos:column="94"/></literal><operator pos:line="73" pos:column="94">)<pos:position pos:line="73" pos:column="95"/></operator></expr></cpp:if>
                        <elseif pos:line="74" pos:column="25">else <if pos:line="74" pos:column="30">if <condition pos:line="74" pos:column="33">(<expr><call><name pos:line="74" pos:column="34">strcasecmp<pos:position pos:line="74" pos:column="44"/></name> <argument_list pos:line="74" pos:column="45">(<argument><expr><literal type="string" pos:line="74" pos:column="46">"TLSv1_0"<pos:position pos:line="74" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="57">value<pos:position pos:line="74" pos:column="62"/></name></expr></argument>)<pos:position pos:line="74" pos:column="63"/></argument_list></call> <operator pos:line="74" pos:column="64">==<pos:position pos:line="74" pos:column="66"/></operator> <literal type="number" pos:line="74" pos:column="67">0<pos:position pos:line="74" pos:column="68"/></literal></expr>)<pos:position pos:line="74" pos:column="69"/></condition><then pos:line="74" pos:column="69">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="33">cb<pos:position pos:line="75" pos:column="35"/></name><operator pos:line="75" pos:column="35">-&gt;<pos:position pos:line="75" pos:column="40"/></operator><name pos:line="75" pos:column="37">sslversion<pos:position pos:line="75" pos:column="47"/></name></name> <operator pos:line="75" pos:column="48">=<pos:position pos:line="75" pos:column="49"/></operator> <name pos:line="75" pos:column="50">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="75" pos:column="73"/></name></expr>;<pos:position pos:line="75" pos:column="74"/></expr_stmt></block></then></if></elseif>
                        <elseif pos:line="76" pos:column="25">else <if pos:line="76" pos:column="30">if <condition pos:line="76" pos:column="33">(<expr><call><name pos:line="76" pos:column="34">strcasecmp<pos:position pos:line="76" pos:column="44"/></name> <argument_list pos:line="76" pos:column="45">(<argument><expr><literal type="string" pos:line="76" pos:column="46">"TLSv1_1"<pos:position pos:line="76" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="57">value<pos:position pos:line="76" pos:column="62"/></name></expr></argument>)<pos:position pos:line="76" pos:column="63"/></argument_list></call> <operator pos:line="76" pos:column="64">==<pos:position pos:line="76" pos:column="66"/></operator> <literal type="number" pos:line="76" pos:column="67">0<pos:position pos:line="76" pos:column="68"/></literal></expr>)<pos:position pos:line="76" pos:column="69"/></condition><then pos:line="76" pos:column="69">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="33">cb<pos:position pos:line="77" pos:column="35"/></name><operator pos:line="77" pos:column="35">-&gt;<pos:position pos:line="77" pos:column="40"/></operator><name pos:line="77" pos:column="37">sslversion<pos:position pos:line="77" pos:column="47"/></name></name> <operator pos:line="77" pos:column="48">=<pos:position pos:line="77" pos:column="49"/></operator> <name pos:line="77" pos:column="50">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="77" pos:column="73"/></name></expr>;<pos:position pos:line="77" pos:column="74"/></expr_stmt></block></then></if></elseif>
                        <elseif pos:line="78" pos:column="25">else <if pos:line="78" pos:column="30">if <condition pos:line="78" pos:column="33">(<expr><call><name pos:line="78" pos:column="34">strcasecmp<pos:position pos:line="78" pos:column="44"/></name> <argument_list pos:line="78" pos:column="45">(<argument><expr><literal type="string" pos:line="78" pos:column="46">"TLSv1_2"<pos:position pos:line="78" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="57">value<pos:position pos:line="78" pos:column="62"/></name></expr></argument>)<pos:position pos:line="78" pos:column="63"/></argument_list></call> <operator pos:line="78" pos:column="64">==<pos:position pos:line="78" pos:column="66"/></operator> <literal type="number" pos:line="78" pos:column="67">0<pos:position pos:line="78" pos:column="68"/></literal></expr>)<pos:position pos:line="78" pos:column="69"/></condition><then pos:line="78" pos:column="69">
                                <block type="pseudo"><expr_stmt><expr><name><name pos:line="79" pos:column="33">cb<pos:position pos:line="79" pos:column="35"/></name><operator pos:line="79" pos:column="35">-&gt;<pos:position pos:line="79" pos:column="40"/></operator><name pos:line="79" pos:column="37">sslversion<pos:position pos:line="79" pos:column="47"/></name></name> <operator pos:line="79" pos:column="48">=<pos:position pos:line="79" pos:column="49"/></operator> <name pos:line="79" pos:column="50">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="79" pos:column="73"/></name></expr>;<pos:position pos:line="79" pos:column="74"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif<pos:position pos:line="80" pos:column="7"/></cpp:directive></cpp:endif>
                        <else pos:line="81" pos:column="25">else
                        <block pos:line="82" pos:column="25">{
                                <expr_stmt><expr><call><name pos:line="83" pos:column="33">ERROR<pos:position pos:line="83" pos:column="38"/></name> <argument_list pos:line="83" pos:column="39">(<argument><expr><literal type="string" pos:line="83" pos:column="40">"write_http plugin: Invalid SSLVersion "<pos:position pos:line="83" pos:column="80"/></literal>
                                                <literal type="string" pos:line="84" pos:column="49">"option: %s."<pos:position pos:line="84" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="64">value<pos:position pos:line="84" pos:column="69"/></name></expr></argument>)<pos:position pos:line="84" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="71"/></expr_stmt>
                                <expr_stmt><expr><name pos:line="85" pos:column="33">status<pos:position pos:line="85" pos:column="39"/></name> <operator pos:line="85" pos:column="40">=<pos:position pos:line="85" pos:column="41"/></operator> <name pos:line="85" pos:column="42">EINVAL<pos:position pos:line="85" pos:column="48"/></name></expr>;<pos:position pos:line="85" pos:column="49"/></expr_stmt>
                        }<pos:position pos:line="86" pos:column="26"/></block></else></if>

                        <expr_stmt><expr><call><name pos:line="88" pos:column="25">sfree<pos:position pos:line="88" pos:column="30"/></name><argument_list pos:line="88" pos:column="30">(<argument><expr><name pos:line="88" pos:column="31">value<pos:position pos:line="88" pos:column="36"/></name></expr></argument>)<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>
                }<pos:position pos:line="89" pos:column="18"/></block></then></if></elseif>
                <elseif pos:line="90" pos:column="17">else <if pos:line="90" pos:column="22">if <condition pos:line="90" pos:column="25">(<expr><call><name pos:line="90" pos:column="26">strcasecmp<pos:position pos:line="90" pos:column="36"/></name> <argument_list pos:line="90" pos:column="37">(<argument><expr><literal type="string" pos:line="90" pos:column="38">"Format"<pos:position pos:line="90" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="90" pos:column="48">child<pos:position pos:line="90" pos:column="53"/></name><operator pos:line="90" pos:column="53">-&gt;<pos:position pos:line="90" pos:column="58"/></operator><name pos:line="90" pos:column="55">key<pos:position pos:line="90" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="59"/></argument_list></call> <operator pos:line="90" pos:column="60">==<pos:position pos:line="90" pos:column="62"/></operator> <literal type="number" pos:line="90" pos:column="63">0<pos:position pos:line="90" pos:column="64"/></literal></expr>)<pos:position pos:line="90" pos:column="65"/></condition><then pos:line="90" pos:column="65">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="25">status<pos:position pos:line="91" pos:column="31"/></name> <operator pos:line="91" pos:column="32">=<pos:position pos:line="91" pos:column="33"/></operator> <call><name pos:line="91" pos:column="34">config_set_format<pos:position pos:line="91" pos:column="51"/></name> <argument_list pos:line="91" pos:column="52">(<argument><expr><name pos:line="91" pos:column="53">cb<pos:position pos:line="91" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="57">child<pos:position pos:line="91" pos:column="62"/></name></expr></argument>)<pos:position pos:line="91" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="64"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="92" pos:column="17">else <if pos:line="92" pos:column="22">if <condition pos:line="92" pos:column="25">(<expr><call><name pos:line="92" pos:column="26">strcasecmp<pos:position pos:line="92" pos:column="36"/></name> <argument_list pos:line="92" pos:column="37">(<argument><expr><literal type="string" pos:line="92" pos:column="38">"Metrics"<pos:position pos:line="92" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="49">child<pos:position pos:line="92" pos:column="54"/></name><operator pos:line="92" pos:column="54">-&gt;<pos:position pos:line="92" pos:column="59"/></operator><name pos:line="92" pos:column="56">key<pos:position pos:line="92" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="60"/></argument_list></call> <operator pos:line="92" pos:column="61">==<pos:position pos:line="92" pos:column="63"/></operator> <literal type="number" pos:line="92" pos:column="64">0<pos:position pos:line="92" pos:column="65"/></literal></expr>)<pos:position pos:line="92" pos:column="66"/></condition><then pos:line="92" pos:column="66">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="93" pos:column="25">cf_util_get_boolean<pos:position pos:line="93" pos:column="44"/></name> <argument_list pos:line="93" pos:column="45">(<argument><expr><name pos:line="93" pos:column="46">child<pos:position pos:line="93" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="93" pos:column="53">&amp;<pos:position pos:line="93" pos:column="58"/></operator><name><name pos:line="93" pos:column="54">cb<pos:position pos:line="93" pos:column="56"/></name><operator pos:line="93" pos:column="56">-&gt;<pos:position pos:line="93" pos:column="61"/></operator><name pos:line="93" pos:column="58">send_metrics<pos:position pos:line="93" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="72"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="94" pos:column="17">else <if pos:line="94" pos:column="22">if <condition pos:line="94" pos:column="25">(<expr><call><name pos:line="94" pos:column="26">strcasecmp<pos:position pos:line="94" pos:column="36"/></name> <argument_list pos:line="94" pos:column="37">(<argument><expr><literal type="string" pos:line="94" pos:column="38">"Notifications"<pos:position pos:line="94" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="55">child<pos:position pos:line="94" pos:column="60"/></name><operator pos:line="94" pos:column="60">-&gt;<pos:position pos:line="94" pos:column="65"/></operator><name pos:line="94" pos:column="62">key<pos:position pos:line="94" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="66"/></argument_list></call> <operator pos:line="94" pos:column="67">==<pos:position pos:line="94" pos:column="69"/></operator> <literal type="number" pos:line="94" pos:column="70">0<pos:position pos:line="94" pos:column="71"/></literal></expr>)<pos:position pos:line="94" pos:column="72"/></condition><then pos:line="94" pos:column="72">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="25">cf_util_get_boolean<pos:position pos:line="95" pos:column="44"/></name> <argument_list pos:line="95" pos:column="45">(<argument><expr><name pos:line="95" pos:column="46">child<pos:position pos:line="95" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="53">&amp;<pos:position pos:line="95" pos:column="58"/></operator><name><name pos:line="95" pos:column="54">cb<pos:position pos:line="95" pos:column="56"/></name><operator pos:line="95" pos:column="56">-&gt;<pos:position pos:line="95" pos:column="61"/></operator><name pos:line="95" pos:column="58">send_notifications<pos:position pos:line="95" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="78"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="96" pos:column="17">else <if pos:line="96" pos:column="22">if <condition pos:line="96" pos:column="25">(<expr><call><name pos:line="96" pos:column="26">strcasecmp<pos:position pos:line="96" pos:column="36"/></name> <argument_list pos:line="96" pos:column="37">(<argument><expr><literal type="string" pos:line="96" pos:column="38">"StoreRates"<pos:position pos:line="96" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="96" pos:column="52">child<pos:position pos:line="96" pos:column="57"/></name><operator pos:line="96" pos:column="57">-&gt;<pos:position pos:line="96" pos:column="62"/></operator><name pos:line="96" pos:column="59">key<pos:position pos:line="96" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="63"/></argument_list></call> <operator pos:line="96" pos:column="64">==<pos:position pos:line="96" pos:column="66"/></operator> <literal type="number" pos:line="96" pos:column="67">0<pos:position pos:line="96" pos:column="68"/></literal></expr>)<pos:position pos:line="96" pos:column="69"/></condition><then pos:line="96" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="25">status<pos:position pos:line="97" pos:column="31"/></name> <operator pos:line="97" pos:column="32">=<pos:position pos:line="97" pos:column="33"/></operator> <call><name pos:line="97" pos:column="34">cf_util_get_boolean<pos:position pos:line="97" pos:column="53"/></name> <argument_list pos:line="97" pos:column="54">(<argument><expr><name pos:line="97" pos:column="55">child<pos:position pos:line="97" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="62">&amp;<pos:position pos:line="97" pos:column="67"/></operator><name><name pos:line="97" pos:column="63">cb<pos:position pos:line="97" pos:column="65"/></name><operator pos:line="97" pos:column="65">-&gt;<pos:position pos:line="97" pos:column="70"/></operator><name pos:line="97" pos:column="67">store_rates<pos:position pos:line="97" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="80"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="98" pos:column="17">else <if pos:line="98" pos:column="22">if <condition pos:line="98" pos:column="25">(<expr><call><name pos:line="98" pos:column="26">strcasecmp<pos:position pos:line="98" pos:column="36"/></name> <argument_list pos:line="98" pos:column="37">(<argument><expr><literal type="string" pos:line="98" pos:column="38">"BufferSize"<pos:position pos:line="98" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="52">child<pos:position pos:line="98" pos:column="57"/></name><operator pos:line="98" pos:column="57">-&gt;<pos:position pos:line="98" pos:column="62"/></operator><name pos:line="98" pos:column="59">key<pos:position pos:line="98" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="63"/></argument_list></call> <operator pos:line="98" pos:column="64">==<pos:position pos:line="98" pos:column="66"/></operator> <literal type="number" pos:line="98" pos:column="67">0<pos:position pos:line="98" pos:column="68"/></literal></expr>)<pos:position pos:line="98" pos:column="69"/></condition><then pos:line="98" pos:column="69">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="25">status<pos:position pos:line="99" pos:column="31"/></name> <operator pos:line="99" pos:column="32">=<pos:position pos:line="99" pos:column="33"/></operator> <call><name pos:line="99" pos:column="34">cf_util_get_int<pos:position pos:line="99" pos:column="49"/></name> <argument_list pos:line="99" pos:column="50">(<argument><expr><name pos:line="99" pos:column="51">child<pos:position pos:line="99" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="58">&amp;<pos:position pos:line="99" pos:column="63"/></operator><name pos:line="99" pos:column="59">buffer_size<pos:position pos:line="99" pos:column="70"/></name></expr></argument>)<pos:position pos:line="99" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="72"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="100" pos:column="17">else <if pos:line="100" pos:column="22">if <condition pos:line="100" pos:column="25">(<expr><call><name pos:line="100" pos:column="26">strcasecmp<pos:position pos:line="100" pos:column="36"/></name> <argument_list pos:line="100" pos:column="37">(<argument><expr><literal type="string" pos:line="100" pos:column="38">"LowSpeedLimit"<pos:position pos:line="100" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="55">child<pos:position pos:line="100" pos:column="60"/></name><operator pos:line="100" pos:column="60">-&gt;<pos:position pos:line="100" pos:column="65"/></operator><name pos:line="100" pos:column="62">key<pos:position pos:line="100" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="66"/></argument_list></call> <operator pos:line="100" pos:column="67">==<pos:position pos:line="100" pos:column="69"/></operator> <literal type="number" pos:line="100" pos:column="70">0<pos:position pos:line="100" pos:column="71"/></literal></expr>)<pos:position pos:line="100" pos:column="72"/></condition><then pos:line="100" pos:column="72">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="25">status<pos:position pos:line="101" pos:column="31"/></name> <operator pos:line="101" pos:column="32">=<pos:position pos:line="101" pos:column="33"/></operator> <call><name pos:line="101" pos:column="34">cf_util_get_int<pos:position pos:line="101" pos:column="49"/></name> <argument_list pos:line="101" pos:column="50">(<argument><expr><name pos:line="101" pos:column="51">child<pos:position pos:line="101" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="58">&amp;<pos:position pos:line="101" pos:column="63"/></operator><name><name pos:line="101" pos:column="59">cb<pos:position pos:line="101" pos:column="61"/></name><operator pos:line="101" pos:column="61">-&gt;<pos:position pos:line="101" pos:column="66"/></operator><name pos:line="101" pos:column="63">low_speed_limit<pos:position pos:line="101" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="80"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="102" pos:column="17">else <if pos:line="102" pos:column="22">if <condition pos:line="102" pos:column="25">(<expr><call><name pos:line="102" pos:column="26">strcasecmp<pos:position pos:line="102" pos:column="36"/></name> <argument_list pos:line="102" pos:column="37">(<argument><expr><literal type="string" pos:line="102" pos:column="38">"Timeout"<pos:position pos:line="102" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="49">child<pos:position pos:line="102" pos:column="54"/></name><operator pos:line="102" pos:column="54">-&gt;<pos:position pos:line="102" pos:column="59"/></operator><name pos:line="102" pos:column="56">key<pos:position pos:line="102" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="60"/></argument_list></call> <operator pos:line="102" pos:column="61">==<pos:position pos:line="102" pos:column="63"/></operator> <literal type="number" pos:line="102" pos:column="64">0<pos:position pos:line="102" pos:column="65"/></literal></expr>)<pos:position pos:line="102" pos:column="66"/></condition><then pos:line="102" pos:column="66">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="25">status<pos:position pos:line="103" pos:column="31"/></name> <operator pos:line="103" pos:column="32">=<pos:position pos:line="103" pos:column="33"/></operator> <call><name pos:line="103" pos:column="34">cf_util_get_int<pos:position pos:line="103" pos:column="49"/></name> <argument_list pos:line="103" pos:column="50">(<argument><expr><name pos:line="103" pos:column="51">child<pos:position pos:line="103" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="103" pos:column="58">&amp;<pos:position pos:line="103" pos:column="63"/></operator><name><name pos:line="103" pos:column="59">cb<pos:position pos:line="103" pos:column="61"/></name><operator pos:line="103" pos:column="61">-&gt;<pos:position pos:line="103" pos:column="66"/></operator><name pos:line="103" pos:column="63">timeout<pos:position pos:line="103" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="72"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="104" pos:column="17">else <if pos:line="104" pos:column="22">if <condition pos:line="104" pos:column="25">(<expr><call><name pos:line="104" pos:column="26">strcasecmp<pos:position pos:line="104" pos:column="36"/></name> <argument_list pos:line="104" pos:column="37">(<argument><expr><literal type="string" pos:line="104" pos:column="38">"LogHttpError"<pos:position pos:line="104" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="104" pos:column="54">child<pos:position pos:line="104" pos:column="59"/></name><operator pos:line="104" pos:column="59">-&gt;<pos:position pos:line="104" pos:column="64"/></operator><name pos:line="104" pos:column="61">key<pos:position pos:line="104" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="104" pos:column="65"/></argument_list></call> <operator pos:line="104" pos:column="66">==<pos:position pos:line="104" pos:column="68"/></operator> <literal type="number" pos:line="104" pos:column="69">0<pos:position pos:line="104" pos:column="70"/></literal></expr>)<pos:position pos:line="104" pos:column="71"/></condition><then pos:line="104" pos:column="71">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="25">status<pos:position pos:line="105" pos:column="31"/></name> <operator pos:line="105" pos:column="32">=<pos:position pos:line="105" pos:column="33"/></operator> <call><name pos:line="105" pos:column="34">cf_util_get_boolean<pos:position pos:line="105" pos:column="53"/></name> <argument_list pos:line="105" pos:column="54">(<argument><expr><name pos:line="105" pos:column="55">child<pos:position pos:line="105" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="105" pos:column="62">&amp;<pos:position pos:line="105" pos:column="67"/></operator><name><name pos:line="105" pos:column="63">cb<pos:position pos:line="105" pos:column="65"/></name><operator pos:line="105" pos:column="65">-&gt;<pos:position pos:line="105" pos:column="70"/></operator><name pos:line="105" pos:column="67">log_http_error<pos:position pos:line="105" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="83"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="106" pos:column="17">else <if pos:line="106" pos:column="22">if <condition pos:line="106" pos:column="25">(<expr><call><name pos:line="106" pos:column="26">strcasecmp<pos:position pos:line="106" pos:column="36"/></name> <argument_list pos:line="106" pos:column="37">(<argument><expr><literal type="string" pos:line="106" pos:column="38">"Header"<pos:position pos:line="106" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="48">child<pos:position pos:line="106" pos:column="53"/></name><operator pos:line="106" pos:column="53">-&gt;<pos:position pos:line="106" pos:column="58"/></operator><name pos:line="106" pos:column="55">key<pos:position pos:line="106" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="59"/></argument_list></call> <operator pos:line="106" pos:column="60">==<pos:position pos:line="106" pos:column="62"/></operator> <literal type="number" pos:line="106" pos:column="63">0<pos:position pos:line="106" pos:column="64"/></literal></expr>)<pos:position pos:line="106" pos:column="65"/></condition><then pos:line="106" pos:column="65">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="107" pos:column="25">status<pos:position pos:line="107" pos:column="31"/></name> <operator pos:line="107" pos:column="32">=<pos:position pos:line="107" pos:column="33"/></operator> <call><name pos:line="107" pos:column="34">wh_config_append_string<pos:position pos:line="107" pos:column="57"/></name> <argument_list pos:line="107" pos:column="58">(<argument><expr><literal type="string" pos:line="107" pos:column="59">"Header"<pos:position pos:line="107" pos:column="67"/></literal></expr></argument>, <argument><expr><operator pos:line="107" pos:column="69">&amp;<pos:position pos:line="107" pos:column="74"/></operator><name><name pos:line="107" pos:column="70">cb<pos:position pos:line="107" pos:column="72"/></name><operator pos:line="107" pos:column="72">-&gt;<pos:position pos:line="107" pos:column="77"/></operator><name pos:line="107" pos:column="74">headers<pos:position pos:line="107" pos:column="81"/></name></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="83">child<pos:position pos:line="107" pos:column="88"/></name></expr></argument>)<pos:position pos:line="107" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="90"/></expr_stmt></block></then></if></elseif>
                <else pos:line="108" pos:column="17">else
                <block pos:line="109" pos:column="17">{
                        <expr_stmt><expr><call><name pos:line="110" pos:column="25">ERROR<pos:position pos:line="110" pos:column="30"/></name> <argument_list pos:line="110" pos:column="31">(<argument><expr><literal type="string" pos:line="110" pos:column="32">"write_http plugin: Invalid configuration "<pos:position pos:line="110" pos:column="75"/></literal>
                                        <literal type="string" pos:line="111" pos:column="41">"option: %s."<pos:position pos:line="111" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="56">child<pos:position pos:line="111" pos:column="61"/></name><operator pos:line="111" pos:column="61">-&gt;<pos:position pos:line="111" pos:column="66"/></operator><name pos:line="111" pos:column="63">key<pos:position pos:line="111" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="111" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="68"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="112" pos:column="25">status<pos:position pos:line="112" pos:column="31"/></name> <operator pos:line="112" pos:column="32">=<pos:position pos:line="112" pos:column="33"/></operator> <name pos:line="112" pos:column="34">EINVAL<pos:position pos:line="112" pos:column="40"/></name></expr>;<pos:position pos:line="112" pos:column="41"/></expr_stmt>
                }<pos:position pos:line="113" pos:column="18"/></block></else></if>

                <if pos:line="115" pos:column="17">if <condition pos:line="115" pos:column="20">(<expr><name pos:line="115" pos:column="21">status<pos:position pos:line="115" pos:column="27"/></name> <operator pos:line="115" pos:column="28">!=<pos:position pos:line="115" pos:column="30"/></operator> <literal type="number" pos:line="115" pos:column="31">0<pos:position pos:line="115" pos:column="32"/></literal></expr>)<pos:position pos:line="115" pos:column="33"/></condition><then pos:line="115" pos:column="33">
                        <block type="pseudo"><break pos:line="116" pos:column="25">break;<pos:position pos:line="116" pos:column="31"/></break></block></then></if>
        }<pos:position pos:line="117" pos:column="10"/></block></for>

        <if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">status<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">!=<pos:position pos:line="119" pos:column="22"/></operator> <literal type="number" pos:line="119" pos:column="23">0<pos:position pos:line="119" pos:column="24"/></literal></expr>)<pos:position pos:line="119" pos:column="25"/></condition><then pos:line="119" pos:column="25">
        <block pos:line="120" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="121" pos:column="17">wh_callback_free<pos:position pos:line="121" pos:column="33"/></name> <argument_list pos:line="121" pos:column="34">(<argument><expr><name pos:line="121" pos:column="35">cb<pos:position pos:line="121" pos:column="37"/></name></expr></argument>)<pos:position pos:line="121" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="39"/></expr_stmt>
                <return pos:line="122" pos:column="17">return <expr><operator pos:line="122" pos:column="24">(<pos:position pos:line="122" pos:column="25"/></operator><name pos:line="122" pos:column="25">status<pos:position pos:line="122" pos:column="31"/></name><operator pos:line="122" pos:column="31">)<pos:position pos:line="122" pos:column="32"/></operator></expr>;<pos:position pos:line="122" pos:column="33"/></return>
        }<pos:position pos:line="123" pos:column="10"/></block></then></if>

        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><name><name pos:line="125" pos:column="13">cb<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">-&gt;<pos:position pos:line="125" pos:column="20"/></operator><name pos:line="125" pos:column="17">location<pos:position pos:line="125" pos:column="25"/></name></name> <operator pos:line="125" pos:column="26">==<pos:position pos:line="125" pos:column="28"/></operator> <name pos:line="125" pos:column="29">NULL<pos:position pos:line="125" pos:column="33"/></name></expr>)<pos:position pos:line="125" pos:column="34"/></condition><then pos:line="125" pos:column="34">
        <block pos:line="126" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="127" pos:column="17">ERROR<pos:position pos:line="127" pos:column="22"/></name> <argument_list pos:line="127" pos:column="23">(<argument><expr><literal type="string" pos:line="127" pos:column="24">"write_http plugin: no URL defined for instance '%s'"<pos:position pos:line="127" pos:column="77"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="128" pos:column="25">cb<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">-&gt;<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="29">name<pos:position pos:line="128" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="128" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="129" pos:column="17">wh_callback_free<pos:position pos:line="129" pos:column="33"/></name> <argument_list pos:line="129" pos:column="34">(<argument><expr><name pos:line="129" pos:column="35">cb<pos:position pos:line="129" pos:column="37"/></name></expr></argument>)<pos:position pos:line="129" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="39"/></expr_stmt>
                <return pos:line="130" pos:column="17">return <expr><operator pos:line="130" pos:column="24">(<pos:position pos:line="130" pos:column="25"/></operator><operator pos:line="130" pos:column="25">-<pos:position pos:line="130" pos:column="26"/></operator><literal type="number" pos:line="130" pos:column="26">1<pos:position pos:line="130" pos:column="27"/></literal><operator pos:line="130" pos:column="27">)<pos:position pos:line="130" pos:column="28"/></operator></expr>;<pos:position pos:line="130" pos:column="29"/></return>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>

        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><operator pos:line="133" pos:column="13">!<pos:position pos:line="133" pos:column="14"/></operator><name><name pos:line="133" pos:column="14">cb<pos:position pos:line="133" pos:column="16"/></name><operator pos:line="133" pos:column="16">-&gt;<pos:position pos:line="133" pos:column="21"/></operator><name pos:line="133" pos:column="18">send_metrics<pos:position pos:line="133" pos:column="30"/></name></name> <operator pos:line="133" pos:column="31">&amp;&amp;<pos:position pos:line="133" pos:column="41"/></operator> <operator pos:line="133" pos:column="34">!<pos:position pos:line="133" pos:column="35"/></operator><name><name pos:line="133" pos:column="35">cb<pos:position pos:line="133" pos:column="37"/></name><operator pos:line="133" pos:column="37">-&gt;<pos:position pos:line="133" pos:column="42"/></operator><name pos:line="133" pos:column="39">send_notifications<pos:position pos:line="133" pos:column="57"/></name></name></expr>)<pos:position pos:line="133" pos:column="58"/></condition><then pos:line="133" pos:column="58">
        <block pos:line="134" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="135" pos:column="17">ERROR<pos:position pos:line="135" pos:column="22"/></name> <argument_list pos:line="135" pos:column="23">(<argument><expr><literal type="string" pos:line="135" pos:column="24">"write_http plugin: Neither metrics nor notifications "<pos:position pos:line="135" pos:column="79"/></literal>
                       <literal type="string" pos:line="136" pos:column="24">"are enabled for \"%s\"."<pos:position pos:line="136" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="51">cb<pos:position pos:line="136" pos:column="53"/></name><operator pos:line="136" pos:column="53">-&gt;<pos:position pos:line="136" pos:column="58"/></operator><name pos:line="136" pos:column="55">name<pos:position pos:line="136" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="61"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="137" pos:column="17">wh_callback_free<pos:position pos:line="137" pos:column="33"/></name> <argument_list pos:line="137" pos:column="34">(<argument><expr><name pos:line="137" pos:column="35">cb<pos:position pos:line="137" pos:column="37"/></name></expr></argument>)<pos:position pos:line="137" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="39"/></expr_stmt>
                <return pos:line="138" pos:column="17">return <expr><operator pos:line="138" pos:column="24">(<pos:position pos:line="138" pos:column="25"/></operator><operator pos:line="138" pos:column="25">-<pos:position pos:line="138" pos:column="26"/></operator><literal type="number" pos:line="138" pos:column="26">1<pos:position pos:line="138" pos:column="27"/></literal><operator pos:line="138" pos:column="27">)<pos:position pos:line="138" pos:column="28"/></operator></expr>;<pos:position pos:line="138" pos:column="29"/></return>
        }<pos:position pos:line="139" pos:column="10"/></block></then></if>

        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><name><name pos:line="141" pos:column="13">cb<pos:position pos:line="141" pos:column="15"/></name><operator pos:line="141" pos:column="15">-&gt;<pos:position pos:line="141" pos:column="20"/></operator><name pos:line="141" pos:column="17">low_speed_limit<pos:position pos:line="141" pos:column="32"/></name></name> <operator pos:line="141" pos:column="33">&gt;<pos:position pos:line="141" pos:column="37"/></operator> <literal type="number" pos:line="141" pos:column="35">0<pos:position pos:line="141" pos:column="36"/></literal></expr>)<pos:position pos:line="141" pos:column="37"/></condition><then pos:line="141" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="142" pos:column="17">cb<pos:position pos:line="142" pos:column="19"/></name><operator pos:line="142" pos:column="19">-&gt;<pos:position pos:line="142" pos:column="24"/></operator><name pos:line="142" pos:column="21">low_speed_time<pos:position pos:line="142" pos:column="35"/></name></name> <operator pos:line="142" pos:column="36">=<pos:position pos:line="142" pos:column="37"/></operator> <call><name pos:line="142" pos:column="38">CDTIME_T_TO_TIME_T<pos:position pos:line="142" pos:column="56"/></name><argument_list pos:line="142" pos:column="56">(<argument><expr><call><name pos:line="142" pos:column="57">plugin_get_interval<pos:position pos:line="142" pos:column="76"/></name><argument_list pos:line="142" pos:column="76">()<pos:position pos:line="142" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="142" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="80"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="144" pos:column="9">/* Determine send_buffer_size. */</comment>
        <expr_stmt><expr><name><name pos:line="145" pos:column="9">cb<pos:position pos:line="145" pos:column="11"/></name><operator pos:line="145" pos:column="11">-&gt;<pos:position pos:line="145" pos:column="16"/></operator><name pos:line="145" pos:column="13">send_buffer_size<pos:position pos:line="145" pos:column="29"/></name></name> <operator pos:line="145" pos:column="30">=<pos:position pos:line="145" pos:column="31"/></operator> <name pos:line="145" pos:column="32">WRITE_HTTP_DEFAULT_BUFFER_SIZE<pos:position pos:line="145" pos:column="62"/></name></expr>;<pos:position pos:line="145" pos:column="63"/></expr_stmt>
        <if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">buffer_size<pos:position pos:line="146" pos:column="24"/></name> <operator pos:line="146" pos:column="25">&gt;=<pos:position pos:line="146" pos:column="30"/></operator> <literal type="number" pos:line="146" pos:column="28">1024<pos:position pos:line="146" pos:column="32"/></literal></expr>)<pos:position pos:line="146" pos:column="33"/></condition><then pos:line="146" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="147" pos:column="17">cb<pos:position pos:line="147" pos:column="19"/></name><operator pos:line="147" pos:column="19">-&gt;<pos:position pos:line="147" pos:column="24"/></operator><name pos:line="147" pos:column="21">send_buffer_size<pos:position pos:line="147" pos:column="37"/></name></name> <operator pos:line="147" pos:column="38">=<pos:position pos:line="147" pos:column="39"/></operator> <operator pos:line="147" pos:column="40">(<pos:position pos:line="147" pos:column="41"/></operator><name pos:line="147" pos:column="41">size_t<pos:position pos:line="147" pos:column="47"/></name><operator pos:line="147" pos:column="47">)<pos:position pos:line="147" pos:column="48"/></operator> <name pos:line="147" pos:column="49">buffer_size<pos:position pos:line="147" pos:column="60"/></name></expr>;<pos:position pos:line="147" pos:column="61"/></expr_stmt></block></then>
        <elseif pos:line="148" pos:column="9">else <if pos:line="148" pos:column="14">if <condition pos:line="148" pos:column="17">(<expr><name pos:line="148" pos:column="18">buffer_size<pos:position pos:line="148" pos:column="29"/></name> <operator pos:line="148" pos:column="30">!=<pos:position pos:line="148" pos:column="32"/></operator> <literal type="number" pos:line="148" pos:column="33">0<pos:position pos:line="148" pos:column="34"/></literal></expr>)<pos:position pos:line="148" pos:column="35"/></condition><then pos:line="148" pos:column="35">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="17">ERROR<pos:position pos:line="149" pos:column="22"/></name> <argument_list pos:line="149" pos:column="23">(<argument><expr><literal type="string" pos:line="149" pos:column="24">"write_http plugin: Ignoring invalid BufferSize setting (%d)."<pos:position pos:line="149" pos:column="86"/></literal></expr></argument>,
                                <argument><expr><name pos:line="150" pos:column="33">buffer_size<pos:position pos:line="150" pos:column="44"/></name></expr></argument>)<pos:position pos:line="150" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="46"/></expr_stmt></block></then></if></elseif></if>

        <comment type="block" pos:line="152" pos:column="9">/* Allocate the buffer. */</comment>
        <expr_stmt><expr><name><name pos:line="153" pos:column="9">cb<pos:position pos:line="153" pos:column="11"/></name><operator pos:line="153" pos:column="11">-&gt;<pos:position pos:line="153" pos:column="16"/></operator><name pos:line="153" pos:column="13">send_buffer<pos:position pos:line="153" pos:column="24"/></name></name> <operator pos:line="153" pos:column="25">=<pos:position pos:line="153" pos:column="26"/></operator> <call><name pos:line="153" pos:column="27">malloc<pos:position pos:line="153" pos:column="33"/></name> <argument_list pos:line="153" pos:column="34">(<argument><expr><name><name pos:line="153" pos:column="35">cb<pos:position pos:line="153" pos:column="37"/></name><operator pos:line="153" pos:column="37">-&gt;<pos:position pos:line="153" pos:column="42"/></operator><name pos:line="153" pos:column="39">send_buffer_size<pos:position pos:line="153" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="57"/></expr_stmt>
        <if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name><name pos:line="154" pos:column="13">cb<pos:position pos:line="154" pos:column="15"/></name><operator pos:line="154" pos:column="15">-&gt;<pos:position pos:line="154" pos:column="20"/></operator><name pos:line="154" pos:column="17">send_buffer<pos:position pos:line="154" pos:column="28"/></name></name> <operator pos:line="154" pos:column="29">==<pos:position pos:line="154" pos:column="31"/></operator> <name pos:line="154" pos:column="32">NULL<pos:position pos:line="154" pos:column="36"/></name></expr>)<pos:position pos:line="154" pos:column="37"/></condition><then pos:line="154" pos:column="37">
        <block pos:line="155" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="156" pos:column="17">ERROR<pos:position pos:line="156" pos:column="22"/></name> <argument_list pos:line="156" pos:column="23">(<argument><expr><literal type="string" pos:line="156" pos:column="24">"write_http plugin: malloc(%zu) failed."<pos:position pos:line="156" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="66">cb<pos:position pos:line="156" pos:column="68"/></name><operator pos:line="156" pos:column="68">-&gt;<pos:position pos:line="156" pos:column="73"/></operator><name pos:line="156" pos:column="70">send_buffer_size<pos:position pos:line="156" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="88"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="157" pos:column="17">wh_callback_free<pos:position pos:line="157" pos:column="33"/></name> <argument_list pos:line="157" pos:column="34">(<argument><expr><name pos:line="157" pos:column="35">cb<pos:position pos:line="157" pos:column="37"/></name></expr></argument>)<pos:position pos:line="157" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="39"/></expr_stmt>
                <return pos:line="158" pos:column="17">return <expr><operator pos:line="158" pos:column="24">(<pos:position pos:line="158" pos:column="25"/></operator><operator pos:line="158" pos:column="25">-<pos:position pos:line="158" pos:column="26"/></operator><literal type="number" pos:line="158" pos:column="26">1<pos:position pos:line="158" pos:column="27"/></literal><operator pos:line="158" pos:column="27">)<pos:position pos:line="158" pos:column="28"/></operator></expr>;<pos:position pos:line="158" pos:column="29"/></return>
        }<pos:position pos:line="159" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="160" pos:column="9">/* Nulls the buffer and sets ..._free and ..._fill. */</comment>
        <expr_stmt><expr><call><name pos:line="161" pos:column="9">wh_reset_buffer<pos:position pos:line="161" pos:column="24"/></name> <argument_list pos:line="161" pos:column="25">(<argument><expr><name pos:line="161" pos:column="26">cb<pos:position pos:line="161" pos:column="28"/></name></expr></argument>)<pos:position pos:line="161" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="163" pos:column="9">ssnprintf<pos:position pos:line="163" pos:column="18"/></name> <argument_list pos:line="163" pos:column="19">(<argument><expr><name pos:line="163" pos:column="20">callback_name<pos:position pos:line="163" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="163" pos:column="35">sizeof <argument_list pos:line="163" pos:column="42">(<argument><expr><name pos:line="163" pos:column="43">callback_name<pos:position pos:line="163" pos:column="56"/></name></expr></argument>)<pos:position pos:line="163" pos:column="57"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="59">"write_http/%s"<pos:position pos:line="163" pos:column="74"/></literal></expr></argument>,
                        <argument><expr><name><name pos:line="164" pos:column="25">cb<pos:position pos:line="164" pos:column="27"/></name><operator pos:line="164" pos:column="27">-&gt;<pos:position pos:line="164" pos:column="32"/></operator><name pos:line="164" pos:column="29">name<pos:position pos:line="164" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="164" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="165" pos:column="9">DEBUG<pos:position pos:line="165" pos:column="14"/></name> <argument_list pos:line="165" pos:column="15">(<argument><expr><literal type="string" pos:line="165" pos:column="16">"write_http: Registering write callback '%s' with URL '%s'"<pos:position pos:line="165" pos:column="75"/></literal></expr></argument>,
                        <argument><expr><name pos:line="166" pos:column="25">callback_name<pos:position pos:line="166" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="166" pos:column="40">cb<pos:position pos:line="166" pos:column="42"/></name><operator pos:line="166" pos:column="42">-&gt;<pos:position pos:line="166" pos:column="47"/></operator><name pos:line="166" pos:column="44">location<pos:position pos:line="166" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="166" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="54"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="168" pos:column="9">user_data_t<pos:position pos:line="168" pos:column="20"/></name></type> <name pos:line="168" pos:column="21">user_data<pos:position pos:line="168" pos:column="30"/></name> <init pos:line="168" pos:column="31">= <expr><block pos:line="168" pos:column="33">{
                <expr><operator pos:line="169" pos:column="17">.<pos:position pos:line="169" pos:column="18"/></operator><name pos:line="169" pos:column="18">data<pos:position pos:line="169" pos:column="22"/></name> <operator pos:line="169" pos:column="23">=<pos:position pos:line="169" pos:column="24"/></operator> <name pos:line="169" pos:column="25">cb<pos:position pos:line="169" pos:column="27"/></name></expr>,
                <expr><operator pos:line="170" pos:column="17">.<pos:position pos:line="170" pos:column="18"/></operator><name pos:line="170" pos:column="18">free_func<pos:position pos:line="170" pos:column="27"/></name> <operator pos:line="170" pos:column="28">=<pos:position pos:line="170" pos:column="29"/></operator> <name pos:line="170" pos:column="30">wh_callback_free<pos:position pos:line="170" pos:column="46"/></name></expr>,
        }<pos:position pos:line="171" pos:column="10"/></block></expr></init></decl>;<pos:position pos:line="171" pos:column="11"/></decl_stmt>

        <if pos:line="173" pos:column="9">if <condition pos:line="173" pos:column="12">(<expr><name><name pos:line="173" pos:column="13">cb<pos:position pos:line="173" pos:column="15"/></name><operator pos:line="173" pos:column="15">-&gt;<pos:position pos:line="173" pos:column="20"/></operator><name pos:line="173" pos:column="17">send_metrics<pos:position pos:line="173" pos:column="29"/></name></name></expr>)<pos:position pos:line="173" pos:column="30"/></condition><then pos:line="173" pos:column="30">
        <block pos:line="174" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="175" pos:column="17">plugin_register_write<pos:position pos:line="175" pos:column="38"/></name> <argument_list pos:line="175" pos:column="39">(<argument><expr><name pos:line="175" pos:column="40">callback_name<pos:position pos:line="175" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="175" pos:column="55">wh_write<pos:position pos:line="175" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="175" pos:column="65">&amp;<pos:position pos:line="175" pos:column="70"/></operator><name pos:line="175" pos:column="66">user_data<pos:position pos:line="175" pos:column="75"/></name></expr></argument>)<pos:position pos:line="175" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="176" pos:column="17">user_data<pos:position pos:line="176" pos:column="26"/></name><operator pos:line="176" pos:column="26">.<pos:position pos:line="176" pos:column="27"/></operator><name pos:line="176" pos:column="27">free_func<pos:position pos:line="176" pos:column="36"/></name></name> <operator pos:line="176" pos:column="37">=<pos:position pos:line="176" pos:column="38"/></operator> <name pos:line="176" pos:column="39">NULL<pos:position pos:line="176" pos:column="43"/></name></expr>;<pos:position pos:line="176" pos:column="44"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="178" pos:column="17">plugin_register_flush<pos:position pos:line="178" pos:column="38"/></name> <argument_list pos:line="178" pos:column="39">(<argument><expr><name pos:line="178" pos:column="40">callback_name<pos:position pos:line="178" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="178" pos:column="55">wh_flush<pos:position pos:line="178" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="178" pos:column="65">&amp;<pos:position pos:line="178" pos:column="70"/></operator><name pos:line="178" pos:column="66">user_data<pos:position pos:line="178" pos:column="75"/></name></expr></argument>)<pos:position pos:line="178" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="179" pos:column="10"/></block></then></if>

        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name><name pos:line="181" pos:column="13">cb<pos:position pos:line="181" pos:column="15"/></name><operator pos:line="181" pos:column="15">-&gt;<pos:position pos:line="181" pos:column="20"/></operator><name pos:line="181" pos:column="17">send_notifications<pos:position pos:line="181" pos:column="35"/></name></name></expr>)<pos:position pos:line="181" pos:column="36"/></condition><then pos:line="181" pos:column="36">
        <block pos:line="182" pos:column="9">{
                <expr_stmt><expr><call><name pos:line="183" pos:column="17">plugin_register_notification<pos:position pos:line="183" pos:column="45"/></name> <argument_list pos:line="183" pos:column="46">(<argument><expr><name pos:line="183" pos:column="47">callback_name<pos:position pos:line="183" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="183" pos:column="62">wh_notify<pos:position pos:line="183" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="183" pos:column="73">&amp;<pos:position pos:line="183" pos:column="78"/></operator><name pos:line="183" pos:column="74">user_data<pos:position pos:line="183" pos:column="83"/></name></expr></argument>)<pos:position pos:line="183" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="85"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="184" pos:column="17">user_data<pos:position pos:line="184" pos:column="26"/></name><operator pos:line="184" pos:column="26">.<pos:position pos:line="184" pos:column="27"/></operator><name pos:line="184" pos:column="27">free_func<pos:position pos:line="184" pos:column="36"/></name></name> <operator pos:line="184" pos:column="37">=<pos:position pos:line="184" pos:column="38"/></operator> <name pos:line="184" pos:column="39">NULL<pos:position pos:line="184" pos:column="43"/></name></expr>;<pos:position pos:line="184" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="185" pos:column="10"/></block></then></if>

        <return pos:line="187" pos:column="9">return <expr><operator pos:line="187" pos:column="16">(<pos:position pos:line="187" pos:column="17"/></operator><literal type="number" pos:line="187" pos:column="17">0<pos:position pos:line="187" pos:column="18"/></literal><operator pos:line="187" pos:column="18">)<pos:position pos:line="187" pos:column="19"/></operator></expr>;<pos:position pos:line="187" pos:column="20"/></return>
}<pos:position pos:line="188" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2174_collectd-5.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">plugin_log<pos:position pos:line="1" pos:column="16"/></name> <parameter_list pos:line="1" pos:column="17">(<parameter><decl><type><name pos:line="1" pos:column="18">int<pos:position pos:line="1" pos:column="21"/></name></type> <name pos:line="1" pos:column="22">level<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <specifier pos:line="1" pos:column="34">const<pos:position pos:line="1" pos:column="39"/></specifier> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">format<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="1" pos:column="49">...<pos:position pos:line="1" pos:column="52"/></modifier></type></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">buffer<pos:position pos:line="3" pos:column="14"/></name><index pos:line="3" pos:column="14">[<expr><literal type="number" pos:line="3" pos:column="15">1024<pos:position pos:line="3" pos:column="19"/></literal></expr>]<pos:position pos:line="3" pos:column="20"/></index></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">va_list<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">ap<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">va_start<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">ap<pos:position pos:line="6" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="17">format<pos:position pos:line="6" pos:column="23"/></name></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">vsnprintf<pos:position pos:line="7" pos:column="12"/></name> <argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">buffer<pos:position pos:line="7" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="22">sizeof <argument_list pos:line="7" pos:column="29">(<argument><expr><name pos:line="7" pos:column="30">buffer<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="7" pos:column="39">format<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">ap<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="8" pos:column="3">va_end<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">ap<pos:position pos:line="8" pos:column="13"/></name></expr></argument>)<pos:position pos:line="8" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">printf<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"plugin_log (%i, \"%s\");\n"<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">level<pos:position pos:line="10" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="48">buffer<pos:position pos:line="10" pos:column="54"/></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

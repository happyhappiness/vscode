<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_426_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">rrd_init<pos:position pos:line="1" pos:column="20"/></name> <parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">stepsize<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">&lt;=<pos:position pos:line="3" pos:column="27"/></operator> <literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27">
		<block type="pseudo"><expr_stmt><expr><name pos:line="4" pos:column="17">stepsize<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">=<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="28">interval_g<pos:position pos:line="4" pos:column="38"/></name></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt></block></then></if>
	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">heartbeat<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&lt;=<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
		<block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="17">heartbeat<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">=<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="29">2<pos:position pos:line="6" pos:column="30"/></literal> <operator pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="33">interval_g<pos:position pos:line="6" pos:column="43"/></name></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">heartbeat<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="25">interval_g<pos:position pos:line="8" pos:column="35"/></name></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="17">WARNING<pos:position pos:line="9" pos:column="24"/></name> <argument_list pos:line="9" pos:column="25">(<argument><expr><literal type="string" pos:line="9" pos:column="26">"rrdtool plugin: Your `heartbeat' is "<pos:position pos:line="9" pos:column="64"/></literal>
				<literal type="string" pos:line="10" pos:column="33">"smaller than your `interval'. This will "<pos:position pos:line="10" pos:column="75"/></literal>
				<literal type="string" pos:line="11" pos:column="33">"likely cause problems."<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt></block></then>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><name pos:line="12" pos:column="18">stepsize<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&lt;<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="29">interval_g<pos:position pos:line="12" pos:column="39"/></name></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="17">WARNING<pos:position pos:line="13" pos:column="24"/></name> <argument_list pos:line="13" pos:column="25">(<argument><expr><literal type="string" pos:line="13" pos:column="26">"rrdtool plugin: Your `stepsize' is "<pos:position pos:line="13" pos:column="63"/></literal>
				<literal type="string" pos:line="14" pos:column="33">"smaller than your `interval'. This will "<pos:position pos:line="14" pos:column="75"/></literal>
				<literal type="string" pos:line="15" pos:column="33">"create needlessly big RRD-files."<pos:position pos:line="15" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">pthread_mutex_lock<pos:position pos:line="17" pos:column="27"/></name> <argument_list pos:line="17" pos:column="28">(<argument><expr><operator pos:line="17" pos:column="29">&amp;<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="30">cache_lock<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
	<if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">cache_timeout<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;<pos:position pos:line="18" pos:column="31"/></operator> <literal type="number" pos:line="18" pos:column="29">2<pos:position pos:line="18" pos:column="30"/></literal></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
	<block pos:line="19" pos:column="9">{
		<expr_stmt><expr><name pos:line="20" pos:column="17">cache_timeout<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">=<pos:position pos:line="20" pos:column="32"/></operator> <literal type="number" pos:line="20" pos:column="33">0<pos:position pos:line="20" pos:column="34"/></literal></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
		<expr_stmt><expr><name pos:line="21" pos:column="17">cache_flush_timeout<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">=<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="39">0<pos:position pos:line="21" pos:column="40"/></literal></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
	}<pos:position pos:line="22" pos:column="10"/></block></then>
	<else pos:line="23" pos:column="9">else
	<block pos:line="24" pos:column="9">{
		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><name pos:line="25" pos:column="21">cache_flush_timeout<pos:position pos:line="25" pos:column="40"/></name> <operator pos:line="25" pos:column="41">&lt;<pos:position pos:line="25" pos:column="45"/></operator> <name pos:line="25" pos:column="43">cache_timeout<pos:position pos:line="25" pos:column="56"/></name></expr>)<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="25">cache_flush_timeout<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">=<pos:position pos:line="26" pos:column="46"/></operator> <literal type="number" pos:line="26" pos:column="47">10<pos:position pos:line="26" pos:column="49"/></literal> <operator pos:line="26" pos:column="50">*<pos:position pos:line="26" pos:column="51"/></operator> <name pos:line="26" pos:column="52">cache_timeout<pos:position pos:line="26" pos:column="65"/></name></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt></block></then></if>

		<expr_stmt><expr><name pos:line="28" pos:column="17">cache<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <call><name pos:line="28" pos:column="25">avl_create<pos:position pos:line="28" pos:column="35"/></name> <argument_list pos:line="28" pos:column="36">(<argument><expr><operator pos:line="28" pos:column="37">(<pos:position pos:line="28" pos:column="38"/></operator><call><call><name pos:line="28" pos:column="38">int<pos:position pos:line="28" pos:column="41"/></name> <argument_list pos:line="28" pos:column="42">(<argument><expr><operator pos:line="28" pos:column="43">*<pos:position pos:line="28" pos:column="44"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="45"/></argument_list></call> <argument_list pos:line="28" pos:column="46">(<argument><expr><specifier pos:line="28" pos:column="47">const<pos:position pos:line="28" pos:column="52"/></specifier> <name pos:line="28" pos:column="53">void<pos:position pos:line="28" pos:column="57"/></name> <operator pos:line="28" pos:column="58">*<pos:position pos:line="28" pos:column="59"/></operator></expr></argument>, <argument><expr><specifier pos:line="28" pos:column="61">const<pos:position pos:line="28" pos:column="66"/></specifier> <name pos:line="28" pos:column="67">void<pos:position pos:line="28" pos:column="71"/></name> <operator pos:line="28" pos:column="72">*<pos:position pos:line="28" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call><operator pos:line="28" pos:column="74">)<pos:position pos:line="28" pos:column="75"/></operator> <name pos:line="28" pos:column="76">strcmp<pos:position pos:line="28" pos:column="82"/></name></expr></argument>)<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="84"/></expr_stmt>
		<expr_stmt><expr><name pos:line="29" pos:column="17">cache_flush_last<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">=<pos:position pos:line="29" pos:column="35"/></operator> <call><name pos:line="29" pos:column="36">time<pos:position pos:line="29" pos:column="40"/></name> <argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">NULL<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">plugin_register_shutdown<pos:position pos:line="30" pos:column="41"/></name> <argument_list pos:line="30" pos:column="42">(<argument><expr><literal type="string" pos:line="30" pos:column="43">"rrdtool"<pos:position pos:line="30" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="54">rrd_shutdown<pos:position pos:line="30" pos:column="66"/></name></expr></argument>)<pos:position pos:line="30" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="31" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="32" pos:column="9">pthread_mutex_unlock<pos:position pos:line="32" pos:column="29"/></name> <argument_list pos:line="32" pos:column="30">(<argument><expr><operator pos:line="32" pos:column="31">&amp;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="32">cache_lock<pos:position pos:line="32" pos:column="42"/></name></expr></argument>)<pos:position pos:line="32" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="34" pos:column="9">DEBUG<pos:position pos:line="34" pos:column="14"/></name> <argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="string" pos:line="34" pos:column="16">"rrdtool plugin: rrd_init: datadir = %s; stepsize = %i;"<pos:position pos:line="34" pos:column="72"/></literal>
			<literal type="string" pos:line="35" pos:column="25">" heartbeat = %i; rrarows = %i; xff = %lf;"<pos:position pos:line="35" pos:column="68"/></literal></expr></argument>,
			<argument><expr><ternary><condition><expr><operator pos:line="36" pos:column="25">(<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">datadir<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">==<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">NULL<pos:position pos:line="36" pos:column="41"/></name><operator pos:line="36" pos:column="41">)<pos:position pos:line="36" pos:column="42"/></operator></expr> ?<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <expr><literal type="string" pos:line="36" pos:column="45">"(null)"<pos:position pos:line="36" pos:column="53"/></literal></expr> <pos:position pos:line="36" pos:column="54"/></then><else pos:line="36" pos:column="54">: <expr><name pos:line="36" pos:column="56">datadir<pos:position pos:line="36" pos:column="63"/></name></expr></else></ternary></expr></argument>,
			<argument><expr><name pos:line="37" pos:column="25">stepsize<pos:position pos:line="37" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="35">heartbeat<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="46">rrarows<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="55">xff<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="60"/></expr_stmt>

	<return pos:line="39" pos:column="9">return <expr><operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><literal type="number" pos:line="39" pos:column="17">0<pos:position pos:line="39" pos:column="18"/></literal><operator pos:line="39" pos:column="18">)<pos:position pos:line="39" pos:column="19"/></operator></expr>;<pos:position pos:line="39" pos:column="20"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

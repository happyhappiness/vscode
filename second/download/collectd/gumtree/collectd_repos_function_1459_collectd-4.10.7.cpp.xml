<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1459_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">network_config_add_listen<pos:position pos:line="1" pos:column="37"/></name> <parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">oconfig_item_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier></type><name pos:line="1" pos:column="61">ci<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list> <comment type="block" pos:line="1" pos:column="65">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">sockent_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">se<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><operator pos:line="7" pos:column="7">(<pos:position pos:line="7" pos:column="8"/></operator><name><name pos:line="7" pos:column="8">ci<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">values_num<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">&lt;<pos:position pos:line="7" pos:column="27"/></operator> <literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal><operator pos:line="7" pos:column="26">)<pos:position pos:line="7" pos:column="27"/></operator> <operator pos:line="7" pos:column="28">||<pos:position pos:line="7" pos:column="30"/></operator> <operator pos:line="7" pos:column="31">(<pos:position pos:line="7" pos:column="32"/></operator><name><name pos:line="7" pos:column="32">ci<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">values_num<pos:position pos:line="7" pos:column="46"/></name></name> <operator pos:line="7" pos:column="47">&gt;<pos:position pos:line="7" pos:column="51"/></operator> <literal type="number" pos:line="7" pos:column="49">2<pos:position pos:line="7" pos:column="50"/></literal><operator pos:line="7" pos:column="50">)<pos:position pos:line="7" pos:column="51"/></operator>
      <operator pos:line="8" pos:column="7">||<pos:position pos:line="8" pos:column="9"/></operator> <operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name><name pos:line="8" pos:column="11">ci<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">values<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">0<pos:position pos:line="8" pos:column="23"/></literal></expr>]<pos:position pos:line="8" pos:column="24"/></index></name><operator pos:line="8" pos:column="24">.<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">type<pos:position pos:line="8" pos:column="29"/></name> <operator pos:line="8" pos:column="30">!=<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="33">OCONFIG_TYPE_STRING<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator>
      <operator pos:line="9" pos:column="7">||<pos:position pos:line="9" pos:column="9"/></operator> <operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator><name><name pos:line="9" pos:column="12">ci<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">values_num<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">&gt;<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="29">1<pos:position pos:line="9" pos:column="30"/></literal><operator pos:line="9" pos:column="30">)<pos:position pos:line="9" pos:column="31"/></operator> <operator pos:line="9" pos:column="32">&amp;&amp;<pos:position pos:line="9" pos:column="42"/></operator> <operator pos:line="9" pos:column="35">(<pos:position pos:line="9" pos:column="36"/></operator><name><name pos:line="9" pos:column="36">ci<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">values<pos:position pos:line="9" pos:column="46"/></name><index pos:line="9" pos:column="46">[<expr><literal type="number" pos:line="9" pos:column="47">1<pos:position pos:line="9" pos:column="48"/></literal></expr>]<pos:position pos:line="9" pos:column="49"/></index></name><operator pos:line="9" pos:column="49">.<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">type<pos:position pos:line="9" pos:column="54"/></name> <operator pos:line="9" pos:column="55">!=<pos:position pos:line="9" pos:column="57"/></operator> <name pos:line="9" pos:column="58">OCONFIG_TYPE_STRING<pos:position pos:line="9" pos:column="77"/></name><operator pos:line="9" pos:column="77">)<pos:position pos:line="9" pos:column="78"/></operator><operator pos:line="9" pos:column="78">)<pos:position pos:line="9" pos:column="79"/></operator></expr>)<pos:position pos:line="9" pos:column="80"/></condition><then pos:line="9" pos:column="80">
  <block pos:line="10" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">ERROR<pos:position pos:line="11" pos:column="10"/></name> <argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="string" pos:line="11" pos:column="12">"network plugin: The `%s' config option needs "<pos:position pos:line="11" pos:column="59"/></literal>
        <literal type="string" pos:line="12" pos:column="9">"one or two string arguments."<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="41">ci<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">key<pos:position pos:line="12" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal><operator pos:line="13" pos:column="15">)<pos:position pos:line="13" pos:column="16"/></operator></expr>;<pos:position pos:line="13" pos:column="17"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">se<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <call><name pos:line="16" pos:column="8">malloc<pos:position pos:line="16" pos:column="14"/></name> <argument_list pos:line="16" pos:column="15">(<argument><expr><sizeof pos:line="16" pos:column="16">sizeof <argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">*<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">se<pos:position pos:line="16" pos:column="27"/></name></expr></argument>)<pos:position pos:line="16" pos:column="28"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">se<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">==<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name> <argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="string" pos:line="19" pos:column="12">"network plugin: malloc failed."<pos:position pos:line="19" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="46"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">sockent_init<pos:position pos:line="22" pos:column="15"/></name> <argument_list pos:line="22" pos:column="16">(<argument><expr><name pos:line="22" pos:column="17">se<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="21">SOCKENT_TYPE_SERVER<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="24" pos:column="3">se<pos:position pos:line="24" pos:column="5"/></name><operator pos:line="24" pos:column="5">-&gt;<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="7">node<pos:position pos:line="24" pos:column="11"/></name></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">strdup<pos:position pos:line="24" pos:column="20"/></name> <argument_list pos:line="24" pos:column="21">(<argument><expr><name><name pos:line="24" pos:column="22">ci<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">values<pos:position pos:line="24" pos:column="32"/></name><index pos:line="24" pos:column="32">[<expr><literal type="number" pos:line="24" pos:column="33">0<pos:position pos:line="24" pos:column="34"/></literal></expr>]<pos:position pos:line="24" pos:column="35"/></index></name><operator pos:line="24" pos:column="35">.<pos:position pos:line="24" pos:column="36"/></operator><name><name pos:line="24" pos:column="36">value<pos:position pos:line="24" pos:column="41"/></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">string<pos:position pos:line="24" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name><name pos:line="25" pos:column="7">ci<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">values_num<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">&gt;=<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="25">2<pos:position pos:line="25" pos:column="26"/></literal></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="5">se<pos:position pos:line="26" pos:column="7"/></name><operator pos:line="26" pos:column="7">-&gt;<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="9">service<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">strdup<pos:position pos:line="26" pos:column="25"/></name> <argument_list pos:line="26" pos:column="26">(<argument><expr><name><name pos:line="26" pos:column="27">ci<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">values<pos:position pos:line="26" pos:column="37"/></name><index pos:line="26" pos:column="37">[<expr><literal type="number" pos:line="26" pos:column="38">1<pos:position pos:line="26" pos:column="39"/></literal></expr>]<pos:position pos:line="26" pos:column="40"/></index></name><operator pos:line="26" pos:column="40">.<pos:position pos:line="26" pos:column="41"/></operator><name><name pos:line="26" pos:column="41">value<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">.<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">string<pos:position pos:line="26" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="55"/></expr_stmt></block></then></if>

  <for pos:line="28" pos:column="3">for <control pos:line="28" pos:column="7">(<init><expr><name pos:line="28" pos:column="8">i<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">=<pos:position pos:line="28" pos:column="11"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>;<pos:position pos:line="28" pos:column="14"/></init> <condition><expr><name pos:line="28" pos:column="15">i<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">&lt;<pos:position pos:line="28" pos:column="21"/></operator> <name><name pos:line="28" pos:column="19">ci<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">-&gt;<pos:position pos:line="28" pos:column="26"/></operator><name pos:line="28" pos:column="23">children_num<pos:position pos:line="28" pos:column="35"/></name></name></expr>;<pos:position pos:line="28" pos:column="36"/></condition> <incr><expr><name pos:line="28" pos:column="37">i<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">++<pos:position pos:line="28" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="28" pos:column="41"/></control>
  <block pos:line="29" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">oconfig_item_t<pos:position pos:line="30" pos:column="19"/></name> <modifier pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></modifier></type><name pos:line="30" pos:column="21">child<pos:position pos:line="30" pos:column="26"/></name> <init pos:line="30" pos:column="27">= <expr><name><name pos:line="30" pos:column="29">ci<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">children<pos:position pos:line="30" pos:column="41"/></name></name> <operator pos:line="30" pos:column="42">+<pos:position pos:line="30" pos:column="43"/></operator> <name pos:line="30" pos:column="44">i<pos:position pos:line="30" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="46"/></decl_stmt>

<cpp:if pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">if<pos:position pos:line="32" pos:column="4"/></cpp:directive> <expr><name pos:line="32" pos:column="5">HAVE_LIBGCRYPT<pos:position pos:line="32" pos:column="19"/></name></expr></cpp:if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">strcasecmp<pos:position pos:line="33" pos:column="19"/></name> <argument_list pos:line="33" pos:column="20">(<argument><expr><literal type="string" pos:line="33" pos:column="21">"AuthFile"<pos:position pos:line="33" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="33">child<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">-&gt;<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="40">key<pos:position pos:line="33" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="44"/></argument_list></call> <operator pos:line="33" pos:column="45">==<pos:position pos:line="33" pos:column="47"/></operator> <literal type="number" pos:line="33" pos:column="48">0<pos:position pos:line="33" pos:column="49"/></literal></expr>)<pos:position pos:line="33" pos:column="50"/></condition><then pos:line="33" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="7">network_config_set_string<pos:position pos:line="34" pos:column="32"/></name> <argument_list pos:line="34" pos:column="33">(<argument><expr><name pos:line="34" pos:column="34">child<pos:position pos:line="34" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="41">&amp;<pos:position pos:line="34" pos:column="46"/></operator><name><name pos:line="34" pos:column="42">se<pos:position pos:line="34" pos:column="44"/></name><operator pos:line="34" pos:column="44">-&gt;<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="46">data<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">.<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="51">server<pos:position pos:line="34" pos:column="57"/></name><operator pos:line="34" pos:column="57">.<pos:position pos:line="34" pos:column="58"/></operator><name pos:line="34" pos:column="58">auth_file<pos:position pos:line="34" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="69"/></expr_stmt></block></then>
    <elseif pos:line="35" pos:column="5">else <if pos:line="35" pos:column="10">if <condition pos:line="35" pos:column="13">(<expr><call><name pos:line="35" pos:column="14">strcasecmp<pos:position pos:line="35" pos:column="24"/></name> <argument_list pos:line="35" pos:column="25">(<argument><expr><literal type="string" pos:line="35" pos:column="26">"SecurityLevel"<pos:position pos:line="35" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="43">child<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">-&gt;<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="50">key<pos:position pos:line="35" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="54"/></argument_list></call> <operator pos:line="35" pos:column="55">==<pos:position pos:line="35" pos:column="57"/></operator> <literal type="number" pos:line="35" pos:column="58">0<pos:position pos:line="35" pos:column="59"/></literal></expr>)<pos:position pos:line="35" pos:column="60"/></condition><then pos:line="35" pos:column="60">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="7">network_config_set_security_level<pos:position pos:line="36" pos:column="40"/></name> <argument_list pos:line="36" pos:column="41">(<argument><expr><name pos:line="36" pos:column="42">child<pos:position pos:line="36" pos:column="47"/></name></expr></argument>,
          <argument><expr><operator pos:line="37" pos:column="11">&amp;<pos:position pos:line="37" pos:column="16"/></operator><name><name pos:line="37" pos:column="12">se<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">data<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">server<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">.<pos:position pos:line="37" pos:column="28"/></operator><name pos:line="37" pos:column="28">security_level<pos:position pos:line="37" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="44"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="38" pos:column="5">else
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="39" pos:column="8">/* HAVE_LIBGCRYPT */</comment>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">strcasecmp<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><literal type="string" pos:line="40" pos:column="21">"Interface"<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="34">child<pos:position pos:line="40" pos:column="39"/></name><operator pos:line="40" pos:column="39">-&gt;<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="41">key<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call> <operator pos:line="40" pos:column="46">==<pos:position pos:line="40" pos:column="48"/></operator> <literal type="number" pos:line="40" pos:column="49">0<pos:position pos:line="40" pos:column="50"/></literal></expr>)<pos:position pos:line="40" pos:column="51"/></condition><then pos:line="40" pos:column="51">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="7">network_config_set_interface<pos:position pos:line="41" pos:column="35"/></name> <argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">child<pos:position pos:line="41" pos:column="42"/></name></expr></argument>,
          <argument><expr><operator pos:line="42" pos:column="11">&amp;<pos:position pos:line="42" pos:column="16"/></operator><name><name pos:line="42" pos:column="12">se<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">-&gt;<pos:position pos:line="42" pos:column="19"/></operator><name pos:line="42" pos:column="16">interface<pos:position pos:line="42" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="27"/></expr_stmt></block></then></if></elseif>
    <else pos:line="43" pos:column="5">else
    <block pos:line="44" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">WARNING<pos:position pos:line="45" pos:column="14"/></name> <argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="string" pos:line="45" pos:column="16">"network plugin: Option `%s' is not allowed here."<pos:position pos:line="45" pos:column="66"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="46" pos:column="11">child<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">key<pos:position pos:line="46" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>
  }<pos:position pos:line="48" pos:column="4"/></block></for>

<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><name pos:line="50" pos:column="5">HAVE_LIBGCRYPT<pos:position pos:line="50" pos:column="19"/></name></expr></cpp:if>
  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><operator pos:line="51" pos:column="7">(<pos:position pos:line="51" pos:column="8"/></operator><name><name pos:line="51" pos:column="8">se<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">data<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">.<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="17">server<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">.<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">security_level<pos:position pos:line="51" pos:column="38"/></name></name> <operator pos:line="51" pos:column="39">&gt;<pos:position pos:line="51" pos:column="43"/></operator> <name pos:line="51" pos:column="41">SECURITY_LEVEL_NONE<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">)<pos:position pos:line="51" pos:column="61"/></operator>
      <operator pos:line="52" pos:column="7">&amp;&amp;<pos:position pos:line="52" pos:column="17"/></operator> <operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><name><name pos:line="52" pos:column="11">se<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">data<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">server<pos:position pos:line="52" pos:column="26"/></name><operator pos:line="52" pos:column="26">.<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">auth_file<pos:position pos:line="52" pos:column="36"/></name></name> <operator pos:line="52" pos:column="37">==<pos:position pos:line="52" pos:column="39"/></operator> <name pos:line="52" pos:column="40">NULL<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">)<pos:position pos:line="52" pos:column="45"/></operator></expr>)<pos:position pos:line="52" pos:column="46"/></condition><then pos:line="52" pos:column="46">
  <block pos:line="53" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ERROR<pos:position pos:line="54" pos:column="10"/></name> <argument_list pos:line="54" pos:column="11">(<argument><expr><literal type="string" pos:line="54" pos:column="12">"network plugin: A security level higher than `none' was "<pos:position pos:line="54" pos:column="70"/></literal>
        <literal type="string" pos:line="55" pos:column="9">"requested, but no AuthFile option was given. Cowardly refusing to "<pos:position pos:line="55" pos:column="77"/></literal>
        <literal type="string" pos:line="56" pos:column="9">"open this socket!"<pos:position pos:line="56" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">sockent_destroy<pos:position pos:line="57" pos:column="20"/></name> <argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">se<pos:position pos:line="57" pos:column="24"/></name></expr></argument>)<pos:position pos:line="57" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="26"/></expr_stmt>
    <return pos:line="58" pos:column="5">return <expr><operator pos:line="58" pos:column="12">(<pos:position pos:line="58" pos:column="13"/></operator><operator pos:line="58" pos:column="13">-<pos:position pos:line="58" pos:column="14"/></operator><literal type="number" pos:line="58" pos:column="14">1<pos:position pos:line="58" pos:column="15"/></literal><operator pos:line="58" pos:column="15">)<pos:position pos:line="58" pos:column="16"/></operator></expr>;<pos:position pos:line="58" pos:column="17"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="60" pos:column="8">/* HAVE_LIBGCRYPT */</comment>

  <expr_stmt><expr><name pos:line="62" pos:column="3">status<pos:position pos:line="62" pos:column="9"/></name> <operator pos:line="62" pos:column="10">=<pos:position pos:line="62" pos:column="11"/></operator> <call><name pos:line="62" pos:column="12">sockent_open<pos:position pos:line="62" pos:column="24"/></name> <argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">se<pos:position pos:line="62" pos:column="28"/></name></expr></argument>)<pos:position pos:line="62" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name pos:line="63" pos:column="7">status<pos:position pos:line="63" pos:column="13"/></name> <operator pos:line="63" pos:column="14">!=<pos:position pos:line="63" pos:column="16"/></operator> <literal type="number" pos:line="63" pos:column="17">0<pos:position pos:line="63" pos:column="18"/></literal></expr>)<pos:position pos:line="63" pos:column="19"/></condition><then pos:line="63" pos:column="19">
  <block pos:line="64" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">ERROR<pos:position pos:line="65" pos:column="10"/></name> <argument_list pos:line="65" pos:column="11">(<argument><expr><literal type="string" pos:line="65" pos:column="12">"network plugin: network_config_add_listen: sockent_open failed."<pos:position pos:line="65" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">sockent_destroy<pos:position pos:line="66" pos:column="20"/></name> <argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">se<pos:position pos:line="66" pos:column="24"/></name></expr></argument>)<pos:position pos:line="66" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><operator pos:line="67" pos:column="12">(<pos:position pos:line="67" pos:column="13"/></operator><operator pos:line="67" pos:column="13">-<pos:position pos:line="67" pos:column="14"/></operator><literal type="number" pos:line="67" pos:column="14">1<pos:position pos:line="67" pos:column="15"/></literal><operator pos:line="67" pos:column="15">)<pos:position pos:line="67" pos:column="16"/></operator></expr>;<pos:position pos:line="67" pos:column="17"/></return>
  }<pos:position pos:line="68" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="70" pos:column="3">status<pos:position pos:line="70" pos:column="9"/></name> <operator pos:line="70" pos:column="10">=<pos:position pos:line="70" pos:column="11"/></operator> <call><name pos:line="70" pos:column="12">sockent_add<pos:position pos:line="70" pos:column="23"/></name> <argument_list pos:line="70" pos:column="24">(<argument><expr><name pos:line="70" pos:column="25">se<pos:position pos:line="70" pos:column="27"/></name></expr></argument>)<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
  <if pos:line="71" pos:column="3">if <condition pos:line="71" pos:column="6">(<expr><name pos:line="71" pos:column="7">status<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">!=<pos:position pos:line="71" pos:column="16"/></operator> <literal type="number" pos:line="71" pos:column="17">0<pos:position pos:line="71" pos:column="18"/></literal></expr>)<pos:position pos:line="71" pos:column="19"/></condition><then pos:line="71" pos:column="19">
  <block pos:line="72" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">ERROR<pos:position pos:line="73" pos:column="10"/></name> <argument_list pos:line="73" pos:column="11">(<argument><expr><literal type="string" pos:line="73" pos:column="12">"network plugin: network_config_add_listen: sockent_add failed."<pos:position pos:line="73" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="74" pos:column="5">sockent_destroy<pos:position pos:line="74" pos:column="20"/></name> <argument_list pos:line="74" pos:column="21">(<argument><expr><name pos:line="74" pos:column="22">se<pos:position pos:line="74" pos:column="24"/></name></expr></argument>)<pos:position pos:line="74" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="26"/></expr_stmt>
    <return pos:line="75" pos:column="5">return <expr><operator pos:line="75" pos:column="12">(<pos:position pos:line="75" pos:column="13"/></operator><operator pos:line="75" pos:column="13">-<pos:position pos:line="75" pos:column="14"/></operator><literal type="number" pos:line="75" pos:column="14">1<pos:position pos:line="75" pos:column="15"/></literal><operator pos:line="75" pos:column="15">)<pos:position pos:line="75" pos:column="16"/></operator></expr>;<pos:position pos:line="75" pos:column="17"/></return>
  }<pos:position pos:line="76" pos:column="4"/></block></then></if>

  <return pos:line="78" pos:column="3">return <expr><operator pos:line="78" pos:column="10">(<pos:position pos:line="78" pos:column="11"/></operator><literal type="number" pos:line="78" pos:column="11">0<pos:position pos:line="78" pos:column="12"/></literal><operator pos:line="78" pos:column="12">)<pos:position pos:line="78" pos:column="13"/></operator></expr>;<pos:position pos:line="78" pos:column="14"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

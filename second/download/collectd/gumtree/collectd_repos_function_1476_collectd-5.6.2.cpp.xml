<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1476_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">uptime_init<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="29"/></parameter_list> <comment type="block" pos:line="1" pos:column="30">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
<comment type="block" pos:line="3" pos:column="1">/*
 * On most unix systems the uptime is calculated by looking at the boot
 * time (stored in unix time, since epoch) and the current one. We are
 * going to do the same, reading the boot time value while executing
 * the uptime_init function (there is no need to read, every time the
 * plugin_read is called, a value that won't change). However, since
 * uptime_init is run only once, if the function fails in retrieving
 * the boot time, the plugin is unregistered and there is no chance to
 * try again later. Nevertheless, this is very unlikely to happen.
 */</comment>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">KERNEL_LINUX<pos:position pos:line="14" pos:column="17"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">unsigned<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">long<pos:position pos:line="15" pos:column="16"/></name></type> <name pos:line="15" pos:column="17">starttime<pos:position pos:line="15" pos:column="26"/></name></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name></type> <name><name pos:line="16" pos:column="8">buffer<pos:position pos:line="16" pos:column="14"/></name><index pos:line="16" pos:column="14">[<expr><literal type="number" pos:line="16" pos:column="15">1024<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">ret<pos:position pos:line="17" pos:column="10"/></name></decl>;<pos:position pos:line="17" pos:column="11"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="18" pos:column="3">FILE<pos:position pos:line="18" pos:column="7"/></name> <modifier pos:line="18" pos:column="8">*<pos:position pos:line="18" pos:column="9"/></modifier></type><name pos:line="18" pos:column="9">fh<pos:position pos:line="18" pos:column="11"/></name></decl>;<pos:position pos:line="18" pos:column="12"/></decl_stmt>

  <expr_stmt><expr><name pos:line="20" pos:column="3">ret<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <literal type="number" pos:line="20" pos:column="9">0<pos:position pos:line="20" pos:column="10"/></literal></expr>;<pos:position pos:line="20" pos:column="11"/></expr_stmt>

  <expr_stmt><expr><name pos:line="22" pos:column="3">fh<pos:position pos:line="22" pos:column="5"/></name> <operator pos:line="22" pos:column="6">=<pos:position pos:line="22" pos:column="7"/></operator> <call><name pos:line="22" pos:column="8">fopen<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">STAT_FILE<pos:position pos:line="22" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">"r"<pos:position pos:line="22" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">fh<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">==<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">NULL<pos:position pos:line="24" pos:column="17"/></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18"> <block pos:line="24" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name></type> <name><name pos:line="25" pos:column="10">errbuf<pos:position pos:line="25" pos:column="16"/></name><index pos:line="25" pos:column="16">[<expr><literal type="number" pos:line="25" pos:column="17">1024<pos:position pos:line="25" pos:column="21"/></literal></expr>]<pos:position pos:line="25" pos:column="22"/></index></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ERROR<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"uptime plugin: Cannot open "<pos:position pos:line="26" pos:column="40"/></literal> <name pos:line="26" pos:column="41">STAT_FILE<pos:position pos:line="26" pos:column="50"/></name> <literal type="string" pos:line="26" pos:column="51">": %s"<pos:position pos:line="26" pos:column="57"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="27" pos:column="11">sstrerror<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">errno<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="28">errbuf<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="36">sizeof<argument_list pos:line="27" pos:column="42">(<argument><expr><name pos:line="27" pos:column="43">errbuf<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt>
    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><operator pos:line="28" pos:column="13">-<pos:position pos:line="28" pos:column="14"/></operator><literal type="number" pos:line="28" pos:column="14">1<pos:position pos:line="28" pos:column="15"/></literal><operator pos:line="28" pos:column="15">)<pos:position pos:line="28" pos:column="16"/></operator></expr>;<pos:position pos:line="28" pos:column="17"/></return>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <while pos:line="31" pos:column="3">while <condition pos:line="31" pos:column="9">(<expr><call><name pos:line="31" pos:column="10">fgets<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><name pos:line="31" pos:column="16">buffer<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="24">1024<pos:position pos:line="31" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="30">fh<pos:position pos:line="31" pos:column="32"/></name></expr></argument>)<pos:position pos:line="31" pos:column="33"/></argument_list></call> <operator pos:line="31" pos:column="34">!=<pos:position pos:line="31" pos:column="36"/></operator> <name pos:line="31" pos:column="37">NULL<pos:position pos:line="31" pos:column="41"/></name></expr>)<pos:position pos:line="31" pos:column="42"/></condition> <block pos:line="31" pos:column="43">{
    <comment type="block" pos:line="32" pos:column="5">/* look for the btime string and read the value */</comment>
    <expr_stmt><expr><name pos:line="33" pos:column="5">ret<pos:position pos:line="33" pos:column="8"/></name> <operator pos:line="33" pos:column="9">=<pos:position pos:line="33" pos:column="10"/></operator> <call><name pos:line="33" pos:column="11">sscanf<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><name pos:line="33" pos:column="18">buffer<pos:position pos:line="33" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="26">"btime %lu"<pos:position pos:line="33" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="39">&amp;<pos:position pos:line="33" pos:column="44"/></operator><name pos:line="33" pos:column="40">starttime<pos:position pos:line="33" pos:column="49"/></name></expr></argument>)<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="51"/></expr_stmt>
    <comment type="block" pos:line="34" pos:column="5">/* avoid further loops if btime has been found and read
     * correctly (hopefully) */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">ret<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">==<pos:position pos:line="36" pos:column="15"/></operator> <literal type="number" pos:line="36" pos:column="16">1<pos:position pos:line="36" pos:column="17"/></literal></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18">
      <block type="pseudo"><break pos:line="37" pos:column="7">break;<pos:position pos:line="37" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">fclose<pos:position pos:line="40" pos:column="9"/></name><argument_list pos:line="40" pos:column="9">(<argument><expr><name pos:line="40" pos:column="10">fh<pos:position pos:line="40" pos:column="12"/></name></expr></argument>)<pos:position pos:line="40" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="14"/></expr_stmt>

  <comment type="block" pos:line="42" pos:column="3">/* loop done, check if no value has been found/read */</comment>
  <if pos:line="43" pos:column="3">if <condition pos:line="43" pos:column="6">(<expr><name pos:line="43" pos:column="7">ret<pos:position pos:line="43" pos:column="10"/></name> <operator pos:line="43" pos:column="11">!=<pos:position pos:line="43" pos:column="13"/></operator> <literal type="number" pos:line="43" pos:column="14">1<pos:position pos:line="43" pos:column="15"/></literal></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16"> <block pos:line="43" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ERROR<pos:position pos:line="44" pos:column="10"/></name><argument_list pos:line="44" pos:column="10">(<argument><expr><literal type="string" pos:line="44" pos:column="11">"uptime plugin: No value read from "<pos:position pos:line="44" pos:column="47"/></literal> <name pos:line="44" pos:column="48">STAT_FILE<pos:position pos:line="44" pos:column="57"/></name> <literal type="string" pos:line="44" pos:column="58">""<pos:position pos:line="44" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
    <return pos:line="45" pos:column="5">return <expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><operator pos:line="45" pos:column="13">-<pos:position pos:line="45" pos:column="14"/></operator><literal type="number" pos:line="45" pos:column="14">1<pos:position pos:line="45" pos:column="15"/></literal><operator pos:line="45" pos:column="15">)<pos:position pos:line="45" pos:column="16"/></operator></expr>;<pos:position pos:line="45" pos:column="17"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="48" pos:column="3">boottime<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <operator pos:line="48" pos:column="14">(<pos:position pos:line="48" pos:column="15"/></operator><name pos:line="48" pos:column="15">time_t<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">)<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">starttime<pos:position pos:line="48" pos:column="31"/></name></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name pos:line="50" pos:column="7">boottime<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">==<pos:position pos:line="50" pos:column="18"/></operator> <literal type="number" pos:line="50" pos:column="19">0<pos:position pos:line="50" pos:column="20"/></literal></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21"> <block pos:line="50" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ERROR<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><literal type="string" pos:line="51" pos:column="11">"uptime plugin: btime read from "<pos:position pos:line="51" pos:column="44"/></literal> <name pos:line="51" pos:column="45">STAT_FILE<pos:position pos:line="51" pos:column="54"/></name> <literal type="string" pos:line="51" pos:column="55">", "<pos:position pos:line="51" pos:column="59"/></literal>
          <literal type="string" pos:line="52" pos:column="11">"but `boottime' is zero!"<pos:position pos:line="52" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="38"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><operator pos:line="53" pos:column="12">(<pos:position pos:line="53" pos:column="13"/></operator><operator pos:line="53" pos:column="13">-<pos:position pos:line="53" pos:column="14"/></operator><literal type="number" pos:line="53" pos:column="14">1<pos:position pos:line="53" pos:column="15"/></literal><operator pos:line="53" pos:column="15">)<pos:position pos:line="53" pos:column="16"/></operator></expr>;<pos:position pos:line="53" pos:column="17"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>
<comment type="block" pos:line="55" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">elif<pos:position pos:line="57" pos:column="6"/></cpp:directive> <expr><name pos:line="57" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="57" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="58" pos:column="3">kstat_t<pos:position pos:line="58" pos:column="10"/></name> <modifier pos:line="58" pos:column="11">*<pos:position pos:line="58" pos:column="12"/></modifier></type><name pos:line="58" pos:column="12">ksp<pos:position pos:line="58" pos:column="15"/></name></decl>;<pos:position pos:line="58" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="59" pos:column="3">kstat_named_t<pos:position pos:line="59" pos:column="16"/></name> <modifier pos:line="59" pos:column="17">*<pos:position pos:line="59" pos:column="18"/></modifier></type><name pos:line="59" pos:column="18">knp<pos:position pos:line="59" pos:column="21"/></name></decl>;<pos:position pos:line="59" pos:column="22"/></decl_stmt>

  <expr_stmt><expr><name pos:line="61" pos:column="3">ksp<pos:position pos:line="61" pos:column="6"/></name> <operator pos:line="61" pos:column="7">=<pos:position pos:line="61" pos:column="8"/></operator> <name pos:line="61" pos:column="9">NULL<pos:position pos:line="61" pos:column="13"/></name></expr>;<pos:position pos:line="61" pos:column="14"/></expr_stmt>
  <expr_stmt><expr><name pos:line="62" pos:column="3">knp<pos:position pos:line="62" pos:column="6"/></name> <operator pos:line="62" pos:column="7">=<pos:position pos:line="62" pos:column="8"/></operator> <name pos:line="62" pos:column="9">NULL<pos:position pos:line="62" pos:column="13"/></name></expr>;<pos:position pos:line="62" pos:column="14"/></expr_stmt>

  <comment type="block" pos:line="64" pos:column="3">/* kstats chain already opened by update_kstat (using *kc), verify everything
   * went fine. */</comment>
  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name pos:line="66" pos:column="7">kc<pos:position pos:line="66" pos:column="9"/></name> <operator pos:line="66" pos:column="10">==<pos:position pos:line="66" pos:column="12"/></operator> <name pos:line="66" pos:column="13">NULL<pos:position pos:line="66" pos:column="17"/></name></expr>)<pos:position pos:line="66" pos:column="18"/></condition><then pos:line="66" pos:column="18"> <block pos:line="66" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ERROR<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><literal type="string" pos:line="67" pos:column="11">"uptime plugin: kstat chain control structure not available."<pos:position pos:line="67" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="74"/></expr_stmt>
    <return pos:line="68" pos:column="5">return <expr><operator pos:line="68" pos:column="12">(<pos:position pos:line="68" pos:column="13"/></operator><operator pos:line="68" pos:column="13">-<pos:position pos:line="68" pos:column="14"/></operator><literal type="number" pos:line="68" pos:column="14">1<pos:position pos:line="68" pos:column="15"/></literal><operator pos:line="68" pos:column="15">)<pos:position pos:line="68" pos:column="16"/></operator></expr>;<pos:position pos:line="68" pos:column="17"/></return>
  }<pos:position pos:line="69" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="71" pos:column="3">ksp<pos:position pos:line="71" pos:column="6"/></name> <operator pos:line="71" pos:column="7">=<pos:position pos:line="71" pos:column="8"/></operator> <call><name pos:line="71" pos:column="9">kstat_lookup<pos:position pos:line="71" pos:column="21"/></name><argument_list pos:line="71" pos:column="21">(<argument><expr><name pos:line="71" pos:column="22">kc<pos:position pos:line="71" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="26">"unix"<pos:position pos:line="71" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="34">0<pos:position pos:line="71" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="37">"system_misc"<pos:position pos:line="71" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="52"/></expr_stmt>
  <if pos:line="72" pos:column="3">if <condition pos:line="72" pos:column="6">(<expr><name pos:line="72" pos:column="7">ksp<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">==<pos:position pos:line="72" pos:column="13"/></operator> <name pos:line="72" pos:column="14">NULL<pos:position pos:line="72" pos:column="18"/></name></expr>)<pos:position pos:line="72" pos:column="19"/></condition><then pos:line="72" pos:column="19"> <block pos:line="72" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="73" pos:column="5">ERROR<pos:position pos:line="73" pos:column="10"/></name><argument_list pos:line="73" pos:column="10">(<argument><expr><literal type="string" pos:line="73" pos:column="11">"uptime plugin: Cannot find unix:0:system_misc kstat."<pos:position pos:line="73" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="67"/></expr_stmt>
    <return pos:line="74" pos:column="5">return <expr><operator pos:line="74" pos:column="12">(<pos:position pos:line="74" pos:column="13"/></operator><operator pos:line="74" pos:column="13">-<pos:position pos:line="74" pos:column="14"/></operator><literal type="number" pos:line="74" pos:column="14">1<pos:position pos:line="74" pos:column="15"/></literal><operator pos:line="74" pos:column="15">)<pos:position pos:line="74" pos:column="16"/></operator></expr>;<pos:position pos:line="74" pos:column="17"/></return>
  }<pos:position pos:line="75" pos:column="4"/></block></then></if>

  <if pos:line="77" pos:column="3">if <condition pos:line="77" pos:column="6">(<expr><call><name pos:line="77" pos:column="7">kstat_read<pos:position pos:line="77" pos:column="17"/></name><argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">kc<pos:position pos:line="77" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="22">ksp<pos:position pos:line="77" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="27">NULL<pos:position pos:line="77" pos:column="31"/></name></expr></argument>)<pos:position pos:line="77" pos:column="32"/></argument_list></call> <operator pos:line="77" pos:column="33">&lt;<pos:position pos:line="77" pos:column="37"/></operator> <literal type="number" pos:line="77" pos:column="35">0<pos:position pos:line="77" pos:column="36"/></literal></expr>)<pos:position pos:line="77" pos:column="37"/></condition><then pos:line="77" pos:column="37"> <block pos:line="77" pos:column="38">{
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">ERROR<pos:position pos:line="78" pos:column="10"/></name><argument_list pos:line="78" pos:column="10">(<argument><expr><literal type="string" pos:line="78" pos:column="11">"uptime plugin: kstat_read failed."<pos:position pos:line="78" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="48"/></expr_stmt>
    <return pos:line="79" pos:column="5">return <expr><operator pos:line="79" pos:column="12">(<pos:position pos:line="79" pos:column="13"/></operator><operator pos:line="79" pos:column="13">-<pos:position pos:line="79" pos:column="14"/></operator><literal type="number" pos:line="79" pos:column="14">1<pos:position pos:line="79" pos:column="15"/></literal><operator pos:line="79" pos:column="15">)<pos:position pos:line="79" pos:column="16"/></operator></expr>;<pos:position pos:line="79" pos:column="17"/></return>
  }<pos:position pos:line="80" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="82" pos:column="3">knp<pos:position pos:line="82" pos:column="6"/></name> <operator pos:line="82" pos:column="7">=<pos:position pos:line="82" pos:column="8"/></operator> <operator pos:line="82" pos:column="9">(<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">kstat_named_t<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">*<pos:position pos:line="82" pos:column="25"/></operator><operator pos:line="82" pos:column="25">)<pos:position pos:line="82" pos:column="26"/></operator><call><name pos:line="82" pos:column="26">kstat_data_lookup<pos:position pos:line="82" pos:column="43"/></name><argument_list pos:line="82" pos:column="43">(<argument><expr><name pos:line="82" pos:column="44">ksp<pos:position pos:line="82" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="49">"boot_time"<pos:position pos:line="82" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="62"/></expr_stmt>
  <if pos:line="83" pos:column="3">if <condition pos:line="83" pos:column="6">(<expr><name pos:line="83" pos:column="7">knp<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">==<pos:position pos:line="83" pos:column="13"/></operator> <name pos:line="83" pos:column="14">NULL<pos:position pos:line="83" pos:column="18"/></name></expr>)<pos:position pos:line="83" pos:column="19"/></condition><then pos:line="83" pos:column="19"> <block pos:line="83" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">ERROR<pos:position pos:line="84" pos:column="10"/></name><argument_list pos:line="84" pos:column="10">(<argument><expr><literal type="string" pos:line="84" pos:column="11">"uptime plugin: kstat_data_lookup (boot_time) failed."<pos:position pos:line="84" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="67"/></expr_stmt>
    <return pos:line="85" pos:column="5">return <expr><operator pos:line="85" pos:column="12">(<pos:position pos:line="85" pos:column="13"/></operator><operator pos:line="85" pos:column="13">-<pos:position pos:line="85" pos:column="14"/></operator><literal type="number" pos:line="85" pos:column="14">1<pos:position pos:line="85" pos:column="15"/></literal><operator pos:line="85" pos:column="15">)<pos:position pos:line="85" pos:column="16"/></operator></expr>;<pos:position pos:line="85" pos:column="17"/></return>
  }<pos:position pos:line="86" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="88" pos:column="3">boottime<pos:position pos:line="88" pos:column="11"/></name> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <operator pos:line="88" pos:column="14">(<pos:position pos:line="88" pos:column="15"/></operator><name pos:line="88" pos:column="15">time_t<pos:position pos:line="88" pos:column="21"/></name><operator pos:line="88" pos:column="21">)<pos:position pos:line="88" pos:column="22"/></operator><name><name pos:line="88" pos:column="22">knp<pos:position pos:line="88" pos:column="25"/></name><operator pos:line="88" pos:column="25">-&gt;<pos:position pos:line="88" pos:column="30"/></operator><name pos:line="88" pos:column="27">value<pos:position pos:line="88" pos:column="32"/></name><operator pos:line="88" pos:column="32">.<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="33">ui32<pos:position pos:line="88" pos:column="37"/></name></name></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>

  <if pos:line="90" pos:column="3">if <condition pos:line="90" pos:column="6">(<expr><name pos:line="90" pos:column="7">boottime<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">==<pos:position pos:line="90" pos:column="18"/></operator> <literal type="number" pos:line="90" pos:column="19">0<pos:position pos:line="90" pos:column="20"/></literal></expr>)<pos:position pos:line="90" pos:column="21"/></condition><then pos:line="90" pos:column="21"> <block pos:line="90" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">ERROR<pos:position pos:line="91" pos:column="10"/></name><argument_list pos:line="91" pos:column="10">(<argument><expr><literal type="string" pos:line="91" pos:column="11">"uptime plugin: kstat_data_lookup returned success, "<pos:position pos:line="91" pos:column="64"/></literal>
          <literal type="string" pos:line="92" pos:column="11">"but `boottime' is zero!"<pos:position pos:line="92" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>
    <return pos:line="93" pos:column="5">return <expr><operator pos:line="93" pos:column="12">(<pos:position pos:line="93" pos:column="13"/></operator><operator pos:line="93" pos:column="13">-<pos:position pos:line="93" pos:column="14"/></operator><literal type="number" pos:line="93" pos:column="14">1<pos:position pos:line="93" pos:column="15"/></literal><operator pos:line="93" pos:column="15">)<pos:position pos:line="93" pos:column="16"/></operator></expr>;<pos:position pos:line="93" pos:column="17"/></return>
  }<pos:position pos:line="94" pos:column="4"/></block></then></if>
<comment type="block" pos:line="95" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">elif<pos:position pos:line="97" pos:column="6"/></cpp:directive> <expr><name pos:line="97" pos:column="7">HAVE_SYS_SYSCTL_H<pos:position pos:line="97" pos:column="24"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name><name pos:line="98" pos:column="3">struct<pos:position pos:line="98" pos:column="9"/></name> <name pos:line="98" pos:column="10">timeval<pos:position pos:line="98" pos:column="17"/></name></name></type> <name pos:line="98" pos:column="18">boottv<pos:position pos:line="98" pos:column="24"/></name> <init pos:line="98" pos:column="25">= <expr><block pos:line="98" pos:column="27">{<expr><literal type="number" pos:line="98" pos:column="28">0<pos:position pos:line="98" pos:column="29"/></literal></expr>}<pos:position pos:line="98" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="98" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="99" pos:column="3">size_t<pos:position pos:line="99" pos:column="9"/></name></type> <name pos:line="99" pos:column="10">boottv_len<pos:position pos:line="99" pos:column="20"/></name></decl>;<pos:position pos:line="99" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="100" pos:column="3">int<pos:position pos:line="100" pos:column="6"/></name></type> <name pos:line="100" pos:column="7">status<pos:position pos:line="100" pos:column="13"/></name></decl>;<pos:position pos:line="100" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="102" pos:column="3">int<pos:position pos:line="102" pos:column="6"/></name></type> <name><name pos:line="102" pos:column="7">mib<pos:position pos:line="102" pos:column="10"/></name><index pos:line="102" pos:column="10">[]<pos:position pos:line="102" pos:column="12"/></index></name> <init pos:line="102" pos:column="13">= <expr><block pos:line="102" pos:column="15">{<expr><name pos:line="102" pos:column="16">CTL_KERN<pos:position pos:line="102" pos:column="24"/></name></expr>, <expr><name pos:line="102" pos:column="26">KERN_BOOTTIME<pos:position pos:line="102" pos:column="39"/></name></expr>}<pos:position pos:line="102" pos:column="40"/></block></expr></init></decl>;<pos:position pos:line="102" pos:column="41"/></decl_stmt>

  <expr_stmt><expr><name pos:line="104" pos:column="3">boottv_len<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <sizeof pos:line="104" pos:column="16">sizeof<argument_list pos:line="104" pos:column="22">(<argument><expr><name pos:line="104" pos:column="23">boottv<pos:position pos:line="104" pos:column="29"/></name></expr></argument>)<pos:position pos:line="104" pos:column="30"/></argument_list></sizeof></expr>;<pos:position pos:line="104" pos:column="31"/></expr_stmt>

  <expr_stmt><expr><name pos:line="106" pos:column="3">status<pos:position pos:line="106" pos:column="9"/></name> <operator pos:line="106" pos:column="10">=<pos:position pos:line="106" pos:column="11"/></operator> <call><name pos:line="106" pos:column="12">sysctl<pos:position pos:line="106" pos:column="18"/></name><argument_list pos:line="106" pos:column="18">(<argument><expr><name pos:line="106" pos:column="19">mib<pos:position pos:line="106" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="24">STATIC_ARRAY_SIZE<pos:position pos:line="106" pos:column="41"/></name><argument_list pos:line="106" pos:column="41">(<argument><expr><name pos:line="106" pos:column="42">mib<pos:position pos:line="106" pos:column="45"/></name></expr></argument>)<pos:position pos:line="106" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="106" pos:column="48">&amp;<pos:position pos:line="106" pos:column="53"/></operator><name pos:line="106" pos:column="49">boottv<pos:position pos:line="106" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="57">&amp;<pos:position pos:line="106" pos:column="62"/></operator><name pos:line="106" pos:column="58">boottv_len<pos:position pos:line="106" pos:column="68"/></name></expr></argument>,
                  <comment type="block" pos:line="107" pos:column="19">/* new_value = */</comment> <argument><expr><name pos:line="107" pos:column="37">NULL<pos:position pos:line="107" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="107" pos:column="43">/* new_length = */</comment> <argument><expr><literal type="number" pos:line="107" pos:column="62">0<pos:position pos:line="107" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="65"/></expr_stmt>
  <if pos:line="108" pos:column="3">if <condition pos:line="108" pos:column="6">(<expr><name pos:line="108" pos:column="7">status<pos:position pos:line="108" pos:column="13"/></name> <operator pos:line="108" pos:column="14">!=<pos:position pos:line="108" pos:column="16"/></operator> <literal type="number" pos:line="108" pos:column="17">0<pos:position pos:line="108" pos:column="18"/></literal></expr>)<pos:position pos:line="108" pos:column="19"/></condition><then pos:line="108" pos:column="19"> <block pos:line="108" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="109" pos:column="5">char<pos:position pos:line="109" pos:column="9"/></name></type> <name><name pos:line="109" pos:column="10">errbuf<pos:position pos:line="109" pos:column="16"/></name><index pos:line="109" pos:column="16">[<expr><literal type="number" pos:line="109" pos:column="17">1024<pos:position pos:line="109" pos:column="21"/></literal></expr>]<pos:position pos:line="109" pos:column="22"/></index></name></decl>;<pos:position pos:line="109" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="110" pos:column="5">ERROR<pos:position pos:line="110" pos:column="10"/></name><argument_list pos:line="110" pos:column="10">(<argument><expr><literal type="string" pos:line="110" pos:column="11">"uptime plugin: No value read from sysctl interface: %s"<pos:position pos:line="110" pos:column="67"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="111" pos:column="11">sstrerror<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">errno<pos:position pos:line="111" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="28">errbuf<pos:position pos:line="111" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="36">sizeof<argument_list pos:line="111" pos:column="42">(<argument><expr><name pos:line="111" pos:column="43">errbuf<pos:position pos:line="111" pos:column="49"/></name></expr></argument>)<pos:position pos:line="111" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="111" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="53"/></expr_stmt>
    <return pos:line="112" pos:column="5">return <expr><operator pos:line="112" pos:column="12">(<pos:position pos:line="112" pos:column="13"/></operator><operator pos:line="112" pos:column="13">-<pos:position pos:line="112" pos:column="14"/></operator><literal type="number" pos:line="112" pos:column="14">1<pos:position pos:line="112" pos:column="15"/></literal><operator pos:line="112" pos:column="15">)<pos:position pos:line="112" pos:column="16"/></operator></expr>;<pos:position pos:line="112" pos:column="17"/></return>
  }<pos:position pos:line="113" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="115" pos:column="3">boottime<pos:position pos:line="115" pos:column="11"/></name> <operator pos:line="115" pos:column="12">=<pos:position pos:line="115" pos:column="13"/></operator> <name><name pos:line="115" pos:column="14">boottv<pos:position pos:line="115" pos:column="20"/></name><operator pos:line="115" pos:column="20">.<pos:position pos:line="115" pos:column="21"/></operator><name pos:line="115" pos:column="21">tv_sec<pos:position pos:line="115" pos:column="27"/></name></name></expr>;<pos:position pos:line="115" pos:column="28"/></expr_stmt>

  <if pos:line="117" pos:column="3">if <condition pos:line="117" pos:column="6">(<expr><name pos:line="117" pos:column="7">boottime<pos:position pos:line="117" pos:column="15"/></name> <operator pos:line="117" pos:column="16">==<pos:position pos:line="117" pos:column="18"/></operator> <literal type="number" pos:line="117" pos:column="19">0<pos:position pos:line="117" pos:column="20"/></literal></expr>)<pos:position pos:line="117" pos:column="21"/></condition><then pos:line="117" pos:column="21"> <block pos:line="117" pos:column="22">{
    <expr_stmt><expr><call><name pos:line="118" pos:column="5">ERROR<pos:position pos:line="118" pos:column="10"/></name><argument_list pos:line="118" pos:column="10">(<argument><expr><literal type="string" pos:line="118" pos:column="11">"uptime plugin: sysctl(3) returned success, "<pos:position pos:line="118" pos:column="56"/></literal>
          <literal type="string" pos:line="119" pos:column="11">"but `boottime' is zero!"<pos:position pos:line="119" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="38"/></expr_stmt>
    <return pos:line="120" pos:column="5">return <expr><operator pos:line="120" pos:column="12">(<pos:position pos:line="120" pos:column="13"/></operator><operator pos:line="120" pos:column="13">-<pos:position pos:line="120" pos:column="14"/></operator><literal type="number" pos:line="120" pos:column="14">1<pos:position pos:line="120" pos:column="15"/></literal><operator pos:line="120" pos:column="15">)<pos:position pos:line="120" pos:column="16"/></operator></expr>;<pos:position pos:line="120" pos:column="17"/></return>
  }<pos:position pos:line="121" pos:column="4"/></block></then></if>
<comment type="block" pos:line="122" pos:column="1">/* #endif HAVE_SYS_SYSCTL_H */</comment>

<cpp:elif pos:line="124" pos:column="1">#<cpp:directive pos:line="124" pos:column="2">elif<pos:position pos:line="124" pos:column="6"/></cpp:directive> <expr><name pos:line="124" pos:column="7">HAVE_PERFSTAT<pos:position pos:line="124" pos:column="20"/></name></expr></cpp:elif>
  <decl_stmt><decl><type><name pos:line="125" pos:column="3">int<pos:position pos:line="125" pos:column="6"/></name></type> <name pos:line="125" pos:column="7">status<pos:position pos:line="125" pos:column="13"/></name></decl>;<pos:position pos:line="125" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="126" pos:column="3">perfstat_cpu_total_t<pos:position pos:line="126" pos:column="23"/></name></type> <name pos:line="126" pos:column="24">cputotal<pos:position pos:line="126" pos:column="32"/></name></decl>;<pos:position pos:line="126" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="127" pos:column="3">int<pos:position pos:line="127" pos:column="6"/></name></type> <name pos:line="127" pos:column="7">hertz<pos:position pos:line="127" pos:column="12"/></name></decl>;<pos:position pos:line="127" pos:column="13"/></decl_stmt>

  <expr_stmt><expr><name pos:line="129" pos:column="3">status<pos:position pos:line="129" pos:column="9"/></name> <operator pos:line="129" pos:column="10">=<pos:position pos:line="129" pos:column="11"/></operator> <call><name pos:line="129" pos:column="12">perfstat_cpu_total<pos:position pos:line="129" pos:column="30"/></name><argument_list pos:line="129" pos:column="30">(<argument><expr><name pos:line="129" pos:column="31">NULL<pos:position pos:line="129" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="37">&amp;<pos:position pos:line="129" pos:column="42"/></operator><name pos:line="129" pos:column="38">cputotal<pos:position pos:line="129" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="129" pos:column="48">sizeof<argument_list pos:line="129" pos:column="54">(<argument><expr><name pos:line="129" pos:column="55">perfstat_cpu_total_t<pos:position pos:line="129" pos:column="75"/></name></expr></argument>)<pos:position pos:line="129" pos:column="76"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="78">1<pos:position pos:line="129" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="81"/></expr_stmt>
  <if pos:line="130" pos:column="3">if <condition pos:line="130" pos:column="6">(<expr><name pos:line="130" pos:column="7">status<pos:position pos:line="130" pos:column="13"/></name> <operator pos:line="130" pos:column="14">&lt;<pos:position pos:line="130" pos:column="18"/></operator> <literal type="number" pos:line="130" pos:column="16">0<pos:position pos:line="130" pos:column="17"/></literal></expr>)<pos:position pos:line="130" pos:column="18"/></condition><then pos:line="130" pos:column="18"> <block pos:line="130" pos:column="19">{
    <decl_stmt><decl><type><name pos:line="131" pos:column="5">char<pos:position pos:line="131" pos:column="9"/></name></type> <name><name pos:line="131" pos:column="10">errbuf<pos:position pos:line="131" pos:column="16"/></name><index pos:line="131" pos:column="16">[<expr><literal type="number" pos:line="131" pos:column="17">1024<pos:position pos:line="131" pos:column="21"/></literal></expr>]<pos:position pos:line="131" pos:column="22"/></index></name></decl>;<pos:position pos:line="131" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">ERROR<pos:position pos:line="132" pos:column="10"/></name><argument_list pos:line="132" pos:column="10">(<argument><expr><literal type="string" pos:line="132" pos:column="11">"uptime plugin: perfstat_cpu_total: %s"<pos:position pos:line="132" pos:column="50"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="133" pos:column="11">sstrerror<pos:position pos:line="133" pos:column="20"/></name><argument_list pos:line="133" pos:column="20">(<argument><expr><name pos:line="133" pos:column="21">errno<pos:position pos:line="133" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="28">errbuf<pos:position pos:line="133" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="133" pos:column="36">sizeof<argument_list pos:line="133" pos:column="42">(<argument><expr><name pos:line="133" pos:column="43">errbuf<pos:position pos:line="133" pos:column="49"/></name></expr></argument>)<pos:position pos:line="133" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="133" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="53"/></expr_stmt>
    <return pos:line="134" pos:column="5">return <expr><operator pos:line="134" pos:column="12">(<pos:position pos:line="134" pos:column="13"/></operator><operator pos:line="134" pos:column="13">-<pos:position pos:line="134" pos:column="14"/></operator><literal type="number" pos:line="134" pos:column="14">1<pos:position pos:line="134" pos:column="15"/></literal><operator pos:line="134" pos:column="15">)<pos:position pos:line="134" pos:column="16"/></operator></expr>;<pos:position pos:line="134" pos:column="17"/></return>
  }<pos:position pos:line="135" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="137" pos:column="3">hertz<pos:position pos:line="137" pos:column="8"/></name> <operator pos:line="137" pos:column="9">=<pos:position pos:line="137" pos:column="10"/></operator> <call><name pos:line="137" pos:column="11">sysconf<pos:position pos:line="137" pos:column="18"/></name><argument_list pos:line="137" pos:column="18">(<argument><expr><name pos:line="137" pos:column="19">_SC_CLK_TCK<pos:position pos:line="137" pos:column="30"/></name></expr></argument>)<pos:position pos:line="137" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="32"/></expr_stmt>
  <if pos:line="138" pos:column="3">if <condition pos:line="138" pos:column="6">(<expr><name pos:line="138" pos:column="7">hertz<pos:position pos:line="138" pos:column="12"/></name> <operator pos:line="138" pos:column="13">&lt;=<pos:position pos:line="138" pos:column="18"/></operator> <literal type="number" pos:line="138" pos:column="16">0<pos:position pos:line="138" pos:column="17"/></literal></expr>)<pos:position pos:line="138" pos:column="18"/></condition><then pos:line="138" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name pos:line="139" pos:column="5">hertz<pos:position pos:line="139" pos:column="10"/></name> <operator pos:line="139" pos:column="11">=<pos:position pos:line="139" pos:column="12"/></operator> <name pos:line="139" pos:column="13">HZ<pos:position pos:line="139" pos:column="15"/></name></expr>;<pos:position pos:line="139" pos:column="16"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="141" pos:column="3">boottime<pos:position pos:line="141" pos:column="11"/></name> <operator pos:line="141" pos:column="12">=<pos:position pos:line="141" pos:column="13"/></operator> <call><name pos:line="141" pos:column="14">time<pos:position pos:line="141" pos:column="18"/></name><argument_list pos:line="141" pos:column="18">(<argument><expr><name pos:line="141" pos:column="19">NULL<pos:position pos:line="141" pos:column="23"/></name></expr></argument>)<pos:position pos:line="141" pos:column="24"/></argument_list></call> <operator pos:line="141" pos:column="25">-<pos:position pos:line="141" pos:column="26"/></operator> <name><name pos:line="141" pos:column="27">cputotal<pos:position pos:line="141" pos:column="35"/></name><operator pos:line="141" pos:column="35">.<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="36">lbolt<pos:position pos:line="141" pos:column="41"/></name></name> <operator pos:line="141" pos:column="42">/<pos:position pos:line="141" pos:column="43"/></operator> <name pos:line="141" pos:column="44">hertz<pos:position pos:line="141" pos:column="49"/></name></expr>;<pos:position pos:line="141" pos:column="50"/></expr_stmt>
<cpp:endif pos:line="142" pos:column="1">#<cpp:directive pos:line="142" pos:column="2">endif<pos:position pos:line="142" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="142" pos:column="8">/* HAVE_PERFSTAT */</comment>

  <return pos:line="144" pos:column="3">return <expr><operator pos:line="144" pos:column="10">(<pos:position pos:line="144" pos:column="11"/></operator><literal type="number" pos:line="144" pos:column="11">0<pos:position pos:line="144" pos:column="12"/></literal><operator pos:line="144" pos:column="12">)<pos:position pos:line="144" pos:column="13"/></operator></expr>;<pos:position pos:line="144" pos:column="14"/></return>
}<pos:position pos:line="145" pos:column="2"/></block></function></unit>

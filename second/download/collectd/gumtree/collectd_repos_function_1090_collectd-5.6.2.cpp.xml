<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1090_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">data_volume_perf_t<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type><name pos:line="1" pos:column="28">get_volume_perf<pos:position pos:line="1" pos:column="43"/></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">cfg_volume_perf_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">cvp<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="68">/* {{{ */</comment>
                                           <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">name<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list> <block pos:line="2" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">data_volume_perf_t<pos:position pos:line="3" pos:column="21"/></name> <modifier pos:line="3" pos:column="22">*<pos:position pos:line="3" pos:column="23"/></modifier></type><name pos:line="3" pos:column="23">last<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">data_volume_perf_t<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></operator><operator pos:line="4" pos:column="23">new<pos:position pos:line="4" pos:column="26"/></operator></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ignore_octets<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ignore_operations<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">int<pos:position pos:line="8" pos:column="6"/></name></type> <name pos:line="8" pos:column="7">ignore_latency<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>

  <if pos:line="10" pos:column="3">if <condition pos:line="10" pos:column="6">(<expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">cvp<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">==<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">NULL<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">)<pos:position pos:line="10" pos:column="20"/></operator> <operator pos:line="10" pos:column="21">||<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">name<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">==<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">)<pos:position pos:line="10" pos:column="38"/></operator></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
    <block type="pseudo"><return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator></expr>;<pos:position pos:line="11" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="13" pos:column="3">last<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <name><name pos:line="13" pos:column="10">cvp<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">volumes<pos:position pos:line="13" pos:column="22"/></name></name></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
  <while pos:line="14" pos:column="3">while <condition pos:line="14" pos:column="9">(<expr><name pos:line="14" pos:column="10">last<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">NULL<pos:position pos:line="14" pos:column="22"/></name></expr>)<pos:position pos:line="14" pos:column="23"/></condition> <block pos:line="14" pos:column="24">{
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strcmp<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name><name pos:line="15" pos:column="16">last<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">name<pos:position pos:line="15" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="28">name<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call> <operator pos:line="15" pos:column="34">==<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="37">0<pos:position pos:line="15" pos:column="38"/></literal></expr>)<pos:position pos:line="15" pos:column="39"/></condition><then pos:line="15" pos:column="39">
      <block type="pseudo"><return pos:line="16" pos:column="7">return <expr><operator pos:line="16" pos:column="14">(<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">last<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">)<pos:position pos:line="16" pos:column="20"/></operator></expr>;<pos:position pos:line="16" pos:column="21"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">last<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">next<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">NULL<pos:position pos:line="18" pos:column="27"/></name></expr>)<pos:position pos:line="18" pos:column="28"/></condition><then pos:line="18" pos:column="28">
      <block type="pseudo"><break pos:line="19" pos:column="7">break;<pos:position pos:line="19" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">last<pos:position pos:line="21" pos:column="9"/></name> <operator pos:line="21" pos:column="10">=<pos:position pos:line="21" pos:column="11"/></operator> <name><name pos:line="21" pos:column="12">last<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">next<pos:position pos:line="21" pos:column="22"/></name></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="22" pos:column="4"/></block></while>

  <comment type="block" pos:line="24" pos:column="3">/* Check the ignorelists. If *all three* tell us to ignore a volume, return
   * NULL. */</comment>
  <expr_stmt><expr><name pos:line="26" pos:column="3">ignore_octets<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">ignorelist_match<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">cvp<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">il_octets<pos:position pos:line="26" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="52">name<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
  <expr_stmt><expr><name pos:line="27" pos:column="3">ignore_operations<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <call><name pos:line="27" pos:column="23">ignorelist_match<pos:position pos:line="27" pos:column="39"/></name><argument_list pos:line="27" pos:column="39">(<argument><expr><name><name pos:line="27" pos:column="40">cvp<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">il_operations<pos:position pos:line="27" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">name<pos:position pos:line="27" pos:column="64"/></name></expr></argument>)<pos:position pos:line="27" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><name pos:line="28" pos:column="3">ignore_latency<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">ignorelist_match<pos:position pos:line="28" pos:column="36"/></name><argument_list pos:line="28" pos:column="36">(<argument><expr><name><name pos:line="28" pos:column="37">cvp<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">il_latency<pos:position pos:line="28" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="54">name<pos:position pos:line="28" pos:column="58"/></name></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><operator pos:line="29" pos:column="7">(<pos:position pos:line="29" pos:column="8"/></operator><name pos:line="29" pos:column="8">ignore_octets<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">!=<pos:position pos:line="29" pos:column="24"/></operator> <literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal><operator pos:line="29" pos:column="26">)<pos:position pos:line="29" pos:column="27"/></operator> <operator pos:line="29" pos:column="28">||<pos:position pos:line="29" pos:column="30"/></operator> <operator pos:line="29" pos:column="31">(<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="32">ignore_operations<pos:position pos:line="29" pos:column="49"/></name> <operator pos:line="29" pos:column="50">!=<pos:position pos:line="29" pos:column="52"/></operator> <literal type="number" pos:line="29" pos:column="53">0<pos:position pos:line="29" pos:column="54"/></literal><operator pos:line="29" pos:column="54">)<pos:position pos:line="29" pos:column="55"/></operator> <operator pos:line="29" pos:column="56">||<pos:position pos:line="29" pos:column="58"/></operator> <operator pos:line="29" pos:column="59">(<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">ignore_latency<pos:position pos:line="29" pos:column="74"/></name> <operator pos:line="29" pos:column="75">!=<pos:position pos:line="29" pos:column="77"/></operator> <literal type="number" pos:line="29" pos:column="78">0<pos:position pos:line="29" pos:column="79"/></literal><operator pos:line="29" pos:column="79">)<pos:position pos:line="29" pos:column="80"/></operator></expr>)<pos:position pos:line="29" pos:column="81"/></condition><then pos:line="29" pos:column="81">
    <block type="pseudo"><return pos:line="30" pos:column="5">return <expr><operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">NULL<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">)<pos:position pos:line="30" pos:column="18"/></operator></expr>;<pos:position pos:line="30" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* Not found: allocate. */</comment>
  <expr_stmt><expr><operator pos:line="33" pos:column="3">new<pos:position pos:line="33" pos:column="6"/></operator> <operator pos:line="33" pos:column="7">=<pos:position pos:line="33" pos:column="8"/></operator> <call><name pos:line="33" pos:column="9">calloc<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="19">sizeof<argument_list pos:line="33" pos:column="25">(<argument><expr><operator pos:line="33" pos:column="26">*<pos:position pos:line="33" pos:column="27"/></operator><operator pos:line="33" pos:column="27">new<pos:position pos:line="33" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="33"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><operator pos:line="34" pos:column="7">new<pos:position pos:line="34" pos:column="10"/></operator> <operator pos:line="34" pos:column="11">==<pos:position pos:line="34" pos:column="13"/></operator> <name pos:line="34" pos:column="14">NULL<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
    <block type="pseudo"><return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="13">NULL<pos:position pos:line="35" pos:column="17"/></name><operator pos:line="35" pos:column="17">)<pos:position pos:line="35" pos:column="18"/></operator></expr>;<pos:position pos:line="35" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><operator pos:line="36" pos:column="3">new<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">next<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <name pos:line="36" pos:column="15">NULL<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="38" pos:column="3">new<pos:position pos:line="38" pos:column="6"/></operator><operator pos:line="38" pos:column="6">-&gt;<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="8">name<pos:position pos:line="38" pos:column="12"/></name> <operator pos:line="38" pos:column="13">=<pos:position pos:line="38" pos:column="14"/></operator> <call><name pos:line="38" pos:column="15">strdup<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">name<pos:position pos:line="38" pos:column="26"/></name></expr></argument>)<pos:position pos:line="38" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="28"/></expr_stmt>
  <if pos:line="39" pos:column="3">if <condition pos:line="39" pos:column="6">(<expr><operator pos:line="39" pos:column="7">new<pos:position pos:line="39" pos:column="10"/></operator><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">name<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">==<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">NULL<pos:position pos:line="39" pos:column="24"/></name></expr>)<pos:position pos:line="39" pos:column="25"/></condition><then pos:line="39" pos:column="25"> <block pos:line="39" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">sfree<pos:position pos:line="40" pos:column="10"/></name><argument_list pos:line="40" pos:column="10">(<argument><expr><operator pos:line="40" pos:column="11">new<pos:position pos:line="40" pos:column="14"/></operator></expr></argument>)<pos:position pos:line="40" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="16"/></expr_stmt>
    <return pos:line="41" pos:column="5">return <expr><operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">NULL<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">)<pos:position pos:line="41" pos:column="18"/></operator></expr>;<pos:position pos:line="41" pos:column="19"/></return>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">ignore_octets<pos:position pos:line="44" pos:column="20"/></name> <operator pos:line="44" pos:column="21">==<pos:position pos:line="44" pos:column="23"/></operator> <literal type="number" pos:line="44" pos:column="24">0<pos:position pos:line="44" pos:column="25"/></literal></expr>)<pos:position pos:line="44" pos:column="26"/></condition><then pos:line="44" pos:column="26">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="45" pos:column="5">new<pos:position pos:line="45" pos:column="8"/></operator><operator pos:line="45" pos:column="8">-&gt;<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="10">flags<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">|=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">CFG_VOLUME_PERF_IO<pos:position pos:line="45" pos:column="37"/></name></expr>;<pos:position pos:line="45" pos:column="38"/></expr_stmt></block></then></if>
  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><name pos:line="46" pos:column="7">ignore_operations<pos:position pos:line="46" pos:column="24"/></name> <operator pos:line="46" pos:column="25">==<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="28">0<pos:position pos:line="46" pos:column="29"/></literal></expr>)<pos:position pos:line="46" pos:column="30"/></condition><then pos:line="46" pos:column="30">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="47" pos:column="5">new<pos:position pos:line="47" pos:column="8"/></operator><operator pos:line="47" pos:column="8">-&gt;<pos:position pos:line="47" pos:column="13"/></operator><name pos:line="47" pos:column="10">flags<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">|=<pos:position pos:line="47" pos:column="18"/></operator> <name pos:line="47" pos:column="19">CFG_VOLUME_PERF_OPS<pos:position pos:line="47" pos:column="38"/></name></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt></block></then></if>
  <if pos:line="48" pos:column="3">if <condition pos:line="48" pos:column="6">(<expr><name pos:line="48" pos:column="7">ignore_latency<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">==<pos:position pos:line="48" pos:column="24"/></operator> <literal type="number" pos:line="48" pos:column="25">0<pos:position pos:line="48" pos:column="26"/></literal></expr>)<pos:position pos:line="48" pos:column="27"/></condition><then pos:line="48" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="5">new<pos:position pos:line="49" pos:column="8"/></operator><operator pos:line="49" pos:column="8">-&gt;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="10">flags<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">|=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">CFG_VOLUME_PERF_LATENCY<pos:position pos:line="49" pos:column="42"/></name></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="51" pos:column="3">/* Add to end of list. */</comment>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">last<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">==<pos:position pos:line="52" pos:column="14"/></operator> <name pos:line="52" pos:column="15">NULL<pos:position pos:line="52" pos:column="19"/></name></expr>)<pos:position pos:line="52" pos:column="20"/></condition><then pos:line="52" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="53" pos:column="5">cvp<pos:position pos:line="53" pos:column="8"/></name><operator pos:line="53" pos:column="8">-&gt;<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="10">volumes<pos:position pos:line="53" pos:column="17"/></name></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <operator pos:line="53" pos:column="20">new<pos:position pos:line="53" pos:column="23"/></operator></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt></block></then>
  <else pos:line="54" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="5">last<pos:position pos:line="55" pos:column="9"/></name><operator pos:line="55" pos:column="9">-&gt;<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="11">next<pos:position pos:line="55" pos:column="15"/></name></name> <operator pos:line="55" pos:column="16">=<pos:position pos:line="55" pos:column="17"/></operator> <operator pos:line="55" pos:column="18">new<pos:position pos:line="55" pos:column="21"/></operator></expr>;<pos:position pos:line="55" pos:column="22"/></expr_stmt></block></else></if>

  <return pos:line="57" pos:column="3">return <expr><operator pos:line="57" pos:column="10">(<pos:position pos:line="57" pos:column="11"/></operator><operator pos:line="57" pos:column="11">new<pos:position pos:line="57" pos:column="14"/></operator><operator pos:line="57" pos:column="14">)<pos:position pos:line="57" pos:column="15"/></operator></expr>;<pos:position pos:line="57" pos:column="16"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

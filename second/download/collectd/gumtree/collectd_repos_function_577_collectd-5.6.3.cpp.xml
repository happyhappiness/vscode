<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_577_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensu_connect<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name><name pos:line="1" pos:column="26">struct<pos:position pos:line="1" pos:column="32"/></name> <name pos:line="1" pos:column="33">sensu_host<pos:position pos:line="1" pos:column="43"/></name></name> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">host<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">e<pos:position pos:line="3" pos:column="8"/></name></decl>;<pos:position pos:line="3" pos:column="9"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name> <specifier pos:line="4" pos:column="8">const<pos:position pos:line="4" pos:column="13"/></specifier> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">node<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name> <specifier pos:line="5" pos:column="8">const<pos:position pos:line="5" pos:column="13"/></specifier> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">service<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>

  <comment type="line" pos:line="7" pos:column="3">// Resolve the target if we haven't done already</comment>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><operator pos:line="8" pos:column="8">(<pos:position pos:line="8" pos:column="9"/></operator><name><name pos:line="8" pos:column="9">host<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">flags<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="23">F_READY<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">)<pos:position pos:line="8" pos:column="31"/></operator></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32"> <block pos:line="8" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><operator pos:line="9" pos:column="12">&amp;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="13">service<pos:position pos:line="9" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="22">0<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="25">sizeof<argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">service<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">host<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">res<pos:position pos:line="10" pos:column="14"/></name></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">NULL<pos:position pos:line="10" pos:column="21"/></name></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">node<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <ternary><condition><expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><name><name pos:line="12" pos:column="13">host<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">node<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">!=<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">NULL<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">)<pos:position pos:line="12" pos:column="32"/></operator></expr> ?<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <expr><name><name pos:line="12" pos:column="35">host<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">node<pos:position pos:line="12" pos:column="45"/></name></name></expr> <pos:position pos:line="12" pos:column="46"/></then><else pos:line="12" pos:column="46">: <expr><name pos:line="12" pos:column="48">SENSU_HOST<pos:position pos:line="12" pos:column="58"/></name></expr></else></ternary></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">service<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><name><name pos:line="13" pos:column="16">host<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">service<pos:position pos:line="13" pos:column="29"/></name></name> <operator pos:line="13" pos:column="30">!=<pos:position pos:line="13" pos:column="32"/></operator> <name pos:line="13" pos:column="33">NULL<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">)<pos:position pos:line="13" pos:column="38"/></operator></expr> ?<pos:position pos:line="13" pos:column="40"/></condition><then pos:line="13" pos:column="40"> <expr><name><name pos:line="13" pos:column="41">host<pos:position pos:line="13" pos:column="45"/></name><operator pos:line="13" pos:column="45">-&gt;<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="47">service<pos:position pos:line="13" pos:column="54"/></name></name></expr> <pos:position pos:line="13" pos:column="55"/></then><else pos:line="13" pos:column="55">: <expr><name pos:line="13" pos:column="57">SENSU_PORT<pos:position pos:line="13" pos:column="67"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">struct<pos:position pos:line="15" pos:column="11"/></name> <name pos:line="15" pos:column="12">addrinfo<pos:position pos:line="15" pos:column="20"/></name></name></type> <name pos:line="15" pos:column="21">ai_hints<pos:position pos:line="15" pos:column="29"/></name> <init pos:line="15" pos:column="30">= <expr><block pos:line="15" pos:column="32">{<expr><operator pos:line="15" pos:column="33">.<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">ai_family<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">=<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">AF_INET<pos:position pos:line="15" pos:column="53"/></name></expr>,
                                <expr><operator pos:line="16" pos:column="33">.<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="34">ai_flags<pos:position pos:line="16" pos:column="42"/></name> <operator pos:line="16" pos:column="43">=<pos:position pos:line="16" pos:column="44"/></operator> <name pos:line="16" pos:column="45">AI_ADDRCONFIG<pos:position pos:line="16" pos:column="58"/></name></expr>,
                                <expr><operator pos:line="17" pos:column="33">.<pos:position pos:line="17" pos:column="34"/></operator><name pos:line="17" pos:column="34">ai_socktype<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">=<pos:position pos:line="17" pos:column="47"/></operator> <name pos:line="17" pos:column="48">SOCK_STREAM<pos:position pos:line="17" pos:column="59"/></name></expr>}<pos:position pos:line="17" pos:column="60"/></block></expr></init></decl>;<pos:position pos:line="17" pos:column="61"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">e<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">getaddrinfo<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">node<pos:position pos:line="19" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">service<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="41">&amp;<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="42">ai_hints<pos:position pos:line="19" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="52">&amp;<pos:position pos:line="19" pos:column="57"/></operator><operator pos:line="19" pos:column="53">(<pos:position pos:line="19" pos:column="54"/></operator><name><name pos:line="19" pos:column="54">host<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">-&gt;<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="60">res<pos:position pos:line="19" pos:column="63"/></name></name><operator pos:line="19" pos:column="63">)<pos:position pos:line="19" pos:column="64"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call><operator pos:line="19" pos:column="65">)<pos:position pos:line="19" pos:column="66"/></operator> <operator pos:line="19" pos:column="67">!=<pos:position pos:line="19" pos:column="69"/></operator> <literal type="number" pos:line="19" pos:column="70">0<pos:position pos:line="19" pos:column="71"/></literal></expr>)<pos:position pos:line="19" pos:column="72"/></condition><then pos:line="19" pos:column="72"> <block pos:line="19" pos:column="73">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ERROR<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"write_sensu plugin: Unable to resolve host \"%s\": %s"<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="70">node<pos:position pos:line="20" pos:column="74"/></name></expr></argument>,
            <argument><expr><call><name pos:line="21" pos:column="13">gai_strerror<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">e<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
      <return pos:line="22" pos:column="7">return <expr><operator pos:line="22" pos:column="14">-<pos:position pos:line="22" pos:column="15"/></operator><literal type="number" pos:line="22" pos:column="15">1<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">DEBUG<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"write_sensu plugin: successfully resolved host/port: %s/%s"<pos:position pos:line="24" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="73">node<pos:position pos:line="24" pos:column="77"/></name></expr></argument>,
          <argument><expr><name pos:line="25" pos:column="11">service<pos:position pos:line="25" pos:column="18"/></name></expr></argument>)<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">host<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">flags<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">|=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">F_READY<pos:position pos:line="26" pos:column="27"/></name></expr>;<pos:position pos:line="26" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name><name pos:line="29" pos:column="3">struct<pos:position pos:line="29" pos:column="9"/></name> <name pos:line="29" pos:column="10">linger<pos:position pos:line="29" pos:column="16"/></name></name></type> <name pos:line="29" pos:column="17">so_linger<pos:position pos:line="29" pos:column="26"/></name></decl>;<pos:position pos:line="29" pos:column="27"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="30" pos:column="3">host<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">s<pos:position pos:line="30" pos:column="10"/></name></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <operator pos:line="30" pos:column="13">-<pos:position pos:line="30" pos:column="14"/></operator><literal type="number" pos:line="30" pos:column="14">1<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt>
  <for pos:line="31" pos:column="3">for <control pos:line="31" pos:column="7">(<init><decl><type><name><name pos:line="31" pos:column="8">struct<pos:position pos:line="31" pos:column="14"/></name> <name pos:line="31" pos:column="15">addrinfo<pos:position pos:line="31" pos:column="23"/></name></name> <modifier pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></modifier><name pos:line="31" pos:column="25">ai<pos:position pos:line="31" pos:column="27"/></name></type> <init pos:line="31" pos:column="28">= <expr><name><name pos:line="31" pos:column="30">host<pos:position pos:line="31" pos:column="34"/></name><operator pos:line="31" pos:column="34">-&gt;<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="36">res<pos:position pos:line="31" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="40"/></init> <condition><expr><name pos:line="31" pos:column="41">ai<pos:position pos:line="31" pos:column="43"/></name> <operator pos:line="31" pos:column="44">!=<pos:position pos:line="31" pos:column="46"/></operator> <name pos:line="31" pos:column="47">NULL<pos:position pos:line="31" pos:column="51"/></name></expr>;<pos:position pos:line="31" pos:column="52"/></condition> <incr><expr><name pos:line="31" pos:column="53">ai<pos:position pos:line="31" pos:column="55"/></name> <operator pos:line="31" pos:column="56">=<pos:position pos:line="31" pos:column="57"/></operator> <name><name pos:line="31" pos:column="58">ai<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">ai_next<pos:position pos:line="31" pos:column="69"/></name></name></expr></incr>)<pos:position pos:line="31" pos:column="70"/></control> <block pos:line="31" pos:column="71">{
    <comment type="line" pos:line="32" pos:column="5">// create the socket</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">(<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">host<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">s<pos:position pos:line="33" pos:column="17"/></name></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <call><name pos:line="33" pos:column="20">socket<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name><name pos:line="33" pos:column="27">ai<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">ai_family<pos:position pos:line="33" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="42">ai<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">-&gt;<pos:position pos:line="33" pos:column="49"/></operator><name pos:line="33" pos:column="46">ai_socktype<pos:position pos:line="33" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="59">ai<pos:position pos:line="33" pos:column="61"/></name><operator pos:line="33" pos:column="61">-&gt;<pos:position pos:line="33" pos:column="66"/></operator><name pos:line="33" pos:column="63">ai_protocol<pos:position pos:line="33" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call><operator pos:line="33" pos:column="75">)<pos:position pos:line="33" pos:column="76"/></operator> <operator pos:line="33" pos:column="77">==<pos:position pos:line="33" pos:column="79"/></operator>
        <operator pos:line="34" pos:column="9">-<pos:position pos:line="34" pos:column="10"/></operator><literal type="number" pos:line="34" pos:column="10">1<pos:position pos:line="34" pos:column="11"/></literal></expr>)<pos:position pos:line="34" pos:column="12"/></condition><then pos:line="34" pos:column="12"> <block pos:line="34" pos:column="13">{
      <continue pos:line="35" pos:column="7">continue;<pos:position pos:line="35" pos:column="16"/></continue>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="38" pos:column="5">// Set very low close() lingering</comment>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">so_linger<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">.<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">l_onoff<pos:position pos:line="39" pos:column="22"/></name></name> <operator pos:line="39" pos:column="23">=<pos:position pos:line="39" pos:column="24"/></operator> <literal type="number" pos:line="39" pos:column="25">1<pos:position pos:line="39" pos:column="26"/></literal></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">so_linger<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">l_linger<pos:position pos:line="40" pos:column="23"/></name></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <literal type="number" pos:line="40" pos:column="26">3<pos:position pos:line="40" pos:column="27"/></literal></expr>;<pos:position pos:line="40" pos:column="28"/></expr_stmt>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><call><name pos:line="41" pos:column="9">setsockopt<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><name><name pos:line="41" pos:column="20">host<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">s<pos:position pos:line="41" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="29">SOL_SOCKET<pos:position pos:line="41" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="41">SO_LINGER<pos:position pos:line="41" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="52">&amp;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="53">so_linger<pos:position pos:line="41" pos:column="62"/></name></expr></argument>,
                   <argument><expr><sizeof pos:line="42" pos:column="20">sizeof <name pos:line="42" pos:column="27">so_linger<pos:position pos:line="42" pos:column="36"/></name></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="37"/></argument_list></call> <operator pos:line="42" pos:column="38">!=<pos:position pos:line="42" pos:column="40"/></operator> <literal type="number" pos:line="42" pos:column="41">0<pos:position pos:line="42" pos:column="42"/></literal></expr>)<pos:position pos:line="42" pos:column="43"/></condition><then pos:line="42" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="7">WARNING<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><literal type="string" pos:line="43" pos:column="15">"write_sensu plugin: failed to set socket close() lingering"<pos:position pos:line="43" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="77"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">set_sock_opts<pos:position pos:line="45" pos:column="18"/></name><argument_list pos:line="45" pos:column="18">(<argument><expr><name><name pos:line="45" pos:column="19">host<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">s<pos:position pos:line="45" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>

    <comment type="line" pos:line="47" pos:column="5">// connect the socket</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">connect<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name><name pos:line="48" pos:column="17">host<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">s<pos:position pos:line="48" pos:column="24"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="26">ai<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">ai_addr<pos:position pos:line="48" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="39">ai<pos:position pos:line="48" pos:column="41"/></name><operator pos:line="48" pos:column="41">-&gt;<pos:position pos:line="48" pos:column="46"/></operator><name pos:line="48" pos:column="43">ai_addrlen<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call> <operator pos:line="48" pos:column="55">!=<pos:position pos:line="48" pos:column="57"/></operator> <literal type="number" pos:line="48" pos:column="58">0<pos:position pos:line="48" pos:column="59"/></literal></expr>)<pos:position pos:line="48" pos:column="60"/></condition><then pos:line="48" pos:column="60"> <block pos:line="48" pos:column="61">{
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">close<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><name><name pos:line="49" pos:column="13">host<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">-&gt;<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="19">s<pos:position pos:line="49" pos:column="20"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="50" pos:column="7">host<pos:position pos:line="50" pos:column="11"/></name><operator pos:line="50" pos:column="11">-&gt;<pos:position pos:line="50" pos:column="16"/></operator><name pos:line="50" pos:column="13">s<pos:position pos:line="50" pos:column="14"/></name></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <operator pos:line="50" pos:column="17">-<pos:position pos:line="50" pos:column="18"/></operator><literal type="number" pos:line="50" pos:column="18">1<pos:position pos:line="50" pos:column="19"/></literal></expr>;<pos:position pos:line="50" pos:column="20"/></expr_stmt>
      <continue pos:line="51" pos:column="7">continue;<pos:position pos:line="51" pos:column="16"/></continue>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">DEBUG<pos:position pos:line="53" pos:column="10"/></name><argument_list pos:line="53" pos:column="10">(<argument><expr><literal type="string" pos:line="53" pos:column="11">"write_sensu plugin: connected"<pos:position pos:line="53" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="44"/></expr_stmt>
    <break pos:line="54" pos:column="5">break;<pos:position pos:line="54" pos:column="11"/></break>
  }<pos:position pos:line="55" pos:column="4"/></block></for>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><name><name pos:line="57" pos:column="7">host<pos:position pos:line="57" pos:column="11"/></name><operator pos:line="57" pos:column="11">-&gt;<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="13">s<pos:position pos:line="57" pos:column="14"/></name></name> <operator pos:line="57" pos:column="15">&lt;<pos:position pos:line="57" pos:column="19"/></operator> <literal type="number" pos:line="57" pos:column="17">0<pos:position pos:line="57" pos:column="18"/></literal></expr>)<pos:position pos:line="57" pos:column="19"/></condition><then pos:line="57" pos:column="19"> <block pos:line="57" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="58" pos:column="5">WARNING<pos:position pos:line="58" pos:column="12"/></name><argument_list pos:line="58" pos:column="12">(<argument><expr><literal type="string" pos:line="58" pos:column="13">"write_sensu plugin: Unable to connect to sensu client"<pos:position pos:line="58" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
    <return pos:line="59" pos:column="5">return <expr><operator pos:line="59" pos:column="12">-<pos:position pos:line="59" pos:column="13"/></operator><literal type="number" pos:line="59" pos:column="13">1<pos:position pos:line="59" pos:column="14"/></literal></expr>;<pos:position pos:line="59" pos:column="15"/></return>
  }<pos:position pos:line="60" pos:column="4"/></block></then></if>
  <return pos:line="61" pos:column="3">return <expr><literal type="number" pos:line="61" pos:column="10">0<pos:position pos:line="61" pos:column="11"/></literal></expr>;<pos:position pos:line="61" pos:column="12"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

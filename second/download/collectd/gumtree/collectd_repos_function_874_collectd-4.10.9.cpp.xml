<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_874_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cna_handle_volume_snap_usage<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">host_config_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">host<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="69">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">data_volume_usage_t<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">v<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">uint64_t<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">snap_used<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="33">value<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">na_elem_t<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">data<pos:position pos:line="5" pos:column="24"/></name></decl>, <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="27">elem_snap<pos:position pos:line="5" pos:column="36"/></name></decl>, <modifier pos:line="5" pos:column="38">*<pos:position pos:line="5" pos:column="39"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="39">elem_snapshots<pos:position pos:line="5" pos:column="53"/></name></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">na_elem_iter_t<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">iter_snap<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>

	<expr_stmt><expr><name pos:line="8" pos:column="9">data<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">na_server_invoke_elem<pos:position pos:line="8" pos:column="37"/></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name><name pos:line="8" pos:column="38">host<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">srv<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="49">v<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">-&gt;<pos:position pos:line="8" pos:column="55"/></operator><name pos:line="8" pos:column="52">snap_query<pos:position pos:line="8" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">na_results_status<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">data<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call> <operator pos:line="9" pos:column="37">!=<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">NA_OK<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
	<block pos:line="10" pos:column="9">{
		<if pos:line="11" pos:column="17">if <condition pos:line="11" pos:column="20">(<expr><call><name pos:line="11" pos:column="21">na_results_errno<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name pos:line="11" pos:column="38">data<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call> <operator pos:line="11" pos:column="44">==<pos:position pos:line="11" pos:column="46"/></operator> <name pos:line="11" pos:column="47">EVOLUMEOFFLINE<pos:position pos:line="11" pos:column="61"/></name></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62"> <block pos:line="11" pos:column="63">{
			<if pos:line="12" pos:column="25">if <condition pos:line="12" pos:column="28">(<expr><operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="30">v<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">flags<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="41">IS_VOLUME_USAGE_OFFLINE<pos:position pos:line="12" pos:column="64"/></name><operator pos:line="12" pos:column="64">)<pos:position pos:line="12" pos:column="65"/></operator> <operator pos:line="12" pos:column="66">==<pos:position pos:line="12" pos:column="68"/></operator> <literal type="number" pos:line="12" pos:column="69">0<pos:position pos:line="12" pos:column="70"/></literal></expr>)<pos:position pos:line="12" pos:column="71"/></condition><then pos:line="12" pos:column="71">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="33">cna_change_volume_status<pos:position pos:line="13" pos:column="57"/></name> <argument_list pos:line="13" pos:column="58">(<argument><expr><name><name pos:line="13" pos:column="59">host<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">-&gt;<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="65">name<pos:position pos:line="13" pos:column="69"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="71">v<pos:position pos:line="13" pos:column="72"/></name></expr></argument>)<pos:position pos:line="13" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="74"/></expr_stmt></block></then></if>
		}<pos:position pos:line="14" pos:column="18"/></block></then> <else pos:line="14" pos:column="19">else <block pos:line="14" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="15" pos:column="25">ERROR<pos:position pos:line="15" pos:column="30"/></name> <argument_list pos:line="15" pos:column="31">(<argument><expr><literal type="string" pos:line="15" pos:column="32">"netapp plugin: cna_handle_volume_snap_usage: na_server_invoke_elem for "<pos:position pos:line="15" pos:column="105"/></literal>
					<literal type="string" pos:line="16" pos:column="41">"volume \"%s\" on host %s failed with error %d: %s"<pos:position pos:line="16" pos:column="92"/></literal></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="94">v<pos:position pos:line="16" pos:column="95"/></name><operator pos:line="16" pos:column="95">-&gt;<pos:position pos:line="16" pos:column="100"/></operator><name pos:line="16" pos:column="97">name<pos:position pos:line="16" pos:column="101"/></name></name></expr></argument>,
					<argument><expr><name><name pos:line="17" pos:column="41">host<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">-&gt;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="47">name<pos:position pos:line="17" pos:column="51"/></name></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="53">na_results_errno<pos:position pos:line="17" pos:column="69"/></name><argument_list pos:line="17" pos:column="69">(<argument><expr><name pos:line="17" pos:column="70">data<pos:position pos:line="17" pos:column="74"/></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="77">na_results_reason<pos:position pos:line="17" pos:column="94"/></name><argument_list pos:line="17" pos:column="94">(<argument><expr><name pos:line="17" pos:column="95">data<pos:position pos:line="17" pos:column="99"/></name></expr></argument>)<pos:position pos:line="17" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="102"/></expr_stmt>
		}<pos:position pos:line="18" pos:column="18"/></block></else></if>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">na_elem_free<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">data<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
		<return pos:line="20" pos:column="17">return;<pos:position pos:line="20" pos:column="24"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">v<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">-&gt;<pos:position pos:line="23" pos:column="20"/></operator><name pos:line="23" pos:column="17">flags<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">&amp;<pos:position pos:line="23" pos:column="28"/></operator> <name pos:line="23" pos:column="25">IS_VOLUME_USAGE_OFFLINE<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator> <operator pos:line="23" pos:column="50">!=<pos:position pos:line="23" pos:column="52"/></operator> <literal type="number" pos:line="23" pos:column="53">0<pos:position pos:line="23" pos:column="54"/></literal></expr>)<pos:position pos:line="23" pos:column="55"/></condition><then pos:line="23" pos:column="55">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="17">cna_change_volume_status<pos:position pos:line="24" pos:column="41"/></name> <argument_list pos:line="24" pos:column="42">(<argument><expr><name><name pos:line="24" pos:column="43">host<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">name<pos:position pos:line="24" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="55">v<pos:position pos:line="24" pos:column="56"/></name></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="58"/></expr_stmt></block></then></if>

	<expr_stmt><expr><name pos:line="26" pos:column="9">elem_snapshots<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <call><name pos:line="26" pos:column="26">na_elem_child<pos:position pos:line="26" pos:column="39"/></name> <argument_list pos:line="26" pos:column="40">(<argument><expr><name pos:line="26" pos:column="41">data<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="47">"snapshots"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
	<if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">elem_snapshots<pos:position pos:line="27" pos:column="27"/></name> <operator pos:line="27" pos:column="28">==<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">NULL<pos:position pos:line="27" pos:column="35"/></name></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36">
	<block pos:line="28" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="29" pos:column="17">ERROR<pos:position pos:line="29" pos:column="22"/></name> <argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="string" pos:line="29" pos:column="24">"netapp plugin: cna_handle_volume_snap_usage: "<pos:position pos:line="29" pos:column="71"/></literal>
				<literal type="string" pos:line="30" pos:column="33">"na_elem_child (\"snapshots\") failed "<pos:position pos:line="30" pos:column="72"/></literal>
				<literal type="string" pos:line="31" pos:column="33">"for host %s."<pos:position pos:line="31" pos:column="47"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="49">host<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">name<pos:position pos:line="31" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">na_elem_free<pos:position pos:line="32" pos:column="29"/></name><argument_list pos:line="32" pos:column="29">(<argument><expr><name pos:line="32" pos:column="30">data<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
		<return pos:line="33" pos:column="17">return;<pos:position pos:line="33" pos:column="24"/></return>
	}<pos:position pos:line="34" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="36" pos:column="9">iter_snap<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <call><name pos:line="36" pos:column="21">na_child_iterator<pos:position pos:line="36" pos:column="38"/></name> <argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">elem_snapshots<pos:position pos:line="36" pos:column="54"/></name></expr></argument>)<pos:position pos:line="36" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="56"/></expr_stmt>
	<for pos:line="37" pos:column="9">for <control pos:line="37" pos:column="13">(<init><expr><name pos:line="37" pos:column="14">elem_snap<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <call><name pos:line="37" pos:column="26">na_iterator_next<pos:position pos:line="37" pos:column="42"/></name> <argument_list pos:line="37" pos:column="43">(<argument><expr><operator pos:line="37" pos:column="44">&amp;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="45">iter_snap<pos:position pos:line="37" pos:column="54"/></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></init>
			<condition><expr><name pos:line="38" pos:column="25">elem_snap<pos:position pos:line="38" pos:column="34"/></name> <operator pos:line="38" pos:column="35">!=<pos:position pos:line="38" pos:column="37"/></operator> <name pos:line="38" pos:column="38">NULL<pos:position pos:line="38" pos:column="42"/></name></expr>;<pos:position pos:line="38" pos:column="43"/></condition>
			<incr><expr><name pos:line="39" pos:column="25">elem_snap<pos:position pos:line="39" pos:column="34"/></name> <operator pos:line="39" pos:column="35">=<pos:position pos:line="39" pos:column="36"/></operator> <call><name pos:line="39" pos:column="37">na_iterator_next<pos:position pos:line="39" pos:column="53"/></name> <argument_list pos:line="39" pos:column="54">(<argument><expr><operator pos:line="39" pos:column="55">&amp;<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="56">iter_snap<pos:position pos:line="39" pos:column="65"/></name></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr></incr>)<pos:position pos:line="39" pos:column="67"/></control>
	<block pos:line="40" pos:column="9">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">value<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <call><name pos:line="41" pos:column="25">na_child_get_uint64<pos:position pos:line="41" pos:column="44"/></name><argument_list pos:line="41" pos:column="44">(<argument><expr><name pos:line="41" pos:column="45">elem_snap<pos:position pos:line="41" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="56">"cumulative-total"<pos:position pos:line="41" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="76">0<pos:position pos:line="41" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="79"/></expr_stmt>
		<comment type="block" pos:line="42" pos:column="17">/* "cumulative-total" is the total size of the oldest snapshot plus all
		 * newer ones in blocks (1KB). We therefore are looking for the highest
		 * number of all snapshots - that's the size required for the snapshots. */</comment>
		<if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name pos:line="45" pos:column="21">value<pos:position pos:line="45" pos:column="26"/></name> <operator pos:line="45" pos:column="27">&gt;<pos:position pos:line="45" pos:column="31"/></operator> <name pos:line="45" pos:column="29">snap_used<pos:position pos:line="45" pos:column="38"/></name></expr>)<pos:position pos:line="45" pos:column="39"/></condition><then pos:line="45" pos:column="39">
			<block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="25">snap_used<pos:position pos:line="46" pos:column="34"/></name> <operator pos:line="46" pos:column="35">=<pos:position pos:line="46" pos:column="36"/></operator> <name pos:line="46" pos:column="37">value<pos:position pos:line="46" pos:column="42"/></name></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt></block></then></if>
	}<pos:position pos:line="47" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">na_elem_free<pos:position pos:line="48" pos:column="21"/></name> <argument_list pos:line="48" pos:column="22">(<argument><expr><name pos:line="48" pos:column="23">data<pos:position pos:line="48" pos:column="27"/></name></expr></argument>)<pos:position pos:line="48" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
	<comment type="block" pos:line="49" pos:column="9">/* snap_used is in 1024 byte blocks */</comment>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">v<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">snap_used<pos:position pos:line="50" pos:column="21"/></name></name> <operator pos:line="50" pos:column="22">=<pos:position pos:line="50" pos:column="23"/></operator> <name pos:line="50" pos:column="24">snap_used<pos:position pos:line="50" pos:column="33"/></name> <operator pos:line="50" pos:column="34">*<pos:position pos:line="50" pos:column="35"/></operator> <literal type="number" pos:line="50" pos:column="36">1024<pos:position pos:line="50" pos:column="40"/></literal></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">v<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">flags<pos:position pos:line="51" pos:column="17"/></name></name> <operator pos:line="51" pos:column="18">|=<pos:position pos:line="51" pos:column="20"/></operator> <name pos:line="51" pos:column="21">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="51" pos:column="48"/></name></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1819_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wh_config_node<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">oconfig_item_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ci<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <comment type="block" pos:line="1" pos:column="47">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">wh_callback_t<pos:position pos:line="3" pos:column="16"/></name> <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">cb<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">buffer_size<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">char<pos:position pos:line="5" pos:column="7"/></name></type> <name><name pos:line="5" pos:column="8">callback_name<pos:position pos:line="5" pos:column="21"/></name><index pos:line="5" pos:column="21">[<expr><name pos:line="5" pos:column="22">DATA_MAX_NAME_LEN<pos:position pos:line="5" pos:column="39"/></name></expr>]<pos:position pos:line="5" pos:column="40"/></index></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">cb<pos:position pos:line="8" pos:column="5"/></name> <operator pos:line="8" pos:column="6">=<pos:position pos:line="8" pos:column="7"/></operator> <call><name pos:line="8" pos:column="8">calloc<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="18">sizeof<argument_list pos:line="8" pos:column="24">(<argument><expr><operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">cb<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">cb<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"write_http plugin: calloc failed."<pos:position pos:line="10" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">-<pos:position pos:line="11" pos:column="14"/></operator><literal type="number" pos:line="11" pos:column="14">1<pos:position pos:line="11" pos:column="15"/></literal><operator pos:line="11" pos:column="15">)<pos:position pos:line="11" pos:column="16"/></operator></expr>;<pos:position pos:line="11" pos:column="17"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">cb<pos:position pos:line="13" pos:column="5"/></name><operator pos:line="13" pos:column="5">-&gt;<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="7">verify_peer<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">cb<pos:position pos:line="14" pos:column="5"/></name><operator pos:line="14" pos:column="5">-&gt;<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="7">verify_host<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <literal type="number" pos:line="14" pos:column="21">1<pos:position pos:line="14" pos:column="22"/></literal></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="15" pos:column="3">cb<pos:position pos:line="15" pos:column="5"/></name><operator pos:line="15" pos:column="5">-&gt;<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="7">format<pos:position pos:line="15" pos:column="13"/></name></name> <operator pos:line="15" pos:column="14">=<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">WH_FORMAT_COMMAND<pos:position pos:line="15" pos:column="33"/></name></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="16" pos:column="3">cb<pos:position pos:line="16" pos:column="5"/></name><operator pos:line="16" pos:column="5">-&gt;<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="7">sslversion<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">CURL_SSLVERSION_DEFAULT<pos:position pos:line="16" pos:column="43"/></name></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="17" pos:column="3">cb<pos:position pos:line="17" pos:column="5"/></name><operator pos:line="17" pos:column="5">-&gt;<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="7">low_speed_limit<pos:position pos:line="17" pos:column="22"/></name></name> <operator pos:line="17" pos:column="23">=<pos:position pos:line="17" pos:column="24"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="18" pos:column="3">cb<pos:position pos:line="18" pos:column="5"/></name><operator pos:line="18" pos:column="5">-&gt;<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="7">timeout<pos:position pos:line="18" pos:column="14"/></name></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="19" pos:column="3">cb<pos:position pos:line="19" pos:column="5"/></name><operator pos:line="19" pos:column="5">-&gt;<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="7">log_http_error<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="20" pos:column="3">cb<pos:position pos:line="20" pos:column="5"/></name><operator pos:line="20" pos:column="5">-&gt;<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="7">headers<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">cb<pos:position pos:line="21" pos:column="5"/></name><operator pos:line="21" pos:column="5">-&gt;<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="7">send_metrics<pos:position pos:line="21" pos:column="19"/></name></name> <operator pos:line="21" pos:column="20">=<pos:position pos:line="21" pos:column="21"/></operator> <literal type="number" pos:line="21" pos:column="22">1<pos:position pos:line="21" pos:column="23"/></literal></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">cb<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">-&gt;<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="7">send_notifications<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="number" pos:line="22" pos:column="28">0<pos:position pos:line="22" pos:column="29"/></literal></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="24" pos:column="3">pthread_mutex_init<pos:position pos:line="24" pos:column="21"/></name><argument_list pos:line="24" pos:column="21">(<argument><expr><operator pos:line="24" pos:column="22">&amp;<pos:position pos:line="24" pos:column="27"/></operator><name><name pos:line="24" pos:column="23">cb<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">send_lock<pos:position pos:line="24" pos:column="36"/></name></name></expr></argument>, <comment type="block" pos:line="24" pos:column="38">/* attr = */</comment> <argument><expr><name pos:line="24" pos:column="51">NULL<pos:position pos:line="24" pos:column="55"/></name></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">cf_util_get_string<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">ci<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="26">&amp;<pos:position pos:line="26" pos:column="31"/></operator><name><name pos:line="26" pos:column="27">cb<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">name<pos:position pos:line="26" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="28" pos:column="3">/* FIXME: Remove this legacy mode in version 6. */</comment>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><call><name pos:line="29" pos:column="7">strcasecmp<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><literal type="string" pos:line="29" pos:column="18">"URL"<pos:position pos:line="29" pos:column="23"/></literal></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="25">ci<pos:position pos:line="29" pos:column="27"/></name><operator pos:line="29" pos:column="27">-&gt;<pos:position pos:line="29" pos:column="32"/></operator><name pos:line="29" pos:column="29">key<pos:position pos:line="29" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="33"/></argument_list></call> <operator pos:line="29" pos:column="34">==<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="5">cf_util_get_string<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">ci<pos:position pos:line="30" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name><name pos:line="30" pos:column="29">cb<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">location<pos:position pos:line="30" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt></block></then></if>

  <for pos:line="32" pos:column="3">for <control pos:line="32" pos:column="7">(<init><decl><type><name pos:line="32" pos:column="8">int<pos:position pos:line="32" pos:column="11"/></name></type> <name pos:line="32" pos:column="12">i<pos:position pos:line="32" pos:column="13"/></name> <init pos:line="32" pos:column="14">= <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="32" pos:column="18"/></init> <condition><expr><name pos:line="32" pos:column="19">i<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">&lt;<pos:position pos:line="32" pos:column="25"/></operator> <name><name pos:line="32" pos:column="23">ci<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">children_num<pos:position pos:line="32" pos:column="39"/></name></name></expr>;<pos:position pos:line="32" pos:column="40"/></condition> <incr><expr><name pos:line="32" pos:column="41">i<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">++<pos:position pos:line="32" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="45"/></control> <block pos:line="32" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">oconfig_item_t<pos:position pos:line="33" pos:column="19"/></name> <modifier pos:line="33" pos:column="20">*<pos:position pos:line="33" pos:column="21"/></modifier></type><name pos:line="33" pos:column="21">child<pos:position pos:line="33" pos:column="26"/></name> <init pos:line="33" pos:column="27">= <expr><name><name pos:line="33" pos:column="29">ci<pos:position pos:line="33" pos:column="31"/></name><operator pos:line="33" pos:column="31">-&gt;<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="33">children<pos:position pos:line="33" pos:column="41"/></name></name> <operator pos:line="33" pos:column="42">+<pos:position pos:line="33" pos:column="43"/></operator> <name pos:line="33" pos:column="44">i<pos:position pos:line="33" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="46"/></decl_stmt>

    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><call><name pos:line="35" pos:column="9">strcasecmp<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="string" pos:line="35" pos:column="20">"URL"<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="27">child<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">key<pos:position pos:line="35" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="38"/></argument_list></call> <operator pos:line="35" pos:column="39">==<pos:position pos:line="35" pos:column="41"/></operator> <literal type="number" pos:line="35" pos:column="42">0<pos:position pos:line="35" pos:column="43"/></literal></expr>)<pos:position pos:line="35" pos:column="44"/></condition><then pos:line="35" pos:column="44">
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">status<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">=<pos:position pos:line="36" pos:column="15"/></operator> <call><name pos:line="36" pos:column="16">cf_util_get_string<pos:position pos:line="36" pos:column="34"/></name><argument_list pos:line="36" pos:column="34">(<argument><expr><name pos:line="36" pos:column="35">child<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="42">&amp;<pos:position pos:line="36" pos:column="47"/></operator><name><name pos:line="36" pos:column="43">cb<pos:position pos:line="36" pos:column="45"/></name><operator pos:line="36" pos:column="45">-&gt;<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="47">location<pos:position pos:line="36" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="57"/></expr_stmt></block></then>
    <elseif pos:line="37" pos:column="5">else <if pos:line="37" pos:column="10">if <condition pos:line="37" pos:column="13">(<expr><call><name pos:line="37" pos:column="14">strcasecmp<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="string" pos:line="37" pos:column="25">"User"<pos:position pos:line="37" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="33">child<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">key<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call> <operator pos:line="37" pos:column="45">==<pos:position pos:line="37" pos:column="47"/></operator> <literal type="number" pos:line="37" pos:column="48">0<pos:position pos:line="37" pos:column="49"/></literal></expr>)<pos:position pos:line="37" pos:column="50"/></condition><then pos:line="37" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="7">status<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <call><name pos:line="38" pos:column="16">cf_util_get_string<pos:position pos:line="38" pos:column="34"/></name><argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">child<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="42">&amp;<pos:position pos:line="38" pos:column="47"/></operator><name><name pos:line="38" pos:column="43">cb<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">user<pos:position pos:line="38" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><literal type="string" pos:line="39" pos:column="25">"Password"<pos:position pos:line="39" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="37">child<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">-&gt;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="44">key<pos:position pos:line="39" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call> <operator pos:line="39" pos:column="49">==<pos:position pos:line="39" pos:column="51"/></operator> <literal type="number" pos:line="39" pos:column="52">0<pos:position pos:line="39" pos:column="53"/></literal></expr>)<pos:position pos:line="39" pos:column="54"/></condition><then pos:line="39" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">status<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">cf_util_get_string<pos:position pos:line="40" pos:column="34"/></name><argument_list pos:line="40" pos:column="34">(<argument><expr><name pos:line="40" pos:column="35">child<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="42">&amp;<pos:position pos:line="40" pos:column="47"/></operator><name><name pos:line="40" pos:column="43">cb<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">pass<pos:position pos:line="40" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><literal type="string" pos:line="41" pos:column="25">"VerifyPeer"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">child<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">key<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call> <operator pos:line="41" pos:column="51">==<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">status<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">cf_util_get_boolean<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name pos:line="42" pos:column="36">child<pos:position pos:line="42" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="43">&amp;<pos:position pos:line="42" pos:column="48"/></operator><name><name pos:line="42" pos:column="44">cb<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">-&gt;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="48">verify_peer<pos:position pos:line="42" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="43" pos:column="5">else <if pos:line="43" pos:column="10">if <condition pos:line="43" pos:column="13">(<expr><call><name pos:line="43" pos:column="14">strcasecmp<pos:position pos:line="43" pos:column="24"/></name><argument_list pos:line="43" pos:column="24">(<argument><expr><literal type="string" pos:line="43" pos:column="25">"VerifyHost"<pos:position pos:line="43" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="39">child<pos:position pos:line="43" pos:column="44"/></name><operator pos:line="43" pos:column="44">-&gt;<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="46">key<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call> <operator pos:line="43" pos:column="51">==<pos:position pos:line="43" pos:column="53"/></operator> <literal type="number" pos:line="43" pos:column="54">0<pos:position pos:line="43" pos:column="55"/></literal></expr>)<pos:position pos:line="43" pos:column="56"/></condition><then pos:line="43" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">=<pos:position pos:line="44" pos:column="15"/></operator> <call><name pos:line="44" pos:column="16">cf_util_get_boolean<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name pos:line="44" pos:column="36">child<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="43">&amp;<pos:position pos:line="44" pos:column="48"/></operator><name><name pos:line="44" pos:column="44">cb<pos:position pos:line="44" pos:column="46"/></name><operator pos:line="44" pos:column="46">-&gt;<pos:position pos:line="44" pos:column="51"/></operator><name pos:line="44" pos:column="48">verify_host<pos:position pos:line="44" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="45" pos:column="5">else <if pos:line="45" pos:column="10">if <condition pos:line="45" pos:column="13">(<expr><call><name pos:line="45" pos:column="14">strcasecmp<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><literal type="string" pos:line="45" pos:column="25">"CACert"<pos:position pos:line="45" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="35">child<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">key<pos:position pos:line="45" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="46"/></argument_list></call> <operator pos:line="45" pos:column="47">==<pos:position pos:line="45" pos:column="49"/></operator> <literal type="number" pos:line="45" pos:column="50">0<pos:position pos:line="45" pos:column="51"/></literal></expr>)<pos:position pos:line="45" pos:column="52"/></condition><then pos:line="45" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">cf_util_get_string<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">child<pos:position pos:line="46" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="46" pos:column="42">&amp;<pos:position pos:line="46" pos:column="47"/></operator><name><name pos:line="46" pos:column="43">cb<pos:position pos:line="46" pos:column="45"/></name><operator pos:line="46" pos:column="45">-&gt;<pos:position pos:line="46" pos:column="50"/></operator><name pos:line="46" pos:column="47">cacert<pos:position pos:line="46" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="47" pos:column="5">else <if pos:line="47" pos:column="10">if <condition pos:line="47" pos:column="13">(<expr><call><name pos:line="47" pos:column="14">strcasecmp<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><literal type="string" pos:line="47" pos:column="25">"CAPath"<pos:position pos:line="47" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="35">child<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">key<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call> <operator pos:line="47" pos:column="47">==<pos:position pos:line="47" pos:column="49"/></operator> <literal type="number" pos:line="47" pos:column="50">0<pos:position pos:line="47" pos:column="51"/></literal></expr>)<pos:position pos:line="47" pos:column="52"/></condition><then pos:line="47" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="7">status<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">cf_util_get_string<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">child<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="42">&amp;<pos:position pos:line="48" pos:column="47"/></operator><name><name pos:line="48" pos:column="43">cb<pos:position pos:line="48" pos:column="45"/></name><operator pos:line="48" pos:column="45">-&gt;<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="47">capath<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="55"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="49" pos:column="5">else <if pos:line="49" pos:column="10">if <condition pos:line="49" pos:column="13">(<expr><call><name pos:line="49" pos:column="14">strcasecmp<pos:position pos:line="49" pos:column="24"/></name><argument_list pos:line="49" pos:column="24">(<argument><expr><literal type="string" pos:line="49" pos:column="25">"ClientKey"<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="38">child<pos:position pos:line="49" pos:column="43"/></name><operator pos:line="49" pos:column="43">-&gt;<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="45">key<pos:position pos:line="49" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></call> <operator pos:line="49" pos:column="50">==<pos:position pos:line="49" pos:column="52"/></operator> <literal type="number" pos:line="49" pos:column="53">0<pos:position pos:line="49" pos:column="54"/></literal></expr>)<pos:position pos:line="49" pos:column="55"/></condition><then pos:line="49" pos:column="55">
      <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="7">status<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">=<pos:position pos:line="50" pos:column="15"/></operator> <call><name pos:line="50" pos:column="16">cf_util_get_string<pos:position pos:line="50" pos:column="34"/></name><argument_list pos:line="50" pos:column="34">(<argument><expr><name pos:line="50" pos:column="35">child<pos:position pos:line="50" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="42">&amp;<pos:position pos:line="50" pos:column="47"/></operator><name><name pos:line="50" pos:column="43">cb<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">-&gt;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="47">clientkey<pos:position pos:line="50" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="58"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="51" pos:column="5">else <if pos:line="51" pos:column="10">if <condition pos:line="51" pos:column="13">(<expr><call><name pos:line="51" pos:column="14">strcasecmp<pos:position pos:line="51" pos:column="24"/></name><argument_list pos:line="51" pos:column="24">(<argument><expr><literal type="string" pos:line="51" pos:column="25">"ClientCert"<pos:position pos:line="51" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="39">child<pos:position pos:line="51" pos:column="44"/></name><operator pos:line="51" pos:column="44">-&gt;<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="46">key<pos:position pos:line="51" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="50"/></argument_list></call> <operator pos:line="51" pos:column="51">==<pos:position pos:line="51" pos:column="53"/></operator> <literal type="number" pos:line="51" pos:column="54">0<pos:position pos:line="51" pos:column="55"/></literal></expr>)<pos:position pos:line="51" pos:column="56"/></condition><then pos:line="51" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="52" pos:column="7">status<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">cf_util_get_string<pos:position pos:line="52" pos:column="34"/></name><argument_list pos:line="52" pos:column="34">(<argument><expr><name pos:line="52" pos:column="35">child<pos:position pos:line="52" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="42">&amp;<pos:position pos:line="52" pos:column="47"/></operator><name><name pos:line="52" pos:column="43">cb<pos:position pos:line="52" pos:column="45"/></name><operator pos:line="52" pos:column="45">-&gt;<pos:position pos:line="52" pos:column="50"/></operator><name pos:line="52" pos:column="47">clientcert<pos:position pos:line="52" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcasecmp<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">(<argument><expr><literal type="string" pos:line="53" pos:column="25">"ClientKeyPass"<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="42">child<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">-&gt;<pos:position pos:line="53" pos:column="52"/></operator><name pos:line="53" pos:column="49">key<pos:position pos:line="53" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call> <operator pos:line="53" pos:column="54">==<pos:position pos:line="53" pos:column="56"/></operator> <literal type="number" pos:line="53" pos:column="57">0<pos:position pos:line="53" pos:column="58"/></literal></expr>)<pos:position pos:line="53" pos:column="59"/></condition><then pos:line="53" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name pos:line="54" pos:column="7">status<pos:position pos:line="54" pos:column="13"/></name> <operator pos:line="54" pos:column="14">=<pos:position pos:line="54" pos:column="15"/></operator> <call><name pos:line="54" pos:column="16">cf_util_get_string<pos:position pos:line="54" pos:column="34"/></name><argument_list pos:line="54" pos:column="34">(<argument><expr><name pos:line="54" pos:column="35">child<pos:position pos:line="54" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="54" pos:column="42">&amp;<pos:position pos:line="54" pos:column="47"/></operator><name><name pos:line="54" pos:column="43">cb<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">-&gt;<pos:position pos:line="54" pos:column="50"/></operator><name pos:line="54" pos:column="47">clientkeypass<pos:position pos:line="54" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="62"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="55" pos:column="5">else <if pos:line="55" pos:column="10">if <condition pos:line="55" pos:column="13">(<expr><call><name pos:line="55" pos:column="14">strcasecmp<pos:position pos:line="55" pos:column="24"/></name><argument_list pos:line="55" pos:column="24">(<argument><expr><literal type="string" pos:line="55" pos:column="25">"SSLVersion"<pos:position pos:line="55" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="39">child<pos:position pos:line="55" pos:column="44"/></name><operator pos:line="55" pos:column="44">-&gt;<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="46">key<pos:position pos:line="55" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="50"/></argument_list></call> <operator pos:line="55" pos:column="51">==<pos:position pos:line="55" pos:column="53"/></operator> <literal type="number" pos:line="55" pos:column="54">0<pos:position pos:line="55" pos:column="55"/></literal></expr>)<pos:position pos:line="55" pos:column="56"/></condition><then pos:line="55" pos:column="56"> <block pos:line="55" pos:column="57">{
      <decl_stmt><decl><type><name pos:line="56" pos:column="7">char<pos:position pos:line="56" pos:column="11"/></name> <modifier pos:line="56" pos:column="12">*<pos:position pos:line="56" pos:column="13"/></modifier></type><name pos:line="56" pos:column="13">value<pos:position pos:line="56" pos:column="18"/></name> <init pos:line="56" pos:column="19">= <expr><name pos:line="56" pos:column="21">NULL<pos:position pos:line="56" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="56" pos:column="26"/></decl_stmt>

      <expr_stmt><expr><name pos:line="58" pos:column="7">status<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">=<pos:position pos:line="58" pos:column="15"/></operator> <call><name pos:line="58" pos:column="16">cf_util_get_string<pos:position pos:line="58" pos:column="34"/></name><argument_list pos:line="58" pos:column="34">(<argument><expr><name pos:line="58" pos:column="35">child<pos:position pos:line="58" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="58" pos:column="42">&amp;<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="43">value<pos:position pos:line="58" pos:column="48"/></name></expr></argument>)<pos:position pos:line="58" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="50"/></expr_stmt>
      <if pos:line="59" pos:column="7">if <condition pos:line="59" pos:column="10">(<expr><name pos:line="59" pos:column="11">status<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">!=<pos:position pos:line="59" pos:column="20"/></operator> <literal type="number" pos:line="59" pos:column="21">0<pos:position pos:line="59" pos:column="22"/></literal></expr>)<pos:position pos:line="59" pos:column="23"/></condition><then pos:line="59" pos:column="23">
        <block type="pseudo"><break pos:line="60" pos:column="9">break;<pos:position pos:line="60" pos:column="15"/></break></block></then></if>

      <if pos:line="62" pos:column="7">if <condition pos:line="62" pos:column="10">(<expr><name pos:line="62" pos:column="11">value<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">==<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="20">NULL<pos:position pos:line="62" pos:column="24"/></name> <operator pos:line="62" pos:column="25">||<pos:position pos:line="62" pos:column="27"/></operator> <call><name pos:line="62" pos:column="28">strcasecmp<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><literal type="string" pos:line="62" pos:column="39">"default"<pos:position pos:line="62" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">value<pos:position pos:line="62" pos:column="55"/></name></expr></argument>)<pos:position pos:line="62" pos:column="56"/></argument_list></call> <operator pos:line="62" pos:column="57">==<pos:position pos:line="62" pos:column="59"/></operator> <literal type="number" pos:line="62" pos:column="60">0<pos:position pos:line="62" pos:column="61"/></literal></expr>)<pos:position pos:line="62" pos:column="62"/></condition><then pos:line="62" pos:column="62">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="9">cb<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="13">sslversion<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">CURL_SSLVERSION_DEFAULT<pos:position pos:line="63" pos:column="49"/></name></expr>;<pos:position pos:line="63" pos:column="50"/></expr_stmt></block></then>
      <elseif pos:line="64" pos:column="7">else <if pos:line="64" pos:column="12">if <condition pos:line="64" pos:column="15">(<expr><call><name pos:line="64" pos:column="16">strcasecmp<pos:position pos:line="64" pos:column="26"/></name><argument_list pos:line="64" pos:column="26">(<argument><expr><literal type="string" pos:line="64" pos:column="27">"SSLv2"<pos:position pos:line="64" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="36">value<pos:position pos:line="64" pos:column="41"/></name></expr></argument>)<pos:position pos:line="64" pos:column="42"/></argument_list></call> <operator pos:line="64" pos:column="43">==<pos:position pos:line="64" pos:column="45"/></operator> <literal type="number" pos:line="64" pos:column="46">0<pos:position pos:line="64" pos:column="47"/></literal></expr>)<pos:position pos:line="64" pos:column="48"/></condition><then pos:line="64" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="65" pos:column="9">cb<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">sslversion<pos:position pos:line="65" pos:column="23"/></name></name> <operator pos:line="65" pos:column="24">=<pos:position pos:line="65" pos:column="25"/></operator> <name pos:line="65" pos:column="26">CURL_SSLVERSION_SSLv2<pos:position pos:line="65" pos:column="47"/></name></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="66" pos:column="7">else <if pos:line="66" pos:column="12">if <condition pos:line="66" pos:column="15">(<expr><call><name pos:line="66" pos:column="16">strcasecmp<pos:position pos:line="66" pos:column="26"/></name><argument_list pos:line="66" pos:column="26">(<argument><expr><literal type="string" pos:line="66" pos:column="27">"SSLv3"<pos:position pos:line="66" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="36">value<pos:position pos:line="66" pos:column="41"/></name></expr></argument>)<pos:position pos:line="66" pos:column="42"/></argument_list></call> <operator pos:line="66" pos:column="43">==<pos:position pos:line="66" pos:column="45"/></operator> <literal type="number" pos:line="66" pos:column="46">0<pos:position pos:line="66" pos:column="47"/></literal></expr>)<pos:position pos:line="66" pos:column="48"/></condition><then pos:line="66" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="67" pos:column="9">cb<pos:position pos:line="67" pos:column="11"/></name><operator pos:line="67" pos:column="11">-&gt;<pos:position pos:line="67" pos:column="16"/></operator><name pos:line="67" pos:column="13">sslversion<pos:position pos:line="67" pos:column="23"/></name></name> <operator pos:line="67" pos:column="24">=<pos:position pos:line="67" pos:column="25"/></operator> <name pos:line="67" pos:column="26">CURL_SSLVERSION_SSLv3<pos:position pos:line="67" pos:column="47"/></name></expr>;<pos:position pos:line="67" pos:column="48"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="68" pos:column="7">else <if pos:line="68" pos:column="12">if <condition pos:line="68" pos:column="15">(<expr><call><name pos:line="68" pos:column="16">strcasecmp<pos:position pos:line="68" pos:column="26"/></name><argument_list pos:line="68" pos:column="26">(<argument><expr><literal type="string" pos:line="68" pos:column="27">"TLSv1"<pos:position pos:line="68" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="36">value<pos:position pos:line="68" pos:column="41"/></name></expr></argument>)<pos:position pos:line="68" pos:column="42"/></argument_list></call> <operator pos:line="68" pos:column="43">==<pos:position pos:line="68" pos:column="45"/></operator> <literal type="number" pos:line="68" pos:column="46">0<pos:position pos:line="68" pos:column="47"/></literal></expr>)<pos:position pos:line="68" pos:column="48"/></condition><then pos:line="68" pos:column="48">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="9">cb<pos:position pos:line="69" pos:column="11"/></name><operator pos:line="69" pos:column="11">-&gt;<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="13">sslversion<pos:position pos:line="69" pos:column="23"/></name></name> <operator pos:line="69" pos:column="24">=<pos:position pos:line="69" pos:column="25"/></operator> <name pos:line="69" pos:column="26">CURL_SSLVERSION_TLSv1<pos:position pos:line="69" pos:column="47"/></name></expr>;<pos:position pos:line="69" pos:column="48"/></expr_stmt></block></then></if></elseif>
<cpp:if pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">if<pos:position pos:line="70" pos:column="4"/></cpp:directive> <expr><operator pos:line="70" pos:column="5">(<pos:position pos:line="70" pos:column="6"/></operator><name pos:line="70" pos:column="6">LIBCURL_VERSION_MAJOR<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">&gt;<pos:position pos:line="70" pos:column="32"/></operator> <literal type="number" pos:line="70" pos:column="30">7<pos:position pos:line="70" pos:column="31"/></literal><operator pos:line="70" pos:column="31">)<pos:position pos:line="70" pos:column="32"/></operator> <operator pos:line="70" pos:column="33">||<pos:position pos:line="70" pos:column="35"/></operator>                                             \
    <operator pos:line="71" pos:column="5">(<pos:position pos:line="71" pos:column="6"/></operator><name pos:line="71" pos:column="6">LIBCURL_VERSION_MAJOR<pos:position pos:line="71" pos:column="27"/></name> <operator pos:line="71" pos:column="28">==<pos:position pos:line="71" pos:column="30"/></operator> <literal type="number" pos:line="71" pos:column="31">7<pos:position pos:line="71" pos:column="32"/></literal> <operator pos:line="71" pos:column="33">&amp;&amp;<pos:position pos:line="71" pos:column="43"/></operator> <name pos:line="71" pos:column="36">LIBCURL_VERSION_MINOR<pos:position pos:line="71" pos:column="57"/></name> <operator pos:line="71" pos:column="58">&gt;=<pos:position pos:line="71" pos:column="63"/></operator> <literal type="number" pos:line="71" pos:column="61">34<pos:position pos:line="71" pos:column="63"/></literal><operator pos:line="71" pos:column="63">)<pos:position pos:line="71" pos:column="64"/></operator></expr></cpp:if>
      <elseif pos:line="72" pos:column="7">else <if pos:line="72" pos:column="12">if <condition pos:line="72" pos:column="15">(<expr><call><name pos:line="72" pos:column="16">strcasecmp<pos:position pos:line="72" pos:column="26"/></name><argument_list pos:line="72" pos:column="26">(<argument><expr><literal type="string" pos:line="72" pos:column="27">"TLSv1_0"<pos:position pos:line="72" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="38">value<pos:position pos:line="72" pos:column="43"/></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call> <operator pos:line="72" pos:column="45">==<pos:position pos:line="72" pos:column="47"/></operator> <literal type="number" pos:line="72" pos:column="48">0<pos:position pos:line="72" pos:column="49"/></literal></expr>)<pos:position pos:line="72" pos:column="50"/></condition><then pos:line="72" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="73" pos:column="9">cb<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">-&gt;<pos:position pos:line="73" pos:column="16"/></operator><name pos:line="73" pos:column="13">sslversion<pos:position pos:line="73" pos:column="23"/></name></name> <operator pos:line="73" pos:column="24">=<pos:position pos:line="73" pos:column="25"/></operator> <name pos:line="73" pos:column="26">CURL_SSLVERSION_TLSv1_0<pos:position pos:line="73" pos:column="49"/></name></expr>;<pos:position pos:line="73" pos:column="50"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="74" pos:column="7">else <if pos:line="74" pos:column="12">if <condition pos:line="74" pos:column="15">(<expr><call><name pos:line="74" pos:column="16">strcasecmp<pos:position pos:line="74" pos:column="26"/></name><argument_list pos:line="74" pos:column="26">(<argument><expr><literal type="string" pos:line="74" pos:column="27">"TLSv1_1"<pos:position pos:line="74" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="38">value<pos:position pos:line="74" pos:column="43"/></name></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call> <operator pos:line="74" pos:column="45">==<pos:position pos:line="74" pos:column="47"/></operator> <literal type="number" pos:line="74" pos:column="48">0<pos:position pos:line="74" pos:column="49"/></literal></expr>)<pos:position pos:line="74" pos:column="50"/></condition><then pos:line="74" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="9">cb<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">-&gt;<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="13">sslversion<pos:position pos:line="75" pos:column="23"/></name></name> <operator pos:line="75" pos:column="24">=<pos:position pos:line="75" pos:column="25"/></operator> <name pos:line="75" pos:column="26">CURL_SSLVERSION_TLSv1_1<pos:position pos:line="75" pos:column="49"/></name></expr>;<pos:position pos:line="75" pos:column="50"/></expr_stmt></block></then></if></elseif>
      <elseif pos:line="76" pos:column="7">else <if pos:line="76" pos:column="12">if <condition pos:line="76" pos:column="15">(<expr><call><name pos:line="76" pos:column="16">strcasecmp<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">(<argument><expr><literal type="string" pos:line="76" pos:column="27">"TLSv1_2"<pos:position pos:line="76" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="38">value<pos:position pos:line="76" pos:column="43"/></name></expr></argument>)<pos:position pos:line="76" pos:column="44"/></argument_list></call> <operator pos:line="76" pos:column="45">==<pos:position pos:line="76" pos:column="47"/></operator> <literal type="number" pos:line="76" pos:column="48">0<pos:position pos:line="76" pos:column="49"/></literal></expr>)<pos:position pos:line="76" pos:column="50"/></condition><then pos:line="76" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="9">cb<pos:position pos:line="77" pos:column="11"/></name><operator pos:line="77" pos:column="11">-&gt;<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="13">sslversion<pos:position pos:line="77" pos:column="23"/></name></name> <operator pos:line="77" pos:column="24">=<pos:position pos:line="77" pos:column="25"/></operator> <name pos:line="77" pos:column="26">CURL_SSLVERSION_TLSv1_2<pos:position pos:line="77" pos:column="49"/></name></expr>;<pos:position pos:line="77" pos:column="50"/></expr_stmt></block></then></if></elseif>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif<pos:position pos:line="78" pos:column="7"/></cpp:directive></cpp:endif>
      <else pos:line="79" pos:column="7">else <block pos:line="79" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">ERROR<pos:position pos:line="80" pos:column="14"/></name><argument_list pos:line="80" pos:column="14">(<argument><expr><literal type="string" pos:line="80" pos:column="15">"write_http plugin: Invalid SSLVersion "<pos:position pos:line="80" pos:column="55"/></literal>
              <literal type="string" pos:line="81" pos:column="15">"option: %s."<pos:position pos:line="81" pos:column="28"/></literal></expr></argument>,
              <argument><expr><name pos:line="82" pos:column="15">value<pos:position pos:line="82" pos:column="20"/></name></expr></argument>)<pos:position pos:line="82" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="83" pos:column="9">status<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <name pos:line="83" pos:column="18">EINVAL<pos:position pos:line="83" pos:column="24"/></name></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt>
      }<pos:position pos:line="84" pos:column="8"/></block></else></if>

      <expr_stmt><expr><call><name pos:line="86" pos:column="7">sfree<pos:position pos:line="86" pos:column="12"/></name><argument_list pos:line="86" pos:column="12">(<argument><expr><name pos:line="86" pos:column="13">value<pos:position pos:line="86" pos:column="18"/></name></expr></argument>)<pos:position pos:line="86" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if></elseif> <elseif pos:line="87" pos:column="7">else <if pos:line="87" pos:column="12">if <condition pos:line="87" pos:column="15">(<expr><call><name pos:line="87" pos:column="16">strcasecmp<pos:position pos:line="87" pos:column="26"/></name><argument_list pos:line="87" pos:column="26">(<argument><expr><literal type="string" pos:line="87" pos:column="27">"Format"<pos:position pos:line="87" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="37">child<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">key<pos:position pos:line="87" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="87" pos:column="48"/></argument_list></call> <operator pos:line="87" pos:column="49">==<pos:position pos:line="87" pos:column="51"/></operator> <literal type="number" pos:line="87" pos:column="52">0<pos:position pos:line="87" pos:column="53"/></literal></expr>)<pos:position pos:line="87" pos:column="54"/></condition><then pos:line="87" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="7">status<pos:position pos:line="88" pos:column="13"/></name> <operator pos:line="88" pos:column="14">=<pos:position pos:line="88" pos:column="15"/></operator> <call><name pos:line="88" pos:column="16">config_set_format<pos:position pos:line="88" pos:column="33"/></name><argument_list pos:line="88" pos:column="33">(<argument><expr><name pos:line="88" pos:column="34">cb<pos:position pos:line="88" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="38">child<pos:position pos:line="88" pos:column="43"/></name></expr></argument>)<pos:position pos:line="88" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="45"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="89" pos:column="5">else <if pos:line="89" pos:column="10">if <condition pos:line="89" pos:column="13">(<expr><call><name pos:line="89" pos:column="14">strcasecmp<pos:position pos:line="89" pos:column="24"/></name><argument_list pos:line="89" pos:column="24">(<argument><expr><literal type="string" pos:line="89" pos:column="25">"Metrics"<pos:position pos:line="89" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="36">child<pos:position pos:line="89" pos:column="41"/></name><operator pos:line="89" pos:column="41">-&gt;<pos:position pos:line="89" pos:column="46"/></operator><name pos:line="89" pos:column="43">key<pos:position pos:line="89" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="47"/></argument_list></call> <operator pos:line="89" pos:column="48">==<pos:position pos:line="89" pos:column="50"/></operator> <literal type="number" pos:line="89" pos:column="51">0<pos:position pos:line="89" pos:column="52"/></literal></expr>)<pos:position pos:line="89" pos:column="53"/></condition><then pos:line="89" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="90" pos:column="7">cf_util_get_boolean<pos:position pos:line="90" pos:column="26"/></name><argument_list pos:line="90" pos:column="26">(<argument><expr><name pos:line="90" pos:column="27">child<pos:position pos:line="90" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="34">&amp;<pos:position pos:line="90" pos:column="39"/></operator><name><name pos:line="90" pos:column="35">cb<pos:position pos:line="90" pos:column="37"/></name><operator pos:line="90" pos:column="37">-&gt;<pos:position pos:line="90" pos:column="42"/></operator><name pos:line="90" pos:column="39">send_metrics<pos:position pos:line="90" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="90" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="91" pos:column="5">else <if pos:line="91" pos:column="10">if <condition pos:line="91" pos:column="13">(<expr><call><name pos:line="91" pos:column="14">strcasecmp<pos:position pos:line="91" pos:column="24"/></name><argument_list pos:line="91" pos:column="24">(<argument><expr><literal type="string" pos:line="91" pos:column="25">"Notifications"<pos:position pos:line="91" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="42">child<pos:position pos:line="91" pos:column="47"/></name><operator pos:line="91" pos:column="47">-&gt;<pos:position pos:line="91" pos:column="52"/></operator><name pos:line="91" pos:column="49">key<pos:position pos:line="91" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="53"/></argument_list></call> <operator pos:line="91" pos:column="54">==<pos:position pos:line="91" pos:column="56"/></operator> <literal type="number" pos:line="91" pos:column="57">0<pos:position pos:line="91" pos:column="58"/></literal></expr>)<pos:position pos:line="91" pos:column="59"/></condition><then pos:line="91" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="7">cf_util_get_boolean<pos:position pos:line="92" pos:column="26"/></name><argument_list pos:line="92" pos:column="26">(<argument><expr><name pos:line="92" pos:column="27">child<pos:position pos:line="92" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="34">&amp;<pos:position pos:line="92" pos:column="39"/></operator><name><name pos:line="92" pos:column="35">cb<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">-&gt;<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="39">send_notifications<pos:position pos:line="92" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="59"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="93" pos:column="5">else <if pos:line="93" pos:column="10">if <condition pos:line="93" pos:column="13">(<expr><call><name pos:line="93" pos:column="14">strcasecmp<pos:position pos:line="93" pos:column="24"/></name><argument_list pos:line="93" pos:column="24">(<argument><expr><literal type="string" pos:line="93" pos:column="25">"StoreRates"<pos:position pos:line="93" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="39">child<pos:position pos:line="93" pos:column="44"/></name><operator pos:line="93" pos:column="44">-&gt;<pos:position pos:line="93" pos:column="49"/></operator><name pos:line="93" pos:column="46">key<pos:position pos:line="93" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="50"/></argument_list></call> <operator pos:line="93" pos:column="51">==<pos:position pos:line="93" pos:column="53"/></operator> <literal type="number" pos:line="93" pos:column="54">0<pos:position pos:line="93" pos:column="55"/></literal></expr>)<pos:position pos:line="93" pos:column="56"/></condition><then pos:line="93" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="7">status<pos:position pos:line="94" pos:column="13"/></name> <operator pos:line="94" pos:column="14">=<pos:position pos:line="94" pos:column="15"/></operator> <call><name pos:line="94" pos:column="16">cf_util_get_boolean<pos:position pos:line="94" pos:column="35"/></name><argument_list pos:line="94" pos:column="35">(<argument><expr><name pos:line="94" pos:column="36">child<pos:position pos:line="94" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="94" pos:column="43">&amp;<pos:position pos:line="94" pos:column="48"/></operator><name><name pos:line="94" pos:column="44">cb<pos:position pos:line="94" pos:column="46"/></name><operator pos:line="94" pos:column="46">-&gt;<pos:position pos:line="94" pos:column="51"/></operator><name pos:line="94" pos:column="48">store_rates<pos:position pos:line="94" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="95" pos:column="5">else <if pos:line="95" pos:column="10">if <condition pos:line="95" pos:column="13">(<expr><call><name pos:line="95" pos:column="14">strcasecmp<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><literal type="string" pos:line="95" pos:column="25">"BufferSize"<pos:position pos:line="95" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="95" pos:column="39">child<pos:position pos:line="95" pos:column="44"/></name><operator pos:line="95" pos:column="44">-&gt;<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="46">key<pos:position pos:line="95" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="50"/></argument_list></call> <operator pos:line="95" pos:column="51">==<pos:position pos:line="95" pos:column="53"/></operator> <literal type="number" pos:line="95" pos:column="54">0<pos:position pos:line="95" pos:column="55"/></literal></expr>)<pos:position pos:line="95" pos:column="56"/></condition><then pos:line="95" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="7">status<pos:position pos:line="96" pos:column="13"/></name> <operator pos:line="96" pos:column="14">=<pos:position pos:line="96" pos:column="15"/></operator> <call><name pos:line="96" pos:column="16">cf_util_get_int<pos:position pos:line="96" pos:column="31"/></name><argument_list pos:line="96" pos:column="31">(<argument><expr><name pos:line="96" pos:column="32">child<pos:position pos:line="96" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="96" pos:column="39">&amp;<pos:position pos:line="96" pos:column="44"/></operator><name pos:line="96" pos:column="40">buffer_size<pos:position pos:line="96" pos:column="51"/></name></expr></argument>)<pos:position pos:line="96" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="97" pos:column="5">else <if pos:line="97" pos:column="10">if <condition pos:line="97" pos:column="13">(<expr><call><name pos:line="97" pos:column="14">strcasecmp<pos:position pos:line="97" pos:column="24"/></name><argument_list pos:line="97" pos:column="24">(<argument><expr><literal type="string" pos:line="97" pos:column="25">"LowSpeedLimit"<pos:position pos:line="97" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="97" pos:column="42">child<pos:position pos:line="97" pos:column="47"/></name><operator pos:line="97" pos:column="47">-&gt;<pos:position pos:line="97" pos:column="52"/></operator><name pos:line="97" pos:column="49">key<pos:position pos:line="97" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="53"/></argument_list></call> <operator pos:line="97" pos:column="54">==<pos:position pos:line="97" pos:column="56"/></operator> <literal type="number" pos:line="97" pos:column="57">0<pos:position pos:line="97" pos:column="58"/></literal></expr>)<pos:position pos:line="97" pos:column="59"/></condition><then pos:line="97" pos:column="59">
      <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="7">status<pos:position pos:line="98" pos:column="13"/></name> <operator pos:line="98" pos:column="14">=<pos:position pos:line="98" pos:column="15"/></operator> <call><name pos:line="98" pos:column="16">cf_util_get_int<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name pos:line="98" pos:column="32">child<pos:position pos:line="98" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="98" pos:column="39">&amp;<pos:position pos:line="98" pos:column="44"/></operator><name><name pos:line="98" pos:column="40">cb<pos:position pos:line="98" pos:column="42"/></name><operator pos:line="98" pos:column="42">-&gt;<pos:position pos:line="98" pos:column="47"/></operator><name pos:line="98" pos:column="44">low_speed_limit<pos:position pos:line="98" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="61"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="99" pos:column="5">else <if pos:line="99" pos:column="10">if <condition pos:line="99" pos:column="13">(<expr><call><name pos:line="99" pos:column="14">strcasecmp<pos:position pos:line="99" pos:column="24"/></name><argument_list pos:line="99" pos:column="24">(<argument><expr><literal type="string" pos:line="99" pos:column="25">"Timeout"<pos:position pos:line="99" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="36">child<pos:position pos:line="99" pos:column="41"/></name><operator pos:line="99" pos:column="41">-&gt;<pos:position pos:line="99" pos:column="46"/></operator><name pos:line="99" pos:column="43">key<pos:position pos:line="99" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="47"/></argument_list></call> <operator pos:line="99" pos:column="48">==<pos:position pos:line="99" pos:column="50"/></operator> <literal type="number" pos:line="99" pos:column="51">0<pos:position pos:line="99" pos:column="52"/></literal></expr>)<pos:position pos:line="99" pos:column="53"/></condition><then pos:line="99" pos:column="53">
      <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="7">status<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <call><name pos:line="100" pos:column="16">cf_util_get_int<pos:position pos:line="100" pos:column="31"/></name><argument_list pos:line="100" pos:column="31">(<argument><expr><name pos:line="100" pos:column="32">child<pos:position pos:line="100" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="100" pos:column="39">&amp;<pos:position pos:line="100" pos:column="44"/></operator><name><name pos:line="100" pos:column="40">cb<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">timeout<pos:position pos:line="100" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="53"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="101" pos:column="5">else <if pos:line="101" pos:column="10">if <condition pos:line="101" pos:column="13">(<expr><call><name pos:line="101" pos:column="14">strcasecmp<pos:position pos:line="101" pos:column="24"/></name><argument_list pos:line="101" pos:column="24">(<argument><expr><literal type="string" pos:line="101" pos:column="25">"LogHttpError"<pos:position pos:line="101" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="41">child<pos:position pos:line="101" pos:column="46"/></name><operator pos:line="101" pos:column="46">-&gt;<pos:position pos:line="101" pos:column="51"/></operator><name pos:line="101" pos:column="48">key<pos:position pos:line="101" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="52"/></argument_list></call> <operator pos:line="101" pos:column="53">==<pos:position pos:line="101" pos:column="55"/></operator> <literal type="number" pos:line="101" pos:column="56">0<pos:position pos:line="101" pos:column="57"/></literal></expr>)<pos:position pos:line="101" pos:column="58"/></condition><then pos:line="101" pos:column="58">
      <block type="pseudo"><expr_stmt><expr><name pos:line="102" pos:column="7">status<pos:position pos:line="102" pos:column="13"/></name> <operator pos:line="102" pos:column="14">=<pos:position pos:line="102" pos:column="15"/></operator> <call><name pos:line="102" pos:column="16">cf_util_get_boolean<pos:position pos:line="102" pos:column="35"/></name><argument_list pos:line="102" pos:column="35">(<argument><expr><name pos:line="102" pos:column="36">child<pos:position pos:line="102" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="43">&amp;<pos:position pos:line="102" pos:column="48"/></operator><name><name pos:line="102" pos:column="44">cb<pos:position pos:line="102" pos:column="46"/></name><operator pos:line="102" pos:column="46">-&gt;<pos:position pos:line="102" pos:column="51"/></operator><name pos:line="102" pos:column="48">log_http_error<pos:position pos:line="102" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="102" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="64"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="103" pos:column="5">else <if pos:line="103" pos:column="10">if <condition pos:line="103" pos:column="13">(<expr><call><name pos:line="103" pos:column="14">strcasecmp<pos:position pos:line="103" pos:column="24"/></name><argument_list pos:line="103" pos:column="24">(<argument><expr><literal type="string" pos:line="103" pos:column="25">"Header"<pos:position pos:line="103" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="35">child<pos:position pos:line="103" pos:column="40"/></name><operator pos:line="103" pos:column="40">-&gt;<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="42">key<pos:position pos:line="103" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="103" pos:column="46"/></argument_list></call> <operator pos:line="103" pos:column="47">==<pos:position pos:line="103" pos:column="49"/></operator> <literal type="number" pos:line="103" pos:column="50">0<pos:position pos:line="103" pos:column="51"/></literal></expr>)<pos:position pos:line="103" pos:column="52"/></condition><then pos:line="103" pos:column="52">
      <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="7">status<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <call><name pos:line="104" pos:column="16">wh_config_append_string<pos:position pos:line="104" pos:column="39"/></name><argument_list pos:line="104" pos:column="39">(<argument><expr><literal type="string" pos:line="104" pos:column="40">"Header"<pos:position pos:line="104" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="104" pos:column="50">&amp;<pos:position pos:line="104" pos:column="55"/></operator><name><name pos:line="104" pos:column="51">cb<pos:position pos:line="104" pos:column="53"/></name><operator pos:line="104" pos:column="53">-&gt;<pos:position pos:line="104" pos:column="58"/></operator><name pos:line="104" pos:column="55">headers<pos:position pos:line="104" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="64">child<pos:position pos:line="104" pos:column="69"/></name></expr></argument>)<pos:position pos:line="104" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="71"/></expr_stmt></block></then></if></elseif>
    <else pos:line="105" pos:column="5">else <block pos:line="105" pos:column="10">{
      <expr_stmt><expr><call><name pos:line="106" pos:column="7">ERROR<pos:position pos:line="106" pos:column="12"/></name><argument_list pos:line="106" pos:column="12">(<argument><expr><literal type="string" pos:line="106" pos:column="13">"write_http plugin: Invalid configuration "<pos:position pos:line="106" pos:column="56"/></literal>
            <literal type="string" pos:line="107" pos:column="13">"option: %s."<pos:position pos:line="107" pos:column="26"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="108" pos:column="13">child<pos:position pos:line="108" pos:column="18"/></name><operator pos:line="108" pos:column="18">-&gt;<pos:position pos:line="108" pos:column="23"/></operator><name pos:line="108" pos:column="20">key<pos:position pos:line="108" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name pos:line="109" pos:column="7">status<pos:position pos:line="109" pos:column="13"/></name> <operator pos:line="109" pos:column="14">=<pos:position pos:line="109" pos:column="15"/></operator> <name pos:line="109" pos:column="16">EINVAL<pos:position pos:line="109" pos:column="22"/></name></expr>;<pos:position pos:line="109" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></else></if>

    <if pos:line="112" pos:column="5">if <condition pos:line="112" pos:column="8">(<expr><name pos:line="112" pos:column="9">status<pos:position pos:line="112" pos:column="15"/></name> <operator pos:line="112" pos:column="16">!=<pos:position pos:line="112" pos:column="18"/></operator> <literal type="number" pos:line="112" pos:column="19">0<pos:position pos:line="112" pos:column="20"/></literal></expr>)<pos:position pos:line="112" pos:column="21"/></condition><then pos:line="112" pos:column="21">
      <block type="pseudo"><break pos:line="113" pos:column="7">break;<pos:position pos:line="113" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="114" pos:column="4"/></block></for>

  <if pos:line="116" pos:column="3">if <condition pos:line="116" pos:column="6">(<expr><name pos:line="116" pos:column="7">status<pos:position pos:line="116" pos:column="13"/></name> <operator pos:line="116" pos:column="14">!=<pos:position pos:line="116" pos:column="16"/></operator> <literal type="number" pos:line="116" pos:column="17">0<pos:position pos:line="116" pos:column="18"/></literal></expr>)<pos:position pos:line="116" pos:column="19"/></condition><then pos:line="116" pos:column="19"> <block pos:line="116" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">wh_callback_free<pos:position pos:line="117" pos:column="21"/></name><argument_list pos:line="117" pos:column="21">(<argument><expr><name pos:line="117" pos:column="22">cb<pos:position pos:line="117" pos:column="24"/></name></expr></argument>)<pos:position pos:line="117" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="26"/></expr_stmt>
    <return pos:line="118" pos:column="5">return <expr><operator pos:line="118" pos:column="12">(<pos:position pos:line="118" pos:column="13"/></operator><name pos:line="118" pos:column="13">status<pos:position pos:line="118" pos:column="19"/></name><operator pos:line="118" pos:column="19">)<pos:position pos:line="118" pos:column="20"/></operator></expr>;<pos:position pos:line="118" pos:column="21"/></return>
  }<pos:position pos:line="119" pos:column="4"/></block></then></if>

  <if pos:line="121" pos:column="3">if <condition pos:line="121" pos:column="6">(<expr><name><name pos:line="121" pos:column="7">cb<pos:position pos:line="121" pos:column="9"/></name><operator pos:line="121" pos:column="9">-&gt;<pos:position pos:line="121" pos:column="14"/></operator><name pos:line="121" pos:column="11">location<pos:position pos:line="121" pos:column="19"/></name></name> <operator pos:line="121" pos:column="20">==<pos:position pos:line="121" pos:column="22"/></operator> <name pos:line="121" pos:column="23">NULL<pos:position pos:line="121" pos:column="27"/></name></expr>)<pos:position pos:line="121" pos:column="28"/></condition><then pos:line="121" pos:column="28"> <block pos:line="121" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="122" pos:column="5">ERROR<pos:position pos:line="122" pos:column="10"/></name><argument_list pos:line="122" pos:column="10">(<argument><expr><literal type="string" pos:line="122" pos:column="11">"write_http plugin: no URL defined for instance '%s'"<pos:position pos:line="122" pos:column="64"/></literal></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="66">cb<pos:position pos:line="122" pos:column="68"/></name><operator pos:line="122" pos:column="68">-&gt;<pos:position pos:line="122" pos:column="73"/></operator><name pos:line="122" pos:column="70">name<pos:position pos:line="122" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="123" pos:column="5">wh_callback_free<pos:position pos:line="123" pos:column="21"/></name><argument_list pos:line="123" pos:column="21">(<argument><expr><name pos:line="123" pos:column="22">cb<pos:position pos:line="123" pos:column="24"/></name></expr></argument>)<pos:position pos:line="123" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="26"/></expr_stmt>
    <return pos:line="124" pos:column="5">return <expr><operator pos:line="124" pos:column="12">(<pos:position pos:line="124" pos:column="13"/></operator><operator pos:line="124" pos:column="13">-<pos:position pos:line="124" pos:column="14"/></operator><literal type="number" pos:line="124" pos:column="14">1<pos:position pos:line="124" pos:column="15"/></literal><operator pos:line="124" pos:column="15">)<pos:position pos:line="124" pos:column="16"/></operator></expr>;<pos:position pos:line="124" pos:column="17"/></return>
  }<pos:position pos:line="125" pos:column="4"/></block></then></if>

  <if pos:line="127" pos:column="3">if <condition pos:line="127" pos:column="6">(<expr><operator pos:line="127" pos:column="7">!<pos:position pos:line="127" pos:column="8"/></operator><name><name pos:line="127" pos:column="8">cb<pos:position pos:line="127" pos:column="10"/></name><operator pos:line="127" pos:column="10">-&gt;<pos:position pos:line="127" pos:column="15"/></operator><name pos:line="127" pos:column="12">send_metrics<pos:position pos:line="127" pos:column="24"/></name></name> <operator pos:line="127" pos:column="25">&amp;&amp;<pos:position pos:line="127" pos:column="35"/></operator> <operator pos:line="127" pos:column="28">!<pos:position pos:line="127" pos:column="29"/></operator><name><name pos:line="127" pos:column="29">cb<pos:position pos:line="127" pos:column="31"/></name><operator pos:line="127" pos:column="31">-&gt;<pos:position pos:line="127" pos:column="36"/></operator><name pos:line="127" pos:column="33">send_notifications<pos:position pos:line="127" pos:column="51"/></name></name></expr>)<pos:position pos:line="127" pos:column="52"/></condition><then pos:line="127" pos:column="52"> <block pos:line="127" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="128" pos:column="5">ERROR<pos:position pos:line="128" pos:column="10"/></name><argument_list pos:line="128" pos:column="10">(<argument><expr><literal type="string" pos:line="128" pos:column="11">"write_http plugin: Neither metrics nor notifications "<pos:position pos:line="128" pos:column="66"/></literal>
          <literal type="string" pos:line="129" pos:column="11">"are enabled for \"%s\"."<pos:position pos:line="129" pos:column="36"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="130" pos:column="11">cb<pos:position pos:line="130" pos:column="13"/></name><operator pos:line="130" pos:column="13">-&gt;<pos:position pos:line="130" pos:column="18"/></operator><name pos:line="130" pos:column="15">name<pos:position pos:line="130" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="131" pos:column="5">wh_callback_free<pos:position pos:line="131" pos:column="21"/></name><argument_list pos:line="131" pos:column="21">(<argument><expr><name pos:line="131" pos:column="22">cb<pos:position pos:line="131" pos:column="24"/></name></expr></argument>)<pos:position pos:line="131" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="26"/></expr_stmt>
    <return pos:line="132" pos:column="5">return <expr><operator pos:line="132" pos:column="12">(<pos:position pos:line="132" pos:column="13"/></operator><operator pos:line="132" pos:column="13">-<pos:position pos:line="132" pos:column="14"/></operator><literal type="number" pos:line="132" pos:column="14">1<pos:position pos:line="132" pos:column="15"/></literal><operator pos:line="132" pos:column="15">)<pos:position pos:line="132" pos:column="16"/></operator></expr>;<pos:position pos:line="132" pos:column="17"/></return>
  }<pos:position pos:line="133" pos:column="4"/></block></then></if>

  <if pos:line="135" pos:column="3">if <condition pos:line="135" pos:column="6">(<expr><name><name pos:line="135" pos:column="7">cb<pos:position pos:line="135" pos:column="9"/></name><operator pos:line="135" pos:column="9">-&gt;<pos:position pos:line="135" pos:column="14"/></operator><name pos:line="135" pos:column="11">low_speed_limit<pos:position pos:line="135" pos:column="26"/></name></name> <operator pos:line="135" pos:column="27">&gt;<pos:position pos:line="135" pos:column="31"/></operator> <literal type="number" pos:line="135" pos:column="29">0<pos:position pos:line="135" pos:column="30"/></literal></expr>)<pos:position pos:line="135" pos:column="31"/></condition><then pos:line="135" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="5">cb<pos:position pos:line="136" pos:column="7"/></name><operator pos:line="136" pos:column="7">-&gt;<pos:position pos:line="136" pos:column="12"/></operator><name pos:line="136" pos:column="9">low_speed_time<pos:position pos:line="136" pos:column="23"/></name></name> <operator pos:line="136" pos:column="24">=<pos:position pos:line="136" pos:column="25"/></operator> <call><name pos:line="136" pos:column="26">CDTIME_T_TO_TIME_T<pos:position pos:line="136" pos:column="44"/></name><argument_list pos:line="136" pos:column="44">(<argument><expr><call><name pos:line="136" pos:column="45">plugin_get_interval<pos:position pos:line="136" pos:column="64"/></name><argument_list pos:line="136" pos:column="64">()<pos:position pos:line="136" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="68"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="138" pos:column="3">/* Determine send_buffer_size. */</comment>
  <expr_stmt><expr><name><name pos:line="139" pos:column="3">cb<pos:position pos:line="139" pos:column="5"/></name><operator pos:line="139" pos:column="5">-&gt;<pos:position pos:line="139" pos:column="10"/></operator><name pos:line="139" pos:column="7">send_buffer_size<pos:position pos:line="139" pos:column="23"/></name></name> <operator pos:line="139" pos:column="24">=<pos:position pos:line="139" pos:column="25"/></operator> <name pos:line="139" pos:column="26">WRITE_HTTP_DEFAULT_BUFFER_SIZE<pos:position pos:line="139" pos:column="56"/></name></expr>;<pos:position pos:line="139" pos:column="57"/></expr_stmt>
  <if pos:line="140" pos:column="3">if <condition pos:line="140" pos:column="6">(<expr><name pos:line="140" pos:column="7">buffer_size<pos:position pos:line="140" pos:column="18"/></name> <operator pos:line="140" pos:column="19">&gt;=<pos:position pos:line="140" pos:column="24"/></operator> <literal type="number" pos:line="140" pos:column="22">1024<pos:position pos:line="140" pos:column="26"/></literal></expr>)<pos:position pos:line="140" pos:column="27"/></condition><then pos:line="140" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="141" pos:column="5">cb<pos:position pos:line="141" pos:column="7"/></name><operator pos:line="141" pos:column="7">-&gt;<pos:position pos:line="141" pos:column="12"/></operator><name pos:line="141" pos:column="9">send_buffer_size<pos:position pos:line="141" pos:column="25"/></name></name> <operator pos:line="141" pos:column="26">=<pos:position pos:line="141" pos:column="27"/></operator> <operator pos:line="141" pos:column="28">(<pos:position pos:line="141" pos:column="29"/></operator><name pos:line="141" pos:column="29">size_t<pos:position pos:line="141" pos:column="35"/></name><operator pos:line="141" pos:column="35">)<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="36">buffer_size<pos:position pos:line="141" pos:column="47"/></name></expr>;<pos:position pos:line="141" pos:column="48"/></expr_stmt></block></then>
  <elseif pos:line="142" pos:column="3">else <if pos:line="142" pos:column="8">if <condition pos:line="142" pos:column="11">(<expr><name pos:line="142" pos:column="12">buffer_size<pos:position pos:line="142" pos:column="23"/></name> <operator pos:line="142" pos:column="24">!=<pos:position pos:line="142" pos:column="26"/></operator> <literal type="number" pos:line="142" pos:column="27">0<pos:position pos:line="142" pos:column="28"/></literal></expr>)<pos:position pos:line="142" pos:column="29"/></condition><then pos:line="142" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="5">ERROR<pos:position pos:line="143" pos:column="10"/></name><argument_list pos:line="143" pos:column="10">(<argument><expr><literal type="string" pos:line="143" pos:column="11">"write_http plugin: Ignoring invalid BufferSize setting (%d)."<pos:position pos:line="143" pos:column="73"/></literal></expr></argument>,
          <argument><expr><name pos:line="144" pos:column="11">buffer_size<pos:position pos:line="144" pos:column="22"/></name></expr></argument>)<pos:position pos:line="144" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="24"/></expr_stmt></block></then></if></elseif></if>

  <comment type="block" pos:line="146" pos:column="3">/* Allocate the buffer. */</comment>
  <expr_stmt><expr><name><name pos:line="147" pos:column="3">cb<pos:position pos:line="147" pos:column="5"/></name><operator pos:line="147" pos:column="5">-&gt;<pos:position pos:line="147" pos:column="10"/></operator><name pos:line="147" pos:column="7">send_buffer<pos:position pos:line="147" pos:column="18"/></name></name> <operator pos:line="147" pos:column="19">=<pos:position pos:line="147" pos:column="20"/></operator> <call><name pos:line="147" pos:column="21">malloc<pos:position pos:line="147" pos:column="27"/></name><argument_list pos:line="147" pos:column="27">(<argument><expr><name><name pos:line="147" pos:column="28">cb<pos:position pos:line="147" pos:column="30"/></name><operator pos:line="147" pos:column="30">-&gt;<pos:position pos:line="147" pos:column="35"/></operator><name pos:line="147" pos:column="32">send_buffer_size<pos:position pos:line="147" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="50"/></expr_stmt>
  <if pos:line="148" pos:column="3">if <condition pos:line="148" pos:column="6">(<expr><name><name pos:line="148" pos:column="7">cb<pos:position pos:line="148" pos:column="9"/></name><operator pos:line="148" pos:column="9">-&gt;<pos:position pos:line="148" pos:column="14"/></operator><name pos:line="148" pos:column="11">send_buffer<pos:position pos:line="148" pos:column="22"/></name></name> <operator pos:line="148" pos:column="23">==<pos:position pos:line="148" pos:column="25"/></operator> <name pos:line="148" pos:column="26">NULL<pos:position pos:line="148" pos:column="30"/></name></expr>)<pos:position pos:line="148" pos:column="31"/></condition><then pos:line="148" pos:column="31"> <block pos:line="148" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="149" pos:column="5">ERROR<pos:position pos:line="149" pos:column="10"/></name><argument_list pos:line="149" pos:column="10">(<argument><expr><literal type="string" pos:line="149" pos:column="11">"write_http plugin: malloc(%zu) failed."<pos:position pos:line="149" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="149" pos:column="53">cb<pos:position pos:line="149" pos:column="55"/></name><operator pos:line="149" pos:column="55">-&gt;<pos:position pos:line="149" pos:column="60"/></operator><name pos:line="149" pos:column="57">send_buffer_size<pos:position pos:line="149" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="150" pos:column="5">wh_callback_free<pos:position pos:line="150" pos:column="21"/></name><argument_list pos:line="150" pos:column="21">(<argument><expr><name pos:line="150" pos:column="22">cb<pos:position pos:line="150" pos:column="24"/></name></expr></argument>)<pos:position pos:line="150" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="26"/></expr_stmt>
    <return pos:line="151" pos:column="5">return <expr><operator pos:line="151" pos:column="12">(<pos:position pos:line="151" pos:column="13"/></operator><operator pos:line="151" pos:column="13">-<pos:position pos:line="151" pos:column="14"/></operator><literal type="number" pos:line="151" pos:column="14">1<pos:position pos:line="151" pos:column="15"/></literal><operator pos:line="151" pos:column="15">)<pos:position pos:line="151" pos:column="16"/></operator></expr>;<pos:position pos:line="151" pos:column="17"/></return>
  }<pos:position pos:line="152" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="153" pos:column="3">/* Nulls the buffer and sets ..._free and ..._fill. */</comment>
  <expr_stmt><expr><call><name pos:line="154" pos:column="3">wh_reset_buffer<pos:position pos:line="154" pos:column="18"/></name><argument_list pos:line="154" pos:column="18">(<argument><expr><name pos:line="154" pos:column="19">cb<pos:position pos:line="154" pos:column="21"/></name></expr></argument>)<pos:position pos:line="154" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="23"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="156" pos:column="3">ssnprintf<pos:position pos:line="156" pos:column="12"/></name><argument_list pos:line="156" pos:column="12">(<argument><expr><name pos:line="156" pos:column="13">callback_name<pos:position pos:line="156" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="156" pos:column="28">sizeof<argument_list pos:line="156" pos:column="34">(<argument><expr><name pos:line="156" pos:column="35">callback_name<pos:position pos:line="156" pos:column="48"/></name></expr></argument>)<pos:position pos:line="156" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="51">"write_http/%s"<pos:position pos:line="156" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="156" pos:column="68">cb<pos:position pos:line="156" pos:column="70"/></name><operator pos:line="156" pos:column="70">-&gt;<pos:position pos:line="156" pos:column="75"/></operator><name pos:line="156" pos:column="72">name<pos:position pos:line="156" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="156" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="78"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="157" pos:column="3">DEBUG<pos:position pos:line="157" pos:column="8"/></name><argument_list pos:line="157" pos:column="8">(<argument><expr><literal type="string" pos:line="157" pos:column="9">"write_http: Registering write callback '%s' with URL '%s'"<pos:position pos:line="157" pos:column="68"/></literal></expr></argument>,
        <argument><expr><name pos:line="158" pos:column="9">callback_name<pos:position pos:line="158" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="158" pos:column="24">cb<pos:position pos:line="158" pos:column="26"/></name><operator pos:line="158" pos:column="26">-&gt;<pos:position pos:line="158" pos:column="31"/></operator><name pos:line="158" pos:column="28">location<pos:position pos:line="158" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="158" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="38"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="160" pos:column="3">user_data_t<pos:position pos:line="160" pos:column="14"/></name></type> <name pos:line="160" pos:column="15">user_data<pos:position pos:line="160" pos:column="24"/></name> <init pos:line="160" pos:column="25">= <expr><block pos:line="160" pos:column="27">{
      <expr><operator pos:line="161" pos:column="7">.<pos:position pos:line="161" pos:column="8"/></operator><name pos:line="161" pos:column="8">data<pos:position pos:line="161" pos:column="12"/></name> <operator pos:line="161" pos:column="13">=<pos:position pos:line="161" pos:column="14"/></operator> <name pos:line="161" pos:column="15">cb<pos:position pos:line="161" pos:column="17"/></name></expr>, <expr><operator pos:line="161" pos:column="19">.<pos:position pos:line="161" pos:column="20"/></operator><name pos:line="161" pos:column="20">free_func<pos:position pos:line="161" pos:column="29"/></name> <operator pos:line="161" pos:column="30">=<pos:position pos:line="161" pos:column="31"/></operator> <name pos:line="161" pos:column="32">wh_callback_free<pos:position pos:line="161" pos:column="48"/></name></expr>,
  }<pos:position pos:line="162" pos:column="4"/></block></expr></init></decl>;<pos:position pos:line="162" pos:column="5"/></decl_stmt>

  <if pos:line="164" pos:column="3">if <condition pos:line="164" pos:column="6">(<expr><name><name pos:line="164" pos:column="7">cb<pos:position pos:line="164" pos:column="9"/></name><operator pos:line="164" pos:column="9">-&gt;<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="11">send_metrics<pos:position pos:line="164" pos:column="23"/></name></name></expr>)<pos:position pos:line="164" pos:column="24"/></condition><then pos:line="164" pos:column="24"> <block pos:line="164" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="165" pos:column="5">plugin_register_write<pos:position pos:line="165" pos:column="26"/></name><argument_list pos:line="165" pos:column="26">(<argument><expr><name pos:line="165" pos:column="27">callback_name<pos:position pos:line="165" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="165" pos:column="42">wh_write<pos:position pos:line="165" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="165" pos:column="52">&amp;<pos:position pos:line="165" pos:column="57"/></operator><name pos:line="165" pos:column="53">user_data<pos:position pos:line="165" pos:column="62"/></name></expr></argument>)<pos:position pos:line="165" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="166" pos:column="5">user_data<pos:position pos:line="166" pos:column="14"/></name><operator pos:line="166" pos:column="14">.<pos:position pos:line="166" pos:column="15"/></operator><name pos:line="166" pos:column="15">free_func<pos:position pos:line="166" pos:column="24"/></name></name> <operator pos:line="166" pos:column="25">=<pos:position pos:line="166" pos:column="26"/></operator> <name pos:line="166" pos:column="27">NULL<pos:position pos:line="166" pos:column="31"/></name></expr>;<pos:position pos:line="166" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="168" pos:column="5">plugin_register_flush<pos:position pos:line="168" pos:column="26"/></name><argument_list pos:line="168" pos:column="26">(<argument><expr><name pos:line="168" pos:column="27">callback_name<pos:position pos:line="168" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="168" pos:column="42">wh_flush<pos:position pos:line="168" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="168" pos:column="52">&amp;<pos:position pos:line="168" pos:column="57"/></operator><name pos:line="168" pos:column="53">user_data<pos:position pos:line="168" pos:column="62"/></name></expr></argument>)<pos:position pos:line="168" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="64"/></expr_stmt>
  }<pos:position pos:line="169" pos:column="4"/></block></then></if>

  <if pos:line="171" pos:column="3">if <condition pos:line="171" pos:column="6">(<expr><name><name pos:line="171" pos:column="7">cb<pos:position pos:line="171" pos:column="9"/></name><operator pos:line="171" pos:column="9">-&gt;<pos:position pos:line="171" pos:column="14"/></operator><name pos:line="171" pos:column="11">send_notifications<pos:position pos:line="171" pos:column="29"/></name></name></expr>)<pos:position pos:line="171" pos:column="30"/></condition><then pos:line="171" pos:column="30"> <block pos:line="171" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="172" pos:column="5">plugin_register_notification<pos:position pos:line="172" pos:column="33"/></name><argument_list pos:line="172" pos:column="33">(<argument><expr><name pos:line="172" pos:column="34">callback_name<pos:position pos:line="172" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="172" pos:column="49">wh_notify<pos:position pos:line="172" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="172" pos:column="60">&amp;<pos:position pos:line="172" pos:column="65"/></operator><name pos:line="172" pos:column="61">user_data<pos:position pos:line="172" pos:column="70"/></name></expr></argument>)<pos:position pos:line="172" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="173" pos:column="5">user_data<pos:position pos:line="173" pos:column="14"/></name><operator pos:line="173" pos:column="14">.<pos:position pos:line="173" pos:column="15"/></operator><name pos:line="173" pos:column="15">free_func<pos:position pos:line="173" pos:column="24"/></name></name> <operator pos:line="173" pos:column="25">=<pos:position pos:line="173" pos:column="26"/></operator> <name pos:line="173" pos:column="27">NULL<pos:position pos:line="173" pos:column="31"/></name></expr>;<pos:position pos:line="173" pos:column="32"/></expr_stmt>
  }<pos:position pos:line="174" pos:column="4"/></block></then></if>

  <return pos:line="176" pos:column="3">return <expr><operator pos:line="176" pos:column="10">(<pos:position pos:line="176" pos:column="11"/></operator><literal type="number" pos:line="176" pos:column="11">0<pos:position pos:line="176" pos:column="12"/></literal><operator pos:line="176" pos:column="12">)<pos:position pos:line="176" pos:column="13"/></operator></expr>;<pos:position pos:line="176" pos:column="14"/></return>
}<pos:position pos:line="177" pos:column="2"/></block></function></unit>

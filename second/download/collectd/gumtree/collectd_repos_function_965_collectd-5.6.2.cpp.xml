<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_965_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">value_list2hv<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">pTHX_<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">value_list_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">vl<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">data_set_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">ds<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="66">HV<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">hash<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <block pos:line="1" pos:column="76">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">AV<pos:position pos:line="2" pos:column="5"/></name> <modifier pos:line="2" pos:column="6">*<pos:position pos:line="2" pos:column="7"/></modifier></type><name pos:line="2" pos:column="7">values<pos:position pos:line="2" pos:column="13"/></name> <init pos:line="2" pos:column="14">= <expr><name pos:line="2" pos:column="16">NULL<pos:position pos:line="2" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">size_t<pos:position pos:line="3" pos:column="9"/></name></type> <name pos:line="3" pos:column="10">i<pos:position pos:line="3" pos:column="11"/></name></decl>;<pos:position pos:line="3" pos:column="12"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">NULL<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">==<pos:position pos:line="5" pos:column="15"/></operator> <name pos:line="5" pos:column="16">vl<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">)<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="20">||<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">==<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="32">ds<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">)<pos:position pos:line="5" pos:column="35"/></operator> <operator pos:line="5" pos:column="36">||<pos:position pos:line="5" pos:column="38"/></operator> <operator pos:line="5" pos:column="39">(<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="40">NULL<pos:position pos:line="5" pos:column="44"/></name> <operator pos:line="5" pos:column="45">==<pos:position pos:line="5" pos:column="47"/></operator> <name pos:line="5" pos:column="48">hash<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">)<pos:position pos:line="5" pos:column="53"/></operator></expr>)<pos:position pos:line="5" pos:column="54"/></condition><then pos:line="5" pos:column="54">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">values<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">newAV<pos:position pos:line="8" pos:column="17"/></name><argument_list pos:line="8" pos:column="17">()<pos:position pos:line="8" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
  <comment type="block" pos:line="9" pos:column="3">/* av_extend takes the last *index* to which the array should be extended. */</comment>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">av_extend<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">values<pos:position pos:line="10" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="21">vl<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">values_len<pos:position pos:line="10" pos:column="35"/></name></name> <operator pos:line="10" pos:column="36">-<pos:position pos:line="10" pos:column="37"/></operator> <literal type="number" pos:line="10" pos:column="38">1<pos:position pos:line="10" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">assert<pos:position pos:line="12" pos:column="9"/></name><argument_list pos:line="12" pos:column="9">(<argument><expr><name><name pos:line="12" pos:column="10">ds<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">ds_num<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">==<pos:position pos:line="12" pos:column="23"/></operator> <name><name pos:line="12" pos:column="24">vl<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">values_len<pos:position pos:line="12" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>
  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><expr><name pos:line="13" pos:column="8">i<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <literal type="number" pos:line="13" pos:column="12">0<pos:position pos:line="13" pos:column="13"/></literal></expr>;<pos:position pos:line="13" pos:column="14"/></init> <condition><expr><name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">&lt;<pos:position pos:line="13" pos:column="21"/></operator> <name><name pos:line="13" pos:column="19">vl<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">values_len<pos:position pos:line="13" pos:column="33"/></name></name></expr>;<pos:position pos:line="13" pos:column="34"/></condition> <incr><expr><operator pos:line="13" pos:column="35">++<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">i<pos:position pos:line="13" pos:column="38"/></name></expr></incr>)<pos:position pos:line="13" pos:column="39"/></control> <block pos:line="13" pos:column="40">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">SV<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">val<pos:position pos:line="14" pos:column="12"/></name> <init pos:line="14" pos:column="13">= <expr><name pos:line="14" pos:column="15">NULL<pos:position pos:line="14" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">DS_TYPE_COUNTER<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">==<pos:position pos:line="16" pos:column="27"/></operator> <name><name pos:line="16" pos:column="28">ds<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">ds<pos:position pos:line="16" pos:column="34"/></name><index pos:line="16" pos:column="34">[<expr><name pos:line="16" pos:column="35">i<pos:position pos:line="16" pos:column="36"/></name></expr>]<pos:position pos:line="16" pos:column="37"/></index></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">type<pos:position pos:line="16" pos:column="42"/></name></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
      <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="7">val<pos:position pos:line="17" pos:column="10"/></name> <operator pos:line="17" pos:column="11">=<pos:position pos:line="17" pos:column="12"/></operator> <call><name pos:line="17" pos:column="13">newSViv<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">vl<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">values<pos:position pos:line="17" pos:column="31"/></name><index pos:line="17" pos:column="31">[<expr><name pos:line="17" pos:column="32">i<pos:position pos:line="17" pos:column="33"/></name></expr>]<pos:position pos:line="17" pos:column="34"/></index></name><operator pos:line="17" pos:column="34">.<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">counter<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt></block></then>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><name pos:line="18" pos:column="14">DS_TYPE_GAUGE<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">==<pos:position pos:line="18" pos:column="30"/></operator> <name><name pos:line="18" pos:column="31">ds<pos:position pos:line="18" pos:column="33"/></name><operator pos:line="18" pos:column="33">-&gt;<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="35">ds<pos:position pos:line="18" pos:column="37"/></name><index pos:line="18" pos:column="37">[<expr><name pos:line="18" pos:column="38">i<pos:position pos:line="18" pos:column="39"/></name></expr>]<pos:position pos:line="18" pos:column="40"/></index></name><operator pos:line="18" pos:column="40">.<pos:position pos:line="18" pos:column="41"/></operator><name pos:line="18" pos:column="41">type<pos:position pos:line="18" pos:column="45"/></name></expr>)<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="7">val<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">newSVnv<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name><name pos:line="19" pos:column="21">vl<pos:position pos:line="19" pos:column="23"/></name><operator pos:line="19" pos:column="23">-&gt;<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="25">values<pos:position pos:line="19" pos:column="31"/></name><index pos:line="19" pos:column="31">[<expr><name pos:line="19" pos:column="32">i<pos:position pos:line="19" pos:column="33"/></name></expr>]<pos:position pos:line="19" pos:column="34"/></index></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">gauge<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name pos:line="20" pos:column="14">DS_TYPE_DERIVE<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">==<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">ds<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">ds<pos:position pos:line="20" pos:column="38"/></name><index pos:line="20" pos:column="38">[<expr><name pos:line="20" pos:column="39">i<pos:position pos:line="20" pos:column="40"/></name></expr>]<pos:position pos:line="20" pos:column="41"/></index></name><operator pos:line="20" pos:column="41">.<pos:position pos:line="20" pos:column="42"/></operator><name pos:line="20" pos:column="42">type<pos:position pos:line="20" pos:column="46"/></name></expr>)<pos:position pos:line="20" pos:column="47"/></condition><then pos:line="20" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="7">val<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <call><name pos:line="21" pos:column="13">newSViv<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><name><name pos:line="21" pos:column="21">vl<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">values<pos:position pos:line="21" pos:column="31"/></name><index pos:line="21" pos:column="31">[<expr><name pos:line="21" pos:column="32">i<pos:position pos:line="21" pos:column="33"/></name></expr>]<pos:position pos:line="21" pos:column="34"/></index></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">derive<pos:position pos:line="21" pos:column="41"/></name></expr></argument>)<pos:position pos:line="21" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="22" pos:column="5">else <if pos:line="22" pos:column="10">if <condition pos:line="22" pos:column="13">(<expr><name pos:line="22" pos:column="14">DS_TYPE_ABSOLUTE<pos:position pos:line="22" pos:column="30"/></name> <operator pos:line="22" pos:column="31">==<pos:position pos:line="22" pos:column="33"/></operator> <name><name pos:line="22" pos:column="34">ds<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">-&gt;<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="38">ds<pos:position pos:line="22" pos:column="40"/></name><index pos:line="22" pos:column="40">[<expr><name pos:line="22" pos:column="41">i<pos:position pos:line="22" pos:column="42"/></name></expr>]<pos:position pos:line="22" pos:column="43"/></index></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="44">type<pos:position pos:line="22" pos:column="48"/></name></expr>)<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="7">val<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <call><name pos:line="23" pos:column="13">newSViv<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><name><name pos:line="23" pos:column="21">vl<pos:position pos:line="23" pos:column="23"/></name><operator pos:line="23" pos:column="23">-&gt;<pos:position pos:line="23" pos:column="28"/></operator><name pos:line="23" pos:column="25">values<pos:position pos:line="23" pos:column="31"/></name><index pos:line="23" pos:column="31">[<expr><name pos:line="23" pos:column="32">i<pos:position pos:line="23" pos:column="33"/></name></expr>]<pos:position pos:line="23" pos:column="34"/></index></name><operator pos:line="23" pos:column="34">.<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="35">absolute<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">NULL<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">==<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">av_store<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">values<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">i<pos:position pos:line="25" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="37">val<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="42"/></condition><then pos:line="25" pos:column="42"> <block pos:line="25" pos:column="43">{
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">av_undef<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><name pos:line="26" pos:column="16">values<pos:position pos:line="26" pos:column="22"/></name></expr></argument>)<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>
      <return pos:line="27" pos:column="7">return <expr><operator pos:line="27" pos:column="14">-<pos:position pos:line="27" pos:column="15"/></operator><literal type="number" pos:line="27" pos:column="15">1<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></for>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">NULL<pos:position pos:line="31" pos:column="11"/></name> <operator pos:line="31" pos:column="12">==<pos:position pos:line="31" pos:column="14"/></operator> <call><name pos:line="31" pos:column="15">hv_store<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">hash<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="30">"values"<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="40">6<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="43">newRV_noinc<pos:position pos:line="31" pos:column="54"/></name><argument_list pos:line="31" pos:column="54">(<argument><expr><operator pos:line="31" pos:column="55">(<pos:position pos:line="31" pos:column="56"/></operator><name pos:line="31" pos:column="56">SV<pos:position pos:line="31" pos:column="58"/></name> <operator pos:line="31" pos:column="59">*<pos:position pos:line="31" pos:column="60"/></operator><operator pos:line="31" pos:column="60">)<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="61">values<pos:position pos:line="31" pos:column="67"/></name></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="70">0<pos:position pos:line="31" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="73"/></condition><then pos:line="31" pos:column="73">
    <block type="pseudo"><return pos:line="32" pos:column="5">return <expr><operator pos:line="32" pos:column="12">-<pos:position pos:line="32" pos:column="13"/></operator><literal type="number" pos:line="32" pos:column="13">1<pos:position pos:line="32" pos:column="14"/></literal></expr>;<pos:position pos:line="32" pos:column="15"/></return></block></then></if>

  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><literal type="number" pos:line="34" pos:column="7">0<pos:position pos:line="34" pos:column="8"/></literal> <operator pos:line="34" pos:column="9">!=<pos:position pos:line="34" pos:column="11"/></operator> <name><name pos:line="34" pos:column="12">vl<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">time<pos:position pos:line="34" pos:column="20"/></name></name></expr>)<pos:position pos:line="34" pos:column="21"/></condition><then pos:line="34" pos:column="21"> <block pos:line="34" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">double<pos:position pos:line="35" pos:column="11"/></name></type> <name pos:line="35" pos:column="12">t<pos:position pos:line="35" pos:column="13"/></name> <init pos:line="35" pos:column="14">= <expr><call><name pos:line="35" pos:column="16">CDTIME_T_TO_DOUBLE<pos:position pos:line="35" pos:column="34"/></name><argument_list pos:line="35" pos:column="34">(<argument><expr><name><name pos:line="35" pos:column="35">vl<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">time<pos:position pos:line="35" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="45"/></decl_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">NULL<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">==<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">hv_store<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">hash<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="32">"time"<pos:position pos:line="36" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="40">4<pos:position pos:line="36" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="43">newSVnv<pos:position pos:line="36" pos:column="50"/></name><argument_list pos:line="36" pos:column="50">(<argument><expr><name pos:line="36" pos:column="51">t<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="55">0<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="58"/></condition><then pos:line="36" pos:column="58">
      <block type="pseudo"><return pos:line="37" pos:column="7">return <expr><operator pos:line="37" pos:column="14">-<pos:position pos:line="37" pos:column="15"/></operator><literal type="number" pos:line="37" pos:column="15">1<pos:position pos:line="37" pos:column="16"/></literal></expr>;<pos:position pos:line="37" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="38" pos:column="4"/></block></then></if>

  <block pos:line="40" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">double<pos:position pos:line="41" pos:column="11"/></name></type> <name pos:line="41" pos:column="12">t<pos:position pos:line="41" pos:column="13"/></name> <init pos:line="41" pos:column="14">= <expr><call><name pos:line="41" pos:column="16">CDTIME_T_TO_DOUBLE<pos:position pos:line="41" pos:column="34"/></name><argument_list pos:line="41" pos:column="34">(<argument><expr><name><name pos:line="41" pos:column="35">vl<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">interval<pos:position pos:line="41" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="49"/></decl_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">NULL<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">==<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">hv_store<pos:position pos:line="42" pos:column="25"/></name><argument_list pos:line="42" pos:column="25">(<argument><expr><name pos:line="42" pos:column="26">hash<pos:position pos:line="42" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="32">"interval"<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="44">8<pos:position pos:line="42" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="42" pos:column="47">newSVnv<pos:position pos:line="42" pos:column="54"/></name><argument_list pos:line="42" pos:column="54">(<argument><expr><name pos:line="42" pos:column="55">t<pos:position pos:line="42" pos:column="56"/></name></expr></argument>)<pos:position pos:line="42" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="59">0<pos:position pos:line="42" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="62"/></condition><then pos:line="42" pos:column="62">
      <block type="pseudo"><return pos:line="43" pos:column="7">return <expr><operator pos:line="43" pos:column="14">-<pos:position pos:line="43" pos:column="15"/></operator><literal type="number" pos:line="43" pos:column="15">1<pos:position pos:line="43" pos:column="16"/></literal></expr>;<pos:position pos:line="43" pos:column="17"/></return></block></then></if>
  }<pos:position pos:line="44" pos:column="4"/></block>

  <if pos:line="46" pos:column="3">if <condition pos:line="46" pos:column="6">(<expr><literal type="char" pos:line="46" pos:column="7">'\0'<pos:position pos:line="46" pos:column="11"/></literal> <operator pos:line="46" pos:column="12">!=<pos:position pos:line="46" pos:column="14"/></operator> <name><name pos:line="46" pos:column="15">vl<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">host<pos:position pos:line="46" pos:column="23"/></name><index pos:line="46" pos:column="23">[<expr><literal type="number" pos:line="46" pos:column="24">0<pos:position pos:line="46" pos:column="25"/></literal></expr>]<pos:position pos:line="46" pos:column="26"/></index></name></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27">
    <block type="pseudo"><if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">NULL<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">==<pos:position pos:line="47" pos:column="16"/></operator> <call><name pos:line="47" pos:column="17">hv_store<pos:position pos:line="47" pos:column="25"/></name><argument_list pos:line="47" pos:column="25">(<argument><expr><name pos:line="47" pos:column="26">hash<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="32">"host"<pos:position pos:line="47" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="40">4<pos:position pos:line="47" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="43">newSVpv<pos:position pos:line="47" pos:column="50"/></name><argument_list pos:line="47" pos:column="50">(<argument><expr><name><name pos:line="47" pos:column="51">vl<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">-&gt;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="55">host<pos:position pos:line="47" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="61">0<pos:position pos:line="47" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="65">0<pos:position pos:line="47" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="68"/></condition><then pos:line="47" pos:column="68">
      <block type="pseudo"><return pos:line="48" pos:column="7">return <expr><operator pos:line="48" pos:column="14">-<pos:position pos:line="48" pos:column="15"/></operator><literal type="number" pos:line="48" pos:column="15">1<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><literal type="char" pos:line="50" pos:column="7">'\0'<pos:position pos:line="50" pos:column="11"/></literal> <operator pos:line="50" pos:column="12">!=<pos:position pos:line="50" pos:column="14"/></operator> <name><name pos:line="50" pos:column="15">vl<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">-&gt;<pos:position pos:line="50" pos:column="22"/></operator><name pos:line="50" pos:column="19">plugin<pos:position pos:line="50" pos:column="25"/></name><index pos:line="50" pos:column="25">[<expr><literal type="number" pos:line="50" pos:column="26">0<pos:position pos:line="50" pos:column="27"/></literal></expr>]<pos:position pos:line="50" pos:column="28"/></index></name></expr>)<pos:position pos:line="50" pos:column="29"/></condition><then pos:line="50" pos:column="29">
    <block type="pseudo"><if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">NULL<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">==<pos:position pos:line="51" pos:column="16"/></operator> <call><name pos:line="51" pos:column="17">hv_store<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name pos:line="51" pos:column="26">hash<pos:position pos:line="51" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="32">"plugin"<pos:position pos:line="51" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="42">6<pos:position pos:line="51" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="45">newSVpv<pos:position pos:line="51" pos:column="52"/></name><argument_list pos:line="51" pos:column="52">(<argument><expr><name><name pos:line="51" pos:column="53">vl<pos:position pos:line="51" pos:column="55"/></name><operator pos:line="51" pos:column="55">-&gt;<pos:position pos:line="51" pos:column="60"/></operator><name pos:line="51" pos:column="57">plugin<pos:position pos:line="51" pos:column="63"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="65">0<pos:position pos:line="51" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="69">0<pos:position pos:line="51" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="51" pos:column="72"/></condition><then pos:line="51" pos:column="72">
      <block type="pseudo"><return pos:line="52" pos:column="7">return <expr><operator pos:line="52" pos:column="14">-<pos:position pos:line="52" pos:column="15"/></operator><literal type="number" pos:line="52" pos:column="15">1<pos:position pos:line="52" pos:column="16"/></literal></expr>;<pos:position pos:line="52" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><literal type="char" pos:line="54" pos:column="7">'\0'<pos:position pos:line="54" pos:column="11"/></literal> <operator pos:line="54" pos:column="12">!=<pos:position pos:line="54" pos:column="14"/></operator> <name><name pos:line="54" pos:column="15">vl<pos:position pos:line="54" pos:column="17"/></name><operator pos:line="54" pos:column="17">-&gt;<pos:position pos:line="54" pos:column="22"/></operator><name pos:line="54" pos:column="19">plugin_instance<pos:position pos:line="54" pos:column="34"/></name><index pos:line="54" pos:column="34">[<expr><literal type="number" pos:line="54" pos:column="35">0<pos:position pos:line="54" pos:column="36"/></literal></expr>]<pos:position pos:line="54" pos:column="37"/></index></name></expr>)<pos:position pos:line="54" pos:column="38"/></condition><then pos:line="54" pos:column="38">
    <block type="pseudo"><if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">NULL<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">==<pos:position pos:line="55" pos:column="16"/></operator> <call><name pos:line="55" pos:column="17">hv_store<pos:position pos:line="55" pos:column="25"/></name><argument_list pos:line="55" pos:column="25">(<argument><expr><name pos:line="55" pos:column="26">hash<pos:position pos:line="55" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="32">"plugin_instance"<pos:position pos:line="55" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="51">15<pos:position pos:line="55" pos:column="53"/></literal></expr></argument>,
                         <argument><expr><call><name pos:line="56" pos:column="26">newSVpv<pos:position pos:line="56" pos:column="33"/></name><argument_list pos:line="56" pos:column="33">(<argument><expr><name><name pos:line="56" pos:column="34">vl<pos:position pos:line="56" pos:column="36"/></name><operator pos:line="56" pos:column="36">-&gt;<pos:position pos:line="56" pos:column="41"/></operator><name pos:line="56" pos:column="38">plugin_instance<pos:position pos:line="56" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="55">0<pos:position pos:line="56" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="59">0<pos:position pos:line="56" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="62"/></condition><then pos:line="56" pos:column="62">
      <block type="pseudo"><return pos:line="57" pos:column="7">return <expr><operator pos:line="57" pos:column="14">-<pos:position pos:line="57" pos:column="15"/></operator><literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal></expr>;<pos:position pos:line="57" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><literal type="char" pos:line="59" pos:column="7">'\0'<pos:position pos:line="59" pos:column="11"/></literal> <operator pos:line="59" pos:column="12">!=<pos:position pos:line="59" pos:column="14"/></operator> <name><name pos:line="59" pos:column="15">vl<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">-&gt;<pos:position pos:line="59" pos:column="22"/></operator><name pos:line="59" pos:column="19">type<pos:position pos:line="59" pos:column="23"/></name><index pos:line="59" pos:column="23">[<expr><literal type="number" pos:line="59" pos:column="24">0<pos:position pos:line="59" pos:column="25"/></literal></expr>]<pos:position pos:line="59" pos:column="26"/></index></name></expr>)<pos:position pos:line="59" pos:column="27"/></condition><then pos:line="59" pos:column="27">
    <block type="pseudo"><if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">NULL<pos:position pos:line="60" pos:column="13"/></name> <operator pos:line="60" pos:column="14">==<pos:position pos:line="60" pos:column="16"/></operator> <call><name pos:line="60" pos:column="17">hv_store<pos:position pos:line="60" pos:column="25"/></name><argument_list pos:line="60" pos:column="25">(<argument><expr><name pos:line="60" pos:column="26">hash<pos:position pos:line="60" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="32">"type"<pos:position pos:line="60" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="40">4<pos:position pos:line="60" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="60" pos:column="43">newSVpv<pos:position pos:line="60" pos:column="50"/></name><argument_list pos:line="60" pos:column="50">(<argument><expr><name><name pos:line="60" pos:column="51">vl<pos:position pos:line="60" pos:column="53"/></name><operator pos:line="60" pos:column="53">-&gt;<pos:position pos:line="60" pos:column="58"/></operator><name pos:line="60" pos:column="55">type<pos:position pos:line="60" pos:column="59"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="61">0<pos:position pos:line="60" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="65">0<pos:position pos:line="60" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="68"/></condition><then pos:line="60" pos:column="68">
      <block type="pseudo"><return pos:line="61" pos:column="7">return <expr><operator pos:line="61" pos:column="14">-<pos:position pos:line="61" pos:column="15"/></operator><literal type="number" pos:line="61" pos:column="15">1<pos:position pos:line="61" pos:column="16"/></literal></expr>;<pos:position pos:line="61" pos:column="17"/></return></block></then></if></block></then></if>

  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><literal type="char" pos:line="63" pos:column="7">'\0'<pos:position pos:line="63" pos:column="11"/></literal> <operator pos:line="63" pos:column="12">!=<pos:position pos:line="63" pos:column="14"/></operator> <name><name pos:line="63" pos:column="15">vl<pos:position pos:line="63" pos:column="17"/></name><operator pos:line="63" pos:column="17">-&gt;<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="19">type_instance<pos:position pos:line="63" pos:column="32"/></name><index pos:line="63" pos:column="32">[<expr><literal type="number" pos:line="63" pos:column="33">0<pos:position pos:line="63" pos:column="34"/></literal></expr>]<pos:position pos:line="63" pos:column="35"/></index></name></expr>)<pos:position pos:line="63" pos:column="36"/></condition><then pos:line="63" pos:column="36">
    <block type="pseudo"><if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><name pos:line="64" pos:column="9">NULL<pos:position pos:line="64" pos:column="13"/></name> <operator pos:line="64" pos:column="14">==<pos:position pos:line="64" pos:column="16"/></operator>
        <call><name pos:line="65" pos:column="9">hv_store<pos:position pos:line="65" pos:column="17"/></name><argument_list pos:line="65" pos:column="17">(<argument><expr><name pos:line="65" pos:column="18">hash<pos:position pos:line="65" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="24">"type_instance"<pos:position pos:line="65" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="41">13<pos:position pos:line="65" pos:column="43"/></literal></expr></argument>, <argument><expr><call><name pos:line="65" pos:column="45">newSVpv<pos:position pos:line="65" pos:column="52"/></name><argument_list pos:line="65" pos:column="52">(<argument><expr><name><name pos:line="65" pos:column="53">vl<pos:position pos:line="65" pos:column="55"/></name><operator pos:line="65" pos:column="55">-&gt;<pos:position pos:line="65" pos:column="60"/></operator><name pos:line="65" pos:column="57">type_instance<pos:position pos:line="65" pos:column="70"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="72">0<pos:position pos:line="65" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="76">0<pos:position pos:line="65" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="79"/></condition><then pos:line="65" pos:column="79">
      <block type="pseudo"><return pos:line="66" pos:column="7">return <expr><operator pos:line="66" pos:column="14">-<pos:position pos:line="66" pos:column="15"/></operator><literal type="number" pos:line="66" pos:column="15">1<pos:position pos:line="66" pos:column="16"/></literal></expr>;<pos:position pos:line="66" pos:column="17"/></return></block></then></if></block></then></if>
  <return pos:line="67" pos:column="3">return <expr><literal type="number" pos:line="67" pos:column="10">0<pos:position pos:line="67" pos:column="11"/></literal></expr>;<pos:position pos:line="67" pos:column="12"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

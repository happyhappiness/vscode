<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_233_collectd-5.0.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">check_ignore_irq<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">char<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">irq<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">unsigned<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">int<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">i<pos:position pos:line="3" pos:column="23"/></name></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">irq_list_num<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&lt;<pos:position pos:line="5" pos:column="30"/></operator> <literal type="number" pos:line="5" pos:column="28">1<pos:position pos:line="5" pos:column="29"/></literal></expr>)<pos:position pos:line="5" pos:column="30"/></condition><then pos:line="5" pos:column="30">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal><operator pos:line="6" pos:column="26">)<pos:position pos:line="6" pos:column="27"/></operator></expr>;<pos:position pos:line="6" pos:column="28"/></return></block></then></if>

	<for pos:line="8" pos:column="9">for <control pos:line="8" pos:column="13">(<init><expr><name pos:line="8" pos:column="14">i<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr>;<pos:position pos:line="8" pos:column="20"/></init> <condition><expr><name pos:line="8" pos:column="21">i<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&lt;<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="25">irq_list_num<pos:position pos:line="8" pos:column="37"/></name></expr>;<pos:position pos:line="8" pos:column="38"/></condition> <incr><expr><name pos:line="8" pos:column="39">i<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">++<pos:position pos:line="8" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="8" pos:column="43"/></control>
		<block type="pseudo"><if pos:line="9" pos:column="17">if <condition pos:line="9" pos:column="20">(<expr><call><name pos:line="9" pos:column="21">strcmp<pos:position pos:line="9" pos:column="27"/></name> <argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">irq<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="34">irq_list<pos:position pos:line="9" pos:column="42"/></name><index pos:line="9" pos:column="42">[<expr><name pos:line="9" pos:column="43">i<pos:position pos:line="9" pos:column="44"/></name></expr>]<pos:position pos:line="9" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call> <operator pos:line="9" pos:column="47">==<pos:position pos:line="9" pos:column="49"/></operator> <literal type="number" pos:line="9" pos:column="50">0<pos:position pos:line="9" pos:column="51"/></literal></expr>)<pos:position pos:line="9" pos:column="52"/></condition><then pos:line="9" pos:column="52">
			<block type="pseudo"><return pos:line="10" pos:column="25">return <expr><operator pos:line="10" pos:column="32">(<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">irq_list_action<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">)<pos:position pos:line="10" pos:column="49"/></operator></expr>;<pos:position pos:line="10" pos:column="50"/></return></block></then></if></block></for>

	<return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><literal type="number" pos:line="12" pos:column="17">1<pos:position pos:line="12" pos:column="18"/></literal> <operator pos:line="12" pos:column="19">-<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">irq_list_action<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">)<pos:position pos:line="12" pos:column="37"/></operator></expr>;<pos:position pos:line="12" pos:column="38"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

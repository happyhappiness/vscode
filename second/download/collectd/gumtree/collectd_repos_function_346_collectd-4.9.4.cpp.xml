<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_346_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">csnmp_instance_list_add<pos:position pos:line="1" pos:column="35"/></name> <parameter_list pos:line="1" pos:column="36">(<parameter><decl><type><name pos:line="1" pos:column="37">csnmp_list_instances_t<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">*<pos:position pos:line="1" pos:column="61"/></modifier><modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">head<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="2" pos:column="5">csnmp_list_instances_t<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier><modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">tail<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>,
    <parameter><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name><name pos:line="3" pos:column="11">struct<pos:position pos:line="3" pos:column="17"/></name> <name pos:line="3" pos:column="18">snmp_pdu<pos:position pos:line="3" pos:column="26"/></name></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type><name pos:line="3" pos:column="28">res<pos:position pos:line="3" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="32"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">csnmp_list_instances_t<pos:position pos:line="5" pos:column="25"/></name> <modifier pos:line="5" pos:column="26">*<pos:position pos:line="5" pos:column="27"/></modifier></type><name pos:line="5" pos:column="27">il<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">variable_list<pos:position pos:line="6" pos:column="23"/></name></name> <modifier pos:line="6" pos:column="24">*<pos:position pos:line="6" pos:column="25"/></modifier></type><name pos:line="6" pos:column="25">vb<pos:position pos:line="6" pos:column="27"/></name></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* Set vb on the last variable */</comment>
  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">vb<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <name><name pos:line="9" pos:column="13">res<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">variables<pos:position pos:line="9" pos:column="27"/></name></name></expr>;<pos:position pos:line="9" pos:column="28"/></init>
      <condition><expr><operator pos:line="10" pos:column="7">(<pos:position pos:line="10" pos:column="8"/></operator><name pos:line="10" pos:column="8">vb<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">!=<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">)<pos:position pos:line="10" pos:column="19"/></operator> <operator pos:line="10" pos:column="20">&amp;&amp;<pos:position pos:line="10" pos:column="30"/></operator> <operator pos:line="10" pos:column="23">(<pos:position pos:line="10" pos:column="24"/></operator><name><name pos:line="10" pos:column="24">vb<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">-&gt;<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="28">next_variable<pos:position pos:line="10" pos:column="41"/></name></name> <operator pos:line="10" pos:column="42">!=<pos:position pos:line="10" pos:column="44"/></operator> <name pos:line="10" pos:column="45">NULL<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">)<pos:position pos:line="10" pos:column="50"/></operator></expr>;<pos:position pos:line="10" pos:column="51"/></condition>
      <incr><expr><name pos:line="11" pos:column="7">vb<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <name><name pos:line="11" pos:column="12">vb<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">next_variable<pos:position pos:line="11" pos:column="29"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="30"/></control>
    <comment type="block" pos:line="12" pos:column="5">/* do nothing */</comment><block type="pseudo"><empty_stmt pos:line="12" pos:column="21">;<pos:position pos:line="12" pos:column="22"/></empty_stmt></block></for>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">vb<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">==<pos:position pos:line="13" pos:column="12"/></operator> <name pos:line="13" pos:column="13">NULL<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><operator pos:line="14" pos:column="13">-<pos:position pos:line="14" pos:column="14"/></operator><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal><operator pos:line="14" pos:column="15">)<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">il<pos:position pos:line="16" pos:column="5"/></name> <operator pos:line="16" pos:column="6">=<pos:position pos:line="16" pos:column="7"/></operator> <operator pos:line="16" pos:column="8">(<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">csnmp_list_instances_t<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">*<pos:position pos:line="16" pos:column="33"/></operator><operator pos:line="16" pos:column="33">)<pos:position pos:line="16" pos:column="34"/></operator> <call><name pos:line="16" pos:column="35">malloc<pos:position pos:line="16" pos:column="41"/></name> <argument_list pos:line="16" pos:column="42">(<argument><expr><sizeof pos:line="16" pos:column="43">sizeof <argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">csnmp_list_instances_t<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">il<pos:position pos:line="17" pos:column="9"/></name> <operator pos:line="17" pos:column="10">==<pos:position pos:line="17" pos:column="12"/></operator> <name pos:line="17" pos:column="13">NULL<pos:position pos:line="17" pos:column="17"/></name></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18">
  <block pos:line="18" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">ERROR<pos:position pos:line="19" pos:column="10"/></name> <argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="string" pos:line="19" pos:column="12">"snmp plugin: malloc failed."<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="43"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><operator pos:line="20" pos:column="13">-<pos:position pos:line="20" pos:column="14"/></operator><literal type="number" pos:line="20" pos:column="14">1<pos:position pos:line="20" pos:column="15"/></literal><operator pos:line="20" pos:column="15">)<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name><name pos:line="22" pos:column="3">il<pos:position pos:line="22" pos:column="5"/></name><operator pos:line="22" pos:column="5">-&gt;<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="7">subid<pos:position pos:line="22" pos:column="12"/></name></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <name><name pos:line="22" pos:column="15">vb<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">name<pos:position pos:line="22" pos:column="23"/></name><index pos:line="22" pos:column="23">[<expr><name><name pos:line="22" pos:column="24">vb<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">name_length<pos:position pos:line="22" pos:column="39"/></name></name> <operator pos:line="22" pos:column="40">-<pos:position pos:line="22" pos:column="41"/></operator> <literal type="number" pos:line="22" pos:column="42">1<pos:position pos:line="22" pos:column="43"/></literal></expr>]<pos:position pos:line="22" pos:column="44"/></index></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="23" pos:column="3">il<pos:position pos:line="23" pos:column="5"/></name><operator pos:line="23" pos:column="5">-&gt;<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="7">next<pos:position pos:line="23" pos:column="11"/></name></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <name pos:line="23" pos:column="14">NULL<pos:position pos:line="23" pos:column="18"/></name></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>

  <comment type="block" pos:line="25" pos:column="3">/* Get instance name */</comment>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><operator pos:line="26" pos:column="7">(<pos:position pos:line="26" pos:column="8"/></operator><name><name pos:line="26" pos:column="8">vb<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">type<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">==<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">ASN_OCTET_STR<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">)<pos:position pos:line="26" pos:column="34"/></operator> <operator pos:line="26" pos:column="35">||<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="38">(<pos:position pos:line="26" pos:column="39"/></operator><name><name pos:line="26" pos:column="39">vb<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">type<pos:position pos:line="26" pos:column="47"/></name></name> <operator pos:line="26" pos:column="48">==<pos:position pos:line="26" pos:column="50"/></operator> <name pos:line="26" pos:column="51">ASN_BIT_STR<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">)<pos:position pos:line="26" pos:column="63"/></operator></expr>)<pos:position pos:line="26" pos:column="64"/></condition><then pos:line="26" pos:column="64">
  <block pos:line="27" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="28" pos:column="5">char<pos:position pos:line="28" pos:column="9"/></name> <modifier pos:line="28" pos:column="10">*<pos:position pos:line="28" pos:column="11"/></modifier></type><name pos:line="28" pos:column="11">ptr<pos:position pos:line="28" pos:column="14"/></name></decl>;<pos:position pos:line="28" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">csnmp_strvbcopy<pos:position pos:line="30" pos:column="20"/></name> <argument_list pos:line="30" pos:column="21">(<argument><expr><name><name pos:line="30" pos:column="22">il<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">-&gt;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="26">instance<pos:position pos:line="30" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="36">vb<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="40">sizeof <argument_list pos:line="30" pos:column="47">(<argument><expr><name><name pos:line="30" pos:column="48">il<pos:position pos:line="30" pos:column="50"/></name><operator pos:line="30" pos:column="50">-&gt;<pos:position pos:line="30" pos:column="55"/></operator><name pos:line="30" pos:column="52">instance<pos:position pos:line="30" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="63"/></expr_stmt>

    <for pos:line="32" pos:column="5">for <control pos:line="32" pos:column="9">(<init><expr><name pos:line="32" pos:column="10">ptr<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name><name pos:line="32" pos:column="16">il<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">instance<pos:position pos:line="32" pos:column="28"/></name></name></expr>;<pos:position pos:line="32" pos:column="29"/></init> <condition><expr><operator pos:line="32" pos:column="30">*<pos:position pos:line="32" pos:column="31"/></operator><name pos:line="32" pos:column="31">ptr<pos:position pos:line="32" pos:column="34"/></name> <operator pos:line="32" pos:column="35">!=<pos:position pos:line="32" pos:column="37"/></operator> <literal type="char" pos:line="32" pos:column="38">'\0'<pos:position pos:line="32" pos:column="42"/></literal></expr>;<pos:position pos:line="32" pos:column="43"/></condition> <incr><expr><name pos:line="32" pos:column="44">ptr<pos:position pos:line="32" pos:column="47"/></name><operator pos:line="32" pos:column="47">++<pos:position pos:line="32" pos:column="49"/></operator></expr></incr>)<pos:position pos:line="32" pos:column="50"/></control>
    <block pos:line="33" pos:column="5">{
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><operator pos:line="34" pos:column="11">(<pos:position pos:line="34" pos:column="12"/></operator><operator pos:line="34" pos:column="12">*<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="13">ptr<pos:position pos:line="34" pos:column="16"/></name> <operator pos:line="34" pos:column="17">&gt;<pos:position pos:line="34" pos:column="21"/></operator> <literal type="number" pos:line="34" pos:column="19">0<pos:position pos:line="34" pos:column="20"/></literal><operator pos:line="34" pos:column="20">)<pos:position pos:line="34" pos:column="21"/></operator> <operator pos:line="34" pos:column="22">&amp;&amp;<pos:position pos:line="34" pos:column="32"/></operator> <operator pos:line="34" pos:column="25">(<pos:position pos:line="34" pos:column="26"/></operator><operator pos:line="34" pos:column="26">*<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="27">ptr<pos:position pos:line="34" pos:column="30"/></name> <operator pos:line="34" pos:column="31">&lt;<pos:position pos:line="34" pos:column="35"/></operator> <literal type="number" pos:line="34" pos:column="33">32<pos:position pos:line="34" pos:column="35"/></literal><operator pos:line="34" pos:column="35">)<pos:position pos:line="34" pos:column="36"/></operator></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">ptr<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <literal type="char" pos:line="35" pos:column="16">' '<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt></block></then>
      <elseif pos:line="36" pos:column="7">else <if pos:line="36" pos:column="12">if <condition pos:line="36" pos:column="15">(<expr><operator pos:line="36" pos:column="16">*<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">ptr<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">==<pos:position pos:line="36" pos:column="23"/></operator> <literal type="char" pos:line="36" pos:column="24">'/'<pos:position pos:line="36" pos:column="27"/></literal></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28">
	<block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="9">*<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">ptr<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <literal type="char" pos:line="37" pos:column="16">'_'<pos:position pos:line="37" pos:column="19"/></literal></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt></block></then></if></elseif></if>
    }<pos:position pos:line="38" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">DEBUG<pos:position pos:line="39" pos:column="10"/></name> <argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="string" pos:line="39" pos:column="12">"snmp plugin: il-&gt;instance = `%s';"<pos:position pos:line="39" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="49">il<pos:position pos:line="39" pos:column="51"/></name><operator pos:line="39" pos:column="51">-&gt;<pos:position pos:line="39" pos:column="56"/></operator><name pos:line="39" pos:column="53">instance<pos:position pos:line="39" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then>
  <else pos:line="41" pos:column="3">else
  <block pos:line="42" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="43" pos:column="5">value_t<pos:position pos:line="43" pos:column="12"/></name></type> <name pos:line="43" pos:column="13">val<pos:position pos:line="43" pos:column="16"/></name> <init pos:line="43" pos:column="17">= <expr><call><name pos:line="43" pos:column="19">csnmp_value_list_to_value<pos:position pos:line="43" pos:column="44"/></name> <argument_list pos:line="43" pos:column="45">(<argument><expr><name pos:line="43" pos:column="46">vb<pos:position pos:line="43" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="50">DS_TYPE_COUNTER<pos:position pos:line="43" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="67">1.0<pos:position pos:line="43" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="72">0.0<pos:position pos:line="43" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="77"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">ssnprintf<pos:position pos:line="44" pos:column="14"/></name> <argument_list pos:line="44" pos:column="15">(<argument><expr><name><name pos:line="44" pos:column="16">il<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">-&gt;<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="20">instance<pos:position pos:line="44" pos:column="28"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="30">sizeof <argument_list pos:line="44" pos:column="37">(<argument><expr><name><name pos:line="44" pos:column="38">il<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">instance<pos:position pos:line="44" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></sizeof></expr></argument>,
	<argument><expr><literal type="string" pos:line="45" pos:column="9">"%llu"<pos:position pos:line="45" pos:column="15"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="17">val<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">.<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">counter<pos:position pos:line="45" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>
  }<pos:position pos:line="46" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="48" pos:column="3">/* TODO: Debugging output */</comment>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">*<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">head<pos:position pos:line="50" pos:column="12"/></name> <operator pos:line="50" pos:column="13">==<pos:position pos:line="50" pos:column="15"/></operator> <name pos:line="50" pos:column="16">NULL<pos:position pos:line="50" pos:column="20"/></name></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="51" pos:column="5">*<pos:position pos:line="51" pos:column="6"/></operator><name pos:line="51" pos:column="6">head<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">il<pos:position pos:line="51" pos:column="15"/></name></expr>;<pos:position pos:line="51" pos:column="16"/></expr_stmt></block></then>
  <else pos:line="52" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><operator pos:line="53" pos:column="5">(<pos:position pos:line="53" pos:column="6"/></operator><operator pos:line="53" pos:column="6">*<pos:position pos:line="53" pos:column="7"/></operator><name pos:line="53" pos:column="7">tail<pos:position pos:line="53" pos:column="11"/></name><operator pos:line="53" pos:column="11">)<pos:position pos:line="53" pos:column="12"/></operator><operator pos:line="53" pos:column="12">-&gt;<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="14">next<pos:position pos:line="53" pos:column="18"/></name></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">il<pos:position pos:line="53" pos:column="23"/></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt></block></else></if>
  <expr_stmt><expr><operator pos:line="54" pos:column="3">*<pos:position pos:line="54" pos:column="4"/></operator><name pos:line="54" pos:column="4">tail<pos:position pos:line="54" pos:column="8"/></name> <operator pos:line="54" pos:column="9">=<pos:position pos:line="54" pos:column="10"/></operator> <name pos:line="54" pos:column="11">il<pos:position pos:line="54" pos:column="13"/></name></expr>;<pos:position pos:line="54" pos:column="14"/></expr_stmt>

  <return pos:line="56" pos:column="3">return <expr><operator pos:line="56" pos:column="10">(<pos:position pos:line="56" pos:column="11"/></operator><literal type="number" pos:line="56" pos:column="11">0<pos:position pos:line="56" pos:column="12"/></literal><operator pos:line="56" pos:column="12">)<pos:position pos:line="56" pos:column="13"/></operator></expr>;<pos:position pos:line="56" pos:column="14"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

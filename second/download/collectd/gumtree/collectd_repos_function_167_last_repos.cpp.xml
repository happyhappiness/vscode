<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_167_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">varnish_monitor<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">priv<pos:position pos:line="1" pos:column="38"/></name></decl></parameter>,
                           <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name><name pos:line="2" pos:column="34">struct<pos:position pos:line="2" pos:column="40"/></name> <name pos:line="2" pos:column="41">VSC_point<pos:position pos:line="2" pos:column="50"/></name></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier></type> <name pos:line="2" pos:column="58">pt<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list> <comment type="block" pos:line="2" pos:column="62">/* {{{ */</comment>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">uint64_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">val<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="5" pos:column="3">const<pos:position pos:line="5" pos:column="8"/></specifier> <name pos:line="5" pos:column="9">user_config_t<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">conf<pos:position pos:line="5" pos:column="28"/></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="6" pos:column="3">const<pos:position pos:line="6" pos:column="8"/></specifier> <name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">name<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">pt<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">==<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">conf<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">priv<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>

<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><name pos:line="13" pos:column="5">HAVE_VARNISH_V5<pos:position pos:line="13" pos:column="20"/></name></expr></cpp:if>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name></type> <name><name pos:line="14" pos:column="8">namebuff<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><name pos:line="14" pos:column="17">DATA_MAX_NAME_LEN<pos:position pos:line="14" pos:column="34"/></name></expr>]<pos:position pos:line="14" pos:column="35"/></index></name></decl>;<pos:position pos:line="14" pos:column="36"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <specifier pos:line="16" pos:column="8">const<pos:position pos:line="16" pos:column="13"/></specifier> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">c<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><call><name pos:line="16" pos:column="19">strrchr<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name><name pos:line="16" pos:column="27">pt<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">name<pos:position pos:line="16" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="16" pos:column="37">'.'<pos:position pos:line="16" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="42"/></decl_stmt>
  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">c<pos:position pos:line="17" pos:column="8"/></name> <operator pos:line="17" pos:column="9">==<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">NULL<pos:position pos:line="17" pos:column="16"/></name></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">EINVAL<pos:position pos:line="18" pos:column="18"/></name></expr>;<pos:position pos:line="18" pos:column="19"/></return>
  }<pos:position pos:line="19" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="20" pos:column="3">sstrncpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">namebuff<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="22">c<pos:position pos:line="20" pos:column="23"/></name> <operator pos:line="20" pos:column="24">+<pos:position pos:line="20" pos:column="25"/></operator> <literal type="number" pos:line="20" pos:column="26">1<pos:position pos:line="20" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="29">sizeof<argument_list pos:line="20" pos:column="35">(<argument><expr><name pos:line="20" pos:column="36">namebuff<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
  <expr_stmt><expr><name pos:line="21" pos:column="3">name<pos:position pos:line="21" pos:column="7"/></name> <operator pos:line="21" pos:column="8">=<pos:position pos:line="21" pos:column="9"/></operator> <name pos:line="21" pos:column="10">namebuff<pos:position pos:line="21" pos:column="18"/></name></expr>;<pos:position pos:line="21" pos:column="19"/></expr_stmt>

<cpp:elif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">elif<pos:position pos:line="23" pos:column="6"/></cpp:directive> <expr><name pos:line="23" pos:column="7">HAVE_VARNISH_V4<pos:position pos:line="23" pos:column="22"/></name></expr></cpp:elif>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><call><name pos:line="24" pos:column="7">strcmp<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><name><name pos:line="24" pos:column="14">pt<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">section<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">-&gt;<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="27">fantom<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">-&gt;<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="35">type<pos:position pos:line="24" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="41">"MAIN"<pos:position pos:line="24" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></call> <operator pos:line="24" pos:column="49">!=<pos:position pos:line="24" pos:column="51"/></operator> <literal type="number" pos:line="24" pos:column="52">0<pos:position pos:line="24" pos:column="53"/></literal></expr>)<pos:position pos:line="24" pos:column="54"/></condition><then pos:line="24" pos:column="54">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><literal type="number" pos:line="25" pos:column="12">0<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="27" pos:column="3">name<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <name><name pos:line="27" pos:column="10">pt<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">desc<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">name<pos:position pos:line="27" pos:column="24"/></name></name></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
<cpp:elif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">elif<pos:position pos:line="28" pos:column="6"/></cpp:directive> <expr><name pos:line="28" pos:column="7">HAVE_VARNISH_V3<pos:position pos:line="28" pos:column="22"/></name></expr></cpp:elif>
  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><call><name pos:line="29" pos:column="7">strcmp<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name><name pos:line="29" pos:column="14">pt<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">-&gt;<pos:position pos:line="29" pos:column="21"/></operator><name pos:line="29" pos:column="18">class<pos:position pos:line="29" pos:column="23"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="25">""<pos:position pos:line="29" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="28"/></argument_list></call> <operator pos:line="29" pos:column="29">!=<pos:position pos:line="29" pos:column="31"/></operator> <literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34">
    <block type="pseudo"><return pos:line="30" pos:column="5">return <expr><literal type="number" pos:line="30" pos:column="12">0<pos:position pos:line="30" pos:column="13"/></literal></expr>;<pos:position pos:line="30" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="32" pos:column="3">name<pos:position pos:line="32" pos:column="7"/></name> <operator pos:line="32" pos:column="8">=<pos:position pos:line="32" pos:column="9"/></operator> <name><name pos:line="32" pos:column="10">pt<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">name<pos:position pos:line="32" pos:column="18"/></name></name></expr>;<pos:position pos:line="32" pos:column="19"/></expr_stmt>
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

  <expr_stmt><expr><name pos:line="35" pos:column="3">val<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><operator pos:line="35" pos:column="10">(<pos:position pos:line="35" pos:column="11"/></operator><specifier pos:line="35" pos:column="11">const<pos:position pos:line="35" pos:column="16"/></specifier> <specifier pos:line="35" pos:column="17">volatile<pos:position pos:line="35" pos:column="25"/></specifier> <name pos:line="35" pos:column="26">uint64_t<pos:position pos:line="35" pos:column="34"/></name> <operator pos:line="35" pos:column="35">*<pos:position pos:line="35" pos:column="36"/></operator><operator pos:line="35" pos:column="36">)<pos:position pos:line="35" pos:column="37"/></operator><name><name pos:line="35" pos:column="37">pt<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">ptr<pos:position pos:line="35" pos:column="44"/></name></name></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>

  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><name><name pos:line="37" pos:column="7">conf<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">collect_cache<pos:position pos:line="37" pos:column="26"/></name></name></expr>)<pos:position pos:line="37" pos:column="27"/></condition><then pos:line="37" pos:column="27"> <block pos:line="37" pos:column="28">{
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><call><name pos:line="38" pos:column="9">strcmp<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">name<pos:position pos:line="38" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="22">"cache_hit"<pos:position pos:line="38" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="34"/></argument_list></call> <operator pos:line="38" pos:column="35">==<pos:position pos:line="38" pos:column="37"/></operator> <literal type="number" pos:line="38" pos:column="38">0<pos:position pos:line="38" pos:column="39"/></literal></expr>)<pos:position pos:line="38" pos:column="40"/></condition><then pos:line="38" pos:column="40">
      <block type="pseudo"><return pos:line="39" pos:column="7">return <expr><call><name pos:line="39" pos:column="14">varnish_submit_derive<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name><name pos:line="39" pos:column="36">conf<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">-&gt;<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="42">instance<pos:position pos:line="39" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="52">"cache"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="61">"cache_result"<pos:position pos:line="39" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="40" pos:column="36">"hit"<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">val<pos:position pos:line="40" pos:column="46"/></name></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></return></block></then>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcmp<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">name<pos:position pos:line="41" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="27">"cache_miss"<pos:position pos:line="41" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="40"/></argument_list></call> <operator pos:line="41" pos:column="41">==<pos:position pos:line="41" pos:column="43"/></operator> <literal type="number" pos:line="41" pos:column="44">0<pos:position pos:line="41" pos:column="45"/></literal></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46">
      <block type="pseudo"><return pos:line="42" pos:column="7">return <expr><call><name pos:line="42" pos:column="14">varnish_submit_derive<pos:position pos:line="42" pos:column="35"/></name><argument_list pos:line="42" pos:column="35">(<argument><expr><name><name pos:line="42" pos:column="36">conf<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">-&gt;<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="42">instance<pos:position pos:line="42" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="52">"cache"<pos:position pos:line="42" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="61">"cache_result"<pos:position pos:line="42" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="43" pos:column="36">"miss"<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="44">val<pos:position pos:line="43" pos:column="47"/></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="49"/></return></block></then></if></elseif>
    <elseif pos:line="44" pos:column="5">else <if pos:line="44" pos:column="10">if <condition pos:line="44" pos:column="13">(<expr><call><name pos:line="44" pos:column="14">strcmp<pos:position pos:line="44" pos:column="20"/></name><argument_list pos:line="44" pos:column="20">(<argument><expr><name pos:line="44" pos:column="21">name<pos:position pos:line="44" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="27">"cache_hitpass"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call> <operator pos:line="44" pos:column="44">==<pos:position pos:line="44" pos:column="46"/></operator> <literal type="number" pos:line="44" pos:column="47">0<pos:position pos:line="44" pos:column="48"/></literal></expr>)<pos:position pos:line="44" pos:column="49"/></condition><then pos:line="44" pos:column="49">
      <block type="pseudo"><return pos:line="45" pos:column="7">return <expr><call><name pos:line="45" pos:column="14">varnish_submit_derive<pos:position pos:line="45" pos:column="35"/></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name><name pos:line="45" pos:column="36">conf<pos:position pos:line="45" pos:column="40"/></name><operator pos:line="45" pos:column="40">-&gt;<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="42">instance<pos:position pos:line="45" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="52">"cache"<pos:position pos:line="45" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="61">"cache_result"<pos:position pos:line="45" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="46" pos:column="36">"hitpass"<pos:position pos:line="46" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="47">val<pos:position pos:line="46" pos:column="50"/></name></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="52"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="47" pos:column="4"/></block></then></if>

  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name><name pos:line="49" pos:column="7">conf<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">collect_connections<pos:position pos:line="49" pos:column="32"/></name></name></expr>)<pos:position pos:line="49" pos:column="33"/></condition><then pos:line="49" pos:column="33"> <block pos:line="49" pos:column="34">{
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><call><name pos:line="50" pos:column="9">strcmp<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name pos:line="50" pos:column="16">name<pos:position pos:line="50" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="22">"client_conn"<pos:position pos:line="50" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="36"/></argument_list></call> <operator pos:line="50" pos:column="37">==<pos:position pos:line="50" pos:column="39"/></operator> <literal type="number" pos:line="50" pos:column="40">0<pos:position pos:line="50" pos:column="41"/></literal></expr>)<pos:position pos:line="50" pos:column="42"/></condition><then pos:line="50" pos:column="42">
      <block type="pseudo"><return pos:line="51" pos:column="7">return <expr><call><name pos:line="51" pos:column="14">varnish_submit_derive<pos:position pos:line="51" pos:column="35"/></name><argument_list pos:line="51" pos:column="35">(<argument><expr><name><name pos:line="51" pos:column="36">conf<pos:position pos:line="51" pos:column="40"/></name><operator pos:line="51" pos:column="40">-&gt;<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="42">instance<pos:position pos:line="51" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="52">"connections"<pos:position pos:line="51" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="67">"connections"<pos:position pos:line="51" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="52" pos:column="36">"accepted"<pos:position pos:line="52" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="48">val<pos:position pos:line="52" pos:column="51"/></name></expr></argument>)<pos:position pos:line="52" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="53"/></return></block></then>
    <elseif pos:line="53" pos:column="5">else <if pos:line="53" pos:column="10">if <condition pos:line="53" pos:column="13">(<expr><call><name pos:line="53" pos:column="14">strcmp<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">name<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="27">"client_drop"<pos:position pos:line="53" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="41"/></argument_list></call> <operator pos:line="53" pos:column="42">==<pos:position pos:line="53" pos:column="44"/></operator> <literal type="number" pos:line="53" pos:column="45">0<pos:position pos:line="53" pos:column="46"/></literal></expr>)<pos:position pos:line="53" pos:column="47"/></condition><then pos:line="53" pos:column="47">
      <block type="pseudo"><return pos:line="54" pos:column="7">return <expr><call><name pos:line="54" pos:column="14">varnish_submit_derive<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name><name pos:line="54" pos:column="36">conf<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">instance<pos:position pos:line="54" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="52">"connections"<pos:position pos:line="54" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="67">"connections"<pos:position pos:line="54" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="55" pos:column="36">"dropped"<pos:position pos:line="55" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">val<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="56" pos:column="5">else <if pos:line="56" pos:column="10">if <condition pos:line="56" pos:column="13">(<expr><call><name pos:line="56" pos:column="14">strcmp<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">name<pos:position pos:line="56" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="27">"client_req"<pos:position pos:line="56" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call> <operator pos:line="56" pos:column="41">==<pos:position pos:line="56" pos:column="43"/></operator> <literal type="number" pos:line="56" pos:column="44">0<pos:position pos:line="56" pos:column="45"/></literal></expr>)<pos:position pos:line="56" pos:column="46"/></condition><then pos:line="56" pos:column="46">
      <block type="pseudo"><return pos:line="57" pos:column="7">return <expr><call><name pos:line="57" pos:column="14">varnish_submit_derive<pos:position pos:line="57" pos:column="35"/></name><argument_list pos:line="57" pos:column="35">(<argument><expr><name><name pos:line="57" pos:column="36">conf<pos:position pos:line="57" pos:column="40"/></name><operator pos:line="57" pos:column="40">-&gt;<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="42">instance<pos:position pos:line="57" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="52">"connections"<pos:position pos:line="57" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="67">"connections"<pos:position pos:line="57" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="58" pos:column="36">"received"<pos:position pos:line="58" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="48">val<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></return></block></then></if></elseif>
<cpp:if pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">if<pos:position pos:line="59" pos:column="4"/></cpp:directive> <expr><name pos:line="59" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="59" pos:column="20"/></name> <operator pos:line="59" pos:column="21">||<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">HAVE_VARNISH_V5<pos:position pos:line="59" pos:column="39"/></name></expr></cpp:if>
    <elseif pos:line="60" pos:column="5">else <if pos:line="60" pos:column="10">if <condition pos:line="60" pos:column="13">(<expr><call><name pos:line="60" pos:column="14">strcmp<pos:position pos:line="60" pos:column="20"/></name><argument_list pos:line="60" pos:column="20">(<argument><expr><name pos:line="60" pos:column="21">name<pos:position pos:line="60" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="27">"client_req_400"<pos:position pos:line="60" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="44"/></argument_list></call> <operator pos:line="60" pos:column="45">==<pos:position pos:line="60" pos:column="47"/></operator> <literal type="number" pos:line="60" pos:column="48">0<pos:position pos:line="60" pos:column="49"/></literal></expr>)<pos:position pos:line="60" pos:column="50"/></condition><then pos:line="60" pos:column="50">
      <block type="pseudo"><return pos:line="61" pos:column="7">return <expr><call><name pos:line="61" pos:column="14">varnish_submit_derive<pos:position pos:line="61" pos:column="35"/></name><argument_list pos:line="61" pos:column="35">(<argument><expr><name><name pos:line="61" pos:column="36">conf<pos:position pos:line="61" pos:column="40"/></name><operator pos:line="61" pos:column="40">-&gt;<pos:position pos:line="61" pos:column="45"/></operator><name pos:line="61" pos:column="42">instance<pos:position pos:line="61" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="52">"connections"<pos:position pos:line="61" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="67">"connections"<pos:position pos:line="61" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="62" pos:column="36">"error_400"<pos:position pos:line="62" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="49">val<pos:position pos:line="62" pos:column="52"/></name></expr></argument>)<pos:position pos:line="62" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="63" pos:column="5">else <if pos:line="63" pos:column="10">if <condition pos:line="63" pos:column="13">(<expr><call><name pos:line="63" pos:column="14">strcmp<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">name<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"client_req_417"<pos:position pos:line="63" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call> <operator pos:line="63" pos:column="45">==<pos:position pos:line="63" pos:column="47"/></operator> <literal type="number" pos:line="63" pos:column="48">0<pos:position pos:line="63" pos:column="49"/></literal></expr>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50">
      <block type="pseudo"><return pos:line="64" pos:column="7">return <expr><call><name pos:line="64" pos:column="14">varnish_submit_derive<pos:position pos:line="64" pos:column="35"/></name><argument_list pos:line="64" pos:column="35">(<argument><expr><name><name pos:line="64" pos:column="36">conf<pos:position pos:line="64" pos:column="40"/></name><operator pos:line="64" pos:column="40">-&gt;<pos:position pos:line="64" pos:column="45"/></operator><name pos:line="64" pos:column="42">instance<pos:position pos:line="64" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="52">"connections"<pos:position pos:line="64" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="67">"connections"<pos:position pos:line="64" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="65" pos:column="36">"error_417"<pos:position pos:line="65" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="49">val<pos:position pos:line="65" pos:column="52"/></name></expr></argument>)<pos:position pos:line="65" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="54"/></return></block></then></if></elseif></if>
<cpp:endif pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">endif<pos:position pos:line="66" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="67" pos:column="4"/></block></then></if>

<cpp:ifdef pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">ifdef<pos:position pos:line="69" pos:column="7"/></cpp:directive> <name pos:line="69" pos:column="8">HAVE_VARNISH_V3<pos:position pos:line="69" pos:column="23"/></name></cpp:ifdef>
  <if pos:line="70" pos:column="3">if <condition pos:line="70" pos:column="6">(<expr><name><name pos:line="70" pos:column="7">conf<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">collect_dirdns<pos:position pos:line="70" pos:column="27"/></name></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28"> <block pos:line="70" pos:column="29">{
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><call><name pos:line="71" pos:column="9">strcmp<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">name<pos:position pos:line="71" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="22">"dir_dns_lookups"<pos:position pos:line="71" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="40"/></argument_list></call> <operator pos:line="71" pos:column="41">==<pos:position pos:line="71" pos:column="43"/></operator> <literal type="number" pos:line="71" pos:column="44">0<pos:position pos:line="71" pos:column="45"/></literal></expr>)<pos:position pos:line="71" pos:column="46"/></condition><then pos:line="71" pos:column="46">
      <block type="pseudo"><return pos:line="72" pos:column="7">return <expr><call><name pos:line="72" pos:column="14">varnish_submit_derive<pos:position pos:line="72" pos:column="35"/></name><argument_list pos:line="72" pos:column="35">(<argument><expr><name><name pos:line="72" pos:column="36">conf<pos:position pos:line="72" pos:column="40"/></name><operator pos:line="72" pos:column="40">-&gt;<pos:position pos:line="72" pos:column="45"/></operator><name pos:line="72" pos:column="42">instance<pos:position pos:line="72" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="52">"dirdns"<pos:position pos:line="72" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="62">"cache_operation"<pos:position pos:line="72" pos:column="79"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="73" pos:column="36">"lookups"<pos:position pos:line="73" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="47">val<pos:position pos:line="73" pos:column="50"/></name></expr></argument>)<pos:position pos:line="73" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="52"/></return></block></then>
    <elseif pos:line="74" pos:column="5">else <if pos:line="74" pos:column="10">if <condition pos:line="74" pos:column="13">(<expr><call><name pos:line="74" pos:column="14">strcmp<pos:position pos:line="74" pos:column="20"/></name><argument_list pos:line="74" pos:column="20">(<argument><expr><name pos:line="74" pos:column="21">name<pos:position pos:line="74" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="27">"dir_dns_failed"<pos:position pos:line="74" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="44"/></argument_list></call> <operator pos:line="74" pos:column="45">==<pos:position pos:line="74" pos:column="47"/></operator> <literal type="number" pos:line="74" pos:column="48">0<pos:position pos:line="74" pos:column="49"/></literal></expr>)<pos:position pos:line="74" pos:column="50"/></condition><then pos:line="74" pos:column="50">
      <block type="pseudo"><return pos:line="75" pos:column="7">return <expr><call><name pos:line="75" pos:column="14">varnish_submit_derive<pos:position pos:line="75" pos:column="35"/></name><argument_list pos:line="75" pos:column="35">(<argument><expr><name><name pos:line="75" pos:column="36">conf<pos:position pos:line="75" pos:column="40"/></name><operator pos:line="75" pos:column="40">-&gt;<pos:position pos:line="75" pos:column="45"/></operator><name pos:line="75" pos:column="42">instance<pos:position pos:line="75" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="52">"dirdns"<pos:position pos:line="75" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="62">"cache_result"<pos:position pos:line="75" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="76" pos:column="36">"failed"<pos:position pos:line="76" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="46">val<pos:position pos:line="76" pos:column="49"/></name></expr></argument>)<pos:position pos:line="76" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="77" pos:column="5">else <if pos:line="77" pos:column="10">if <condition pos:line="77" pos:column="13">(<expr><call><name pos:line="77" pos:column="14">strcmp<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">name<pos:position pos:line="77" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="27">"dir_dns_hit"<pos:position pos:line="77" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="41"/></argument_list></call> <operator pos:line="77" pos:column="42">==<pos:position pos:line="77" pos:column="44"/></operator> <literal type="number" pos:line="77" pos:column="45">0<pos:position pos:line="77" pos:column="46"/></literal></expr>)<pos:position pos:line="77" pos:column="47"/></condition><then pos:line="77" pos:column="47">
      <block type="pseudo"><return pos:line="78" pos:column="7">return <expr><call><name pos:line="78" pos:column="14">varnish_submit_derive<pos:position pos:line="78" pos:column="35"/></name><argument_list pos:line="78" pos:column="35">(<argument><expr><name><name pos:line="78" pos:column="36">conf<pos:position pos:line="78" pos:column="40"/></name><operator pos:line="78" pos:column="40">-&gt;<pos:position pos:line="78" pos:column="45"/></operator><name pos:line="78" pos:column="42">instance<pos:position pos:line="78" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="52">"dirdns"<pos:position pos:line="78" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="62">"cache_result"<pos:position pos:line="78" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="79" pos:column="36">"hits"<pos:position pos:line="79" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="44">val<pos:position pos:line="79" pos:column="47"/></name></expr></argument>)<pos:position pos:line="79" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="49"/></return></block></then></if></elseif>
    <elseif pos:line="80" pos:column="5">else <if pos:line="80" pos:column="10">if <condition pos:line="80" pos:column="13">(<expr><call><name pos:line="80" pos:column="14">strcmp<pos:position pos:line="80" pos:column="20"/></name><argument_list pos:line="80" pos:column="20">(<argument><expr><name pos:line="80" pos:column="21">name<pos:position pos:line="80" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="27">"dir_dns_cache_full"<pos:position pos:line="80" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="48"/></argument_list></call> <operator pos:line="80" pos:column="49">==<pos:position pos:line="80" pos:column="51"/></operator> <literal type="number" pos:line="80" pos:column="52">0<pos:position pos:line="80" pos:column="53"/></literal></expr>)<pos:position pos:line="80" pos:column="54"/></condition><then pos:line="80" pos:column="54">
      <block type="pseudo"><return pos:line="81" pos:column="7">return <expr><call><name pos:line="81" pos:column="14">varnish_submit_derive<pos:position pos:line="81" pos:column="35"/></name><argument_list pos:line="81" pos:column="35">(<argument><expr><name><name pos:line="81" pos:column="36">conf<pos:position pos:line="81" pos:column="40"/></name><operator pos:line="81" pos:column="40">-&gt;<pos:position pos:line="81" pos:column="45"/></operator><name pos:line="81" pos:column="42">instance<pos:position pos:line="81" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="52">"dirdns"<pos:position pos:line="81" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="62">"cache_result"<pos:position pos:line="81" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="82" pos:column="36">"cache_full"<pos:position pos:line="82" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="50">val<pos:position pos:line="82" pos:column="53"/></name></expr></argument>)<pos:position pos:line="82" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="55"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="83" pos:column="4"/></block></then></if>
<cpp:endif pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">endif<pos:position pos:line="84" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="86" pos:column="3">if <condition pos:line="86" pos:column="6">(<expr><name><name pos:line="86" pos:column="7">conf<pos:position pos:line="86" pos:column="11"/></name><operator pos:line="86" pos:column="11">-&gt;<pos:position pos:line="86" pos:column="16"/></operator><name pos:line="86" pos:column="13">collect_esi<pos:position pos:line="86" pos:column="24"/></name></name></expr>)<pos:position pos:line="86" pos:column="25"/></condition><then pos:line="86" pos:column="25"> <block pos:line="86" pos:column="26">{
    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><call><name pos:line="87" pos:column="9">strcmp<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><name pos:line="87" pos:column="16">name<pos:position pos:line="87" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="22">"esi_errors"<pos:position pos:line="87" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="35"/></argument_list></call> <operator pos:line="87" pos:column="36">==<pos:position pos:line="87" pos:column="38"/></operator> <literal type="number" pos:line="87" pos:column="39">0<pos:position pos:line="87" pos:column="40"/></literal></expr>)<pos:position pos:line="87" pos:column="41"/></condition><then pos:line="87" pos:column="41">
      <block type="pseudo"><return pos:line="88" pos:column="7">return <expr><call><name pos:line="88" pos:column="14">varnish_submit_derive<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name><name pos:line="88" pos:column="36">conf<pos:position pos:line="88" pos:column="40"/></name><operator pos:line="88" pos:column="40">-&gt;<pos:position pos:line="88" pos:column="45"/></operator><name pos:line="88" pos:column="42">instance<pos:position pos:line="88" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="52">"esi"<pos:position pos:line="88" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="59">"total_operations"<pos:position pos:line="88" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="89" pos:column="36">"error"<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="89" pos:column="45">val<pos:position pos:line="89" pos:column="48"/></name></expr></argument>)<pos:position pos:line="89" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="50"/></return></block></then>
    <elseif pos:line="90" pos:column="5">else <if pos:line="90" pos:column="10">if <condition pos:line="90" pos:column="13">(<expr><call><name pos:line="90" pos:column="14">strcmp<pos:position pos:line="90" pos:column="20"/></name><argument_list pos:line="90" pos:column="20">(<argument><expr><name pos:line="90" pos:column="21">name<pos:position pos:line="90" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="27">"esi_parse"<pos:position pos:line="90" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="39"/></argument_list></call> <operator pos:line="90" pos:column="40">==<pos:position pos:line="90" pos:column="42"/></operator> <literal type="number" pos:line="90" pos:column="43">0<pos:position pos:line="90" pos:column="44"/></literal></expr>)<pos:position pos:line="90" pos:column="45"/></condition><then pos:line="90" pos:column="45">
      <block type="pseudo"><return pos:line="91" pos:column="7">return <expr><call><name pos:line="91" pos:column="14">varnish_submit_derive<pos:position pos:line="91" pos:column="35"/></name><argument_list pos:line="91" pos:column="35">(<argument><expr><name><name pos:line="91" pos:column="36">conf<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">-&gt;<pos:position pos:line="91" pos:column="45"/></operator><name pos:line="91" pos:column="42">instance<pos:position pos:line="91" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="52">"esi"<pos:position pos:line="91" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="59">"total_operations"<pos:position pos:line="91" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="92" pos:column="36">"parsed"<pos:position pos:line="92" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="46">val<pos:position pos:line="92" pos:column="49"/></name></expr></argument>)<pos:position pos:line="92" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="93" pos:column="5">else <if pos:line="93" pos:column="10">if <condition pos:line="93" pos:column="13">(<expr><call><name pos:line="93" pos:column="14">strcmp<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">(<argument><expr><name pos:line="93" pos:column="21">name<pos:position pos:line="93" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="27">"esi_warnings"<pos:position pos:line="93" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="42"/></argument_list></call> <operator pos:line="93" pos:column="43">==<pos:position pos:line="93" pos:column="45"/></operator> <literal type="number" pos:line="93" pos:column="46">0<pos:position pos:line="93" pos:column="47"/></literal></expr>)<pos:position pos:line="93" pos:column="48"/></condition><then pos:line="93" pos:column="48">
      <block type="pseudo"><return pos:line="94" pos:column="7">return <expr><call><name pos:line="94" pos:column="14">varnish_submit_derive<pos:position pos:line="94" pos:column="35"/></name><argument_list pos:line="94" pos:column="35">(<argument><expr><name><name pos:line="94" pos:column="36">conf<pos:position pos:line="94" pos:column="40"/></name><operator pos:line="94" pos:column="40">-&gt;<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="42">instance<pos:position pos:line="94" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="52">"esi"<pos:position pos:line="94" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="59">"total_operations"<pos:position pos:line="94" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="95" pos:column="36">"warning"<pos:position pos:line="95" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="95" pos:column="47">val<pos:position pos:line="95" pos:column="50"/></name></expr></argument>)<pos:position pos:line="95" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="96" pos:column="5">else <if pos:line="96" pos:column="10">if <condition pos:line="96" pos:column="13">(<expr><call><name pos:line="96" pos:column="14">strcmp<pos:position pos:line="96" pos:column="20"/></name><argument_list pos:line="96" pos:column="20">(<argument><expr><name pos:line="96" pos:column="21">name<pos:position pos:line="96" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="27">"esi_maxdepth"<pos:position pos:line="96" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="42"/></argument_list></call> <operator pos:line="96" pos:column="43">==<pos:position pos:line="96" pos:column="45"/></operator> <literal type="number" pos:line="96" pos:column="46">0<pos:position pos:line="96" pos:column="47"/></literal></expr>)<pos:position pos:line="96" pos:column="48"/></condition><then pos:line="96" pos:column="48">
      <block type="pseudo"><return pos:line="97" pos:column="7">return <expr><call><name pos:line="97" pos:column="14">varnish_submit_derive<pos:position pos:line="97" pos:column="35"/></name><argument_list pos:line="97" pos:column="35">(<argument><expr><name><name pos:line="97" pos:column="36">conf<pos:position pos:line="97" pos:column="40"/></name><operator pos:line="97" pos:column="40">-&gt;<pos:position pos:line="97" pos:column="45"/></operator><name pos:line="97" pos:column="42">instance<pos:position pos:line="97" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="52">"esi"<pos:position pos:line="97" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="59">"total_operations"<pos:position pos:line="97" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="98" pos:column="36">"max_depth"<pos:position pos:line="98" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="98" pos:column="49">val<pos:position pos:line="98" pos:column="52"/></name></expr></argument>)<pos:position pos:line="98" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="54"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="99" pos:column="4"/></block></then></if>

  <if pos:line="101" pos:column="3">if <condition pos:line="101" pos:column="6">(<expr><name><name pos:line="101" pos:column="7">conf<pos:position pos:line="101" pos:column="11"/></name><operator pos:line="101" pos:column="11">-&gt;<pos:position pos:line="101" pos:column="16"/></operator><name pos:line="101" pos:column="13">collect_backend<pos:position pos:line="101" pos:column="28"/></name></name></expr>)<pos:position pos:line="101" pos:column="29"/></condition><then pos:line="101" pos:column="29"> <block pos:line="101" pos:column="30">{
    <if pos:line="102" pos:column="5">if <condition pos:line="102" pos:column="8">(<expr><call><name pos:line="102" pos:column="9">strcmp<pos:position pos:line="102" pos:column="15"/></name><argument_list pos:line="102" pos:column="15">(<argument><expr><name pos:line="102" pos:column="16">name<pos:position pos:line="102" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="22">"backend_conn"<pos:position pos:line="102" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="37"/></argument_list></call> <operator pos:line="102" pos:column="38">==<pos:position pos:line="102" pos:column="40"/></operator> <literal type="number" pos:line="102" pos:column="41">0<pos:position pos:line="102" pos:column="42"/></literal></expr>)<pos:position pos:line="102" pos:column="43"/></condition><then pos:line="102" pos:column="43">
      <block type="pseudo"><return pos:line="103" pos:column="7">return <expr><call><name pos:line="103" pos:column="14">varnish_submit_derive<pos:position pos:line="103" pos:column="35"/></name><argument_list pos:line="103" pos:column="35">(<argument><expr><name><name pos:line="103" pos:column="36">conf<pos:position pos:line="103" pos:column="40"/></name><operator pos:line="103" pos:column="40">-&gt;<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="42">instance<pos:position pos:line="103" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="52">"backend"<pos:position pos:line="103" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="63">"connections"<pos:position pos:line="103" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="104" pos:column="36">"success"<pos:position pos:line="104" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="104" pos:column="47">val<pos:position pos:line="104" pos:column="50"/></name></expr></argument>)<pos:position pos:line="104" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="52"/></return></block></then>
    <elseif pos:line="105" pos:column="5">else <if pos:line="105" pos:column="10">if <condition pos:line="105" pos:column="13">(<expr><call><name pos:line="105" pos:column="14">strcmp<pos:position pos:line="105" pos:column="20"/></name><argument_list pos:line="105" pos:column="20">(<argument><expr><name pos:line="105" pos:column="21">name<pos:position pos:line="105" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="27">"backend_unhealthy"<pos:position pos:line="105" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="47"/></argument_list></call> <operator pos:line="105" pos:column="48">==<pos:position pos:line="105" pos:column="50"/></operator> <literal type="number" pos:line="105" pos:column="51">0<pos:position pos:line="105" pos:column="52"/></literal></expr>)<pos:position pos:line="105" pos:column="53"/></condition><then pos:line="105" pos:column="53">
      <block type="pseudo"><return pos:line="106" pos:column="7">return <expr><call><name pos:line="106" pos:column="14">varnish_submit_derive<pos:position pos:line="106" pos:column="35"/></name><argument_list pos:line="106" pos:column="35">(<argument><expr><name><name pos:line="106" pos:column="36">conf<pos:position pos:line="106" pos:column="40"/></name><operator pos:line="106" pos:column="40">-&gt;<pos:position pos:line="106" pos:column="45"/></operator><name pos:line="106" pos:column="42">instance<pos:position pos:line="106" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="52">"backend"<pos:position pos:line="106" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="63">"connections"<pos:position pos:line="106" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="107" pos:column="36">"not-attempted"<pos:position pos:line="107" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="53">val<pos:position pos:line="107" pos:column="56"/></name></expr></argument>)<pos:position pos:line="107" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="58"/></return></block></then></if></elseif>
    <elseif pos:line="108" pos:column="5">else <if pos:line="108" pos:column="10">if <condition pos:line="108" pos:column="13">(<expr><call><name pos:line="108" pos:column="14">strcmp<pos:position pos:line="108" pos:column="20"/></name><argument_list pos:line="108" pos:column="20">(<argument><expr><name pos:line="108" pos:column="21">name<pos:position pos:line="108" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="27">"backend_busy"<pos:position pos:line="108" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="42"/></argument_list></call> <operator pos:line="108" pos:column="43">==<pos:position pos:line="108" pos:column="45"/></operator> <literal type="number" pos:line="108" pos:column="46">0<pos:position pos:line="108" pos:column="47"/></literal></expr>)<pos:position pos:line="108" pos:column="48"/></condition><then pos:line="108" pos:column="48">
      <block type="pseudo"><return pos:line="109" pos:column="7">return <expr><call><name pos:line="109" pos:column="14">varnish_submit_derive<pos:position pos:line="109" pos:column="35"/></name><argument_list pos:line="109" pos:column="35">(<argument><expr><name><name pos:line="109" pos:column="36">conf<pos:position pos:line="109" pos:column="40"/></name><operator pos:line="109" pos:column="40">-&gt;<pos:position pos:line="109" pos:column="45"/></operator><name pos:line="109" pos:column="42">instance<pos:position pos:line="109" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="52">"backend"<pos:position pos:line="109" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="63">"connections"<pos:position pos:line="109" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="110" pos:column="36">"too-many"<pos:position pos:line="110" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="110" pos:column="48">val<pos:position pos:line="110" pos:column="51"/></name></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="111" pos:column="5">else <if pos:line="111" pos:column="10">if <condition pos:line="111" pos:column="13">(<expr><call><name pos:line="111" pos:column="14">strcmp<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">name<pos:position pos:line="111" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="27">"backend_fail"<pos:position pos:line="111" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="42"/></argument_list></call> <operator pos:line="111" pos:column="43">==<pos:position pos:line="111" pos:column="45"/></operator> <literal type="number" pos:line="111" pos:column="46">0<pos:position pos:line="111" pos:column="47"/></literal></expr>)<pos:position pos:line="111" pos:column="48"/></condition><then pos:line="111" pos:column="48">
      <block type="pseudo"><return pos:line="112" pos:column="7">return <expr><call><name pos:line="112" pos:column="14">varnish_submit_derive<pos:position pos:line="112" pos:column="35"/></name><argument_list pos:line="112" pos:column="35">(<argument><expr><name><name pos:line="112" pos:column="36">conf<pos:position pos:line="112" pos:column="40"/></name><operator pos:line="112" pos:column="40">-&gt;<pos:position pos:line="112" pos:column="45"/></operator><name pos:line="112" pos:column="42">instance<pos:position pos:line="112" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="52">"backend"<pos:position pos:line="112" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="63">"connections"<pos:position pos:line="112" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="113" pos:column="36">"failures"<pos:position pos:line="113" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="113" pos:column="48">val<pos:position pos:line="113" pos:column="51"/></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="114" pos:column="5">else <if pos:line="114" pos:column="10">if <condition pos:line="114" pos:column="13">(<expr><call><name pos:line="114" pos:column="14">strcmp<pos:position pos:line="114" pos:column="20"/></name><argument_list pos:line="114" pos:column="20">(<argument><expr><name pos:line="114" pos:column="21">name<pos:position pos:line="114" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="114" pos:column="27">"backend_reuse"<pos:position pos:line="114" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="43"/></argument_list></call> <operator pos:line="114" pos:column="44">==<pos:position pos:line="114" pos:column="46"/></operator> <literal type="number" pos:line="114" pos:column="47">0<pos:position pos:line="114" pos:column="48"/></literal></expr>)<pos:position pos:line="114" pos:column="49"/></condition><then pos:line="114" pos:column="49">
      <block type="pseudo"><return pos:line="115" pos:column="7">return <expr><call><name pos:line="115" pos:column="14">varnish_submit_derive<pos:position pos:line="115" pos:column="35"/></name><argument_list pos:line="115" pos:column="35">(<argument><expr><name><name pos:line="115" pos:column="36">conf<pos:position pos:line="115" pos:column="40"/></name><operator pos:line="115" pos:column="40">-&gt;<pos:position pos:line="115" pos:column="45"/></operator><name pos:line="115" pos:column="42">instance<pos:position pos:line="115" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="52">"backend"<pos:position pos:line="115" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="115" pos:column="63">"connections"<pos:position pos:line="115" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="116" pos:column="36">"reuses"<pos:position pos:line="116" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="46">val<pos:position pos:line="116" pos:column="49"/></name></expr></argument>)<pos:position pos:line="116" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="117" pos:column="5">else <if pos:line="117" pos:column="10">if <condition pos:line="117" pos:column="13">(<expr><call><name pos:line="117" pos:column="14">strcmp<pos:position pos:line="117" pos:column="20"/></name><argument_list pos:line="117" pos:column="20">(<argument><expr><name pos:line="117" pos:column="21">name<pos:position pos:line="117" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="27">"backend_toolate"<pos:position pos:line="117" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call> <operator pos:line="117" pos:column="46">==<pos:position pos:line="117" pos:column="48"/></operator> <literal type="number" pos:line="117" pos:column="49">0<pos:position pos:line="117" pos:column="50"/></literal></expr>)<pos:position pos:line="117" pos:column="51"/></condition><then pos:line="117" pos:column="51">
      <block type="pseudo"><return pos:line="118" pos:column="7">return <expr><call><name pos:line="118" pos:column="14">varnish_submit_derive<pos:position pos:line="118" pos:column="35"/></name><argument_list pos:line="118" pos:column="35">(<argument><expr><name><name pos:line="118" pos:column="36">conf<pos:position pos:line="118" pos:column="40"/></name><operator pos:line="118" pos:column="40">-&gt;<pos:position pos:line="118" pos:column="45"/></operator><name pos:line="118" pos:column="42">instance<pos:position pos:line="118" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="52">"backend"<pos:position pos:line="118" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="63">"connections"<pos:position pos:line="118" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="119" pos:column="36">"was-closed"<pos:position pos:line="119" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="119" pos:column="50">val<pos:position pos:line="119" pos:column="53"/></name></expr></argument>)<pos:position pos:line="119" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="120" pos:column="5">else <if pos:line="120" pos:column="10">if <condition pos:line="120" pos:column="13">(<expr><call><name pos:line="120" pos:column="14">strcmp<pos:position pos:line="120" pos:column="20"/></name><argument_list pos:line="120" pos:column="20">(<argument><expr><name pos:line="120" pos:column="21">name<pos:position pos:line="120" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="27">"backend_recycle"<pos:position pos:line="120" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="45"/></argument_list></call> <operator pos:line="120" pos:column="46">==<pos:position pos:line="120" pos:column="48"/></operator> <literal type="number" pos:line="120" pos:column="49">0<pos:position pos:line="120" pos:column="50"/></literal></expr>)<pos:position pos:line="120" pos:column="51"/></condition><then pos:line="120" pos:column="51">
      <block type="pseudo"><return pos:line="121" pos:column="7">return <expr><call><name pos:line="121" pos:column="14">varnish_submit_derive<pos:position pos:line="121" pos:column="35"/></name><argument_list pos:line="121" pos:column="35">(<argument><expr><name><name pos:line="121" pos:column="36">conf<pos:position pos:line="121" pos:column="40"/></name><operator pos:line="121" pos:column="40">-&gt;<pos:position pos:line="121" pos:column="45"/></operator><name pos:line="121" pos:column="42">instance<pos:position pos:line="121" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="52">"backend"<pos:position pos:line="121" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="121" pos:column="63">"connections"<pos:position pos:line="121" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="122" pos:column="36">"recycled"<pos:position pos:line="122" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="48">val<pos:position pos:line="122" pos:column="51"/></name></expr></argument>)<pos:position pos:line="122" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="123" pos:column="5">else <if pos:line="123" pos:column="10">if <condition pos:line="123" pos:column="13">(<expr><call><name pos:line="123" pos:column="14">strcmp<pos:position pos:line="123" pos:column="20"/></name><argument_list pos:line="123" pos:column="20">(<argument><expr><name pos:line="123" pos:column="21">name<pos:position pos:line="123" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="27">"backend_unused"<pos:position pos:line="123" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="44"/></argument_list></call> <operator pos:line="123" pos:column="45">==<pos:position pos:line="123" pos:column="47"/></operator> <literal type="number" pos:line="123" pos:column="48">0<pos:position pos:line="123" pos:column="49"/></literal></expr>)<pos:position pos:line="123" pos:column="50"/></condition><then pos:line="123" pos:column="50">
      <block type="pseudo"><return pos:line="124" pos:column="7">return <expr><call><name pos:line="124" pos:column="14">varnish_submit_derive<pos:position pos:line="124" pos:column="35"/></name><argument_list pos:line="124" pos:column="35">(<argument><expr><name><name pos:line="124" pos:column="36">conf<pos:position pos:line="124" pos:column="40"/></name><operator pos:line="124" pos:column="40">-&gt;<pos:position pos:line="124" pos:column="45"/></operator><name pos:line="124" pos:column="42">instance<pos:position pos:line="124" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="52">"backend"<pos:position pos:line="124" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="63">"connections"<pos:position pos:line="124" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="125" pos:column="36">"unused"<pos:position pos:line="125" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="125" pos:column="46">val<pos:position pos:line="125" pos:column="49"/></name></expr></argument>)<pos:position pos:line="125" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="126" pos:column="5">else <if pos:line="126" pos:column="10">if <condition pos:line="126" pos:column="13">(<expr><call><name pos:line="126" pos:column="14">strcmp<pos:position pos:line="126" pos:column="20"/></name><argument_list pos:line="126" pos:column="20">(<argument><expr><name pos:line="126" pos:column="21">name<pos:position pos:line="126" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="27">"backend_retry"<pos:position pos:line="126" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="43"/></argument_list></call> <operator pos:line="126" pos:column="44">==<pos:position pos:line="126" pos:column="46"/></operator> <literal type="number" pos:line="126" pos:column="47">0<pos:position pos:line="126" pos:column="48"/></literal></expr>)<pos:position pos:line="126" pos:column="49"/></condition><then pos:line="126" pos:column="49">
      <block type="pseudo"><return pos:line="127" pos:column="7">return <expr><call><name pos:line="127" pos:column="14">varnish_submit_derive<pos:position pos:line="127" pos:column="35"/></name><argument_list pos:line="127" pos:column="35">(<argument><expr><name><name pos:line="127" pos:column="36">conf<pos:position pos:line="127" pos:column="40"/></name><operator pos:line="127" pos:column="40">-&gt;<pos:position pos:line="127" pos:column="45"/></operator><name pos:line="127" pos:column="42">instance<pos:position pos:line="127" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="52">"backend"<pos:position pos:line="127" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="63">"connections"<pos:position pos:line="127" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="128" pos:column="36">"retries"<pos:position pos:line="128" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="47">val<pos:position pos:line="128" pos:column="50"/></name></expr></argument>)<pos:position pos:line="128" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="129" pos:column="5">else <if pos:line="129" pos:column="10">if <condition pos:line="129" pos:column="13">(<expr><call><name pos:line="129" pos:column="14">strcmp<pos:position pos:line="129" pos:column="20"/></name><argument_list pos:line="129" pos:column="20">(<argument><expr><name pos:line="129" pos:column="21">name<pos:position pos:line="129" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="27">"backend_req"<pos:position pos:line="129" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="41"/></argument_list></call> <operator pos:line="129" pos:column="42">==<pos:position pos:line="129" pos:column="44"/></operator> <literal type="number" pos:line="129" pos:column="45">0<pos:position pos:line="129" pos:column="46"/></literal></expr>)<pos:position pos:line="129" pos:column="47"/></condition><then pos:line="129" pos:column="47">
      <block type="pseudo"><return pos:line="130" pos:column="7">return <expr><call><name pos:line="130" pos:column="14">varnish_submit_derive<pos:position pos:line="130" pos:column="35"/></name><argument_list pos:line="130" pos:column="35">(<argument><expr><name><name pos:line="130" pos:column="36">conf<pos:position pos:line="130" pos:column="40"/></name><operator pos:line="130" pos:column="40">-&gt;<pos:position pos:line="130" pos:column="45"/></operator><name pos:line="130" pos:column="42">instance<pos:position pos:line="130" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="52">"backend"<pos:position pos:line="130" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="63">"http_requests"<pos:position pos:line="130" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="131" pos:column="36">"requests"<pos:position pos:line="131" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="48">val<pos:position pos:line="131" pos:column="51"/></name></expr></argument>)<pos:position pos:line="131" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="132" pos:column="5">else <if pos:line="132" pos:column="10">if <condition pos:line="132" pos:column="13">(<expr><call><name pos:line="132" pos:column="14">strcmp<pos:position pos:line="132" pos:column="20"/></name><argument_list pos:line="132" pos:column="20">(<argument><expr><name pos:line="132" pos:column="21">name<pos:position pos:line="132" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="27">"n_backend"<pos:position pos:line="132" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="39"/></argument_list></call> <operator pos:line="132" pos:column="40">==<pos:position pos:line="132" pos:column="42"/></operator> <literal type="number" pos:line="132" pos:column="43">0<pos:position pos:line="132" pos:column="44"/></literal></expr>)<pos:position pos:line="132" pos:column="45"/></condition><then pos:line="132" pos:column="45">
      <block type="pseudo"><return pos:line="133" pos:column="7">return <expr><call><name pos:line="133" pos:column="14">varnish_submit_gauge<pos:position pos:line="133" pos:column="34"/></name><argument_list pos:line="133" pos:column="34">(<argument><expr><name><name pos:line="133" pos:column="35">conf<pos:position pos:line="133" pos:column="39"/></name><operator pos:line="133" pos:column="39">-&gt;<pos:position pos:line="133" pos:column="44"/></operator><name pos:line="133" pos:column="41">instance<pos:position pos:line="133" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="51">"backend"<pos:position pos:line="133" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="62">"backends"<pos:position pos:line="133" pos:column="72"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="134" pos:column="35">"n_backends"<pos:position pos:line="134" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="134" pos:column="49">val<pos:position pos:line="134" pos:column="52"/></name></expr></argument>)<pos:position pos:line="134" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="54"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="135" pos:column="4"/></block></then></if>

  <if pos:line="137" pos:column="3">if <condition pos:line="137" pos:column="6">(<expr><name><name pos:line="137" pos:column="7">conf<pos:position pos:line="137" pos:column="11"/></name><operator pos:line="137" pos:column="11">-&gt;<pos:position pos:line="137" pos:column="16"/></operator><name pos:line="137" pos:column="13">collect_fetch<pos:position pos:line="137" pos:column="26"/></name></name></expr>)<pos:position pos:line="137" pos:column="27"/></condition><then pos:line="137" pos:column="27"> <block pos:line="137" pos:column="28">{
    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><call><name pos:line="138" pos:column="9">strcmp<pos:position pos:line="138" pos:column="15"/></name><argument_list pos:line="138" pos:column="15">(<argument><expr><name pos:line="138" pos:column="16">name<pos:position pos:line="138" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="22">"fetch_head"<pos:position pos:line="138" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="35"/></argument_list></call> <operator pos:line="138" pos:column="36">==<pos:position pos:line="138" pos:column="38"/></operator> <literal type="number" pos:line="138" pos:column="39">0<pos:position pos:line="138" pos:column="40"/></literal></expr>)<pos:position pos:line="138" pos:column="41"/></condition><then pos:line="138" pos:column="41">
      <block type="pseudo"><return pos:line="139" pos:column="7">return <expr><call><name pos:line="139" pos:column="14">varnish_submit_derive<pos:position pos:line="139" pos:column="35"/></name><argument_list pos:line="139" pos:column="35">(<argument><expr><name><name pos:line="139" pos:column="36">conf<pos:position pos:line="139" pos:column="40"/></name><operator pos:line="139" pos:column="40">-&gt;<pos:position pos:line="139" pos:column="45"/></operator><name pos:line="139" pos:column="42">instance<pos:position pos:line="139" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="52">"fetch"<pos:position pos:line="139" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="139" pos:column="61">"http_requests"<pos:position pos:line="139" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="140" pos:column="36">"head"<pos:position pos:line="140" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="140" pos:column="44">val<pos:position pos:line="140" pos:column="47"/></name></expr></argument>)<pos:position pos:line="140" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="49"/></return></block></then>
    <elseif pos:line="141" pos:column="5">else <if pos:line="141" pos:column="10">if <condition pos:line="141" pos:column="13">(<expr><call><name pos:line="141" pos:column="14">strcmp<pos:position pos:line="141" pos:column="20"/></name><argument_list pos:line="141" pos:column="20">(<argument><expr><name pos:line="141" pos:column="21">name<pos:position pos:line="141" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="27">"fetch_length"<pos:position pos:line="141" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="42"/></argument_list></call> <operator pos:line="141" pos:column="43">==<pos:position pos:line="141" pos:column="45"/></operator> <literal type="number" pos:line="141" pos:column="46">0<pos:position pos:line="141" pos:column="47"/></literal></expr>)<pos:position pos:line="141" pos:column="48"/></condition><then pos:line="141" pos:column="48">
      <block type="pseudo"><return pos:line="142" pos:column="7">return <expr><call><name pos:line="142" pos:column="14">varnish_submit_derive<pos:position pos:line="142" pos:column="35"/></name><argument_list pos:line="142" pos:column="35">(<argument><expr><name><name pos:line="142" pos:column="36">conf<pos:position pos:line="142" pos:column="40"/></name><operator pos:line="142" pos:column="40">-&gt;<pos:position pos:line="142" pos:column="45"/></operator><name pos:line="142" pos:column="42">instance<pos:position pos:line="142" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="52">"fetch"<pos:position pos:line="142" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="61">"http_requests"<pos:position pos:line="142" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="143" pos:column="36">"length"<pos:position pos:line="143" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="143" pos:column="46">val<pos:position pos:line="143" pos:column="49"/></name></expr></argument>)<pos:position pos:line="143" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="144" pos:column="5">else <if pos:line="144" pos:column="10">if <condition pos:line="144" pos:column="13">(<expr><call><name pos:line="144" pos:column="14">strcmp<pos:position pos:line="144" pos:column="20"/></name><argument_list pos:line="144" pos:column="20">(<argument><expr><name pos:line="144" pos:column="21">name<pos:position pos:line="144" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="27">"fetch_chunked"<pos:position pos:line="144" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="43"/></argument_list></call> <operator pos:line="144" pos:column="44">==<pos:position pos:line="144" pos:column="46"/></operator> <literal type="number" pos:line="144" pos:column="47">0<pos:position pos:line="144" pos:column="48"/></literal></expr>)<pos:position pos:line="144" pos:column="49"/></condition><then pos:line="144" pos:column="49">
      <block type="pseudo"><return pos:line="145" pos:column="7">return <expr><call><name pos:line="145" pos:column="14">varnish_submit_derive<pos:position pos:line="145" pos:column="35"/></name><argument_list pos:line="145" pos:column="35">(<argument><expr><name><name pos:line="145" pos:column="36">conf<pos:position pos:line="145" pos:column="40"/></name><operator pos:line="145" pos:column="40">-&gt;<pos:position pos:line="145" pos:column="45"/></operator><name pos:line="145" pos:column="42">instance<pos:position pos:line="145" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="52">"fetch"<pos:position pos:line="145" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="61">"http_requests"<pos:position pos:line="145" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="146" pos:column="36">"chunked"<pos:position pos:line="146" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="47">val<pos:position pos:line="146" pos:column="50"/></name></expr></argument>)<pos:position pos:line="146" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="147" pos:column="5">else <if pos:line="147" pos:column="10">if <condition pos:line="147" pos:column="13">(<expr><call><name pos:line="147" pos:column="14">strcmp<pos:position pos:line="147" pos:column="20"/></name><argument_list pos:line="147" pos:column="20">(<argument><expr><name pos:line="147" pos:column="21">name<pos:position pos:line="147" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="27">"fetch_eof"<pos:position pos:line="147" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="39"/></argument_list></call> <operator pos:line="147" pos:column="40">==<pos:position pos:line="147" pos:column="42"/></operator> <literal type="number" pos:line="147" pos:column="43">0<pos:position pos:line="147" pos:column="44"/></literal></expr>)<pos:position pos:line="147" pos:column="45"/></condition><then pos:line="147" pos:column="45">
      <block type="pseudo"><return pos:line="148" pos:column="7">return <expr><call><name pos:line="148" pos:column="14">varnish_submit_derive<pos:position pos:line="148" pos:column="35"/></name><argument_list pos:line="148" pos:column="35">(<argument><expr><name><name pos:line="148" pos:column="36">conf<pos:position pos:line="148" pos:column="40"/></name><operator pos:line="148" pos:column="40">-&gt;<pos:position pos:line="148" pos:column="45"/></operator><name pos:line="148" pos:column="42">instance<pos:position pos:line="148" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="52">"fetch"<pos:position pos:line="148" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="61">"http_requests"<pos:position pos:line="148" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="149" pos:column="36">"eof"<pos:position pos:line="149" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="149" pos:column="43">val<pos:position pos:line="149" pos:column="46"/></name></expr></argument>)<pos:position pos:line="149" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="48"/></return></block></then></if></elseif>
    <elseif pos:line="150" pos:column="5">else <if pos:line="150" pos:column="10">if <condition pos:line="150" pos:column="13">(<expr><call><name pos:line="150" pos:column="14">strcmp<pos:position pos:line="150" pos:column="20"/></name><argument_list pos:line="150" pos:column="20">(<argument><expr><name pos:line="150" pos:column="21">name<pos:position pos:line="150" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="27">"fetch_bad"<pos:position pos:line="150" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="39"/></argument_list></call> <operator pos:line="150" pos:column="40">==<pos:position pos:line="150" pos:column="42"/></operator> <literal type="number" pos:line="150" pos:column="43">0<pos:position pos:line="150" pos:column="44"/></literal></expr>)<pos:position pos:line="150" pos:column="45"/></condition><then pos:line="150" pos:column="45">
      <block type="pseudo"><return pos:line="151" pos:column="7">return <expr><call><name pos:line="151" pos:column="14">varnish_submit_derive<pos:position pos:line="151" pos:column="35"/></name><argument_list pos:line="151" pos:column="35">(<argument><expr><name><name pos:line="151" pos:column="36">conf<pos:position pos:line="151" pos:column="40"/></name><operator pos:line="151" pos:column="40">-&gt;<pos:position pos:line="151" pos:column="45"/></operator><name pos:line="151" pos:column="42">instance<pos:position pos:line="151" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="52">"fetch"<pos:position pos:line="151" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="61">"http_requests"<pos:position pos:line="151" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="152" pos:column="36">"bad_headers"<pos:position pos:line="152" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="152" pos:column="51">val<pos:position pos:line="152" pos:column="54"/></name></expr></argument>)<pos:position pos:line="152" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="153" pos:column="5">else <if pos:line="153" pos:column="10">if <condition pos:line="153" pos:column="13">(<expr><call><name pos:line="153" pos:column="14">strcmp<pos:position pos:line="153" pos:column="20"/></name><argument_list pos:line="153" pos:column="20">(<argument><expr><name pos:line="153" pos:column="21">name<pos:position pos:line="153" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="27">"fetch_close"<pos:position pos:line="153" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="41"/></argument_list></call> <operator pos:line="153" pos:column="42">==<pos:position pos:line="153" pos:column="44"/></operator> <literal type="number" pos:line="153" pos:column="45">0<pos:position pos:line="153" pos:column="46"/></literal></expr>)<pos:position pos:line="153" pos:column="47"/></condition><then pos:line="153" pos:column="47">
      <block type="pseudo"><return pos:line="154" pos:column="7">return <expr><call><name pos:line="154" pos:column="14">varnish_submit_derive<pos:position pos:line="154" pos:column="35"/></name><argument_list pos:line="154" pos:column="35">(<argument><expr><name><name pos:line="154" pos:column="36">conf<pos:position pos:line="154" pos:column="40"/></name><operator pos:line="154" pos:column="40">-&gt;<pos:position pos:line="154" pos:column="45"/></operator><name pos:line="154" pos:column="42">instance<pos:position pos:line="154" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="52">"fetch"<pos:position pos:line="154" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="154" pos:column="61">"http_requests"<pos:position pos:line="154" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="155" pos:column="36">"close"<pos:position pos:line="155" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="155" pos:column="45">val<pos:position pos:line="155" pos:column="48"/></name></expr></argument>)<pos:position pos:line="155" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="50"/></return></block></then></if></elseif>
    <elseif pos:line="156" pos:column="5">else <if pos:line="156" pos:column="10">if <condition pos:line="156" pos:column="13">(<expr><call><name pos:line="156" pos:column="14">strcmp<pos:position pos:line="156" pos:column="20"/></name><argument_list pos:line="156" pos:column="20">(<argument><expr><name pos:line="156" pos:column="21">name<pos:position pos:line="156" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="27">"fetch_oldhttp"<pos:position pos:line="156" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="43"/></argument_list></call> <operator pos:line="156" pos:column="44">==<pos:position pos:line="156" pos:column="46"/></operator> <literal type="number" pos:line="156" pos:column="47">0<pos:position pos:line="156" pos:column="48"/></literal></expr>)<pos:position pos:line="156" pos:column="49"/></condition><then pos:line="156" pos:column="49">
      <block type="pseudo"><return pos:line="157" pos:column="7">return <expr><call><name pos:line="157" pos:column="14">varnish_submit_derive<pos:position pos:line="157" pos:column="35"/></name><argument_list pos:line="157" pos:column="35">(<argument><expr><name><name pos:line="157" pos:column="36">conf<pos:position pos:line="157" pos:column="40"/></name><operator pos:line="157" pos:column="40">-&gt;<pos:position pos:line="157" pos:column="45"/></operator><name pos:line="157" pos:column="42">instance<pos:position pos:line="157" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="52">"fetch"<pos:position pos:line="157" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="61">"http_requests"<pos:position pos:line="157" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="158" pos:column="36">"oldhttp"<pos:position pos:line="158" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="47">val<pos:position pos:line="158" pos:column="50"/></name></expr></argument>)<pos:position pos:line="158" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="159" pos:column="5">else <if pos:line="159" pos:column="10">if <condition pos:line="159" pos:column="13">(<expr><call><name pos:line="159" pos:column="14">strcmp<pos:position pos:line="159" pos:column="20"/></name><argument_list pos:line="159" pos:column="20">(<argument><expr><name pos:line="159" pos:column="21">name<pos:position pos:line="159" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="27">"fetch_zero"<pos:position pos:line="159" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="40"/></argument_list></call> <operator pos:line="159" pos:column="41">==<pos:position pos:line="159" pos:column="43"/></operator> <literal type="number" pos:line="159" pos:column="44">0<pos:position pos:line="159" pos:column="45"/></literal></expr>)<pos:position pos:line="159" pos:column="46"/></condition><then pos:line="159" pos:column="46">
      <block type="pseudo"><return pos:line="160" pos:column="7">return <expr><call><name pos:line="160" pos:column="14">varnish_submit_derive<pos:position pos:line="160" pos:column="35"/></name><argument_list pos:line="160" pos:column="35">(<argument><expr><name><name pos:line="160" pos:column="36">conf<pos:position pos:line="160" pos:column="40"/></name><operator pos:line="160" pos:column="40">-&gt;<pos:position pos:line="160" pos:column="45"/></operator><name pos:line="160" pos:column="42">instance<pos:position pos:line="160" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="52">"fetch"<pos:position pos:line="160" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="61">"http_requests"<pos:position pos:line="160" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="161" pos:column="36">"zero"<pos:position pos:line="161" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="161" pos:column="44">val<pos:position pos:line="161" pos:column="47"/></name></expr></argument>)<pos:position pos:line="161" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="49"/></return></block></then></if></elseif>
    <elseif pos:line="162" pos:column="5">else <if pos:line="162" pos:column="10">if <condition pos:line="162" pos:column="13">(<expr><call><name pos:line="162" pos:column="14">strcmp<pos:position pos:line="162" pos:column="20"/></name><argument_list pos:line="162" pos:column="20">(<argument><expr><name pos:line="162" pos:column="21">name<pos:position pos:line="162" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="27">"fetch_failed"<pos:position pos:line="162" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="42"/></argument_list></call> <operator pos:line="162" pos:column="43">==<pos:position pos:line="162" pos:column="45"/></operator> <literal type="number" pos:line="162" pos:column="46">0<pos:position pos:line="162" pos:column="47"/></literal></expr>)<pos:position pos:line="162" pos:column="48"/></condition><then pos:line="162" pos:column="48">
      <block type="pseudo"><return pos:line="163" pos:column="7">return <expr><call><name pos:line="163" pos:column="14">varnish_submit_derive<pos:position pos:line="163" pos:column="35"/></name><argument_list pos:line="163" pos:column="35">(<argument><expr><name><name pos:line="163" pos:column="36">conf<pos:position pos:line="163" pos:column="40"/></name><operator pos:line="163" pos:column="40">-&gt;<pos:position pos:line="163" pos:column="45"/></operator><name pos:line="163" pos:column="42">instance<pos:position pos:line="163" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="52">"fetch"<pos:position pos:line="163" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="61">"http_requests"<pos:position pos:line="163" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="164" pos:column="36">"failed"<pos:position pos:line="164" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="164" pos:column="46">val<pos:position pos:line="164" pos:column="49"/></name></expr></argument>)<pos:position pos:line="164" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="165" pos:column="5">else <if pos:line="165" pos:column="10">if <condition pos:line="165" pos:column="13">(<expr><call><name pos:line="165" pos:column="14">strcmp<pos:position pos:line="165" pos:column="20"/></name><argument_list pos:line="165" pos:column="20">(<argument><expr><name pos:line="165" pos:column="21">name<pos:position pos:line="165" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="165" pos:column="27">"fetch_1xx"<pos:position pos:line="165" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="39"/></argument_list></call> <operator pos:line="165" pos:column="40">==<pos:position pos:line="165" pos:column="42"/></operator> <literal type="number" pos:line="165" pos:column="43">0<pos:position pos:line="165" pos:column="44"/></literal></expr>)<pos:position pos:line="165" pos:column="45"/></condition><then pos:line="165" pos:column="45">
      <block type="pseudo"><return pos:line="166" pos:column="7">return <expr><call><name pos:line="166" pos:column="14">varnish_submit_derive<pos:position pos:line="166" pos:column="35"/></name><argument_list pos:line="166" pos:column="35">(<argument><expr><name><name pos:line="166" pos:column="36">conf<pos:position pos:line="166" pos:column="40"/></name><operator pos:line="166" pos:column="40">-&gt;<pos:position pos:line="166" pos:column="45"/></operator><name pos:line="166" pos:column="42">instance<pos:position pos:line="166" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="52">"fetch"<pos:position pos:line="166" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="61">"http_requests"<pos:position pos:line="166" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="167" pos:column="36">"no_body_1xx"<pos:position pos:line="167" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="51">val<pos:position pos:line="167" pos:column="54"/></name></expr></argument>)<pos:position pos:line="167" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="168" pos:column="5">else <if pos:line="168" pos:column="10">if <condition pos:line="168" pos:column="13">(<expr><call><name pos:line="168" pos:column="14">strcmp<pos:position pos:line="168" pos:column="20"/></name><argument_list pos:line="168" pos:column="20">(<argument><expr><name pos:line="168" pos:column="21">name<pos:position pos:line="168" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="27">"fetch_204"<pos:position pos:line="168" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="39"/></argument_list></call> <operator pos:line="168" pos:column="40">==<pos:position pos:line="168" pos:column="42"/></operator> <literal type="number" pos:line="168" pos:column="43">0<pos:position pos:line="168" pos:column="44"/></literal></expr>)<pos:position pos:line="168" pos:column="45"/></condition><then pos:line="168" pos:column="45">
      <block type="pseudo"><return pos:line="169" pos:column="7">return <expr><call><name pos:line="169" pos:column="14">varnish_submit_derive<pos:position pos:line="169" pos:column="35"/></name><argument_list pos:line="169" pos:column="35">(<argument><expr><name><name pos:line="169" pos:column="36">conf<pos:position pos:line="169" pos:column="40"/></name><operator pos:line="169" pos:column="40">-&gt;<pos:position pos:line="169" pos:column="45"/></operator><name pos:line="169" pos:column="42">instance<pos:position pos:line="169" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="52">"fetch"<pos:position pos:line="169" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="61">"http_requests"<pos:position pos:line="169" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="170" pos:column="36">"no_body_204"<pos:position pos:line="170" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="170" pos:column="51">val<pos:position pos:line="170" pos:column="54"/></name></expr></argument>)<pos:position pos:line="170" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="171" pos:column="5">else <if pos:line="171" pos:column="10">if <condition pos:line="171" pos:column="13">(<expr><call><name pos:line="171" pos:column="14">strcmp<pos:position pos:line="171" pos:column="20"/></name><argument_list pos:line="171" pos:column="20">(<argument><expr><name pos:line="171" pos:column="21">name<pos:position pos:line="171" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="171" pos:column="27">"fetch_304"<pos:position pos:line="171" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="171" pos:column="39"/></argument_list></call> <operator pos:line="171" pos:column="40">==<pos:position pos:line="171" pos:column="42"/></operator> <literal type="number" pos:line="171" pos:column="43">0<pos:position pos:line="171" pos:column="44"/></literal></expr>)<pos:position pos:line="171" pos:column="45"/></condition><then pos:line="171" pos:column="45">
      <block type="pseudo"><return pos:line="172" pos:column="7">return <expr><call><name pos:line="172" pos:column="14">varnish_submit_derive<pos:position pos:line="172" pos:column="35"/></name><argument_list pos:line="172" pos:column="35">(<argument><expr><name><name pos:line="172" pos:column="36">conf<pos:position pos:line="172" pos:column="40"/></name><operator pos:line="172" pos:column="40">-&gt;<pos:position pos:line="172" pos:column="45"/></operator><name pos:line="172" pos:column="42">instance<pos:position pos:line="172" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="52">"fetch"<pos:position pos:line="172" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="61">"http_requests"<pos:position pos:line="172" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="173" pos:column="36">"no_body_304"<pos:position pos:line="173" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="173" pos:column="51">val<pos:position pos:line="173" pos:column="54"/></name></expr></argument>)<pos:position pos:line="173" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="56"/></return></block></then></if></elseif>
<cpp:if pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">if<pos:position pos:line="174" pos:column="4"/></cpp:directive> <expr><name pos:line="174" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="174" pos:column="20"/></name> <operator pos:line="174" pos:column="21">||<pos:position pos:line="174" pos:column="23"/></operator> <name pos:line="174" pos:column="24">HAVE_VARNISH_V5<pos:position pos:line="174" pos:column="39"/></name></expr></cpp:if>
    <elseif pos:line="175" pos:column="5">else <if pos:line="175" pos:column="10">if <condition pos:line="175" pos:column="13">(<expr><call><name pos:line="175" pos:column="14">strcmp<pos:position pos:line="175" pos:column="20"/></name><argument_list pos:line="175" pos:column="20">(<argument><expr><name pos:line="175" pos:column="21">name<pos:position pos:line="175" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="27">"fetch_no_thread"<pos:position pos:line="175" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="45"/></argument_list></call> <operator pos:line="175" pos:column="46">==<pos:position pos:line="175" pos:column="48"/></operator> <literal type="number" pos:line="175" pos:column="49">0<pos:position pos:line="175" pos:column="50"/></literal></expr>)<pos:position pos:line="175" pos:column="51"/></condition><then pos:line="175" pos:column="51">
      <block type="pseudo"><return pos:line="176" pos:column="7">return <expr><call><name pos:line="176" pos:column="14">varnish_submit_derive<pos:position pos:line="176" pos:column="35"/></name><argument_list pos:line="176" pos:column="35">(<argument><expr><name><name pos:line="176" pos:column="36">conf<pos:position pos:line="176" pos:column="40"/></name><operator pos:line="176" pos:column="40">-&gt;<pos:position pos:line="176" pos:column="45"/></operator><name pos:line="176" pos:column="42">instance<pos:position pos:line="176" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="52">"fetch"<pos:position pos:line="176" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="61">"http_requests"<pos:position pos:line="176" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="177" pos:column="36">"no_thread"<pos:position pos:line="177" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="177" pos:column="49">val<pos:position pos:line="177" pos:column="52"/></name></expr></argument>)<pos:position pos:line="177" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="178" pos:column="5">else <if pos:line="178" pos:column="10">if <condition pos:line="178" pos:column="13">(<expr><call><name pos:line="178" pos:column="14">strcmp<pos:position pos:line="178" pos:column="20"/></name><argument_list pos:line="178" pos:column="20">(<argument><expr><name pos:line="178" pos:column="21">name<pos:position pos:line="178" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="27">"fetch_none"<pos:position pos:line="178" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="40"/></argument_list></call> <operator pos:line="178" pos:column="41">==<pos:position pos:line="178" pos:column="43"/></operator> <literal type="number" pos:line="178" pos:column="44">0<pos:position pos:line="178" pos:column="45"/></literal></expr>)<pos:position pos:line="178" pos:column="46"/></condition><then pos:line="178" pos:column="46">
      <block type="pseudo"><return pos:line="179" pos:column="7">return <expr><call><name pos:line="179" pos:column="14">varnish_submit_derive<pos:position pos:line="179" pos:column="35"/></name><argument_list pos:line="179" pos:column="35">(<argument><expr><name><name pos:line="179" pos:column="36">conf<pos:position pos:line="179" pos:column="40"/></name><operator pos:line="179" pos:column="40">-&gt;<pos:position pos:line="179" pos:column="45"/></operator><name pos:line="179" pos:column="42">instance<pos:position pos:line="179" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="52">"fetch"<pos:position pos:line="179" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="61">"http_requests"<pos:position pos:line="179" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="180" pos:column="36">"none"<pos:position pos:line="180" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="180" pos:column="44">val<pos:position pos:line="180" pos:column="47"/></name></expr></argument>)<pos:position pos:line="180" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="49"/></return></block></then></if></elseif>
    <elseif pos:line="181" pos:column="5">else <if pos:line="181" pos:column="10">if <condition pos:line="181" pos:column="13">(<expr><call><name pos:line="181" pos:column="14">strcmp<pos:position pos:line="181" pos:column="20"/></name><argument_list pos:line="181" pos:column="20">(<argument><expr><name pos:line="181" pos:column="21">name<pos:position pos:line="181" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="27">"busy_sleep"<pos:position pos:line="181" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="40"/></argument_list></call> <operator pos:line="181" pos:column="41">==<pos:position pos:line="181" pos:column="43"/></operator> <literal type="number" pos:line="181" pos:column="44">0<pos:position pos:line="181" pos:column="45"/></literal></expr>)<pos:position pos:line="181" pos:column="46"/></condition><then pos:line="181" pos:column="46">
      <block type="pseudo"><return pos:line="182" pos:column="7">return <expr><call><name pos:line="182" pos:column="14">varnish_submit_derive<pos:position pos:line="182" pos:column="35"/></name><argument_list pos:line="182" pos:column="35">(<argument><expr><name><name pos:line="182" pos:column="36">conf<pos:position pos:line="182" pos:column="40"/></name><operator pos:line="182" pos:column="40">-&gt;<pos:position pos:line="182" pos:column="45"/></operator><name pos:line="182" pos:column="42">instance<pos:position pos:line="182" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="52">"fetch"<pos:position pos:line="182" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="182" pos:column="61">"http_requests"<pos:position pos:line="182" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="183" pos:column="36">"busy_sleep"<pos:position pos:line="183" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="183" pos:column="50">val<pos:position pos:line="183" pos:column="53"/></name></expr></argument>)<pos:position pos:line="183" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="184" pos:column="5">else <if pos:line="184" pos:column="10">if <condition pos:line="184" pos:column="13">(<expr><call><name pos:line="184" pos:column="14">strcmp<pos:position pos:line="184" pos:column="20"/></name><argument_list pos:line="184" pos:column="20">(<argument><expr><name pos:line="184" pos:column="21">name<pos:position pos:line="184" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="27">"busy_wakeup"<pos:position pos:line="184" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="41"/></argument_list></call> <operator pos:line="184" pos:column="42">==<pos:position pos:line="184" pos:column="44"/></operator> <literal type="number" pos:line="184" pos:column="45">0<pos:position pos:line="184" pos:column="46"/></literal></expr>)<pos:position pos:line="184" pos:column="47"/></condition><then pos:line="184" pos:column="47">
      <block type="pseudo"><return pos:line="185" pos:column="7">return <expr><call><name pos:line="185" pos:column="14">varnish_submit_derive<pos:position pos:line="185" pos:column="35"/></name><argument_list pos:line="185" pos:column="35">(<argument><expr><name><name pos:line="185" pos:column="36">conf<pos:position pos:line="185" pos:column="40"/></name><operator pos:line="185" pos:column="40">-&gt;<pos:position pos:line="185" pos:column="45"/></operator><name pos:line="185" pos:column="42">instance<pos:position pos:line="185" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="52">"fetch"<pos:position pos:line="185" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="185" pos:column="61">"http_requests"<pos:position pos:line="185" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="186" pos:column="36">"busy_wakeup"<pos:position pos:line="186" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="186" pos:column="51">val<pos:position pos:line="186" pos:column="54"/></name></expr></argument>)<pos:position pos:line="186" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="56"/></return></block></then></if></elseif></if>
<cpp:endif pos:line="187" pos:column="1">#<cpp:directive pos:line="187" pos:column="2">endif<pos:position pos:line="187" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="188" pos:column="4"/></block></then></if>

  <if pos:line="190" pos:column="3">if <condition pos:line="190" pos:column="6">(<expr><name><name pos:line="190" pos:column="7">conf<pos:position pos:line="190" pos:column="11"/></name><operator pos:line="190" pos:column="11">-&gt;<pos:position pos:line="190" pos:column="16"/></operator><name pos:line="190" pos:column="13">collect_hcb<pos:position pos:line="190" pos:column="24"/></name></name></expr>)<pos:position pos:line="190" pos:column="25"/></condition><then pos:line="190" pos:column="25"> <block pos:line="190" pos:column="26">{
    <if pos:line="191" pos:column="5">if <condition pos:line="191" pos:column="8">(<expr><call><name pos:line="191" pos:column="9">strcmp<pos:position pos:line="191" pos:column="15"/></name><argument_list pos:line="191" pos:column="15">(<argument><expr><name pos:line="191" pos:column="16">name<pos:position pos:line="191" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="191" pos:column="22">"hcb_nolock"<pos:position pos:line="191" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="191" pos:column="35"/></argument_list></call> <operator pos:line="191" pos:column="36">==<pos:position pos:line="191" pos:column="38"/></operator> <literal type="number" pos:line="191" pos:column="39">0<pos:position pos:line="191" pos:column="40"/></literal></expr>)<pos:position pos:line="191" pos:column="41"/></condition><then pos:line="191" pos:column="41">
      <block type="pseudo"><return pos:line="192" pos:column="7">return <expr><call><name pos:line="192" pos:column="14">varnish_submit_derive<pos:position pos:line="192" pos:column="35"/></name><argument_list pos:line="192" pos:column="35">(<argument><expr><name><name pos:line="192" pos:column="36">conf<pos:position pos:line="192" pos:column="40"/></name><operator pos:line="192" pos:column="40">-&gt;<pos:position pos:line="192" pos:column="45"/></operator><name pos:line="192" pos:column="42">instance<pos:position pos:line="192" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="52">"hcb"<pos:position pos:line="192" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="59">"cache_operation"<pos:position pos:line="192" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="193" pos:column="36">"lookup_nolock"<pos:position pos:line="193" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="193" pos:column="53">val<pos:position pos:line="193" pos:column="56"/></name></expr></argument>)<pos:position pos:line="193" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="58"/></return></block></then>
    <elseif pos:line="194" pos:column="5">else <if pos:line="194" pos:column="10">if <condition pos:line="194" pos:column="13">(<expr><call><name pos:line="194" pos:column="14">strcmp<pos:position pos:line="194" pos:column="20"/></name><argument_list pos:line="194" pos:column="20">(<argument><expr><name pos:line="194" pos:column="21">name<pos:position pos:line="194" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="27">"hcb_lock"<pos:position pos:line="194" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="38"/></argument_list></call> <operator pos:line="194" pos:column="39">==<pos:position pos:line="194" pos:column="41"/></operator> <literal type="number" pos:line="194" pos:column="42">0<pos:position pos:line="194" pos:column="43"/></literal></expr>)<pos:position pos:line="194" pos:column="44"/></condition><then pos:line="194" pos:column="44">
      <block type="pseudo"><return pos:line="195" pos:column="7">return <expr><call><name pos:line="195" pos:column="14">varnish_submit_derive<pos:position pos:line="195" pos:column="35"/></name><argument_list pos:line="195" pos:column="35">(<argument><expr><name><name pos:line="195" pos:column="36">conf<pos:position pos:line="195" pos:column="40"/></name><operator pos:line="195" pos:column="40">-&gt;<pos:position pos:line="195" pos:column="45"/></operator><name pos:line="195" pos:column="42">instance<pos:position pos:line="195" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="52">"hcb"<pos:position pos:line="195" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="59">"cache_operation"<pos:position pos:line="195" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="196" pos:column="36">"lookup_lock"<pos:position pos:line="196" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="196" pos:column="51">val<pos:position pos:line="196" pos:column="54"/></name></expr></argument>)<pos:position pos:line="196" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="197" pos:column="5">else <if pos:line="197" pos:column="10">if <condition pos:line="197" pos:column="13">(<expr><call><name pos:line="197" pos:column="14">strcmp<pos:position pos:line="197" pos:column="20"/></name><argument_list pos:line="197" pos:column="20">(<argument><expr><name pos:line="197" pos:column="21">name<pos:position pos:line="197" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="27">"hcb_insert"<pos:position pos:line="197" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="40"/></argument_list></call> <operator pos:line="197" pos:column="41">==<pos:position pos:line="197" pos:column="43"/></operator> <literal type="number" pos:line="197" pos:column="44">0<pos:position pos:line="197" pos:column="45"/></literal></expr>)<pos:position pos:line="197" pos:column="46"/></condition><then pos:line="197" pos:column="46">
      <block type="pseudo"><return pos:line="198" pos:column="7">return <expr><call><name pos:line="198" pos:column="14">varnish_submit_derive<pos:position pos:line="198" pos:column="35"/></name><argument_list pos:line="198" pos:column="35">(<argument><expr><name><name pos:line="198" pos:column="36">conf<pos:position pos:line="198" pos:column="40"/></name><operator pos:line="198" pos:column="40">-&gt;<pos:position pos:line="198" pos:column="45"/></operator><name pos:line="198" pos:column="42">instance<pos:position pos:line="198" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="52">"hcb"<pos:position pos:line="198" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="198" pos:column="59">"cache_operation"<pos:position pos:line="198" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="199" pos:column="36">"insert"<pos:position pos:line="199" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="199" pos:column="46">val<pos:position pos:line="199" pos:column="49"/></name></expr></argument>)<pos:position pos:line="199" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="51"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="200" pos:column="4"/></block></then></if>

  <if pos:line="202" pos:column="3">if <condition pos:line="202" pos:column="6">(<expr><name><name pos:line="202" pos:column="7">conf<pos:position pos:line="202" pos:column="11"/></name><operator pos:line="202" pos:column="11">-&gt;<pos:position pos:line="202" pos:column="16"/></operator><name pos:line="202" pos:column="13">collect_objects<pos:position pos:line="202" pos:column="28"/></name></name></expr>)<pos:position pos:line="202" pos:column="29"/></condition><then pos:line="202" pos:column="29"> <block pos:line="202" pos:column="30">{
    <if pos:line="203" pos:column="5">if <condition pos:line="203" pos:column="8">(<expr><call><name pos:line="203" pos:column="9">strcmp<pos:position pos:line="203" pos:column="15"/></name><argument_list pos:line="203" pos:column="15">(<argument><expr><name pos:line="203" pos:column="16">name<pos:position pos:line="203" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="22">"n_expired"<pos:position pos:line="203" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="34"/></argument_list></call> <operator pos:line="203" pos:column="35">==<pos:position pos:line="203" pos:column="37"/></operator> <literal type="number" pos:line="203" pos:column="38">0<pos:position pos:line="203" pos:column="39"/></literal></expr>)<pos:position pos:line="203" pos:column="40"/></condition><then pos:line="203" pos:column="40">
      <block type="pseudo"><return pos:line="204" pos:column="7">return <expr><call><name pos:line="204" pos:column="14">varnish_submit_derive<pos:position pos:line="204" pos:column="35"/></name><argument_list pos:line="204" pos:column="35">(<argument><expr><name><name pos:line="204" pos:column="36">conf<pos:position pos:line="204" pos:column="40"/></name><operator pos:line="204" pos:column="40">-&gt;<pos:position pos:line="204" pos:column="45"/></operator><name pos:line="204" pos:column="42">instance<pos:position pos:line="204" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="52">"objects"<pos:position pos:line="204" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="204" pos:column="63">"total_objects"<pos:position pos:line="204" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="205" pos:column="36">"expired"<pos:position pos:line="205" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="47">val<pos:position pos:line="205" pos:column="50"/></name></expr></argument>)<pos:position pos:line="205" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="52"/></return></block></then>
    <elseif pos:line="206" pos:column="5">else <if pos:line="206" pos:column="10">if <condition pos:line="206" pos:column="13">(<expr><call><name pos:line="206" pos:column="14">strcmp<pos:position pos:line="206" pos:column="20"/></name><argument_list pos:line="206" pos:column="20">(<argument><expr><name pos:line="206" pos:column="21">name<pos:position pos:line="206" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="206" pos:column="27">"n_lru_nuked"<pos:position pos:line="206" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="206" pos:column="41"/></argument_list></call> <operator pos:line="206" pos:column="42">==<pos:position pos:line="206" pos:column="44"/></operator> <literal type="number" pos:line="206" pos:column="45">0<pos:position pos:line="206" pos:column="46"/></literal></expr>)<pos:position pos:line="206" pos:column="47"/></condition><then pos:line="206" pos:column="47">
      <block type="pseudo"><return pos:line="207" pos:column="7">return <expr><call><name pos:line="207" pos:column="14">varnish_submit_derive<pos:position pos:line="207" pos:column="35"/></name><argument_list pos:line="207" pos:column="35">(<argument><expr><name><name pos:line="207" pos:column="36">conf<pos:position pos:line="207" pos:column="40"/></name><operator pos:line="207" pos:column="40">-&gt;<pos:position pos:line="207" pos:column="45"/></operator><name pos:line="207" pos:column="42">instance<pos:position pos:line="207" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="52">"objects"<pos:position pos:line="207" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="63">"total_objects"<pos:position pos:line="207" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="208" pos:column="36">"lru_nuked"<pos:position pos:line="208" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="49">val<pos:position pos:line="208" pos:column="52"/></name></expr></argument>)<pos:position pos:line="208" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="209" pos:column="5">else <if pos:line="209" pos:column="10">if <condition pos:line="209" pos:column="13">(<expr><call><name pos:line="209" pos:column="14">strcmp<pos:position pos:line="209" pos:column="20"/></name><argument_list pos:line="209" pos:column="20">(<argument><expr><name pos:line="209" pos:column="21">name<pos:position pos:line="209" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="27">"n_lru_saved"<pos:position pos:line="209" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="41"/></argument_list></call> <operator pos:line="209" pos:column="42">==<pos:position pos:line="209" pos:column="44"/></operator> <literal type="number" pos:line="209" pos:column="45">0<pos:position pos:line="209" pos:column="46"/></literal></expr>)<pos:position pos:line="209" pos:column="47"/></condition><then pos:line="209" pos:column="47">
      <block type="pseudo"><return pos:line="210" pos:column="7">return <expr><call><name pos:line="210" pos:column="14">varnish_submit_derive<pos:position pos:line="210" pos:column="35"/></name><argument_list pos:line="210" pos:column="35">(<argument><expr><name><name pos:line="210" pos:column="36">conf<pos:position pos:line="210" pos:column="40"/></name><operator pos:line="210" pos:column="40">-&gt;<pos:position pos:line="210" pos:column="45"/></operator><name pos:line="210" pos:column="42">instance<pos:position pos:line="210" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="52">"objects"<pos:position pos:line="210" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="63">"total_objects"<pos:position pos:line="210" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="211" pos:column="36">"lru_saved"<pos:position pos:line="211" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="211" pos:column="49">val<pos:position pos:line="211" pos:column="52"/></name></expr></argument>)<pos:position pos:line="211" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="212" pos:column="5">else <if pos:line="212" pos:column="10">if <condition pos:line="212" pos:column="13">(<expr><call><name pos:line="212" pos:column="14">strcmp<pos:position pos:line="212" pos:column="20"/></name><argument_list pos:line="212" pos:column="20">(<argument><expr><name pos:line="212" pos:column="21">name<pos:position pos:line="212" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="212" pos:column="27">"n_lru_moved"<pos:position pos:line="212" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="212" pos:column="41"/></argument_list></call> <operator pos:line="212" pos:column="42">==<pos:position pos:line="212" pos:column="44"/></operator> <literal type="number" pos:line="212" pos:column="45">0<pos:position pos:line="212" pos:column="46"/></literal></expr>)<pos:position pos:line="212" pos:column="47"/></condition><then pos:line="212" pos:column="47">
      <block type="pseudo"><return pos:line="213" pos:column="7">return <expr><call><name pos:line="213" pos:column="14">varnish_submit_derive<pos:position pos:line="213" pos:column="35"/></name><argument_list pos:line="213" pos:column="35">(<argument><expr><name><name pos:line="213" pos:column="36">conf<pos:position pos:line="213" pos:column="40"/></name><operator pos:line="213" pos:column="40">-&gt;<pos:position pos:line="213" pos:column="45"/></operator><name pos:line="213" pos:column="42">instance<pos:position pos:line="213" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="52">"objects"<pos:position pos:line="213" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="63">"total_objects"<pos:position pos:line="213" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="214" pos:column="36">"lru_moved"<pos:position pos:line="214" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="49">val<pos:position pos:line="214" pos:column="52"/></name></expr></argument>)<pos:position pos:line="214" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="215" pos:column="5">else <if pos:line="215" pos:column="10">if <condition pos:line="215" pos:column="13">(<expr><call><name pos:line="215" pos:column="14">strcmp<pos:position pos:line="215" pos:column="20"/></name><argument_list pos:line="215" pos:column="20">(<argument><expr><name pos:line="215" pos:column="21">name<pos:position pos:line="215" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="27">"n_deathrow"<pos:position pos:line="215" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="215" pos:column="40"/></argument_list></call> <operator pos:line="215" pos:column="41">==<pos:position pos:line="215" pos:column="43"/></operator> <literal type="number" pos:line="215" pos:column="44">0<pos:position pos:line="215" pos:column="45"/></literal></expr>)<pos:position pos:line="215" pos:column="46"/></condition><then pos:line="215" pos:column="46">
      <block type="pseudo"><return pos:line="216" pos:column="7">return <expr><call><name pos:line="216" pos:column="14">varnish_submit_derive<pos:position pos:line="216" pos:column="35"/></name><argument_list pos:line="216" pos:column="35">(<argument><expr><name><name pos:line="216" pos:column="36">conf<pos:position pos:line="216" pos:column="40"/></name><operator pos:line="216" pos:column="40">-&gt;<pos:position pos:line="216" pos:column="45"/></operator><name pos:line="216" pos:column="42">instance<pos:position pos:line="216" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="52">"objects"<pos:position pos:line="216" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="216" pos:column="63">"total_objects"<pos:position pos:line="216" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="217" pos:column="36">"deathrow"<pos:position pos:line="217" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="48">val<pos:position pos:line="217" pos:column="51"/></name></expr></argument>)<pos:position pos:line="217" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="218" pos:column="5">else <if pos:line="218" pos:column="10">if <condition pos:line="218" pos:column="13">(<expr><call><name pos:line="218" pos:column="14">strcmp<pos:position pos:line="218" pos:column="20"/></name><argument_list pos:line="218" pos:column="20">(<argument><expr><name pos:line="218" pos:column="21">name<pos:position pos:line="218" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="218" pos:column="27">"losthdr"<pos:position pos:line="218" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="218" pos:column="37"/></argument_list></call> <operator pos:line="218" pos:column="38">==<pos:position pos:line="218" pos:column="40"/></operator> <literal type="number" pos:line="218" pos:column="41">0<pos:position pos:line="218" pos:column="42"/></literal></expr>)<pos:position pos:line="218" pos:column="43"/></condition><then pos:line="218" pos:column="43">
      <block type="pseudo"><return pos:line="219" pos:column="7">return <expr><call><name pos:line="219" pos:column="14">varnish_submit_derive<pos:position pos:line="219" pos:column="35"/></name><argument_list pos:line="219" pos:column="35">(<argument><expr><name><name pos:line="219" pos:column="36">conf<pos:position pos:line="219" pos:column="40"/></name><operator pos:line="219" pos:column="40">-&gt;<pos:position pos:line="219" pos:column="45"/></operator><name pos:line="219" pos:column="42">instance<pos:position pos:line="219" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="52">"objects"<pos:position pos:line="219" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="63">"total_objects"<pos:position pos:line="219" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="220" pos:column="36">"header_overflow"<pos:position pos:line="220" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="220" pos:column="55">val<pos:position pos:line="220" pos:column="58"/></name></expr></argument>)<pos:position pos:line="220" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="221" pos:column="5">else <if pos:line="221" pos:column="10">if <condition pos:line="221" pos:column="13">(<expr><call><name pos:line="221" pos:column="14">strcmp<pos:position pos:line="221" pos:column="20"/></name><argument_list pos:line="221" pos:column="20">(<argument><expr><name pos:line="221" pos:column="21">name<pos:position pos:line="221" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="27">"n_obj_purged"<pos:position pos:line="221" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="42"/></argument_list></call> <operator pos:line="221" pos:column="43">==<pos:position pos:line="221" pos:column="45"/></operator> <literal type="number" pos:line="221" pos:column="46">0<pos:position pos:line="221" pos:column="47"/></literal></expr>)<pos:position pos:line="221" pos:column="48"/></condition><then pos:line="221" pos:column="48">
      <block type="pseudo"><return pos:line="222" pos:column="7">return <expr><call><name pos:line="222" pos:column="14">varnish_submit_derive<pos:position pos:line="222" pos:column="35"/></name><argument_list pos:line="222" pos:column="35">(<argument><expr><name><name pos:line="222" pos:column="36">conf<pos:position pos:line="222" pos:column="40"/></name><operator pos:line="222" pos:column="40">-&gt;<pos:position pos:line="222" pos:column="45"/></operator><name pos:line="222" pos:column="42">instance<pos:position pos:line="222" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="52">"objects"<pos:position pos:line="222" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="222" pos:column="63">"total_objects"<pos:position pos:line="222" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="223" pos:column="36">"purged"<pos:position pos:line="223" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="223" pos:column="46">val<pos:position pos:line="223" pos:column="49"/></name></expr></argument>)<pos:position pos:line="223" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="223" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="224" pos:column="5">else <if pos:line="224" pos:column="10">if <condition pos:line="224" pos:column="13">(<expr><call><name pos:line="224" pos:column="14">strcmp<pos:position pos:line="224" pos:column="20"/></name><argument_list pos:line="224" pos:column="20">(<argument><expr><name pos:line="224" pos:column="21">name<pos:position pos:line="224" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="224" pos:column="27">"n_objsendfile"<pos:position pos:line="224" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="224" pos:column="43"/></argument_list></call> <operator pos:line="224" pos:column="44">==<pos:position pos:line="224" pos:column="46"/></operator> <literal type="number" pos:line="224" pos:column="47">0<pos:position pos:line="224" pos:column="48"/></literal></expr>)<pos:position pos:line="224" pos:column="49"/></condition><then pos:line="224" pos:column="49">
      <block type="pseudo"><return pos:line="225" pos:column="7">return <expr><call><name pos:line="225" pos:column="14">varnish_submit_derive<pos:position pos:line="225" pos:column="35"/></name><argument_list pos:line="225" pos:column="35">(<argument><expr><name><name pos:line="225" pos:column="36">conf<pos:position pos:line="225" pos:column="40"/></name><operator pos:line="225" pos:column="40">-&gt;<pos:position pos:line="225" pos:column="45"/></operator><name pos:line="225" pos:column="42">instance<pos:position pos:line="225" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="225" pos:column="52">"objects"<pos:position pos:line="225" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="225" pos:column="63">"total_objects"<pos:position pos:line="225" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="226" pos:column="36">"sent_sendfile"<pos:position pos:line="226" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="53">val<pos:position pos:line="226" pos:column="56"/></name></expr></argument>)<pos:position pos:line="226" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="58"/></return></block></then></if></elseif>
    <elseif pos:line="227" pos:column="5">else <if pos:line="227" pos:column="10">if <condition pos:line="227" pos:column="13">(<expr><call><name pos:line="227" pos:column="14">strcmp<pos:position pos:line="227" pos:column="20"/></name><argument_list pos:line="227" pos:column="20">(<argument><expr><name pos:line="227" pos:column="21">name<pos:position pos:line="227" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="27">"n_objwrite"<pos:position pos:line="227" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="40"/></argument_list></call> <operator pos:line="227" pos:column="41">==<pos:position pos:line="227" pos:column="43"/></operator> <literal type="number" pos:line="227" pos:column="44">0<pos:position pos:line="227" pos:column="45"/></literal></expr>)<pos:position pos:line="227" pos:column="46"/></condition><then pos:line="227" pos:column="46">
      <block type="pseudo"><return pos:line="228" pos:column="7">return <expr><call><name pos:line="228" pos:column="14">varnish_submit_derive<pos:position pos:line="228" pos:column="35"/></name><argument_list pos:line="228" pos:column="35">(<argument><expr><name><name pos:line="228" pos:column="36">conf<pos:position pos:line="228" pos:column="40"/></name><operator pos:line="228" pos:column="40">-&gt;<pos:position pos:line="228" pos:column="45"/></operator><name pos:line="228" pos:column="42">instance<pos:position pos:line="228" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="52">"objects"<pos:position pos:line="228" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="63">"total_objects"<pos:position pos:line="228" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="229" pos:column="36">"sent_write"<pos:position pos:line="229" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="229" pos:column="50">val<pos:position pos:line="229" pos:column="53"/></name></expr></argument>)<pos:position pos:line="229" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="230" pos:column="5">else <if pos:line="230" pos:column="10">if <condition pos:line="230" pos:column="13">(<expr><call><name pos:line="230" pos:column="14">strcmp<pos:position pos:line="230" pos:column="20"/></name><argument_list pos:line="230" pos:column="20">(<argument><expr><name pos:line="230" pos:column="21">name<pos:position pos:line="230" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="230" pos:column="27">"n_objoverflow"<pos:position pos:line="230" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="230" pos:column="43"/></argument_list></call> <operator pos:line="230" pos:column="44">==<pos:position pos:line="230" pos:column="46"/></operator> <literal type="number" pos:line="230" pos:column="47">0<pos:position pos:line="230" pos:column="48"/></literal></expr>)<pos:position pos:line="230" pos:column="49"/></condition><then pos:line="230" pos:column="49">
      <block type="pseudo"><return pos:line="231" pos:column="7">return <expr><call><name pos:line="231" pos:column="14">varnish_submit_derive<pos:position pos:line="231" pos:column="35"/></name><argument_list pos:line="231" pos:column="35">(<argument><expr><name><name pos:line="231" pos:column="36">conf<pos:position pos:line="231" pos:column="40"/></name><operator pos:line="231" pos:column="40">-&gt;<pos:position pos:line="231" pos:column="45"/></operator><name pos:line="231" pos:column="42">instance<pos:position pos:line="231" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="52">"objects"<pos:position pos:line="231" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="63">"total_objects"<pos:position pos:line="231" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="232" pos:column="36">"workspace_overflow"<pos:position pos:line="232" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="232" pos:column="58">val<pos:position pos:line="232" pos:column="61"/></name></expr></argument>)<pos:position pos:line="232" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="63"/></return></block></then></if></elseif>
<cpp:if pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">if<pos:position pos:line="233" pos:column="4"/></cpp:directive> <expr><name pos:line="233" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="233" pos:column="20"/></name> <operator pos:line="233" pos:column="21">||<pos:position pos:line="233" pos:column="23"/></operator> <name pos:line="233" pos:column="24">HAVE_VARNISH_V5<pos:position pos:line="233" pos:column="39"/></name></expr></cpp:if>
    <elseif pos:line="234" pos:column="5">else <if pos:line="234" pos:column="10">if <condition pos:line="234" pos:column="13">(<expr><call><name pos:line="234" pos:column="14">strcmp<pos:position pos:line="234" pos:column="20"/></name><argument_list pos:line="234" pos:column="20">(<argument><expr><name pos:line="234" pos:column="21">name<pos:position pos:line="234" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="27">"exp_mailed"<pos:position pos:line="234" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="234" pos:column="40"/></argument_list></call> <operator pos:line="234" pos:column="41">==<pos:position pos:line="234" pos:column="43"/></operator> <literal type="number" pos:line="234" pos:column="44">0<pos:position pos:line="234" pos:column="45"/></literal></expr>)<pos:position pos:line="234" pos:column="46"/></condition><then pos:line="234" pos:column="46">
      <block type="pseudo"><return pos:line="235" pos:column="7">return <expr><call><name pos:line="235" pos:column="14">varnish_submit_gauge<pos:position pos:line="235" pos:column="34"/></name><argument_list pos:line="235" pos:column="34">(<argument><expr><name><name pos:line="235" pos:column="35">conf<pos:position pos:line="235" pos:column="39"/></name><operator pos:line="235" pos:column="39">-&gt;<pos:position pos:line="235" pos:column="44"/></operator><name pos:line="235" pos:column="41">instance<pos:position pos:line="235" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="51">"struct"<pos:position pos:line="235" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="61">"objects"<pos:position pos:line="235" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="236" pos:column="35">"exp_mailed"<pos:position pos:line="236" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="236" pos:column="49">val<pos:position pos:line="236" pos:column="52"/></name></expr></argument>)<pos:position pos:line="236" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="236" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="237" pos:column="5">else <if pos:line="237" pos:column="10">if <condition pos:line="237" pos:column="13">(<expr><call><name pos:line="237" pos:column="14">strcmp<pos:position pos:line="237" pos:column="20"/></name><argument_list pos:line="237" pos:column="20">(<argument><expr><name pos:line="237" pos:column="21">name<pos:position pos:line="237" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="27">"exp_received"<pos:position pos:line="237" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="42"/></argument_list></call> <operator pos:line="237" pos:column="43">==<pos:position pos:line="237" pos:column="45"/></operator> <literal type="number" pos:line="237" pos:column="46">0<pos:position pos:line="237" pos:column="47"/></literal></expr>)<pos:position pos:line="237" pos:column="48"/></condition><then pos:line="237" pos:column="48">
      <block type="pseudo"><return pos:line="238" pos:column="7">return <expr><call><name pos:line="238" pos:column="14">varnish_submit_gauge<pos:position pos:line="238" pos:column="34"/></name><argument_list pos:line="238" pos:column="34">(<argument><expr><name><name pos:line="238" pos:column="35">conf<pos:position pos:line="238" pos:column="39"/></name><operator pos:line="238" pos:column="39">-&gt;<pos:position pos:line="238" pos:column="44"/></operator><name pos:line="238" pos:column="41">instance<pos:position pos:line="238" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="51">"struct"<pos:position pos:line="238" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="238" pos:column="61">"objects"<pos:position pos:line="238" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="239" pos:column="35">"exp_received"<pos:position pos:line="239" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="239" pos:column="51">val<pos:position pos:line="239" pos:column="54"/></name></expr></argument>)<pos:position pos:line="239" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="56"/></return></block></then></if></elseif></if>
<cpp:endif pos:line="240" pos:column="1">#<cpp:directive pos:line="240" pos:column="2">endif<pos:position pos:line="240" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="241" pos:column="4"/></block></then></if>

<cpp:if pos:line="243" pos:column="1">#<cpp:directive pos:line="243" pos:column="2">if<pos:position pos:line="243" pos:column="4"/></cpp:directive> <expr><name pos:line="243" pos:column="5">HAVE_VARNISH_V3<pos:position pos:line="243" pos:column="20"/></name></expr></cpp:if>
  <if pos:line="244" pos:column="3">if <condition pos:line="244" pos:column="6">(<expr><name><name pos:line="244" pos:column="7">conf<pos:position pos:line="244" pos:column="11"/></name><operator pos:line="244" pos:column="11">-&gt;<pos:position pos:line="244" pos:column="16"/></operator><name pos:line="244" pos:column="13">collect_ban<pos:position pos:line="244" pos:column="24"/></name></name></expr>)<pos:position pos:line="244" pos:column="25"/></condition><then pos:line="244" pos:column="25"> <block pos:line="244" pos:column="26">{
    <if pos:line="245" pos:column="5">if <condition pos:line="245" pos:column="8">(<expr><call><name pos:line="245" pos:column="9">strcmp<pos:position pos:line="245" pos:column="15"/></name><argument_list pos:line="245" pos:column="15">(<argument><expr><name pos:line="245" pos:column="16">name<pos:position pos:line="245" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="245" pos:column="22">"n_ban"<pos:position pos:line="245" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="245" pos:column="30"/></argument_list></call> <operator pos:line="245" pos:column="31">==<pos:position pos:line="245" pos:column="33"/></operator> <literal type="number" pos:line="245" pos:column="34">0<pos:position pos:line="245" pos:column="35"/></literal></expr>)<pos:position pos:line="245" pos:column="36"/></condition><then pos:line="245" pos:column="36">
      <block type="pseudo"><return pos:line="246" pos:column="7">return <expr><call><name pos:line="246" pos:column="14">varnish_submit_derive<pos:position pos:line="246" pos:column="35"/></name><argument_list pos:line="246" pos:column="35">(<argument><expr><name><name pos:line="246" pos:column="36">conf<pos:position pos:line="246" pos:column="40"/></name><operator pos:line="246" pos:column="40">-&gt;<pos:position pos:line="246" pos:column="45"/></operator><name pos:line="246" pos:column="42">instance<pos:position pos:line="246" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="52">"ban"<pos:position pos:line="246" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="246" pos:column="59">"total_operations"<pos:position pos:line="246" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="247" pos:column="36">"total"<pos:position pos:line="247" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="247" pos:column="45">val<pos:position pos:line="247" pos:column="48"/></name></expr></argument>)<pos:position pos:line="247" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="50"/></return></block></then>
    <elseif pos:line="248" pos:column="5">else <if pos:line="248" pos:column="10">if <condition pos:line="248" pos:column="13">(<expr><call><name pos:line="248" pos:column="14">strcmp<pos:position pos:line="248" pos:column="20"/></name><argument_list pos:line="248" pos:column="20">(<argument><expr><name pos:line="248" pos:column="21">name<pos:position pos:line="248" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="27">"n_ban_add"<pos:position pos:line="248" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="39"/></argument_list></call> <operator pos:line="248" pos:column="40">==<pos:position pos:line="248" pos:column="42"/></operator> <literal type="number" pos:line="248" pos:column="43">0<pos:position pos:line="248" pos:column="44"/></literal></expr>)<pos:position pos:line="248" pos:column="45"/></condition><then pos:line="248" pos:column="45">
      <block type="pseudo"><return pos:line="249" pos:column="7">return <expr><call><name pos:line="249" pos:column="14">varnish_submit_derive<pos:position pos:line="249" pos:column="35"/></name><argument_list pos:line="249" pos:column="35">(<argument><expr><name><name pos:line="249" pos:column="36">conf<pos:position pos:line="249" pos:column="40"/></name><operator pos:line="249" pos:column="40">-&gt;<pos:position pos:line="249" pos:column="45"/></operator><name pos:line="249" pos:column="42">instance<pos:position pos:line="249" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="52">"ban"<pos:position pos:line="249" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="249" pos:column="59">"total_operations"<pos:position pos:line="249" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="250" pos:column="36">"added"<pos:position pos:line="250" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="250" pos:column="45">val<pos:position pos:line="250" pos:column="48"/></name></expr></argument>)<pos:position pos:line="250" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="50"/></return></block></then></if></elseif>
    <elseif pos:line="251" pos:column="5">else <if pos:line="251" pos:column="10">if <condition pos:line="251" pos:column="13">(<expr><call><name pos:line="251" pos:column="14">strcmp<pos:position pos:line="251" pos:column="20"/></name><argument_list pos:line="251" pos:column="20">(<argument><expr><name pos:line="251" pos:column="21">name<pos:position pos:line="251" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="27">"n_ban_retire"<pos:position pos:line="251" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="42"/></argument_list></call> <operator pos:line="251" pos:column="43">==<pos:position pos:line="251" pos:column="45"/></operator> <literal type="number" pos:line="251" pos:column="46">0<pos:position pos:line="251" pos:column="47"/></literal></expr>)<pos:position pos:line="251" pos:column="48"/></condition><then pos:line="251" pos:column="48">
      <block type="pseudo"><return pos:line="252" pos:column="7">return <expr><call><name pos:line="252" pos:column="14">varnish_submit_derive<pos:position pos:line="252" pos:column="35"/></name><argument_list pos:line="252" pos:column="35">(<argument><expr><name><name pos:line="252" pos:column="36">conf<pos:position pos:line="252" pos:column="40"/></name><operator pos:line="252" pos:column="40">-&gt;<pos:position pos:line="252" pos:column="45"/></operator><name pos:line="252" pos:column="42">instance<pos:position pos:line="252" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="252" pos:column="52">"ban"<pos:position pos:line="252" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="252" pos:column="59">"total_operations"<pos:position pos:line="252" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="253" pos:column="36">"deleted"<pos:position pos:line="253" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="47">val<pos:position pos:line="253" pos:column="50"/></name></expr></argument>)<pos:position pos:line="253" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="254" pos:column="5">else <if pos:line="254" pos:column="10">if <condition pos:line="254" pos:column="13">(<expr><call><name pos:line="254" pos:column="14">strcmp<pos:position pos:line="254" pos:column="20"/></name><argument_list pos:line="254" pos:column="20">(<argument><expr><name pos:line="254" pos:column="21">name<pos:position pos:line="254" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="254" pos:column="27">"n_ban_obj_test"<pos:position pos:line="254" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="254" pos:column="44"/></argument_list></call> <operator pos:line="254" pos:column="45">==<pos:position pos:line="254" pos:column="47"/></operator> <literal type="number" pos:line="254" pos:column="48">0<pos:position pos:line="254" pos:column="49"/></literal></expr>)<pos:position pos:line="254" pos:column="50"/></condition><then pos:line="254" pos:column="50">
      <block type="pseudo"><return pos:line="255" pos:column="7">return <expr><call><name pos:line="255" pos:column="14">varnish_submit_derive<pos:position pos:line="255" pos:column="35"/></name><argument_list pos:line="255" pos:column="35">(<argument><expr><name><name pos:line="255" pos:column="36">conf<pos:position pos:line="255" pos:column="40"/></name><operator pos:line="255" pos:column="40">-&gt;<pos:position pos:line="255" pos:column="45"/></operator><name pos:line="255" pos:column="42">instance<pos:position pos:line="255" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="52">"ban"<pos:position pos:line="255" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="59">"total_operations"<pos:position pos:line="255" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="256" pos:column="36">"objects_tested"<pos:position pos:line="256" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="256" pos:column="54">val<pos:position pos:line="256" pos:column="57"/></name></expr></argument>)<pos:position pos:line="256" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="59"/></return></block></then></if></elseif>
    <elseif pos:line="257" pos:column="5">else <if pos:line="257" pos:column="10">if <condition pos:line="257" pos:column="13">(<expr><call><name pos:line="257" pos:column="14">strcmp<pos:position pos:line="257" pos:column="20"/></name><argument_list pos:line="257" pos:column="20">(<argument><expr><name pos:line="257" pos:column="21">name<pos:position pos:line="257" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="257" pos:column="27">"n_ban_re_test"<pos:position pos:line="257" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="257" pos:column="43"/></argument_list></call> <operator pos:line="257" pos:column="44">==<pos:position pos:line="257" pos:column="46"/></operator> <literal type="number" pos:line="257" pos:column="47">0<pos:position pos:line="257" pos:column="48"/></literal></expr>)<pos:position pos:line="257" pos:column="49"/></condition><then pos:line="257" pos:column="49">
      <block type="pseudo"><return pos:line="258" pos:column="7">return <expr><call><name pos:line="258" pos:column="14">varnish_submit_derive<pos:position pos:line="258" pos:column="35"/></name><argument_list pos:line="258" pos:column="35">(<argument><expr><name><name pos:line="258" pos:column="36">conf<pos:position pos:line="258" pos:column="40"/></name><operator pos:line="258" pos:column="40">-&gt;<pos:position pos:line="258" pos:column="45"/></operator><name pos:line="258" pos:column="42">instance<pos:position pos:line="258" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="52">"ban"<pos:position pos:line="258" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="258" pos:column="59">"total_operations"<pos:position pos:line="258" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="259" pos:column="36">"regexps_tested"<pos:position pos:line="259" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="259" pos:column="54">val<pos:position pos:line="259" pos:column="57"/></name></expr></argument>)<pos:position pos:line="259" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="59"/></return></block></then></if></elseif>
    <elseif pos:line="260" pos:column="5">else <if pos:line="260" pos:column="10">if <condition pos:line="260" pos:column="13">(<expr><call><name pos:line="260" pos:column="14">strcmp<pos:position pos:line="260" pos:column="20"/></name><argument_list pos:line="260" pos:column="20">(<argument><expr><name pos:line="260" pos:column="21">name<pos:position pos:line="260" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="260" pos:column="27">"n_ban_dups"<pos:position pos:line="260" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="260" pos:column="40"/></argument_list></call> <operator pos:line="260" pos:column="41">==<pos:position pos:line="260" pos:column="43"/></operator> <literal type="number" pos:line="260" pos:column="44">0<pos:position pos:line="260" pos:column="45"/></literal></expr>)<pos:position pos:line="260" pos:column="46"/></condition><then pos:line="260" pos:column="46">
      <block type="pseudo"><return pos:line="261" pos:column="7">return <expr><call><name pos:line="261" pos:column="14">varnish_submit_derive<pos:position pos:line="261" pos:column="35"/></name><argument_list pos:line="261" pos:column="35">(<argument><expr><name><name pos:line="261" pos:column="36">conf<pos:position pos:line="261" pos:column="40"/></name><operator pos:line="261" pos:column="40">-&gt;<pos:position pos:line="261" pos:column="45"/></operator><name pos:line="261" pos:column="42">instance<pos:position pos:line="261" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="52">"ban"<pos:position pos:line="261" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="59">"total_operations"<pos:position pos:line="261" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="262" pos:column="36">"duplicate"<pos:position pos:line="262" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="262" pos:column="49">val<pos:position pos:line="262" pos:column="52"/></name></expr></argument>)<pos:position pos:line="262" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="54"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="263" pos:column="4"/></block></then></if>
<cpp:endif pos:line="264" pos:column="1">#<cpp:directive pos:line="264" pos:column="2">endif<pos:position pos:line="264" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">if<pos:position pos:line="265" pos:column="4"/></cpp:directive> <expr><name pos:line="265" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="265" pos:column="20"/></name> <operator pos:line="265" pos:column="21">||<pos:position pos:line="265" pos:column="23"/></operator> <name pos:line="265" pos:column="24">HAVE_VARNISH_V5<pos:position pos:line="265" pos:column="39"/></name></expr></cpp:if>
  <if pos:line="266" pos:column="3">if <condition pos:line="266" pos:column="6">(<expr><name><name pos:line="266" pos:column="7">conf<pos:position pos:line="266" pos:column="11"/></name><operator pos:line="266" pos:column="11">-&gt;<pos:position pos:line="266" pos:column="16"/></operator><name pos:line="266" pos:column="13">collect_ban<pos:position pos:line="266" pos:column="24"/></name></name></expr>)<pos:position pos:line="266" pos:column="25"/></condition><then pos:line="266" pos:column="25"> <block pos:line="266" pos:column="26">{
    <if pos:line="267" pos:column="5">if <condition pos:line="267" pos:column="8">(<expr><call><name pos:line="267" pos:column="9">strcmp<pos:position pos:line="267" pos:column="15"/></name><argument_list pos:line="267" pos:column="15">(<argument><expr><name pos:line="267" pos:column="16">name<pos:position pos:line="267" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="22">"bans"<pos:position pos:line="267" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="29"/></argument_list></call> <operator pos:line="267" pos:column="30">==<pos:position pos:line="267" pos:column="32"/></operator> <literal type="number" pos:line="267" pos:column="33">0<pos:position pos:line="267" pos:column="34"/></literal></expr>)<pos:position pos:line="267" pos:column="35"/></condition><then pos:line="267" pos:column="35">
      <block type="pseudo"><return pos:line="268" pos:column="7">return <expr><call><name pos:line="268" pos:column="14">varnish_submit_derive<pos:position pos:line="268" pos:column="35"/></name><argument_list pos:line="268" pos:column="35">(<argument><expr><name><name pos:line="268" pos:column="36">conf<pos:position pos:line="268" pos:column="40"/></name><operator pos:line="268" pos:column="40">-&gt;<pos:position pos:line="268" pos:column="45"/></operator><name pos:line="268" pos:column="42">instance<pos:position pos:line="268" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="52">"ban"<pos:position pos:line="268" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="268" pos:column="59">"total_operations"<pos:position pos:line="268" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="269" pos:column="36">"total"<pos:position pos:line="269" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="269" pos:column="45">val<pos:position pos:line="269" pos:column="48"/></name></expr></argument>)<pos:position pos:line="269" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="269" pos:column="50"/></return></block></then>
    <elseif pos:line="270" pos:column="5">else <if pos:line="270" pos:column="10">if <condition pos:line="270" pos:column="13">(<expr><call><name pos:line="270" pos:column="14">strcmp<pos:position pos:line="270" pos:column="20"/></name><argument_list pos:line="270" pos:column="20">(<argument><expr><name pos:line="270" pos:column="21">name<pos:position pos:line="270" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="270" pos:column="27">"bans_added"<pos:position pos:line="270" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="270" pos:column="40"/></argument_list></call> <operator pos:line="270" pos:column="41">==<pos:position pos:line="270" pos:column="43"/></operator> <literal type="number" pos:line="270" pos:column="44">0<pos:position pos:line="270" pos:column="45"/></literal></expr>)<pos:position pos:line="270" pos:column="46"/></condition><then pos:line="270" pos:column="46">
      <block type="pseudo"><return pos:line="271" pos:column="7">return <expr><call><name pos:line="271" pos:column="14">varnish_submit_derive<pos:position pos:line="271" pos:column="35"/></name><argument_list pos:line="271" pos:column="35">(<argument><expr><name><name pos:line="271" pos:column="36">conf<pos:position pos:line="271" pos:column="40"/></name><operator pos:line="271" pos:column="40">-&gt;<pos:position pos:line="271" pos:column="45"/></operator><name pos:line="271" pos:column="42">instance<pos:position pos:line="271" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="52">"ban"<pos:position pos:line="271" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="271" pos:column="59">"total_operations"<pos:position pos:line="271" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="272" pos:column="36">"added"<pos:position pos:line="272" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="272" pos:column="45">val<pos:position pos:line="272" pos:column="48"/></name></expr></argument>)<pos:position pos:line="272" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="50"/></return></block></then></if></elseif>
    <elseif pos:line="273" pos:column="5">else <if pos:line="273" pos:column="10">if <condition pos:line="273" pos:column="13">(<expr><call><name pos:line="273" pos:column="14">strcmp<pos:position pos:line="273" pos:column="20"/></name><argument_list pos:line="273" pos:column="20">(<argument><expr><name pos:line="273" pos:column="21">name<pos:position pos:line="273" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="273" pos:column="27">"bans_obj"<pos:position pos:line="273" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="38"/></argument_list></call> <operator pos:line="273" pos:column="39">==<pos:position pos:line="273" pos:column="41"/></operator> <literal type="number" pos:line="273" pos:column="42">0<pos:position pos:line="273" pos:column="43"/></literal></expr>)<pos:position pos:line="273" pos:column="44"/></condition><then pos:line="273" pos:column="44">
      <block type="pseudo"><return pos:line="274" pos:column="7">return <expr><call><name pos:line="274" pos:column="14">varnish_submit_derive<pos:position pos:line="274" pos:column="35"/></name><argument_list pos:line="274" pos:column="35">(<argument><expr><name><name pos:line="274" pos:column="36">conf<pos:position pos:line="274" pos:column="40"/></name><operator pos:line="274" pos:column="40">-&gt;<pos:position pos:line="274" pos:column="45"/></operator><name pos:line="274" pos:column="42">instance<pos:position pos:line="274" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="52">"ban"<pos:position pos:line="274" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="59">"total_operations"<pos:position pos:line="274" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="275" pos:column="36">"obj"<pos:position pos:line="275" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="43">val<pos:position pos:line="275" pos:column="46"/></name></expr></argument>)<pos:position pos:line="275" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="48"/></return></block></then></if></elseif>
    <elseif pos:line="276" pos:column="5">else <if pos:line="276" pos:column="10">if <condition pos:line="276" pos:column="13">(<expr><call><name pos:line="276" pos:column="14">strcmp<pos:position pos:line="276" pos:column="20"/></name><argument_list pos:line="276" pos:column="20">(<argument><expr><name pos:line="276" pos:column="21">name<pos:position pos:line="276" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="276" pos:column="27">"bans_req"<pos:position pos:line="276" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="276" pos:column="38"/></argument_list></call> <operator pos:line="276" pos:column="39">==<pos:position pos:line="276" pos:column="41"/></operator> <literal type="number" pos:line="276" pos:column="42">0<pos:position pos:line="276" pos:column="43"/></literal></expr>)<pos:position pos:line="276" pos:column="44"/></condition><then pos:line="276" pos:column="44">
      <block type="pseudo"><return pos:line="277" pos:column="7">return <expr><call><name pos:line="277" pos:column="14">varnish_submit_derive<pos:position pos:line="277" pos:column="35"/></name><argument_list pos:line="277" pos:column="35">(<argument><expr><name><name pos:line="277" pos:column="36">conf<pos:position pos:line="277" pos:column="40"/></name><operator pos:line="277" pos:column="40">-&gt;<pos:position pos:line="277" pos:column="45"/></operator><name pos:line="277" pos:column="42">instance<pos:position pos:line="277" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="52">"ban"<pos:position pos:line="277" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="59">"total_operations"<pos:position pos:line="277" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="278" pos:column="36">"req"<pos:position pos:line="278" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="278" pos:column="43">val<pos:position pos:line="278" pos:column="46"/></name></expr></argument>)<pos:position pos:line="278" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="48"/></return></block></then></if></elseif>
    <elseif pos:line="279" pos:column="5">else <if pos:line="279" pos:column="10">if <condition pos:line="279" pos:column="13">(<expr><call><name pos:line="279" pos:column="14">strcmp<pos:position pos:line="279" pos:column="20"/></name><argument_list pos:line="279" pos:column="20">(<argument><expr><name pos:line="279" pos:column="21">name<pos:position pos:line="279" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="279" pos:column="27">"bans_completed"<pos:position pos:line="279" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="279" pos:column="44"/></argument_list></call> <operator pos:line="279" pos:column="45">==<pos:position pos:line="279" pos:column="47"/></operator> <literal type="number" pos:line="279" pos:column="48">0<pos:position pos:line="279" pos:column="49"/></literal></expr>)<pos:position pos:line="279" pos:column="50"/></condition><then pos:line="279" pos:column="50">
      <block type="pseudo"><return pos:line="280" pos:column="7">return <expr><call><name pos:line="280" pos:column="14">varnish_submit_derive<pos:position pos:line="280" pos:column="35"/></name><argument_list pos:line="280" pos:column="35">(<argument><expr><name><name pos:line="280" pos:column="36">conf<pos:position pos:line="280" pos:column="40"/></name><operator pos:line="280" pos:column="40">-&gt;<pos:position pos:line="280" pos:column="45"/></operator><name pos:line="280" pos:column="42">instance<pos:position pos:line="280" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="52">"ban"<pos:position pos:line="280" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="59">"total_operations"<pos:position pos:line="280" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="281" pos:column="36">"completed"<pos:position pos:line="281" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="281" pos:column="49">val<pos:position pos:line="281" pos:column="52"/></name></expr></argument>)<pos:position pos:line="281" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="281" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="282" pos:column="5">else <if pos:line="282" pos:column="10">if <condition pos:line="282" pos:column="13">(<expr><call><name pos:line="282" pos:column="14">strcmp<pos:position pos:line="282" pos:column="20"/></name><argument_list pos:line="282" pos:column="20">(<argument><expr><name pos:line="282" pos:column="21">name<pos:position pos:line="282" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="282" pos:column="27">"bans_deleted"<pos:position pos:line="282" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="282" pos:column="42"/></argument_list></call> <operator pos:line="282" pos:column="43">==<pos:position pos:line="282" pos:column="45"/></operator> <literal type="number" pos:line="282" pos:column="46">0<pos:position pos:line="282" pos:column="47"/></literal></expr>)<pos:position pos:line="282" pos:column="48"/></condition><then pos:line="282" pos:column="48">
      <block type="pseudo"><return pos:line="283" pos:column="7">return <expr><call><name pos:line="283" pos:column="14">varnish_submit_derive<pos:position pos:line="283" pos:column="35"/></name><argument_list pos:line="283" pos:column="35">(<argument><expr><name><name pos:line="283" pos:column="36">conf<pos:position pos:line="283" pos:column="40"/></name><operator pos:line="283" pos:column="40">-&gt;<pos:position pos:line="283" pos:column="45"/></operator><name pos:line="283" pos:column="42">instance<pos:position pos:line="283" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="52">"ban"<pos:position pos:line="283" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="59">"total_operations"<pos:position pos:line="283" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="284" pos:column="36">"deleted"<pos:position pos:line="284" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="284" pos:column="47">val<pos:position pos:line="284" pos:column="50"/></name></expr></argument>)<pos:position pos:line="284" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="284" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="285" pos:column="5">else <if pos:line="285" pos:column="10">if <condition pos:line="285" pos:column="13">(<expr><call><name pos:line="285" pos:column="14">strcmp<pos:position pos:line="285" pos:column="20"/></name><argument_list pos:line="285" pos:column="20">(<argument><expr><name pos:line="285" pos:column="21">name<pos:position pos:line="285" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="285" pos:column="27">"bans_tested"<pos:position pos:line="285" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="285" pos:column="41"/></argument_list></call> <operator pos:line="285" pos:column="42">==<pos:position pos:line="285" pos:column="44"/></operator> <literal type="number" pos:line="285" pos:column="45">0<pos:position pos:line="285" pos:column="46"/></literal></expr>)<pos:position pos:line="285" pos:column="47"/></condition><then pos:line="285" pos:column="47">
      <block type="pseudo"><return pos:line="286" pos:column="7">return <expr><call><name pos:line="286" pos:column="14">varnish_submit_derive<pos:position pos:line="286" pos:column="35"/></name><argument_list pos:line="286" pos:column="35">(<argument><expr><name><name pos:line="286" pos:column="36">conf<pos:position pos:line="286" pos:column="40"/></name><operator pos:line="286" pos:column="40">-&gt;<pos:position pos:line="286" pos:column="45"/></operator><name pos:line="286" pos:column="42">instance<pos:position pos:line="286" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="52">"ban"<pos:position pos:line="286" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="286" pos:column="59">"total_operations"<pos:position pos:line="286" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="287" pos:column="36">"tested"<pos:position pos:line="287" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="287" pos:column="46">val<pos:position pos:line="287" pos:column="49"/></name></expr></argument>)<pos:position pos:line="287" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="287" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="288" pos:column="5">else <if pos:line="288" pos:column="10">if <condition pos:line="288" pos:column="13">(<expr><call><name pos:line="288" pos:column="14">strcmp<pos:position pos:line="288" pos:column="20"/></name><argument_list pos:line="288" pos:column="20">(<argument><expr><name pos:line="288" pos:column="21">name<pos:position pos:line="288" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="288" pos:column="27">"bans_dups"<pos:position pos:line="288" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="288" pos:column="39"/></argument_list></call> <operator pos:line="288" pos:column="40">==<pos:position pos:line="288" pos:column="42"/></operator> <literal type="number" pos:line="288" pos:column="43">0<pos:position pos:line="288" pos:column="44"/></literal></expr>)<pos:position pos:line="288" pos:column="45"/></condition><then pos:line="288" pos:column="45">
      <block type="pseudo"><return pos:line="289" pos:column="7">return <expr><call><name pos:line="289" pos:column="14">varnish_submit_derive<pos:position pos:line="289" pos:column="35"/></name><argument_list pos:line="289" pos:column="35">(<argument><expr><name><name pos:line="289" pos:column="36">conf<pos:position pos:line="289" pos:column="40"/></name><operator pos:line="289" pos:column="40">-&gt;<pos:position pos:line="289" pos:column="45"/></operator><name pos:line="289" pos:column="42">instance<pos:position pos:line="289" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="52">"ban"<pos:position pos:line="289" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="59">"total_operations"<pos:position pos:line="289" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="290" pos:column="36">"duplicate"<pos:position pos:line="290" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="290" pos:column="49">val<pos:position pos:line="290" pos:column="52"/></name></expr></argument>)<pos:position pos:line="290" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="291" pos:column="5">else <if pos:line="291" pos:column="10">if <condition pos:line="291" pos:column="13">(<expr><call><name pos:line="291" pos:column="14">strcmp<pos:position pos:line="291" pos:column="20"/></name><argument_list pos:line="291" pos:column="20">(<argument><expr><name pos:line="291" pos:column="21">name<pos:position pos:line="291" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="291" pos:column="27">"bans_tested"<pos:position pos:line="291" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="291" pos:column="41"/></argument_list></call> <operator pos:line="291" pos:column="42">==<pos:position pos:line="291" pos:column="44"/></operator> <literal type="number" pos:line="291" pos:column="45">0<pos:position pos:line="291" pos:column="46"/></literal></expr>)<pos:position pos:line="291" pos:column="47"/></condition><then pos:line="291" pos:column="47">
      <block type="pseudo"><return pos:line="292" pos:column="7">return <expr><call><name pos:line="292" pos:column="14">varnish_submit_derive<pos:position pos:line="292" pos:column="35"/></name><argument_list pos:line="292" pos:column="35">(<argument><expr><name><name pos:line="292" pos:column="36">conf<pos:position pos:line="292" pos:column="40"/></name><operator pos:line="292" pos:column="40">-&gt;<pos:position pos:line="292" pos:column="45"/></operator><name pos:line="292" pos:column="42">instance<pos:position pos:line="292" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="52">"ban"<pos:position pos:line="292" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="59">"total_operations"<pos:position pos:line="292" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="293" pos:column="36">"tested"<pos:position pos:line="293" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="293" pos:column="46">val<pos:position pos:line="293" pos:column="49"/></name></expr></argument>)<pos:position pos:line="293" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="294" pos:column="5">else <if pos:line="294" pos:column="10">if <condition pos:line="294" pos:column="13">(<expr><call><name pos:line="294" pos:column="14">strcmp<pos:position pos:line="294" pos:column="20"/></name><argument_list pos:line="294" pos:column="20">(<argument><expr><name pos:line="294" pos:column="21">name<pos:position pos:line="294" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="294" pos:column="27">"bans_lurker_contention"<pos:position pos:line="294" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="294" pos:column="52"/></argument_list></call> <operator pos:line="294" pos:column="53">==<pos:position pos:line="294" pos:column="55"/></operator> <literal type="number" pos:line="294" pos:column="56">0<pos:position pos:line="294" pos:column="57"/></literal></expr>)<pos:position pos:line="294" pos:column="58"/></condition><then pos:line="294" pos:column="58">
      <block type="pseudo"><return pos:line="295" pos:column="7">return <expr><call><name pos:line="295" pos:column="14">varnish_submit_derive<pos:position pos:line="295" pos:column="35"/></name><argument_list pos:line="295" pos:column="35">(<argument><expr><name><name pos:line="295" pos:column="36">conf<pos:position pos:line="295" pos:column="40"/></name><operator pos:line="295" pos:column="40">-&gt;<pos:position pos:line="295" pos:column="45"/></operator><name pos:line="295" pos:column="42">instance<pos:position pos:line="295" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="295" pos:column="52">"ban"<pos:position pos:line="295" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="295" pos:column="59">"total_operations"<pos:position pos:line="295" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="296" pos:column="36">"lurker_contention"<pos:position pos:line="296" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="296" pos:column="57">val<pos:position pos:line="296" pos:column="60"/></name></expr></argument>)<pos:position pos:line="296" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="62"/></return></block></then></if></elseif>
    <elseif pos:line="297" pos:column="5">else <if pos:line="297" pos:column="10">if <condition pos:line="297" pos:column="13">(<expr><call><name pos:line="297" pos:column="14">strcmp<pos:position pos:line="297" pos:column="20"/></name><argument_list pos:line="297" pos:column="20">(<argument><expr><name pos:line="297" pos:column="21">name<pos:position pos:line="297" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="297" pos:column="27">"bans_lurker_obj_killed"<pos:position pos:line="297" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="297" pos:column="52"/></argument_list></call> <operator pos:line="297" pos:column="53">==<pos:position pos:line="297" pos:column="55"/></operator> <literal type="number" pos:line="297" pos:column="56">0<pos:position pos:line="297" pos:column="57"/></literal></expr>)<pos:position pos:line="297" pos:column="58"/></condition><then pos:line="297" pos:column="58">
      <block type="pseudo"><return pos:line="298" pos:column="7">return <expr><call><name pos:line="298" pos:column="14">varnish_submit_derive<pos:position pos:line="298" pos:column="35"/></name><argument_list pos:line="298" pos:column="35">(<argument><expr><name><name pos:line="298" pos:column="36">conf<pos:position pos:line="298" pos:column="40"/></name><operator pos:line="298" pos:column="40">-&gt;<pos:position pos:line="298" pos:column="45"/></operator><name pos:line="298" pos:column="42">instance<pos:position pos:line="298" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="52">"ban"<pos:position pos:line="298" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="59">"total_operations"<pos:position pos:line="298" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="299" pos:column="36">"lurker_obj_killed"<pos:position pos:line="299" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="299" pos:column="57">val<pos:position pos:line="299" pos:column="60"/></name></expr></argument>)<pos:position pos:line="299" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="62"/></return></block></then></if></elseif>
    <elseif pos:line="300" pos:column="5">else <if pos:line="300" pos:column="10">if <condition pos:line="300" pos:column="13">(<expr><call><name pos:line="300" pos:column="14">strcmp<pos:position pos:line="300" pos:column="20"/></name><argument_list pos:line="300" pos:column="20">(<argument><expr><name pos:line="300" pos:column="21">name<pos:position pos:line="300" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="27">"bans_lurker_tested"<pos:position pos:line="300" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="300" pos:column="48"/></argument_list></call> <operator pos:line="300" pos:column="49">==<pos:position pos:line="300" pos:column="51"/></operator> <literal type="number" pos:line="300" pos:column="52">0<pos:position pos:line="300" pos:column="53"/></literal></expr>)<pos:position pos:line="300" pos:column="54"/></condition><then pos:line="300" pos:column="54">
      <block type="pseudo"><return pos:line="301" pos:column="7">return <expr><call><name pos:line="301" pos:column="14">varnish_submit_derive<pos:position pos:line="301" pos:column="35"/></name><argument_list pos:line="301" pos:column="35">(<argument><expr><name><name pos:line="301" pos:column="36">conf<pos:position pos:line="301" pos:column="40"/></name><operator pos:line="301" pos:column="40">-&gt;<pos:position pos:line="301" pos:column="45"/></operator><name pos:line="301" pos:column="42">instance<pos:position pos:line="301" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="301" pos:column="52">"ban"<pos:position pos:line="301" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="301" pos:column="59">"total_operations"<pos:position pos:line="301" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="302" pos:column="36">"lurker_tested"<pos:position pos:line="302" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="302" pos:column="53">val<pos:position pos:line="302" pos:column="56"/></name></expr></argument>)<pos:position pos:line="302" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="58"/></return></block></then></if></elseif>
    <elseif pos:line="303" pos:column="5">else <if pos:line="303" pos:column="10">if <condition pos:line="303" pos:column="13">(<expr><call><name pos:line="303" pos:column="14">strcmp<pos:position pos:line="303" pos:column="20"/></name><argument_list pos:line="303" pos:column="20">(<argument><expr><name pos:line="303" pos:column="21">name<pos:position pos:line="303" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="303" pos:column="27">"bans_lurker_tests_tested"<pos:position pos:line="303" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="303" pos:column="54"/></argument_list></call> <operator pos:line="303" pos:column="55">==<pos:position pos:line="303" pos:column="57"/></operator> <literal type="number" pos:line="303" pos:column="58">0<pos:position pos:line="303" pos:column="59"/></literal></expr>)<pos:position pos:line="303" pos:column="60"/></condition><then pos:line="303" pos:column="60">
      <block type="pseudo"><return pos:line="304" pos:column="7">return <expr><call><name pos:line="304" pos:column="14">varnish_submit_derive<pos:position pos:line="304" pos:column="35"/></name><argument_list pos:line="304" pos:column="35">(<argument><expr><name><name pos:line="304" pos:column="36">conf<pos:position pos:line="304" pos:column="40"/></name><operator pos:line="304" pos:column="40">-&gt;<pos:position pos:line="304" pos:column="45"/></operator><name pos:line="304" pos:column="42">instance<pos:position pos:line="304" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="304" pos:column="52">"ban"<pos:position pos:line="304" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="304" pos:column="59">"total_operations"<pos:position pos:line="304" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="305" pos:column="36">"lurker_tests_tested"<pos:position pos:line="305" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="305" pos:column="59">val<pos:position pos:line="305" pos:column="62"/></name></expr></argument>)<pos:position pos:line="305" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="64"/></return></block></then></if></elseif>
    <elseif pos:line="306" pos:column="5">else <if pos:line="306" pos:column="10">if <condition pos:line="306" pos:column="13">(<expr><call><name pos:line="306" pos:column="14">strcmp<pos:position pos:line="306" pos:column="20"/></name><argument_list pos:line="306" pos:column="20">(<argument><expr><name pos:line="306" pos:column="21">name<pos:position pos:line="306" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="27">"bans_obj_killed"<pos:position pos:line="306" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="45"/></argument_list></call> <operator pos:line="306" pos:column="46">==<pos:position pos:line="306" pos:column="48"/></operator> <literal type="number" pos:line="306" pos:column="49">0<pos:position pos:line="306" pos:column="50"/></literal></expr>)<pos:position pos:line="306" pos:column="51"/></condition><then pos:line="306" pos:column="51">
      <block type="pseudo"><return pos:line="307" pos:column="7">return <expr><call><name pos:line="307" pos:column="14">varnish_submit_derive<pos:position pos:line="307" pos:column="35"/></name><argument_list pos:line="307" pos:column="35">(<argument><expr><name><name pos:line="307" pos:column="36">conf<pos:position pos:line="307" pos:column="40"/></name><operator pos:line="307" pos:column="40">-&gt;<pos:position pos:line="307" pos:column="45"/></operator><name pos:line="307" pos:column="42">instance<pos:position pos:line="307" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="52">"ban"<pos:position pos:line="307" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="307" pos:column="59">"total_operations"<pos:position pos:line="307" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="308" pos:column="36">"obj_killed"<pos:position pos:line="308" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="308" pos:column="50">val<pos:position pos:line="308" pos:column="53"/></name></expr></argument>)<pos:position pos:line="308" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="309" pos:column="5">else <if pos:line="309" pos:column="10">if <condition pos:line="309" pos:column="13">(<expr><call><name pos:line="309" pos:column="14">strcmp<pos:position pos:line="309" pos:column="20"/></name><argument_list pos:line="309" pos:column="20">(<argument><expr><name pos:line="309" pos:column="21">name<pos:position pos:line="309" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="309" pos:column="27">"bans_persisted_bytes"<pos:position pos:line="309" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="309" pos:column="50"/></argument_list></call> <operator pos:line="309" pos:column="51">==<pos:position pos:line="309" pos:column="53"/></operator> <literal type="number" pos:line="309" pos:column="54">0<pos:position pos:line="309" pos:column="55"/></literal></expr>)<pos:position pos:line="309" pos:column="56"/></condition><then pos:line="309" pos:column="56">
      <block type="pseudo"><return pos:line="310" pos:column="7">return <expr><call><name pos:line="310" pos:column="14">varnish_submit_derive<pos:position pos:line="310" pos:column="35"/></name><argument_list pos:line="310" pos:column="35">(<argument><expr><name><name pos:line="310" pos:column="36">conf<pos:position pos:line="310" pos:column="40"/></name><operator pos:line="310" pos:column="40">-&gt;<pos:position pos:line="310" pos:column="45"/></operator><name pos:line="310" pos:column="42">instance<pos:position pos:line="310" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="310" pos:column="52">"ban"<pos:position pos:line="310" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="310" pos:column="59">"total_bytes"<pos:position pos:line="310" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="311" pos:column="36">"persisted_bytes"<pos:position pos:line="311" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="311" pos:column="55">val<pos:position pos:line="311" pos:column="58"/></name></expr></argument>)<pos:position pos:line="311" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="311" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="312" pos:column="5">else <if pos:line="312" pos:column="10">if <condition pos:line="312" pos:column="13">(<expr><call><name pos:line="312" pos:column="14">strcmp<pos:position pos:line="312" pos:column="20"/></name><argument_list pos:line="312" pos:column="20">(<argument><expr><name pos:line="312" pos:column="21">name<pos:position pos:line="312" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="312" pos:column="27">"bans_persisted_fragmentation"<pos:position pos:line="312" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="312" pos:column="58"/></argument_list></call> <operator pos:line="312" pos:column="59">==<pos:position pos:line="312" pos:column="61"/></operator> <literal type="number" pos:line="312" pos:column="62">0<pos:position pos:line="312" pos:column="63"/></literal></expr>)<pos:position pos:line="312" pos:column="64"/></condition><then pos:line="312" pos:column="64">
      <block type="pseudo"><return pos:line="313" pos:column="7">return <expr><call><name pos:line="313" pos:column="14">varnish_submit_derive<pos:position pos:line="313" pos:column="35"/></name><argument_list pos:line="313" pos:column="35">(<argument><expr><name><name pos:line="313" pos:column="36">conf<pos:position pos:line="313" pos:column="40"/></name><operator pos:line="313" pos:column="40">-&gt;<pos:position pos:line="313" pos:column="45"/></operator><name pos:line="313" pos:column="42">instance<pos:position pos:line="313" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="313" pos:column="52">"ban"<pos:position pos:line="313" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="313" pos:column="59">"total_bytes"<pos:position pos:line="313" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="314" pos:column="36">"persisted_fragmentation"<pos:position pos:line="314" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="314" pos:column="63">val<pos:position pos:line="314" pos:column="66"/></name></expr></argument>)<pos:position pos:line="314" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="68"/></return></block></then></if></elseif>
    <elseif pos:line="315" pos:column="5">else <if pos:line="315" pos:column="10">if <condition pos:line="315" pos:column="13">(<expr><call><name pos:line="315" pos:column="14">strcmp<pos:position pos:line="315" pos:column="20"/></name><argument_list pos:line="315" pos:column="20">(<argument><expr><name pos:line="315" pos:column="21">name<pos:position pos:line="315" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="315" pos:column="27">"bans_tests_tested"<pos:position pos:line="315" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="315" pos:column="47"/></argument_list></call> <operator pos:line="315" pos:column="48">==<pos:position pos:line="315" pos:column="50"/></operator> <literal type="number" pos:line="315" pos:column="51">0<pos:position pos:line="315" pos:column="52"/></literal></expr>)<pos:position pos:line="315" pos:column="53"/></condition><then pos:line="315" pos:column="53">
      <block type="pseudo"><return pos:line="316" pos:column="7">return <expr><call><name pos:line="316" pos:column="14">varnish_submit_derive<pos:position pos:line="316" pos:column="35"/></name><argument_list pos:line="316" pos:column="35">(<argument><expr><name><name pos:line="316" pos:column="36">conf<pos:position pos:line="316" pos:column="40"/></name><operator pos:line="316" pos:column="40">-&gt;<pos:position pos:line="316" pos:column="45"/></operator><name pos:line="316" pos:column="42">instance<pos:position pos:line="316" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="316" pos:column="52">"ban"<pos:position pos:line="316" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="316" pos:column="59">"total_operations"<pos:position pos:line="316" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="317" pos:column="36">"tests_tested"<pos:position pos:line="317" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="317" pos:column="52">val<pos:position pos:line="317" pos:column="55"/></name></expr></argument>)<pos:position pos:line="317" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="317" pos:column="57"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="318" pos:column="4"/></block></then></if>
<cpp:endif pos:line="319" pos:column="1">#<cpp:directive pos:line="319" pos:column="2">endif<pos:position pos:line="319" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="321" pos:column="3">if <condition pos:line="321" pos:column="6">(<expr><name><name pos:line="321" pos:column="7">conf<pos:position pos:line="321" pos:column="11"/></name><operator pos:line="321" pos:column="11">-&gt;<pos:position pos:line="321" pos:column="16"/></operator><name pos:line="321" pos:column="13">collect_session<pos:position pos:line="321" pos:column="28"/></name></name></expr>)<pos:position pos:line="321" pos:column="29"/></condition><then pos:line="321" pos:column="29"> <block pos:line="321" pos:column="30">{
    <if pos:line="322" pos:column="5">if <condition pos:line="322" pos:column="8">(<expr><call><name pos:line="322" pos:column="9">strcmp<pos:position pos:line="322" pos:column="15"/></name><argument_list pos:line="322" pos:column="15">(<argument><expr><name pos:line="322" pos:column="16">name<pos:position pos:line="322" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="322" pos:column="22">"sess_closed"<pos:position pos:line="322" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="322" pos:column="36"/></argument_list></call> <operator pos:line="322" pos:column="37">==<pos:position pos:line="322" pos:column="39"/></operator> <literal type="number" pos:line="322" pos:column="40">0<pos:position pos:line="322" pos:column="41"/></literal></expr>)<pos:position pos:line="322" pos:column="42"/></condition><then pos:line="322" pos:column="42">
      <block type="pseudo"><return pos:line="323" pos:column="7">return <expr><call><name pos:line="323" pos:column="14">varnish_submit_derive<pos:position pos:line="323" pos:column="35"/></name><argument_list pos:line="323" pos:column="35">(<argument><expr><name><name pos:line="323" pos:column="36">conf<pos:position pos:line="323" pos:column="40"/></name><operator pos:line="323" pos:column="40">-&gt;<pos:position pos:line="323" pos:column="45"/></operator><name pos:line="323" pos:column="42">instance<pos:position pos:line="323" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="323" pos:column="52">"session"<pos:position pos:line="323" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="324" pos:column="36">"total_operations"<pos:position pos:line="324" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="324" pos:column="56">"closed"<pos:position pos:line="324" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="324" pos:column="66">val<pos:position pos:line="324" pos:column="69"/></name></expr></argument>)<pos:position pos:line="324" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="71"/></return></block></then>
    <elseif pos:line="325" pos:column="5">else <if pos:line="325" pos:column="10">if <condition pos:line="325" pos:column="13">(<expr><call><name pos:line="325" pos:column="14">strcmp<pos:position pos:line="325" pos:column="20"/></name><argument_list pos:line="325" pos:column="20">(<argument><expr><name pos:line="325" pos:column="21">name<pos:position pos:line="325" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="325" pos:column="27">"sess_pipeline"<pos:position pos:line="325" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="325" pos:column="43"/></argument_list></call> <operator pos:line="325" pos:column="44">==<pos:position pos:line="325" pos:column="46"/></operator> <literal type="number" pos:line="325" pos:column="47">0<pos:position pos:line="325" pos:column="48"/></literal></expr>)<pos:position pos:line="325" pos:column="49"/></condition><then pos:line="325" pos:column="49">
      <block type="pseudo"><return pos:line="326" pos:column="7">return <expr><call><name pos:line="326" pos:column="14">varnish_submit_derive<pos:position pos:line="326" pos:column="35"/></name><argument_list pos:line="326" pos:column="35">(<argument><expr><name><name pos:line="326" pos:column="36">conf<pos:position pos:line="326" pos:column="40"/></name><operator pos:line="326" pos:column="40">-&gt;<pos:position pos:line="326" pos:column="45"/></operator><name pos:line="326" pos:column="42">instance<pos:position pos:line="326" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="326" pos:column="52">"session"<pos:position pos:line="326" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="327" pos:column="36">"total_operations"<pos:position pos:line="327" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="327" pos:column="56">"pipeline"<pos:position pos:line="327" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="327" pos:column="68">val<pos:position pos:line="327" pos:column="71"/></name></expr></argument>)<pos:position pos:line="327" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="73"/></return></block></then></if></elseif>
    <elseif pos:line="328" pos:column="5">else <if pos:line="328" pos:column="10">if <condition pos:line="328" pos:column="13">(<expr><call><name pos:line="328" pos:column="14">strcmp<pos:position pos:line="328" pos:column="20"/></name><argument_list pos:line="328" pos:column="20">(<argument><expr><name pos:line="328" pos:column="21">name<pos:position pos:line="328" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="328" pos:column="27">"sess_readahead"<pos:position pos:line="328" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="328" pos:column="44"/></argument_list></call> <operator pos:line="328" pos:column="45">==<pos:position pos:line="328" pos:column="47"/></operator> <literal type="number" pos:line="328" pos:column="48">0<pos:position pos:line="328" pos:column="49"/></literal></expr>)<pos:position pos:line="328" pos:column="50"/></condition><then pos:line="328" pos:column="50">
      <block type="pseudo"><return pos:line="329" pos:column="7">return <expr><call><name pos:line="329" pos:column="14">varnish_submit_derive<pos:position pos:line="329" pos:column="35"/></name><argument_list pos:line="329" pos:column="35">(<argument><expr><name><name pos:line="329" pos:column="36">conf<pos:position pos:line="329" pos:column="40"/></name><operator pos:line="329" pos:column="40">-&gt;<pos:position pos:line="329" pos:column="45"/></operator><name pos:line="329" pos:column="42">instance<pos:position pos:line="329" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="329" pos:column="52">"session"<pos:position pos:line="329" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="330" pos:column="36">"total_operations"<pos:position pos:line="330" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="330" pos:column="56">"readahead"<pos:position pos:line="330" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="330" pos:column="69">val<pos:position pos:line="330" pos:column="72"/></name></expr></argument>)<pos:position pos:line="330" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="330" pos:column="74"/></return></block></then></if></elseif>
    <elseif pos:line="331" pos:column="5">else <if pos:line="331" pos:column="10">if <condition pos:line="331" pos:column="13">(<expr><call><name pos:line="331" pos:column="14">strcmp<pos:position pos:line="331" pos:column="20"/></name><argument_list pos:line="331" pos:column="20">(<argument><expr><name pos:line="331" pos:column="21">name<pos:position pos:line="331" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="331" pos:column="27">"sess_conn"<pos:position pos:line="331" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="39"/></argument_list></call> <operator pos:line="331" pos:column="40">==<pos:position pos:line="331" pos:column="42"/></operator> <literal type="number" pos:line="331" pos:column="43">0<pos:position pos:line="331" pos:column="44"/></literal></expr>)<pos:position pos:line="331" pos:column="45"/></condition><then pos:line="331" pos:column="45">
      <block type="pseudo"><return pos:line="332" pos:column="7">return <expr><call><name pos:line="332" pos:column="14">varnish_submit_derive<pos:position pos:line="332" pos:column="35"/></name><argument_list pos:line="332" pos:column="35">(<argument><expr><name><name pos:line="332" pos:column="36">conf<pos:position pos:line="332" pos:column="40"/></name><operator pos:line="332" pos:column="40">-&gt;<pos:position pos:line="332" pos:column="45"/></operator><name pos:line="332" pos:column="42">instance<pos:position pos:line="332" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="332" pos:column="52">"session"<pos:position pos:line="332" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="333" pos:column="36">"total_operations"<pos:position pos:line="333" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="333" pos:column="56">"accepted"<pos:position pos:line="333" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="333" pos:column="68">val<pos:position pos:line="333" pos:column="71"/></name></expr></argument>)<pos:position pos:line="333" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="333" pos:column="73"/></return></block></then></if></elseif>
    <elseif pos:line="334" pos:column="5">else <if pos:line="334" pos:column="10">if <condition pos:line="334" pos:column="13">(<expr><call><name pos:line="334" pos:column="14">strcmp<pos:position pos:line="334" pos:column="20"/></name><argument_list pos:line="334" pos:column="20">(<argument><expr><name pos:line="334" pos:column="21">name<pos:position pos:line="334" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="334" pos:column="27">"sess_drop"<pos:position pos:line="334" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="39"/></argument_list></call> <operator pos:line="334" pos:column="40">==<pos:position pos:line="334" pos:column="42"/></operator> <literal type="number" pos:line="334" pos:column="43">0<pos:position pos:line="334" pos:column="44"/></literal></expr>)<pos:position pos:line="334" pos:column="45"/></condition><then pos:line="334" pos:column="45">
      <block type="pseudo"><return pos:line="335" pos:column="7">return <expr><call><name pos:line="335" pos:column="14">varnish_submit_derive<pos:position pos:line="335" pos:column="35"/></name><argument_list pos:line="335" pos:column="35">(<argument><expr><name><name pos:line="335" pos:column="36">conf<pos:position pos:line="335" pos:column="40"/></name><operator pos:line="335" pos:column="40">-&gt;<pos:position pos:line="335" pos:column="45"/></operator><name pos:line="335" pos:column="42">instance<pos:position pos:line="335" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="335" pos:column="52">"session"<pos:position pos:line="335" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="336" pos:column="36">"total_operations"<pos:position pos:line="336" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="336" pos:column="56">"dropped"<pos:position pos:line="336" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="336" pos:column="67">val<pos:position pos:line="336" pos:column="70"/></name></expr></argument>)<pos:position pos:line="336" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="336" pos:column="72"/></return></block></then></if></elseif>
    <elseif pos:line="337" pos:column="5">else <if pos:line="337" pos:column="10">if <condition pos:line="337" pos:column="13">(<expr><call><name pos:line="337" pos:column="14">strcmp<pos:position pos:line="337" pos:column="20"/></name><argument_list pos:line="337" pos:column="20">(<argument><expr><name pos:line="337" pos:column="21">name<pos:position pos:line="337" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="337" pos:column="27">"sess_fail"<pos:position pos:line="337" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="337" pos:column="39"/></argument_list></call> <operator pos:line="337" pos:column="40">==<pos:position pos:line="337" pos:column="42"/></operator> <literal type="number" pos:line="337" pos:column="43">0<pos:position pos:line="337" pos:column="44"/></literal></expr>)<pos:position pos:line="337" pos:column="45"/></condition><then pos:line="337" pos:column="45">
      <block type="pseudo"><return pos:line="338" pos:column="7">return <expr><call><name pos:line="338" pos:column="14">varnish_submit_derive<pos:position pos:line="338" pos:column="35"/></name><argument_list pos:line="338" pos:column="35">(<argument><expr><name><name pos:line="338" pos:column="36">conf<pos:position pos:line="338" pos:column="40"/></name><operator pos:line="338" pos:column="40">-&gt;<pos:position pos:line="338" pos:column="45"/></operator><name pos:line="338" pos:column="42">instance<pos:position pos:line="338" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="338" pos:column="52">"session"<pos:position pos:line="338" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="339" pos:column="36">"total_operations"<pos:position pos:line="339" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="56">"failed"<pos:position pos:line="339" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="339" pos:column="66">val<pos:position pos:line="339" pos:column="69"/></name></expr></argument>)<pos:position pos:line="339" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="71"/></return></block></then></if></elseif>
    <elseif pos:line="340" pos:column="5">else <if pos:line="340" pos:column="10">if <condition pos:line="340" pos:column="13">(<expr><call><name pos:line="340" pos:column="14">strcmp<pos:position pos:line="340" pos:column="20"/></name><argument_list pos:line="340" pos:column="20">(<argument><expr><name pos:line="340" pos:column="21">name<pos:position pos:line="340" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="340" pos:column="27">"sess_pipe_overflow"<pos:position pos:line="340" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="340" pos:column="48"/></argument_list></call> <operator pos:line="340" pos:column="49">==<pos:position pos:line="340" pos:column="51"/></operator> <literal type="number" pos:line="340" pos:column="52">0<pos:position pos:line="340" pos:column="53"/></literal></expr>)<pos:position pos:line="340" pos:column="54"/></condition><then pos:line="340" pos:column="54">
      <block type="pseudo"><return pos:line="341" pos:column="7">return <expr><call><name pos:line="341" pos:column="14">varnish_submit_derive<pos:position pos:line="341" pos:column="35"/></name><argument_list pos:line="341" pos:column="35">(<argument><expr><name><name pos:line="341" pos:column="36">conf<pos:position pos:line="341" pos:column="40"/></name><operator pos:line="341" pos:column="40">-&gt;<pos:position pos:line="341" pos:column="45"/></operator><name pos:line="341" pos:column="42">instance<pos:position pos:line="341" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="341" pos:column="52">"session"<pos:position pos:line="341" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="342" pos:column="36">"total_operations"<pos:position pos:line="342" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="342" pos:column="56">"overflow"<pos:position pos:line="342" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="342" pos:column="68">val<pos:position pos:line="342" pos:column="71"/></name></expr></argument>)<pos:position pos:line="342" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="73"/></return></block></then></if></elseif>
    <elseif pos:line="343" pos:column="5">else <if pos:line="343" pos:column="10">if <condition pos:line="343" pos:column="13">(<expr><call><name pos:line="343" pos:column="14">strcmp<pos:position pos:line="343" pos:column="20"/></name><argument_list pos:line="343" pos:column="20">(<argument><expr><name pos:line="343" pos:column="21">name<pos:position pos:line="343" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="343" pos:column="27">"sess_queued"<pos:position pos:line="343" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="343" pos:column="41"/></argument_list></call> <operator pos:line="343" pos:column="42">==<pos:position pos:line="343" pos:column="44"/></operator> <literal type="number" pos:line="343" pos:column="45">0<pos:position pos:line="343" pos:column="46"/></literal></expr>)<pos:position pos:line="343" pos:column="47"/></condition><then pos:line="343" pos:column="47">
      <block type="pseudo"><return pos:line="344" pos:column="7">return <expr><call><name pos:line="344" pos:column="14">varnish_submit_derive<pos:position pos:line="344" pos:column="35"/></name><argument_list pos:line="344" pos:column="35">(<argument><expr><name><name pos:line="344" pos:column="36">conf<pos:position pos:line="344" pos:column="40"/></name><operator pos:line="344" pos:column="40">-&gt;<pos:position pos:line="344" pos:column="45"/></operator><name pos:line="344" pos:column="42">instance<pos:position pos:line="344" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="344" pos:column="52">"session"<pos:position pos:line="344" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="345" pos:column="36">"total_operations"<pos:position pos:line="345" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="56">"queued"<pos:position pos:line="345" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="345" pos:column="66">val<pos:position pos:line="345" pos:column="69"/></name></expr></argument>)<pos:position pos:line="345" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="71"/></return></block></then></if></elseif>
    <elseif pos:line="346" pos:column="5">else <if pos:line="346" pos:column="10">if <condition pos:line="346" pos:column="13">(<expr><call><name pos:line="346" pos:column="14">strcmp<pos:position pos:line="346" pos:column="20"/></name><argument_list pos:line="346" pos:column="20">(<argument><expr><name pos:line="346" pos:column="21">name<pos:position pos:line="346" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="346" pos:column="27">"sess_linger"<pos:position pos:line="346" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="346" pos:column="41"/></argument_list></call> <operator pos:line="346" pos:column="42">==<pos:position pos:line="346" pos:column="44"/></operator> <literal type="number" pos:line="346" pos:column="45">0<pos:position pos:line="346" pos:column="46"/></literal></expr>)<pos:position pos:line="346" pos:column="47"/></condition><then pos:line="346" pos:column="47">
      <block type="pseudo"><return pos:line="347" pos:column="7">return <expr><call><name pos:line="347" pos:column="14">varnish_submit_derive<pos:position pos:line="347" pos:column="35"/></name><argument_list pos:line="347" pos:column="35">(<argument><expr><name><name pos:line="347" pos:column="36">conf<pos:position pos:line="347" pos:column="40"/></name><operator pos:line="347" pos:column="40">-&gt;<pos:position pos:line="347" pos:column="45"/></operator><name pos:line="347" pos:column="42">instance<pos:position pos:line="347" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="347" pos:column="52">"session"<pos:position pos:line="347" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="348" pos:column="36">"total_operations"<pos:position pos:line="348" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="348" pos:column="56">"linger"<pos:position pos:line="348" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="348" pos:column="66">val<pos:position pos:line="348" pos:column="69"/></name></expr></argument>)<pos:position pos:line="348" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="71"/></return></block></then></if></elseif>
    <elseif pos:line="349" pos:column="5">else <if pos:line="349" pos:column="10">if <condition pos:line="349" pos:column="13">(<expr><call><name pos:line="349" pos:column="14">strcmp<pos:position pos:line="349" pos:column="20"/></name><argument_list pos:line="349" pos:column="20">(<argument><expr><name pos:line="349" pos:column="21">name<pos:position pos:line="349" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="349" pos:column="27">"sess_herd"<pos:position pos:line="349" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="349" pos:column="39"/></argument_list></call> <operator pos:line="349" pos:column="40">==<pos:position pos:line="349" pos:column="42"/></operator> <literal type="number" pos:line="349" pos:column="43">0<pos:position pos:line="349" pos:column="44"/></literal></expr>)<pos:position pos:line="349" pos:column="45"/></condition><then pos:line="349" pos:column="45">
      <block type="pseudo"><return pos:line="350" pos:column="7">return <expr><call><name pos:line="350" pos:column="14">varnish_submit_derive<pos:position pos:line="350" pos:column="35"/></name><argument_list pos:line="350" pos:column="35">(<argument><expr><name><name pos:line="350" pos:column="36">conf<pos:position pos:line="350" pos:column="40"/></name><operator pos:line="350" pos:column="40">-&gt;<pos:position pos:line="350" pos:column="45"/></operator><name pos:line="350" pos:column="42">instance<pos:position pos:line="350" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="350" pos:column="52">"session"<pos:position pos:line="350" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="351" pos:column="36">"total_operations"<pos:position pos:line="351" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="351" pos:column="56">"herd"<pos:position pos:line="351" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="351" pos:column="64">val<pos:position pos:line="351" pos:column="67"/></name></expr></argument>)<pos:position pos:line="351" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="351" pos:column="69"/></return></block></then></if></elseif>
<cpp:if pos:line="352" pos:column="1">#<cpp:directive pos:line="352" pos:column="2">if<pos:position pos:line="352" pos:column="4"/></cpp:directive> <expr><name pos:line="352" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="352" pos:column="20"/></name> <operator pos:line="352" pos:column="21">||<pos:position pos:line="352" pos:column="23"/></operator> <name pos:line="352" pos:column="24">HAVE_VARNISH_V5<pos:position pos:line="352" pos:column="39"/></name></expr></cpp:if>
    <elseif pos:line="353" pos:column="5">else <if pos:line="353" pos:column="10">if <condition pos:line="353" pos:column="13">(<expr><call><name pos:line="353" pos:column="14">strcmp<pos:position pos:line="353" pos:column="20"/></name><argument_list pos:line="353" pos:column="20">(<argument><expr><name pos:line="353" pos:column="21">name<pos:position pos:line="353" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="353" pos:column="27">"sess_closed_err"<pos:position pos:line="353" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="45"/></argument_list></call> <operator pos:line="353" pos:column="46">==<pos:position pos:line="353" pos:column="48"/></operator> <literal type="number" pos:line="353" pos:column="49">0<pos:position pos:line="353" pos:column="50"/></literal></expr>)<pos:position pos:line="353" pos:column="51"/></condition><then pos:line="353" pos:column="51">
      <block type="pseudo"><return pos:line="354" pos:column="7">return <expr><call><name pos:line="354" pos:column="14">varnish_submit_derive<pos:position pos:line="354" pos:column="35"/></name><argument_list pos:line="354" pos:column="35">(<argument><expr><name><name pos:line="354" pos:column="36">conf<pos:position pos:line="354" pos:column="40"/></name><operator pos:line="354" pos:column="40">-&gt;<pos:position pos:line="354" pos:column="45"/></operator><name pos:line="354" pos:column="42">instance<pos:position pos:line="354" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="354" pos:column="52">"session"<pos:position pos:line="354" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="355" pos:column="36">"total_operations"<pos:position pos:line="355" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="355" pos:column="56">"closed_err"<pos:position pos:line="355" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="355" pos:column="70">val<pos:position pos:line="355" pos:column="73"/></name></expr></argument>)<pos:position pos:line="355" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="355" pos:column="75"/></return></block></then></if></elseif>
    <elseif pos:line="356" pos:column="5">else <if pos:line="356" pos:column="10">if <condition pos:line="356" pos:column="13">(<expr><call><name pos:line="356" pos:column="14">strcmp<pos:position pos:line="356" pos:column="20"/></name><argument_list pos:line="356" pos:column="20">(<argument><expr><name pos:line="356" pos:column="21">name<pos:position pos:line="356" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="356" pos:column="27">"sess_dropped"<pos:position pos:line="356" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="356" pos:column="42"/></argument_list></call> <operator pos:line="356" pos:column="43">==<pos:position pos:line="356" pos:column="45"/></operator> <literal type="number" pos:line="356" pos:column="46">0<pos:position pos:line="356" pos:column="47"/></literal></expr>)<pos:position pos:line="356" pos:column="48"/></condition><then pos:line="356" pos:column="48">
      <block type="pseudo"><return pos:line="357" pos:column="7">return <expr><call><name pos:line="357" pos:column="14">varnish_submit_derive<pos:position pos:line="357" pos:column="35"/></name><argument_list pos:line="357" pos:column="35">(<argument><expr><name><name pos:line="357" pos:column="36">conf<pos:position pos:line="357" pos:column="40"/></name><operator pos:line="357" pos:column="40">-&gt;<pos:position pos:line="357" pos:column="45"/></operator><name pos:line="357" pos:column="42">instance<pos:position pos:line="357" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="357" pos:column="52">"session"<pos:position pos:line="357" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="358" pos:column="36">"total_operations"<pos:position pos:line="358" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="358" pos:column="56">"dropped_for_thread"<pos:position pos:line="358" pos:column="76"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="359" pos:column="36">val<pos:position pos:line="359" pos:column="39"/></name></expr></argument>)<pos:position pos:line="359" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="41"/></return></block></then></if></elseif></if>
<cpp:endif pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">endif<pos:position pos:line="360" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="361" pos:column="4"/></block></then></if>

  <if pos:line="363" pos:column="3">if <condition pos:line="363" pos:column="6">(<expr><name><name pos:line="363" pos:column="7">conf<pos:position pos:line="363" pos:column="11"/></name><operator pos:line="363" pos:column="11">-&gt;<pos:position pos:line="363" pos:column="16"/></operator><name pos:line="363" pos:column="13">collect_shm<pos:position pos:line="363" pos:column="24"/></name></name></expr>)<pos:position pos:line="363" pos:column="25"/></condition><then pos:line="363" pos:column="25"> <block pos:line="363" pos:column="26">{
    <if pos:line="364" pos:column="5">if <condition pos:line="364" pos:column="8">(<expr><call><name pos:line="364" pos:column="9">strcmp<pos:position pos:line="364" pos:column="15"/></name><argument_list pos:line="364" pos:column="15">(<argument><expr><name pos:line="364" pos:column="16">name<pos:position pos:line="364" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="364" pos:column="22">"shm_records"<pos:position pos:line="364" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="364" pos:column="36"/></argument_list></call> <operator pos:line="364" pos:column="37">==<pos:position pos:line="364" pos:column="39"/></operator> <literal type="number" pos:line="364" pos:column="40">0<pos:position pos:line="364" pos:column="41"/></literal></expr>)<pos:position pos:line="364" pos:column="42"/></condition><then pos:line="364" pos:column="42">
      <block type="pseudo"><return pos:line="365" pos:column="7">return <expr><call><name pos:line="365" pos:column="14">varnish_submit_derive<pos:position pos:line="365" pos:column="35"/></name><argument_list pos:line="365" pos:column="35">(<argument><expr><name><name pos:line="365" pos:column="36">conf<pos:position pos:line="365" pos:column="40"/></name><operator pos:line="365" pos:column="40">-&gt;<pos:position pos:line="365" pos:column="45"/></operator><name pos:line="365" pos:column="42">instance<pos:position pos:line="365" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="365" pos:column="52">"shm"<pos:position pos:line="365" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="365" pos:column="59">"total_operations"<pos:position pos:line="365" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="366" pos:column="36">"records"<pos:position pos:line="366" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="366" pos:column="47">val<pos:position pos:line="366" pos:column="50"/></name></expr></argument>)<pos:position pos:line="366" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="52"/></return></block></then>
    <elseif pos:line="367" pos:column="5">else <if pos:line="367" pos:column="10">if <condition pos:line="367" pos:column="13">(<expr><call><name pos:line="367" pos:column="14">strcmp<pos:position pos:line="367" pos:column="20"/></name><argument_list pos:line="367" pos:column="20">(<argument><expr><name pos:line="367" pos:column="21">name<pos:position pos:line="367" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="367" pos:column="27">"shm_writes"<pos:position pos:line="367" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="367" pos:column="40"/></argument_list></call> <operator pos:line="367" pos:column="41">==<pos:position pos:line="367" pos:column="43"/></operator> <literal type="number" pos:line="367" pos:column="44">0<pos:position pos:line="367" pos:column="45"/></literal></expr>)<pos:position pos:line="367" pos:column="46"/></condition><then pos:line="367" pos:column="46">
      <block type="pseudo"><return pos:line="368" pos:column="7">return <expr><call><name pos:line="368" pos:column="14">varnish_submit_derive<pos:position pos:line="368" pos:column="35"/></name><argument_list pos:line="368" pos:column="35">(<argument><expr><name><name pos:line="368" pos:column="36">conf<pos:position pos:line="368" pos:column="40"/></name><operator pos:line="368" pos:column="40">-&gt;<pos:position pos:line="368" pos:column="45"/></operator><name pos:line="368" pos:column="42">instance<pos:position pos:line="368" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="368" pos:column="52">"shm"<pos:position pos:line="368" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="368" pos:column="59">"total_operations"<pos:position pos:line="368" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="369" pos:column="36">"writes"<pos:position pos:line="369" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="369" pos:column="46">val<pos:position pos:line="369" pos:column="49"/></name></expr></argument>)<pos:position pos:line="369" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="369" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="370" pos:column="5">else <if pos:line="370" pos:column="10">if <condition pos:line="370" pos:column="13">(<expr><call><name pos:line="370" pos:column="14">strcmp<pos:position pos:line="370" pos:column="20"/></name><argument_list pos:line="370" pos:column="20">(<argument><expr><name pos:line="370" pos:column="21">name<pos:position pos:line="370" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="370" pos:column="27">"shm_flushes"<pos:position pos:line="370" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="370" pos:column="41"/></argument_list></call> <operator pos:line="370" pos:column="42">==<pos:position pos:line="370" pos:column="44"/></operator> <literal type="number" pos:line="370" pos:column="45">0<pos:position pos:line="370" pos:column="46"/></literal></expr>)<pos:position pos:line="370" pos:column="47"/></condition><then pos:line="370" pos:column="47">
      <block type="pseudo"><return pos:line="371" pos:column="7">return <expr><call><name pos:line="371" pos:column="14">varnish_submit_derive<pos:position pos:line="371" pos:column="35"/></name><argument_list pos:line="371" pos:column="35">(<argument><expr><name><name pos:line="371" pos:column="36">conf<pos:position pos:line="371" pos:column="40"/></name><operator pos:line="371" pos:column="40">-&gt;<pos:position pos:line="371" pos:column="45"/></operator><name pos:line="371" pos:column="42">instance<pos:position pos:line="371" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="371" pos:column="52">"shm"<pos:position pos:line="371" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="371" pos:column="59">"total_operations"<pos:position pos:line="371" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="372" pos:column="36">"flushes"<pos:position pos:line="372" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="372" pos:column="47">val<pos:position pos:line="372" pos:column="50"/></name></expr></argument>)<pos:position pos:line="372" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="373" pos:column="5">else <if pos:line="373" pos:column="10">if <condition pos:line="373" pos:column="13">(<expr><call><name pos:line="373" pos:column="14">strcmp<pos:position pos:line="373" pos:column="20"/></name><argument_list pos:line="373" pos:column="20">(<argument><expr><name pos:line="373" pos:column="21">name<pos:position pos:line="373" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="373" pos:column="27">"shm_cont"<pos:position pos:line="373" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="373" pos:column="38"/></argument_list></call> <operator pos:line="373" pos:column="39">==<pos:position pos:line="373" pos:column="41"/></operator> <literal type="number" pos:line="373" pos:column="42">0<pos:position pos:line="373" pos:column="43"/></literal></expr>)<pos:position pos:line="373" pos:column="44"/></condition><then pos:line="373" pos:column="44">
      <block type="pseudo"><return pos:line="374" pos:column="7">return <expr><call><name pos:line="374" pos:column="14">varnish_submit_derive<pos:position pos:line="374" pos:column="35"/></name><argument_list pos:line="374" pos:column="35">(<argument><expr><name><name pos:line="374" pos:column="36">conf<pos:position pos:line="374" pos:column="40"/></name><operator pos:line="374" pos:column="40">-&gt;<pos:position pos:line="374" pos:column="45"/></operator><name pos:line="374" pos:column="42">instance<pos:position pos:line="374" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="374" pos:column="52">"shm"<pos:position pos:line="374" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="374" pos:column="59">"total_operations"<pos:position pos:line="374" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="375" pos:column="36">"contention"<pos:position pos:line="375" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="375" pos:column="50">val<pos:position pos:line="375" pos:column="53"/></name></expr></argument>)<pos:position pos:line="375" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="375" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="376" pos:column="5">else <if pos:line="376" pos:column="10">if <condition pos:line="376" pos:column="13">(<expr><call><name pos:line="376" pos:column="14">strcmp<pos:position pos:line="376" pos:column="20"/></name><argument_list pos:line="376" pos:column="20">(<argument><expr><name pos:line="376" pos:column="21">name<pos:position pos:line="376" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="376" pos:column="27">"shm_cycles"<pos:position pos:line="376" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="376" pos:column="40"/></argument_list></call> <operator pos:line="376" pos:column="41">==<pos:position pos:line="376" pos:column="43"/></operator> <literal type="number" pos:line="376" pos:column="44">0<pos:position pos:line="376" pos:column="45"/></literal></expr>)<pos:position pos:line="376" pos:column="46"/></condition><then pos:line="376" pos:column="46">
      <block type="pseudo"><return pos:line="377" pos:column="7">return <expr><call><name pos:line="377" pos:column="14">varnish_submit_derive<pos:position pos:line="377" pos:column="35"/></name><argument_list pos:line="377" pos:column="35">(<argument><expr><name><name pos:line="377" pos:column="36">conf<pos:position pos:line="377" pos:column="40"/></name><operator pos:line="377" pos:column="40">-&gt;<pos:position pos:line="377" pos:column="45"/></operator><name pos:line="377" pos:column="42">instance<pos:position pos:line="377" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="377" pos:column="52">"shm"<pos:position pos:line="377" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="377" pos:column="59">"total_operations"<pos:position pos:line="377" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="378" pos:column="36">"cycles"<pos:position pos:line="378" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="378" pos:column="46">val<pos:position pos:line="378" pos:column="49"/></name></expr></argument>)<pos:position pos:line="378" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="51"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="379" pos:column="4"/></block></then></if>

  <if pos:line="381" pos:column="3">if <condition pos:line="381" pos:column="6">(<expr><name><name pos:line="381" pos:column="7">conf<pos:position pos:line="381" pos:column="11"/></name><operator pos:line="381" pos:column="11">-&gt;<pos:position pos:line="381" pos:column="16"/></operator><name pos:line="381" pos:column="13">collect_sms<pos:position pos:line="381" pos:column="24"/></name></name></expr>)<pos:position pos:line="381" pos:column="25"/></condition><then pos:line="381" pos:column="25"> <block pos:line="381" pos:column="26">{
    <if pos:line="382" pos:column="5">if <condition pos:line="382" pos:column="8">(<expr><call><name pos:line="382" pos:column="9">strcmp<pos:position pos:line="382" pos:column="15"/></name><argument_list pos:line="382" pos:column="15">(<argument><expr><name pos:line="382" pos:column="16">name<pos:position pos:line="382" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="382" pos:column="22">"sms_nreq"<pos:position pos:line="382" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="382" pos:column="33"/></argument_list></call> <operator pos:line="382" pos:column="34">==<pos:position pos:line="382" pos:column="36"/></operator> <literal type="number" pos:line="382" pos:column="37">0<pos:position pos:line="382" pos:column="38"/></literal></expr>)<pos:position pos:line="382" pos:column="39"/></condition><then pos:line="382" pos:column="39">
      <block type="pseudo"><return pos:line="383" pos:column="7">return <expr><call><name pos:line="383" pos:column="14">varnish_submit_derive<pos:position pos:line="383" pos:column="35"/></name><argument_list pos:line="383" pos:column="35">(<argument><expr><name><name pos:line="383" pos:column="36">conf<pos:position pos:line="383" pos:column="40"/></name><operator pos:line="383" pos:column="40">-&gt;<pos:position pos:line="383" pos:column="45"/></operator><name pos:line="383" pos:column="42">instance<pos:position pos:line="383" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="383" pos:column="52">"sms"<pos:position pos:line="383" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="383" pos:column="59">"total_requests"<pos:position pos:line="383" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="384" pos:column="36">"allocator"<pos:position pos:line="384" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="384" pos:column="49">val<pos:position pos:line="384" pos:column="52"/></name></expr></argument>)<pos:position pos:line="384" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="54"/></return></block></then>
    <elseif pos:line="385" pos:column="5">else <if pos:line="385" pos:column="10">if <condition pos:line="385" pos:column="13">(<expr><call><name pos:line="385" pos:column="14">strcmp<pos:position pos:line="385" pos:column="20"/></name><argument_list pos:line="385" pos:column="20">(<argument><expr><name pos:line="385" pos:column="21">name<pos:position pos:line="385" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="385" pos:column="27">"sms_nobj"<pos:position pos:line="385" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="385" pos:column="38"/></argument_list></call> <operator pos:line="385" pos:column="39">==<pos:position pos:line="385" pos:column="41"/></operator> <literal type="number" pos:line="385" pos:column="42">0<pos:position pos:line="385" pos:column="43"/></literal></expr>)<pos:position pos:line="385" pos:column="44"/></condition><then pos:line="385" pos:column="44">
      <block type="pseudo"><return pos:line="386" pos:column="7">return <expr><call><name pos:line="386" pos:column="14">varnish_submit_gauge<pos:position pos:line="386" pos:column="34"/></name><argument_list pos:line="386" pos:column="34">(<argument><expr><name><name pos:line="386" pos:column="35">conf<pos:position pos:line="386" pos:column="39"/></name><operator pos:line="386" pos:column="39">-&gt;<pos:position pos:line="386" pos:column="44"/></operator><name pos:line="386" pos:column="41">instance<pos:position pos:line="386" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="386" pos:column="51">"sms"<pos:position pos:line="386" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="386" pos:column="58">"requests"<pos:position pos:line="386" pos:column="68"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="387" pos:column="35">"outstanding"<pos:position pos:line="387" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="387" pos:column="50">val<pos:position pos:line="387" pos:column="53"/></name></expr></argument>)<pos:position pos:line="387" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="388" pos:column="5">else <if pos:line="388" pos:column="10">if <condition pos:line="388" pos:column="13">(<expr><call><name pos:line="388" pos:column="14">strcmp<pos:position pos:line="388" pos:column="20"/></name><argument_list pos:line="388" pos:column="20">(<argument><expr><name pos:line="388" pos:column="21">name<pos:position pos:line="388" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="388" pos:column="27">"sms_nbytes"<pos:position pos:line="388" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="388" pos:column="40"/></argument_list></call> <operator pos:line="388" pos:column="41">==<pos:position pos:line="388" pos:column="43"/></operator> <literal type="number" pos:line="388" pos:column="44">0<pos:position pos:line="388" pos:column="45"/></literal></expr>)<pos:position pos:line="388" pos:column="46"/></condition><then pos:line="388" pos:column="46">
      <block type="pseudo"><return pos:line="389" pos:column="7">return <expr><call><name pos:line="389" pos:column="14">varnish_submit_gauge<pos:position pos:line="389" pos:column="34"/></name><argument_list pos:line="389" pos:column="34">(<argument><expr><name><name pos:line="389" pos:column="35">conf<pos:position pos:line="389" pos:column="39"/></name><operator pos:line="389" pos:column="39">-&gt;<pos:position pos:line="389" pos:column="44"/></operator><name pos:line="389" pos:column="41">instance<pos:position pos:line="389" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="389" pos:column="51">"sms"<pos:position pos:line="389" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="389" pos:column="58">"bytes"<pos:position pos:line="389" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="389" pos:column="67">"outstanding"<pos:position pos:line="389" pos:column="80"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="390" pos:column="35">val<pos:position pos:line="390" pos:column="38"/></name></expr></argument>)<pos:position pos:line="390" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="391" pos:column="5">else <if pos:line="391" pos:column="10">if <condition pos:line="391" pos:column="13">(<expr><call><name pos:line="391" pos:column="14">strcmp<pos:position pos:line="391" pos:column="20"/></name><argument_list pos:line="391" pos:column="20">(<argument><expr><name pos:line="391" pos:column="21">name<pos:position pos:line="391" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="391" pos:column="27">"sms_balloc"<pos:position pos:line="391" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="391" pos:column="40"/></argument_list></call> <operator pos:line="391" pos:column="41">==<pos:position pos:line="391" pos:column="43"/></operator> <literal type="number" pos:line="391" pos:column="44">0<pos:position pos:line="391" pos:column="45"/></literal></expr>)<pos:position pos:line="391" pos:column="46"/></condition><then pos:line="391" pos:column="46">
      <block type="pseudo"><return pos:line="392" pos:column="7">return <expr><call><name pos:line="392" pos:column="14">varnish_submit_derive<pos:position pos:line="392" pos:column="35"/></name><argument_list pos:line="392" pos:column="35">(<argument><expr><name><name pos:line="392" pos:column="36">conf<pos:position pos:line="392" pos:column="40"/></name><operator pos:line="392" pos:column="40">-&gt;<pos:position pos:line="392" pos:column="45"/></operator><name pos:line="392" pos:column="42">instance<pos:position pos:line="392" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="392" pos:column="52">"sms"<pos:position pos:line="392" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="392" pos:column="59">"total_bytes"<pos:position pos:line="392" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="393" pos:column="36">"allocated"<pos:position pos:line="393" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="393" pos:column="49">val<pos:position pos:line="393" pos:column="52"/></name></expr></argument>)<pos:position pos:line="393" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="394" pos:column="5">else <if pos:line="394" pos:column="10">if <condition pos:line="394" pos:column="13">(<expr><call><name pos:line="394" pos:column="14">strcmp<pos:position pos:line="394" pos:column="20"/></name><argument_list pos:line="394" pos:column="20">(<argument><expr><name pos:line="394" pos:column="21">name<pos:position pos:line="394" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="394" pos:column="27">"sms_bfree"<pos:position pos:line="394" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="394" pos:column="39"/></argument_list></call> <operator pos:line="394" pos:column="40">==<pos:position pos:line="394" pos:column="42"/></operator> <literal type="number" pos:line="394" pos:column="43">0<pos:position pos:line="394" pos:column="44"/></literal></expr>)<pos:position pos:line="394" pos:column="45"/></condition><then pos:line="394" pos:column="45">
      <block type="pseudo"><return pos:line="395" pos:column="7">return <expr><call><name pos:line="395" pos:column="14">varnish_submit_derive<pos:position pos:line="395" pos:column="35"/></name><argument_list pos:line="395" pos:column="35">(<argument><expr><name><name pos:line="395" pos:column="36">conf<pos:position pos:line="395" pos:column="40"/></name><operator pos:line="395" pos:column="40">-&gt;<pos:position pos:line="395" pos:column="45"/></operator><name pos:line="395" pos:column="42">instance<pos:position pos:line="395" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="395" pos:column="52">"sms"<pos:position pos:line="395" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="395" pos:column="59">"total_bytes"<pos:position pos:line="395" pos:column="72"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="395" pos:column="74">"free"<pos:position pos:line="395" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="396" pos:column="36">val<pos:position pos:line="396" pos:column="39"/></name></expr></argument>)<pos:position pos:line="396" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="396" pos:column="41"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="397" pos:column="4"/></block></then></if>

  <if pos:line="399" pos:column="3">if <condition pos:line="399" pos:column="6">(<expr><name><name pos:line="399" pos:column="7">conf<pos:position pos:line="399" pos:column="11"/></name><operator pos:line="399" pos:column="11">-&gt;<pos:position pos:line="399" pos:column="16"/></operator><name pos:line="399" pos:column="13">collect_struct<pos:position pos:line="399" pos:column="27"/></name></name></expr>)<pos:position pos:line="399" pos:column="28"/></condition><then pos:line="399" pos:column="28"> <block pos:line="399" pos:column="29">{
    <if pos:line="400" pos:column="5">if <condition pos:line="400" pos:column="8">(<expr><call><name pos:line="400" pos:column="9">strcmp<pos:position pos:line="400" pos:column="15"/></name><argument_list pos:line="400" pos:column="15">(<argument><expr><name pos:line="400" pos:column="16">name<pos:position pos:line="400" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="400" pos:column="22">"n_sess_mem"<pos:position pos:line="400" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="400" pos:column="35"/></argument_list></call> <operator pos:line="400" pos:column="36">==<pos:position pos:line="400" pos:column="38"/></operator> <literal type="number" pos:line="400" pos:column="39">0<pos:position pos:line="400" pos:column="40"/></literal></expr>)<pos:position pos:line="400" pos:column="41"/></condition><then pos:line="400" pos:column="41">
      <block type="pseudo"><return pos:line="401" pos:column="7">return <expr><call><name pos:line="401" pos:column="14">varnish_submit_gauge<pos:position pos:line="401" pos:column="34"/></name><argument_list pos:line="401" pos:column="34">(<argument><expr><name><name pos:line="401" pos:column="35">conf<pos:position pos:line="401" pos:column="39"/></name><operator pos:line="401" pos:column="39">-&gt;<pos:position pos:line="401" pos:column="44"/></operator><name pos:line="401" pos:column="41">instance<pos:position pos:line="401" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="401" pos:column="51">"struct"<pos:position pos:line="401" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="401" pos:column="61">"current_sessions"<pos:position pos:line="401" pos:column="79"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="402" pos:column="35">"sess_mem"<pos:position pos:line="402" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="402" pos:column="47">val<pos:position pos:line="402" pos:column="50"/></name></expr></argument>)<pos:position pos:line="402" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="402" pos:column="52"/></return></block></then>
    <elseif pos:line="403" pos:column="5">else <if pos:line="403" pos:column="10">if <condition pos:line="403" pos:column="13">(<expr><call><name pos:line="403" pos:column="14">strcmp<pos:position pos:line="403" pos:column="20"/></name><argument_list pos:line="403" pos:column="20">(<argument><expr><name pos:line="403" pos:column="21">name<pos:position pos:line="403" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="403" pos:column="27">"n_sess"<pos:position pos:line="403" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="403" pos:column="36"/></argument_list></call> <operator pos:line="403" pos:column="37">==<pos:position pos:line="403" pos:column="39"/></operator> <literal type="number" pos:line="403" pos:column="40">0<pos:position pos:line="403" pos:column="41"/></literal></expr>)<pos:position pos:line="403" pos:column="42"/></condition><then pos:line="403" pos:column="42">
      <block type="pseudo"><return pos:line="404" pos:column="7">return <expr><call><name pos:line="404" pos:column="14">varnish_submit_gauge<pos:position pos:line="404" pos:column="34"/></name><argument_list pos:line="404" pos:column="34">(<argument><expr><name><name pos:line="404" pos:column="35">conf<pos:position pos:line="404" pos:column="39"/></name><operator pos:line="404" pos:column="39">-&gt;<pos:position pos:line="404" pos:column="44"/></operator><name pos:line="404" pos:column="41">instance<pos:position pos:line="404" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="404" pos:column="51">"struct"<pos:position pos:line="404" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="404" pos:column="61">"current_sessions"<pos:position pos:line="404" pos:column="79"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="405" pos:column="35">"sess"<pos:position pos:line="405" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="405" pos:column="43">val<pos:position pos:line="405" pos:column="46"/></name></expr></argument>)<pos:position pos:line="405" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="48"/></return></block></then></if></elseif>
    <elseif pos:line="406" pos:column="5">else <if pos:line="406" pos:column="10">if <condition pos:line="406" pos:column="13">(<expr><call><name pos:line="406" pos:column="14">strcmp<pos:position pos:line="406" pos:column="20"/></name><argument_list pos:line="406" pos:column="20">(<argument><expr><name pos:line="406" pos:column="21">name<pos:position pos:line="406" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="406" pos:column="27">"n_object"<pos:position pos:line="406" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="406" pos:column="38"/></argument_list></call> <operator pos:line="406" pos:column="39">==<pos:position pos:line="406" pos:column="41"/></operator> <literal type="number" pos:line="406" pos:column="42">0<pos:position pos:line="406" pos:column="43"/></literal></expr>)<pos:position pos:line="406" pos:column="44"/></condition><then pos:line="406" pos:column="44">
      <block type="pseudo"><return pos:line="407" pos:column="7">return <expr><call><name pos:line="407" pos:column="14">varnish_submit_gauge<pos:position pos:line="407" pos:column="34"/></name><argument_list pos:line="407" pos:column="34">(<argument><expr><name><name pos:line="407" pos:column="35">conf<pos:position pos:line="407" pos:column="39"/></name><operator pos:line="407" pos:column="39">-&gt;<pos:position pos:line="407" pos:column="44"/></operator><name pos:line="407" pos:column="41">instance<pos:position pos:line="407" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="407" pos:column="51">"struct"<pos:position pos:line="407" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="407" pos:column="61">"objects"<pos:position pos:line="407" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="407" pos:column="72">"object"<pos:position pos:line="407" pos:column="80"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="408" pos:column="35">val<pos:position pos:line="408" pos:column="38"/></name></expr></argument>)<pos:position pos:line="408" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="409" pos:column="5">else <if pos:line="409" pos:column="10">if <condition pos:line="409" pos:column="13">(<expr><call><name pos:line="409" pos:column="14">strcmp<pos:position pos:line="409" pos:column="20"/></name><argument_list pos:line="409" pos:column="20">(<argument><expr><name pos:line="409" pos:column="21">name<pos:position pos:line="409" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="409" pos:column="27">"n_vampireobject"<pos:position pos:line="409" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="409" pos:column="45"/></argument_list></call> <operator pos:line="409" pos:column="46">==<pos:position pos:line="409" pos:column="48"/></operator> <literal type="number" pos:line="409" pos:column="49">0<pos:position pos:line="409" pos:column="50"/></literal></expr>)<pos:position pos:line="409" pos:column="51"/></condition><then pos:line="409" pos:column="51">
      <block type="pseudo"><return pos:line="410" pos:column="7">return <expr><call><name pos:line="410" pos:column="14">varnish_submit_gauge<pos:position pos:line="410" pos:column="34"/></name><argument_list pos:line="410" pos:column="34">(<argument><expr><name><name pos:line="410" pos:column="35">conf<pos:position pos:line="410" pos:column="39"/></name><operator pos:line="410" pos:column="39">-&gt;<pos:position pos:line="410" pos:column="44"/></operator><name pos:line="410" pos:column="41">instance<pos:position pos:line="410" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="410" pos:column="51">"struct"<pos:position pos:line="410" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="410" pos:column="61">"objects"<pos:position pos:line="410" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="411" pos:column="35">"vampireobject"<pos:position pos:line="411" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="411" pos:column="52">val<pos:position pos:line="411" pos:column="55"/></name></expr></argument>)<pos:position pos:line="411" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="57"/></return></block></then></if></elseif>
    <elseif pos:line="412" pos:column="5">else <if pos:line="412" pos:column="10">if <condition pos:line="412" pos:column="13">(<expr><call><name pos:line="412" pos:column="14">strcmp<pos:position pos:line="412" pos:column="20"/></name><argument_list pos:line="412" pos:column="20">(<argument><expr><name pos:line="412" pos:column="21">name<pos:position pos:line="412" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="412" pos:column="27">"n_objectcore"<pos:position pos:line="412" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="412" pos:column="42"/></argument_list></call> <operator pos:line="412" pos:column="43">==<pos:position pos:line="412" pos:column="45"/></operator> <literal type="number" pos:line="412" pos:column="46">0<pos:position pos:line="412" pos:column="47"/></literal></expr>)<pos:position pos:line="412" pos:column="48"/></condition><then pos:line="412" pos:column="48">
      <block type="pseudo"><return pos:line="413" pos:column="7">return <expr><call><name pos:line="413" pos:column="14">varnish_submit_gauge<pos:position pos:line="413" pos:column="34"/></name><argument_list pos:line="413" pos:column="34">(<argument><expr><name><name pos:line="413" pos:column="35">conf<pos:position pos:line="413" pos:column="39"/></name><operator pos:line="413" pos:column="39">-&gt;<pos:position pos:line="413" pos:column="44"/></operator><name pos:line="413" pos:column="41">instance<pos:position pos:line="413" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="413" pos:column="51">"struct"<pos:position pos:line="413" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="413" pos:column="61">"objects"<pos:position pos:line="413" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="414" pos:column="35">"objectcore"<pos:position pos:line="414" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="414" pos:column="49">val<pos:position pos:line="414" pos:column="52"/></name></expr></argument>)<pos:position pos:line="414" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="414" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="415" pos:column="5">else <if pos:line="415" pos:column="10">if <condition pos:line="415" pos:column="13">(<expr><call><name pos:line="415" pos:column="14">strcmp<pos:position pos:line="415" pos:column="20"/></name><argument_list pos:line="415" pos:column="20">(<argument><expr><name pos:line="415" pos:column="21">name<pos:position pos:line="415" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="415" pos:column="27">"n_waitinglist"<pos:position pos:line="415" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="415" pos:column="43"/></argument_list></call> <operator pos:line="415" pos:column="44">==<pos:position pos:line="415" pos:column="46"/></operator> <literal type="number" pos:line="415" pos:column="47">0<pos:position pos:line="415" pos:column="48"/></literal></expr>)<pos:position pos:line="415" pos:column="49"/></condition><then pos:line="415" pos:column="49">
      <block type="pseudo"><return pos:line="416" pos:column="7">return <expr><call><name pos:line="416" pos:column="14">varnish_submit_gauge<pos:position pos:line="416" pos:column="34"/></name><argument_list pos:line="416" pos:column="34">(<argument><expr><name><name pos:line="416" pos:column="35">conf<pos:position pos:line="416" pos:column="39"/></name><operator pos:line="416" pos:column="39">-&gt;<pos:position pos:line="416" pos:column="44"/></operator><name pos:line="416" pos:column="41">instance<pos:position pos:line="416" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="416" pos:column="51">"struct"<pos:position pos:line="416" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="416" pos:column="61">"objects"<pos:position pos:line="416" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="417" pos:column="35">"waitinglist"<pos:position pos:line="417" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="417" pos:column="50">val<pos:position pos:line="417" pos:column="53"/></name></expr></argument>)<pos:position pos:line="417" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="417" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="418" pos:column="5">else <if pos:line="418" pos:column="10">if <condition pos:line="418" pos:column="13">(<expr><call><name pos:line="418" pos:column="14">strcmp<pos:position pos:line="418" pos:column="20"/></name><argument_list pos:line="418" pos:column="20">(<argument><expr><name pos:line="418" pos:column="21">name<pos:position pos:line="418" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="418" pos:column="27">"n_objecthead"<pos:position pos:line="418" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="418" pos:column="42"/></argument_list></call> <operator pos:line="418" pos:column="43">==<pos:position pos:line="418" pos:column="45"/></operator> <literal type="number" pos:line="418" pos:column="46">0<pos:position pos:line="418" pos:column="47"/></literal></expr>)<pos:position pos:line="418" pos:column="48"/></condition><then pos:line="418" pos:column="48">
      <block type="pseudo"><return pos:line="419" pos:column="7">return <expr><call><name pos:line="419" pos:column="14">varnish_submit_gauge<pos:position pos:line="419" pos:column="34"/></name><argument_list pos:line="419" pos:column="34">(<argument><expr><name><name pos:line="419" pos:column="35">conf<pos:position pos:line="419" pos:column="39"/></name><operator pos:line="419" pos:column="39">-&gt;<pos:position pos:line="419" pos:column="44"/></operator><name pos:line="419" pos:column="41">instance<pos:position pos:line="419" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="419" pos:column="51">"struct"<pos:position pos:line="419" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="419" pos:column="61">"objects"<pos:position pos:line="419" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="420" pos:column="35">"objecthead"<pos:position pos:line="420" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="420" pos:column="49">val<pos:position pos:line="420" pos:column="52"/></name></expr></argument>)<pos:position pos:line="420" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="420" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="421" pos:column="5">else <if pos:line="421" pos:column="10">if <condition pos:line="421" pos:column="13">(<expr><call><name pos:line="421" pos:column="14">strcmp<pos:position pos:line="421" pos:column="20"/></name><argument_list pos:line="421" pos:column="20">(<argument><expr><name pos:line="421" pos:column="21">name<pos:position pos:line="421" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="421" pos:column="27">"n_smf"<pos:position pos:line="421" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="421" pos:column="35"/></argument_list></call> <operator pos:line="421" pos:column="36">==<pos:position pos:line="421" pos:column="38"/></operator> <literal type="number" pos:line="421" pos:column="39">0<pos:position pos:line="421" pos:column="40"/></literal></expr>)<pos:position pos:line="421" pos:column="41"/></condition><then pos:line="421" pos:column="41">
      <block type="pseudo"><return pos:line="422" pos:column="7">return <expr><call><name pos:line="422" pos:column="14">varnish_submit_gauge<pos:position pos:line="422" pos:column="34"/></name><argument_list pos:line="422" pos:column="34">(<argument><expr><name><name pos:line="422" pos:column="35">conf<pos:position pos:line="422" pos:column="39"/></name><operator pos:line="422" pos:column="39">-&gt;<pos:position pos:line="422" pos:column="44"/></operator><name pos:line="422" pos:column="41">instance<pos:position pos:line="422" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="422" pos:column="51">"struct"<pos:position pos:line="422" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="422" pos:column="61">"objects"<pos:position pos:line="422" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="422" pos:column="72">"smf"<pos:position pos:line="422" pos:column="77"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="423" pos:column="35">val<pos:position pos:line="423" pos:column="38"/></name></expr></argument>)<pos:position pos:line="423" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="423" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="424" pos:column="5">else <if pos:line="424" pos:column="10">if <condition pos:line="424" pos:column="13">(<expr><call><name pos:line="424" pos:column="14">strcmp<pos:position pos:line="424" pos:column="20"/></name><argument_list pos:line="424" pos:column="20">(<argument><expr><name pos:line="424" pos:column="21">name<pos:position pos:line="424" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="424" pos:column="27">"n_smf_frag"<pos:position pos:line="424" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="424" pos:column="40"/></argument_list></call> <operator pos:line="424" pos:column="41">==<pos:position pos:line="424" pos:column="43"/></operator> <literal type="number" pos:line="424" pos:column="44">0<pos:position pos:line="424" pos:column="45"/></literal></expr>)<pos:position pos:line="424" pos:column="46"/></condition><then pos:line="424" pos:column="46">
      <block type="pseudo"><return pos:line="425" pos:column="7">return <expr><call><name pos:line="425" pos:column="14">varnish_submit_gauge<pos:position pos:line="425" pos:column="34"/></name><argument_list pos:line="425" pos:column="34">(<argument><expr><name><name pos:line="425" pos:column="35">conf<pos:position pos:line="425" pos:column="39"/></name><operator pos:line="425" pos:column="39">-&gt;<pos:position pos:line="425" pos:column="44"/></operator><name pos:line="425" pos:column="41">instance<pos:position pos:line="425" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="425" pos:column="51">"struct"<pos:position pos:line="425" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="425" pos:column="61">"objects"<pos:position pos:line="425" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="426" pos:column="35">"smf_frag"<pos:position pos:line="426" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="426" pos:column="47">val<pos:position pos:line="426" pos:column="50"/></name></expr></argument>)<pos:position pos:line="426" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="426" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="427" pos:column="5">else <if pos:line="427" pos:column="10">if <condition pos:line="427" pos:column="13">(<expr><call><name pos:line="427" pos:column="14">strcmp<pos:position pos:line="427" pos:column="20"/></name><argument_list pos:line="427" pos:column="20">(<argument><expr><name pos:line="427" pos:column="21">name<pos:position pos:line="427" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="427" pos:column="27">"n_smf_large"<pos:position pos:line="427" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="427" pos:column="41"/></argument_list></call> <operator pos:line="427" pos:column="42">==<pos:position pos:line="427" pos:column="44"/></operator> <literal type="number" pos:line="427" pos:column="45">0<pos:position pos:line="427" pos:column="46"/></literal></expr>)<pos:position pos:line="427" pos:column="47"/></condition><then pos:line="427" pos:column="47">
      <block type="pseudo"><return pos:line="428" pos:column="7">return <expr><call><name pos:line="428" pos:column="14">varnish_submit_gauge<pos:position pos:line="428" pos:column="34"/></name><argument_list pos:line="428" pos:column="34">(<argument><expr><name><name pos:line="428" pos:column="35">conf<pos:position pos:line="428" pos:column="39"/></name><operator pos:line="428" pos:column="39">-&gt;<pos:position pos:line="428" pos:column="44"/></operator><name pos:line="428" pos:column="41">instance<pos:position pos:line="428" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="428" pos:column="51">"struct"<pos:position pos:line="428" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="428" pos:column="61">"objects"<pos:position pos:line="428" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="429" pos:column="35">"smf_large"<pos:position pos:line="429" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="429" pos:column="48">val<pos:position pos:line="429" pos:column="51"/></name></expr></argument>)<pos:position pos:line="429" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="429" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="430" pos:column="5">else <if pos:line="430" pos:column="10">if <condition pos:line="430" pos:column="13">(<expr><call><name pos:line="430" pos:column="14">strcmp<pos:position pos:line="430" pos:column="20"/></name><argument_list pos:line="430" pos:column="20">(<argument><expr><name pos:line="430" pos:column="21">name<pos:position pos:line="430" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="430" pos:column="27">"n_vbe_conn"<pos:position pos:line="430" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="430" pos:column="40"/></argument_list></call> <operator pos:line="430" pos:column="41">==<pos:position pos:line="430" pos:column="43"/></operator> <literal type="number" pos:line="430" pos:column="44">0<pos:position pos:line="430" pos:column="45"/></literal></expr>)<pos:position pos:line="430" pos:column="46"/></condition><then pos:line="430" pos:column="46">
      <block type="pseudo"><return pos:line="431" pos:column="7">return <expr><call><name pos:line="431" pos:column="14">varnish_submit_gauge<pos:position pos:line="431" pos:column="34"/></name><argument_list pos:line="431" pos:column="34">(<argument><expr><name><name pos:line="431" pos:column="35">conf<pos:position pos:line="431" pos:column="39"/></name><operator pos:line="431" pos:column="39">-&gt;<pos:position pos:line="431" pos:column="44"/></operator><name pos:line="431" pos:column="41">instance<pos:position pos:line="431" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="431" pos:column="51">"struct"<pos:position pos:line="431" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="431" pos:column="61">"objects"<pos:position pos:line="431" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="432" pos:column="35">"vbe_conn"<pos:position pos:line="432" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="432" pos:column="47">val<pos:position pos:line="432" pos:column="50"/></name></expr></argument>)<pos:position pos:line="432" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="432" pos:column="52"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="433" pos:column="4"/></block></then></if>

  <if pos:line="435" pos:column="3">if <condition pos:line="435" pos:column="6">(<expr><name><name pos:line="435" pos:column="7">conf<pos:position pos:line="435" pos:column="11"/></name><operator pos:line="435" pos:column="11">-&gt;<pos:position pos:line="435" pos:column="16"/></operator><name pos:line="435" pos:column="13">collect_totals<pos:position pos:line="435" pos:column="27"/></name></name></expr>)<pos:position pos:line="435" pos:column="28"/></condition><then pos:line="435" pos:column="28"> <block pos:line="435" pos:column="29">{
    <if pos:line="436" pos:column="5">if <condition pos:line="436" pos:column="8">(<expr><call><name pos:line="436" pos:column="9">strcmp<pos:position pos:line="436" pos:column="15"/></name><argument_list pos:line="436" pos:column="15">(<argument><expr><name pos:line="436" pos:column="16">name<pos:position pos:line="436" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="436" pos:column="22">"s_sess"<pos:position pos:line="436" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="436" pos:column="31"/></argument_list></call> <operator pos:line="436" pos:column="32">==<pos:position pos:line="436" pos:column="34"/></operator> <literal type="number" pos:line="436" pos:column="35">0<pos:position pos:line="436" pos:column="36"/></literal></expr>)<pos:position pos:line="436" pos:column="37"/></condition><then pos:line="436" pos:column="37">
      <block type="pseudo"><return pos:line="437" pos:column="7">return <expr><call><name pos:line="437" pos:column="14">varnish_submit_derive<pos:position pos:line="437" pos:column="35"/></name><argument_list pos:line="437" pos:column="35">(<argument><expr><name><name pos:line="437" pos:column="36">conf<pos:position pos:line="437" pos:column="40"/></name><operator pos:line="437" pos:column="40">-&gt;<pos:position pos:line="437" pos:column="45"/></operator><name pos:line="437" pos:column="42">instance<pos:position pos:line="437" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="437" pos:column="52">"totals"<pos:position pos:line="437" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="437" pos:column="62">"total_sessions"<pos:position pos:line="437" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="438" pos:column="36">"sessions"<pos:position pos:line="438" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="438" pos:column="48">val<pos:position pos:line="438" pos:column="51"/></name></expr></argument>)<pos:position pos:line="438" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="438" pos:column="53"/></return></block></then>
    <elseif pos:line="439" pos:column="5">else <if pos:line="439" pos:column="10">if <condition pos:line="439" pos:column="13">(<expr><call><name pos:line="439" pos:column="14">strcmp<pos:position pos:line="439" pos:column="20"/></name><argument_list pos:line="439" pos:column="20">(<argument><expr><name pos:line="439" pos:column="21">name<pos:position pos:line="439" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="439" pos:column="27">"s_req"<pos:position pos:line="439" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="439" pos:column="35"/></argument_list></call> <operator pos:line="439" pos:column="36">==<pos:position pos:line="439" pos:column="38"/></operator> <literal type="number" pos:line="439" pos:column="39">0<pos:position pos:line="439" pos:column="40"/></literal></expr>)<pos:position pos:line="439" pos:column="41"/></condition><then pos:line="439" pos:column="41">
      <block type="pseudo"><return pos:line="440" pos:column="7">return <expr><call><name pos:line="440" pos:column="14">varnish_submit_derive<pos:position pos:line="440" pos:column="35"/></name><argument_list pos:line="440" pos:column="35">(<argument><expr><name><name pos:line="440" pos:column="36">conf<pos:position pos:line="440" pos:column="40"/></name><operator pos:line="440" pos:column="40">-&gt;<pos:position pos:line="440" pos:column="45"/></operator><name pos:line="440" pos:column="42">instance<pos:position pos:line="440" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="440" pos:column="52">"totals"<pos:position pos:line="440" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="440" pos:column="62">"total_requests"<pos:position pos:line="440" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="441" pos:column="36">"requests"<pos:position pos:line="441" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="441" pos:column="48">val<pos:position pos:line="441" pos:column="51"/></name></expr></argument>)<pos:position pos:line="441" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="441" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="442" pos:column="5">else <if pos:line="442" pos:column="10">if <condition pos:line="442" pos:column="13">(<expr><call><name pos:line="442" pos:column="14">strcmp<pos:position pos:line="442" pos:column="20"/></name><argument_list pos:line="442" pos:column="20">(<argument><expr><name pos:line="442" pos:column="21">name<pos:position pos:line="442" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="442" pos:column="27">"s_pipe"<pos:position pos:line="442" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="442" pos:column="36"/></argument_list></call> <operator pos:line="442" pos:column="37">==<pos:position pos:line="442" pos:column="39"/></operator> <literal type="number" pos:line="442" pos:column="40">0<pos:position pos:line="442" pos:column="41"/></literal></expr>)<pos:position pos:line="442" pos:column="42"/></condition><then pos:line="442" pos:column="42">
      <block type="pseudo"><return pos:line="443" pos:column="7">return <expr><call><name pos:line="443" pos:column="14">varnish_submit_derive<pos:position pos:line="443" pos:column="35"/></name><argument_list pos:line="443" pos:column="35">(<argument><expr><name><name pos:line="443" pos:column="36">conf<pos:position pos:line="443" pos:column="40"/></name><operator pos:line="443" pos:column="40">-&gt;<pos:position pos:line="443" pos:column="45"/></operator><name pos:line="443" pos:column="42">instance<pos:position pos:line="443" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="443" pos:column="52">"totals"<pos:position pos:line="443" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="443" pos:column="62">"total_operations"<pos:position pos:line="443" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="444" pos:column="36">"pipe"<pos:position pos:line="444" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="444" pos:column="44">val<pos:position pos:line="444" pos:column="47"/></name></expr></argument>)<pos:position pos:line="444" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="444" pos:column="49"/></return></block></then></if></elseif>
    <elseif pos:line="445" pos:column="5">else <if pos:line="445" pos:column="10">if <condition pos:line="445" pos:column="13">(<expr><call><name pos:line="445" pos:column="14">strcmp<pos:position pos:line="445" pos:column="20"/></name><argument_list pos:line="445" pos:column="20">(<argument><expr><name pos:line="445" pos:column="21">name<pos:position pos:line="445" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="445" pos:column="27">"s_pass"<pos:position pos:line="445" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="445" pos:column="36"/></argument_list></call> <operator pos:line="445" pos:column="37">==<pos:position pos:line="445" pos:column="39"/></operator> <literal type="number" pos:line="445" pos:column="40">0<pos:position pos:line="445" pos:column="41"/></literal></expr>)<pos:position pos:line="445" pos:column="42"/></condition><then pos:line="445" pos:column="42">
      <block type="pseudo"><return pos:line="446" pos:column="7">return <expr><call><name pos:line="446" pos:column="14">varnish_submit_derive<pos:position pos:line="446" pos:column="35"/></name><argument_list pos:line="446" pos:column="35">(<argument><expr><name><name pos:line="446" pos:column="36">conf<pos:position pos:line="446" pos:column="40"/></name><operator pos:line="446" pos:column="40">-&gt;<pos:position pos:line="446" pos:column="45"/></operator><name pos:line="446" pos:column="42">instance<pos:position pos:line="446" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="446" pos:column="52">"totals"<pos:position pos:line="446" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="446" pos:column="62">"total_operations"<pos:position pos:line="446" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="447" pos:column="36">"pass"<pos:position pos:line="447" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="447" pos:column="44">val<pos:position pos:line="447" pos:column="47"/></name></expr></argument>)<pos:position pos:line="447" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="49"/></return></block></then></if></elseif>
    <elseif pos:line="448" pos:column="5">else <if pos:line="448" pos:column="10">if <condition pos:line="448" pos:column="13">(<expr><call><name pos:line="448" pos:column="14">strcmp<pos:position pos:line="448" pos:column="20"/></name><argument_list pos:line="448" pos:column="20">(<argument><expr><name pos:line="448" pos:column="21">name<pos:position pos:line="448" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="448" pos:column="27">"s_fetch"<pos:position pos:line="448" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="448" pos:column="37"/></argument_list></call> <operator pos:line="448" pos:column="38">==<pos:position pos:line="448" pos:column="40"/></operator> <literal type="number" pos:line="448" pos:column="41">0<pos:position pos:line="448" pos:column="42"/></literal></expr>)<pos:position pos:line="448" pos:column="43"/></condition><then pos:line="448" pos:column="43">
      <block type="pseudo"><return pos:line="449" pos:column="7">return <expr><call><name pos:line="449" pos:column="14">varnish_submit_derive<pos:position pos:line="449" pos:column="35"/></name><argument_list pos:line="449" pos:column="35">(<argument><expr><name><name pos:line="449" pos:column="36">conf<pos:position pos:line="449" pos:column="40"/></name><operator pos:line="449" pos:column="40">-&gt;<pos:position pos:line="449" pos:column="45"/></operator><name pos:line="449" pos:column="42">instance<pos:position pos:line="449" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="449" pos:column="52">"totals"<pos:position pos:line="449" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="449" pos:column="62">"total_operations"<pos:position pos:line="449" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="450" pos:column="36">"fetches"<pos:position pos:line="450" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="450" pos:column="47">val<pos:position pos:line="450" pos:column="50"/></name></expr></argument>)<pos:position pos:line="450" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="451" pos:column="5">else <if pos:line="451" pos:column="10">if <condition pos:line="451" pos:column="13">(<expr><call><name pos:line="451" pos:column="14">strcmp<pos:position pos:line="451" pos:column="20"/></name><argument_list pos:line="451" pos:column="20">(<argument><expr><name pos:line="451" pos:column="21">name<pos:position pos:line="451" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="451" pos:column="27">"s_synth"<pos:position pos:line="451" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="451" pos:column="37"/></argument_list></call> <operator pos:line="451" pos:column="38">==<pos:position pos:line="451" pos:column="40"/></operator> <literal type="number" pos:line="451" pos:column="41">0<pos:position pos:line="451" pos:column="42"/></literal></expr>)<pos:position pos:line="451" pos:column="43"/></condition><then pos:line="451" pos:column="43">
      <block type="pseudo"><return pos:line="452" pos:column="7">return <expr><call><name pos:line="452" pos:column="14">varnish_submit_derive<pos:position pos:line="452" pos:column="35"/></name><argument_list pos:line="452" pos:column="35">(<argument><expr><name><name pos:line="452" pos:column="36">conf<pos:position pos:line="452" pos:column="40"/></name><operator pos:line="452" pos:column="40">-&gt;<pos:position pos:line="452" pos:column="45"/></operator><name pos:line="452" pos:column="42">instance<pos:position pos:line="452" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="452" pos:column="52">"totals"<pos:position pos:line="452" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="452" pos:column="62">"total_bytes"<pos:position pos:line="452" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="453" pos:column="36">"synth"<pos:position pos:line="453" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="453" pos:column="45">val<pos:position pos:line="453" pos:column="48"/></name></expr></argument>)<pos:position pos:line="453" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="453" pos:column="50"/></return></block></then></if></elseif>
    <elseif pos:line="454" pos:column="5">else <if pos:line="454" pos:column="10">if <condition pos:line="454" pos:column="13">(<expr><call><name pos:line="454" pos:column="14">strcmp<pos:position pos:line="454" pos:column="20"/></name><argument_list pos:line="454" pos:column="20">(<argument><expr><name pos:line="454" pos:column="21">name<pos:position pos:line="454" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="454" pos:column="27">"s_req_hdrbytes"<pos:position pos:line="454" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="454" pos:column="44"/></argument_list></call> <operator pos:line="454" pos:column="45">==<pos:position pos:line="454" pos:column="47"/></operator> <literal type="number" pos:line="454" pos:column="48">0<pos:position pos:line="454" pos:column="49"/></literal></expr>)<pos:position pos:line="454" pos:column="50"/></condition><then pos:line="454" pos:column="50">
      <block type="pseudo"><return pos:line="455" pos:column="7">return <expr><call><name pos:line="455" pos:column="14">varnish_submit_derive<pos:position pos:line="455" pos:column="35"/></name><argument_list pos:line="455" pos:column="35">(<argument><expr><name><name pos:line="455" pos:column="36">conf<pos:position pos:line="455" pos:column="40"/></name><operator pos:line="455" pos:column="40">-&gt;<pos:position pos:line="455" pos:column="45"/></operator><name pos:line="455" pos:column="42">instance<pos:position pos:line="455" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="455" pos:column="52">"totals"<pos:position pos:line="455" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="455" pos:column="62">"total_bytes"<pos:position pos:line="455" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="456" pos:column="36">"req_header"<pos:position pos:line="456" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="456" pos:column="50">val<pos:position pos:line="456" pos:column="53"/></name></expr></argument>)<pos:position pos:line="456" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="457" pos:column="5">else <if pos:line="457" pos:column="10">if <condition pos:line="457" pos:column="13">(<expr><call><name pos:line="457" pos:column="14">strcmp<pos:position pos:line="457" pos:column="20"/></name><argument_list pos:line="457" pos:column="20">(<argument><expr><name pos:line="457" pos:column="21">name<pos:position pos:line="457" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="457" pos:column="27">"s_req_bodybytes"<pos:position pos:line="457" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="457" pos:column="45"/></argument_list></call> <operator pos:line="457" pos:column="46">==<pos:position pos:line="457" pos:column="48"/></operator> <literal type="number" pos:line="457" pos:column="49">0<pos:position pos:line="457" pos:column="50"/></literal></expr>)<pos:position pos:line="457" pos:column="51"/></condition><then pos:line="457" pos:column="51">
      <block type="pseudo"><return pos:line="458" pos:column="7">return <expr><call><name pos:line="458" pos:column="14">varnish_submit_derive<pos:position pos:line="458" pos:column="35"/></name><argument_list pos:line="458" pos:column="35">(<argument><expr><name><name pos:line="458" pos:column="36">conf<pos:position pos:line="458" pos:column="40"/></name><operator pos:line="458" pos:column="40">-&gt;<pos:position pos:line="458" pos:column="45"/></operator><name pos:line="458" pos:column="42">instance<pos:position pos:line="458" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="458" pos:column="52">"totals"<pos:position pos:line="458" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="458" pos:column="62">"total_bytes"<pos:position pos:line="458" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="459" pos:column="36">"req_body"<pos:position pos:line="459" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="459" pos:column="48">val<pos:position pos:line="459" pos:column="51"/></name></expr></argument>)<pos:position pos:line="459" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="459" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="460" pos:column="5">else <if pos:line="460" pos:column="10">if <condition pos:line="460" pos:column="13">(<expr><call><name pos:line="460" pos:column="14">strcmp<pos:position pos:line="460" pos:column="20"/></name><argument_list pos:line="460" pos:column="20">(<argument><expr><name pos:line="460" pos:column="21">name<pos:position pos:line="460" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="460" pos:column="27">"s_req_protobytes"<pos:position pos:line="460" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="460" pos:column="46"/></argument_list></call> <operator pos:line="460" pos:column="47">==<pos:position pos:line="460" pos:column="49"/></operator> <literal type="number" pos:line="460" pos:column="50">0<pos:position pos:line="460" pos:column="51"/></literal></expr>)<pos:position pos:line="460" pos:column="52"/></condition><then pos:line="460" pos:column="52">
      <block type="pseudo"><return pos:line="461" pos:column="7">return <expr><call><name pos:line="461" pos:column="14">varnish_submit_derive<pos:position pos:line="461" pos:column="35"/></name><argument_list pos:line="461" pos:column="35">(<argument><expr><name><name pos:line="461" pos:column="36">conf<pos:position pos:line="461" pos:column="40"/></name><operator pos:line="461" pos:column="40">-&gt;<pos:position pos:line="461" pos:column="45"/></operator><name pos:line="461" pos:column="42">instance<pos:position pos:line="461" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="461" pos:column="52">"totals"<pos:position pos:line="461" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="461" pos:column="62">"total_bytes"<pos:position pos:line="461" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="462" pos:column="36">"req_proto"<pos:position pos:line="462" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="462" pos:column="49">val<pos:position pos:line="462" pos:column="52"/></name></expr></argument>)<pos:position pos:line="462" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="463" pos:column="5">else <if pos:line="463" pos:column="10">if <condition pos:line="463" pos:column="13">(<expr><call><name pos:line="463" pos:column="14">strcmp<pos:position pos:line="463" pos:column="20"/></name><argument_list pos:line="463" pos:column="20">(<argument><expr><name pos:line="463" pos:column="21">name<pos:position pos:line="463" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="463" pos:column="27">"s_resp_hdrbytes"<pos:position pos:line="463" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="463" pos:column="45"/></argument_list></call> <operator pos:line="463" pos:column="46">==<pos:position pos:line="463" pos:column="48"/></operator> <literal type="number" pos:line="463" pos:column="49">0<pos:position pos:line="463" pos:column="50"/></literal></expr>)<pos:position pos:line="463" pos:column="51"/></condition><then pos:line="463" pos:column="51">
      <block type="pseudo"><return pos:line="464" pos:column="7">return <expr><call><name pos:line="464" pos:column="14">varnish_submit_derive<pos:position pos:line="464" pos:column="35"/></name><argument_list pos:line="464" pos:column="35">(<argument><expr><name><name pos:line="464" pos:column="36">conf<pos:position pos:line="464" pos:column="40"/></name><operator pos:line="464" pos:column="40">-&gt;<pos:position pos:line="464" pos:column="45"/></operator><name pos:line="464" pos:column="42">instance<pos:position pos:line="464" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="464" pos:column="52">"totals"<pos:position pos:line="464" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="464" pos:column="62">"total_bytes"<pos:position pos:line="464" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="465" pos:column="36">"resp_header"<pos:position pos:line="465" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="465" pos:column="51">val<pos:position pos:line="465" pos:column="54"/></name></expr></argument>)<pos:position pos:line="465" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="466" pos:column="5">else <if pos:line="466" pos:column="10">if <condition pos:line="466" pos:column="13">(<expr><call><name pos:line="466" pos:column="14">strcmp<pos:position pos:line="466" pos:column="20"/></name><argument_list pos:line="466" pos:column="20">(<argument><expr><name pos:line="466" pos:column="21">name<pos:position pos:line="466" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="466" pos:column="27">"s_resp_bodybytes"<pos:position pos:line="466" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="466" pos:column="46"/></argument_list></call> <operator pos:line="466" pos:column="47">==<pos:position pos:line="466" pos:column="49"/></operator> <literal type="number" pos:line="466" pos:column="50">0<pos:position pos:line="466" pos:column="51"/></literal></expr>)<pos:position pos:line="466" pos:column="52"/></condition><then pos:line="466" pos:column="52">
      <block type="pseudo"><return pos:line="467" pos:column="7">return <expr><call><name pos:line="467" pos:column="14">varnish_submit_derive<pos:position pos:line="467" pos:column="35"/></name><argument_list pos:line="467" pos:column="35">(<argument><expr><name><name pos:line="467" pos:column="36">conf<pos:position pos:line="467" pos:column="40"/></name><operator pos:line="467" pos:column="40">-&gt;<pos:position pos:line="467" pos:column="45"/></operator><name pos:line="467" pos:column="42">instance<pos:position pos:line="467" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="467" pos:column="52">"totals"<pos:position pos:line="467" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="467" pos:column="62">"total_bytes"<pos:position pos:line="467" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="468" pos:column="36">"resp_body"<pos:position pos:line="468" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="468" pos:column="49">val<pos:position pos:line="468" pos:column="52"/></name></expr></argument>)<pos:position pos:line="468" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="468" pos:column="54"/></return></block></then></if></elseif>
    <elseif pos:line="469" pos:column="5">else <if pos:line="469" pos:column="10">if <condition pos:line="469" pos:column="13">(<expr><call><name pos:line="469" pos:column="14">strcmp<pos:position pos:line="469" pos:column="20"/></name><argument_list pos:line="469" pos:column="20">(<argument><expr><name pos:line="469" pos:column="21">name<pos:position pos:line="469" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="469" pos:column="27">"s_resp_protobytes"<pos:position pos:line="469" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="469" pos:column="47"/></argument_list></call> <operator pos:line="469" pos:column="48">==<pos:position pos:line="469" pos:column="50"/></operator> <literal type="number" pos:line="469" pos:column="51">0<pos:position pos:line="469" pos:column="52"/></literal></expr>)<pos:position pos:line="469" pos:column="53"/></condition><then pos:line="469" pos:column="53">
      <block type="pseudo"><return pos:line="470" pos:column="7">return <expr><call><name pos:line="470" pos:column="14">varnish_submit_derive<pos:position pos:line="470" pos:column="35"/></name><argument_list pos:line="470" pos:column="35">(<argument><expr><name><name pos:line="470" pos:column="36">conf<pos:position pos:line="470" pos:column="40"/></name><operator pos:line="470" pos:column="40">-&gt;<pos:position pos:line="470" pos:column="45"/></operator><name pos:line="470" pos:column="42">instance<pos:position pos:line="470" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="470" pos:column="52">"totals"<pos:position pos:line="470" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="470" pos:column="62">"total_bytes"<pos:position pos:line="470" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="471" pos:column="36">"resp_proto"<pos:position pos:line="471" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="471" pos:column="50">val<pos:position pos:line="471" pos:column="53"/></name></expr></argument>)<pos:position pos:line="471" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="471" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="472" pos:column="5">else <if pos:line="472" pos:column="10">if <condition pos:line="472" pos:column="13">(<expr><call><name pos:line="472" pos:column="14">strcmp<pos:position pos:line="472" pos:column="20"/></name><argument_list pos:line="472" pos:column="20">(<argument><expr><name pos:line="472" pos:column="21">name<pos:position pos:line="472" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="472" pos:column="27">"s_pipe_hdrbytes"<pos:position pos:line="472" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="472" pos:column="45"/></argument_list></call> <operator pos:line="472" pos:column="46">==<pos:position pos:line="472" pos:column="48"/></operator> <literal type="number" pos:line="472" pos:column="49">0<pos:position pos:line="472" pos:column="50"/></literal></expr>)<pos:position pos:line="472" pos:column="51"/></condition><then pos:line="472" pos:column="51">
      <block type="pseudo"><return pos:line="473" pos:column="7">return <expr><call><name pos:line="473" pos:column="14">varnish_submit_derive<pos:position pos:line="473" pos:column="35"/></name><argument_list pos:line="473" pos:column="35">(<argument><expr><name><name pos:line="473" pos:column="36">conf<pos:position pos:line="473" pos:column="40"/></name><operator pos:line="473" pos:column="40">-&gt;<pos:position pos:line="473" pos:column="45"/></operator><name pos:line="473" pos:column="42">instance<pos:position pos:line="473" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="473" pos:column="52">"totals"<pos:position pos:line="473" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="473" pos:column="62">"total_bytes"<pos:position pos:line="473" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="474" pos:column="36">"pipe_header"<pos:position pos:line="474" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="474" pos:column="51">val<pos:position pos:line="474" pos:column="54"/></name></expr></argument>)<pos:position pos:line="474" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="474" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="475" pos:column="5">else <if pos:line="475" pos:column="10">if <condition pos:line="475" pos:column="13">(<expr><call><name pos:line="475" pos:column="14">strcmp<pos:position pos:line="475" pos:column="20"/></name><argument_list pos:line="475" pos:column="20">(<argument><expr><name pos:line="475" pos:column="21">name<pos:position pos:line="475" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="475" pos:column="27">"s_pipe_in"<pos:position pos:line="475" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="475" pos:column="39"/></argument_list></call> <operator pos:line="475" pos:column="40">==<pos:position pos:line="475" pos:column="42"/></operator> <literal type="number" pos:line="475" pos:column="43">0<pos:position pos:line="475" pos:column="44"/></literal></expr>)<pos:position pos:line="475" pos:column="45"/></condition><then pos:line="475" pos:column="45">
      <block type="pseudo"><return pos:line="476" pos:column="7">return <expr><call><name pos:line="476" pos:column="14">varnish_submit_derive<pos:position pos:line="476" pos:column="35"/></name><argument_list pos:line="476" pos:column="35">(<argument><expr><name><name pos:line="476" pos:column="36">conf<pos:position pos:line="476" pos:column="40"/></name><operator pos:line="476" pos:column="40">-&gt;<pos:position pos:line="476" pos:column="45"/></operator><name pos:line="476" pos:column="42">instance<pos:position pos:line="476" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="476" pos:column="52">"totals"<pos:position pos:line="476" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="476" pos:column="62">"total_bytes"<pos:position pos:line="476" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="477" pos:column="36">"pipe_in"<pos:position pos:line="477" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="477" pos:column="47">val<pos:position pos:line="477" pos:column="50"/></name></expr></argument>)<pos:position pos:line="477" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="477" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="478" pos:column="5">else <if pos:line="478" pos:column="10">if <condition pos:line="478" pos:column="13">(<expr><call><name pos:line="478" pos:column="14">strcmp<pos:position pos:line="478" pos:column="20"/></name><argument_list pos:line="478" pos:column="20">(<argument><expr><name pos:line="478" pos:column="21">name<pos:position pos:line="478" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="478" pos:column="27">"s_pipe_out"<pos:position pos:line="478" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="478" pos:column="40"/></argument_list></call> <operator pos:line="478" pos:column="41">==<pos:position pos:line="478" pos:column="43"/></operator> <literal type="number" pos:line="478" pos:column="44">0<pos:position pos:line="478" pos:column="45"/></literal></expr>)<pos:position pos:line="478" pos:column="46"/></condition><then pos:line="478" pos:column="46">
      <block type="pseudo"><return pos:line="479" pos:column="7">return <expr><call><name pos:line="479" pos:column="14">varnish_submit_derive<pos:position pos:line="479" pos:column="35"/></name><argument_list pos:line="479" pos:column="35">(<argument><expr><name><name pos:line="479" pos:column="36">conf<pos:position pos:line="479" pos:column="40"/></name><operator pos:line="479" pos:column="40">-&gt;<pos:position pos:line="479" pos:column="45"/></operator><name pos:line="479" pos:column="42">instance<pos:position pos:line="479" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="479" pos:column="52">"totals"<pos:position pos:line="479" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="479" pos:column="62">"total_bytes"<pos:position pos:line="479" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="480" pos:column="36">"pipe_out"<pos:position pos:line="480" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="480" pos:column="48">val<pos:position pos:line="480" pos:column="51"/></name></expr></argument>)<pos:position pos:line="480" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="480" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="481" pos:column="5">else <if pos:line="481" pos:column="10">if <condition pos:line="481" pos:column="13">(<expr><call><name pos:line="481" pos:column="14">strcmp<pos:position pos:line="481" pos:column="20"/></name><argument_list pos:line="481" pos:column="20">(<argument><expr><name pos:line="481" pos:column="21">name<pos:position pos:line="481" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="481" pos:column="27">"n_purges"<pos:position pos:line="481" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="481" pos:column="38"/></argument_list></call> <operator pos:line="481" pos:column="39">==<pos:position pos:line="481" pos:column="41"/></operator> <literal type="number" pos:line="481" pos:column="42">0<pos:position pos:line="481" pos:column="43"/></literal></expr>)<pos:position pos:line="481" pos:column="44"/></condition><then pos:line="481" pos:column="44">
      <block type="pseudo"><return pos:line="482" pos:column="7">return <expr><call><name pos:line="482" pos:column="14">varnish_submit_derive<pos:position pos:line="482" pos:column="35"/></name><argument_list pos:line="482" pos:column="35">(<argument><expr><name><name pos:line="482" pos:column="36">conf<pos:position pos:line="482" pos:column="40"/></name><operator pos:line="482" pos:column="40">-&gt;<pos:position pos:line="482" pos:column="45"/></operator><name pos:line="482" pos:column="42">instance<pos:position pos:line="482" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="482" pos:column="52">"totals"<pos:position pos:line="482" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="482" pos:column="62">"total_operations"<pos:position pos:line="482" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="483" pos:column="36">"purges"<pos:position pos:line="483" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="483" pos:column="46">val<pos:position pos:line="483" pos:column="49"/></name></expr></argument>)<pos:position pos:line="483" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="483" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="484" pos:column="5">else <if pos:line="484" pos:column="10">if <condition pos:line="484" pos:column="13">(<expr><call><name pos:line="484" pos:column="14">strcmp<pos:position pos:line="484" pos:column="20"/></name><argument_list pos:line="484" pos:column="20">(<argument><expr><name pos:line="484" pos:column="21">name<pos:position pos:line="484" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="484" pos:column="27">"s_hdrbytes"<pos:position pos:line="484" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="484" pos:column="40"/></argument_list></call> <operator pos:line="484" pos:column="41">==<pos:position pos:line="484" pos:column="43"/></operator> <literal type="number" pos:line="484" pos:column="44">0<pos:position pos:line="484" pos:column="45"/></literal></expr>)<pos:position pos:line="484" pos:column="46"/></condition><then pos:line="484" pos:column="46">
      <block type="pseudo"><return pos:line="485" pos:column="7">return <expr><call><name pos:line="485" pos:column="14">varnish_submit_derive<pos:position pos:line="485" pos:column="35"/></name><argument_list pos:line="485" pos:column="35">(<argument><expr><name><name pos:line="485" pos:column="36">conf<pos:position pos:line="485" pos:column="40"/></name><operator pos:line="485" pos:column="40">-&gt;<pos:position pos:line="485" pos:column="45"/></operator><name pos:line="485" pos:column="42">instance<pos:position pos:line="485" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="485" pos:column="52">"totals"<pos:position pos:line="485" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="485" pos:column="62">"total_bytes"<pos:position pos:line="485" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="486" pos:column="36">"header-bytes"<pos:position pos:line="486" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="486" pos:column="52">val<pos:position pos:line="486" pos:column="55"/></name></expr></argument>)<pos:position pos:line="486" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="486" pos:column="57"/></return></block></then></if></elseif>
    <elseif pos:line="487" pos:column="5">else <if pos:line="487" pos:column="10">if <condition pos:line="487" pos:column="13">(<expr><call><name pos:line="487" pos:column="14">strcmp<pos:position pos:line="487" pos:column="20"/></name><argument_list pos:line="487" pos:column="20">(<argument><expr><name pos:line="487" pos:column="21">name<pos:position pos:line="487" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="487" pos:column="27">"s_bodybytes"<pos:position pos:line="487" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="487" pos:column="41"/></argument_list></call> <operator pos:line="487" pos:column="42">==<pos:position pos:line="487" pos:column="44"/></operator> <literal type="number" pos:line="487" pos:column="45">0<pos:position pos:line="487" pos:column="46"/></literal></expr>)<pos:position pos:line="487" pos:column="47"/></condition><then pos:line="487" pos:column="47">
      <block type="pseudo"><return pos:line="488" pos:column="7">return <expr><call><name pos:line="488" pos:column="14">varnish_submit_derive<pos:position pos:line="488" pos:column="35"/></name><argument_list pos:line="488" pos:column="35">(<argument><expr><name><name pos:line="488" pos:column="36">conf<pos:position pos:line="488" pos:column="40"/></name><operator pos:line="488" pos:column="40">-&gt;<pos:position pos:line="488" pos:column="45"/></operator><name pos:line="488" pos:column="42">instance<pos:position pos:line="488" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="488" pos:column="52">"totals"<pos:position pos:line="488" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="488" pos:column="62">"total_bytes"<pos:position pos:line="488" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="489" pos:column="36">"body-bytes"<pos:position pos:line="489" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="489" pos:column="50">val<pos:position pos:line="489" pos:column="53"/></name></expr></argument>)<pos:position pos:line="489" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="489" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="490" pos:column="5">else <if pos:line="490" pos:column="10">if <condition pos:line="490" pos:column="13">(<expr><call><name pos:line="490" pos:column="14">strcmp<pos:position pos:line="490" pos:column="20"/></name><argument_list pos:line="490" pos:column="20">(<argument><expr><name pos:line="490" pos:column="21">name<pos:position pos:line="490" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="490" pos:column="27">"n_gzip"<pos:position pos:line="490" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="490" pos:column="36"/></argument_list></call> <operator pos:line="490" pos:column="37">==<pos:position pos:line="490" pos:column="39"/></operator> <literal type="number" pos:line="490" pos:column="40">0<pos:position pos:line="490" pos:column="41"/></literal></expr>)<pos:position pos:line="490" pos:column="42"/></condition><then pos:line="490" pos:column="42">
      <block type="pseudo"><return pos:line="491" pos:column="7">return <expr><call><name pos:line="491" pos:column="14">varnish_submit_derive<pos:position pos:line="491" pos:column="35"/></name><argument_list pos:line="491" pos:column="35">(<argument><expr><name><name pos:line="491" pos:column="36">conf<pos:position pos:line="491" pos:column="40"/></name><operator pos:line="491" pos:column="40">-&gt;<pos:position pos:line="491" pos:column="45"/></operator><name pos:line="491" pos:column="42">instance<pos:position pos:line="491" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="491" pos:column="52">"totals"<pos:position pos:line="491" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="491" pos:column="62">"total_operations"<pos:position pos:line="491" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="492" pos:column="36">"gzip"<pos:position pos:line="492" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="492" pos:column="44">val<pos:position pos:line="492" pos:column="47"/></name></expr></argument>)<pos:position pos:line="492" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="492" pos:column="49"/></return></block></then></if></elseif>
    <elseif pos:line="493" pos:column="5">else <if pos:line="493" pos:column="10">if <condition pos:line="493" pos:column="13">(<expr><call><name pos:line="493" pos:column="14">strcmp<pos:position pos:line="493" pos:column="20"/></name><argument_list pos:line="493" pos:column="20">(<argument><expr><name pos:line="493" pos:column="21">name<pos:position pos:line="493" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="493" pos:column="27">"n_gunzip"<pos:position pos:line="493" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="493" pos:column="38"/></argument_list></call> <operator pos:line="493" pos:column="39">==<pos:position pos:line="493" pos:column="41"/></operator> <literal type="number" pos:line="493" pos:column="42">0<pos:position pos:line="493" pos:column="43"/></literal></expr>)<pos:position pos:line="493" pos:column="44"/></condition><then pos:line="493" pos:column="44">
      <block type="pseudo"><return pos:line="494" pos:column="7">return <expr><call><name pos:line="494" pos:column="14">varnish_submit_derive<pos:position pos:line="494" pos:column="35"/></name><argument_list pos:line="494" pos:column="35">(<argument><expr><name><name pos:line="494" pos:column="36">conf<pos:position pos:line="494" pos:column="40"/></name><operator pos:line="494" pos:column="40">-&gt;<pos:position pos:line="494" pos:column="45"/></operator><name pos:line="494" pos:column="42">instance<pos:position pos:line="494" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="494" pos:column="52">"totals"<pos:position pos:line="494" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="494" pos:column="62">"total_operations"<pos:position pos:line="494" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="495" pos:column="36">"gunzip"<pos:position pos:line="495" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="495" pos:column="46">val<pos:position pos:line="495" pos:column="49"/></name></expr></argument>)<pos:position pos:line="495" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="495" pos:column="51"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="496" pos:column="4"/></block></then></if>

  <if pos:line="498" pos:column="3">if <condition pos:line="498" pos:column="6">(<expr><name><name pos:line="498" pos:column="7">conf<pos:position pos:line="498" pos:column="11"/></name><operator pos:line="498" pos:column="11">-&gt;<pos:position pos:line="498" pos:column="16"/></operator><name pos:line="498" pos:column="13">collect_uptime<pos:position pos:line="498" pos:column="27"/></name></name></expr>)<pos:position pos:line="498" pos:column="28"/></condition><then pos:line="498" pos:column="28"> <block pos:line="498" pos:column="29">{
    <if pos:line="499" pos:column="5">if <condition pos:line="499" pos:column="8">(<expr><call><name pos:line="499" pos:column="9">strcmp<pos:position pos:line="499" pos:column="15"/></name><argument_list pos:line="499" pos:column="15">(<argument><expr><name pos:line="499" pos:column="16">name<pos:position pos:line="499" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="499" pos:column="22">"uptime"<pos:position pos:line="499" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="499" pos:column="31"/></argument_list></call> <operator pos:line="499" pos:column="32">==<pos:position pos:line="499" pos:column="34"/></operator> <literal type="number" pos:line="499" pos:column="35">0<pos:position pos:line="499" pos:column="36"/></literal></expr>)<pos:position pos:line="499" pos:column="37"/></condition><then pos:line="499" pos:column="37">
      <block type="pseudo"><return pos:line="500" pos:column="7">return <expr><call><name pos:line="500" pos:column="14">varnish_submit_gauge<pos:position pos:line="500" pos:column="34"/></name><argument_list pos:line="500" pos:column="34">(<argument><expr><name><name pos:line="500" pos:column="35">conf<pos:position pos:line="500" pos:column="39"/></name><operator pos:line="500" pos:column="39">-&gt;<pos:position pos:line="500" pos:column="44"/></operator><name pos:line="500" pos:column="41">instance<pos:position pos:line="500" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="500" pos:column="51">"uptime"<pos:position pos:line="500" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="500" pos:column="61">"uptime"<pos:position pos:line="500" pos:column="69"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="501" pos:column="35">"client_uptime"<pos:position pos:line="501" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="501" pos:column="52">val<pos:position pos:line="501" pos:column="55"/></name></expr></argument>)<pos:position pos:line="501" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="501" pos:column="57"/></return></block></then></if>
  }<pos:position pos:line="502" pos:column="4"/></block></then></if>

  <if pos:line="504" pos:column="3">if <condition pos:line="504" pos:column="6">(<expr><name><name pos:line="504" pos:column="7">conf<pos:position pos:line="504" pos:column="11"/></name><operator pos:line="504" pos:column="11">-&gt;<pos:position pos:line="504" pos:column="16"/></operator><name pos:line="504" pos:column="13">collect_vcl<pos:position pos:line="504" pos:column="24"/></name></name></expr>)<pos:position pos:line="504" pos:column="25"/></condition><then pos:line="504" pos:column="25"> <block pos:line="504" pos:column="26">{
    <if pos:line="505" pos:column="5">if <condition pos:line="505" pos:column="8">(<expr><call><name pos:line="505" pos:column="9">strcmp<pos:position pos:line="505" pos:column="15"/></name><argument_list pos:line="505" pos:column="15">(<argument><expr><name pos:line="505" pos:column="16">name<pos:position pos:line="505" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="505" pos:column="22">"n_vcl"<pos:position pos:line="505" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="505" pos:column="30"/></argument_list></call> <operator pos:line="505" pos:column="31">==<pos:position pos:line="505" pos:column="33"/></operator> <literal type="number" pos:line="505" pos:column="34">0<pos:position pos:line="505" pos:column="35"/></literal></expr>)<pos:position pos:line="505" pos:column="36"/></condition><then pos:line="505" pos:column="36">
      <block type="pseudo"><return pos:line="506" pos:column="7">return <expr><call><name pos:line="506" pos:column="14">varnish_submit_gauge<pos:position pos:line="506" pos:column="34"/></name><argument_list pos:line="506" pos:column="34">(<argument><expr><name><name pos:line="506" pos:column="35">conf<pos:position pos:line="506" pos:column="39"/></name><operator pos:line="506" pos:column="39">-&gt;<pos:position pos:line="506" pos:column="44"/></operator><name pos:line="506" pos:column="41">instance<pos:position pos:line="506" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="506" pos:column="51">"vcl"<pos:position pos:line="506" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="506" pos:column="58">"vcl"<pos:position pos:line="506" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="506" pos:column="65">"total_vcl"<pos:position pos:line="506" pos:column="76"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="507" pos:column="35">val<pos:position pos:line="507" pos:column="38"/></name></expr></argument>)<pos:position pos:line="507" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="507" pos:column="40"/></return></block></then>
    <elseif pos:line="508" pos:column="5">else <if pos:line="508" pos:column="10">if <condition pos:line="508" pos:column="13">(<expr><call><name pos:line="508" pos:column="14">strcmp<pos:position pos:line="508" pos:column="20"/></name><argument_list pos:line="508" pos:column="20">(<argument><expr><name pos:line="508" pos:column="21">name<pos:position pos:line="508" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="508" pos:column="27">"n_vcl_avail"<pos:position pos:line="508" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="508" pos:column="41"/></argument_list></call> <operator pos:line="508" pos:column="42">==<pos:position pos:line="508" pos:column="44"/></operator> <literal type="number" pos:line="508" pos:column="45">0<pos:position pos:line="508" pos:column="46"/></literal></expr>)<pos:position pos:line="508" pos:column="47"/></condition><then pos:line="508" pos:column="47">
      <block type="pseudo"><return pos:line="509" pos:column="7">return <expr><call><name pos:line="509" pos:column="14">varnish_submit_gauge<pos:position pos:line="509" pos:column="34"/></name><argument_list pos:line="509" pos:column="34">(<argument><expr><name><name pos:line="509" pos:column="35">conf<pos:position pos:line="509" pos:column="39"/></name><operator pos:line="509" pos:column="39">-&gt;<pos:position pos:line="509" pos:column="44"/></operator><name pos:line="509" pos:column="41">instance<pos:position pos:line="509" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="509" pos:column="51">"vcl"<pos:position pos:line="509" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="509" pos:column="58">"vcl"<pos:position pos:line="509" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="509" pos:column="65">"avail_vcl"<pos:position pos:line="509" pos:column="76"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="510" pos:column="35">val<pos:position pos:line="510" pos:column="38"/></name></expr></argument>)<pos:position pos:line="510" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="510" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="511" pos:column="5">else <if pos:line="511" pos:column="10">if <condition pos:line="511" pos:column="13">(<expr><call><name pos:line="511" pos:column="14">strcmp<pos:position pos:line="511" pos:column="20"/></name><argument_list pos:line="511" pos:column="20">(<argument><expr><name pos:line="511" pos:column="21">name<pos:position pos:line="511" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="511" pos:column="27">"n_vcl_discard"<pos:position pos:line="511" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="511" pos:column="43"/></argument_list></call> <operator pos:line="511" pos:column="44">==<pos:position pos:line="511" pos:column="46"/></operator> <literal type="number" pos:line="511" pos:column="47">0<pos:position pos:line="511" pos:column="48"/></literal></expr>)<pos:position pos:line="511" pos:column="49"/></condition><then pos:line="511" pos:column="49">
      <block type="pseudo"><return pos:line="512" pos:column="7">return <expr><call><name pos:line="512" pos:column="14">varnish_submit_gauge<pos:position pos:line="512" pos:column="34"/></name><argument_list pos:line="512" pos:column="34">(<argument><expr><name><name pos:line="512" pos:column="35">conf<pos:position pos:line="512" pos:column="39"/></name><operator pos:line="512" pos:column="39">-&gt;<pos:position pos:line="512" pos:column="44"/></operator><name pos:line="512" pos:column="41">instance<pos:position pos:line="512" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="512" pos:column="51">"vcl"<pos:position pos:line="512" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="512" pos:column="58">"vcl"<pos:position pos:line="512" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="512" pos:column="65">"discarded_vcl"<pos:position pos:line="512" pos:column="80"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="513" pos:column="35">val<pos:position pos:line="513" pos:column="38"/></name></expr></argument>)<pos:position pos:line="513" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="514" pos:column="5">else <if pos:line="514" pos:column="10">if <condition pos:line="514" pos:column="13">(<expr><call><name pos:line="514" pos:column="14">strcmp<pos:position pos:line="514" pos:column="20"/></name><argument_list pos:line="514" pos:column="20">(<argument><expr><name pos:line="514" pos:column="21">name<pos:position pos:line="514" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="514" pos:column="27">"vmods"<pos:position pos:line="514" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="514" pos:column="35"/></argument_list></call> <operator pos:line="514" pos:column="36">==<pos:position pos:line="514" pos:column="38"/></operator> <literal type="number" pos:line="514" pos:column="39">0<pos:position pos:line="514" pos:column="40"/></literal></expr>)<pos:position pos:line="514" pos:column="41"/></condition><then pos:line="514" pos:column="41">
      <block type="pseudo"><return pos:line="515" pos:column="7">return <expr><call><name pos:line="515" pos:column="14">varnish_submit_gauge<pos:position pos:line="515" pos:column="34"/></name><argument_list pos:line="515" pos:column="34">(<argument><expr><name><name pos:line="515" pos:column="35">conf<pos:position pos:line="515" pos:column="39"/></name><operator pos:line="515" pos:column="39">-&gt;<pos:position pos:line="515" pos:column="44"/></operator><name pos:line="515" pos:column="41">instance<pos:position pos:line="515" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="515" pos:column="51">"vcl"<pos:position pos:line="515" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="515" pos:column="58">"objects"<pos:position pos:line="515" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="515" pos:column="69">"vmod"<pos:position pos:line="515" pos:column="75"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="516" pos:column="35">val<pos:position pos:line="516" pos:column="38"/></name></expr></argument>)<pos:position pos:line="516" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="516" pos:column="40"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="517" pos:column="4"/></block></then></if>

  <if pos:line="519" pos:column="3">if <condition pos:line="519" pos:column="6">(<expr><name><name pos:line="519" pos:column="7">conf<pos:position pos:line="519" pos:column="11"/></name><operator pos:line="519" pos:column="11">-&gt;<pos:position pos:line="519" pos:column="16"/></operator><name pos:line="519" pos:column="13">collect_workers<pos:position pos:line="519" pos:column="28"/></name></name></expr>)<pos:position pos:line="519" pos:column="29"/></condition><then pos:line="519" pos:column="29"> <block pos:line="519" pos:column="30">{
    <if pos:line="520" pos:column="5">if <condition pos:line="520" pos:column="8">(<expr><call><name pos:line="520" pos:column="9">strcmp<pos:position pos:line="520" pos:column="15"/></name><argument_list pos:line="520" pos:column="15">(<argument><expr><name pos:line="520" pos:column="16">name<pos:position pos:line="520" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="520" pos:column="22">"threads"<pos:position pos:line="520" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="520" pos:column="32"/></argument_list></call> <operator pos:line="520" pos:column="33">==<pos:position pos:line="520" pos:column="35"/></operator> <literal type="number" pos:line="520" pos:column="36">0<pos:position pos:line="520" pos:column="37"/></literal></expr>)<pos:position pos:line="520" pos:column="38"/></condition><then pos:line="520" pos:column="38">
      <block type="pseudo"><return pos:line="521" pos:column="7">return <expr><call><name pos:line="521" pos:column="14">varnish_submit_gauge<pos:position pos:line="521" pos:column="34"/></name><argument_list pos:line="521" pos:column="34">(<argument><expr><name><name pos:line="521" pos:column="35">conf<pos:position pos:line="521" pos:column="39"/></name><operator pos:line="521" pos:column="39">-&gt;<pos:position pos:line="521" pos:column="44"/></operator><name pos:line="521" pos:column="41">instance<pos:position pos:line="521" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="521" pos:column="51">"workers"<pos:position pos:line="521" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="521" pos:column="62">"threads"<pos:position pos:line="521" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="522" pos:column="35">"worker"<pos:position pos:line="522" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="522" pos:column="45">val<pos:position pos:line="522" pos:column="48"/></name></expr></argument>)<pos:position pos:line="522" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="522" pos:column="50"/></return></block></then>
    <elseif pos:line="523" pos:column="5">else <if pos:line="523" pos:column="10">if <condition pos:line="523" pos:column="13">(<expr><call><name pos:line="523" pos:column="14">strcmp<pos:position pos:line="523" pos:column="20"/></name><argument_list pos:line="523" pos:column="20">(<argument><expr><name pos:line="523" pos:column="21">name<pos:position pos:line="523" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="523" pos:column="27">"threads_created"<pos:position pos:line="523" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="523" pos:column="45"/></argument_list></call> <operator pos:line="523" pos:column="46">==<pos:position pos:line="523" pos:column="48"/></operator> <literal type="number" pos:line="523" pos:column="49">0<pos:position pos:line="523" pos:column="50"/></literal></expr>)<pos:position pos:line="523" pos:column="51"/></condition><then pos:line="523" pos:column="51">
      <block type="pseudo"><return pos:line="524" pos:column="7">return <expr><call><name pos:line="524" pos:column="14">varnish_submit_derive<pos:position pos:line="524" pos:column="35"/></name><argument_list pos:line="524" pos:column="35">(<argument><expr><name><name pos:line="524" pos:column="36">conf<pos:position pos:line="524" pos:column="40"/></name><operator pos:line="524" pos:column="40">-&gt;<pos:position pos:line="524" pos:column="45"/></operator><name pos:line="524" pos:column="42">instance<pos:position pos:line="524" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="524" pos:column="52">"workers"<pos:position pos:line="524" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="524" pos:column="63">"total_threads"<pos:position pos:line="524" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="525" pos:column="36">"created"<pos:position pos:line="525" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="525" pos:column="47">val<pos:position pos:line="525" pos:column="50"/></name></expr></argument>)<pos:position pos:line="525" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="525" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="526" pos:column="5">else <if pos:line="526" pos:column="10">if <condition pos:line="526" pos:column="13">(<expr><call><name pos:line="526" pos:column="14">strcmp<pos:position pos:line="526" pos:column="20"/></name><argument_list pos:line="526" pos:column="20">(<argument><expr><name pos:line="526" pos:column="21">name<pos:position pos:line="526" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="526" pos:column="27">"threads_failed"<pos:position pos:line="526" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="526" pos:column="44"/></argument_list></call> <operator pos:line="526" pos:column="45">==<pos:position pos:line="526" pos:column="47"/></operator> <literal type="number" pos:line="526" pos:column="48">0<pos:position pos:line="526" pos:column="49"/></literal></expr>)<pos:position pos:line="526" pos:column="50"/></condition><then pos:line="526" pos:column="50">
      <block type="pseudo"><return pos:line="527" pos:column="7">return <expr><call><name pos:line="527" pos:column="14">varnish_submit_derive<pos:position pos:line="527" pos:column="35"/></name><argument_list pos:line="527" pos:column="35">(<argument><expr><name><name pos:line="527" pos:column="36">conf<pos:position pos:line="527" pos:column="40"/></name><operator pos:line="527" pos:column="40">-&gt;<pos:position pos:line="527" pos:column="45"/></operator><name pos:line="527" pos:column="42">instance<pos:position pos:line="527" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="527" pos:column="52">"workers"<pos:position pos:line="527" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="527" pos:column="63">"total_threads"<pos:position pos:line="527" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="528" pos:column="36">"failed"<pos:position pos:line="528" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="528" pos:column="46">val<pos:position pos:line="528" pos:column="49"/></name></expr></argument>)<pos:position pos:line="528" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="528" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="529" pos:column="5">else <if pos:line="529" pos:column="10">if <condition pos:line="529" pos:column="13">(<expr><call><name pos:line="529" pos:column="14">strcmp<pos:position pos:line="529" pos:column="20"/></name><argument_list pos:line="529" pos:column="20">(<argument><expr><name pos:line="529" pos:column="21">name<pos:position pos:line="529" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="529" pos:column="27">"threads_limited"<pos:position pos:line="529" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="529" pos:column="45"/></argument_list></call> <operator pos:line="529" pos:column="46">==<pos:position pos:line="529" pos:column="48"/></operator> <literal type="number" pos:line="529" pos:column="49">0<pos:position pos:line="529" pos:column="50"/></literal></expr>)<pos:position pos:line="529" pos:column="51"/></condition><then pos:line="529" pos:column="51">
      <block type="pseudo"><return pos:line="530" pos:column="7">return <expr><call><name pos:line="530" pos:column="14">varnish_submit_derive<pos:position pos:line="530" pos:column="35"/></name><argument_list pos:line="530" pos:column="35">(<argument><expr><name><name pos:line="530" pos:column="36">conf<pos:position pos:line="530" pos:column="40"/></name><operator pos:line="530" pos:column="40">-&gt;<pos:position pos:line="530" pos:column="45"/></operator><name pos:line="530" pos:column="42">instance<pos:position pos:line="530" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="530" pos:column="52">"workers"<pos:position pos:line="530" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="530" pos:column="63">"total_threads"<pos:position pos:line="530" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="531" pos:column="36">"limited"<pos:position pos:line="531" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="531" pos:column="47">val<pos:position pos:line="531" pos:column="50"/></name></expr></argument>)<pos:position pos:line="531" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="531" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="532" pos:column="5">else <if pos:line="532" pos:column="10">if <condition pos:line="532" pos:column="13">(<expr><call><name pos:line="532" pos:column="14">strcmp<pos:position pos:line="532" pos:column="20"/></name><argument_list pos:line="532" pos:column="20">(<argument><expr><name pos:line="532" pos:column="21">name<pos:position pos:line="532" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="532" pos:column="27">"threads_destroyed"<pos:position pos:line="532" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="532" pos:column="47"/></argument_list></call> <operator pos:line="532" pos:column="48">==<pos:position pos:line="532" pos:column="50"/></operator> <literal type="number" pos:line="532" pos:column="51">0<pos:position pos:line="532" pos:column="52"/></literal></expr>)<pos:position pos:line="532" pos:column="53"/></condition><then pos:line="532" pos:column="53">
      <block type="pseudo"><return pos:line="533" pos:column="7">return <expr><call><name pos:line="533" pos:column="14">varnish_submit_derive<pos:position pos:line="533" pos:column="35"/></name><argument_list pos:line="533" pos:column="35">(<argument><expr><name><name pos:line="533" pos:column="36">conf<pos:position pos:line="533" pos:column="40"/></name><operator pos:line="533" pos:column="40">-&gt;<pos:position pos:line="533" pos:column="45"/></operator><name pos:line="533" pos:column="42">instance<pos:position pos:line="533" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="533" pos:column="52">"workers"<pos:position pos:line="533" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="533" pos:column="63">"total_threads"<pos:position pos:line="533" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="534" pos:column="36">"dropped"<pos:position pos:line="534" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="534" pos:column="47">val<pos:position pos:line="534" pos:column="50"/></name></expr></argument>)<pos:position pos:line="534" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="535" pos:column="5">else <if pos:line="535" pos:column="10">if <condition pos:line="535" pos:column="13">(<expr><call><name pos:line="535" pos:column="14">strcmp<pos:position pos:line="535" pos:column="20"/></name><argument_list pos:line="535" pos:column="20">(<argument><expr><name pos:line="535" pos:column="21">name<pos:position pos:line="535" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="535" pos:column="27">"thread_queue_len"<pos:position pos:line="535" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="535" pos:column="46"/></argument_list></call> <operator pos:line="535" pos:column="47">==<pos:position pos:line="535" pos:column="49"/></operator> <literal type="number" pos:line="535" pos:column="50">0<pos:position pos:line="535" pos:column="51"/></literal></expr>)<pos:position pos:line="535" pos:column="52"/></condition><then pos:line="535" pos:column="52">
      <block type="pseudo"><return pos:line="536" pos:column="7">return <expr><call><name pos:line="536" pos:column="14">varnish_submit_gauge<pos:position pos:line="536" pos:column="34"/></name><argument_list pos:line="536" pos:column="34">(<argument><expr><name><name pos:line="536" pos:column="35">conf<pos:position pos:line="536" pos:column="39"/></name><operator pos:line="536" pos:column="39">-&gt;<pos:position pos:line="536" pos:column="44"/></operator><name pos:line="536" pos:column="41">instance<pos:position pos:line="536" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="536" pos:column="51">"workers"<pos:position pos:line="536" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="536" pos:column="62">"queue_length"<pos:position pos:line="536" pos:column="76"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="537" pos:column="35">"threads"<pos:position pos:line="537" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="537" pos:column="46">val<pos:position pos:line="537" pos:column="49"/></name></expr></argument>)<pos:position pos:line="537" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="537" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="538" pos:column="5">else <if pos:line="538" pos:column="10">if <condition pos:line="538" pos:column="13">(<expr><call><name pos:line="538" pos:column="14">strcmp<pos:position pos:line="538" pos:column="20"/></name><argument_list pos:line="538" pos:column="20">(<argument><expr><name pos:line="538" pos:column="21">name<pos:position pos:line="538" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="538" pos:column="27">"n_wrk"<pos:position pos:line="538" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="538" pos:column="35"/></argument_list></call> <operator pos:line="538" pos:column="36">==<pos:position pos:line="538" pos:column="38"/></operator> <literal type="number" pos:line="538" pos:column="39">0<pos:position pos:line="538" pos:column="40"/></literal></expr>)<pos:position pos:line="538" pos:column="41"/></condition><then pos:line="538" pos:column="41">
      <block type="pseudo"><return pos:line="539" pos:column="7">return <expr><call><name pos:line="539" pos:column="14">varnish_submit_gauge<pos:position pos:line="539" pos:column="34"/></name><argument_list pos:line="539" pos:column="34">(<argument><expr><name><name pos:line="539" pos:column="35">conf<pos:position pos:line="539" pos:column="39"/></name><operator pos:line="539" pos:column="39">-&gt;<pos:position pos:line="539" pos:column="44"/></operator><name pos:line="539" pos:column="41">instance<pos:position pos:line="539" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="539" pos:column="51">"workers"<pos:position pos:line="539" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="539" pos:column="62">"threads"<pos:position pos:line="539" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="540" pos:column="35">"worker"<pos:position pos:line="540" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="540" pos:column="45">val<pos:position pos:line="540" pos:column="48"/></name></expr></argument>)<pos:position pos:line="540" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="540" pos:column="50"/></return></block></then></if></elseif>
    <elseif pos:line="541" pos:column="5">else <if pos:line="541" pos:column="10">if <condition pos:line="541" pos:column="13">(<expr><call><name pos:line="541" pos:column="14">strcmp<pos:position pos:line="541" pos:column="20"/></name><argument_list pos:line="541" pos:column="20">(<argument><expr><name pos:line="541" pos:column="21">name<pos:position pos:line="541" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="541" pos:column="27">"n_wrk_create"<pos:position pos:line="541" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="541" pos:column="42"/></argument_list></call> <operator pos:line="541" pos:column="43">==<pos:position pos:line="541" pos:column="45"/></operator> <literal type="number" pos:line="541" pos:column="46">0<pos:position pos:line="541" pos:column="47"/></literal></expr>)<pos:position pos:line="541" pos:column="48"/></condition><then pos:line="541" pos:column="48">
      <block type="pseudo"><return pos:line="542" pos:column="7">return <expr><call><name pos:line="542" pos:column="14">varnish_submit_derive<pos:position pos:line="542" pos:column="35"/></name><argument_list pos:line="542" pos:column="35">(<argument><expr><name><name pos:line="542" pos:column="36">conf<pos:position pos:line="542" pos:column="40"/></name><operator pos:line="542" pos:column="40">-&gt;<pos:position pos:line="542" pos:column="45"/></operator><name pos:line="542" pos:column="42">instance<pos:position pos:line="542" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="542" pos:column="52">"workers"<pos:position pos:line="542" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="542" pos:column="63">"total_threads"<pos:position pos:line="542" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="543" pos:column="36">"created"<pos:position pos:line="543" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="543" pos:column="47">val<pos:position pos:line="543" pos:column="50"/></name></expr></argument>)<pos:position pos:line="543" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="543" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="544" pos:column="5">else <if pos:line="544" pos:column="10">if <condition pos:line="544" pos:column="13">(<expr><call><name pos:line="544" pos:column="14">strcmp<pos:position pos:line="544" pos:column="20"/></name><argument_list pos:line="544" pos:column="20">(<argument><expr><name pos:line="544" pos:column="21">name<pos:position pos:line="544" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="544" pos:column="27">"n_wrk_failed"<pos:position pos:line="544" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="544" pos:column="42"/></argument_list></call> <operator pos:line="544" pos:column="43">==<pos:position pos:line="544" pos:column="45"/></operator> <literal type="number" pos:line="544" pos:column="46">0<pos:position pos:line="544" pos:column="47"/></literal></expr>)<pos:position pos:line="544" pos:column="48"/></condition><then pos:line="544" pos:column="48">
      <block type="pseudo"><return pos:line="545" pos:column="7">return <expr><call><name pos:line="545" pos:column="14">varnish_submit_derive<pos:position pos:line="545" pos:column="35"/></name><argument_list pos:line="545" pos:column="35">(<argument><expr><name><name pos:line="545" pos:column="36">conf<pos:position pos:line="545" pos:column="40"/></name><operator pos:line="545" pos:column="40">-&gt;<pos:position pos:line="545" pos:column="45"/></operator><name pos:line="545" pos:column="42">instance<pos:position pos:line="545" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="545" pos:column="52">"workers"<pos:position pos:line="545" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="545" pos:column="63">"total_threads"<pos:position pos:line="545" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="546" pos:column="36">"failed"<pos:position pos:line="546" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="546" pos:column="46">val<pos:position pos:line="546" pos:column="49"/></name></expr></argument>)<pos:position pos:line="546" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="546" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="547" pos:column="5">else <if pos:line="547" pos:column="10">if <condition pos:line="547" pos:column="13">(<expr><call><name pos:line="547" pos:column="14">strcmp<pos:position pos:line="547" pos:column="20"/></name><argument_list pos:line="547" pos:column="20">(<argument><expr><name pos:line="547" pos:column="21">name<pos:position pos:line="547" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="547" pos:column="27">"n_wrk_max"<pos:position pos:line="547" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="547" pos:column="39"/></argument_list></call> <operator pos:line="547" pos:column="40">==<pos:position pos:line="547" pos:column="42"/></operator> <literal type="number" pos:line="547" pos:column="43">0<pos:position pos:line="547" pos:column="44"/></literal></expr>)<pos:position pos:line="547" pos:column="45"/></condition><then pos:line="547" pos:column="45">
      <block type="pseudo"><return pos:line="548" pos:column="7">return <expr><call><name pos:line="548" pos:column="14">varnish_submit_derive<pos:position pos:line="548" pos:column="35"/></name><argument_list pos:line="548" pos:column="35">(<argument><expr><name><name pos:line="548" pos:column="36">conf<pos:position pos:line="548" pos:column="40"/></name><operator pos:line="548" pos:column="40">-&gt;<pos:position pos:line="548" pos:column="45"/></operator><name pos:line="548" pos:column="42">instance<pos:position pos:line="548" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="548" pos:column="52">"workers"<pos:position pos:line="548" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="548" pos:column="63">"total_threads"<pos:position pos:line="548" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="549" pos:column="36">"limited"<pos:position pos:line="549" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="549" pos:column="47">val<pos:position pos:line="549" pos:column="50"/></name></expr></argument>)<pos:position pos:line="549" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="550" pos:column="5">else <if pos:line="550" pos:column="10">if <condition pos:line="550" pos:column="13">(<expr><call><name pos:line="550" pos:column="14">strcmp<pos:position pos:line="550" pos:column="20"/></name><argument_list pos:line="550" pos:column="20">(<argument><expr><name pos:line="550" pos:column="21">name<pos:position pos:line="550" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="550" pos:column="27">"n_wrk_drop"<pos:position pos:line="550" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="550" pos:column="40"/></argument_list></call> <operator pos:line="550" pos:column="41">==<pos:position pos:line="550" pos:column="43"/></operator> <literal type="number" pos:line="550" pos:column="44">0<pos:position pos:line="550" pos:column="45"/></literal></expr>)<pos:position pos:line="550" pos:column="46"/></condition><then pos:line="550" pos:column="46">
      <block type="pseudo"><return pos:line="551" pos:column="7">return <expr><call><name pos:line="551" pos:column="14">varnish_submit_derive<pos:position pos:line="551" pos:column="35"/></name><argument_list pos:line="551" pos:column="35">(<argument><expr><name><name pos:line="551" pos:column="36">conf<pos:position pos:line="551" pos:column="40"/></name><operator pos:line="551" pos:column="40">-&gt;<pos:position pos:line="551" pos:column="45"/></operator><name pos:line="551" pos:column="42">instance<pos:position pos:line="551" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="551" pos:column="52">"workers"<pos:position pos:line="551" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="551" pos:column="63">"total_threads"<pos:position pos:line="551" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="552" pos:column="36">"dropped"<pos:position pos:line="552" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="552" pos:column="47">val<pos:position pos:line="552" pos:column="50"/></name></expr></argument>)<pos:position pos:line="552" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="552" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="553" pos:column="5">else <if pos:line="553" pos:column="10">if <condition pos:line="553" pos:column="13">(<expr><call><name pos:line="553" pos:column="14">strcmp<pos:position pos:line="553" pos:column="20"/></name><argument_list pos:line="553" pos:column="20">(<argument><expr><name pos:line="553" pos:column="21">name<pos:position pos:line="553" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="553" pos:column="27">"n_wrk_queue"<pos:position pos:line="553" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="553" pos:column="41"/></argument_list></call> <operator pos:line="553" pos:column="42">==<pos:position pos:line="553" pos:column="44"/></operator> <literal type="number" pos:line="553" pos:column="45">0<pos:position pos:line="553" pos:column="46"/></literal></expr>)<pos:position pos:line="553" pos:column="47"/></condition><then pos:line="553" pos:column="47">
      <block type="pseudo"><return pos:line="554" pos:column="7">return <expr><call><name pos:line="554" pos:column="14">varnish_submit_derive<pos:position pos:line="554" pos:column="35"/></name><argument_list pos:line="554" pos:column="35">(<argument><expr><name><name pos:line="554" pos:column="36">conf<pos:position pos:line="554" pos:column="40"/></name><operator pos:line="554" pos:column="40">-&gt;<pos:position pos:line="554" pos:column="45"/></operator><name pos:line="554" pos:column="42">instance<pos:position pos:line="554" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="554" pos:column="52">"workers"<pos:position pos:line="554" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="554" pos:column="63">"total_requests"<pos:position pos:line="554" pos:column="79"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="555" pos:column="36">"queued"<pos:position pos:line="555" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="555" pos:column="46">val<pos:position pos:line="555" pos:column="49"/></name></expr></argument>)<pos:position pos:line="555" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="555" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="556" pos:column="5">else <if pos:line="556" pos:column="10">if <condition pos:line="556" pos:column="13">(<expr><call><name pos:line="556" pos:column="14">strcmp<pos:position pos:line="556" pos:column="20"/></name><argument_list pos:line="556" pos:column="20">(<argument><expr><name pos:line="556" pos:column="21">name<pos:position pos:line="556" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="556" pos:column="27">"n_wrk_overflow"<pos:position pos:line="556" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="556" pos:column="44"/></argument_list></call> <operator pos:line="556" pos:column="45">==<pos:position pos:line="556" pos:column="47"/></operator> <literal type="number" pos:line="556" pos:column="48">0<pos:position pos:line="556" pos:column="49"/></literal></expr>)<pos:position pos:line="556" pos:column="50"/></condition><then pos:line="556" pos:column="50">
      <block type="pseudo"><return pos:line="557" pos:column="7">return <expr><call><name pos:line="557" pos:column="14">varnish_submit_derive<pos:position pos:line="557" pos:column="35"/></name><argument_list pos:line="557" pos:column="35">(<argument><expr><name><name pos:line="557" pos:column="36">conf<pos:position pos:line="557" pos:column="40"/></name><operator pos:line="557" pos:column="40">-&gt;<pos:position pos:line="557" pos:column="45"/></operator><name pos:line="557" pos:column="42">instance<pos:position pos:line="557" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="557" pos:column="52">"workers"<pos:position pos:line="557" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="557" pos:column="63">"total_requests"<pos:position pos:line="557" pos:column="79"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="558" pos:column="36">"overflowed"<pos:position pos:line="558" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="558" pos:column="50">val<pos:position pos:line="558" pos:column="53"/></name></expr></argument>)<pos:position pos:line="558" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="558" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="559" pos:column="5">else <if pos:line="559" pos:column="10">if <condition pos:line="559" pos:column="13">(<expr><call><name pos:line="559" pos:column="14">strcmp<pos:position pos:line="559" pos:column="20"/></name><argument_list pos:line="559" pos:column="20">(<argument><expr><name pos:line="559" pos:column="21">name<pos:position pos:line="559" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="559" pos:column="27">"n_wrk_queued"<pos:position pos:line="559" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="559" pos:column="42"/></argument_list></call> <operator pos:line="559" pos:column="43">==<pos:position pos:line="559" pos:column="45"/></operator> <literal type="number" pos:line="559" pos:column="46">0<pos:position pos:line="559" pos:column="47"/></literal></expr>)<pos:position pos:line="559" pos:column="48"/></condition><then pos:line="559" pos:column="48">
      <block type="pseudo"><return pos:line="560" pos:column="7">return <expr><call><name pos:line="560" pos:column="14">varnish_submit_derive<pos:position pos:line="560" pos:column="35"/></name><argument_list pos:line="560" pos:column="35">(<argument><expr><name><name pos:line="560" pos:column="36">conf<pos:position pos:line="560" pos:column="40"/></name><operator pos:line="560" pos:column="40">-&gt;<pos:position pos:line="560" pos:column="45"/></operator><name pos:line="560" pos:column="42">instance<pos:position pos:line="560" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="560" pos:column="52">"workers"<pos:position pos:line="560" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="560" pos:column="63">"total_requests"<pos:position pos:line="560" pos:column="79"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="561" pos:column="36">"queued"<pos:position pos:line="561" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="561" pos:column="46">val<pos:position pos:line="561" pos:column="49"/></name></expr></argument>)<pos:position pos:line="561" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="561" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="562" pos:column="5">else <if pos:line="562" pos:column="10">if <condition pos:line="562" pos:column="13">(<expr><call><name pos:line="562" pos:column="14">strcmp<pos:position pos:line="562" pos:column="20"/></name><argument_list pos:line="562" pos:column="20">(<argument><expr><name pos:line="562" pos:column="21">name<pos:position pos:line="562" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="562" pos:column="27">"n_wrk_lqueue"<pos:position pos:line="562" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="562" pos:column="42"/></argument_list></call> <operator pos:line="562" pos:column="43">==<pos:position pos:line="562" pos:column="45"/></operator> <literal type="number" pos:line="562" pos:column="46">0<pos:position pos:line="562" pos:column="47"/></literal></expr>)<pos:position pos:line="562" pos:column="48"/></condition><then pos:line="562" pos:column="48">
      <block type="pseudo"><return pos:line="563" pos:column="7">return <expr><call><name pos:line="563" pos:column="14">varnish_submit_derive<pos:position pos:line="563" pos:column="35"/></name><argument_list pos:line="563" pos:column="35">(<argument><expr><name><name pos:line="563" pos:column="36">conf<pos:position pos:line="563" pos:column="40"/></name><operator pos:line="563" pos:column="40">-&gt;<pos:position pos:line="563" pos:column="45"/></operator><name pos:line="563" pos:column="42">instance<pos:position pos:line="563" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="563" pos:column="52">"workers"<pos:position pos:line="563" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="563" pos:column="63">"total_requests"<pos:position pos:line="563" pos:column="79"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="564" pos:column="36">"queue_length"<pos:position pos:line="564" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="564" pos:column="52">val<pos:position pos:line="564" pos:column="55"/></name></expr></argument>)<pos:position pos:line="564" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="564" pos:column="57"/></return></block></then></if></elseif>
<cpp:if pos:line="565" pos:column="1">#<cpp:directive pos:line="565" pos:column="2">if<pos:position pos:line="565" pos:column="4"/></cpp:directive> <expr><name pos:line="565" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="565" pos:column="20"/></name> <operator pos:line="565" pos:column="21">||<pos:position pos:line="565" pos:column="23"/></operator> <name pos:line="565" pos:column="24">HAVE_VARNISH_V5<pos:position pos:line="565" pos:column="39"/></name></expr></cpp:if>
    <elseif pos:line="566" pos:column="5">else <if pos:line="566" pos:column="10">if <condition pos:line="566" pos:column="13">(<expr><call><name pos:line="566" pos:column="14">strcmp<pos:position pos:line="566" pos:column="20"/></name><argument_list pos:line="566" pos:column="20">(<argument><expr><name pos:line="566" pos:column="21">name<pos:position pos:line="566" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="566" pos:column="27">"pools"<pos:position pos:line="566" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="566" pos:column="35"/></argument_list></call> <operator pos:line="566" pos:column="36">==<pos:position pos:line="566" pos:column="38"/></operator> <literal type="number" pos:line="566" pos:column="39">0<pos:position pos:line="566" pos:column="40"/></literal></expr>)<pos:position pos:line="566" pos:column="41"/></condition><then pos:line="566" pos:column="41">
      <block type="pseudo"><return pos:line="567" pos:column="7">return <expr><call><name pos:line="567" pos:column="14">varnish_submit_gauge<pos:position pos:line="567" pos:column="34"/></name><argument_list pos:line="567" pos:column="34">(<argument><expr><name><name pos:line="567" pos:column="35">conf<pos:position pos:line="567" pos:column="39"/></name><operator pos:line="567" pos:column="39">-&gt;<pos:position pos:line="567" pos:column="44"/></operator><name pos:line="567" pos:column="41">instance<pos:position pos:line="567" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="567" pos:column="51">"workers"<pos:position pos:line="567" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="567" pos:column="62">"pools"<pos:position pos:line="567" pos:column="69"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="567" pos:column="71">"pools"<pos:position pos:line="567" pos:column="78"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="568" pos:column="35">val<pos:position pos:line="568" pos:column="38"/></name></expr></argument>)<pos:position pos:line="568" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="568" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="569" pos:column="5">else <if pos:line="569" pos:column="10">if <condition pos:line="569" pos:column="13">(<expr><call><name pos:line="569" pos:column="14">strcmp<pos:position pos:line="569" pos:column="20"/></name><argument_list pos:line="569" pos:column="20">(<argument><expr><name pos:line="569" pos:column="21">name<pos:position pos:line="569" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="569" pos:column="27">"busy_killed"<pos:position pos:line="569" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="569" pos:column="41"/></argument_list></call> <operator pos:line="569" pos:column="42">==<pos:position pos:line="569" pos:column="44"/></operator> <literal type="number" pos:line="569" pos:column="45">0<pos:position pos:line="569" pos:column="46"/></literal></expr>)<pos:position pos:line="569" pos:column="47"/></condition><then pos:line="569" pos:column="47">
      <block type="pseudo"><return pos:line="570" pos:column="7">return <expr><call><name pos:line="570" pos:column="14">varnish_submit_derive<pos:position pos:line="570" pos:column="35"/></name><argument_list pos:line="570" pos:column="35">(<argument><expr><name><name pos:line="570" pos:column="36">conf<pos:position pos:line="570" pos:column="40"/></name><operator pos:line="570" pos:column="40">-&gt;<pos:position pos:line="570" pos:column="45"/></operator><name pos:line="570" pos:column="42">instance<pos:position pos:line="570" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="570" pos:column="52">"workers"<pos:position pos:line="570" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="570" pos:column="63">"http_requests"<pos:position pos:line="570" pos:column="78"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="571" pos:column="36">"busy_killed"<pos:position pos:line="571" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="571" pos:column="51">val<pos:position pos:line="571" pos:column="54"/></name></expr></argument>)<pos:position pos:line="571" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="571" pos:column="56"/></return></block></then></if></elseif></if>
<cpp:endif pos:line="572" pos:column="1">#<cpp:directive pos:line="572" pos:column="2">endif<pos:position pos:line="572" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="573" pos:column="4"/></block></then></if>

<cpp:if pos:line="575" pos:column="1">#<cpp:directive pos:line="575" pos:column="2">if<pos:position pos:line="575" pos:column="4"/></cpp:directive> <expr><name pos:line="575" pos:column="5">HAVE_VARNISH_V4<pos:position pos:line="575" pos:column="20"/></name> <operator pos:line="575" pos:column="21">||<pos:position pos:line="575" pos:column="23"/></operator> <name pos:line="575" pos:column="24">HAVE_VARNISH_V5<pos:position pos:line="575" pos:column="39"/></name></expr></cpp:if>
  <if pos:line="576" pos:column="3">if <condition pos:line="576" pos:column="6">(<expr><name><name pos:line="576" pos:column="7">conf<pos:position pos:line="576" pos:column="11"/></name><operator pos:line="576" pos:column="11">-&gt;<pos:position pos:line="576" pos:column="16"/></operator><name pos:line="576" pos:column="13">collect_vsm<pos:position pos:line="576" pos:column="24"/></name></name></expr>)<pos:position pos:line="576" pos:column="25"/></condition><then pos:line="576" pos:column="25"> <block pos:line="576" pos:column="26">{
    <if pos:line="577" pos:column="5">if <condition pos:line="577" pos:column="8">(<expr><call><name pos:line="577" pos:column="9">strcmp<pos:position pos:line="577" pos:column="15"/></name><argument_list pos:line="577" pos:column="15">(<argument><expr><name pos:line="577" pos:column="16">name<pos:position pos:line="577" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="577" pos:column="22">"vsm_free"<pos:position pos:line="577" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="577" pos:column="33"/></argument_list></call> <operator pos:line="577" pos:column="34">==<pos:position pos:line="577" pos:column="36"/></operator> <literal type="number" pos:line="577" pos:column="37">0<pos:position pos:line="577" pos:column="38"/></literal></expr>)<pos:position pos:line="577" pos:column="39"/></condition><then pos:line="577" pos:column="39">
      <block type="pseudo"><return pos:line="578" pos:column="7">return <expr><call><name pos:line="578" pos:column="14">varnish_submit_gauge<pos:position pos:line="578" pos:column="34"/></name><argument_list pos:line="578" pos:column="34">(<argument><expr><name><name pos:line="578" pos:column="35">conf<pos:position pos:line="578" pos:column="39"/></name><operator pos:line="578" pos:column="39">-&gt;<pos:position pos:line="578" pos:column="44"/></operator><name pos:line="578" pos:column="41">instance<pos:position pos:line="578" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="578" pos:column="51">"vsm"<pos:position pos:line="578" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="578" pos:column="58">"bytes"<pos:position pos:line="578" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="578" pos:column="67">"free"<pos:position pos:line="578" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="578" pos:column="75">val<pos:position pos:line="578" pos:column="78"/></name></expr></argument>)<pos:position pos:line="578" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="578" pos:column="80"/></return></block></then>
    <elseif pos:line="579" pos:column="5">else <if pos:line="579" pos:column="10">if <condition pos:line="579" pos:column="13">(<expr><call><name pos:line="579" pos:column="14">strcmp<pos:position pos:line="579" pos:column="20"/></name><argument_list pos:line="579" pos:column="20">(<argument><expr><name pos:line="579" pos:column="21">name<pos:position pos:line="579" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="579" pos:column="27">"vsm_used"<pos:position pos:line="579" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="579" pos:column="38"/></argument_list></call> <operator pos:line="579" pos:column="39">==<pos:position pos:line="579" pos:column="41"/></operator> <literal type="number" pos:line="579" pos:column="42">0<pos:position pos:line="579" pos:column="43"/></literal></expr>)<pos:position pos:line="579" pos:column="44"/></condition><then pos:line="579" pos:column="44">
      <block type="pseudo"><return pos:line="580" pos:column="7">return <expr><call><name pos:line="580" pos:column="14">varnish_submit_gauge<pos:position pos:line="580" pos:column="34"/></name><argument_list pos:line="580" pos:column="34">(<argument><expr><name><name pos:line="580" pos:column="35">conf<pos:position pos:line="580" pos:column="39"/></name><operator pos:line="580" pos:column="39">-&gt;<pos:position pos:line="580" pos:column="44"/></operator><name pos:line="580" pos:column="41">instance<pos:position pos:line="580" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="580" pos:column="51">"vsm"<pos:position pos:line="580" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="580" pos:column="58">"bytes"<pos:position pos:line="580" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="580" pos:column="67">"used"<pos:position pos:line="580" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="580" pos:column="75">val<pos:position pos:line="580" pos:column="78"/></name></expr></argument>)<pos:position pos:line="580" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="580" pos:column="80"/></return></block></then></if></elseif>
    <elseif pos:line="581" pos:column="5">else <if pos:line="581" pos:column="10">if <condition pos:line="581" pos:column="13">(<expr><call><name pos:line="581" pos:column="14">strcmp<pos:position pos:line="581" pos:column="20"/></name><argument_list pos:line="581" pos:column="20">(<argument><expr><name pos:line="581" pos:column="21">name<pos:position pos:line="581" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="581" pos:column="27">"vsm_cooling"<pos:position pos:line="581" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="581" pos:column="41"/></argument_list></call> <operator pos:line="581" pos:column="42">==<pos:position pos:line="581" pos:column="44"/></operator> <literal type="number" pos:line="581" pos:column="45">0<pos:position pos:line="581" pos:column="46"/></literal></expr>)<pos:position pos:line="581" pos:column="47"/></condition><then pos:line="581" pos:column="47">
      <block type="pseudo"><return pos:line="582" pos:column="7">return <expr><call><name pos:line="582" pos:column="14">varnish_submit_gauge<pos:position pos:line="582" pos:column="34"/></name><argument_list pos:line="582" pos:column="34">(<argument><expr><name><name pos:line="582" pos:column="35">conf<pos:position pos:line="582" pos:column="39"/></name><operator pos:line="582" pos:column="39">-&gt;<pos:position pos:line="582" pos:column="44"/></operator><name pos:line="582" pos:column="41">instance<pos:position pos:line="582" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="582" pos:column="51">"vsm"<pos:position pos:line="582" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="582" pos:column="58">"bytes"<pos:position pos:line="582" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="582" pos:column="67">"cooling"<pos:position pos:line="582" pos:column="76"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="583" pos:column="35">val<pos:position pos:line="583" pos:column="38"/></name></expr></argument>)<pos:position pos:line="583" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="583" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="584" pos:column="5">else <if pos:line="584" pos:column="10">if <condition pos:line="584" pos:column="13">(<expr><call><name pos:line="584" pos:column="14">strcmp<pos:position pos:line="584" pos:column="20"/></name><argument_list pos:line="584" pos:column="20">(<argument><expr><name pos:line="584" pos:column="21">name<pos:position pos:line="584" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="584" pos:column="27">"vsm_overflow"<pos:position pos:line="584" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="584" pos:column="42"/></argument_list></call> <operator pos:line="584" pos:column="43">==<pos:position pos:line="584" pos:column="45"/></operator> <literal type="number" pos:line="584" pos:column="46">0<pos:position pos:line="584" pos:column="47"/></literal></expr>)<pos:position pos:line="584" pos:column="48"/></condition><then pos:line="584" pos:column="48">
      <block type="pseudo"><return pos:line="585" pos:column="7">return <expr><call><name pos:line="585" pos:column="14">varnish_submit_gauge<pos:position pos:line="585" pos:column="34"/></name><argument_list pos:line="585" pos:column="34">(<argument><expr><name><name pos:line="585" pos:column="35">conf<pos:position pos:line="585" pos:column="39"/></name><operator pos:line="585" pos:column="39">-&gt;<pos:position pos:line="585" pos:column="44"/></operator><name pos:line="585" pos:column="41">instance<pos:position pos:line="585" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="585" pos:column="51">"vsm"<pos:position pos:line="585" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="585" pos:column="58">"bytes"<pos:position pos:line="585" pos:column="65"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="585" pos:column="67">"overflow"<pos:position pos:line="585" pos:column="77"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="586" pos:column="35">val<pos:position pos:line="586" pos:column="38"/></name></expr></argument>)<pos:position pos:line="586" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="586" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="587" pos:column="5">else <if pos:line="587" pos:column="10">if <condition pos:line="587" pos:column="13">(<expr><call><name pos:line="587" pos:column="14">strcmp<pos:position pos:line="587" pos:column="20"/></name><argument_list pos:line="587" pos:column="20">(<argument><expr><name pos:line="587" pos:column="21">name<pos:position pos:line="587" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="587" pos:column="27">"vsm_overflowed"<pos:position pos:line="587" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="587" pos:column="44"/></argument_list></call> <operator pos:line="587" pos:column="45">==<pos:position pos:line="587" pos:column="47"/></operator> <literal type="number" pos:line="587" pos:column="48">0<pos:position pos:line="587" pos:column="49"/></literal></expr>)<pos:position pos:line="587" pos:column="50"/></condition><then pos:line="587" pos:column="50">
      <block type="pseudo"><return pos:line="588" pos:column="7">return <expr><call><name pos:line="588" pos:column="14">varnish_submit_derive<pos:position pos:line="588" pos:column="35"/></name><argument_list pos:line="588" pos:column="35">(<argument><expr><name><name pos:line="588" pos:column="36">conf<pos:position pos:line="588" pos:column="40"/></name><operator pos:line="588" pos:column="40">-&gt;<pos:position pos:line="588" pos:column="45"/></operator><name pos:line="588" pos:column="42">instance<pos:position pos:line="588" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="588" pos:column="52">"vsm"<pos:position pos:line="588" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="588" pos:column="59">"total_bytes"<pos:position pos:line="588" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="589" pos:column="36">"overflowed"<pos:position pos:line="589" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="589" pos:column="50">val<pos:position pos:line="589" pos:column="53"/></name></expr></argument>)<pos:position pos:line="589" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="589" pos:column="55"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="590" pos:column="4"/></block></then></if>

  <if pos:line="592" pos:column="3">if <condition pos:line="592" pos:column="6">(<expr><name><name pos:line="592" pos:column="7">conf<pos:position pos:line="592" pos:column="11"/></name><operator pos:line="592" pos:column="11">-&gt;<pos:position pos:line="592" pos:column="16"/></operator><name pos:line="592" pos:column="13">collect_vbe<pos:position pos:line="592" pos:column="24"/></name></name></expr>)<pos:position pos:line="592" pos:column="25"/></condition><then pos:line="592" pos:column="25"> <block pos:line="592" pos:column="26">{
    <comment type="block" pos:line="593" pos:column="5">/* @TODO figure out the collectd type for bitmap
    if (strcmp(name, "happy") == 0)
      return varnish_submit_derive(conf-&gt;instance, "vbe",
                                   "bitmap", "happy_hprobes", val);
    */</comment>
    <if pos:line="598" pos:column="5">if <condition pos:line="598" pos:column="8">(<expr><call><name pos:line="598" pos:column="9">strcmp<pos:position pos:line="598" pos:column="15"/></name><argument_list pos:line="598" pos:column="15">(<argument><expr><name pos:line="598" pos:column="16">name<pos:position pos:line="598" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="598" pos:column="22">"bereq_hdrbytes"<pos:position pos:line="598" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="598" pos:column="39"/></argument_list></call> <operator pos:line="598" pos:column="40">==<pos:position pos:line="598" pos:column="42"/></operator> <literal type="number" pos:line="598" pos:column="43">0<pos:position pos:line="598" pos:column="44"/></literal></expr>)<pos:position pos:line="598" pos:column="45"/></condition><then pos:line="598" pos:column="45">
      <block type="pseudo"><return pos:line="599" pos:column="7">return <expr><call><name pos:line="599" pos:column="14">varnish_submit_derive<pos:position pos:line="599" pos:column="35"/></name><argument_list pos:line="599" pos:column="35">(<argument><expr><name><name pos:line="599" pos:column="36">conf<pos:position pos:line="599" pos:column="40"/></name><operator pos:line="599" pos:column="40">-&gt;<pos:position pos:line="599" pos:column="45"/></operator><name pos:line="599" pos:column="42">instance<pos:position pos:line="599" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="599" pos:column="52">"vbe"<pos:position pos:line="599" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="599" pos:column="59">"total_bytes"<pos:position pos:line="599" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="600" pos:column="36">"bereq_hdrbytes"<pos:position pos:line="600" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="600" pos:column="54">val<pos:position pos:line="600" pos:column="57"/></name></expr></argument>)<pos:position pos:line="600" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="600" pos:column="59"/></return></block></then>
    <elseif pos:line="601" pos:column="5">else <if pos:line="601" pos:column="10">if <condition pos:line="601" pos:column="13">(<expr><call><name pos:line="601" pos:column="14">strcmp<pos:position pos:line="601" pos:column="20"/></name><argument_list pos:line="601" pos:column="20">(<argument><expr><name pos:line="601" pos:column="21">name<pos:position pos:line="601" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="601" pos:column="27">"bereq_bodybytes"<pos:position pos:line="601" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="601" pos:column="45"/></argument_list></call> <operator pos:line="601" pos:column="46">==<pos:position pos:line="601" pos:column="48"/></operator> <literal type="number" pos:line="601" pos:column="49">0<pos:position pos:line="601" pos:column="50"/></literal></expr>)<pos:position pos:line="601" pos:column="51"/></condition><then pos:line="601" pos:column="51">
      <block type="pseudo"><return pos:line="602" pos:column="7">return <expr><call><name pos:line="602" pos:column="14">varnish_submit_derive<pos:position pos:line="602" pos:column="35"/></name><argument_list pos:line="602" pos:column="35">(<argument><expr><name><name pos:line="602" pos:column="36">conf<pos:position pos:line="602" pos:column="40"/></name><operator pos:line="602" pos:column="40">-&gt;<pos:position pos:line="602" pos:column="45"/></operator><name pos:line="602" pos:column="42">instance<pos:position pos:line="602" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="602" pos:column="52">"vbe"<pos:position pos:line="602" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="602" pos:column="59">"total_bytes"<pos:position pos:line="602" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="603" pos:column="36">"bereq_bodybytes"<pos:position pos:line="603" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="603" pos:column="55">val<pos:position pos:line="603" pos:column="58"/></name></expr></argument>)<pos:position pos:line="603" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="603" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="604" pos:column="5">else <if pos:line="604" pos:column="10">if <condition pos:line="604" pos:column="13">(<expr><call><name pos:line="604" pos:column="14">strcmp<pos:position pos:line="604" pos:column="20"/></name><argument_list pos:line="604" pos:column="20">(<argument><expr><name pos:line="604" pos:column="21">name<pos:position pos:line="604" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="604" pos:column="27">"bereq_protobytes"<pos:position pos:line="604" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="604" pos:column="46"/></argument_list></call> <operator pos:line="604" pos:column="47">==<pos:position pos:line="604" pos:column="49"/></operator> <literal type="number" pos:line="604" pos:column="50">0<pos:position pos:line="604" pos:column="51"/></literal></expr>)<pos:position pos:line="604" pos:column="52"/></condition><then pos:line="604" pos:column="52">
      <block type="pseudo"><return pos:line="605" pos:column="7">return <expr><call><name pos:line="605" pos:column="14">varnish_submit_derive<pos:position pos:line="605" pos:column="35"/></name><argument_list pos:line="605" pos:column="35">(<argument><expr><name><name pos:line="605" pos:column="36">conf<pos:position pos:line="605" pos:column="40"/></name><operator pos:line="605" pos:column="40">-&gt;<pos:position pos:line="605" pos:column="45"/></operator><name pos:line="605" pos:column="42">instance<pos:position pos:line="605" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="605" pos:column="52">"vbe"<pos:position pos:line="605" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="605" pos:column="59">"total_bytes"<pos:position pos:line="605" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="606" pos:column="36">"bereq_protobytes"<pos:position pos:line="606" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="606" pos:column="56">val<pos:position pos:line="606" pos:column="59"/></name></expr></argument>)<pos:position pos:line="606" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="606" pos:column="61"/></return></block></then></if></elseif>
    <elseif pos:line="607" pos:column="5">else <if pos:line="607" pos:column="10">if <condition pos:line="607" pos:column="13">(<expr><call><name pos:line="607" pos:column="14">strcmp<pos:position pos:line="607" pos:column="20"/></name><argument_list pos:line="607" pos:column="20">(<argument><expr><name pos:line="607" pos:column="21">name<pos:position pos:line="607" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="607" pos:column="27">"beresp_hdrbytes"<pos:position pos:line="607" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="607" pos:column="45"/></argument_list></call> <operator pos:line="607" pos:column="46">==<pos:position pos:line="607" pos:column="48"/></operator> <literal type="number" pos:line="607" pos:column="49">0<pos:position pos:line="607" pos:column="50"/></literal></expr>)<pos:position pos:line="607" pos:column="51"/></condition><then pos:line="607" pos:column="51">
      <block type="pseudo"><return pos:line="608" pos:column="7">return <expr><call><name pos:line="608" pos:column="14">varnish_submit_derive<pos:position pos:line="608" pos:column="35"/></name><argument_list pos:line="608" pos:column="35">(<argument><expr><name><name pos:line="608" pos:column="36">conf<pos:position pos:line="608" pos:column="40"/></name><operator pos:line="608" pos:column="40">-&gt;<pos:position pos:line="608" pos:column="45"/></operator><name pos:line="608" pos:column="42">instance<pos:position pos:line="608" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="608" pos:column="52">"vbe"<pos:position pos:line="608" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="608" pos:column="59">"total_bytes"<pos:position pos:line="608" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="609" pos:column="36">"beresp_hdrbytes"<pos:position pos:line="609" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="609" pos:column="55">val<pos:position pos:line="609" pos:column="58"/></name></expr></argument>)<pos:position pos:line="609" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="610" pos:column="5">else <if pos:line="610" pos:column="10">if <condition pos:line="610" pos:column="13">(<expr><call><name pos:line="610" pos:column="14">strcmp<pos:position pos:line="610" pos:column="20"/></name><argument_list pos:line="610" pos:column="20">(<argument><expr><name pos:line="610" pos:column="21">name<pos:position pos:line="610" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="610" pos:column="27">"beresp_bodybytes"<pos:position pos:line="610" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="610" pos:column="46"/></argument_list></call> <operator pos:line="610" pos:column="47">==<pos:position pos:line="610" pos:column="49"/></operator> <literal type="number" pos:line="610" pos:column="50">0<pos:position pos:line="610" pos:column="51"/></literal></expr>)<pos:position pos:line="610" pos:column="52"/></condition><then pos:line="610" pos:column="52">
      <block type="pseudo"><return pos:line="611" pos:column="7">return <expr><call><name pos:line="611" pos:column="14">varnish_submit_derive<pos:position pos:line="611" pos:column="35"/></name><argument_list pos:line="611" pos:column="35">(<argument><expr><name><name pos:line="611" pos:column="36">conf<pos:position pos:line="611" pos:column="40"/></name><operator pos:line="611" pos:column="40">-&gt;<pos:position pos:line="611" pos:column="45"/></operator><name pos:line="611" pos:column="42">instance<pos:position pos:line="611" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="611" pos:column="52">"vbe"<pos:position pos:line="611" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="611" pos:column="59">"total_bytes"<pos:position pos:line="611" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="612" pos:column="36">"beresp_bodybytes"<pos:position pos:line="612" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="612" pos:column="56">val<pos:position pos:line="612" pos:column="59"/></name></expr></argument>)<pos:position pos:line="612" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="612" pos:column="61"/></return></block></then></if></elseif>
    <elseif pos:line="613" pos:column="5">else <if pos:line="613" pos:column="10">if <condition pos:line="613" pos:column="13">(<expr><call><name pos:line="613" pos:column="14">strcmp<pos:position pos:line="613" pos:column="20"/></name><argument_list pos:line="613" pos:column="20">(<argument><expr><name pos:line="613" pos:column="21">name<pos:position pos:line="613" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="613" pos:column="27">"beresp_protobytes"<pos:position pos:line="613" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="613" pos:column="47"/></argument_list></call> <operator pos:line="613" pos:column="48">==<pos:position pos:line="613" pos:column="50"/></operator> <literal type="number" pos:line="613" pos:column="51">0<pos:position pos:line="613" pos:column="52"/></literal></expr>)<pos:position pos:line="613" pos:column="53"/></condition><then pos:line="613" pos:column="53">
      <block type="pseudo"><return pos:line="614" pos:column="7">return <expr><call><name pos:line="614" pos:column="14">varnish_submit_derive<pos:position pos:line="614" pos:column="35"/></name><argument_list pos:line="614" pos:column="35">(<argument><expr><name><name pos:line="614" pos:column="36">conf<pos:position pos:line="614" pos:column="40"/></name><operator pos:line="614" pos:column="40">-&gt;<pos:position pos:line="614" pos:column="45"/></operator><name pos:line="614" pos:column="42">instance<pos:position pos:line="614" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="614" pos:column="52">"vbe"<pos:position pos:line="614" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="614" pos:column="59">"total_bytes"<pos:position pos:line="614" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="615" pos:column="36">"beresp_protobytes"<pos:position pos:line="615" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="615" pos:column="57">val<pos:position pos:line="615" pos:column="60"/></name></expr></argument>)<pos:position pos:line="615" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="62"/></return></block></then></if></elseif>
    <elseif pos:line="616" pos:column="5">else <if pos:line="616" pos:column="10">if <condition pos:line="616" pos:column="13">(<expr><call><name pos:line="616" pos:column="14">strcmp<pos:position pos:line="616" pos:column="20"/></name><argument_list pos:line="616" pos:column="20">(<argument><expr><name pos:line="616" pos:column="21">name<pos:position pos:line="616" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="616" pos:column="27">"pipe_hdrbytes"<pos:position pos:line="616" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="616" pos:column="43"/></argument_list></call> <operator pos:line="616" pos:column="44">==<pos:position pos:line="616" pos:column="46"/></operator> <literal type="number" pos:line="616" pos:column="47">0<pos:position pos:line="616" pos:column="48"/></literal></expr>)<pos:position pos:line="616" pos:column="49"/></condition><then pos:line="616" pos:column="49">
      <block type="pseudo"><return pos:line="617" pos:column="7">return <expr><call><name pos:line="617" pos:column="14">varnish_submit_derive<pos:position pos:line="617" pos:column="35"/></name><argument_list pos:line="617" pos:column="35">(<argument><expr><name><name pos:line="617" pos:column="36">conf<pos:position pos:line="617" pos:column="40"/></name><operator pos:line="617" pos:column="40">-&gt;<pos:position pos:line="617" pos:column="45"/></operator><name pos:line="617" pos:column="42">instance<pos:position pos:line="617" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="617" pos:column="52">"vbe"<pos:position pos:line="617" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="617" pos:column="59">"total_bytes"<pos:position pos:line="617" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="618" pos:column="36">"pipe_hdrbytes"<pos:position pos:line="618" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="618" pos:column="53">val<pos:position pos:line="618" pos:column="56"/></name></expr></argument>)<pos:position pos:line="618" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="58"/></return></block></then></if></elseif>
    <elseif pos:line="619" pos:column="5">else <if pos:line="619" pos:column="10">if <condition pos:line="619" pos:column="13">(<expr><call><name pos:line="619" pos:column="14">strcmp<pos:position pos:line="619" pos:column="20"/></name><argument_list pos:line="619" pos:column="20">(<argument><expr><name pos:line="619" pos:column="21">name<pos:position pos:line="619" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="619" pos:column="27">"pipe_out"<pos:position pos:line="619" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="619" pos:column="38"/></argument_list></call> <operator pos:line="619" pos:column="39">==<pos:position pos:line="619" pos:column="41"/></operator> <literal type="number" pos:line="619" pos:column="42">0<pos:position pos:line="619" pos:column="43"/></literal></expr>)<pos:position pos:line="619" pos:column="44"/></condition><then pos:line="619" pos:column="44">
      <block type="pseudo"><return pos:line="620" pos:column="7">return <expr><call><name pos:line="620" pos:column="14">varnish_submit_derive<pos:position pos:line="620" pos:column="35"/></name><argument_list pos:line="620" pos:column="35">(<argument><expr><name><name pos:line="620" pos:column="36">conf<pos:position pos:line="620" pos:column="40"/></name><operator pos:line="620" pos:column="40">-&gt;<pos:position pos:line="620" pos:column="45"/></operator><name pos:line="620" pos:column="42">instance<pos:position pos:line="620" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="620" pos:column="52">"vbe"<pos:position pos:line="620" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="620" pos:column="59">"total_bytes"<pos:position pos:line="620" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="621" pos:column="36">"pipe_out"<pos:position pos:line="621" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="621" pos:column="48">val<pos:position pos:line="621" pos:column="51"/></name></expr></argument>)<pos:position pos:line="621" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="621" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="622" pos:column="5">else <if pos:line="622" pos:column="10">if <condition pos:line="622" pos:column="13">(<expr><call><name pos:line="622" pos:column="14">strcmp<pos:position pos:line="622" pos:column="20"/></name><argument_list pos:line="622" pos:column="20">(<argument><expr><name pos:line="622" pos:column="21">name<pos:position pos:line="622" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="622" pos:column="27">"pipe_in"<pos:position pos:line="622" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="622" pos:column="37"/></argument_list></call> <operator pos:line="622" pos:column="38">==<pos:position pos:line="622" pos:column="40"/></operator> <literal type="number" pos:line="622" pos:column="41">0<pos:position pos:line="622" pos:column="42"/></literal></expr>)<pos:position pos:line="622" pos:column="43"/></condition><then pos:line="622" pos:column="43">
      <block type="pseudo"><return pos:line="623" pos:column="7">return <expr><call><name pos:line="623" pos:column="14">varnish_submit_derive<pos:position pos:line="623" pos:column="35"/></name><argument_list pos:line="623" pos:column="35">(<argument><expr><name><name pos:line="623" pos:column="36">conf<pos:position pos:line="623" pos:column="40"/></name><operator pos:line="623" pos:column="40">-&gt;<pos:position pos:line="623" pos:column="45"/></operator><name pos:line="623" pos:column="42">instance<pos:position pos:line="623" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="623" pos:column="52">"vbe"<pos:position pos:line="623" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="623" pos:column="59">"total_bytes"<pos:position pos:line="623" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="624" pos:column="36">"pipe_in"<pos:position pos:line="624" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="624" pos:column="47">val<pos:position pos:line="624" pos:column="50"/></name></expr></argument>)<pos:position pos:line="624" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="624" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="625" pos:column="5">else <if pos:line="625" pos:column="10">if <condition pos:line="625" pos:column="13">(<expr><call><name pos:line="625" pos:column="14">strcmp<pos:position pos:line="625" pos:column="20"/></name><argument_list pos:line="625" pos:column="20">(<argument><expr><name pos:line="625" pos:column="21">name<pos:position pos:line="625" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="625" pos:column="27">"conn"<pos:position pos:line="625" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="625" pos:column="34"/></argument_list></call> <operator pos:line="625" pos:column="35">==<pos:position pos:line="625" pos:column="37"/></operator> <literal type="number" pos:line="625" pos:column="38">0<pos:position pos:line="625" pos:column="39"/></literal></expr>)<pos:position pos:line="625" pos:column="40"/></condition><then pos:line="625" pos:column="40">
      <block type="pseudo"><return pos:line="626" pos:column="7">return <expr><call><name pos:line="626" pos:column="14">varnish_submit_derive<pos:position pos:line="626" pos:column="35"/></name><argument_list pos:line="626" pos:column="35">(<argument><expr><name><name pos:line="626" pos:column="36">conf<pos:position pos:line="626" pos:column="40"/></name><operator pos:line="626" pos:column="40">-&gt;<pos:position pos:line="626" pos:column="45"/></operator><name pos:line="626" pos:column="42">instance<pos:position pos:line="626" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="626" pos:column="52">"vbe"<pos:position pos:line="626" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="626" pos:column="59">"connections"<pos:position pos:line="626" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="627" pos:column="36">"c_conns"<pos:position pos:line="627" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="627" pos:column="47">val<pos:position pos:line="627" pos:column="50"/></name></expr></argument>)<pos:position pos:line="627" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="627" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="628" pos:column="5">else <if pos:line="628" pos:column="10">if <condition pos:line="628" pos:column="13">(<expr><call><name pos:line="628" pos:column="14">strcmp<pos:position pos:line="628" pos:column="20"/></name><argument_list pos:line="628" pos:column="20">(<argument><expr><name pos:line="628" pos:column="21">name<pos:position pos:line="628" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="628" pos:column="27">"req"<pos:position pos:line="628" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="628" pos:column="33"/></argument_list></call> <operator pos:line="628" pos:column="34">==<pos:position pos:line="628" pos:column="36"/></operator> <literal type="number" pos:line="628" pos:column="37">0<pos:position pos:line="628" pos:column="38"/></literal></expr>)<pos:position pos:line="628" pos:column="39"/></condition><then pos:line="628" pos:column="39">
      <block type="pseudo"><return pos:line="629" pos:column="7">return <expr><call><name pos:line="629" pos:column="14">varnish_submit_derive<pos:position pos:line="629" pos:column="35"/></name><argument_list pos:line="629" pos:column="35">(<argument><expr><name><name pos:line="629" pos:column="36">conf<pos:position pos:line="629" pos:column="40"/></name><operator pos:line="629" pos:column="40">-&gt;<pos:position pos:line="629" pos:column="45"/></operator><name pos:line="629" pos:column="42">instance<pos:position pos:line="629" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="629" pos:column="52">"vbe"<pos:position pos:line="629" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="629" pos:column="59">"http_requests"<pos:position pos:line="629" pos:column="74"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="630" pos:column="36">"b_reqs"<pos:position pos:line="630" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="630" pos:column="46">val<pos:position pos:line="630" pos:column="49"/></name></expr></argument>)<pos:position pos:line="630" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="630" pos:column="51"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="631" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="633" pos:column="3">/* All Stevedores support these counters */</comment>
  <if pos:line="634" pos:column="3">if <condition pos:line="634" pos:column="6">(<expr><name><name pos:line="634" pos:column="7">conf<pos:position pos:line="634" pos:column="11"/></name><operator pos:line="634" pos:column="11">-&gt;<pos:position pos:line="634" pos:column="16"/></operator><name pos:line="634" pos:column="13">collect_sma<pos:position pos:line="634" pos:column="24"/></name></name> <operator pos:line="634" pos:column="25">||<pos:position pos:line="634" pos:column="27"/></operator> <name><name pos:line="634" pos:column="28">conf<pos:position pos:line="634" pos:column="32"/></name><operator pos:line="634" pos:column="32">-&gt;<pos:position pos:line="634" pos:column="37"/></operator><name pos:line="634" pos:column="34">collect_smf<pos:position pos:line="634" pos:column="45"/></name></name> <operator pos:line="634" pos:column="46">||<pos:position pos:line="634" pos:column="48"/></operator> <name><name pos:line="634" pos:column="49">conf<pos:position pos:line="634" pos:column="53"/></name><operator pos:line="634" pos:column="53">-&gt;<pos:position pos:line="634" pos:column="58"/></operator><name pos:line="634" pos:column="55">collect_mse<pos:position pos:line="634" pos:column="66"/></name></name></expr>)<pos:position pos:line="634" pos:column="67"/></condition><then pos:line="634" pos:column="67"> <block pos:line="634" pos:column="68">{

    <decl_stmt><decl><type><name pos:line="636" pos:column="5">char<pos:position pos:line="636" pos:column="9"/></name></type> <name><name pos:line="636" pos:column="10">category<pos:position pos:line="636" pos:column="18"/></name><index pos:line="636" pos:column="18">[<expr><literal type="number" pos:line="636" pos:column="19">4<pos:position pos:line="636" pos:column="20"/></literal></expr>]<pos:position pos:line="636" pos:column="21"/></index></name></decl>;<pos:position pos:line="636" pos:column="22"/></decl_stmt>
    <if pos:line="637" pos:column="5">if <condition pos:line="637" pos:column="8">(<expr><name><name pos:line="637" pos:column="9">conf<pos:position pos:line="637" pos:column="13"/></name><operator pos:line="637" pos:column="13">-&gt;<pos:position pos:line="637" pos:column="18"/></operator><name pos:line="637" pos:column="15">collect_sma<pos:position pos:line="637" pos:column="26"/></name></name></expr>)<pos:position pos:line="637" pos:column="27"/></condition><then pos:line="637" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="638" pos:column="7">strncpy<pos:position pos:line="638" pos:column="14"/></name><argument_list pos:line="638" pos:column="14">(<argument><expr><name pos:line="638" pos:column="15">category<pos:position pos:line="638" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="638" pos:column="25">"sma"<pos:position pos:line="638" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="638" pos:column="32">4<pos:position pos:line="638" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="638" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="638" pos:column="35"/></expr_stmt></block></then>
    <elseif pos:line="639" pos:column="5">else <if pos:line="639" pos:column="10">if <condition pos:line="639" pos:column="13">(<expr><name><name pos:line="639" pos:column="14">conf<pos:position pos:line="639" pos:column="18"/></name><operator pos:line="639" pos:column="18">-&gt;<pos:position pos:line="639" pos:column="23"/></operator><name pos:line="639" pos:column="20">collect_smf<pos:position pos:line="639" pos:column="31"/></name></name></expr>)<pos:position pos:line="639" pos:column="32"/></condition><then pos:line="639" pos:column="32">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="640" pos:column="7">strncpy<pos:position pos:line="640" pos:column="14"/></name><argument_list pos:line="640" pos:column="14">(<argument><expr><name pos:line="640" pos:column="15">category<pos:position pos:line="640" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="640" pos:column="25">"smf"<pos:position pos:line="640" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="640" pos:column="32">4<pos:position pos:line="640" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="640" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="640" pos:column="35"/></expr_stmt></block></then></if></elseif>
    <else pos:line="641" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="642" pos:column="7">strncpy<pos:position pos:line="642" pos:column="14"/></name><argument_list pos:line="642" pos:column="14">(<argument><expr><name pos:line="642" pos:column="15">category<pos:position pos:line="642" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="642" pos:column="25">"mse"<pos:position pos:line="642" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="642" pos:column="32">4<pos:position pos:line="642" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="642" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="642" pos:column="35"/></expr_stmt></block></else></if>

    <if pos:line="644" pos:column="5">if <condition pos:line="644" pos:column="8">(<expr><call><name pos:line="644" pos:column="9">strcmp<pos:position pos:line="644" pos:column="15"/></name><argument_list pos:line="644" pos:column="15">(<argument><expr><name pos:line="644" pos:column="16">name<pos:position pos:line="644" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="644" pos:column="22">"c_req"<pos:position pos:line="644" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="644" pos:column="30"/></argument_list></call> <operator pos:line="644" pos:column="31">==<pos:position pos:line="644" pos:column="33"/></operator> <literal type="number" pos:line="644" pos:column="34">0<pos:position pos:line="644" pos:column="35"/></literal></expr>)<pos:position pos:line="644" pos:column="36"/></condition><then pos:line="644" pos:column="36">
      <block type="pseudo"><return pos:line="645" pos:column="7">return <expr><call><name pos:line="645" pos:column="14">varnish_submit_derive<pos:position pos:line="645" pos:column="35"/></name><argument_list pos:line="645" pos:column="35">(<argument><expr><name><name pos:line="645" pos:column="36">conf<pos:position pos:line="645" pos:column="40"/></name><operator pos:line="645" pos:column="40">-&gt;<pos:position pos:line="645" pos:column="45"/></operator><name pos:line="645" pos:column="42">instance<pos:position pos:line="645" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="645" pos:column="52">category<pos:position pos:line="645" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="645" pos:column="62">"total_operations"<pos:position pos:line="645" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="646" pos:column="36">"alloc_req"<pos:position pos:line="646" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="646" pos:column="49">val<pos:position pos:line="646" pos:column="52"/></name></expr></argument>)<pos:position pos:line="646" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="646" pos:column="54"/></return></block></then>
    <elseif pos:line="647" pos:column="5">else <if pos:line="647" pos:column="10">if <condition pos:line="647" pos:column="13">(<expr><call><name pos:line="647" pos:column="14">strcmp<pos:position pos:line="647" pos:column="20"/></name><argument_list pos:line="647" pos:column="20">(<argument><expr><name pos:line="647" pos:column="21">name<pos:position pos:line="647" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="647" pos:column="27">"c_fail"<pos:position pos:line="647" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="647" pos:column="36"/></argument_list></call> <operator pos:line="647" pos:column="37">==<pos:position pos:line="647" pos:column="39"/></operator> <literal type="number" pos:line="647" pos:column="40">0<pos:position pos:line="647" pos:column="41"/></literal></expr>)<pos:position pos:line="647" pos:column="42"/></condition><then pos:line="647" pos:column="42">
      <block type="pseudo"><return pos:line="648" pos:column="7">return <expr><call><name pos:line="648" pos:column="14">varnish_submit_derive<pos:position pos:line="648" pos:column="35"/></name><argument_list pos:line="648" pos:column="35">(<argument><expr><name><name pos:line="648" pos:column="36">conf<pos:position pos:line="648" pos:column="40"/></name><operator pos:line="648" pos:column="40">-&gt;<pos:position pos:line="648" pos:column="45"/></operator><name pos:line="648" pos:column="42">instance<pos:position pos:line="648" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="648" pos:column="52">category<pos:position pos:line="648" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="648" pos:column="62">"total_operations"<pos:position pos:line="648" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="649" pos:column="36">"alloc_fail"<pos:position pos:line="649" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="649" pos:column="50">val<pos:position pos:line="649" pos:column="53"/></name></expr></argument>)<pos:position pos:line="649" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="649" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="650" pos:column="5">else <if pos:line="650" pos:column="10">if <condition pos:line="650" pos:column="13">(<expr><call><name pos:line="650" pos:column="14">strcmp<pos:position pos:line="650" pos:column="20"/></name><argument_list pos:line="650" pos:column="20">(<argument><expr><name pos:line="650" pos:column="21">name<pos:position pos:line="650" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="650" pos:column="27">"c_bytes"<pos:position pos:line="650" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="650" pos:column="37"/></argument_list></call> <operator pos:line="650" pos:column="38">==<pos:position pos:line="650" pos:column="40"/></operator> <literal type="number" pos:line="650" pos:column="41">0<pos:position pos:line="650" pos:column="42"/></literal></expr>)<pos:position pos:line="650" pos:column="43"/></condition><then pos:line="650" pos:column="43">
      <block type="pseudo"><return pos:line="651" pos:column="7">return <expr><call><name pos:line="651" pos:column="14">varnish_submit_derive<pos:position pos:line="651" pos:column="35"/></name><argument_list pos:line="651" pos:column="35">(<argument><expr><name><name pos:line="651" pos:column="36">conf<pos:position pos:line="651" pos:column="40"/></name><operator pos:line="651" pos:column="40">-&gt;<pos:position pos:line="651" pos:column="45"/></operator><name pos:line="651" pos:column="42">instance<pos:position pos:line="651" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="651" pos:column="52">category<pos:position pos:line="651" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="651" pos:column="62">"total_bytes"<pos:position pos:line="651" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="652" pos:column="36">"bytes_allocated"<pos:position pos:line="652" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="652" pos:column="55">val<pos:position pos:line="652" pos:column="58"/></name></expr></argument>)<pos:position pos:line="652" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="652" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="653" pos:column="5">else <if pos:line="653" pos:column="10">if <condition pos:line="653" pos:column="13">(<expr><call><name pos:line="653" pos:column="14">strcmp<pos:position pos:line="653" pos:column="20"/></name><argument_list pos:line="653" pos:column="20">(<argument><expr><name pos:line="653" pos:column="21">name<pos:position pos:line="653" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="653" pos:column="27">"c_freed"<pos:position pos:line="653" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="653" pos:column="37"/></argument_list></call> <operator pos:line="653" pos:column="38">==<pos:position pos:line="653" pos:column="40"/></operator> <literal type="number" pos:line="653" pos:column="41">0<pos:position pos:line="653" pos:column="42"/></literal></expr>)<pos:position pos:line="653" pos:column="43"/></condition><then pos:line="653" pos:column="43">
      <block type="pseudo"><return pos:line="654" pos:column="7">return <expr><call><name pos:line="654" pos:column="14">varnish_submit_derive<pos:position pos:line="654" pos:column="35"/></name><argument_list pos:line="654" pos:column="35">(<argument><expr><name><name pos:line="654" pos:column="36">conf<pos:position pos:line="654" pos:column="40"/></name><operator pos:line="654" pos:column="40">-&gt;<pos:position pos:line="654" pos:column="45"/></operator><name pos:line="654" pos:column="42">instance<pos:position pos:line="654" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="654" pos:column="52">category<pos:position pos:line="654" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="654" pos:column="62">"total_bytes"<pos:position pos:line="654" pos:column="75"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="655" pos:column="36">"bytes_freed"<pos:position pos:line="655" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="655" pos:column="51">val<pos:position pos:line="655" pos:column="54"/></name></expr></argument>)<pos:position pos:line="655" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="655" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="656" pos:column="5">else <if pos:line="656" pos:column="10">if <condition pos:line="656" pos:column="13">(<expr><call><name pos:line="656" pos:column="14">strcmp<pos:position pos:line="656" pos:column="20"/></name><argument_list pos:line="656" pos:column="20">(<argument><expr><name pos:line="656" pos:column="21">name<pos:position pos:line="656" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="656" pos:column="27">"g_alloc"<pos:position pos:line="656" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="656" pos:column="37"/></argument_list></call> <operator pos:line="656" pos:column="38">==<pos:position pos:line="656" pos:column="40"/></operator> <literal type="number" pos:line="656" pos:column="41">0<pos:position pos:line="656" pos:column="42"/></literal></expr>)<pos:position pos:line="656" pos:column="43"/></condition><then pos:line="656" pos:column="43">
      <block type="pseudo"><return pos:line="657" pos:column="7">return <expr><call><name pos:line="657" pos:column="14">varnish_submit_derive<pos:position pos:line="657" pos:column="35"/></name><argument_list pos:line="657" pos:column="35">(<argument><expr><name><name pos:line="657" pos:column="36">conf<pos:position pos:line="657" pos:column="40"/></name><operator pos:line="657" pos:column="40">-&gt;<pos:position pos:line="657" pos:column="45"/></operator><name pos:line="657" pos:column="42">instance<pos:position pos:line="657" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="657" pos:column="52">category<pos:position pos:line="657" pos:column="60"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="657" pos:column="62">"total_operations"<pos:position pos:line="657" pos:column="80"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="658" pos:column="36">"alloc_outstanding"<pos:position pos:line="658" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="658" pos:column="57">val<pos:position pos:line="658" pos:column="60"/></name></expr></argument>)<pos:position pos:line="658" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="658" pos:column="62"/></return></block></then></if></elseif>
    <elseif pos:line="659" pos:column="5">else <if pos:line="659" pos:column="10">if <condition pos:line="659" pos:column="13">(<expr><call><name pos:line="659" pos:column="14">strcmp<pos:position pos:line="659" pos:column="20"/></name><argument_list pos:line="659" pos:column="20">(<argument><expr><name pos:line="659" pos:column="21">name<pos:position pos:line="659" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="659" pos:column="27">"g_bytes"<pos:position pos:line="659" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="659" pos:column="37"/></argument_list></call> <operator pos:line="659" pos:column="38">==<pos:position pos:line="659" pos:column="40"/></operator> <literal type="number" pos:line="659" pos:column="41">0<pos:position pos:line="659" pos:column="42"/></literal></expr>)<pos:position pos:line="659" pos:column="43"/></condition><then pos:line="659" pos:column="43">
      <block type="pseudo"><return pos:line="660" pos:column="7">return <expr><call><name pos:line="660" pos:column="14">varnish_submit_gauge<pos:position pos:line="660" pos:column="34"/></name><argument_list pos:line="660" pos:column="34">(<argument><expr><name><name pos:line="660" pos:column="35">conf<pos:position pos:line="660" pos:column="39"/></name><operator pos:line="660" pos:column="39">-&gt;<pos:position pos:line="660" pos:column="44"/></operator><name pos:line="660" pos:column="41">instance<pos:position pos:line="660" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="660" pos:column="51">category<pos:position pos:line="660" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="660" pos:column="61">"bytes"<pos:position pos:line="660" pos:column="68"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="661" pos:column="35">"bytes_outstanding"<pos:position pos:line="661" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="661" pos:column="56">val<pos:position pos:line="661" pos:column="59"/></name></expr></argument>)<pos:position pos:line="661" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="661" pos:column="61"/></return></block></then></if></elseif>
    <elseif pos:line="662" pos:column="5">else <if pos:line="662" pos:column="10">if <condition pos:line="662" pos:column="13">(<expr><call><name pos:line="662" pos:column="14">strcmp<pos:position pos:line="662" pos:column="20"/></name><argument_list pos:line="662" pos:column="20">(<argument><expr><name pos:line="662" pos:column="21">name<pos:position pos:line="662" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="662" pos:column="27">"g_space"<pos:position pos:line="662" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="662" pos:column="37"/></argument_list></call> <operator pos:line="662" pos:column="38">==<pos:position pos:line="662" pos:column="40"/></operator> <literal type="number" pos:line="662" pos:column="41">0<pos:position pos:line="662" pos:column="42"/></literal></expr>)<pos:position pos:line="662" pos:column="43"/></condition><then pos:line="662" pos:column="43">
      <block type="pseudo"><return pos:line="663" pos:column="7">return <expr><call><name pos:line="663" pos:column="14">varnish_submit_gauge<pos:position pos:line="663" pos:column="34"/></name><argument_list pos:line="663" pos:column="34">(<argument><expr><name><name pos:line="663" pos:column="35">conf<pos:position pos:line="663" pos:column="39"/></name><operator pos:line="663" pos:column="39">-&gt;<pos:position pos:line="663" pos:column="44"/></operator><name pos:line="663" pos:column="41">instance<pos:position pos:line="663" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="663" pos:column="51">category<pos:position pos:line="663" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="663" pos:column="61">"bytes"<pos:position pos:line="663" pos:column="68"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="664" pos:column="35">"bytes_available"<pos:position pos:line="664" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="664" pos:column="54">val<pos:position pos:line="664" pos:column="57"/></name></expr></argument>)<pos:position pos:line="664" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="664" pos:column="59"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="665" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="667" pos:column="3">/* No SMA specific counters */</comment>

  <if pos:line="669" pos:column="3">if <condition pos:line="669" pos:column="6">(<expr><name><name pos:line="669" pos:column="7">conf<pos:position pos:line="669" pos:column="11"/></name><operator pos:line="669" pos:column="11">-&gt;<pos:position pos:line="669" pos:column="16"/></operator><name pos:line="669" pos:column="13">collect_smf<pos:position pos:line="669" pos:column="24"/></name></name></expr>)<pos:position pos:line="669" pos:column="25"/></condition><then pos:line="669" pos:column="25"> <block pos:line="669" pos:column="26">{
    <if pos:line="670" pos:column="5">if <condition pos:line="670" pos:column="8">(<expr><call><name pos:line="670" pos:column="9">strcmp<pos:position pos:line="670" pos:column="15"/></name><argument_list pos:line="670" pos:column="15">(<argument><expr><name pos:line="670" pos:column="16">name<pos:position pos:line="670" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="670" pos:column="22">"g_smf"<pos:position pos:line="670" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="670" pos:column="30"/></argument_list></call> <operator pos:line="670" pos:column="31">==<pos:position pos:line="670" pos:column="33"/></operator> <literal type="number" pos:line="670" pos:column="34">0<pos:position pos:line="670" pos:column="35"/></literal></expr>)<pos:position pos:line="670" pos:column="36"/></condition><then pos:line="670" pos:column="36">
      <block type="pseudo"><return pos:line="671" pos:column="7">return <expr><call><name pos:line="671" pos:column="14">varnish_submit_gauge<pos:position pos:line="671" pos:column="34"/></name><argument_list pos:line="671" pos:column="34">(<argument><expr><name><name pos:line="671" pos:column="35">conf<pos:position pos:line="671" pos:column="39"/></name><operator pos:line="671" pos:column="39">-&gt;<pos:position pos:line="671" pos:column="44"/></operator><name pos:line="671" pos:column="41">instance<pos:position pos:line="671" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="671" pos:column="51">"smf"<pos:position pos:line="671" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="671" pos:column="58">"objects"<pos:position pos:line="671" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="672" pos:column="35">"n_struct_smf"<pos:position pos:line="672" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="672" pos:column="51">val<pos:position pos:line="672" pos:column="54"/></name></expr></argument>)<pos:position pos:line="672" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="672" pos:column="56"/></return></block></then>
    <elseif pos:line="673" pos:column="5">else <if pos:line="673" pos:column="10">if <condition pos:line="673" pos:column="13">(<expr><call><name pos:line="673" pos:column="14">strcmp<pos:position pos:line="673" pos:column="20"/></name><argument_list pos:line="673" pos:column="20">(<argument><expr><name pos:line="673" pos:column="21">name<pos:position pos:line="673" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="673" pos:column="27">"g_smf_frag"<pos:position pos:line="673" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="673" pos:column="40"/></argument_list></call> <operator pos:line="673" pos:column="41">==<pos:position pos:line="673" pos:column="43"/></operator> <literal type="number" pos:line="673" pos:column="44">0<pos:position pos:line="673" pos:column="45"/></literal></expr>)<pos:position pos:line="673" pos:column="46"/></condition><then pos:line="673" pos:column="46">
      <block type="pseudo"><return pos:line="674" pos:column="7">return <expr><call><name pos:line="674" pos:column="14">varnish_submit_gauge<pos:position pos:line="674" pos:column="34"/></name><argument_list pos:line="674" pos:column="34">(<argument><expr><name><name pos:line="674" pos:column="35">conf<pos:position pos:line="674" pos:column="39"/></name><operator pos:line="674" pos:column="39">-&gt;<pos:position pos:line="674" pos:column="44"/></operator><name pos:line="674" pos:column="41">instance<pos:position pos:line="674" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="674" pos:column="51">"smf"<pos:position pos:line="674" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="674" pos:column="58">"objects"<pos:position pos:line="674" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="675" pos:column="35">"n_small_free_smf"<pos:position pos:line="675" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="675" pos:column="55">val<pos:position pos:line="675" pos:column="58"/></name></expr></argument>)<pos:position pos:line="675" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="675" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="676" pos:column="5">else <if pos:line="676" pos:column="10">if <condition pos:line="676" pos:column="13">(<expr><call><name pos:line="676" pos:column="14">strcmp<pos:position pos:line="676" pos:column="20"/></name><argument_list pos:line="676" pos:column="20">(<argument><expr><name pos:line="676" pos:column="21">name<pos:position pos:line="676" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="676" pos:column="27">"g_smf_large"<pos:position pos:line="676" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="676" pos:column="41"/></argument_list></call> <operator pos:line="676" pos:column="42">==<pos:position pos:line="676" pos:column="44"/></operator> <literal type="number" pos:line="676" pos:column="45">0<pos:position pos:line="676" pos:column="46"/></literal></expr>)<pos:position pos:line="676" pos:column="47"/></condition><then pos:line="676" pos:column="47">
      <block type="pseudo"><return pos:line="677" pos:column="7">return <expr><call><name pos:line="677" pos:column="14">varnish_submit_gauge<pos:position pos:line="677" pos:column="34"/></name><argument_list pos:line="677" pos:column="34">(<argument><expr><name><name pos:line="677" pos:column="35">conf<pos:position pos:line="677" pos:column="39"/></name><operator pos:line="677" pos:column="39">-&gt;<pos:position pos:line="677" pos:column="44"/></operator><name pos:line="677" pos:column="41">instance<pos:position pos:line="677" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="677" pos:column="51">"smf"<pos:position pos:line="677" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="677" pos:column="58">"objects"<pos:position pos:line="677" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="678" pos:column="35">"n_large_free_smf"<pos:position pos:line="678" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="678" pos:column="55">val<pos:position pos:line="678" pos:column="58"/></name></expr></argument>)<pos:position pos:line="678" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="678" pos:column="60"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="679" pos:column="4"/></block></then></if>

  <if pos:line="681" pos:column="3">if <condition pos:line="681" pos:column="6">(<expr><name><name pos:line="681" pos:column="7">conf<pos:position pos:line="681" pos:column="11"/></name><operator pos:line="681" pos:column="11">-&gt;<pos:position pos:line="681" pos:column="16"/></operator><name pos:line="681" pos:column="13">collect_mgt<pos:position pos:line="681" pos:column="24"/></name></name></expr>)<pos:position pos:line="681" pos:column="25"/></condition><then pos:line="681" pos:column="25"> <block pos:line="681" pos:column="26">{
    <if pos:line="682" pos:column="5">if <condition pos:line="682" pos:column="8">(<expr><call><name pos:line="682" pos:column="9">strcmp<pos:position pos:line="682" pos:column="15"/></name><argument_list pos:line="682" pos:column="15">(<argument><expr><name pos:line="682" pos:column="16">name<pos:position pos:line="682" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="682" pos:column="22">"uptime"<pos:position pos:line="682" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="682" pos:column="31"/></argument_list></call> <operator pos:line="682" pos:column="32">==<pos:position pos:line="682" pos:column="34"/></operator> <literal type="number" pos:line="682" pos:column="35">0<pos:position pos:line="682" pos:column="36"/></literal></expr>)<pos:position pos:line="682" pos:column="37"/></condition><then pos:line="682" pos:column="37">
      <block type="pseudo"><return pos:line="683" pos:column="7">return <expr><call><name pos:line="683" pos:column="14">varnish_submit_gauge<pos:position pos:line="683" pos:column="34"/></name><argument_list pos:line="683" pos:column="34">(<argument><expr><name><name pos:line="683" pos:column="35">conf<pos:position pos:line="683" pos:column="39"/></name><operator pos:line="683" pos:column="39">-&gt;<pos:position pos:line="683" pos:column="44"/></operator><name pos:line="683" pos:column="41">instance<pos:position pos:line="683" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="683" pos:column="51">"mgt"<pos:position pos:line="683" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="683" pos:column="58">"uptime"<pos:position pos:line="683" pos:column="66"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="684" pos:column="35">"mgt_proc_uptime"<pos:position pos:line="684" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="684" pos:column="54">val<pos:position pos:line="684" pos:column="57"/></name></expr></argument>)<pos:position pos:line="684" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="684" pos:column="59"/></return></block></then>
    <elseif pos:line="685" pos:column="5">else <if pos:line="685" pos:column="10">if <condition pos:line="685" pos:column="13">(<expr><call><name pos:line="685" pos:column="14">strcmp<pos:position pos:line="685" pos:column="20"/></name><argument_list pos:line="685" pos:column="20">(<argument><expr><name pos:line="685" pos:column="21">name<pos:position pos:line="685" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="685" pos:column="27">"child_start"<pos:position pos:line="685" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="685" pos:column="41"/></argument_list></call> <operator pos:line="685" pos:column="42">==<pos:position pos:line="685" pos:column="44"/></operator> <literal type="number" pos:line="685" pos:column="45">0<pos:position pos:line="685" pos:column="46"/></literal></expr>)<pos:position pos:line="685" pos:column="47"/></condition><then pos:line="685" pos:column="47">
      <block type="pseudo"><return pos:line="686" pos:column="7">return <expr><call><name pos:line="686" pos:column="14">varnish_submit_derive<pos:position pos:line="686" pos:column="35"/></name><argument_list pos:line="686" pos:column="35">(<argument><expr><name><name pos:line="686" pos:column="36">conf<pos:position pos:line="686" pos:column="40"/></name><operator pos:line="686" pos:column="40">-&gt;<pos:position pos:line="686" pos:column="45"/></operator><name pos:line="686" pos:column="42">instance<pos:position pos:line="686" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="686" pos:column="52">"mgt"<pos:position pos:line="686" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="686" pos:column="59">"total_operations"<pos:position pos:line="686" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="687" pos:column="36">"child_start"<pos:position pos:line="687" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="687" pos:column="51">val<pos:position pos:line="687" pos:column="54"/></name></expr></argument>)<pos:position pos:line="687" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="687" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="688" pos:column="5">else <if pos:line="688" pos:column="10">if <condition pos:line="688" pos:column="13">(<expr><call><name pos:line="688" pos:column="14">strcmp<pos:position pos:line="688" pos:column="20"/></name><argument_list pos:line="688" pos:column="20">(<argument><expr><name pos:line="688" pos:column="21">name<pos:position pos:line="688" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="688" pos:column="27">"child_exit"<pos:position pos:line="688" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="688" pos:column="40"/></argument_list></call> <operator pos:line="688" pos:column="41">==<pos:position pos:line="688" pos:column="43"/></operator> <literal type="number" pos:line="688" pos:column="44">0<pos:position pos:line="688" pos:column="45"/></literal></expr>)<pos:position pos:line="688" pos:column="46"/></condition><then pos:line="688" pos:column="46">
      <block type="pseudo"><return pos:line="689" pos:column="7">return <expr><call><name pos:line="689" pos:column="14">varnish_submit_derive<pos:position pos:line="689" pos:column="35"/></name><argument_list pos:line="689" pos:column="35">(<argument><expr><name><name pos:line="689" pos:column="36">conf<pos:position pos:line="689" pos:column="40"/></name><operator pos:line="689" pos:column="40">-&gt;<pos:position pos:line="689" pos:column="45"/></operator><name pos:line="689" pos:column="42">instance<pos:position pos:line="689" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="689" pos:column="52">"mgt"<pos:position pos:line="689" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="689" pos:column="59">"total_operations"<pos:position pos:line="689" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="690" pos:column="36">"child_exit"<pos:position pos:line="690" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="690" pos:column="50">val<pos:position pos:line="690" pos:column="53"/></name></expr></argument>)<pos:position pos:line="690" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="690" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="691" pos:column="5">else <if pos:line="691" pos:column="10">if <condition pos:line="691" pos:column="13">(<expr><call><name pos:line="691" pos:column="14">strcmp<pos:position pos:line="691" pos:column="20"/></name><argument_list pos:line="691" pos:column="20">(<argument><expr><name pos:line="691" pos:column="21">name<pos:position pos:line="691" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="691" pos:column="27">"child_stop"<pos:position pos:line="691" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="691" pos:column="40"/></argument_list></call> <operator pos:line="691" pos:column="41">==<pos:position pos:line="691" pos:column="43"/></operator> <literal type="number" pos:line="691" pos:column="44">0<pos:position pos:line="691" pos:column="45"/></literal></expr>)<pos:position pos:line="691" pos:column="46"/></condition><then pos:line="691" pos:column="46">
      <block type="pseudo"><return pos:line="692" pos:column="7">return <expr><call><name pos:line="692" pos:column="14">varnish_submit_derive<pos:position pos:line="692" pos:column="35"/></name><argument_list pos:line="692" pos:column="35">(<argument><expr><name><name pos:line="692" pos:column="36">conf<pos:position pos:line="692" pos:column="40"/></name><operator pos:line="692" pos:column="40">-&gt;<pos:position pos:line="692" pos:column="45"/></operator><name pos:line="692" pos:column="42">instance<pos:position pos:line="692" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="692" pos:column="52">"mgt"<pos:position pos:line="692" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="692" pos:column="59">"total_operations"<pos:position pos:line="692" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="693" pos:column="36">"child_stop"<pos:position pos:line="693" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="693" pos:column="50">val<pos:position pos:line="693" pos:column="53"/></name></expr></argument>)<pos:position pos:line="693" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="693" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="694" pos:column="5">else <if pos:line="694" pos:column="10">if <condition pos:line="694" pos:column="13">(<expr><call><name pos:line="694" pos:column="14">strcmp<pos:position pos:line="694" pos:column="20"/></name><argument_list pos:line="694" pos:column="20">(<argument><expr><name pos:line="694" pos:column="21">name<pos:position pos:line="694" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="694" pos:column="27">"child_died"<pos:position pos:line="694" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="694" pos:column="40"/></argument_list></call> <operator pos:line="694" pos:column="41">==<pos:position pos:line="694" pos:column="43"/></operator> <literal type="number" pos:line="694" pos:column="44">0<pos:position pos:line="694" pos:column="45"/></literal></expr>)<pos:position pos:line="694" pos:column="46"/></condition><then pos:line="694" pos:column="46">
      <block type="pseudo"><return pos:line="695" pos:column="7">return <expr><call><name pos:line="695" pos:column="14">varnish_submit_derive<pos:position pos:line="695" pos:column="35"/></name><argument_list pos:line="695" pos:column="35">(<argument><expr><name><name pos:line="695" pos:column="36">conf<pos:position pos:line="695" pos:column="40"/></name><operator pos:line="695" pos:column="40">-&gt;<pos:position pos:line="695" pos:column="45"/></operator><name pos:line="695" pos:column="42">instance<pos:position pos:line="695" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="695" pos:column="52">"mgt"<pos:position pos:line="695" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="695" pos:column="59">"total_operations"<pos:position pos:line="695" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="696" pos:column="36">"child_died"<pos:position pos:line="696" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="696" pos:column="50">val<pos:position pos:line="696" pos:column="53"/></name></expr></argument>)<pos:position pos:line="696" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="696" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="697" pos:column="5">else <if pos:line="697" pos:column="10">if <condition pos:line="697" pos:column="13">(<expr><call><name pos:line="697" pos:column="14">strcmp<pos:position pos:line="697" pos:column="20"/></name><argument_list pos:line="697" pos:column="20">(<argument><expr><name pos:line="697" pos:column="21">name<pos:position pos:line="697" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="697" pos:column="27">"child_dump"<pos:position pos:line="697" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="697" pos:column="40"/></argument_list></call> <operator pos:line="697" pos:column="41">==<pos:position pos:line="697" pos:column="43"/></operator> <literal type="number" pos:line="697" pos:column="44">0<pos:position pos:line="697" pos:column="45"/></literal></expr>)<pos:position pos:line="697" pos:column="46"/></condition><then pos:line="697" pos:column="46">
      <block type="pseudo"><return pos:line="698" pos:column="7">return <expr><call><name pos:line="698" pos:column="14">varnish_submit_derive<pos:position pos:line="698" pos:column="35"/></name><argument_list pos:line="698" pos:column="35">(<argument><expr><name><name pos:line="698" pos:column="36">conf<pos:position pos:line="698" pos:column="40"/></name><operator pos:line="698" pos:column="40">-&gt;<pos:position pos:line="698" pos:column="45"/></operator><name pos:line="698" pos:column="42">instance<pos:position pos:line="698" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="698" pos:column="52">"mgt"<pos:position pos:line="698" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="698" pos:column="59">"total_operations"<pos:position pos:line="698" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="699" pos:column="36">"child_dump"<pos:position pos:line="699" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="699" pos:column="50">val<pos:position pos:line="699" pos:column="53"/></name></expr></argument>)<pos:position pos:line="699" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="699" pos:column="55"/></return></block></then></if></elseif>
    <elseif pos:line="700" pos:column="5">else <if pos:line="700" pos:column="10">if <condition pos:line="700" pos:column="13">(<expr><call><name pos:line="700" pos:column="14">strcmp<pos:position pos:line="700" pos:column="20"/></name><argument_list pos:line="700" pos:column="20">(<argument><expr><name pos:line="700" pos:column="21">name<pos:position pos:line="700" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="700" pos:column="27">"child_panic"<pos:position pos:line="700" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="700" pos:column="41"/></argument_list></call> <operator pos:line="700" pos:column="42">==<pos:position pos:line="700" pos:column="44"/></operator> <literal type="number" pos:line="700" pos:column="45">0<pos:position pos:line="700" pos:column="46"/></literal></expr>)<pos:position pos:line="700" pos:column="47"/></condition><then pos:line="700" pos:column="47">
      <block type="pseudo"><return pos:line="701" pos:column="7">return <expr><call><name pos:line="701" pos:column="14">varnish_submit_derive<pos:position pos:line="701" pos:column="35"/></name><argument_list pos:line="701" pos:column="35">(<argument><expr><name><name pos:line="701" pos:column="36">conf<pos:position pos:line="701" pos:column="40"/></name><operator pos:line="701" pos:column="40">-&gt;<pos:position pos:line="701" pos:column="45"/></operator><name pos:line="701" pos:column="42">instance<pos:position pos:line="701" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="701" pos:column="52">"mgt"<pos:position pos:line="701" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="701" pos:column="59">"total_operations"<pos:position pos:line="701" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="702" pos:column="36">"child_panic"<pos:position pos:line="702" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="702" pos:column="51">val<pos:position pos:line="702" pos:column="54"/></name></expr></argument>)<pos:position pos:line="702" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="702" pos:column="56"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="703" pos:column="4"/></block></then></if>

  <if pos:line="705" pos:column="3">if <condition pos:line="705" pos:column="6">(<expr><name><name pos:line="705" pos:column="7">conf<pos:position pos:line="705" pos:column="11"/></name><operator pos:line="705" pos:column="11">-&gt;<pos:position pos:line="705" pos:column="16"/></operator><name pos:line="705" pos:column="13">collect_lck<pos:position pos:line="705" pos:column="24"/></name></name></expr>)<pos:position pos:line="705" pos:column="25"/></condition><then pos:line="705" pos:column="25"> <block pos:line="705" pos:column="26">{
    <if pos:line="706" pos:column="5">if <condition pos:line="706" pos:column="8">(<expr><call><name pos:line="706" pos:column="9">strcmp<pos:position pos:line="706" pos:column="15"/></name><argument_list pos:line="706" pos:column="15">(<argument><expr><name pos:line="706" pos:column="16">name<pos:position pos:line="706" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="706" pos:column="22">"creat"<pos:position pos:line="706" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="706" pos:column="30"/></argument_list></call> <operator pos:line="706" pos:column="31">==<pos:position pos:line="706" pos:column="33"/></operator> <literal type="number" pos:line="706" pos:column="34">0<pos:position pos:line="706" pos:column="35"/></literal></expr>)<pos:position pos:line="706" pos:column="36"/></condition><then pos:line="706" pos:column="36">
      <block type="pseudo"><return pos:line="707" pos:column="7">return <expr><call><name pos:line="707" pos:column="14">varnish_submit_gauge<pos:position pos:line="707" pos:column="34"/></name><argument_list pos:line="707" pos:column="34">(<argument><expr><name><name pos:line="707" pos:column="35">conf<pos:position pos:line="707" pos:column="39"/></name><operator pos:line="707" pos:column="39">-&gt;<pos:position pos:line="707" pos:column="44"/></operator><name pos:line="707" pos:column="41">instance<pos:position pos:line="707" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="707" pos:column="51">"lck"<pos:position pos:line="707" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="707" pos:column="58">"objects"<pos:position pos:line="707" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="707" pos:column="69">"created"<pos:position pos:line="707" pos:column="78"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="708" pos:column="35">val<pos:position pos:line="708" pos:column="38"/></name></expr></argument>)<pos:position pos:line="708" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="708" pos:column="40"/></return></block></then>
    <elseif pos:line="709" pos:column="5">else <if pos:line="709" pos:column="10">if <condition pos:line="709" pos:column="13">(<expr><call><name pos:line="709" pos:column="14">strcmp<pos:position pos:line="709" pos:column="20"/></name><argument_list pos:line="709" pos:column="20">(<argument><expr><name pos:line="709" pos:column="21">name<pos:position pos:line="709" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="709" pos:column="27">"destroy"<pos:position pos:line="709" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="709" pos:column="37"/></argument_list></call> <operator pos:line="709" pos:column="38">==<pos:position pos:line="709" pos:column="40"/></operator> <literal type="number" pos:line="709" pos:column="41">0<pos:position pos:line="709" pos:column="42"/></literal></expr>)<pos:position pos:line="709" pos:column="43"/></condition><then pos:line="709" pos:column="43">
      <block type="pseudo"><return pos:line="710" pos:column="7">return <expr><call><name pos:line="710" pos:column="14">varnish_submit_gauge<pos:position pos:line="710" pos:column="34"/></name><argument_list pos:line="710" pos:column="34">(<argument><expr><name><name pos:line="710" pos:column="35">conf<pos:position pos:line="710" pos:column="39"/></name><operator pos:line="710" pos:column="39">-&gt;<pos:position pos:line="710" pos:column="44"/></operator><name pos:line="710" pos:column="41">instance<pos:position pos:line="710" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="710" pos:column="51">"lck"<pos:position pos:line="710" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="710" pos:column="58">"objects"<pos:position pos:line="710" pos:column="67"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="710" pos:column="69">"destroyed"<pos:position pos:line="710" pos:column="80"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="711" pos:column="35">val<pos:position pos:line="711" pos:column="38"/></name></expr></argument>)<pos:position pos:line="711" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="711" pos:column="40"/></return></block></then></if></elseif>
    <elseif pos:line="712" pos:column="5">else <if pos:line="712" pos:column="10">if <condition pos:line="712" pos:column="13">(<expr><call><name pos:line="712" pos:column="14">strcmp<pos:position pos:line="712" pos:column="20"/></name><argument_list pos:line="712" pos:column="20">(<argument><expr><name pos:line="712" pos:column="21">name<pos:position pos:line="712" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="712" pos:column="27">"locks"<pos:position pos:line="712" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="712" pos:column="35"/></argument_list></call> <operator pos:line="712" pos:column="36">==<pos:position pos:line="712" pos:column="38"/></operator> <literal type="number" pos:line="712" pos:column="39">0<pos:position pos:line="712" pos:column="40"/></literal></expr>)<pos:position pos:line="712" pos:column="41"/></condition><then pos:line="712" pos:column="41">
      <block type="pseudo"><return pos:line="713" pos:column="7">return <expr><call><name pos:line="713" pos:column="14">varnish_submit_derive<pos:position pos:line="713" pos:column="35"/></name><argument_list pos:line="713" pos:column="35">(<argument><expr><name><name pos:line="713" pos:column="36">conf<pos:position pos:line="713" pos:column="40"/></name><operator pos:line="713" pos:column="40">-&gt;<pos:position pos:line="713" pos:column="45"/></operator><name pos:line="713" pos:column="42">instance<pos:position pos:line="713" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="713" pos:column="52">"lck"<pos:position pos:line="713" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="713" pos:column="59">"total_operations"<pos:position pos:line="713" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="714" pos:column="36">"lock_ops"<pos:position pos:line="714" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="714" pos:column="48">val<pos:position pos:line="714" pos:column="51"/></name></expr></argument>)<pos:position pos:line="714" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="714" pos:column="53"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="715" pos:column="4"/></block></then></if>

  <if pos:line="717" pos:column="3">if <condition pos:line="717" pos:column="6">(<expr><name><name pos:line="717" pos:column="7">conf<pos:position pos:line="717" pos:column="11"/></name><operator pos:line="717" pos:column="11">-&gt;<pos:position pos:line="717" pos:column="16"/></operator><name pos:line="717" pos:column="13">collect_mempool<pos:position pos:line="717" pos:column="28"/></name></name></expr>)<pos:position pos:line="717" pos:column="29"/></condition><then pos:line="717" pos:column="29"> <block pos:line="717" pos:column="30">{
    <if pos:line="718" pos:column="5">if <condition pos:line="718" pos:column="8">(<expr><call><name pos:line="718" pos:column="9">strcmp<pos:position pos:line="718" pos:column="15"/></name><argument_list pos:line="718" pos:column="15">(<argument><expr><name pos:line="718" pos:column="16">name<pos:position pos:line="718" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="718" pos:column="22">"live"<pos:position pos:line="718" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="718" pos:column="29"/></argument_list></call> <operator pos:line="718" pos:column="30">==<pos:position pos:line="718" pos:column="32"/></operator> <literal type="number" pos:line="718" pos:column="33">0<pos:position pos:line="718" pos:column="34"/></literal></expr>)<pos:position pos:line="718" pos:column="35"/></condition><then pos:line="718" pos:column="35">
      <block type="pseudo"><return pos:line="719" pos:column="7">return <expr><call><name pos:line="719" pos:column="14">varnish_submit_gauge<pos:position pos:line="719" pos:column="34"/></name><argument_list pos:line="719" pos:column="34">(<argument><expr><name><name pos:line="719" pos:column="35">conf<pos:position pos:line="719" pos:column="39"/></name><operator pos:line="719" pos:column="39">-&gt;<pos:position pos:line="719" pos:column="44"/></operator><name pos:line="719" pos:column="41">instance<pos:position pos:line="719" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="719" pos:column="51">"mempool"<pos:position pos:line="719" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="719" pos:column="62">"objects"<pos:position pos:line="719" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="720" pos:column="35">"in_use"<pos:position pos:line="720" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="720" pos:column="45">val<pos:position pos:line="720" pos:column="48"/></name></expr></argument>)<pos:position pos:line="720" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="720" pos:column="50"/></return></block></then>
    <elseif pos:line="721" pos:column="5">else <if pos:line="721" pos:column="10">if <condition pos:line="721" pos:column="13">(<expr><call><name pos:line="721" pos:column="14">strcmp<pos:position pos:line="721" pos:column="20"/></name><argument_list pos:line="721" pos:column="20">(<argument><expr><name pos:line="721" pos:column="21">name<pos:position pos:line="721" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="721" pos:column="27">"pool"<pos:position pos:line="721" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="721" pos:column="34"/></argument_list></call> <operator pos:line="721" pos:column="35">==<pos:position pos:line="721" pos:column="37"/></operator> <literal type="number" pos:line="721" pos:column="38">0<pos:position pos:line="721" pos:column="39"/></literal></expr>)<pos:position pos:line="721" pos:column="40"/></condition><then pos:line="721" pos:column="40">
      <block type="pseudo"><return pos:line="722" pos:column="7">return <expr><call><name pos:line="722" pos:column="14">varnish_submit_gauge<pos:position pos:line="722" pos:column="34"/></name><argument_list pos:line="722" pos:column="34">(<argument><expr><name><name pos:line="722" pos:column="35">conf<pos:position pos:line="722" pos:column="39"/></name><operator pos:line="722" pos:column="39">-&gt;<pos:position pos:line="722" pos:column="44"/></operator><name pos:line="722" pos:column="41">instance<pos:position pos:line="722" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="722" pos:column="51">"mempool"<pos:position pos:line="722" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="722" pos:column="62">"objects"<pos:position pos:line="722" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="723" pos:column="35">"in_pool"<pos:position pos:line="723" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="723" pos:column="46">val<pos:position pos:line="723" pos:column="49"/></name></expr></argument>)<pos:position pos:line="723" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="723" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="724" pos:column="5">else <if pos:line="724" pos:column="10">if <condition pos:line="724" pos:column="13">(<expr><call><name pos:line="724" pos:column="14">strcmp<pos:position pos:line="724" pos:column="20"/></name><argument_list pos:line="724" pos:column="20">(<argument><expr><name pos:line="724" pos:column="21">name<pos:position pos:line="724" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="724" pos:column="27">"sz_wanted"<pos:position pos:line="724" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="724" pos:column="39"/></argument_list></call> <operator pos:line="724" pos:column="40">==<pos:position pos:line="724" pos:column="42"/></operator> <literal type="number" pos:line="724" pos:column="43">0<pos:position pos:line="724" pos:column="44"/></literal></expr>)<pos:position pos:line="724" pos:column="45"/></condition><then pos:line="724" pos:column="45">
      <block type="pseudo"><return pos:line="725" pos:column="7">return <expr><call><name pos:line="725" pos:column="14">varnish_submit_gauge<pos:position pos:line="725" pos:column="34"/></name><argument_list pos:line="725" pos:column="34">(<argument><expr><name><name pos:line="725" pos:column="35">conf<pos:position pos:line="725" pos:column="39"/></name><operator pos:line="725" pos:column="39">-&gt;<pos:position pos:line="725" pos:column="44"/></operator><name pos:line="725" pos:column="41">instance<pos:position pos:line="725" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="725" pos:column="51">"mempool"<pos:position pos:line="725" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="725" pos:column="62">"bytes"<pos:position pos:line="725" pos:column="69"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="726" pos:column="35">"size_requested"<pos:position pos:line="726" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="726" pos:column="53">val<pos:position pos:line="726" pos:column="56"/></name></expr></argument>)<pos:position pos:line="726" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="726" pos:column="58"/></return></block></then></if></elseif>
    <elseif pos:line="727" pos:column="5">else <if pos:line="727" pos:column="10">if <condition pos:line="727" pos:column="13">(<expr><call><name pos:line="727" pos:column="14">strcmp<pos:position pos:line="727" pos:column="20"/></name><argument_list pos:line="727" pos:column="20">(<argument><expr><name pos:line="727" pos:column="21">name<pos:position pos:line="727" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="727" pos:column="27">"sz_actual"<pos:position pos:line="727" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="727" pos:column="39"/></argument_list></call> <operator pos:line="727" pos:column="40">==<pos:position pos:line="727" pos:column="42"/></operator> <literal type="number" pos:line="727" pos:column="43">0<pos:position pos:line="727" pos:column="44"/></literal></expr>)<pos:position pos:line="727" pos:column="45"/></condition><then pos:line="727" pos:column="45">
      <block type="pseudo"><return pos:line="728" pos:column="7">return <expr><call><name pos:line="728" pos:column="14">varnish_submit_gauge<pos:position pos:line="728" pos:column="34"/></name><argument_list pos:line="728" pos:column="34">(<argument><expr><name><name pos:line="728" pos:column="35">conf<pos:position pos:line="728" pos:column="39"/></name><operator pos:line="728" pos:column="39">-&gt;<pos:position pos:line="728" pos:column="44"/></operator><name pos:line="728" pos:column="41">instance<pos:position pos:line="728" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="728" pos:column="51">"mempool"<pos:position pos:line="728" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="728" pos:column="62">"bytes"<pos:position pos:line="728" pos:column="69"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="729" pos:column="35">"size_allocated"<pos:position pos:line="729" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="729" pos:column="53">val<pos:position pos:line="729" pos:column="56"/></name></expr></argument>)<pos:position pos:line="729" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="729" pos:column="58"/></return></block></then></if></elseif>
    <elseif pos:line="730" pos:column="5">else <if pos:line="730" pos:column="10">if <condition pos:line="730" pos:column="13">(<expr><call><name pos:line="730" pos:column="14">strcmp<pos:position pos:line="730" pos:column="20"/></name><argument_list pos:line="730" pos:column="20">(<argument><expr><name pos:line="730" pos:column="21">name<pos:position pos:line="730" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="730" pos:column="27">"allocs"<pos:position pos:line="730" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="730" pos:column="36"/></argument_list></call> <operator pos:line="730" pos:column="37">==<pos:position pos:line="730" pos:column="39"/></operator> <literal type="number" pos:line="730" pos:column="40">0<pos:position pos:line="730" pos:column="41"/></literal></expr>)<pos:position pos:line="730" pos:column="42"/></condition><then pos:line="730" pos:column="42">
      <block type="pseudo"><return pos:line="731" pos:column="7">return <expr><call><name pos:line="731" pos:column="14">varnish_submit_derive<pos:position pos:line="731" pos:column="35"/></name><argument_list pos:line="731" pos:column="35">(<argument><expr><name><name pos:line="731" pos:column="36">conf<pos:position pos:line="731" pos:column="40"/></name><operator pos:line="731" pos:column="40">-&gt;<pos:position pos:line="731" pos:column="45"/></operator><name pos:line="731" pos:column="42">instance<pos:position pos:line="731" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="731" pos:column="52">"mempool"<pos:position pos:line="731" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="732" pos:column="36">"total_operations"<pos:position pos:line="732" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="732" pos:column="56">"allocations"<pos:position pos:line="732" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="732" pos:column="71">val<pos:position pos:line="732" pos:column="74"/></name></expr></argument>)<pos:position pos:line="732" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="732" pos:column="76"/></return></block></then></if></elseif>
    <elseif pos:line="733" pos:column="5">else <if pos:line="733" pos:column="10">if <condition pos:line="733" pos:column="13">(<expr><call><name pos:line="733" pos:column="14">strcmp<pos:position pos:line="733" pos:column="20"/></name><argument_list pos:line="733" pos:column="20">(<argument><expr><name pos:line="733" pos:column="21">name<pos:position pos:line="733" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="733" pos:column="27">"frees"<pos:position pos:line="733" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="733" pos:column="35"/></argument_list></call> <operator pos:line="733" pos:column="36">==<pos:position pos:line="733" pos:column="38"/></operator> <literal type="number" pos:line="733" pos:column="39">0<pos:position pos:line="733" pos:column="40"/></literal></expr>)<pos:position pos:line="733" pos:column="41"/></condition><then pos:line="733" pos:column="41">
      <block type="pseudo"><return pos:line="734" pos:column="7">return <expr><call><name pos:line="734" pos:column="14">varnish_submit_derive<pos:position pos:line="734" pos:column="35"/></name><argument_list pos:line="734" pos:column="35">(<argument><expr><name><name pos:line="734" pos:column="36">conf<pos:position pos:line="734" pos:column="40"/></name><operator pos:line="734" pos:column="40">-&gt;<pos:position pos:line="734" pos:column="45"/></operator><name pos:line="734" pos:column="42">instance<pos:position pos:line="734" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="734" pos:column="52">"mempool"<pos:position pos:line="734" pos:column="61"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="735" pos:column="36">"total_operations"<pos:position pos:line="735" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="735" pos:column="56">"frees"<pos:position pos:line="735" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="735" pos:column="65">val<pos:position pos:line="735" pos:column="68"/></name></expr></argument>)<pos:position pos:line="735" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="735" pos:column="70"/></return></block></then></if></elseif>
    <elseif pos:line="736" pos:column="5">else <if pos:line="736" pos:column="10">if <condition pos:line="736" pos:column="13">(<expr><call><name pos:line="736" pos:column="14">strcmp<pos:position pos:line="736" pos:column="20"/></name><argument_list pos:line="736" pos:column="20">(<argument><expr><name pos:line="736" pos:column="21">name<pos:position pos:line="736" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="736" pos:column="27">"recycle"<pos:position pos:line="736" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="736" pos:column="37"/></argument_list></call> <operator pos:line="736" pos:column="38">==<pos:position pos:line="736" pos:column="40"/></operator> <literal type="number" pos:line="736" pos:column="41">0<pos:position pos:line="736" pos:column="42"/></literal></expr>)<pos:position pos:line="736" pos:column="43"/></condition><then pos:line="736" pos:column="43">
      <block type="pseudo"><return pos:line="737" pos:column="7">return <expr><call><name pos:line="737" pos:column="14">varnish_submit_gauge<pos:position pos:line="737" pos:column="34"/></name><argument_list pos:line="737" pos:column="34">(<argument><expr><name><name pos:line="737" pos:column="35">conf<pos:position pos:line="737" pos:column="39"/></name><operator pos:line="737" pos:column="39">-&gt;<pos:position pos:line="737" pos:column="44"/></operator><name pos:line="737" pos:column="41">instance<pos:position pos:line="737" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="737" pos:column="51">"mempool"<pos:position pos:line="737" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="737" pos:column="62">"objects"<pos:position pos:line="737" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="738" pos:column="35">"recycled"<pos:position pos:line="738" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="738" pos:column="47">val<pos:position pos:line="738" pos:column="50"/></name></expr></argument>)<pos:position pos:line="738" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="738" pos:column="52"/></return></block></then></if></elseif>
    <elseif pos:line="739" pos:column="5">else <if pos:line="739" pos:column="10">if <condition pos:line="739" pos:column="13">(<expr><call><name pos:line="739" pos:column="14">strcmp<pos:position pos:line="739" pos:column="20"/></name><argument_list pos:line="739" pos:column="20">(<argument><expr><name pos:line="739" pos:column="21">name<pos:position pos:line="739" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="739" pos:column="27">"timeout"<pos:position pos:line="739" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="739" pos:column="37"/></argument_list></call> <operator pos:line="739" pos:column="38">==<pos:position pos:line="739" pos:column="40"/></operator> <literal type="number" pos:line="739" pos:column="41">0<pos:position pos:line="739" pos:column="42"/></literal></expr>)<pos:position pos:line="739" pos:column="43"/></condition><then pos:line="739" pos:column="43">
      <block type="pseudo"><return pos:line="740" pos:column="7">return <expr><call><name pos:line="740" pos:column="14">varnish_submit_gauge<pos:position pos:line="740" pos:column="34"/></name><argument_list pos:line="740" pos:column="34">(<argument><expr><name><name pos:line="740" pos:column="35">conf<pos:position pos:line="740" pos:column="39"/></name><operator pos:line="740" pos:column="39">-&gt;<pos:position pos:line="740" pos:column="44"/></operator><name pos:line="740" pos:column="41">instance<pos:position pos:line="740" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="740" pos:column="51">"mempool"<pos:position pos:line="740" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="740" pos:column="62">"objects"<pos:position pos:line="740" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="741" pos:column="35">"timed_out"<pos:position pos:line="741" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="741" pos:column="48">val<pos:position pos:line="741" pos:column="51"/></name></expr></argument>)<pos:position pos:line="741" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="741" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="742" pos:column="5">else <if pos:line="742" pos:column="10">if <condition pos:line="742" pos:column="13">(<expr><call><name pos:line="742" pos:column="14">strcmp<pos:position pos:line="742" pos:column="20"/></name><argument_list pos:line="742" pos:column="20">(<argument><expr><name pos:line="742" pos:column="21">name<pos:position pos:line="742" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="742" pos:column="27">"toosmall"<pos:position pos:line="742" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="742" pos:column="38"/></argument_list></call> <operator pos:line="742" pos:column="39">==<pos:position pos:line="742" pos:column="41"/></operator> <literal type="number" pos:line="742" pos:column="42">0<pos:position pos:line="742" pos:column="43"/></literal></expr>)<pos:position pos:line="742" pos:column="44"/></condition><then pos:line="742" pos:column="44">
      <block type="pseudo"><return pos:line="743" pos:column="7">return <expr><call><name pos:line="743" pos:column="14">varnish_submit_gauge<pos:position pos:line="743" pos:column="34"/></name><argument_list pos:line="743" pos:column="34">(<argument><expr><name><name pos:line="743" pos:column="35">conf<pos:position pos:line="743" pos:column="39"/></name><operator pos:line="743" pos:column="39">-&gt;<pos:position pos:line="743" pos:column="44"/></operator><name pos:line="743" pos:column="41">instance<pos:position pos:line="743" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="743" pos:column="51">"mempool"<pos:position pos:line="743" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="743" pos:column="62">"objects"<pos:position pos:line="743" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="744" pos:column="35">"too_small"<pos:position pos:line="744" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="744" pos:column="48">val<pos:position pos:line="744" pos:column="51"/></name></expr></argument>)<pos:position pos:line="744" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="744" pos:column="53"/></return></block></then></if></elseif>
    <elseif pos:line="745" pos:column="5">else <if pos:line="745" pos:column="10">if <condition pos:line="745" pos:column="13">(<expr><call><name pos:line="745" pos:column="14">strcmp<pos:position pos:line="745" pos:column="20"/></name><argument_list pos:line="745" pos:column="20">(<argument><expr><name pos:line="745" pos:column="21">name<pos:position pos:line="745" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="745" pos:column="27">"surplus"<pos:position pos:line="745" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="745" pos:column="37"/></argument_list></call> <operator pos:line="745" pos:column="38">==<pos:position pos:line="745" pos:column="40"/></operator> <literal type="number" pos:line="745" pos:column="41">0<pos:position pos:line="745" pos:column="42"/></literal></expr>)<pos:position pos:line="745" pos:column="43"/></condition><then pos:line="745" pos:column="43">
      <block type="pseudo"><return pos:line="746" pos:column="7">return <expr><call><name pos:line="746" pos:column="14">varnish_submit_gauge<pos:position pos:line="746" pos:column="34"/></name><argument_list pos:line="746" pos:column="34">(<argument><expr><name><name pos:line="746" pos:column="35">conf<pos:position pos:line="746" pos:column="39"/></name><operator pos:line="746" pos:column="39">-&gt;<pos:position pos:line="746" pos:column="44"/></operator><name pos:line="746" pos:column="41">instance<pos:position pos:line="746" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="746" pos:column="51">"mempool"<pos:position pos:line="746" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="746" pos:column="62">"objects"<pos:position pos:line="746" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="747" pos:column="35">"surplus"<pos:position pos:line="747" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="747" pos:column="46">val<pos:position pos:line="747" pos:column="49"/></name></expr></argument>)<pos:position pos:line="747" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="747" pos:column="51"/></return></block></then></if></elseif>
    <elseif pos:line="748" pos:column="5">else <if pos:line="748" pos:column="10">if <condition pos:line="748" pos:column="13">(<expr><call><name pos:line="748" pos:column="14">strcmp<pos:position pos:line="748" pos:column="20"/></name><argument_list pos:line="748" pos:column="20">(<argument><expr><name pos:line="748" pos:column="21">name<pos:position pos:line="748" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="748" pos:column="27">"randry"<pos:position pos:line="748" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="748" pos:column="36"/></argument_list></call> <operator pos:line="748" pos:column="37">==<pos:position pos:line="748" pos:column="39"/></operator> <literal type="number" pos:line="748" pos:column="40">0<pos:position pos:line="748" pos:column="41"/></literal></expr>)<pos:position pos:line="748" pos:column="42"/></condition><then pos:line="748" pos:column="42">
      <block type="pseudo"><return pos:line="749" pos:column="7">return <expr><call><name pos:line="749" pos:column="14">varnish_submit_gauge<pos:position pos:line="749" pos:column="34"/></name><argument_list pos:line="749" pos:column="34">(<argument><expr><name><name pos:line="749" pos:column="35">conf<pos:position pos:line="749" pos:column="39"/></name><operator pos:line="749" pos:column="39">-&gt;<pos:position pos:line="749" pos:column="44"/></operator><name pos:line="749" pos:column="41">instance<pos:position pos:line="749" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="749" pos:column="51">"mempool"<pos:position pos:line="749" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="749" pos:column="62">"objects"<pos:position pos:line="749" pos:column="71"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="750" pos:column="35">"ran_dry"<pos:position pos:line="750" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="750" pos:column="46">val<pos:position pos:line="750" pos:column="49"/></name></expr></argument>)<pos:position pos:line="750" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="750" pos:column="51"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="751" pos:column="4"/></block></then></if>

  <if pos:line="753" pos:column="3">if <condition pos:line="753" pos:column="6">(<expr><name><name pos:line="753" pos:column="7">conf<pos:position pos:line="753" pos:column="11"/></name><operator pos:line="753" pos:column="11">-&gt;<pos:position pos:line="753" pos:column="16"/></operator><name pos:line="753" pos:column="13">collect_mse<pos:position pos:line="753" pos:column="24"/></name></name></expr>)<pos:position pos:line="753" pos:column="25"/></condition><then pos:line="753" pos:column="25"> <block pos:line="753" pos:column="26">{
    <if pos:line="754" pos:column="5">if <condition pos:line="754" pos:column="8">(<expr><call><name pos:line="754" pos:column="9">strcmp<pos:position pos:line="754" pos:column="15"/></name><argument_list pos:line="754" pos:column="15">(<argument><expr><name pos:line="754" pos:column="16">name<pos:position pos:line="754" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="754" pos:column="22">"c_full"<pos:position pos:line="754" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="754" pos:column="31"/></argument_list></call> <operator pos:line="754" pos:column="32">==<pos:position pos:line="754" pos:column="34"/></operator> <literal type="number" pos:line="754" pos:column="35">0<pos:position pos:line="754" pos:column="36"/></literal></expr>)<pos:position pos:line="754" pos:column="37"/></condition><then pos:line="754" pos:column="37">
      <block type="pseudo"><return pos:line="755" pos:column="7">return <expr><call><name pos:line="755" pos:column="14">varnish_submit_derive<pos:position pos:line="755" pos:column="35"/></name><argument_list pos:line="755" pos:column="35">(<argument><expr><name><name pos:line="755" pos:column="36">conf<pos:position pos:line="755" pos:column="40"/></name><operator pos:line="755" pos:column="40">-&gt;<pos:position pos:line="755" pos:column="45"/></operator><name pos:line="755" pos:column="42">instance<pos:position pos:line="755" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="755" pos:column="52">"mse"<pos:position pos:line="755" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="755" pos:column="59">"total_operations"<pos:position pos:line="755" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="756" pos:column="36">"full_allocs"<pos:position pos:line="756" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="756" pos:column="51">val<pos:position pos:line="756" pos:column="54"/></name></expr></argument>)<pos:position pos:line="756" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="756" pos:column="56"/></return></block></then>
    <elseif pos:line="757" pos:column="5">else <if pos:line="757" pos:column="10">if <condition pos:line="757" pos:column="13">(<expr><call><name pos:line="757" pos:column="14">strcmp<pos:position pos:line="757" pos:column="20"/></name><argument_list pos:line="757" pos:column="20">(<argument><expr><name pos:line="757" pos:column="21">name<pos:position pos:line="757" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="757" pos:column="27">"c_truncated"<pos:position pos:line="757" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="757" pos:column="41"/></argument_list></call> <operator pos:line="757" pos:column="42">==<pos:position pos:line="757" pos:column="44"/></operator> <literal type="number" pos:line="757" pos:column="45">0<pos:position pos:line="757" pos:column="46"/></literal></expr>)<pos:position pos:line="757" pos:column="47"/></condition><then pos:line="757" pos:column="47">
      <block type="pseudo"><return pos:line="758" pos:column="7">return <expr><call><name pos:line="758" pos:column="14">varnish_submit_derive<pos:position pos:line="758" pos:column="35"/></name><argument_list pos:line="758" pos:column="35">(<argument><expr><name><name pos:line="758" pos:column="36">conf<pos:position pos:line="758" pos:column="40"/></name><operator pos:line="758" pos:column="40">-&gt;<pos:position pos:line="758" pos:column="45"/></operator><name pos:line="758" pos:column="42">instance<pos:position pos:line="758" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="758" pos:column="52">"mse"<pos:position pos:line="758" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="758" pos:column="59">"total_operations"<pos:position pos:line="758" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="759" pos:column="36">"truncated_allocs"<pos:position pos:line="759" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="759" pos:column="56">val<pos:position pos:line="759" pos:column="59"/></name></expr></argument>)<pos:position pos:line="759" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="759" pos:column="61"/></return></block></then></if></elseif>
    <elseif pos:line="760" pos:column="5">else <if pos:line="760" pos:column="10">if <condition pos:line="760" pos:column="13">(<expr><call><name pos:line="760" pos:column="14">strcmp<pos:position pos:line="760" pos:column="20"/></name><argument_list pos:line="760" pos:column="20">(<argument><expr><name pos:line="760" pos:column="21">name<pos:position pos:line="760" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="760" pos:column="27">"c_expanded"<pos:position pos:line="760" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="760" pos:column="40"/></argument_list></call> <operator pos:line="760" pos:column="41">==<pos:position pos:line="760" pos:column="43"/></operator> <literal type="number" pos:line="760" pos:column="44">0<pos:position pos:line="760" pos:column="45"/></literal></expr>)<pos:position pos:line="760" pos:column="46"/></condition><then pos:line="760" pos:column="46">
      <block type="pseudo"><return pos:line="761" pos:column="7">return <expr><call><name pos:line="761" pos:column="14">varnish_submit_derive<pos:position pos:line="761" pos:column="35"/></name><argument_list pos:line="761" pos:column="35">(<argument><expr><name><name pos:line="761" pos:column="36">conf<pos:position pos:line="761" pos:column="40"/></name><operator pos:line="761" pos:column="40">-&gt;<pos:position pos:line="761" pos:column="45"/></operator><name pos:line="761" pos:column="42">instance<pos:position pos:line="761" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="761" pos:column="52">"mse"<pos:position pos:line="761" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="761" pos:column="59">"total_operations"<pos:position pos:line="761" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="762" pos:column="36">"expanded_allocs"<pos:position pos:line="762" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="762" pos:column="55">val<pos:position pos:line="762" pos:column="58"/></name></expr></argument>)<pos:position pos:line="762" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="762" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="763" pos:column="5">else <if pos:line="763" pos:column="10">if <condition pos:line="763" pos:column="13">(<expr><call><name pos:line="763" pos:column="14">strcmp<pos:position pos:line="763" pos:column="20"/></name><argument_list pos:line="763" pos:column="20">(<argument><expr><name pos:line="763" pos:column="21">name<pos:position pos:line="763" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="763" pos:column="27">"c_failed"<pos:position pos:line="763" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="763" pos:column="38"/></argument_list></call> <operator pos:line="763" pos:column="39">==<pos:position pos:line="763" pos:column="41"/></operator> <literal type="number" pos:line="763" pos:column="42">0<pos:position pos:line="763" pos:column="43"/></literal></expr>)<pos:position pos:line="763" pos:column="44"/></condition><then pos:line="763" pos:column="44">
      <block type="pseudo"><return pos:line="764" pos:column="7">return <expr><call><name pos:line="764" pos:column="14">varnish_submit_derive<pos:position pos:line="764" pos:column="35"/></name><argument_list pos:line="764" pos:column="35">(<argument><expr><name><name pos:line="764" pos:column="36">conf<pos:position pos:line="764" pos:column="40"/></name><operator pos:line="764" pos:column="40">-&gt;<pos:position pos:line="764" pos:column="45"/></operator><name pos:line="764" pos:column="42">instance<pos:position pos:line="764" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="764" pos:column="52">"mse"<pos:position pos:line="764" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="764" pos:column="59">"total_operations"<pos:position pos:line="764" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="765" pos:column="36">"failed_allocs"<pos:position pos:line="765" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="765" pos:column="53">val<pos:position pos:line="765" pos:column="56"/></name></expr></argument>)<pos:position pos:line="765" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="765" pos:column="58"/></return></block></then></if></elseif>
    <elseif pos:line="766" pos:column="5">else <if pos:line="766" pos:column="10">if <condition pos:line="766" pos:column="13">(<expr><call><name pos:line="766" pos:column="14">strcmp<pos:position pos:line="766" pos:column="20"/></name><argument_list pos:line="766" pos:column="20">(<argument><expr><name pos:line="766" pos:column="21">name<pos:position pos:line="766" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="766" pos:column="27">"c_bytes"<pos:position pos:line="766" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="766" pos:column="37"/></argument_list></call> <operator pos:line="766" pos:column="38">==<pos:position pos:line="766" pos:column="40"/></operator> <literal type="number" pos:line="766" pos:column="41">0<pos:position pos:line="766" pos:column="42"/></literal></expr>)<pos:position pos:line="766" pos:column="43"/></condition><then pos:line="766" pos:column="43">
      <block type="pseudo"><return pos:line="767" pos:column="7">return <expr><call><name pos:line="767" pos:column="14">varnish_submit_derive<pos:position pos:line="767" pos:column="35"/></name><argument_list pos:line="767" pos:column="35">(<argument><expr><name><name pos:line="767" pos:column="36">conf<pos:position pos:line="767" pos:column="40"/></name><operator pos:line="767" pos:column="40">-&gt;<pos:position pos:line="767" pos:column="45"/></operator><name pos:line="767" pos:column="42">instance<pos:position pos:line="767" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="767" pos:column="52">"mse"<pos:position pos:line="767" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="767" pos:column="59">"total_bytes"<pos:position pos:line="767" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="768" pos:column="36">"bytes_allocated"<pos:position pos:line="768" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="768" pos:column="55">val<pos:position pos:line="768" pos:column="58"/></name></expr></argument>)<pos:position pos:line="768" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="768" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="769" pos:column="5">else <if pos:line="769" pos:column="10">if <condition pos:line="769" pos:column="13">(<expr><call><name pos:line="769" pos:column="14">strcmp<pos:position pos:line="769" pos:column="20"/></name><argument_list pos:line="769" pos:column="20">(<argument><expr><name pos:line="769" pos:column="21">name<pos:position pos:line="769" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="769" pos:column="27">"c_freed"<pos:position pos:line="769" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="769" pos:column="37"/></argument_list></call> <operator pos:line="769" pos:column="38">==<pos:position pos:line="769" pos:column="40"/></operator> <literal type="number" pos:line="769" pos:column="41">0<pos:position pos:line="769" pos:column="42"/></literal></expr>)<pos:position pos:line="769" pos:column="43"/></condition><then pos:line="769" pos:column="43">
      <block type="pseudo"><return pos:line="770" pos:column="7">return <expr><call><name pos:line="770" pos:column="14">varnish_submit_derive<pos:position pos:line="770" pos:column="35"/></name><argument_list pos:line="770" pos:column="35">(<argument><expr><name><name pos:line="770" pos:column="36">conf<pos:position pos:line="770" pos:column="40"/></name><operator pos:line="770" pos:column="40">-&gt;<pos:position pos:line="770" pos:column="45"/></operator><name pos:line="770" pos:column="42">instance<pos:position pos:line="770" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="770" pos:column="52">"mse"<pos:position pos:line="770" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="770" pos:column="59">"total_bytes"<pos:position pos:line="770" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="771" pos:column="36">"bytes_freed"<pos:position pos:line="771" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="771" pos:column="51">val<pos:position pos:line="771" pos:column="54"/></name></expr></argument>)<pos:position pos:line="771" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="771" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="772" pos:column="5">else <if pos:line="772" pos:column="10">if <condition pos:line="772" pos:column="13">(<expr><call><name pos:line="772" pos:column="14">strcmp<pos:position pos:line="772" pos:column="20"/></name><argument_list pos:line="772" pos:column="20">(<argument><expr><name pos:line="772" pos:column="21">name<pos:position pos:line="772" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="772" pos:column="27">"g_fo_alloc"<pos:position pos:line="772" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="772" pos:column="40"/></argument_list></call> <operator pos:line="772" pos:column="41">==<pos:position pos:line="772" pos:column="43"/></operator> <literal type="number" pos:line="772" pos:column="44">0<pos:position pos:line="772" pos:column="45"/></literal></expr>)<pos:position pos:line="772" pos:column="46"/></condition><then pos:line="772" pos:column="46">
      <block type="pseudo"><return pos:line="773" pos:column="7">return <expr><call><name pos:line="773" pos:column="14">varnish_submit_derive<pos:position pos:line="773" pos:column="35"/></name><argument_list pos:line="773" pos:column="35">(<argument><expr><name><name pos:line="773" pos:column="36">conf<pos:position pos:line="773" pos:column="40"/></name><operator pos:line="773" pos:column="40">-&gt;<pos:position pos:line="773" pos:column="45"/></operator><name pos:line="773" pos:column="42">instance<pos:position pos:line="773" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="773" pos:column="52">"mse"<pos:position pos:line="773" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="773" pos:column="59">"total_operations"<pos:position pos:line="773" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="774" pos:column="36">"fo_allocs_outstanding"<pos:position pos:line="774" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="774" pos:column="61">val<pos:position pos:line="774" pos:column="64"/></name></expr></argument>)<pos:position pos:line="774" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="774" pos:column="66"/></return></block></then></if></elseif>
    <elseif pos:line="775" pos:column="5">else <if pos:line="775" pos:column="10">if <condition pos:line="775" pos:column="13">(<expr><call><name pos:line="775" pos:column="14">strcmp<pos:position pos:line="775" pos:column="20"/></name><argument_list pos:line="775" pos:column="20">(<argument><expr><name pos:line="775" pos:column="21">name<pos:position pos:line="775" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="775" pos:column="27">"g_fo_bytes"<pos:position pos:line="775" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="775" pos:column="40"/></argument_list></call> <operator pos:line="775" pos:column="41">==<pos:position pos:line="775" pos:column="43"/></operator> <literal type="number" pos:line="775" pos:column="44">0<pos:position pos:line="775" pos:column="45"/></literal></expr>)<pos:position pos:line="775" pos:column="46"/></condition><then pos:line="775" pos:column="46">
      <block type="pseudo"><return pos:line="776" pos:column="7">return <expr><call><name pos:line="776" pos:column="14">varnish_submit_gauge<pos:position pos:line="776" pos:column="34"/></name><argument_list pos:line="776" pos:column="34">(<argument><expr><name><name pos:line="776" pos:column="35">conf<pos:position pos:line="776" pos:column="39"/></name><operator pos:line="776" pos:column="39">-&gt;<pos:position pos:line="776" pos:column="44"/></operator><name pos:line="776" pos:column="41">instance<pos:position pos:line="776" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="776" pos:column="51">"mse"<pos:position pos:line="776" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="776" pos:column="58">"bytes"<pos:position pos:line="776" pos:column="65"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="777" pos:column="35">"fo_bytes_outstanding"<pos:position pos:line="777" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="777" pos:column="59">val<pos:position pos:line="777" pos:column="62"/></name></expr></argument>)<pos:position pos:line="777" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="777" pos:column="64"/></return></block></then></if></elseif>
    <elseif pos:line="778" pos:column="5">else <if pos:line="778" pos:column="10">if <condition pos:line="778" pos:column="13">(<expr><call><name pos:line="778" pos:column="14">strcmp<pos:position pos:line="778" pos:column="20"/></name><argument_list pos:line="778" pos:column="20">(<argument><expr><name pos:line="778" pos:column="21">name<pos:position pos:line="778" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="778" pos:column="27">"g_membuf_alloc"<pos:position pos:line="778" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="778" pos:column="44"/></argument_list></call> <operator pos:line="778" pos:column="45">==<pos:position pos:line="778" pos:column="47"/></operator> <literal type="number" pos:line="778" pos:column="48">0<pos:position pos:line="778" pos:column="49"/></literal></expr>)<pos:position pos:line="778" pos:column="50"/></condition><then pos:line="778" pos:column="50">
      <block type="pseudo"><return pos:line="779" pos:column="7">return <expr><call><name pos:line="779" pos:column="14">varnish_submit_gauge<pos:position pos:line="779" pos:column="34"/></name><argument_list pos:line="779" pos:column="34">(<argument><expr><name><name pos:line="779" pos:column="35">conf<pos:position pos:line="779" pos:column="39"/></name><operator pos:line="779" pos:column="39">-&gt;<pos:position pos:line="779" pos:column="44"/></operator><name pos:line="779" pos:column="41">instance<pos:position pos:line="779" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="779" pos:column="51">"mse"<pos:position pos:line="779" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="779" pos:column="58">"objects"<pos:position pos:line="779" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="780" pos:column="35">"membufs_allocated"<pos:position pos:line="780" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="780" pos:column="56">val<pos:position pos:line="780" pos:column="59"/></name></expr></argument>)<pos:position pos:line="780" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="780" pos:column="61"/></return></block></then></if></elseif>
    <elseif pos:line="781" pos:column="5">else <if pos:line="781" pos:column="10">if <condition pos:line="781" pos:column="13">(<expr><call><name pos:line="781" pos:column="14">strcmp<pos:position pos:line="781" pos:column="20"/></name><argument_list pos:line="781" pos:column="20">(<argument><expr><name pos:line="781" pos:column="21">name<pos:position pos:line="781" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="781" pos:column="27">"g_membuf_inuse"<pos:position pos:line="781" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="781" pos:column="44"/></argument_list></call> <operator pos:line="781" pos:column="45">==<pos:position pos:line="781" pos:column="47"/></operator> <literal type="number" pos:line="781" pos:column="48">0<pos:position pos:line="781" pos:column="49"/></literal></expr>)<pos:position pos:line="781" pos:column="50"/></condition><then pos:line="781" pos:column="50">
      <block type="pseudo"><return pos:line="782" pos:column="7">return <expr><call><name pos:line="782" pos:column="14">varnish_submit_gauge<pos:position pos:line="782" pos:column="34"/></name><argument_list pos:line="782" pos:column="34">(<argument><expr><name><name pos:line="782" pos:column="35">conf<pos:position pos:line="782" pos:column="39"/></name><operator pos:line="782" pos:column="39">-&gt;<pos:position pos:line="782" pos:column="44"/></operator><name pos:line="782" pos:column="41">instance<pos:position pos:line="782" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="782" pos:column="51">"mse"<pos:position pos:line="782" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="782" pos:column="58">"objects"<pos:position pos:line="782" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="783" pos:column="35">"membufs_inuse"<pos:position pos:line="783" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="783" pos:column="52">val<pos:position pos:line="783" pos:column="55"/></name></expr></argument>)<pos:position pos:line="783" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="783" pos:column="57"/></return></block></then></if></elseif>
    <elseif pos:line="784" pos:column="5">else <if pos:line="784" pos:column="10">if <condition pos:line="784" pos:column="13">(<expr><call><name pos:line="784" pos:column="14">strcmp<pos:position pos:line="784" pos:column="20"/></name><argument_list pos:line="784" pos:column="20">(<argument><expr><name pos:line="784" pos:column="21">name<pos:position pos:line="784" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="784" pos:column="27">"g_bans_bytes"<pos:position pos:line="784" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="784" pos:column="42"/></argument_list></call> <operator pos:line="784" pos:column="43">==<pos:position pos:line="784" pos:column="45"/></operator> <literal type="number" pos:line="784" pos:column="46">0<pos:position pos:line="784" pos:column="47"/></literal></expr>)<pos:position pos:line="784" pos:column="48"/></condition><then pos:line="784" pos:column="48">
      <block type="pseudo"><return pos:line="785" pos:column="7">return <expr><call><name pos:line="785" pos:column="14">varnish_submit_gauge<pos:position pos:line="785" pos:column="34"/></name><argument_list pos:line="785" pos:column="34">(<argument><expr><name><name pos:line="785" pos:column="35">conf<pos:position pos:line="785" pos:column="39"/></name><operator pos:line="785" pos:column="39">-&gt;<pos:position pos:line="785" pos:column="44"/></operator><name pos:line="785" pos:column="41">instance<pos:position pos:line="785" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="785" pos:column="51">"mse"<pos:position pos:line="785" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="785" pos:column="58">"bytes"<pos:position pos:line="785" pos:column="65"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="786" pos:column="35">"persisted_banspace_used"<pos:position pos:line="786" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="786" pos:column="62">val<pos:position pos:line="786" pos:column="65"/></name></expr></argument>)<pos:position pos:line="786" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="786" pos:column="67"/></return></block></then></if></elseif>
    <elseif pos:line="787" pos:column="5">else <if pos:line="787" pos:column="10">if <condition pos:line="787" pos:column="13">(<expr><call><name pos:line="787" pos:column="14">strcmp<pos:position pos:line="787" pos:column="20"/></name><argument_list pos:line="787" pos:column="20">(<argument><expr><name pos:line="787" pos:column="21">name<pos:position pos:line="787" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="787" pos:column="27">"g_bans_space"<pos:position pos:line="787" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="787" pos:column="42"/></argument_list></call> <operator pos:line="787" pos:column="43">==<pos:position pos:line="787" pos:column="45"/></operator> <literal type="number" pos:line="787" pos:column="46">0<pos:position pos:line="787" pos:column="47"/></literal></expr>)<pos:position pos:line="787" pos:column="48"/></condition><then pos:line="787" pos:column="48">
      <block type="pseudo"><return pos:line="788" pos:column="7">return <expr><call><name pos:line="788" pos:column="14">varnish_submit_gauge<pos:position pos:line="788" pos:column="34"/></name><argument_list pos:line="788" pos:column="34">(<argument><expr><name><name pos:line="788" pos:column="35">conf<pos:position pos:line="788" pos:column="39"/></name><operator pos:line="788" pos:column="39">-&gt;<pos:position pos:line="788" pos:column="44"/></operator><name pos:line="788" pos:column="41">instance<pos:position pos:line="788" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="788" pos:column="51">"mse"<pos:position pos:line="788" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="788" pos:column="58">"bytes"<pos:position pos:line="788" pos:column="65"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="789" pos:column="35">"persisted_banspace_available"<pos:position pos:line="789" pos:column="65"/></literal></expr></argument>, <argument><expr><name pos:line="789" pos:column="67">val<pos:position pos:line="789" pos:column="70"/></name></expr></argument>)<pos:position pos:line="789" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="789" pos:column="72"/></return></block></then></if></elseif>
    <elseif pos:line="790" pos:column="5">else <if pos:line="790" pos:column="10">if <condition pos:line="790" pos:column="13">(<expr><call><name pos:line="790" pos:column="14">strcmp<pos:position pos:line="790" pos:column="20"/></name><argument_list pos:line="790" pos:column="20">(<argument><expr><name pos:line="790" pos:column="21">name<pos:position pos:line="790" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="790" pos:column="27">"g_bans_persisted"<pos:position pos:line="790" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="790" pos:column="46"/></argument_list></call> <operator pos:line="790" pos:column="47">==<pos:position pos:line="790" pos:column="49"/></operator> <literal type="number" pos:line="790" pos:column="50">0<pos:position pos:line="790" pos:column="51"/></literal></expr>)<pos:position pos:line="790" pos:column="52"/></condition><then pos:line="790" pos:column="52">
      <block type="pseudo"><return pos:line="791" pos:column="7">return <expr><call><name pos:line="791" pos:column="14">varnish_submit_derive<pos:position pos:line="791" pos:column="35"/></name><argument_list pos:line="791" pos:column="35">(<argument><expr><name><name pos:line="791" pos:column="36">conf<pos:position pos:line="791" pos:column="40"/></name><operator pos:line="791" pos:column="40">-&gt;<pos:position pos:line="791" pos:column="45"/></operator><name pos:line="791" pos:column="42">instance<pos:position pos:line="791" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="791" pos:column="52">"mse"<pos:position pos:line="791" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="791" pos:column="59">"total_operations"<pos:position pos:line="791" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="792" pos:column="36">"bans_persisted"<pos:position pos:line="792" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="792" pos:column="54">val<pos:position pos:line="792" pos:column="57"/></name></expr></argument>)<pos:position pos:line="792" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="792" pos:column="59"/></return></block></then></if></elseif>
    <elseif pos:line="793" pos:column="5">else <if pos:line="793" pos:column="10">if <condition pos:line="793" pos:column="13">(<expr><call><name pos:line="793" pos:column="14">strcmp<pos:position pos:line="793" pos:column="20"/></name><argument_list pos:line="793" pos:column="20">(<argument><expr><name pos:line="793" pos:column="21">name<pos:position pos:line="793" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="793" pos:column="27">"g_bans_lost"<pos:position pos:line="793" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="793" pos:column="41"/></argument_list></call> <operator pos:line="793" pos:column="42">==<pos:position pos:line="793" pos:column="44"/></operator> <literal type="number" pos:line="793" pos:column="45">0<pos:position pos:line="793" pos:column="46"/></literal></expr>)<pos:position pos:line="793" pos:column="47"/></condition><then pos:line="793" pos:column="47">
      <block type="pseudo"><return pos:line="794" pos:column="7">return <expr><call><name pos:line="794" pos:column="14">varnish_submit_derive<pos:position pos:line="794" pos:column="35"/></name><argument_list pos:line="794" pos:column="35">(<argument><expr><name><name pos:line="794" pos:column="36">conf<pos:position pos:line="794" pos:column="40"/></name><operator pos:line="794" pos:column="40">-&gt;<pos:position pos:line="794" pos:column="45"/></operator><name pos:line="794" pos:column="42">instance<pos:position pos:line="794" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="794" pos:column="52">"mse"<pos:position pos:line="794" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="794" pos:column="59">"total_operations"<pos:position pos:line="794" pos:column="77"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="795" pos:column="36">"bans_lost"<pos:position pos:line="795" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="795" pos:column="49">val<pos:position pos:line="795" pos:column="52"/></name></expr></argument>)<pos:position pos:line="795" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="795" pos:column="54"/></return></block></then></if></elseif>

    <comment type="block" pos:line="797" pos:column="5">/* mse seg */</comment>
    <elseif pos:line="798" pos:column="5">else <if pos:line="798" pos:column="10">if <condition pos:line="798" pos:column="13">(<expr><call><name pos:line="798" pos:column="14">strcmp<pos:position pos:line="798" pos:column="20"/></name><argument_list pos:line="798" pos:column="20">(<argument><expr><name pos:line="798" pos:column="21">name<pos:position pos:line="798" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="798" pos:column="27">"g_journal_bytes"<pos:position pos:line="798" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="798" pos:column="45"/></argument_list></call> <operator pos:line="798" pos:column="46">==<pos:position pos:line="798" pos:column="48"/></operator> <literal type="number" pos:line="798" pos:column="49">0<pos:position pos:line="798" pos:column="50"/></literal></expr>)<pos:position pos:line="798" pos:column="51"/></condition><then pos:line="798" pos:column="51">
      <block type="pseudo"><return pos:line="799" pos:column="7">return <expr><call><name pos:line="799" pos:column="14">varnish_submit_gauge<pos:position pos:line="799" pos:column="34"/></name><argument_list pos:line="799" pos:column="34">(<argument><expr><name><name pos:line="799" pos:column="35">conf<pos:position pos:line="799" pos:column="39"/></name><operator pos:line="799" pos:column="39">-&gt;<pos:position pos:line="799" pos:column="44"/></operator><name pos:line="799" pos:column="41">instance<pos:position pos:line="799" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="799" pos:column="51">"mse_reg"<pos:position pos:line="799" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="799" pos:column="62">"bytes"<pos:position pos:line="799" pos:column="69"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="800" pos:column="35">"journal_bytes_used"<pos:position pos:line="800" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="800" pos:column="57">val<pos:position pos:line="800" pos:column="60"/></name></expr></argument>)<pos:position pos:line="800" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="800" pos:column="62"/></return></block></then></if></elseif>
    <elseif pos:line="801" pos:column="5">else <if pos:line="801" pos:column="10">if <condition pos:line="801" pos:column="13">(<expr><call><name pos:line="801" pos:column="14">strcmp<pos:position pos:line="801" pos:column="20"/></name><argument_list pos:line="801" pos:column="20">(<argument><expr><name pos:line="801" pos:column="21">name<pos:position pos:line="801" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="801" pos:column="27">"g_journal_space"<pos:position pos:line="801" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="801" pos:column="45"/></argument_list></call> <operator pos:line="801" pos:column="46">==<pos:position pos:line="801" pos:column="48"/></operator> <literal type="number" pos:line="801" pos:column="49">0<pos:position pos:line="801" pos:column="50"/></literal></expr>)<pos:position pos:line="801" pos:column="51"/></condition><then pos:line="801" pos:column="51">
      <block type="pseudo"><return pos:line="802" pos:column="7">return <expr><call><name pos:line="802" pos:column="14">varnish_submit_gauge<pos:position pos:line="802" pos:column="34"/></name><argument_list pos:line="802" pos:column="34">(<argument><expr><name><name pos:line="802" pos:column="35">conf<pos:position pos:line="802" pos:column="39"/></name><operator pos:line="802" pos:column="39">-&gt;<pos:position pos:line="802" pos:column="44"/></operator><name pos:line="802" pos:column="41">instance<pos:position pos:line="802" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="802" pos:column="51">"mse_reg"<pos:position pos:line="802" pos:column="60"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="802" pos:column="62">"bytes"<pos:position pos:line="802" pos:column="69"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="803" pos:column="35">"journal_bytes_free"<pos:position pos:line="803" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="803" pos:column="57">val<pos:position pos:line="803" pos:column="60"/></name></expr></argument>)<pos:position pos:line="803" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="803" pos:column="62"/></return></block></then></if></elseif>

    <comment type="block" pos:line="805" pos:column="5">/* mse segagg */</comment>
    <elseif pos:line="806" pos:column="5">else <if pos:line="806" pos:column="10">if <condition pos:line="806" pos:column="13">(<expr><call><name pos:line="806" pos:column="14">strcmp<pos:position pos:line="806" pos:column="20"/></name><argument_list pos:line="806" pos:column="20">(<argument><expr><name pos:line="806" pos:column="21">name<pos:position pos:line="806" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="806" pos:column="27">"g_bigspace"<pos:position pos:line="806" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="806" pos:column="40"/></argument_list></call> <operator pos:line="806" pos:column="41">==<pos:position pos:line="806" pos:column="43"/></operator> <literal type="number" pos:line="806" pos:column="44">0<pos:position pos:line="806" pos:column="45"/></literal></expr>)<pos:position pos:line="806" pos:column="46"/></condition><then pos:line="806" pos:column="46">
      <block type="pseudo"><return pos:line="807" pos:column="7">return <expr><call><name pos:line="807" pos:column="14">varnish_submit_gauge<pos:position pos:line="807" pos:column="34"/></name><argument_list pos:line="807" pos:column="34">(<argument><expr><name><name pos:line="807" pos:column="35">conf<pos:position pos:line="807" pos:column="39"/></name><operator pos:line="807" pos:column="39">-&gt;<pos:position pos:line="807" pos:column="44"/></operator><name pos:line="807" pos:column="41">instance<pos:position pos:line="807" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="807" pos:column="51">"mse_segagg"<pos:position pos:line="807" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="807" pos:column="65">"bytes"<pos:position pos:line="807" pos:column="72"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="808" pos:column="35">"big_extents_bytes_available"<pos:position pos:line="808" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="808" pos:column="66">val<pos:position pos:line="808" pos:column="69"/></name></expr></argument>)<pos:position pos:line="808" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="808" pos:column="71"/></return></block></then></if></elseif>
    <elseif pos:line="809" pos:column="5">else <if pos:line="809" pos:column="10">if <condition pos:line="809" pos:column="13">(<expr><call><name pos:line="809" pos:column="14">strcmp<pos:position pos:line="809" pos:column="20"/></name><argument_list pos:line="809" pos:column="20">(<argument><expr><name pos:line="809" pos:column="21">name<pos:position pos:line="809" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="809" pos:column="27">"g_extfree"<pos:position pos:line="809" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="809" pos:column="39"/></argument_list></call> <operator pos:line="809" pos:column="40">==<pos:position pos:line="809" pos:column="42"/></operator> <literal type="number" pos:line="809" pos:column="43">0<pos:position pos:line="809" pos:column="44"/></literal></expr>)<pos:position pos:line="809" pos:column="45"/></condition><then pos:line="809" pos:column="45">
      <block type="pseudo"><return pos:line="810" pos:column="7">return <expr><call><name pos:line="810" pos:column="14">varnish_submit_gauge<pos:position pos:line="810" pos:column="34"/></name><argument_list pos:line="810" pos:column="34">(<argument><expr><name><name pos:line="810" pos:column="35">conf<pos:position pos:line="810" pos:column="39"/></name><operator pos:line="810" pos:column="39">-&gt;<pos:position pos:line="810" pos:column="44"/></operator><name pos:line="810" pos:column="41">instance<pos:position pos:line="810" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="810" pos:column="51">"mse_segagg"<pos:position pos:line="810" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="810" pos:column="65">"objects"<pos:position pos:line="810" pos:column="74"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="811" pos:column="35">"free_extents"<pos:position pos:line="811" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="811" pos:column="51">val<pos:position pos:line="811" pos:column="54"/></name></expr></argument>)<pos:position pos:line="811" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="811" pos:column="56"/></return></block></then></if></elseif>
    <elseif pos:line="812" pos:column="5">else <if pos:line="812" pos:column="10">if <condition pos:line="812" pos:column="13">(<expr><call><name pos:line="812" pos:column="14">strcmp<pos:position pos:line="812" pos:column="20"/></name><argument_list pos:line="812" pos:column="20">(<argument><expr><name pos:line="812" pos:column="21">name<pos:position pos:line="812" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="812" pos:column="27">"g_sparenode"<pos:position pos:line="812" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="812" pos:column="41"/></argument_list></call> <operator pos:line="812" pos:column="42">==<pos:position pos:line="812" pos:column="44"/></operator> <literal type="number" pos:line="812" pos:column="45">0<pos:position pos:line="812" pos:column="46"/></literal></expr>)<pos:position pos:line="812" pos:column="47"/></condition><then pos:line="812" pos:column="47">
      <block type="pseudo"><return pos:line="813" pos:column="7">return <expr><call><name pos:line="813" pos:column="14">varnish_submit_gauge<pos:position pos:line="813" pos:column="34"/></name><argument_list pos:line="813" pos:column="34">(<argument><expr><name><name pos:line="813" pos:column="35">conf<pos:position pos:line="813" pos:column="39"/></name><operator pos:line="813" pos:column="39">-&gt;<pos:position pos:line="813" pos:column="44"/></operator><name pos:line="813" pos:column="41">instance<pos:position pos:line="813" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="813" pos:column="51">"mse_segagg"<pos:position pos:line="813" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="813" pos:column="65">"objects"<pos:position pos:line="813" pos:column="74"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="814" pos:column="35">"spare_nodes_available"<pos:position pos:line="814" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="814" pos:column="60">val<pos:position pos:line="814" pos:column="63"/></name></expr></argument>)<pos:position pos:line="814" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="814" pos:column="65"/></return></block></then></if></elseif>
    <elseif pos:line="815" pos:column="5">else <if pos:line="815" pos:column="10">if <condition pos:line="815" pos:column="13">(<expr><call><name pos:line="815" pos:column="14">strcmp<pos:position pos:line="815" pos:column="20"/></name><argument_list pos:line="815" pos:column="20">(<argument><expr><name pos:line="815" pos:column="21">name<pos:position pos:line="815" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="815" pos:column="27">"g_objnode"<pos:position pos:line="815" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="815" pos:column="39"/></argument_list></call> <operator pos:line="815" pos:column="40">==<pos:position pos:line="815" pos:column="42"/></operator> <literal type="number" pos:line="815" pos:column="43">0<pos:position pos:line="815" pos:column="44"/></literal></expr>)<pos:position pos:line="815" pos:column="45"/></condition><then pos:line="815" pos:column="45">
      <block type="pseudo"><return pos:line="816" pos:column="7">return <expr><call><name pos:line="816" pos:column="14">varnish_submit_gauge<pos:position pos:line="816" pos:column="34"/></name><argument_list pos:line="816" pos:column="34">(<argument><expr><name><name pos:line="816" pos:column="35">conf<pos:position pos:line="816" pos:column="39"/></name><operator pos:line="816" pos:column="39">-&gt;<pos:position pos:line="816" pos:column="44"/></operator><name pos:line="816" pos:column="41">instance<pos:position pos:line="816" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="816" pos:column="51">"mse_segagg"<pos:position pos:line="816" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="816" pos:column="65">"objects"<pos:position pos:line="816" pos:column="74"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="817" pos:column="35">"object_nodes_in_use"<pos:position pos:line="817" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="817" pos:column="58">val<pos:position pos:line="817" pos:column="61"/></name></expr></argument>)<pos:position pos:line="817" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="817" pos:column="63"/></return></block></then></if></elseif>
    <elseif pos:line="818" pos:column="5">else <if pos:line="818" pos:column="10">if <condition pos:line="818" pos:column="13">(<expr><call><name pos:line="818" pos:column="14">strcmp<pos:position pos:line="818" pos:column="20"/></name><argument_list pos:line="818" pos:column="20">(<argument><expr><name pos:line="818" pos:column="21">name<pos:position pos:line="818" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="818" pos:column="27">"g_extnode"<pos:position pos:line="818" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="818" pos:column="39"/></argument_list></call> <operator pos:line="818" pos:column="40">==<pos:position pos:line="818" pos:column="42"/></operator> <literal type="number" pos:line="818" pos:column="43">0<pos:position pos:line="818" pos:column="44"/></literal></expr>)<pos:position pos:line="818" pos:column="45"/></condition><then pos:line="818" pos:column="45">
      <block type="pseudo"><return pos:line="819" pos:column="7">return <expr><call><name pos:line="819" pos:column="14">varnish_submit_gauge<pos:position pos:line="819" pos:column="34"/></name><argument_list pos:line="819" pos:column="34">(<argument><expr><name><name pos:line="819" pos:column="35">conf<pos:position pos:line="819" pos:column="39"/></name><operator pos:line="819" pos:column="39">-&gt;<pos:position pos:line="819" pos:column="44"/></operator><name pos:line="819" pos:column="41">instance<pos:position pos:line="819" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="819" pos:column="51">"mse_segagg"<pos:position pos:line="819" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="819" pos:column="65">"objects"<pos:position pos:line="819" pos:column="74"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="820" pos:column="35">"extent_nodes_in_use"<pos:position pos:line="820" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="820" pos:column="58">val<pos:position pos:line="820" pos:column="61"/></name></expr></argument>)<pos:position pos:line="820" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="820" pos:column="63"/></return></block></then></if></elseif>
    <elseif pos:line="821" pos:column="5">else <if pos:line="821" pos:column="10">if <condition pos:line="821" pos:column="13">(<expr><call><name pos:line="821" pos:column="14">strcmp<pos:position pos:line="821" pos:column="20"/></name><argument_list pos:line="821" pos:column="20">(<argument><expr><name pos:line="821" pos:column="21">name<pos:position pos:line="821" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="821" pos:column="27">"g_bigextfree"<pos:position pos:line="821" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="821" pos:column="42"/></argument_list></call> <operator pos:line="821" pos:column="43">==<pos:position pos:line="821" pos:column="45"/></operator> <literal type="number" pos:line="821" pos:column="46">0<pos:position pos:line="821" pos:column="47"/></literal></expr>)<pos:position pos:line="821" pos:column="48"/></condition><then pos:line="821" pos:column="48">
      <block type="pseudo"><return pos:line="822" pos:column="7">return <expr><call><name pos:line="822" pos:column="14">varnish_submit_gauge<pos:position pos:line="822" pos:column="34"/></name><argument_list pos:line="822" pos:column="34">(<argument><expr><name><name pos:line="822" pos:column="35">conf<pos:position pos:line="822" pos:column="39"/></name><operator pos:line="822" pos:column="39">-&gt;<pos:position pos:line="822" pos:column="44"/></operator><name pos:line="822" pos:column="41">instance<pos:position pos:line="822" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="822" pos:column="51">"mse_segagg"<pos:position pos:line="822" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="822" pos:column="65">"objects"<pos:position pos:line="822" pos:column="74"/></literal></expr></argument>,
                                  <argument><expr><literal type="string" pos:line="823" pos:column="35">"free_big_extents"<pos:position pos:line="823" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="823" pos:column="55">val<pos:position pos:line="823" pos:column="58"/></name></expr></argument>)<pos:position pos:line="823" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="823" pos:column="60"/></return></block></then></if></elseif>
    <elseif pos:line="824" pos:column="5">else <if pos:line="824" pos:column="10">if <condition pos:line="824" pos:column="13">(<expr><call><name pos:line="824" pos:column="14">strcmp<pos:position pos:line="824" pos:column="20"/></name><argument_list pos:line="824" pos:column="20">(<argument><expr><name pos:line="824" pos:column="21">name<pos:position pos:line="824" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="824" pos:column="27">"c_pruneloop"<pos:position pos:line="824" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="824" pos:column="41"/></argument_list></call> <operator pos:line="824" pos:column="42">==<pos:position pos:line="824" pos:column="44"/></operator> <literal type="number" pos:line="824" pos:column="45">0<pos:position pos:line="824" pos:column="46"/></literal></expr>)<pos:position pos:line="824" pos:column="47"/></condition><then pos:line="824" pos:column="47">
      <block type="pseudo"><return pos:line="825" pos:column="7">return <expr><call><name pos:line="825" pos:column="14">varnish_submit_derive<pos:position pos:line="825" pos:column="35"/></name><argument_list pos:line="825" pos:column="35">(<argument><expr><name><name pos:line="825" pos:column="36">conf<pos:position pos:line="825" pos:column="40"/></name><operator pos:line="825" pos:column="40">-&gt;<pos:position pos:line="825" pos:column="45"/></operator><name pos:line="825" pos:column="42">instance<pos:position pos:line="825" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="825" pos:column="52">"mse_segagg"<pos:position pos:line="825" pos:column="64"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="826" pos:column="36">"total_operations"<pos:position pos:line="826" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="826" pos:column="56">"prune_loops"<pos:position pos:line="826" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="826" pos:column="71">val<pos:position pos:line="826" pos:column="74"/></name></expr></argument>)<pos:position pos:line="826" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="826" pos:column="76"/></return></block></then></if></elseif>
    <elseif pos:line="827" pos:column="5">else <if pos:line="827" pos:column="10">if <condition pos:line="827" pos:column="13">(<expr><call><name pos:line="827" pos:column="14">strcmp<pos:position pos:line="827" pos:column="20"/></name><argument_list pos:line="827" pos:column="20">(<argument><expr><name pos:line="827" pos:column="21">name<pos:position pos:line="827" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="827" pos:column="27">"c_pruned"<pos:position pos:line="827" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="827" pos:column="38"/></argument_list></call> <operator pos:line="827" pos:column="39">==<pos:position pos:line="827" pos:column="41"/></operator> <literal type="number" pos:line="827" pos:column="42">0<pos:position pos:line="827" pos:column="43"/></literal></expr>)<pos:position pos:line="827" pos:column="44"/></condition><then pos:line="827" pos:column="44">
      <block type="pseudo"><return pos:line="828" pos:column="7">return <expr><call><name pos:line="828" pos:column="14">varnish_submit_derive<pos:position pos:line="828" pos:column="35"/></name><argument_list pos:line="828" pos:column="35">(<argument><expr><name><name pos:line="828" pos:column="36">conf<pos:position pos:line="828" pos:column="40"/></name><operator pos:line="828" pos:column="40">-&gt;<pos:position pos:line="828" pos:column="45"/></operator><name pos:line="828" pos:column="42">instance<pos:position pos:line="828" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="828" pos:column="52">"mse_segagg"<pos:position pos:line="828" pos:column="64"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="829" pos:column="36">"total_objects"<pos:position pos:line="829" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="829" pos:column="53">"pruned_objects"<pos:position pos:line="829" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="829" pos:column="71">val<pos:position pos:line="829" pos:column="74"/></name></expr></argument>)<pos:position pos:line="829" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="829" pos:column="76"/></return></block></then></if></elseif>
    <elseif pos:line="830" pos:column="5">else <if pos:line="830" pos:column="10">if <condition pos:line="830" pos:column="13">(<expr><call><name pos:line="830" pos:column="14">strcmp<pos:position pos:line="830" pos:column="20"/></name><argument_list pos:line="830" pos:column="20">(<argument><expr><name pos:line="830" pos:column="21">name<pos:position pos:line="830" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="830" pos:column="27">"c_spared"<pos:position pos:line="830" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="830" pos:column="38"/></argument_list></call> <operator pos:line="830" pos:column="39">==<pos:position pos:line="830" pos:column="41"/></operator> <literal type="number" pos:line="830" pos:column="42">0<pos:position pos:line="830" pos:column="43"/></literal></expr>)<pos:position pos:line="830" pos:column="44"/></condition><then pos:line="830" pos:column="44">
      <block type="pseudo"><return pos:line="831" pos:column="7">return <expr><call><name pos:line="831" pos:column="14">varnish_submit_derive<pos:position pos:line="831" pos:column="35"/></name><argument_list pos:line="831" pos:column="35">(<argument><expr><name><name pos:line="831" pos:column="36">conf<pos:position pos:line="831" pos:column="40"/></name><operator pos:line="831" pos:column="40">-&gt;<pos:position pos:line="831" pos:column="45"/></operator><name pos:line="831" pos:column="42">instance<pos:position pos:line="831" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="831" pos:column="52">"mse_segagg"<pos:position pos:line="831" pos:column="64"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="832" pos:column="36">"total_operations"<pos:position pos:line="832" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="832" pos:column="56">"spared_objects"<pos:position pos:line="832" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="832" pos:column="74">val<pos:position pos:line="832" pos:column="77"/></name></expr></argument>)<pos:position pos:line="832" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="832" pos:column="79"/></return></block></then></if></elseif>
    <elseif pos:line="833" pos:column="5">else <if pos:line="833" pos:column="10">if <condition pos:line="833" pos:column="13">(<expr><call><name pos:line="833" pos:column="14">strcmp<pos:position pos:line="833" pos:column="20"/></name><argument_list pos:line="833" pos:column="20">(<argument><expr><name pos:line="833" pos:column="21">name<pos:position pos:line="833" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="833" pos:column="27">"c_skipped"<pos:position pos:line="833" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="833" pos:column="39"/></argument_list></call> <operator pos:line="833" pos:column="40">==<pos:position pos:line="833" pos:column="42"/></operator> <literal type="number" pos:line="833" pos:column="43">0<pos:position pos:line="833" pos:column="44"/></literal></expr>)<pos:position pos:line="833" pos:column="45"/></condition><then pos:line="833" pos:column="45">
      <block type="pseudo"><return pos:line="834" pos:column="7">return <expr><call><name pos:line="834" pos:column="14">varnish_submit_derive<pos:position pos:line="834" pos:column="35"/></name><argument_list pos:line="834" pos:column="35">(<argument><expr><name><name pos:line="834" pos:column="36">conf<pos:position pos:line="834" pos:column="40"/></name><operator pos:line="834" pos:column="40">-&gt;<pos:position pos:line="834" pos:column="45"/></operator><name pos:line="834" pos:column="42">instance<pos:position pos:line="834" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="834" pos:column="52">"mse_segagg"<pos:position pos:line="834" pos:column="64"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="835" pos:column="36">"total_operations"<pos:position pos:line="835" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="835" pos:column="56">"missed_objects"<pos:position pos:line="835" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="835" pos:column="74">val<pos:position pos:line="835" pos:column="77"/></name></expr></argument>)<pos:position pos:line="835" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="835" pos:column="79"/></return></block></then></if></elseif>
    <elseif pos:line="836" pos:column="5">else <if pos:line="836" pos:column="10">if <condition pos:line="836" pos:column="13">(<expr><call><name pos:line="836" pos:column="14">strcmp<pos:position pos:line="836" pos:column="20"/></name><argument_list pos:line="836" pos:column="20">(<argument><expr><name pos:line="836" pos:column="21">name<pos:position pos:line="836" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="836" pos:column="27">"c_nuked"<pos:position pos:line="836" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="836" pos:column="37"/></argument_list></call> <operator pos:line="836" pos:column="38">==<pos:position pos:line="836" pos:column="40"/></operator> <literal type="number" pos:line="836" pos:column="41">0<pos:position pos:line="836" pos:column="42"/></literal></expr>)<pos:position pos:line="836" pos:column="43"/></condition><then pos:line="836" pos:column="43">
      <block type="pseudo"><return pos:line="837" pos:column="7">return <expr><call><name pos:line="837" pos:column="14">varnish_submit_derive<pos:position pos:line="837" pos:column="35"/></name><argument_list pos:line="837" pos:column="35">(<argument><expr><name><name pos:line="837" pos:column="36">conf<pos:position pos:line="837" pos:column="40"/></name><operator pos:line="837" pos:column="40">-&gt;<pos:position pos:line="837" pos:column="45"/></operator><name pos:line="837" pos:column="42">instance<pos:position pos:line="837" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="837" pos:column="52">"mse_segagg"<pos:position pos:line="837" pos:column="64"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="838" pos:column="36">"total_operations"<pos:position pos:line="838" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="838" pos:column="56">"nuked_objects"<pos:position pos:line="838" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="838" pos:column="73">val<pos:position pos:line="838" pos:column="76"/></name></expr></argument>)<pos:position pos:line="838" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="838" pos:column="78"/></return></block></then></if></elseif>
    <elseif pos:line="839" pos:column="5">else <if pos:line="839" pos:column="10">if <condition pos:line="839" pos:column="13">(<expr><call><name pos:line="839" pos:column="14">strcmp<pos:position pos:line="839" pos:column="20"/></name><argument_list pos:line="839" pos:column="20">(<argument><expr><name pos:line="839" pos:column="21">name<pos:position pos:line="839" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="839" pos:column="27">"c_sniped"<pos:position pos:line="839" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="839" pos:column="38"/></argument_list></call> <operator pos:line="839" pos:column="39">==<pos:position pos:line="839" pos:column="41"/></operator> <literal type="number" pos:line="839" pos:column="42">0<pos:position pos:line="839" pos:column="43"/></literal></expr>)<pos:position pos:line="839" pos:column="44"/></condition><then pos:line="839" pos:column="44">
      <block type="pseudo"><return pos:line="840" pos:column="7">return <expr><call><name pos:line="840" pos:column="14">varnish_submit_derive<pos:position pos:line="840" pos:column="35"/></name><argument_list pos:line="840" pos:column="35">(<argument><expr><name><name pos:line="840" pos:column="36">conf<pos:position pos:line="840" pos:column="40"/></name><operator pos:line="840" pos:column="40">-&gt;<pos:position pos:line="840" pos:column="45"/></operator><name pos:line="840" pos:column="42">instance<pos:position pos:line="840" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="840" pos:column="52">"mse_segagg"<pos:position pos:line="840" pos:column="64"/></literal></expr></argument>,
                                   <argument><expr><literal type="string" pos:line="841" pos:column="36">"total_operations"<pos:position pos:line="841" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="841" pos:column="56">"sniped_objects"<pos:position pos:line="841" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="841" pos:column="74">val<pos:position pos:line="841" pos:column="77"/></name></expr></argument>)<pos:position pos:line="841" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="841" pos:column="79"/></return></block></then></if></elseif></if>
  }<pos:position pos:line="842" pos:column="4"/></block></then></if>

<cpp:endif pos:line="844" pos:column="1">#<cpp:directive pos:line="844" pos:column="2">endif<pos:position pos:line="844" pos:column="7"/></cpp:directive></cpp:endif>

  <return pos:line="846" pos:column="3">return <expr><literal type="number" pos:line="846" pos:column="10">0<pos:position pos:line="846" pos:column="11"/></literal></expr>;<pos:position pos:line="846" pos:column="12"/></return>

}<pos:position pos:line="848" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_898_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">allocate_counters<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">thread_data<pos:position pos:line="2" pos:column="37"/></name></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">threads<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="49">struct<pos:position pos:line="2" pos:column="55"/></name> <name pos:line="2" pos:column="56">core_data<pos:position pos:line="2" pos:column="65"/></name></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier><modifier pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="68">cores<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="75">struct<pos:position pos:line="2" pos:column="81"/></name> <name pos:line="2" pos:column="82">pkg_data<pos:position pos:line="2" pos:column="90"/></name></name> <modifier pos:line="2" pos:column="91">*<pos:position pos:line="2" pos:column="92"/></modifier><modifier pos:line="2" pos:column="92">*<pos:position pos:line="2" pos:column="93"/></modifier></type><name pos:line="2" pos:column="93">packages<pos:position pos:line="2" pos:column="101"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="102"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">unsigned<pos:position pos:line="4" pos:column="17"/></name> <name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">total_threads<pos:position pos:line="4" pos:column="35"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="37">total_cores<pos:position pos:line="4" pos:column="48"/></name></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><name><name pos:line="6" pos:column="14">topology<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">.<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">num_threads<pos:position pos:line="6" pos:column="34"/></name></name> <operator pos:line="6" pos:column="35">==<pos:position pos:line="6" pos:column="37"/></operator> <literal type="number" pos:line="6" pos:column="38">0<pos:position pos:line="6" pos:column="39"/></literal><operator pos:line="6" pos:column="39">)<pos:position pos:line="6" pos:column="40"/></operator>
	    <operator pos:line="7" pos:column="13">||<pos:position pos:line="7" pos:column="15"/></operator> <operator pos:line="7" pos:column="16">(<pos:position pos:line="7" pos:column="17"/></operator><name><name pos:line="7" pos:column="17">topology<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">num_cores<pos:position pos:line="7" pos:column="35"/></name></name> <operator pos:line="7" pos:column="36">==<pos:position pos:line="7" pos:column="38"/></operator> <literal type="number" pos:line="7" pos:column="39">0<pos:position pos:line="7" pos:column="40"/></literal><operator pos:line="7" pos:column="40">)<pos:position pos:line="7" pos:column="41"/></operator>
	    <operator pos:line="8" pos:column="13">||<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name><name pos:line="8" pos:column="17">topology<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">num_packages<pos:position pos:line="8" pos:column="38"/></name></name> <operator pos:line="8" pos:column="39">==<pos:position pos:line="8" pos:column="41"/></operator> <literal type="number" pos:line="8" pos:column="42">0<pos:position pos:line="8" pos:column="43"/></literal><operator pos:line="8" pos:column="43">)<pos:position pos:line="8" pos:column="44"/></operator></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45">
	<block pos:line="9" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">ERROR<pos:position pos:line="10" pos:column="22"/></name> <argument_list pos:line="10" pos:column="23">(<argument><expr><literal type="string" pos:line="10" pos:column="24">"turbostat plugin: Invalid topology: %u threads, %u cores, %u packages"<pos:position pos:line="10" pos:column="95"/></literal></expr></argument>,
		       <argument><expr><name><name pos:line="11" pos:column="24">topology<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">num_threads<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="46">topology<pos:position pos:line="11" pos:column="54"/></name><operator pos:line="11" pos:column="54">.<pos:position pos:line="11" pos:column="55"/></operator><name pos:line="11" pos:column="55">num_cores<pos:position pos:line="11" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="66">topology<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">.<pos:position pos:line="11" pos:column="75"/></operator><name pos:line="11" pos:column="75">num_packages<pos:position pos:line="11" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="89"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">-<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="15" pos:column="9">total_threads<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <name><name pos:line="15" pos:column="25">topology<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">.<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">num_threads<pos:position pos:line="15" pos:column="45"/></name></name> <operator pos:line="15" pos:column="46">*<pos:position pos:line="15" pos:column="47"/></operator> <name><name pos:line="15" pos:column="48">topology<pos:position pos:line="15" pos:column="56"/></name><operator pos:line="15" pos:column="56">.<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="57">num_cores<pos:position pos:line="15" pos:column="66"/></name></name> <operator pos:line="15" pos:column="67">*<pos:position pos:line="15" pos:column="68"/></operator> <name><name pos:line="15" pos:column="69">topology<pos:position pos:line="15" pos:column="77"/></name><operator pos:line="15" pos:column="77">.<pos:position pos:line="15" pos:column="78"/></operator><name pos:line="15" pos:column="78">num_packages<pos:position pos:line="15" pos:column="90"/></name></name></expr>;<pos:position pos:line="15" pos:column="91"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">threads<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">calloc<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">total_threads<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="42">sizeof<argument_list pos:line="16" pos:column="48">(<argument><expr pos:line="16" pos:column="49">struct <name pos:line="16" pos:column="56">thread_data<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">*<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">threads<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">==<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
	<block pos:line="18" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">ERROR<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="string" pos:line="19" pos:column="24">"turbostat plugin: calloc failed"<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>
		<return pos:line="20" pos:column="17">return <expr><operator pos:line="20" pos:column="24">-<pos:position pos:line="20" pos:column="25"/></operator><literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></return>
	}<pos:position pos:line="21" pos:column="10"/></block></then></if>

	<for pos:line="23" pos:column="9">for <control pos:line="23" pos:column="13">(<init><decl><type><name pos:line="23" pos:column="14">unsigned<pos:position pos:line="23" pos:column="22"/></name> <name pos:line="23" pos:column="23">int<pos:position pos:line="23" pos:column="26"/></name></type> <name pos:line="23" pos:column="27">i<pos:position pos:line="23" pos:column="28"/></name> <init pos:line="23" pos:column="29">= <expr><literal type="number" pos:line="23" pos:column="31">0<pos:position pos:line="23" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="33"/></init> <condition><expr><name pos:line="23" pos:column="34">i<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">&lt;<pos:position pos:line="23" pos:column="40"/></operator> <name pos:line="23" pos:column="38">total_threads<pos:position pos:line="23" pos:column="51"/></name></expr>;<pos:position pos:line="23" pos:column="52"/></condition> <incr><expr><operator pos:line="23" pos:column="53">++<pos:position pos:line="23" pos:column="55"/></operator><name pos:line="23" pos:column="55">i<pos:position pos:line="23" pos:column="56"/></name></expr></incr>)<pos:position pos:line="23" pos:column="57"/></control>
		<block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><operator pos:line="24" pos:column="18">*<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">threads<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator><index pos:line="24" pos:column="27">[<expr><name pos:line="24" pos:column="28">i<pos:position pos:line="24" pos:column="29"/></name></expr>]<pos:position pos:line="24" pos:column="30"/></index><operator pos:line="24" pos:column="30">.<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">cpu_id<pos:position pos:line="24" pos:column="37"/></name> <operator pos:line="24" pos:column="38">=<pos:position pos:line="24" pos:column="39"/></operator> <name><name pos:line="24" pos:column="40">topology<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">.<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">max_cpu_id<pos:position pos:line="24" pos:column="59"/></name></name> <operator pos:line="24" pos:column="60">+<pos:position pos:line="24" pos:column="61"/></operator> <literal type="number" pos:line="24" pos:column="62">1<pos:position pos:line="24" pos:column="63"/></literal></expr>;<pos:position pos:line="24" pos:column="64"/></expr_stmt></block></for>

	<expr_stmt><expr><name pos:line="26" pos:column="9">total_cores<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <name><name pos:line="26" pos:column="23">topology<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">num_cores<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">*<pos:position pos:line="26" pos:column="43"/></operator> <name><name pos:line="26" pos:column="44">topology<pos:position pos:line="26" pos:column="52"/></name><operator pos:line="26" pos:column="52">.<pos:position pos:line="26" pos:column="53"/></operator><name pos:line="26" pos:column="53">num_packages<pos:position pos:line="26" pos:column="65"/></name></name></expr>;<pos:position pos:line="26" pos:column="66"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="27" pos:column="9">*<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">cores<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">calloc<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">total_cores<pos:position pos:line="27" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="27" pos:column="38">sizeof<argument_list pos:line="27" pos:column="44">(<argument><expr pos:line="27" pos:column="45">struct <name pos:line="27" pos:column="52">core_data<pos:position pos:line="27" pos:column="61"/></name></expr></argument>)<pos:position pos:line="27" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="27" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="64"/></expr_stmt>
	<if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">*<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="14">cores<pos:position pos:line="28" pos:column="19"/></name> <operator pos:line="28" pos:column="20">==<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">NULL<pos:position pos:line="28" pos:column="27"/></name></expr>)<pos:position pos:line="28" pos:column="28"/></condition><then pos:line="28" pos:column="28">
	<block pos:line="29" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">ERROR<pos:position pos:line="30" pos:column="22"/></name> <argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"turbostat plugin: calloc failed"<pos:position pos:line="30" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">sfree<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">threads<pos:position pos:line="31" pos:column="31"/></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">-<pos:position pos:line="32" pos:column="25"/></operator><literal type="number" pos:line="32" pos:column="25">1<pos:position pos:line="32" pos:column="26"/></literal></expr>;<pos:position pos:line="32" pos:column="27"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<expr_stmt><expr><operator pos:line="35" pos:column="9">*<pos:position pos:line="35" pos:column="10"/></operator><name pos:line="35" pos:column="10">packages<pos:position pos:line="35" pos:column="18"/></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">calloc<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name><name pos:line="35" pos:column="28">topology<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">.<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="37">num_packages<pos:position pos:line="35" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="51">sizeof<argument_list pos:line="35" pos:column="57">(<argument><expr pos:line="35" pos:column="58">struct <name pos:line="35" pos:column="65">pkg_data<pos:position pos:line="35" pos:column="73"/></name></expr></argument>)<pos:position pos:line="35" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="76"/></expr_stmt>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">*<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">packages<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">==<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr>)<pos:position pos:line="36" pos:column="31"/></condition><then pos:line="36" pos:column="31">
	<block pos:line="37" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="38" pos:column="17">ERROR<pos:position pos:line="38" pos:column="22"/></name> <argument_list pos:line="38" pos:column="23">(<argument><expr><literal type="string" pos:line="38" pos:column="24">"turbostat plugin: calloc failed"<pos:position pos:line="38" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">sfree<pos:position pos:line="39" pos:column="22"/></name> <argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">cores<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="40" pos:column="17">sfree<pos:position pos:line="40" pos:column="22"/></name> <argument_list pos:line="40" pos:column="23">(<argument><expr><name pos:line="40" pos:column="24">threads<pos:position pos:line="40" pos:column="31"/></name></expr></argument>)<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
		<return pos:line="41" pos:column="17">return <expr><operator pos:line="41" pos:column="24">-<pos:position pos:line="41" pos:column="25"/></operator><literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></return>
	}<pos:position pos:line="42" pos:column="10"/></block></then></if>

	<return pos:line="44" pos:column="9">return <expr><literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1286_collectd-5.0.5.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_block<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><call><name pos:line="3" pos:column="13">strcasecmp<pos:position pos:line="3" pos:column="23"/></name> <argument_list pos:line="3" pos:column="24">(<argument><expr><name><name pos:line="3" pos:column="25">ci<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">key<pos:position pos:line="3" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="34">"LoadPlugin"<pos:position pos:line="3" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></call> <operator pos:line="3" pos:column="48">==<pos:position pos:line="3" pos:column="50"/></operator> <literal type="number" pos:line="3" pos:column="51">0<pos:position pos:line="3" pos:column="52"/></literal></expr>)<pos:position pos:line="3" pos:column="53"/></condition><then pos:line="3" pos:column="53">
		<block type="pseudo"><return pos:line="4" pos:column="17">return <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><call><name pos:line="4" pos:column="25">dispatch_loadplugin<pos:position pos:line="4" pos:column="44"/></name> <argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">ci<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call><operator pos:line="4" pos:column="49">)<pos:position pos:line="4" pos:column="50"/></operator></expr>;<pos:position pos:line="4" pos:column="51"/></return></block></then>
	<elseif pos:line="5" pos:column="9">else <if pos:line="5" pos:column="14">if <condition pos:line="5" pos:column="17">(<expr><call><name pos:line="5" pos:column="18">strcasecmp<pos:position pos:line="5" pos:column="28"/></name> <argument_list pos:line="5" pos:column="29">(<argument><expr><name><name pos:line="5" pos:column="30">ci<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">key<pos:position pos:line="5" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="39">"Plugin"<pos:position pos:line="5" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call> <operator pos:line="5" pos:column="49">==<pos:position pos:line="5" pos:column="51"/></operator> <literal type="number" pos:line="5" pos:column="52">0<pos:position pos:line="5" pos:column="53"/></literal></expr>)<pos:position pos:line="5" pos:column="54"/></condition><then pos:line="5" pos:column="54">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">(<pos:position pos:line="6" pos:column="25"/></operator><call><name pos:line="6" pos:column="25">dispatch_block_plugin<pos:position pos:line="6" pos:column="46"/></name> <argument_list pos:line="6" pos:column="47">(<argument><expr><name pos:line="6" pos:column="48">ci<pos:position pos:line="6" pos:column="50"/></name></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator></expr>;<pos:position pos:line="6" pos:column="53"/></return></block></then></if></elseif>
	<elseif pos:line="7" pos:column="9">else <if pos:line="7" pos:column="14">if <condition pos:line="7" pos:column="17">(<expr><call><name pos:line="7" pos:column="18">strcasecmp<pos:position pos:line="7" pos:column="28"/></name> <argument_list pos:line="7" pos:column="29">(<argument><expr><name><name pos:line="7" pos:column="30">ci<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">key<pos:position pos:line="7" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="39">"Chain"<pos:position pos:line="7" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call> <operator pos:line="7" pos:column="48">==<pos:position pos:line="7" pos:column="50"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal></expr>)<pos:position pos:line="7" pos:column="53"/></condition><then pos:line="7" pos:column="53">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><call><name pos:line="8" pos:column="25">fc_configure<pos:position pos:line="8" pos:column="37"/></name> <argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">ci<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator></expr>;<pos:position pos:line="8" pos:column="44"/></return></block></then></if></elseif></if>

	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal><operator pos:line="10" pos:column="18">)<pos:position pos:line="10" pos:column="19"/></operator></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

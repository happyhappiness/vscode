<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2900_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_unregister_flush<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">name<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">plugin_ctx_t<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">ctx<pos:position pos:line="2" pos:column="19"/></name> <init pos:line="2" pos:column="20">= <expr><call><name pos:line="2" pos:column="22">plugin_get_ctx<pos:position pos:line="2" pos:column="36"/></name><argument_list pos:line="2" pos:column="36">()<pos:position pos:line="2" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="2" pos:column="39"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name><name pos:line="4" pos:column="7">ctx<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">.<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">flush_interval<pos:position pos:line="4" pos:column="25"/></name></name> <operator pos:line="4" pos:column="26">!=<pos:position pos:line="4" pos:column="28"/></operator> <literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">flush_name<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">flush_name<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">plugin_flush_callback_name<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">name<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">flush_name<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">!=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <block pos:line="8" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="9" pos:column="7">plugin_unregister_read<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">flush_name<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="42"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">sfree<pos:position pos:line="10" pos:column="12"/></name><argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">flush_name<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <return pos:line="14" pos:column="3">return <expr><call><name pos:line="14" pos:column="10">plugin_unregister<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">list_flush<pos:position pos:line="14" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">name<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_278_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">df_read<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_STATVFS<pos:position pos:line="3" pos:column="17"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">statvfs<pos:position pos:line="4" pos:column="23"/></name></name></type> <name pos:line="4" pos:column="24">statbuf<pos:position pos:line="4" pos:column="31"/></name></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
<cpp:elif pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">elif<pos:position pos:line="5" pos:column="6"/></cpp:directive> <expr><name pos:line="5" pos:column="7">HAVE_STATFS<pos:position pos:line="5" pos:column="18"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name><name pos:line="6" pos:column="9">struct<pos:position pos:line="6" pos:column="15"/></name> <name pos:line="6" pos:column="16">statfs<pos:position pos:line="6" pos:column="22"/></name></name></type> <name pos:line="6" pos:column="23">statbuf<pos:position pos:line="6" pos:column="30"/></name></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
	<comment type="block" pos:line="8" pos:column="9">/* struct STATANYFS statbuf; */</comment>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">cu_mount_t<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">mnt_list<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">cu_mount_t<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="21">mnt_ptr<pos:position pos:line="10" pos:column="28"/></name></decl>;<pos:position pos:line="10" pos:column="29"/></decl_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">mnt_list<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">cu_mount_getlist<pos:position pos:line="13" pos:column="29"/></name> <argument_list pos:line="13" pos:column="30">(<argument><expr><operator pos:line="13" pos:column="31">&amp;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="32">mnt_list<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">NULL<pos:position pos:line="13" pos:column="49"/></name></expr>)<pos:position pos:line="13" pos:column="50"/></condition><then pos:line="13" pos:column="50">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">ERROR<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"df plugin: cu_mount_getlist failed."<pos:position pos:line="15" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><expr><name pos:line="19" pos:column="14">mnt_ptr<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">mnt_list<pos:position pos:line="19" pos:column="32"/></name></expr>;<pos:position pos:line="19" pos:column="33"/></init> <condition><expr><name pos:line="19" pos:column="34">mnt_ptr<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">!=<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">NULL<pos:position pos:line="19" pos:column="49"/></name></expr>;<pos:position pos:line="19" pos:column="50"/></condition> <incr><expr><name pos:line="19" pos:column="51">mnt_ptr<pos:position pos:line="19" pos:column="58"/></name> <operator pos:line="19" pos:column="59">=<pos:position pos:line="19" pos:column="60"/></operator> <name><name pos:line="19" pos:column="61">mnt_ptr<pos:position pos:line="19" pos:column="68"/></name><operator pos:line="19" pos:column="68">-&gt;<pos:position pos:line="19" pos:column="73"/></operator><name pos:line="19" pos:column="70">next<pos:position pos:line="19" pos:column="74"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="75"/></control>
	<block pos:line="20" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">unsigned<pos:position pos:line="21" pos:column="25"/></name> <name pos:line="21" pos:column="26">long<pos:position pos:line="21" pos:column="30"/></name> <name pos:line="21" pos:column="31">long<pos:position pos:line="21" pos:column="35"/></name></type> <name pos:line="21" pos:column="36">blocksize<pos:position pos:line="21" pos:column="45"/></name></decl>;<pos:position pos:line="21" pos:column="46"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="22" pos:column="17">char<pos:position pos:line="22" pos:column="21"/></name></type> <name><name pos:line="22" pos:column="22">disk_name<pos:position pos:line="22" pos:column="31"/></name><index pos:line="22" pos:column="31">[<expr><literal type="number" pos:line="22" pos:column="32">256<pos:position pos:line="22" pos:column="35"/></literal></expr>]<pos:position pos:line="22" pos:column="36"/></index></name></decl>;<pos:position pos:line="22" pos:column="37"/></decl_stmt>

		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><call><name pos:line="24" pos:column="21">ignorelist_match<pos:position pos:line="24" pos:column="37"/></name> <argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">il_device<pos:position pos:line="24" pos:column="48"/></name></expr></argument>,
					<argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="41">(<pos:position pos:line="25" pos:column="42"/></operator><name><name pos:line="25" pos:column="42">mnt_ptr<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">-&gt;<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="51">spec_device<pos:position pos:line="25" pos:column="62"/></name></name> <operator pos:line="25" pos:column="63">!=<pos:position pos:line="25" pos:column="65"/></operator> <name pos:line="25" pos:column="66">NULL<pos:position pos:line="25" pos:column="70"/></name><operator pos:line="25" pos:column="70">)<pos:position pos:line="25" pos:column="71"/></operator></expr>
					?<pos:position pos:line="26" pos:column="42"/></condition><then pos:line="26" pos:column="42"> <expr><name><name pos:line="26" pos:column="43">mnt_ptr<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">spec_device<pos:position pos:line="26" pos:column="63"/></name></name></expr>
					<pos:position pos:line="27" pos:column="6"/></then><else pos:line="27" pos:column="41">: <expr><name><name pos:line="27" pos:column="43">mnt_ptr<pos:position pos:line="27" pos:column="50"/></name><operator pos:line="27" pos:column="50">-&gt;<pos:position pos:line="27" pos:column="55"/></operator><name pos:line="27" pos:column="52">device<pos:position pos:line="27" pos:column="58"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="60"/></condition><then pos:line="27" pos:column="60">
			<block type="pseudo"><continue pos:line="28" pos:column="25">continue;<pos:position pos:line="28" pos:column="34"/></continue></block></then></if>
		<if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">ignorelist_match<pos:position pos:line="29" pos:column="37"/></name> <argument_list pos:line="29" pos:column="38">(<argument><expr><name pos:line="29" pos:column="39">il_mountpoint<pos:position pos:line="29" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="54">mnt_ptr<pos:position pos:line="29" pos:column="61"/></name><operator pos:line="29" pos:column="61">-&gt;<pos:position pos:line="29" pos:column="66"/></operator><name pos:line="29" pos:column="63">dir<pos:position pos:line="29" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="68"/></condition><then pos:line="29" pos:column="68">
			<block type="pseudo"><continue pos:line="30" pos:column="25">continue;<pos:position pos:line="30" pos:column="34"/></continue></block></then></if>
		<if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">ignorelist_match<pos:position pos:line="31" pos:column="37"/></name> <argument_list pos:line="31" pos:column="38">(<argument><expr><name pos:line="31" pos:column="39">il_fstype<pos:position pos:line="31" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="50">mnt_ptr<pos:position pos:line="31" pos:column="57"/></name><operator pos:line="31" pos:column="57">-&gt;<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="59">type<pos:position pos:line="31" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="65"/></condition><then pos:line="31" pos:column="65">
			<block type="pseudo"><continue pos:line="32" pos:column="25">continue;<pos:position pos:line="32" pos:column="34"/></continue></block></then></if>

		<if pos:line="34" pos:column="17">if <condition pos:line="34" pos:column="20">(<expr><call><name pos:line="34" pos:column="21">STATANYFS<pos:position pos:line="34" pos:column="30"/></name> <argument_list pos:line="34" pos:column="31">(<argument><expr><name><name pos:line="34" pos:column="32">mnt_ptr<pos:position pos:line="34" pos:column="39"/></name><operator pos:line="34" pos:column="39">-&gt;<pos:position pos:line="34" pos:column="44"/></operator><name pos:line="34" pos:column="41">dir<pos:position pos:line="34" pos:column="44"/></name></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="46">&amp;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="47">statbuf<pos:position pos:line="34" pos:column="54"/></name></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call> <operator pos:line="34" pos:column="56">&lt;<pos:position pos:line="34" pos:column="60"/></operator> <literal type="number" pos:line="34" pos:column="58">0<pos:position pos:line="34" pos:column="59"/></literal></expr>)<pos:position pos:line="34" pos:column="60"/></condition><then pos:line="34" pos:column="60">
		<block pos:line="35" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="36" pos:column="25">char<pos:position pos:line="36" pos:column="29"/></name></type> <name><name pos:line="36" pos:column="30">errbuf<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><literal type="number" pos:line="36" pos:column="37">1024<pos:position pos:line="36" pos:column="41"/></literal></expr>]<pos:position pos:line="36" pos:column="42"/></index></name></decl>;<pos:position pos:line="36" pos:column="43"/></decl_stmt>
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">ERROR<pos:position pos:line="37" pos:column="30"/></name> <argument_list pos:line="37" pos:column="31">(<argument><expr><literal type="string" pos:line="37" pos:column="32">"statv?fs failed: %s"<pos:position pos:line="37" pos:column="53"/></literal></expr></argument>,
					<argument><expr><call><name pos:line="38" pos:column="41">sstrerror<pos:position pos:line="38" pos:column="50"/></name> <argument_list pos:line="38" pos:column="51">(<argument><expr><name pos:line="38" pos:column="52">errno<pos:position pos:line="38" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="59">errbuf<pos:position pos:line="38" pos:column="65"/></name></expr></argument>,
						<argument><expr><sizeof pos:line="39" pos:column="49">sizeof <argument_list pos:line="39" pos:column="56">(<argument><expr><name pos:line="39" pos:column="57">errbuf<pos:position pos:line="39" pos:column="63"/></name></expr></argument>)<pos:position pos:line="39" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt>
			<continue pos:line="40" pos:column="25">continue;<pos:position pos:line="40" pos:column="34"/></continue>
		}<pos:position pos:line="41" pos:column="18"/></block></then></if>

		<if pos:line="43" pos:column="17">if <condition pos:line="43" pos:column="20">(<expr><operator pos:line="43" pos:column="21">!<pos:position pos:line="43" pos:column="22"/></operator><name><name pos:line="43" pos:column="22">statbuf<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">.<pos:position pos:line="43" pos:column="30"/></operator><name pos:line="43" pos:column="30">f_blocks<pos:position pos:line="43" pos:column="38"/></name></name></expr>)<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39">
			<block type="pseudo"><continue pos:line="44" pos:column="25">continue;<pos:position pos:line="44" pos:column="34"/></continue></block></then></if>

		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">by_device<pos:position pos:line="46" pos:column="30"/></name></expr>)<pos:position pos:line="46" pos:column="31"/></condition><then pos:line="46" pos:column="31"> 
		<block pos:line="47" pos:column="17">{
			<comment type="block" pos:line="48" pos:column="25">/* eg, /dev/hda1  -- strip off the "/dev/" */</comment>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><call><name pos:line="49" pos:column="29">strncmp<pos:position pos:line="49" pos:column="36"/></name> <argument_list pos:line="49" pos:column="37">(<argument><expr><name><name pos:line="49" pos:column="38">mnt_ptr<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">-&gt;<pos:position pos:line="49" pos:column="50"/></operator><name pos:line="49" pos:column="47">spec_device<pos:position pos:line="49" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="60">"/dev/"<pos:position pos:line="49" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="69">strlen<pos:position pos:line="49" pos:column="75"/></name> <argument_list pos:line="49" pos:column="76">(<argument><expr><literal type="string" pos:line="49" pos:column="77">"/dev/"<pos:position pos:line="49" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="86"/></argument_list></call> <operator pos:line="49" pos:column="87">==<pos:position pos:line="49" pos:column="89"/></operator> <literal type="number" pos:line="49" pos:column="90">0<pos:position pos:line="49" pos:column="91"/></literal></expr>)<pos:position pos:line="49" pos:column="92"/></condition><then pos:line="49" pos:column="92">
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="33">sstrncpy<pos:position pos:line="50" pos:column="41"/></name> <argument_list pos:line="50" pos:column="42">(<argument><expr><name pos:line="50" pos:column="43">disk_name<pos:position pos:line="50" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="54">mnt_ptr<pos:position pos:line="50" pos:column="61"/></name><operator pos:line="50" pos:column="61">-&gt;<pos:position pos:line="50" pos:column="66"/></operator><name pos:line="50" pos:column="63">spec_device<pos:position pos:line="50" pos:column="74"/></name></name> <operator pos:line="50" pos:column="75">+<pos:position pos:line="50" pos:column="76"/></operator> <call><name pos:line="50" pos:column="77">strlen<pos:position pos:line="50" pos:column="83"/></name> <argument_list pos:line="50" pos:column="84">(<argument><expr><literal type="string" pos:line="50" pos:column="85">"/dev/"<pos:position pos:line="50" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="93"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="95">sizeof <argument_list pos:line="50" pos:column="102">(<argument><expr><name pos:line="50" pos:column="103">disk_name<pos:position pos:line="50" pos:column="112"/></name></expr></argument>)<pos:position pos:line="50" pos:column="113"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="115"/></expr_stmt></block></then>
			<else pos:line="51" pos:column="25">else
				<block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="33">sstrncpy<pos:position pos:line="52" pos:column="41"/></name> <argument_list pos:line="52" pos:column="42">(<argument><expr><name pos:line="52" pos:column="43">disk_name<pos:position pos:line="52" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="54">mnt_ptr<pos:position pos:line="52" pos:column="61"/></name><operator pos:line="52" pos:column="61">-&gt;<pos:position pos:line="52" pos:column="66"/></operator><name pos:line="52" pos:column="63">spec_device<pos:position pos:line="52" pos:column="74"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="52" pos:column="76">sizeof <argument_list pos:line="52" pos:column="83">(<argument><expr><name pos:line="52" pos:column="84">disk_name<pos:position pos:line="52" pos:column="93"/></name></expr></argument>)<pos:position pos:line="52" pos:column="94"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="52" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="96"/></expr_stmt></block></else></if>

			<if pos:line="54" pos:column="25">if <condition pos:line="54" pos:column="28">(<expr><call><name pos:line="54" pos:column="29">strlen<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">disk_name<pos:position pos:line="54" pos:column="45"/></name></expr></argument>)<pos:position pos:line="54" pos:column="46"/></argument_list></call> <operator pos:line="54" pos:column="47">&lt;<pos:position pos:line="54" pos:column="51"/></operator> <literal type="number" pos:line="54" pos:column="49">1<pos:position pos:line="54" pos:column="50"/></literal></expr>)<pos:position pos:line="54" pos:column="51"/></condition><then pos:line="54" pos:column="51"> 
			<block pos:line="55" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="56" pos:column="33">DEBUG<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><literal type="string" pos:line="56" pos:column="39">"df: no device name name for mountpoint %s, skipping"<pos:position pos:line="56" pos:column="92"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="94">mnt_ptr<pos:position pos:line="56" pos:column="101"/></name><operator pos:line="56" pos:column="101">-&gt;<pos:position pos:line="56" pos:column="106"/></operator><name pos:line="56" pos:column="103">dir<pos:position pos:line="56" pos:column="106"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="108"/></expr_stmt>
				<continue pos:line="57" pos:column="33">continue;<pos:position pos:line="57" pos:column="42"/></continue>
			}<pos:position pos:line="58" pos:column="26"/></block></then></if>
		}<pos:position pos:line="59" pos:column="18"/></block></then> 
		<else pos:line="60" pos:column="17">else 
		<block pos:line="61" pos:column="17">{
			<if pos:line="62" pos:column="25">if <condition pos:line="62" pos:column="28">(<expr><call><name pos:line="62" pos:column="29">strcmp<pos:position pos:line="62" pos:column="35"/></name> <argument_list pos:line="62" pos:column="36">(<argument><expr><name><name pos:line="62" pos:column="37">mnt_ptr<pos:position pos:line="62" pos:column="44"/></name><operator pos:line="62" pos:column="44">-&gt;<pos:position pos:line="62" pos:column="49"/></operator><name pos:line="62" pos:column="46">dir<pos:position pos:line="62" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="51">"/"<pos:position pos:line="62" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="55"/></argument_list></call> <operator pos:line="62" pos:column="56">==<pos:position pos:line="62" pos:column="58"/></operator> <literal type="number" pos:line="62" pos:column="59">0<pos:position pos:line="62" pos:column="60"/></literal></expr>)<pos:position pos:line="62" pos:column="61"/></condition><then pos:line="62" pos:column="61">
			<block pos:line="63" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="64" pos:column="33">sstrncpy<pos:position pos:line="64" pos:column="41"/></name> <argument_list pos:line="64" pos:column="42">(<argument><expr><name pos:line="64" pos:column="43">disk_name<pos:position pos:line="64" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="54">"root"<pos:position pos:line="64" pos:column="60"/></literal></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="62">sizeof <argument_list pos:line="64" pos:column="69">(<argument><expr><name pos:line="64" pos:column="70">disk_name<pos:position pos:line="64" pos:column="79"/></name></expr></argument>)<pos:position pos:line="64" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="82"/></expr_stmt>
			}<pos:position pos:line="65" pos:column="26"/></block></then>
			<else pos:line="66" pos:column="25">else
			<block pos:line="67" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="68" pos:column="33">int<pos:position pos:line="68" pos:column="36"/></name></type> <name pos:line="68" pos:column="37">i<pos:position pos:line="68" pos:column="38"/></name></decl>, <decl><type ref="prev"/><name pos:line="68" pos:column="40">len<pos:position pos:line="68" pos:column="43"/></name></decl>;<pos:position pos:line="68" pos:column="44"/></decl_stmt>

				<expr_stmt><expr><call><name pos:line="70" pos:column="33">sstrncpy<pos:position pos:line="70" pos:column="41"/></name> <argument_list pos:line="70" pos:column="42">(<argument><expr><name pos:line="70" pos:column="43">disk_name<pos:position pos:line="70" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="54">mnt_ptr<pos:position pos:line="70" pos:column="61"/></name><operator pos:line="70" pos:column="61">-&gt;<pos:position pos:line="70" pos:column="66"/></operator><name pos:line="70" pos:column="63">dir<pos:position pos:line="70" pos:column="66"/></name></name> <operator pos:line="70" pos:column="67">+<pos:position pos:line="70" pos:column="68"/></operator> <literal type="number" pos:line="70" pos:column="69">1<pos:position pos:line="70" pos:column="70"/></literal></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="72">sizeof <argument_list pos:line="70" pos:column="79">(<argument><expr><name pos:line="70" pos:column="80">disk_name<pos:position pos:line="70" pos:column="89"/></name></expr></argument>)<pos:position pos:line="70" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="92"/></expr_stmt>
				<expr_stmt><expr><name pos:line="71" pos:column="33">len<pos:position pos:line="71" pos:column="36"/></name> <operator pos:line="71" pos:column="37">=<pos:position pos:line="71" pos:column="38"/></operator> <call><name pos:line="71" pos:column="39">strlen<pos:position pos:line="71" pos:column="45"/></name> <argument_list pos:line="71" pos:column="46">(<argument><expr><name pos:line="71" pos:column="47">disk_name<pos:position pos:line="71" pos:column="56"/></name></expr></argument>)<pos:position pos:line="71" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="58"/></expr_stmt>

				<for pos:line="73" pos:column="33">for <control pos:line="73" pos:column="37">(<init><expr><name pos:line="73" pos:column="38">i<pos:position pos:line="73" pos:column="39"/></name> <operator pos:line="73" pos:column="40">=<pos:position pos:line="73" pos:column="41"/></operator> <literal type="number" pos:line="73" pos:column="42">0<pos:position pos:line="73" pos:column="43"/></literal></expr>;<pos:position pos:line="73" pos:column="44"/></init> <condition><expr><name pos:line="73" pos:column="45">i<pos:position pos:line="73" pos:column="46"/></name> <operator pos:line="73" pos:column="47">&lt;<pos:position pos:line="73" pos:column="51"/></operator> <name pos:line="73" pos:column="49">len<pos:position pos:line="73" pos:column="52"/></name></expr>;<pos:position pos:line="73" pos:column="53"/></condition> <incr><expr><name pos:line="73" pos:column="54">i<pos:position pos:line="73" pos:column="55"/></name><operator pos:line="73" pos:column="55">++<pos:position pos:line="73" pos:column="57"/></operator></expr></incr>)<pos:position pos:line="73" pos:column="58"/></control>
					<block type="pseudo"><if pos:line="74" pos:column="41">if <condition pos:line="74" pos:column="44">(<expr><name><name pos:line="74" pos:column="45">disk_name<pos:position pos:line="74" pos:column="54"/></name><index pos:line="74" pos:column="54">[<expr><name pos:line="74" pos:column="55">i<pos:position pos:line="74" pos:column="56"/></name></expr>]<pos:position pos:line="74" pos:column="57"/></index></name> <operator pos:line="74" pos:column="58">==<pos:position pos:line="74" pos:column="60"/></operator> <literal type="char" pos:line="74" pos:column="61">'/'<pos:position pos:line="74" pos:column="64"/></literal></expr>)<pos:position pos:line="74" pos:column="65"/></condition><then pos:line="74" pos:column="65">
						<block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="49">disk_name<pos:position pos:line="75" pos:column="58"/></name><index pos:line="75" pos:column="58">[<expr><name pos:line="75" pos:column="59">i<pos:position pos:line="75" pos:column="60"/></name></expr>]<pos:position pos:line="75" pos:column="61"/></index></name> <operator pos:line="75" pos:column="62">=<pos:position pos:line="75" pos:column="63"/></operator> <literal type="char" pos:line="75" pos:column="64">'-'<pos:position pos:line="75" pos:column="67"/></literal></expr>;<pos:position pos:line="75" pos:column="68"/></expr_stmt></block></then></if></block></for>
			}<pos:position pos:line="76" pos:column="26"/></block></else></if>
		}<pos:position pos:line="77" pos:column="18"/></block></else></if>

		<expr_stmt><expr><name pos:line="79" pos:column="17">blocksize<pos:position pos:line="79" pos:column="26"/></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <call><name pos:line="79" pos:column="29">BLOCKSIZE<pos:position pos:line="79" pos:column="38"/></name><argument_list pos:line="79" pos:column="38">(<argument><expr><name pos:line="79" pos:column="39">statbuf<pos:position pos:line="79" pos:column="46"/></name></expr></argument>)<pos:position pos:line="79" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="48"/></expr_stmt>

		<if pos:line="81" pos:column="17">if <condition pos:line="81" pos:column="20">(<expr><name pos:line="81" pos:column="21">report_reserved<pos:position pos:line="81" pos:column="36"/></name></expr>)<pos:position pos:line="81" pos:column="37"/></condition><then pos:line="81" pos:column="37">
		<block pos:line="82" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="83" pos:column="25">uint64_t<pos:position pos:line="83" pos:column="33"/></name></type> <name pos:line="83" pos:column="34">blk_free<pos:position pos:line="83" pos:column="42"/></name></decl>;<pos:position pos:line="83" pos:column="43"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="84" pos:column="25">uint64_t<pos:position pos:line="84" pos:column="33"/></name></type> <name pos:line="84" pos:column="34">blk_reserved<pos:position pos:line="84" pos:column="46"/></name></decl>;<pos:position pos:line="84" pos:column="47"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="85" pos:column="25">uint64_t<pos:position pos:line="85" pos:column="33"/></name></type> <name pos:line="85" pos:column="34">blk_used<pos:position pos:line="85" pos:column="42"/></name></decl>;<pos:position pos:line="85" pos:column="43"/></decl_stmt>

			<comment type="block" pos:line="87" pos:column="25">/* Sanity-check for the values in the struct */</comment>
			<if pos:line="88" pos:column="25">if <condition pos:line="88" pos:column="28">(<expr><name><name pos:line="88" pos:column="29">statbuf<pos:position pos:line="88" pos:column="36"/></name><operator pos:line="88" pos:column="36">.<pos:position pos:line="88" pos:column="37"/></operator><name pos:line="88" pos:column="37">f_bfree<pos:position pos:line="88" pos:column="44"/></name></name> <operator pos:line="88" pos:column="45">&lt;<pos:position pos:line="88" pos:column="49"/></operator> <name><name pos:line="88" pos:column="47">statbuf<pos:position pos:line="88" pos:column="54"/></name><operator pos:line="88" pos:column="54">.<pos:position pos:line="88" pos:column="55"/></operator><name pos:line="88" pos:column="55">f_bavail<pos:position pos:line="88" pos:column="63"/></name></name></expr>)<pos:position pos:line="88" pos:column="64"/></condition><then pos:line="88" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="89" pos:column="33">statbuf<pos:position pos:line="89" pos:column="40"/></name><operator pos:line="89" pos:column="40">.<pos:position pos:line="89" pos:column="41"/></operator><name pos:line="89" pos:column="41">f_bfree<pos:position pos:line="89" pos:column="48"/></name></name> <operator pos:line="89" pos:column="49">=<pos:position pos:line="89" pos:column="50"/></operator> <name><name pos:line="89" pos:column="51">statbuf<pos:position pos:line="89" pos:column="58"/></name><operator pos:line="89" pos:column="58">.<pos:position pos:line="89" pos:column="59"/></operator><name pos:line="89" pos:column="59">f_bavail<pos:position pos:line="89" pos:column="67"/></name></name></expr>;<pos:position pos:line="89" pos:column="68"/></expr_stmt></block></then></if>
			<if pos:line="90" pos:column="25">if <condition pos:line="90" pos:column="28">(<expr><name><name pos:line="90" pos:column="29">statbuf<pos:position pos:line="90" pos:column="36"/></name><operator pos:line="90" pos:column="36">.<pos:position pos:line="90" pos:column="37"/></operator><name pos:line="90" pos:column="37">f_blocks<pos:position pos:line="90" pos:column="45"/></name></name> <operator pos:line="90" pos:column="46">&lt;<pos:position pos:line="90" pos:column="50"/></operator> <name><name pos:line="90" pos:column="48">statbuf<pos:position pos:line="90" pos:column="55"/></name><operator pos:line="90" pos:column="55">.<pos:position pos:line="90" pos:column="56"/></operator><name pos:line="90" pos:column="56">f_bfree<pos:position pos:line="90" pos:column="63"/></name></name></expr>)<pos:position pos:line="90" pos:column="64"/></condition><then pos:line="90" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="91" pos:column="33">statbuf<pos:position pos:line="91" pos:column="40"/></name><operator pos:line="91" pos:column="40">.<pos:position pos:line="91" pos:column="41"/></operator><name pos:line="91" pos:column="41">f_blocks<pos:position pos:line="91" pos:column="49"/></name></name> <operator pos:line="91" pos:column="50">=<pos:position pos:line="91" pos:column="51"/></operator> <name><name pos:line="91" pos:column="52">statbuf<pos:position pos:line="91" pos:column="59"/></name><operator pos:line="91" pos:column="59">.<pos:position pos:line="91" pos:column="60"/></operator><name pos:line="91" pos:column="60">f_bfree<pos:position pos:line="91" pos:column="67"/></name></name></expr>;<pos:position pos:line="91" pos:column="68"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name pos:line="93" pos:column="25">blk_free<pos:position pos:line="93" pos:column="33"/></name> <operator pos:line="93" pos:column="34">=<pos:position pos:line="93" pos:column="35"/></operator> <operator pos:line="93" pos:column="36">(<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="37">uint64_t<pos:position pos:line="93" pos:column="45"/></name><operator pos:line="93" pos:column="45">)<pos:position pos:line="93" pos:column="46"/></operator> <name><name pos:line="93" pos:column="47">statbuf<pos:position pos:line="93" pos:column="54"/></name><operator pos:line="93" pos:column="54">.<pos:position pos:line="93" pos:column="55"/></operator><name pos:line="93" pos:column="55">f_bavail<pos:position pos:line="93" pos:column="63"/></name></name></expr>;<pos:position pos:line="93" pos:column="64"/></expr_stmt>
			<expr_stmt><expr><name pos:line="94" pos:column="25">blk_reserved<pos:position pos:line="94" pos:column="37"/></name> <operator pos:line="94" pos:column="38">=<pos:position pos:line="94" pos:column="39"/></operator> <call pos:line="94" pos:column="40">(<name pos:line="94" pos:column="41">uint64_t<pos:position pos:line="94" pos:column="49"/></name>) <argument_list pos:line="94" pos:column="51">(<argument><expr><name><name pos:line="94" pos:column="52">statbuf<pos:position pos:line="94" pos:column="59"/></name><operator pos:line="94" pos:column="59">.<pos:position pos:line="94" pos:column="60"/></operator><name pos:line="94" pos:column="60">f_bfree<pos:position pos:line="94" pos:column="67"/></name></name> <operator pos:line="94" pos:column="68">-<pos:position pos:line="94" pos:column="69"/></operator> <name><name pos:line="94" pos:column="70">statbuf<pos:position pos:line="94" pos:column="77"/></name><operator pos:line="94" pos:column="77">.<pos:position pos:line="94" pos:column="78"/></operator><name pos:line="94" pos:column="78">f_bavail<pos:position pos:line="94" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="94" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="88"/></expr_stmt>
			<expr_stmt><expr><name pos:line="95" pos:column="25">blk_used<pos:position pos:line="95" pos:column="33"/></name> <operator pos:line="95" pos:column="34">=<pos:position pos:line="95" pos:column="35"/></operator> <call pos:line="95" pos:column="36">(<name pos:line="95" pos:column="37">uint64_t<pos:position pos:line="95" pos:column="45"/></name>) <argument_list pos:line="95" pos:column="47">(<argument><expr><name><name pos:line="95" pos:column="48">statbuf<pos:position pos:line="95" pos:column="55"/></name><operator pos:line="95" pos:column="55">.<pos:position pos:line="95" pos:column="56"/></operator><name pos:line="95" pos:column="56">f_blocks<pos:position pos:line="95" pos:column="64"/></name></name> <operator pos:line="95" pos:column="65">-<pos:position pos:line="95" pos:column="66"/></operator> <name><name pos:line="95" pos:column="67">statbuf<pos:position pos:line="95" pos:column="74"/></name><operator pos:line="95" pos:column="74">.<pos:position pos:line="95" pos:column="75"/></operator><name pos:line="95" pos:column="75">f_bfree<pos:position pos:line="95" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="84"/></expr_stmt>
			
			<expr_stmt><expr><call><name pos:line="97" pos:column="25">df_submit_one<pos:position pos:line="97" pos:column="38"/></name> <argument_list pos:line="97" pos:column="39">(<argument><expr><name pos:line="97" pos:column="40">disk_name<pos:position pos:line="97" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="51">"df_complex"<pos:position pos:line="97" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="65">"free"<pos:position pos:line="97" pos:column="71"/></literal></expr></argument>,
					<argument><expr><call pos:line="98" pos:column="41">(<name pos:line="98" pos:column="42">gauge_t<pos:position pos:line="98" pos:column="49"/></name>) <argument_list pos:line="98" pos:column="51">(<argument><expr><name pos:line="98" pos:column="52">blk_free<pos:position pos:line="98" pos:column="60"/></name> <operator pos:line="98" pos:column="61">*<pos:position pos:line="98" pos:column="62"/></operator> <name pos:line="98" pos:column="63">blocksize<pos:position pos:line="98" pos:column="72"/></name></expr></argument>)<pos:position pos:line="98" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="98" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="75"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="99" pos:column="25">df_submit_one<pos:position pos:line="99" pos:column="38"/></name> <argument_list pos:line="99" pos:column="39">(<argument><expr><name pos:line="99" pos:column="40">disk_name<pos:position pos:line="99" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="51">"df_complex"<pos:position pos:line="99" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="65">"reserved"<pos:position pos:line="99" pos:column="75"/></literal></expr></argument>,
					<argument><expr><call pos:line="100" pos:column="41">(<name pos:line="100" pos:column="42">gauge_t<pos:position pos:line="100" pos:column="49"/></name>) <argument_list pos:line="100" pos:column="51">(<argument><expr><name pos:line="100" pos:column="52">blk_reserved<pos:position pos:line="100" pos:column="64"/></name> <operator pos:line="100" pos:column="65">*<pos:position pos:line="100" pos:column="66"/></operator> <name pos:line="100" pos:column="67">blocksize<pos:position pos:line="100" pos:column="76"/></name></expr></argument>)<pos:position pos:line="100" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="100" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="79"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="101" pos:column="25">df_submit_one<pos:position pos:line="101" pos:column="38"/></name> <argument_list pos:line="101" pos:column="39">(<argument><expr><name pos:line="101" pos:column="40">disk_name<pos:position pos:line="101" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="51">"df_complex"<pos:position pos:line="101" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="65">"used"<pos:position pos:line="101" pos:column="71"/></literal></expr></argument>,
					<argument><expr><call pos:line="102" pos:column="41">(<name pos:line="102" pos:column="42">gauge_t<pos:position pos:line="102" pos:column="49"/></name>) <argument_list pos:line="102" pos:column="51">(<argument><expr><name pos:line="102" pos:column="52">blk_used<pos:position pos:line="102" pos:column="60"/></name> <operator pos:line="102" pos:column="61">*<pos:position pos:line="102" pos:column="62"/></operator> <name pos:line="102" pos:column="63">blocksize<pos:position pos:line="102" pos:column="72"/></name></expr></argument>)<pos:position pos:line="102" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="102" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="103" pos:column="18"/></block></then>
		<else pos:line="104" pos:column="17">else <comment type="block" pos:line="104" pos:column="22">/* compatibility code */</comment>
		<block pos:line="105" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="106" pos:column="25">gauge_t<pos:position pos:line="106" pos:column="32"/></name></type> <name pos:line="106" pos:column="33">df_free<pos:position pos:line="106" pos:column="40"/></name></decl>;<pos:position pos:line="106" pos:column="41"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="107" pos:column="25">gauge_t<pos:position pos:line="107" pos:column="32"/></name></type> <name pos:line="107" pos:column="33">df_used<pos:position pos:line="107" pos:column="40"/></name></decl>;<pos:position pos:line="107" pos:column="41"/></decl_stmt>

			<expr_stmt><expr><name pos:line="109" pos:column="25">df_free<pos:position pos:line="109" pos:column="32"/></name> <operator pos:line="109" pos:column="33">=<pos:position pos:line="109" pos:column="34"/></operator> <name><name pos:line="109" pos:column="35">statbuf<pos:position pos:line="109" pos:column="42"/></name><operator pos:line="109" pos:column="42">.<pos:position pos:line="109" pos:column="43"/></operator><name pos:line="109" pos:column="43">f_bfree<pos:position pos:line="109" pos:column="50"/></name></name> <operator pos:line="109" pos:column="51">*<pos:position pos:line="109" pos:column="52"/></operator> <name pos:line="109" pos:column="53">blocksize<pos:position pos:line="109" pos:column="62"/></name></expr>;<pos:position pos:line="109" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><name pos:line="110" pos:column="25">df_used<pos:position pos:line="110" pos:column="32"/></name> <operator pos:line="110" pos:column="33">=<pos:position pos:line="110" pos:column="34"/></operator> <operator pos:line="110" pos:column="35">(<pos:position pos:line="110" pos:column="36"/></operator><name><name pos:line="110" pos:column="36">statbuf<pos:position pos:line="110" pos:column="43"/></name><operator pos:line="110" pos:column="43">.<pos:position pos:line="110" pos:column="44"/></operator><name pos:line="110" pos:column="44">f_blocks<pos:position pos:line="110" pos:column="52"/></name></name> <operator pos:line="110" pos:column="53">-<pos:position pos:line="110" pos:column="54"/></operator> <name><name pos:line="110" pos:column="55">statbuf<pos:position pos:line="110" pos:column="62"/></name><operator pos:line="110" pos:column="62">.<pos:position pos:line="110" pos:column="63"/></operator><name pos:line="110" pos:column="63">f_bfree<pos:position pos:line="110" pos:column="70"/></name></name><operator pos:line="110" pos:column="70">)<pos:position pos:line="110" pos:column="71"/></operator> <operator pos:line="110" pos:column="72">*<pos:position pos:line="110" pos:column="73"/></operator> <name pos:line="110" pos:column="74">blocksize<pos:position pos:line="110" pos:column="83"/></name></expr>;<pos:position pos:line="110" pos:column="84"/></expr_stmt>

			<expr_stmt><expr><call><name pos:line="112" pos:column="25">df_submit_two<pos:position pos:line="112" pos:column="38"/></name> <argument_list pos:line="112" pos:column="39">(<argument><expr><name pos:line="112" pos:column="40">disk_name<pos:position pos:line="112" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="51">"df"<pos:position pos:line="112" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="57">df_used<pos:position pos:line="112" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="66">df_free<pos:position pos:line="112" pos:column="73"/></name></expr></argument>)<pos:position pos:line="112" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="75"/></expr_stmt>
		}<pos:position pos:line="113" pos:column="18"/></block></else></if>

		<comment type="block" pos:line="115" pos:column="17">/* inode handling */</comment>
		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><name pos:line="116" pos:column="21">report_inodes<pos:position pos:line="116" pos:column="34"/></name></expr>)<pos:position pos:line="116" pos:column="35"/></condition><then pos:line="116" pos:column="35">
		<block pos:line="117" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="118" pos:column="25">uint64_t<pos:position pos:line="118" pos:column="33"/></name></type> <name pos:line="118" pos:column="34">inode_free<pos:position pos:line="118" pos:column="44"/></name></decl>;<pos:position pos:line="118" pos:column="45"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="119" pos:column="25">uint64_t<pos:position pos:line="119" pos:column="33"/></name></type> <name pos:line="119" pos:column="34">inode_reserved<pos:position pos:line="119" pos:column="48"/></name></decl>;<pos:position pos:line="119" pos:column="49"/></decl_stmt>
			<decl_stmt><decl><type><name pos:line="120" pos:column="25">uint64_t<pos:position pos:line="120" pos:column="33"/></name></type> <name pos:line="120" pos:column="34">inode_used<pos:position pos:line="120" pos:column="44"/></name></decl>;<pos:position pos:line="120" pos:column="45"/></decl_stmt>

			<comment type="block" pos:line="122" pos:column="25">/* Sanity-check for the values in the struct */</comment>
			<if pos:line="123" pos:column="25">if <condition pos:line="123" pos:column="28">(<expr><name><name pos:line="123" pos:column="29">statbuf<pos:position pos:line="123" pos:column="36"/></name><operator pos:line="123" pos:column="36">.<pos:position pos:line="123" pos:column="37"/></operator><name pos:line="123" pos:column="37">f_ffree<pos:position pos:line="123" pos:column="44"/></name></name> <operator pos:line="123" pos:column="45">&lt;<pos:position pos:line="123" pos:column="49"/></operator> <name><name pos:line="123" pos:column="47">statbuf<pos:position pos:line="123" pos:column="54"/></name><operator pos:line="123" pos:column="54">.<pos:position pos:line="123" pos:column="55"/></operator><name pos:line="123" pos:column="55">f_favail<pos:position pos:line="123" pos:column="63"/></name></name></expr>)<pos:position pos:line="123" pos:column="64"/></condition><then pos:line="123" pos:column="64">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="124" pos:column="33">statbuf<pos:position pos:line="124" pos:column="40"/></name><operator pos:line="124" pos:column="40">.<pos:position pos:line="124" pos:column="41"/></operator><name pos:line="124" pos:column="41">f_ffree<pos:position pos:line="124" pos:column="48"/></name></name> <operator pos:line="124" pos:column="49">=<pos:position pos:line="124" pos:column="50"/></operator> <name><name pos:line="124" pos:column="51">statbuf<pos:position pos:line="124" pos:column="58"/></name><operator pos:line="124" pos:column="58">.<pos:position pos:line="124" pos:column="59"/></operator><name pos:line="124" pos:column="59">f_favail<pos:position pos:line="124" pos:column="67"/></name></name></expr>;<pos:position pos:line="124" pos:column="68"/></expr_stmt></block></then></if>
			<if pos:line="125" pos:column="25">if <condition pos:line="125" pos:column="28">(<expr><name><name pos:line="125" pos:column="29">statbuf<pos:position pos:line="125" pos:column="36"/></name><operator pos:line="125" pos:column="36">.<pos:position pos:line="125" pos:column="37"/></operator><name pos:line="125" pos:column="37">f_files<pos:position pos:line="125" pos:column="44"/></name></name> <operator pos:line="125" pos:column="45">&lt;<pos:position pos:line="125" pos:column="49"/></operator> <name><name pos:line="125" pos:column="47">statbuf<pos:position pos:line="125" pos:column="54"/></name><operator pos:line="125" pos:column="54">.<pos:position pos:line="125" pos:column="55"/></operator><name pos:line="125" pos:column="55">f_ffree<pos:position pos:line="125" pos:column="62"/></name></name></expr>)<pos:position pos:line="125" pos:column="63"/></condition><then pos:line="125" pos:column="63">
				<block type="pseudo"><expr_stmt><expr><name><name pos:line="126" pos:column="33">statbuf<pos:position pos:line="126" pos:column="40"/></name><operator pos:line="126" pos:column="40">.<pos:position pos:line="126" pos:column="41"/></operator><name pos:line="126" pos:column="41">f_files<pos:position pos:line="126" pos:column="48"/></name></name> <operator pos:line="126" pos:column="49">=<pos:position pos:line="126" pos:column="50"/></operator> <name><name pos:line="126" pos:column="51">statbuf<pos:position pos:line="126" pos:column="58"/></name><operator pos:line="126" pos:column="58">.<pos:position pos:line="126" pos:column="59"/></operator><name pos:line="126" pos:column="59">f_ffree<pos:position pos:line="126" pos:column="66"/></name></name></expr>;<pos:position pos:line="126" pos:column="67"/></expr_stmt></block></then></if>

			<expr_stmt><expr><name pos:line="128" pos:column="25">inode_free<pos:position pos:line="128" pos:column="35"/></name> <operator pos:line="128" pos:column="36">=<pos:position pos:line="128" pos:column="37"/></operator> <operator pos:line="128" pos:column="38">(<pos:position pos:line="128" pos:column="39"/></operator><name pos:line="128" pos:column="39">uint64_t<pos:position pos:line="128" pos:column="47"/></name><operator pos:line="128" pos:column="47">)<pos:position pos:line="128" pos:column="48"/></operator> <name><name pos:line="128" pos:column="49">statbuf<pos:position pos:line="128" pos:column="56"/></name><operator pos:line="128" pos:column="56">.<pos:position pos:line="128" pos:column="57"/></operator><name pos:line="128" pos:column="57">f_favail<pos:position pos:line="128" pos:column="65"/></name></name></expr>;<pos:position pos:line="128" pos:column="66"/></expr_stmt>
			<expr_stmt><expr><name pos:line="129" pos:column="25">inode_reserved<pos:position pos:line="129" pos:column="39"/></name> <operator pos:line="129" pos:column="40">=<pos:position pos:line="129" pos:column="41"/></operator> <call pos:line="129" pos:column="42">(<name pos:line="129" pos:column="43">uint64_t<pos:position pos:line="129" pos:column="51"/></name>) <argument_list pos:line="129" pos:column="53">(<argument><expr><name><name pos:line="129" pos:column="54">statbuf<pos:position pos:line="129" pos:column="61"/></name><operator pos:line="129" pos:column="61">.<pos:position pos:line="129" pos:column="62"/></operator><name pos:line="129" pos:column="62">f_ffree<pos:position pos:line="129" pos:column="69"/></name></name> <operator pos:line="129" pos:column="70">-<pos:position pos:line="129" pos:column="71"/></operator> <name><name pos:line="129" pos:column="72">statbuf<pos:position pos:line="129" pos:column="79"/></name><operator pos:line="129" pos:column="79">.<pos:position pos:line="129" pos:column="80"/></operator><name pos:line="129" pos:column="80">f_favail<pos:position pos:line="129" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="90"/></expr_stmt>
			<expr_stmt><expr><name pos:line="130" pos:column="25">inode_used<pos:position pos:line="130" pos:column="35"/></name> <operator pos:line="130" pos:column="36">=<pos:position pos:line="130" pos:column="37"/></operator> <call pos:line="130" pos:column="38">(<name pos:line="130" pos:column="39">uint64_t<pos:position pos:line="130" pos:column="47"/></name>) <argument_list pos:line="130" pos:column="49">(<argument><expr><name><name pos:line="130" pos:column="50">statbuf<pos:position pos:line="130" pos:column="57"/></name><operator pos:line="130" pos:column="57">.<pos:position pos:line="130" pos:column="58"/></operator><name pos:line="130" pos:column="58">f_files<pos:position pos:line="130" pos:column="65"/></name></name> <operator pos:line="130" pos:column="66">-<pos:position pos:line="130" pos:column="67"/></operator> <name><name pos:line="130" pos:column="68">statbuf<pos:position pos:line="130" pos:column="75"/></name><operator pos:line="130" pos:column="75">.<pos:position pos:line="130" pos:column="76"/></operator><name pos:line="130" pos:column="76">f_ffree<pos:position pos:line="130" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="85"/></expr_stmt>
			
			<expr_stmt><expr><call><name pos:line="132" pos:column="25">df_submit_one<pos:position pos:line="132" pos:column="38"/></name> <argument_list pos:line="132" pos:column="39">(<argument><expr><name pos:line="132" pos:column="40">disk_name<pos:position pos:line="132" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="51">"df_inodes"<pos:position pos:line="132" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="64">"free"<pos:position pos:line="132" pos:column="70"/></literal></expr></argument>,
					<argument><expr><operator pos:line="133" pos:column="41">(<pos:position pos:line="133" pos:column="42"/></operator><name pos:line="133" pos:column="42">gauge_t<pos:position pos:line="133" pos:column="49"/></name><operator pos:line="133" pos:column="49">)<pos:position pos:line="133" pos:column="50"/></operator> <name pos:line="133" pos:column="51">inode_free<pos:position pos:line="133" pos:column="61"/></name></expr></argument>)<pos:position pos:line="133" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="63"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="134" pos:column="25">df_submit_one<pos:position pos:line="134" pos:column="38"/></name> <argument_list pos:line="134" pos:column="39">(<argument><expr><name pos:line="134" pos:column="40">disk_name<pos:position pos:line="134" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="51">"df_inodes"<pos:position pos:line="134" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="64">"reserved"<pos:position pos:line="134" pos:column="74"/></literal></expr></argument>,
					<argument><expr><operator pos:line="135" pos:column="41">(<pos:position pos:line="135" pos:column="42"/></operator><name pos:line="135" pos:column="42">gauge_t<pos:position pos:line="135" pos:column="49"/></name><operator pos:line="135" pos:column="49">)<pos:position pos:line="135" pos:column="50"/></operator> <name pos:line="135" pos:column="51">inode_reserved<pos:position pos:line="135" pos:column="65"/></name></expr></argument>)<pos:position pos:line="135" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="67"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="136" pos:column="25">df_submit_one<pos:position pos:line="136" pos:column="38"/></name> <argument_list pos:line="136" pos:column="39">(<argument><expr><name pos:line="136" pos:column="40">disk_name<pos:position pos:line="136" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="51">"df_inodes"<pos:position pos:line="136" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="64">"used"<pos:position pos:line="136" pos:column="70"/></literal></expr></argument>,
					<argument><expr><operator pos:line="137" pos:column="41">(<pos:position pos:line="137" pos:column="42"/></operator><name pos:line="137" pos:column="42">gauge_t<pos:position pos:line="137" pos:column="49"/></name><operator pos:line="137" pos:column="49">)<pos:position pos:line="137" pos:column="50"/></operator> <name pos:line="137" pos:column="51">inode_used<pos:position pos:line="137" pos:column="61"/></name></expr></argument>)<pos:position pos:line="137" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="63"/></expr_stmt>
		}<pos:position pos:line="138" pos:column="18"/></block></then></if>
	}<pos:position pos:line="139" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="141" pos:column="9">cu_mount_freelist<pos:position pos:line="141" pos:column="26"/></name> <argument_list pos:line="141" pos:column="27">(<argument><expr><name pos:line="141" pos:column="28">mnt_list<pos:position pos:line="141" pos:column="36"/></name></expr></argument>)<pos:position pos:line="141" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="38"/></expr_stmt>

	<return pos:line="143" pos:column="9">return <expr><operator pos:line="143" pos:column="16">(<pos:position pos:line="143" pos:column="17"/></operator><literal type="number" pos:line="143" pos:column="17">0<pos:position pos:line="143" pos:column="18"/></literal><operator pos:line="143" pos:column="18">)<pos:position pos:line="143" pos:column="19"/></operator></expr>;<pos:position pos:line="143" pos:column="20"/></return>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_873_collectd-4.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">match_substr<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">str<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">int<pos:position pos:line="1" pos:column="48"/></name></type> <name pos:line="1" pos:column="49">begin<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">int<pos:position pos:line="1" pos:column="59"/></name></type> <name pos:line="1" pos:column="60">end<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">ret<pos:position pos:line="3" pos:column="12"/></name></decl>;<pos:position pos:line="3" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">ret_len<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">begin<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">&lt;<pos:position pos:line="6" pos:column="18"/></operator> <literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal><operator pos:line="6" pos:column="17">)<pos:position pos:line="6" pos:column="18"/></operator> <operator pos:line="6" pos:column="19">||<pos:position pos:line="6" pos:column="21"/></operator> <operator pos:line="6" pos:column="22">(<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">end<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&lt;<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="29">0<pos:position pos:line="6" pos:column="30"/></literal><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator> <operator pos:line="6" pos:column="32">||<pos:position pos:line="6" pos:column="34"/></operator> <operator pos:line="6" pos:column="35">(<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">begin<pos:position pos:line="6" pos:column="41"/></name> <operator pos:line="6" pos:column="42">&gt;=<pos:position pos:line="6" pos:column="47"/></operator> <name pos:line="6" pos:column="45">end<pos:position pos:line="6" pos:column="48"/></name><operator pos:line="6" pos:column="48">)<pos:position pos:line="6" pos:column="49"/></operator></expr>)<pos:position pos:line="6" pos:column="50"/></condition><then pos:line="6" pos:column="50">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">NULL<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">)<pos:position pos:line="7" pos:column="18"/></operator></expr>;<pos:position pos:line="7" pos:column="19"/></return></block></then></if>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">(<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">size_t<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">)<pos:position pos:line="8" pos:column="15"/></operator> <name pos:line="8" pos:column="16">end<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">&gt;<pos:position pos:line="8" pos:column="24"/></operator> <operator pos:line="8" pos:column="22">(<pos:position pos:line="8" pos:column="23"/></operator><call><name pos:line="8" pos:column="23">strlen<pos:position pos:line="8" pos:column="29"/></name> <argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">str<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call> <operator pos:line="8" pos:column="36">+<pos:position pos:line="8" pos:column="37"/></operator> <literal type="number" pos:line="8" pos:column="38">1<pos:position pos:line="8" pos:column="39"/></literal><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41">
  <block pos:line="9" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name> <argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="string" pos:line="10" pos:column="12">"utils_match: match_substr: `end' points after end of string."<pos:position pos:line="10" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="76"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">NULL<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">)<pos:position pos:line="11" pos:column="18"/></operator></expr>;<pos:position pos:line="11" pos:column="19"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="14" pos:column="3">ret_len<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">end<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">-<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">begin<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name pos:line="15" pos:column="3">ret<pos:position pos:line="15" pos:column="6"/></name> <operator pos:line="15" pos:column="7">=<pos:position pos:line="15" pos:column="8"/></operator> <operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">char<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">*<pos:position pos:line="15" pos:column="16"/></operator><operator pos:line="15" pos:column="16">)<pos:position pos:line="15" pos:column="17"/></operator> <call><name pos:line="15" pos:column="18">malloc<pos:position pos:line="15" pos:column="24"/></name> <argument_list pos:line="15" pos:column="25">(<argument><expr><sizeof pos:line="15" pos:column="26">sizeof <argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">char<pos:position pos:line="15" pos:column="38"/></name></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></sizeof> <operator pos:line="15" pos:column="40">*<pos:position pos:line="15" pos:column="41"/></operator> <operator pos:line="15" pos:column="42">(<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">ret_len<pos:position pos:line="15" pos:column="50"/></name> <operator pos:line="15" pos:column="51">+<pos:position pos:line="15" pos:column="52"/></operator> <literal type="number" pos:line="15" pos:column="53">1<pos:position pos:line="15" pos:column="54"/></literal><operator pos:line="15" pos:column="54">)<pos:position pos:line="15" pos:column="55"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">ret<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">==<pos:position pos:line="16" pos:column="13"/></operator> <name pos:line="16" pos:column="14">NULL<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19">
  <block pos:line="17" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">ERROR<pos:position pos:line="18" pos:column="10"/></name> <argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"utils_match: match_substr: malloc failed."<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><operator pos:line="19" pos:column="12">(<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">)<pos:position pos:line="19" pos:column="18"/></operator></expr>;<pos:position pos:line="19" pos:column="19"/></return>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">sstrncpy<pos:position pos:line="22" pos:column="11"/></name> <argument_list pos:line="22" pos:column="12">(<argument><expr><name pos:line="22" pos:column="13">ret<pos:position pos:line="22" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="18">str<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">+<pos:position pos:line="22" pos:column="23"/></operator> <name pos:line="22" pos:column="24">begin<pos:position pos:line="22" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="31">ret_len<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">+<pos:position pos:line="22" pos:column="40"/></operator> <literal type="number" pos:line="22" pos:column="41">1<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
  <return pos:line="23" pos:column="3">return <expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="11">ret<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">)<pos:position pos:line="23" pos:column="15"/></operator></expr>;<pos:position pos:line="23" pos:column="16"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_955_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">zookeeper_read<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name></type> <name><name pos:line="2" pos:column="14">buf<pos:position pos:line="2" pos:column="17"/></name><index pos:line="2" pos:column="17">[<expr><literal type="number" pos:line="2" pos:column="18">4096<pos:position pos:line="2" pos:column="22"/></literal></expr>]<pos:position pos:line="2" pos:column="23"/></index></name></decl>;<pos:position pos:line="2" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">ptr<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">save_ptr<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">line<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">char<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name><name pos:line="6" pos:column="15">fields<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><literal type="number" pos:line="6" pos:column="22">2<pos:position pos:line="6" pos:column="23"/></literal></expr>]<pos:position pos:line="6" pos:column="24"/></index></name></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">zookeeper_query<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">buf<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="35">sizeof <argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">buf<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call> <operator pos:line="8" pos:column="49">&lt;<pos:position pos:line="8" pos:column="53"/></operator> <literal type="number" pos:line="8" pos:column="51">0<pos:position pos:line="8" pos:column="52"/></literal></expr>)<pos:position pos:line="8" pos:column="53"/></condition><then pos:line="8" pos:column="53">
	<block pos:line="9" pos:column="9">{
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="13" pos:column="9">ptr<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">buf<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><name pos:line="14" pos:column="9">save_ptr<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">NULL<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
	<while pos:line="15" pos:column="9">while <condition pos:line="15" pos:column="15">(<expr><operator pos:line="15" pos:column="16">(<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">line<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <call><name pos:line="15" pos:column="24">strtok_r<pos:position pos:line="15" pos:column="32"/></name> <argument_list pos:line="15" pos:column="33">(<argument><expr><name pos:line="15" pos:column="34">ptr<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"\n\r"<pos:position pos:line="15" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="47">&amp;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="48">save_ptr<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call><operator pos:line="15" pos:column="57">)<pos:position pos:line="15" pos:column="58"/></operator> <operator pos:line="15" pos:column="59">!=<pos:position pos:line="15" pos:column="61"/></operator> <name pos:line="15" pos:column="62">NULL<pos:position pos:line="15" pos:column="66"/></name></expr>)<pos:position pos:line="15" pos:column="67"/></condition>
	<block pos:line="16" pos:column="9">{
		<expr_stmt><expr><name pos:line="17" pos:column="17">ptr<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><call><name pos:line="18" pos:column="21">strsplit<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">line<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">fields<pos:position pos:line="18" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="44">2<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call> <operator pos:line="18" pos:column="47">!=<pos:position pos:line="18" pos:column="49"/></operator> <literal type="number" pos:line="18" pos:column="50">2<pos:position pos:line="18" pos:column="51"/></literal></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52">
		<block pos:line="19" pos:column="17">{
			<continue pos:line="20" pos:column="25">continue;<pos:position pos:line="20" pos:column="34"/></continue>
		}<pos:position pos:line="21" pos:column="18"/></block></then></if>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define<pos:position pos:line="22" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">FIELD_CHECK<pos:position pos:line="22" pos:column="20"/></name><parameter_list pos:line="22" pos:column="20">(<parameter><type><name pos:line="22" pos:column="21">check<pos:position pos:line="22" pos:column="26"/></name></type></parameter>, <parameter><type><name pos:line="22" pos:column="28">expected<pos:position pos:line="22" pos:column="36"/></name></type></parameter>)<pos:position pos:line="22" pos:column="37"/></parameter_list></cpp:macro> \
	<cpp:value pos:line="23" pos:column="9">(strncmp (check, expected, strlen(expected)) == 0)<pos:position pos:line="23" pos:column="59"/></cpp:value></cpp:define>

		<if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><call><name pos:line="25" pos:column="21">FIELD_CHECK<pos:position pos:line="25" pos:column="32"/></name> <argument_list pos:line="25" pos:column="33">(<argument><expr><name><name pos:line="25" pos:column="34">fields<pos:position pos:line="25" pos:column="40"/></name><index pos:line="25" pos:column="40">[<expr><literal type="number" pos:line="25" pos:column="41">0<pos:position pos:line="25" pos:column="42"/></literal></expr>]<pos:position pos:line="25" pos:column="43"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="45">"zk_avg_latency"<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="63"/></condition><then pos:line="25" pos:column="63">
		<block pos:line="26" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="27" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="27" pos:column="47"/></name> <argument_list pos:line="27" pos:column="48">(<argument><expr><literal type="string" pos:line="27" pos:column="49">"latency"<pos:position pos:line="27" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="60">"avg"<pos:position pos:line="27" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="67">atol<pos:position pos:line="27" pos:column="71"/></name><argument_list pos:line="27" pos:column="71">(<argument><expr><name><name pos:line="27" pos:column="72">fields<pos:position pos:line="27" pos:column="78"/></name><index pos:line="27" pos:column="78">[<expr><literal type="number" pos:line="27" pos:column="79">1<pos:position pos:line="27" pos:column="80"/></literal></expr>]<pos:position pos:line="27" pos:column="81"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="28" pos:column="18"/></block></then>
		<elseif pos:line="29" pos:column="17">else <if pos:line="29" pos:column="22">if <condition pos:line="29" pos:column="25">(<expr><call><name pos:line="29" pos:column="26">FIELD_CHECK<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name><name pos:line="29" pos:column="38">fields<pos:position pos:line="29" pos:column="44"/></name><index pos:line="29" pos:column="44">[<expr><literal type="number" pos:line="29" pos:column="45">0<pos:position pos:line="29" pos:column="46"/></literal></expr>]<pos:position pos:line="29" pos:column="47"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="49">"zk_min_latency"<pos:position pos:line="29" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="67"/></condition><then pos:line="29" pos:column="67">
		<block pos:line="30" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="31" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="31" pos:column="47"/></name> <argument_list pos:line="31" pos:column="48">(<argument><expr><literal type="string" pos:line="31" pos:column="49">"latency"<pos:position pos:line="31" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="60">"min"<pos:position pos:line="31" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="67">atol<pos:position pos:line="31" pos:column="71"/></name><argument_list pos:line="31" pos:column="71">(<argument><expr><name><name pos:line="31" pos:column="72">fields<pos:position pos:line="31" pos:column="78"/></name><index pos:line="31" pos:column="78">[<expr><literal type="number" pos:line="31" pos:column="79">1<pos:position pos:line="31" pos:column="80"/></literal></expr>]<pos:position pos:line="31" pos:column="81"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="32" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="33" pos:column="17">else <if pos:line="33" pos:column="22">if <condition pos:line="33" pos:column="25">(<expr><call><name pos:line="33" pos:column="26">FIELD_CHECK<pos:position pos:line="33" pos:column="37"/></name> <argument_list pos:line="33" pos:column="38">(<argument><expr><name><name pos:line="33" pos:column="39">fields<pos:position pos:line="33" pos:column="45"/></name><index pos:line="33" pos:column="45">[<expr><literal type="number" pos:line="33" pos:column="46">0<pos:position pos:line="33" pos:column="47"/></literal></expr>]<pos:position pos:line="33" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="50">"zk_max_latency"<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="68"/></condition><then pos:line="33" pos:column="68">
		<block pos:line="34" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="35" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="35" pos:column="47"/></name> <argument_list pos:line="35" pos:column="48">(<argument><expr><literal type="string" pos:line="35" pos:column="49">"latency"<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="60">"max"<pos:position pos:line="35" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="67">atol<pos:position pos:line="35" pos:column="71"/></name><argument_list pos:line="35" pos:column="71">(<argument><expr><name><name pos:line="35" pos:column="72">fields<pos:position pos:line="35" pos:column="78"/></name><index pos:line="35" pos:column="78">[<expr><literal type="number" pos:line="35" pos:column="79">1<pos:position pos:line="35" pos:column="80"/></literal></expr>]<pos:position pos:line="35" pos:column="81"/></index></name></expr></argument>)<pos:position pos:line="35" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="36" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="37" pos:column="17">else <if pos:line="37" pos:column="22">if <condition pos:line="37" pos:column="25">(<expr><call><name pos:line="37" pos:column="26">FIELD_CHECK<pos:position pos:line="37" pos:column="37"/></name> <argument_list pos:line="37" pos:column="38">(<argument><expr><name><name pos:line="37" pos:column="39">fields<pos:position pos:line="37" pos:column="45"/></name><index pos:line="37" pos:column="45">[<expr><literal type="number" pos:line="37" pos:column="46">0<pos:position pos:line="37" pos:column="47"/></literal></expr>]<pos:position pos:line="37" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="50">"zk_packets_received"<pos:position pos:line="37" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="37" pos:column="73"/></condition><then pos:line="37" pos:column="73">
		<block pos:line="38" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">zookeeper_submit_derive<pos:position pos:line="39" pos:column="48"/></name> <argument_list pos:line="39" pos:column="49">(<argument><expr><literal type="string" pos:line="39" pos:column="50">"packets"<pos:position pos:line="39" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="61">"received"<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="73">atol<pos:position pos:line="39" pos:column="77"/></name><argument_list pos:line="39" pos:column="77">(<argument><expr><name><name pos:line="39" pos:column="78">fields<pos:position pos:line="39" pos:column="84"/></name><index pos:line="39" pos:column="84">[<expr><literal type="number" pos:line="39" pos:column="85">1<pos:position pos:line="39" pos:column="86"/></literal></expr>]<pos:position pos:line="39" pos:column="87"/></index></name></expr></argument>)<pos:position pos:line="39" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="90"/></expr_stmt>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="41" pos:column="17">else <if pos:line="41" pos:column="22">if <condition pos:line="41" pos:column="25">(<expr><call><name pos:line="41" pos:column="26">FIELD_CHECK<pos:position pos:line="41" pos:column="37"/></name> <argument_list pos:line="41" pos:column="38">(<argument><expr><name><name pos:line="41" pos:column="39">fields<pos:position pos:line="41" pos:column="45"/></name><index pos:line="41" pos:column="45">[<expr><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr>]<pos:position pos:line="41" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="50">"zk_packets_sent"<pos:position pos:line="41" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="69"/></condition><then pos:line="41" pos:column="69">
		<block pos:line="42" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">zookeeper_submit_derive<pos:position pos:line="43" pos:column="48"/></name> <argument_list pos:line="43" pos:column="49">(<argument><expr><literal type="string" pos:line="43" pos:column="50">"packets"<pos:position pos:line="43" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="61">"sent"<pos:position pos:line="43" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="69">atol<pos:position pos:line="43" pos:column="73"/></name><argument_list pos:line="43" pos:column="73">(<argument><expr><name><name pos:line="43" pos:column="74">fields<pos:position pos:line="43" pos:column="80"/></name><index pos:line="43" pos:column="80">[<expr><literal type="number" pos:line="43" pos:column="81">1<pos:position pos:line="43" pos:column="82"/></literal></expr>]<pos:position pos:line="43" pos:column="83"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="86"/></expr_stmt>
		}<pos:position pos:line="44" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="45" pos:column="17">else <if pos:line="45" pos:column="22">if <condition pos:line="45" pos:column="25">(<expr><call><name pos:line="45" pos:column="26">FIELD_CHECK<pos:position pos:line="45" pos:column="37"/></name> <argument_list pos:line="45" pos:column="38">(<argument><expr><name><name pos:line="45" pos:column="39">fields<pos:position pos:line="45" pos:column="45"/></name><index pos:line="45" pos:column="45">[<expr><literal type="number" pos:line="45" pos:column="46">0<pos:position pos:line="45" pos:column="47"/></literal></expr>]<pos:position pos:line="45" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="50">"zk_num_alive_connections"<pos:position pos:line="45" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="78"/></condition><then pos:line="45" pos:column="78">
		<block pos:line="46" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="47" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="47" pos:column="47"/></name> <argument_list pos:line="47" pos:column="48">(<argument><expr><literal type="string" pos:line="47" pos:column="49">"current_connections"<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="72">NULL<pos:position pos:line="47" pos:column="76"/></name></expr></argument>, <argument><expr><call><name pos:line="47" pos:column="78">atol<pos:position pos:line="47" pos:column="82"/></name><argument_list pos:line="47" pos:column="82">(<argument><expr><name><name pos:line="47" pos:column="83">fields<pos:position pos:line="47" pos:column="89"/></name><index pos:line="47" pos:column="89">[<expr><literal type="number" pos:line="47" pos:column="90">1<pos:position pos:line="47" pos:column="91"/></literal></expr>]<pos:position pos:line="47" pos:column="92"/></index></name></expr></argument>)<pos:position pos:line="47" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="95"/></expr_stmt>
		}<pos:position pos:line="48" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="49" pos:column="17">else <if pos:line="49" pos:column="22">if <condition pos:line="49" pos:column="25">(<expr><call><name pos:line="49" pos:column="26">FIELD_CHECK<pos:position pos:line="49" pos:column="37"/></name> <argument_list pos:line="49" pos:column="38">(<argument><expr><name><name pos:line="49" pos:column="39">fields<pos:position pos:line="49" pos:column="45"/></name><index pos:line="49" pos:column="45">[<expr><literal type="number" pos:line="49" pos:column="46">0<pos:position pos:line="49" pos:column="47"/></literal></expr>]<pos:position pos:line="49" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="50">"zk_outstanding_requests"<pos:position pos:line="49" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="77"/></condition><then pos:line="49" pos:column="77">
		<block pos:line="50" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="51" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="51" pos:column="47"/></name> <argument_list pos:line="51" pos:column="48">(<argument><expr><literal type="string" pos:line="51" pos:column="49">"requests"<pos:position pos:line="51" pos:column="59"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="61">"outstanding"<pos:position pos:line="51" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="51" pos:column="76">atol<pos:position pos:line="51" pos:column="80"/></name><argument_list pos:line="51" pos:column="80">(<argument><expr><name><name pos:line="51" pos:column="81">fields<pos:position pos:line="51" pos:column="87"/></name><index pos:line="51" pos:column="87">[<expr><literal type="number" pos:line="51" pos:column="88">1<pos:position pos:line="51" pos:column="89"/></literal></expr>]<pos:position pos:line="51" pos:column="90"/></index></name></expr></argument>)<pos:position pos:line="51" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="93"/></expr_stmt>
		}<pos:position pos:line="52" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="53" pos:column="17">else <if pos:line="53" pos:column="22">if <condition pos:line="53" pos:column="25">(<expr><call><name pos:line="53" pos:column="26">FIELD_CHECK<pos:position pos:line="53" pos:column="37"/></name> <argument_list pos:line="53" pos:column="38">(<argument><expr><name><name pos:line="53" pos:column="39">fields<pos:position pos:line="53" pos:column="45"/></name><index pos:line="53" pos:column="45">[<expr><literal type="number" pos:line="53" pos:column="46">0<pos:position pos:line="53" pos:column="47"/></literal></expr>]<pos:position pos:line="53" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="50">"zk_znode_count"<pos:position pos:line="53" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="68"/></condition><then pos:line="53" pos:column="68">
		<block pos:line="54" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="55" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="55" pos:column="47"/></name> <argument_list pos:line="55" pos:column="48">(<argument><expr><literal type="string" pos:line="55" pos:column="49">"gauge"<pos:position pos:line="55" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="58">"znode"<pos:position pos:line="55" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="55" pos:column="67">atol<pos:position pos:line="55" pos:column="71"/></name><argument_list pos:line="55" pos:column="71">(<argument><expr><name><name pos:line="55" pos:column="72">fields<pos:position pos:line="55" pos:column="78"/></name><index pos:line="55" pos:column="78">[<expr><literal type="number" pos:line="55" pos:column="79">1<pos:position pos:line="55" pos:column="80"/></literal></expr>]<pos:position pos:line="55" pos:column="81"/></index></name></expr></argument>)<pos:position pos:line="55" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="56" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="57" pos:column="17">else <if pos:line="57" pos:column="22">if <condition pos:line="57" pos:column="25">(<expr><call><name pos:line="57" pos:column="26">FIELD_CHECK<pos:position pos:line="57" pos:column="37"/></name> <argument_list pos:line="57" pos:column="38">(<argument><expr><name><name pos:line="57" pos:column="39">fields<pos:position pos:line="57" pos:column="45"/></name><index pos:line="57" pos:column="45">[<expr><literal type="number" pos:line="57" pos:column="46">0<pos:position pos:line="57" pos:column="47"/></literal></expr>]<pos:position pos:line="57" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="50">"zk_watch_count"<pos:position pos:line="57" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="68"/></condition><then pos:line="57" pos:column="68">
		<block pos:line="58" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="59" pos:column="47"/></name> <argument_list pos:line="59" pos:column="48">(<argument><expr><literal type="string" pos:line="59" pos:column="49">"gauge"<pos:position pos:line="59" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="58">"watch"<pos:position pos:line="59" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="67">atol<pos:position pos:line="59" pos:column="71"/></name><argument_list pos:line="59" pos:column="71">(<argument><expr><name><name pos:line="59" pos:column="72">fields<pos:position pos:line="59" pos:column="78"/></name><index pos:line="59" pos:column="78">[<expr><literal type="number" pos:line="59" pos:column="79">1<pos:position pos:line="59" pos:column="80"/></literal></expr>]<pos:position pos:line="59" pos:column="81"/></index></name></expr></argument>)<pos:position pos:line="59" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="84"/></expr_stmt>
		}<pos:position pos:line="60" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="61" pos:column="17">else <if pos:line="61" pos:column="22">if <condition pos:line="61" pos:column="25">(<expr><call><name pos:line="61" pos:column="26">FIELD_CHECK<pos:position pos:line="61" pos:column="37"/></name> <argument_list pos:line="61" pos:column="38">(<argument><expr><name><name pos:line="61" pos:column="39">fields<pos:position pos:line="61" pos:column="45"/></name><index pos:line="61" pos:column="45">[<expr><literal type="number" pos:line="61" pos:column="46">0<pos:position pos:line="61" pos:column="47"/></literal></expr>]<pos:position pos:line="61" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="50">"zk_ephemerals_count"<pos:position pos:line="61" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="73"/></condition><then pos:line="61" pos:column="73">
		<block pos:line="62" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="63" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="63" pos:column="47"/></name> <argument_list pos:line="63" pos:column="48">(<argument><expr><literal type="string" pos:line="63" pos:column="49">"gauge"<pos:position pos:line="63" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="58">"ephemerals"<pos:position pos:line="63" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="72">atol<pos:position pos:line="63" pos:column="76"/></name><argument_list pos:line="63" pos:column="76">(<argument><expr><name><name pos:line="63" pos:column="77">fields<pos:position pos:line="63" pos:column="83"/></name><index pos:line="63" pos:column="83">[<expr><literal type="number" pos:line="63" pos:column="84">1<pos:position pos:line="63" pos:column="85"/></literal></expr>]<pos:position pos:line="63" pos:column="86"/></index></name></expr></argument>)<pos:position pos:line="63" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="63" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="89"/></expr_stmt>
		}<pos:position pos:line="64" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="65" pos:column="17">else <if pos:line="65" pos:column="22">if <condition pos:line="65" pos:column="25">(<expr><call><name pos:line="65" pos:column="26">FIELD_CHECK<pos:position pos:line="65" pos:column="37"/></name> <argument_list pos:line="65" pos:column="38">(<argument><expr><name><name pos:line="65" pos:column="39">fields<pos:position pos:line="65" pos:column="45"/></name><index pos:line="65" pos:column="45">[<expr><literal type="number" pos:line="65" pos:column="46">0<pos:position pos:line="65" pos:column="47"/></literal></expr>]<pos:position pos:line="65" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="50">"zk_ephemerals_count"<pos:position pos:line="65" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="65" pos:column="73"/></condition><then pos:line="65" pos:column="73">
		<block pos:line="66" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="67" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="67" pos:column="47"/></name> <argument_list pos:line="67" pos:column="48">(<argument><expr><literal type="string" pos:line="67" pos:column="49">"gauge"<pos:position pos:line="67" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="58">"ephemerals"<pos:position pos:line="67" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="72">atol<pos:position pos:line="67" pos:column="76"/></name><argument_list pos:line="67" pos:column="76">(<argument><expr><name><name pos:line="67" pos:column="77">fields<pos:position pos:line="67" pos:column="83"/></name><index pos:line="67" pos:column="83">[<expr><literal type="number" pos:line="67" pos:column="84">1<pos:position pos:line="67" pos:column="85"/></literal></expr>]<pos:position pos:line="67" pos:column="86"/></index></name></expr></argument>)<pos:position pos:line="67" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="89"/></expr_stmt>
		}<pos:position pos:line="68" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="69" pos:column="17">else <if pos:line="69" pos:column="22">if <condition pos:line="69" pos:column="25">(<expr><call><name pos:line="69" pos:column="26">FIELD_CHECK<pos:position pos:line="69" pos:column="37"/></name> <argument_list pos:line="69" pos:column="38">(<argument><expr><name><name pos:line="69" pos:column="39">fields<pos:position pos:line="69" pos:column="45"/></name><index pos:line="69" pos:column="45">[<expr><literal type="number" pos:line="69" pos:column="46">0<pos:position pos:line="69" pos:column="47"/></literal></expr>]<pos:position pos:line="69" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="50">"zk_ephemerals_count"<pos:position pos:line="69" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="73"/></condition><then pos:line="69" pos:column="73">
		<block pos:line="70" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="71" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="71" pos:column="47"/></name> <argument_list pos:line="71" pos:column="48">(<argument><expr><literal type="string" pos:line="71" pos:column="49">"gauge"<pos:position pos:line="71" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="58">"ephemerals"<pos:position pos:line="71" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="71" pos:column="72">atol<pos:position pos:line="71" pos:column="76"/></name><argument_list pos:line="71" pos:column="76">(<argument><expr><name><name pos:line="71" pos:column="77">fields<pos:position pos:line="71" pos:column="83"/></name><index pos:line="71" pos:column="83">[<expr><literal type="number" pos:line="71" pos:column="84">1<pos:position pos:line="71" pos:column="85"/></literal></expr>]<pos:position pos:line="71" pos:column="86"/></index></name></expr></argument>)<pos:position pos:line="71" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="89"/></expr_stmt>
		}<pos:position pos:line="72" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="73" pos:column="17">else <if pos:line="73" pos:column="22">if <condition pos:line="73" pos:column="25">(<expr><call><name pos:line="73" pos:column="26">FIELD_CHECK<pos:position pos:line="73" pos:column="37"/></name> <argument_list pos:line="73" pos:column="38">(<argument><expr><name><name pos:line="73" pos:column="39">fields<pos:position pos:line="73" pos:column="45"/></name><index pos:line="73" pos:column="45">[<expr><literal type="number" pos:line="73" pos:column="46">0<pos:position pos:line="73" pos:column="47"/></literal></expr>]<pos:position pos:line="73" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="50">"zk_approximate_data_size"<pos:position pos:line="73" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="73" pos:column="78"/></condition><then pos:line="73" pos:column="78">
		<block pos:line="74" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="75" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="75" pos:column="47"/></name> <argument_list pos:line="75" pos:column="48">(<argument><expr><literal type="string" pos:line="75" pos:column="49">"bytes"<pos:position pos:line="75" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="58">"approximate_data_size"<pos:position pos:line="75" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="83">atol<pos:position pos:line="75" pos:column="87"/></name><argument_list pos:line="75" pos:column="87">(<argument><expr><name><name pos:line="75" pos:column="88">fields<pos:position pos:line="75" pos:column="94"/></name><index pos:line="75" pos:column="94">[<expr><literal type="number" pos:line="75" pos:column="95">1<pos:position pos:line="75" pos:column="96"/></literal></expr>]<pos:position pos:line="75" pos:column="97"/></index></name></expr></argument>)<pos:position pos:line="75" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="75" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="100"/></expr_stmt>
		}<pos:position pos:line="76" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="77" pos:column="17">else <if pos:line="77" pos:column="22">if <condition pos:line="77" pos:column="25">(<expr><call><name pos:line="77" pos:column="26">FIELD_CHECK<pos:position pos:line="77" pos:column="37"/></name> <argument_list pos:line="77" pos:column="38">(<argument><expr><name><name pos:line="77" pos:column="39">fields<pos:position pos:line="77" pos:column="45"/></name><index pos:line="77" pos:column="45">[<expr><literal type="number" pos:line="77" pos:column="46">0<pos:position pos:line="77" pos:column="47"/></literal></expr>]<pos:position pos:line="77" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="50">"zk_followers"<pos:position pos:line="77" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="66"/></condition><then pos:line="77" pos:column="66">
		<block pos:line="78" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="79" pos:column="47"/></name> <argument_list pos:line="79" pos:column="48">(<argument><expr><literal type="string" pos:line="79" pos:column="49">"count"<pos:position pos:line="79" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="58">"followers"<pos:position pos:line="79" pos:column="69"/></literal></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="71">atol<pos:position pos:line="79" pos:column="75"/></name><argument_list pos:line="79" pos:column="75">(<argument><expr><name><name pos:line="79" pos:column="76">fields<pos:position pos:line="79" pos:column="82"/></name><index pos:line="79" pos:column="82">[<expr><literal type="number" pos:line="79" pos:column="83">1<pos:position pos:line="79" pos:column="84"/></literal></expr>]<pos:position pos:line="79" pos:column="85"/></index></name></expr></argument>)<pos:position pos:line="79" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="79" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="88"/></expr_stmt>
		}<pos:position pos:line="80" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="81" pos:column="17">else <if pos:line="81" pos:column="22">if <condition pos:line="81" pos:column="25">(<expr><call><name pos:line="81" pos:column="26">FIELD_CHECK<pos:position pos:line="81" pos:column="37"/></name> <argument_list pos:line="81" pos:column="38">(<argument><expr><name><name pos:line="81" pos:column="39">fields<pos:position pos:line="81" pos:column="45"/></name><index pos:line="81" pos:column="45">[<expr><literal type="number" pos:line="81" pos:column="46">0<pos:position pos:line="81" pos:column="47"/></literal></expr>]<pos:position pos:line="81" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="50">"zk_synced_followers"<pos:position pos:line="81" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="73"/></condition><then pos:line="81" pos:column="73">
		<block pos:line="82" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="83" pos:column="47"/></name> <argument_list pos:line="83" pos:column="48">(<argument><expr><literal type="string" pos:line="83" pos:column="49">"count"<pos:position pos:line="83" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="58">"synced_followers"<pos:position pos:line="83" pos:column="76"/></literal></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="78">atol<pos:position pos:line="83" pos:column="82"/></name><argument_list pos:line="83" pos:column="82">(<argument><expr><name><name pos:line="83" pos:column="83">fields<pos:position pos:line="83" pos:column="89"/></name><index pos:line="83" pos:column="89">[<expr><literal type="number" pos:line="83" pos:column="90">1<pos:position pos:line="83" pos:column="91"/></literal></expr>]<pos:position pos:line="83" pos:column="92"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="95"/></expr_stmt>
		}<pos:position pos:line="84" pos:column="18"/></block></then></if></elseif>
		<elseif pos:line="85" pos:column="17">else <if pos:line="85" pos:column="22">if <condition pos:line="85" pos:column="25">(<expr><call><name pos:line="85" pos:column="26">FIELD_CHECK<pos:position pos:line="85" pos:column="37"/></name> <argument_list pos:line="85" pos:column="38">(<argument><expr><name><name pos:line="85" pos:column="39">fields<pos:position pos:line="85" pos:column="45"/></name><index pos:line="85" pos:column="45">[<expr><literal type="number" pos:line="85" pos:column="46">0<pos:position pos:line="85" pos:column="47"/></literal></expr>]<pos:position pos:line="85" pos:column="48"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="50">"zk_pending_syncs"<pos:position pos:line="85" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="85" pos:column="70"/></condition><then pos:line="85" pos:column="70">
		<block pos:line="86" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="87" pos:column="25">zookeeper_submit_gauge<pos:position pos:line="87" pos:column="47"/></name> <argument_list pos:line="87" pos:column="48">(<argument><expr><literal type="string" pos:line="87" pos:column="49">"count"<pos:position pos:line="87" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="58">"pending_syncs"<pos:position pos:line="87" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="87" pos:column="75">atol<pos:position pos:line="87" pos:column="79"/></name><argument_list pos:line="87" pos:column="79">(<argument><expr><name><name pos:line="87" pos:column="80">fields<pos:position pos:line="87" pos:column="86"/></name><index pos:line="87" pos:column="86">[<expr><literal type="number" pos:line="87" pos:column="87">1<pos:position pos:line="87" pos:column="88"/></literal></expr>]<pos:position pos:line="87" pos:column="89"/></index></name></expr></argument>)<pos:position pos:line="87" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="92"/></expr_stmt>
		}<pos:position pos:line="88" pos:column="18"/></block></then></if></elseif>
		<else pos:line="89" pos:column="17">else
		<block pos:line="90" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">DEBUG<pos:position pos:line="91" pos:column="30"/></name><argument_list pos:line="91" pos:column="30">(<argument><expr><literal type="string" pos:line="91" pos:column="31">"Uncollected zookeeper MNTR field %s"<pos:position pos:line="91" pos:column="68"/></literal></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="70">fields<pos:position pos:line="91" pos:column="76"/></name><index pos:line="91" pos:column="76">[<expr><literal type="number" pos:line="91" pos:column="77">0<pos:position pos:line="91" pos:column="78"/></literal></expr>]<pos:position pos:line="91" pos:column="79"/></index></name></expr></argument>)<pos:position pos:line="91" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="81"/></expr_stmt>
		}<pos:position pos:line="92" pos:column="18"/></block></else></if>
	}<pos:position pos:line="93" pos:column="10"/></block></while>

	<return pos:line="95" pos:column="9">return <expr><operator pos:line="95" pos:column="16">(<pos:position pos:line="95" pos:column="17"/></operator><literal type="number" pos:line="95" pos:column="17">0<pos:position pos:line="95" pos:column="18"/></literal><operator pos:line="95" pos:column="18">)<pos:position pos:line="95" pos:column="19"/></operator></expr>;<pos:position pos:line="95" pos:column="20"/></return>
}<pos:position pos:line="96" pos:column="2"/></block></function></unit>

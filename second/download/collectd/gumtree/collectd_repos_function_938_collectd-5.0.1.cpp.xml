<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_938_collectd-5.0.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">v5_swap_instances<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">value_list_t<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">*<pos:position pos:line="1" pos:column="46"/></modifier></type><name pos:line="1" pos:column="46">vl<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">tmp<pos:position pos:line="3" pos:column="11"/></name><index pos:line="3" pos:column="11">[<expr><name pos:line="3" pos:column="12">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="29"/></name></expr>]<pos:position pos:line="3" pos:column="30"/></index></name></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">assert<pos:position pos:line="5" pos:column="9"/></name> <argument_list pos:line="5" pos:column="10">(<argument><expr><sizeof pos:line="5" pos:column="11">sizeof <argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">tmp<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></sizeof> <operator pos:line="5" pos:column="24">==<pos:position pos:line="5" pos:column="26"/></operator> <sizeof pos:line="5" pos:column="27">sizeof <argument_list pos:line="5" pos:column="34">(<argument><expr><name><name pos:line="5" pos:column="35">vl<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">plugin_instance<pos:position pos:line="5" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="57"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">assert<pos:position pos:line="6" pos:column="9"/></name> <argument_list pos:line="6" pos:column="10">(<argument><expr><sizeof pos:line="6" pos:column="11">sizeof <argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">tmp<pos:position pos:line="6" pos:column="22"/></name></expr></argument>)<pos:position pos:line="6" pos:column="23"/></argument_list></sizeof> <operator pos:line="6" pos:column="24">==<pos:position pos:line="6" pos:column="26"/></operator> <sizeof pos:line="6" pos:column="27">sizeof <argument_list pos:line="6" pos:column="34">(<argument><expr><name><name pos:line="6" pos:column="35">vl<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">-&gt;<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="39">type_instance<pos:position pos:line="6" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">memcpy<pos:position pos:line="8" pos:column="9"/></name> <argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">tmp<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="16">vl<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">plugin_instance<pos:position pos:line="8" pos:column="35"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="37">sizeof <argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">tmp<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="9" pos:column="3">memcpy<pos:position pos:line="9" pos:column="9"/></name> <argument_list pos:line="9" pos:column="10">(<argument><expr><name><name pos:line="9" pos:column="11">vl<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">plugin_instance<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="32">vl<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">type_instance<pos:position pos:line="9" pos:column="49"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="51">sizeof <argument_list pos:line="9" pos:column="58">(<argument><expr><name pos:line="9" pos:column="59">tmp<pos:position pos:line="9" pos:column="62"/></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="65"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">memcpy<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><name><name pos:line="10" pos:column="11">vl<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">type_instance<pos:position pos:line="10" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">tmp<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="35">sizeof <argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">tmp<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_161_collectd-4.3.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ignorelist_match_regex<pos:position pos:line="1" pos:column="34"/></name> <parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><name pos:line="1" pos:column="36">ignorelist_item_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">item<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <name pos:line="1" pos:column="67">char<pos:position pos:line="1" pos:column="71"/></name> <modifier pos:line="1" pos:column="72">*<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="73">entry<pos:position pos:line="1" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="79"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="3" pos:column="9">assert<pos:position pos:line="3" pos:column="15"/></name> <argument_list pos:line="3" pos:column="16">(<argument><expr><operator pos:line="3" pos:column="17">(<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">item<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">!=<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name><operator pos:line="3" pos:column="30">)<pos:position pos:line="3" pos:column="31"/></operator> <operator pos:line="3" pos:column="32">&amp;&amp;<pos:position pos:line="3" pos:column="42"/></operator> <operator pos:line="3" pos:column="35">(<pos:position pos:line="3" pos:column="36"/></operator><name><name pos:line="3" pos:column="36">item<pos:position pos:line="3" pos:column="40"/></name><operator pos:line="3" pos:column="40">-&gt;<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="42">rmatch<pos:position pos:line="3" pos:column="48"/></name></name> <operator pos:line="3" pos:column="49">!=<pos:position pos:line="3" pos:column="51"/></operator> <name pos:line="3" pos:column="52">NULL<pos:position pos:line="3" pos:column="56"/></name><operator pos:line="3" pos:column="56">)<pos:position pos:line="3" pos:column="57"/></operator>
			<operator pos:line="4" pos:column="25">&amp;&amp;<pos:position pos:line="4" pos:column="35"/></operator> <operator pos:line="4" pos:column="28">(<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">entry<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">!=<pos:position pos:line="4" pos:column="37"/></operator> <name pos:line="4" pos:column="38">NULL<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">)<pos:position pos:line="4" pos:column="43"/></operator> <operator pos:line="4" pos:column="44">&amp;&amp;<pos:position pos:line="4" pos:column="54"/></operator> <operator pos:line="4" pos:column="47">(<pos:position pos:line="4" pos:column="48"/></operator><call><name pos:line="4" pos:column="48">strlen<pos:position pos:line="4" pos:column="54"/></name> <argument_list pos:line="4" pos:column="55">(<argument><expr><name pos:line="4" pos:column="56">entry<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call> <operator pos:line="4" pos:column="63">&gt;<pos:position pos:line="4" pos:column="67"/></operator> <literal type="number" pos:line="4" pos:column="65">0<pos:position pos:line="4" pos:column="66"/></literal><operator pos:line="4" pos:column="66">)<pos:position pos:line="4" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="69"/></expr_stmt>

	<comment type="block" pos:line="6" pos:column="9">/* match regex */</comment>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">regexec<pos:position pos:line="7" pos:column="20"/></name> <argument_list pos:line="7" pos:column="21">(<argument><expr><name><name pos:line="7" pos:column="22">item<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">-&gt;<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="28">rmatch<pos:position pos:line="7" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">entry<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="43">0<pos:position pos:line="7" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">NULL<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="52">0<pos:position pos:line="7" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call> <operator pos:line="7" pos:column="55">==<pos:position pos:line="7" pos:column="57"/></operator> <literal type="number" pos:line="7" pos:column="58">0<pos:position pos:line="7" pos:column="59"/></literal></expr>)<pos:position pos:line="7" pos:column="60"/></condition><then pos:line="7" pos:column="60">
		<block type="pseudo"><return pos:line="8" pos:column="17">return <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><literal type="number" pos:line="8" pos:column="25">1<pos:position pos:line="8" pos:column="26"/></literal><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator></expr>;<pos:position pos:line="8" pos:column="28"/></return></block></then></if>

	<return pos:line="10" pos:column="9">return <expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal><operator pos:line="10" pos:column="18">)<pos:position pos:line="10" pos:column="19"/></operator></expr>;<pos:position pos:line="10" pos:column="20"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_871_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">Notification_clear<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">PyObject<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">self<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list> <block pos:line="1" pos:column="47">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">Notification<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type><name pos:line="2" pos:column="17">n<pos:position pos:line="2" pos:column="18"/></name> <init pos:line="2" pos:column="19">= <expr><operator pos:line="2" pos:column="21">(<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">Notification<pos:position pos:line="2" pos:column="34"/></name> <operator pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></operator><operator pos:line="2" pos:column="36">)<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">self<pos:position pos:line="2" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="42"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">Py_CLEAR<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name><name pos:line="3" pos:column="12">n<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">-&gt;<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="15">meta<pos:position pos:line="3" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="3" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="21"/></expr_stmt>
  <return pos:line="4" pos:column="3">return <expr><literal type="number" pos:line="4" pos:column="10">0<pos:position pos:line="4" pos:column="11"/></literal></expr>;<pos:position pos:line="4" pos:column="12"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_78_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">disk_submit<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name><name pos:line="1" pos:column="25">struct<pos:position pos:line="1" pos:column="31"/></name> <name pos:line="1" pos:column="32">lv_block_info<pos:position pos:line="1" pos:column="45"/></name></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">binfo<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="54">virDomainPtr<pos:position pos:line="1" pos:column="66"/></name></type> <name pos:line="1" pos:column="67">dom<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>,
                        <parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">dev<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list> <block pos:line="2" pos:column="42">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">dev_copy<pos:position pos:line="3" pos:column="17"/></name> <init pos:line="3" pos:column="18">= <expr><call><name pos:line="3" pos:column="20">strdup<pos:position pos:line="3" pos:column="26"/></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">dev<pos:position pos:line="3" pos:column="30"/></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">type_instance<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">dev_copy<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><operator pos:line="6" pos:column="7">!<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">dev_copy<pos:position pos:line="6" pos:column="16"/></name></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
    <block type="pseudo"><return pos:line="7" pos:column="5">return;<pos:position pos:line="7" pos:column="12"/></return></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">blockdevice_format_basename<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">&amp;&amp;<pos:position pos:line="9" pos:column="45"/></operator> <name pos:line="9" pos:column="38">blockdevice_format<pos:position pos:line="9" pos:column="56"/></name> <operator pos:line="9" pos:column="57">==<pos:position pos:line="9" pos:column="59"/></operator> <name pos:line="9" pos:column="60">source<pos:position pos:line="9" pos:column="66"/></name></expr>)<pos:position pos:line="9" pos:column="67"/></condition><then pos:line="9" pos:column="67">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">type_instance<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">basename<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">dev_copy<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">!<pos:position pos:line="12" pos:column="8"/></operator><name pos:line="12" pos:column="8">type_instance<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">sfree<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><name pos:line="13" pos:column="11">dev_copy<pos:position pos:line="13" pos:column="19"/></name></expr></argument>)<pos:position pos:line="13" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="21"/></expr_stmt>
    <return pos:line="14" pos:column="5">return;<pos:position pos:line="14" pos:column="12"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="17" pos:column="3">char<pos:position pos:line="17" pos:column="7"/></name></type> <name><name pos:line="17" pos:column="8">flush_type_instance<pos:position pos:line="17" pos:column="27"/></name><index pos:line="17" pos:column="27">[<expr><name pos:line="17" pos:column="28">DATA_MAX_NAME_LEN<pos:position pos:line="17" pos:column="45"/></name></expr>]<pos:position pos:line="17" pos:column="46"/></index></name></decl>;<pos:position pos:line="17" pos:column="47"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">snprintf<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">flush_type_instance<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="33">sizeof<argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">flush_type_instance<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="62">"flush-%s"<pos:position pos:line="18" pos:column="72"/></literal></expr></argument>,
           <argument><expr><name pos:line="19" pos:column="12">type_instance<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>

  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><name><name pos:line="21" pos:column="8">binfo<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">-&gt;<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="15">bi<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">rd_req<pos:position pos:line="21" pos:column="24"/></name></name> <operator pos:line="21" pos:column="25">!=<pos:position pos:line="21" pos:column="27"/></operator> <operator pos:line="21" pos:column="28">-<pos:position pos:line="21" pos:column="29"/></operator><literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal><operator pos:line="21" pos:column="30">)<pos:position pos:line="21" pos:column="31"/></operator> <operator pos:line="21" pos:column="32">&amp;&amp;<pos:position pos:line="21" pos:column="42"/></operator> <operator pos:line="21" pos:column="35">(<pos:position pos:line="21" pos:column="36"/></operator><name><name pos:line="21" pos:column="36">binfo<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">-&gt;<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="43">bi<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">wr_req<pos:position pos:line="21" pos:column="52"/></name></name> <operator pos:line="21" pos:column="53">!=<pos:position pos:line="21" pos:column="55"/></operator> <operator pos:line="21" pos:column="56">-<pos:position pos:line="21" pos:column="57"/></operator><literal type="number" pos:line="21" pos:column="57">1<pos:position pos:line="21" pos:column="58"/></literal><operator pos:line="21" pos:column="58">)<pos:position pos:line="21" pos:column="59"/></operator></expr>)<pos:position pos:line="21" pos:column="60"/></condition><then pos:line="21" pos:column="60">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="5">submit_derive2<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="string" pos:line="22" pos:column="20">"disk_ops"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><operator pos:line="22" pos:column="32">(<pos:position pos:line="22" pos:column="33"/></operator><name pos:line="22" pos:column="33">derive_t<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">)<pos:position pos:line="22" pos:column="42"/></operator><name><name pos:line="22" pos:column="42">binfo<pos:position pos:line="22" pos:column="47"/></name><operator pos:line="22" pos:column="47">-&gt;<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="49">bi<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">.<pos:position pos:line="22" pos:column="52"/></operator><name pos:line="22" pos:column="52">rd_req<pos:position pos:line="22" pos:column="58"/></name></name></expr></argument>,
                   <argument><expr><operator pos:line="23" pos:column="20">(<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">derive_t<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">)<pos:position pos:line="23" pos:column="30"/></operator><name><name pos:line="23" pos:column="30">binfo<pos:position pos:line="23" pos:column="35"/></name><operator pos:line="23" pos:column="35">-&gt;<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="37">bi<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">.<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">wr_req<pos:position pos:line="23" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="48">dom<pos:position pos:line="23" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="53">type_instance<pos:position pos:line="23" pos:column="66"/></name></expr></argument>)<pos:position pos:line="23" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="68"/></expr_stmt></block></then></if>

  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><operator pos:line="25" pos:column="7">(<pos:position pos:line="25" pos:column="8"/></operator><name><name pos:line="25" pos:column="8">binfo<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">-&gt;<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="15">bi<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">.<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">rd_bytes<pos:position pos:line="25" pos:column="26"/></name></name> <operator pos:line="25" pos:column="27">!=<pos:position pos:line="25" pos:column="29"/></operator> <operator pos:line="25" pos:column="30">-<pos:position pos:line="25" pos:column="31"/></operator><literal type="number" pos:line="25" pos:column="31">1<pos:position pos:line="25" pos:column="32"/></literal><operator pos:line="25" pos:column="32">)<pos:position pos:line="25" pos:column="33"/></operator> <operator pos:line="25" pos:column="34">&amp;&amp;<pos:position pos:line="25" pos:column="44"/></operator> <operator pos:line="25" pos:column="37">(<pos:position pos:line="25" pos:column="38"/></operator><name><name pos:line="25" pos:column="38">binfo<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">bi<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">.<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="48">wr_bytes<pos:position pos:line="25" pos:column="56"/></name></name> <operator pos:line="25" pos:column="57">!=<pos:position pos:line="25" pos:column="59"/></operator> <operator pos:line="25" pos:column="60">-<pos:position pos:line="25" pos:column="61"/></operator><literal type="number" pos:line="25" pos:column="61">1<pos:position pos:line="25" pos:column="62"/></literal><operator pos:line="25" pos:column="62">)<pos:position pos:line="25" pos:column="63"/></operator></expr>)<pos:position pos:line="25" pos:column="64"/></condition><then pos:line="25" pos:column="64">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="26" pos:column="5">submit_derive2<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="string" pos:line="26" pos:column="20">"disk_octets"<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="26" pos:column="35">(<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="36">derive_t<pos:position pos:line="26" pos:column="44"/></name><operator pos:line="26" pos:column="44">)<pos:position pos:line="26" pos:column="45"/></operator><name><name pos:line="26" pos:column="45">binfo<pos:position pos:line="26" pos:column="50"/></name><operator pos:line="26" pos:column="50">-&gt;<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="52">bi<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">.<pos:position pos:line="26" pos:column="55"/></operator><name pos:line="26" pos:column="55">rd_bytes<pos:position pos:line="26" pos:column="63"/></name></name></expr></argument>,
                   <argument><expr><operator pos:line="27" pos:column="20">(<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">derive_t<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">)<pos:position pos:line="27" pos:column="30"/></operator><name><name pos:line="27" pos:column="30">binfo<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">bi<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">.<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="40">wr_bytes<pos:position pos:line="27" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="50">dom<pos:position pos:line="27" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="55">type_instance<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt></block></then></if>

  <if pos:line="29" pos:column="3">if <condition pos:line="29" pos:column="6">(<expr><name pos:line="29" pos:column="7">extra_stats<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&amp;<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="21">ex_stats_disk<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">(<pos:position pos:line="30" pos:column="10"/></operator><name><name pos:line="30" pos:column="10">binfo<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">rd_total_times<pos:position pos:line="30" pos:column="31"/></name></name> <operator pos:line="30" pos:column="32">!=<pos:position pos:line="30" pos:column="34"/></operator> <operator pos:line="30" pos:column="35">-<pos:position pos:line="30" pos:column="36"/></operator><literal type="number" pos:line="30" pos:column="36">1<pos:position pos:line="30" pos:column="37"/></literal><operator pos:line="30" pos:column="37">)<pos:position pos:line="30" pos:column="38"/></operator> <operator pos:line="30" pos:column="39">&amp;&amp;<pos:position pos:line="30" pos:column="49"/></operator> <operator pos:line="30" pos:column="42">(<pos:position pos:line="30" pos:column="43"/></operator><name><name pos:line="30" pos:column="43">binfo<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">wr_total_times<pos:position pos:line="30" pos:column="64"/></name></name> <operator pos:line="30" pos:column="65">!=<pos:position pos:line="30" pos:column="67"/></operator> <operator pos:line="30" pos:column="68">-<pos:position pos:line="30" pos:column="69"/></operator><literal type="number" pos:line="30" pos:column="69">1<pos:position pos:line="30" pos:column="70"/></literal><operator pos:line="30" pos:column="70">)<pos:position pos:line="30" pos:column="71"/></operator></expr>)<pos:position pos:line="30" pos:column="72"/></condition><then pos:line="30" pos:column="72">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="31" pos:column="7">submit_derive2<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><literal type="string" pos:line="31" pos:column="22">"disk_time"<pos:position pos:line="31" pos:column="33"/></literal></expr></argument>, <argument><expr><operator pos:line="31" pos:column="35">(<pos:position pos:line="31" pos:column="36"/></operator><name pos:line="31" pos:column="36">derive_t<pos:position pos:line="31" pos:column="44"/></name><operator pos:line="31" pos:column="44">)<pos:position pos:line="31" pos:column="45"/></operator><name><name pos:line="31" pos:column="45">binfo<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">-&gt;<pos:position pos:line="31" pos:column="55"/></operator><name pos:line="31" pos:column="52">rd_total_times<pos:position pos:line="31" pos:column="66"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">derive_t<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">)<pos:position pos:line="32" pos:column="32"/></operator><name><name pos:line="32" pos:column="32">binfo<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">wr_total_times<pos:position pos:line="32" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">dom<pos:position pos:line="32" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="60">type_instance<pos:position pos:line="32" pos:column="73"/></name></expr></argument>)<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="75"/></expr_stmt></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">binfo<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">fl_req<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">!=<pos:position pos:line="34" pos:column="25"/></operator> <operator pos:line="34" pos:column="26">-<pos:position pos:line="34" pos:column="27"/></operator><literal type="number" pos:line="34" pos:column="27">1<pos:position pos:line="34" pos:column="28"/></literal></expr>)<pos:position pos:line="34" pos:column="29"/></condition><then pos:line="34" pos:column="29">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="7">submit<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name pos:line="35" pos:column="14">dom<pos:position pos:line="35" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"total_requests"<pos:position pos:line="35" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="37">flush_type_instance<pos:position pos:line="35" pos:column="56"/></name></expr></argument>,
             <argument><expr><operator pos:line="36" pos:column="14">&amp;<pos:position pos:line="36" pos:column="19"/></operator><operator pos:line="36" pos:column="15">(<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">value_t<pos:position pos:line="36" pos:column="23"/></name><operator pos:line="36" pos:column="23">)<pos:position pos:line="36" pos:column="24"/></operator><block pos:line="36" pos:column="24">{<expr><operator pos:line="36" pos:column="25">.<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">derive<pos:position pos:line="36" pos:column="32"/></name> <operator pos:line="36" pos:column="33">=<pos:position pos:line="36" pos:column="34"/></operator> <operator pos:line="36" pos:column="35">(<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">derive_t<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">)<pos:position pos:line="36" pos:column="45"/></operator><name><name pos:line="36" pos:column="45">binfo<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">-&gt;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="52">fl_req<pos:position pos:line="36" pos:column="58"/></name></name></expr>}<pos:position pos:line="36" pos:column="59"/></block></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="61">1<pos:position pos:line="36" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="64"/></expr_stmt></block></then></if>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">binfo<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">fl_total_times<pos:position pos:line="37" pos:column="30"/></name></name> <operator pos:line="37" pos:column="31">!=<pos:position pos:line="37" pos:column="33"/></operator> <operator pos:line="37" pos:column="34">-<pos:position pos:line="37" pos:column="35"/></operator><literal type="number" pos:line="37" pos:column="35">1<pos:position pos:line="37" pos:column="36"/></literal></expr>)<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37"> <block pos:line="37" pos:column="38">{
      <decl_stmt><decl><type><name pos:line="38" pos:column="7">derive_t<pos:position pos:line="38" pos:column="15"/></name></type> <name pos:line="38" pos:column="16">value<pos:position pos:line="38" pos:column="21"/></name> <init pos:line="38" pos:column="22">= <expr><name><name pos:line="38" pos:column="24">binfo<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">fl_total_times<pos:position pos:line="38" pos:column="45"/></name></name> <operator pos:line="38" pos:column="46">/<pos:position pos:line="38" pos:column="47"/></operator> <literal type="number" pos:line="38" pos:column="48">1000<pos:position pos:line="38" pos:column="52"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="53"/></decl_stmt> <comment type="line" pos:line="38" pos:column="54">// ns -&gt; ms</comment>
      <expr_stmt><expr><call><name pos:line="39" pos:column="7">submit<pos:position pos:line="39" pos:column="13"/></name><argument_list pos:line="39" pos:column="13">(<argument><expr><name pos:line="39" pos:column="14">dom<pos:position pos:line="39" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="19">"total_time_in_ms"<pos:position pos:line="39" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="39">flush_type_instance<pos:position pos:line="39" pos:column="58"/></name></expr></argument>,
             <argument><expr><operator pos:line="40" pos:column="14">&amp;<pos:position pos:line="40" pos:column="19"/></operator><operator pos:line="40" pos:column="15">(<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">value_t<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">)<pos:position pos:line="40" pos:column="24"/></operator><block pos:line="40" pos:column="24">{<expr><operator pos:line="40" pos:column="25">.<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="26">derive<pos:position pos:line="40" pos:column="32"/></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <name pos:line="40" pos:column="35">value<pos:position pos:line="40" pos:column="40"/></name></expr>}<pos:position pos:line="40" pos:column="41"/></block></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="43">1<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
  }<pos:position pos:line="42" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="44" pos:column="3">sfree<pos:position pos:line="44" pos:column="8"/></name><argument_list pos:line="44" pos:column="8">(<argument><expr><name pos:line="44" pos:column="9">dev_copy<pos:position pos:line="44" pos:column="17"/></name></expr></argument>)<pos:position pos:line="44" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_514_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nfs_read_kstat<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">kstat_t<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">ksp<pos:position pos:line="1" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">nfs_version<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier> <name pos:line="1" pos:column="64">char<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">inst<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>,
                          <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier><modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">proc_names<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">size_t<pos:position pos:line="2" pos:column="58"/></name></type> <name pos:line="2" pos:column="59">proc_names_num<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list> <block pos:line="2" pos:column="75">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">plugin_instance<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><name pos:line="3" pos:column="24">DATA_MAX_NAME_LEN<pos:position pos:line="3" pos:column="41"/></name></expr>]<pos:position pos:line="3" pos:column="42"/></index></name></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">value_t<pos:position pos:line="4" pos:column="10"/></name></type> <name><name pos:line="4" pos:column="11">values<pos:position pos:line="4" pos:column="17"/></name><index pos:line="4" pos:column="17">[<expr><name pos:line="4" pos:column="18">proc_names_num<pos:position pos:line="4" pos:column="32"/></name></expr>]<pos:position pos:line="4" pos:column="33"/></index></name></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

  <if pos:line="6" pos:column="3">if <condition pos:line="6" pos:column="6">(<expr><name pos:line="6" pos:column="7">ksp<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name></expr>)<pos:position pos:line="6" pos:column="19"/></condition><then pos:line="6" pos:column="19">
    <block type="pseudo"><return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">EINVAL<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">)<pos:position pos:line="7" pos:column="20"/></operator></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">ssnprintf<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">plugin_instance<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="30">sizeof<argument_list pos:line="9" pos:column="36">(<argument><expr><name pos:line="9" pos:column="37">plugin_instance<pos:position pos:line="9" pos:column="52"/></name></expr></argument>)<pos:position pos:line="9" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="55">"v%i%s"<pos:position pos:line="9" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="64">nfs_version<pos:position pos:line="9" pos:column="75"/></name></expr></argument>,
            <argument><expr><name pos:line="10" pos:column="13">inst<pos:position pos:line="10" pos:column="17"/></name></expr></argument>)<pos:position pos:line="10" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="12" pos:column="3">kstat_read<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">kc<pos:position pos:line="12" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="18">ksp<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">NULL<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
  <for pos:line="13" pos:column="3">for <control pos:line="13" pos:column="7">(<init><decl><type><name pos:line="13" pos:column="8">size_t<pos:position pos:line="13" pos:column="14"/></name></type> <name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name> <init pos:line="13" pos:column="17">= <expr><literal type="number" pos:line="13" pos:column="19">0<pos:position pos:line="13" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="21"/></init> <condition><expr><name pos:line="13" pos:column="22">i<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">&lt;<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="26">proc_names_num<pos:position pos:line="13" pos:column="40"/></name></expr>;<pos:position pos:line="13" pos:column="41"/></condition> <incr><expr><name pos:line="13" pos:column="42">i<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">++<pos:position pos:line="13" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="46"/></control> <block pos:line="13" pos:column="47">{
    <comment type="block" pos:line="14" pos:column="5">/* The name passed to kstat_data_lookup() doesn't have the
     * "const" modifier, so we need to copy the name here. */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">name<pos:position pos:line="16" pos:column="14"/></name><index pos:line="16" pos:column="14">[<expr><literal type="number" pos:line="16" pos:column="15">32<pos:position pos:line="16" pos:column="17"/></literal></expr>]<pos:position pos:line="16" pos:column="18"/></index></name></decl>;<pos:position pos:line="16" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">sstrncpy<pos:position pos:line="17" pos:column="13"/></name><argument_list pos:line="17" pos:column="13">(<argument><expr><name pos:line="17" pos:column="14">name<pos:position pos:line="17" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="20">proc_names<pos:position pos:line="17" pos:column="30"/></name><index pos:line="17" pos:column="30">[<expr><name pos:line="17" pos:column="31">i<pos:position pos:line="17" pos:column="32"/></name></expr>]<pos:position pos:line="17" pos:column="33"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="35">sizeof<argument_list pos:line="17" pos:column="41">(<argument><expr><name pos:line="17" pos:column="42">name<pos:position pos:line="17" pos:column="46"/></name></expr></argument>)<pos:position pos:line="17" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">values<pos:position pos:line="19" pos:column="11"/></name><index pos:line="19" pos:column="11">[<expr><name pos:line="19" pos:column="12">i<pos:position pos:line="19" pos:column="13"/></name></expr>]<pos:position pos:line="19" pos:column="14"/></index></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">counter<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <operator pos:line="19" pos:column="25">(<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">derive_t<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">)<pos:position pos:line="19" pos:column="35"/></operator><call><name pos:line="19" pos:column="35">get_kstat_value<pos:position pos:line="19" pos:column="50"/></name><argument_list pos:line="19" pos:column="50">(<argument><expr><name pos:line="19" pos:column="51">ksp<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">name<pos:position pos:line="19" pos:column="60"/></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
  }<pos:position pos:line="20" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">nfs_procedures_submit<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">plugin_instance<pos:position pos:line="22" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="42">proc_names<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">values<pos:position pos:line="22" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="62">proc_names_num<pos:position pos:line="22" pos:column="76"/></name></expr></argument>)<pos:position pos:line="22" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="78"/></expr_stmt>
  <return pos:line="23" pos:column="3">return <expr><operator pos:line="23" pos:column="10">(<pos:position pos:line="23" pos:column="11"/></operator><literal type="number" pos:line="23" pos:column="11">0<pos:position pos:line="23" pos:column="12"/></literal><operator pos:line="23" pos:column="12">)<pos:position pos:line="23" pos:column="13"/></operator></expr>;<pos:position pos:line="23" pos:column="14"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

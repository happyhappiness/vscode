<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_425_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">double<pos:position pos:line="1" pos:column="14"/></name></type> <name pos:line="1" pos:column="15">wireless_percent_to_power<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">double<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">quality<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="56"/></parameter_list> <block pos:line="1" pos:column="57">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">assert<pos:position pos:line="2" pos:column="9"/></name><argument_list pos:line="2" pos:column="9">(<argument><expr><operator pos:line="2" pos:column="10">(<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">quality<pos:position pos:line="2" pos:column="18"/></name> <operator pos:line="2" pos:column="19">&gt;=<pos:position pos:line="2" pos:column="24"/></operator> <literal type="number" pos:line="2" pos:column="22">0.0<pos:position pos:line="2" pos:column="25"/></literal><operator pos:line="2" pos:column="25">)<pos:position pos:line="2" pos:column="26"/></operator> <operator pos:line="2" pos:column="27">&amp;&amp;<pos:position pos:line="2" pos:column="37"/></operator> <operator pos:line="2" pos:column="30">(<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">quality<pos:position pos:line="2" pos:column="38"/></name> <operator pos:line="2" pos:column="39">&lt;=<pos:position pos:line="2" pos:column="44"/></operator> <literal type="number" pos:line="2" pos:column="42">100.0<pos:position pos:line="2" pos:column="47"/></literal><operator pos:line="2" pos:column="47">)<pos:position pos:line="2" pos:column="48"/></operator></expr></argument>)<pos:position pos:line="2" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="50"/></expr_stmt>

  <return pos:line="4" pos:column="3">return <expr><operator pos:line="4" pos:column="10">(<pos:position pos:line="4" pos:column="11"/></operator><operator pos:line="4" pos:column="11">(<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">quality<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></operator> <operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">POWER_MAX<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">-<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="35">POWER_MIN<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">)<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator> <operator pos:line="4" pos:column="47">+<pos:position pos:line="4" pos:column="48"/></operator> <name pos:line="4" pos:column="49">POWER_MIN<pos:position pos:line="4" pos:column="58"/></name><operator pos:line="4" pos:column="58">)<pos:position pos:line="4" pos:column="59"/></operator></expr>;<pos:position pos:line="4" pos:column="60"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

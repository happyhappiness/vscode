<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_858_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cpy_build_notification_meta<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name pos:line="1" pos:column="41">notification_t<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">n<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">PyObject<pos:position pos:line="1" pos:column="68"/></name> <modifier pos:line="1" pos:column="69">*<pos:position pos:line="1" pos:column="70"/></modifier></type><name pos:line="1" pos:column="70">meta<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="75"/></parameter_list> <block pos:line="1" pos:column="76">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">cpy_build_meta_generic<pos:position pos:line="2" pos:column="25"/></name><argument_list pos:line="2" pos:column="25">(<argument><expr><name pos:line="2" pos:column="26">meta<pos:position pos:line="2" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="2" pos:column="32">&amp;<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="33">cpy_plugin_notification_meta<pos:position pos:line="2" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="2" pos:column="63">(<pos:position pos:line="2" pos:column="64"/></operator><name pos:line="2" pos:column="64">void<pos:position pos:line="2" pos:column="68"/></name> <operator pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></operator><operator pos:line="2" pos:column="70">)<pos:position pos:line="2" pos:column="71"/></operator><name pos:line="2" pos:column="71">n<pos:position pos:line="2" pos:column="72"/></name></expr></argument>)<pos:position pos:line="2" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="74"/></expr_stmt>
}<pos:position pos:line="3" pos:column="2"/></block></function></unit>

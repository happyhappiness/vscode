<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1148_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cna_handle_volume_usage_data<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <name pos:line="1" pos:column="47">host_config_t<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">host<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="68">/* {{{ */</comment>
                                        <parameter><decl><type><name pos:line="2" pos:column="41">cfg_volume_usage_t<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">cfg_volume<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>,
                                        <parameter><decl><type><name pos:line="3" pos:column="41">na_elem_t<pos:position pos:line="3" pos:column="50"/></name> <modifier pos:line="3" pos:column="51">*<pos:position pos:line="3" pos:column="52"/></modifier></type><name pos:line="3" pos:column="52">data<pos:position pos:line="3" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="57"/></parameter_list> <block pos:line="3" pos:column="58">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">na_elem_t<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">elem_volumes<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">na_elem_iter_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">iter_volume<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">elem_volumes<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name pos:line="7" pos:column="18">na_elem_child<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">data<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="38">"volumes"<pos:position pos:line="7" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="49"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">elem_volumes<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">==<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28"> <block pos:line="8" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><literal type="string" pos:line="9" pos:column="11">"netapp plugin: cna_handle_volume_usage_data: "<pos:position pos:line="9" pos:column="58"/></literal>
          <literal type="string" pos:line="10" pos:column="11">"na_elem_child (\"volumes\") failed "<pos:position pos:line="10" pos:column="48"/></literal>
          <literal type="string" pos:line="11" pos:column="11">"for host %s."<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="12" pos:column="11">host<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">name<pos:position pos:line="12" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">iter_volume<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <call><name pos:line="16" pos:column="17">na_child_iterator<pos:position pos:line="16" pos:column="34"/></name><argument_list pos:line="16" pos:column="34">(<argument><expr><name pos:line="16" pos:column="35">elem_volumes<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="49"/></expr_stmt>
  <for pos:line="17" pos:column="3">for <control pos:line="17" pos:column="7">(<init><decl><type><name pos:line="17" pos:column="8">na_elem_t<pos:position pos:line="17" pos:column="17"/></name> <modifier pos:line="17" pos:column="18">*<pos:position pos:line="17" pos:column="19"/></modifier></type><name pos:line="17" pos:column="19">elem_volume<pos:position pos:line="17" pos:column="30"/></name> <init pos:line="17" pos:column="31">= <expr><call><name pos:line="17" pos:column="33">na_iterator_next<pos:position pos:line="17" pos:column="49"/></name><argument_list pos:line="17" pos:column="49">(<argument><expr><operator pos:line="17" pos:column="50">&amp;<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="51">iter_volume<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="64"/></init>
       <condition><expr><name pos:line="18" pos:column="8">elem_volume<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">!=<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">NULL<pos:position pos:line="18" pos:column="27"/></name></expr>;<pos:position pos:line="18" pos:column="28"/></condition> <incr><expr><name pos:line="18" pos:column="29">elem_volume<pos:position pos:line="18" pos:column="40"/></name> <operator pos:line="18" pos:column="41">=<pos:position pos:line="18" pos:column="42"/></operator> <call><name pos:line="18" pos:column="43">na_iterator_next<pos:position pos:line="18" pos:column="59"/></name><argument_list pos:line="18" pos:column="59">(<argument><expr><operator pos:line="18" pos:column="60">&amp;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="61">iter_volume<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr></incr>)<pos:position pos:line="18" pos:column="74"/></control> <block pos:line="18" pos:column="75">{
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">char<pos:position pos:line="19" pos:column="15"/></name> <modifier pos:line="19" pos:column="16">*<pos:position pos:line="19" pos:column="17"/></modifier></type><name pos:line="19" pos:column="17">volume_name<pos:position pos:line="19" pos:column="28"/></name></decl>, <modifier pos:line="19" pos:column="30">*<pos:position pos:line="19" pos:column="31"/></modifier><decl><type ref="prev"/><name pos:line="19" pos:column="31">state<pos:position pos:line="19" pos:column="36"/></name></decl>;<pos:position pos:line="19" pos:column="37"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">data_volume_usage_t<pos:position pos:line="21" pos:column="24"/></name> <modifier pos:line="21" pos:column="25">*<pos:position pos:line="21" pos:column="26"/></modifier></type><name pos:line="21" pos:column="26">v<pos:position pos:line="21" pos:column="27"/></name></decl>;<pos:position pos:line="21" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">uint64_t<pos:position pos:line="22" pos:column="13"/></name></type> <name pos:line="22" pos:column="14">value<pos:position pos:line="22" pos:column="19"/></name></decl>;<pos:position pos:line="22" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="24" pos:column="5">na_elem_t<pos:position pos:line="24" pos:column="14"/></name> <modifier pos:line="24" pos:column="15">*<pos:position pos:line="24" pos:column="16"/></modifier></type><name pos:line="24" pos:column="16">sis<pos:position pos:line="24" pos:column="19"/></name></decl>;<pos:position pos:line="24" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">volume_name<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">na_child_get_string<pos:position pos:line="26" pos:column="38"/></name><argument_list pos:line="26" pos:column="38">(<argument><expr><name pos:line="26" pos:column="39">elem_volume<pos:position pos:line="26" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="52">"name"<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">volume_name<pos:position pos:line="27" pos:column="20"/></name> <operator pos:line="27" pos:column="21">==<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="24">NULL<pos:position pos:line="27" pos:column="28"/></name></expr>)<pos:position pos:line="27" pos:column="29"/></condition><then pos:line="27" pos:column="29">
      <block type="pseudo"><continue pos:line="28" pos:column="7">continue;<pos:position pos:line="28" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="30" pos:column="5">state<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <call><name pos:line="30" pos:column="13">na_child_get_string<pos:position pos:line="30" pos:column="32"/></name><argument_list pos:line="30" pos:column="32">(<argument><expr><name pos:line="30" pos:column="33">elem_volume<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="46">"state"<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="55"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name pos:line="31" pos:column="10">state<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">==<pos:position pos:line="31" pos:column="18"/></operator> <name pos:line="31" pos:column="19">NULL<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">)<pos:position pos:line="31" pos:column="24"/></operator> <operator pos:line="31" pos:column="25">||<pos:position pos:line="31" pos:column="27"/></operator> <operator pos:line="31" pos:column="28">(<pos:position pos:line="31" pos:column="29"/></operator><call><name pos:line="31" pos:column="29">strcmp<pos:position pos:line="31" pos:column="35"/></name><argument_list pos:line="31" pos:column="35">(<argument><expr><name pos:line="31" pos:column="36">state<pos:position pos:line="31" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="43">"online"<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call> <operator pos:line="31" pos:column="53">!=<pos:position pos:line="31" pos:column="55"/></operator> <literal type="number" pos:line="31" pos:column="56">0<pos:position pos:line="31" pos:column="57"/></literal><operator pos:line="31" pos:column="57">)<pos:position pos:line="31" pos:column="58"/></operator></expr>)<pos:position pos:line="31" pos:column="59"/></condition><then pos:line="31" pos:column="59">
      <block type="pseudo"><continue pos:line="32" pos:column="7">continue;<pos:position pos:line="32" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* get_volume_usage may return NULL if the volume is to be ignored. */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">v<pos:position pos:line="35" pos:column="6"/></name> <operator pos:line="35" pos:column="7">=<pos:position pos:line="35" pos:column="8"/></operator> <call><name pos:line="35" pos:column="9">get_volume_usage<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><name pos:line="35" pos:column="26">cfg_volume<pos:position pos:line="35" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="38">volume_name<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">v<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">==<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">NULL<pos:position pos:line="36" pos:column="18"/></name></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19">
      <block type="pseudo"><continue pos:line="37" pos:column="7">continue;<pos:position pos:line="37" pos:column="16"/></continue></block></then></if>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><operator pos:line="39" pos:column="9">(<pos:position pos:line="39" pos:column="10"/></operator><name><name pos:line="39" pos:column="10">v<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">flags<pos:position pos:line="39" pos:column="18"/></name></name> <operator pos:line="39" pos:column="19">&amp;<pos:position pos:line="39" pos:column="24"/></operator> <name pos:line="39" pos:column="21">CFG_VOLUME_USAGE_SNAP<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">)<pos:position pos:line="39" pos:column="43"/></operator> <operator pos:line="39" pos:column="44">!=<pos:position pos:line="39" pos:column="46"/></operator> <literal type="number" pos:line="39" pos:column="47">0<pos:position pos:line="39" pos:column="48"/></literal></expr>)<pos:position pos:line="39" pos:column="49"/></condition><then pos:line="39" pos:column="49">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="7">cna_handle_volume_snap_usage<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">host<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="42">v<pos:position pos:line="40" pos:column="43"/></name></expr></argument>)<pos:position pos:line="40" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt></block></then></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name><name pos:line="42" pos:column="10">v<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">flags<pos:position pos:line="42" pos:column="18"/></name></name> <operator pos:line="42" pos:column="19">&amp;<pos:position pos:line="42" pos:column="24"/></operator> <name pos:line="42" pos:column="21">CFG_VOLUME_USAGE_DF<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">)<pos:position pos:line="42" pos:column="41"/></operator> <operator pos:line="42" pos:column="42">==<pos:position pos:line="42" pos:column="44"/></operator> <literal type="number" pos:line="42" pos:column="45">0<pos:position pos:line="42" pos:column="46"/></literal></expr>)<pos:position pos:line="42" pos:column="47"/></condition><then pos:line="42" pos:column="47">
      <block type="pseudo"><continue pos:line="43" pos:column="7">continue;<pos:position pos:line="43" pos:column="16"/></continue></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/* 2^4 exa-bytes? This will take a while ;) */</comment>
    <expr_stmt><expr><name pos:line="46" pos:column="5">value<pos:position pos:line="46" pos:column="10"/></name> <operator pos:line="46" pos:column="11">=<pos:position pos:line="46" pos:column="12"/></operator> <call><name pos:line="46" pos:column="13">na_child_get_uint64<pos:position pos:line="46" pos:column="32"/></name><argument_list pos:line="46" pos:column="32">(<argument><expr><name pos:line="46" pos:column="33">elem_volume<pos:position pos:line="46" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="46">"size-available"<pos:position pos:line="46" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="64">UINT64_MAX<pos:position pos:line="46" pos:column="74"/></name></expr></argument>)<pos:position pos:line="46" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="76"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">value<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">!=<pos:position pos:line="47" pos:column="17"/></operator> <name pos:line="47" pos:column="18">UINT64_MAX<pos:position pos:line="47" pos:column="28"/></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29"> <block pos:line="47" pos:column="30">{
      <expr_stmt><expr><name><name pos:line="48" pos:column="7">v<pos:position pos:line="48" pos:column="8"/></name><operator pos:line="48" pos:column="8">-&gt;<pos:position pos:line="48" pos:column="13"/></operator><name pos:line="48" pos:column="10">norm_free<pos:position pos:line="48" pos:column="19"/></name></name> <operator pos:line="48" pos:column="20">=<pos:position pos:line="48" pos:column="21"/></operator> <name pos:line="48" pos:column="22">value<pos:position pos:line="48" pos:column="27"/></name></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="49" pos:column="7">v<pos:position pos:line="49" pos:column="8"/></name><operator pos:line="49" pos:column="8">-&gt;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="10">flags<pos:position pos:line="49" pos:column="15"/></name></name> <operator pos:line="49" pos:column="16">|=<pos:position pos:line="49" pos:column="18"/></operator> <name pos:line="49" pos:column="19">HAVE_VOLUME_USAGE_NORM_FREE<pos:position pos:line="49" pos:column="46"/></name></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">value<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <call><name pos:line="52" pos:column="13">na_child_get_uint64<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">elem_volume<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="46">"size-used"<pos:position pos:line="52" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="59">UINT64_MAX<pos:position pos:line="52" pos:column="69"/></name></expr></argument>)<pos:position pos:line="52" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="71"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">value<pos:position pos:line="53" pos:column="14"/></name> <operator pos:line="53" pos:column="15">!=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">UINT64_MAX<pos:position pos:line="53" pos:column="28"/></name></expr>)<pos:position pos:line="53" pos:column="29"/></condition><then pos:line="53" pos:column="29"> <block pos:line="53" pos:column="30">{
      <expr_stmt><expr><name><name pos:line="54" pos:column="7">v<pos:position pos:line="54" pos:column="8"/></name><operator pos:line="54" pos:column="8">-&gt;<pos:position pos:line="54" pos:column="13"/></operator><name pos:line="54" pos:column="10">norm_used<pos:position pos:line="54" pos:column="19"/></name></name> <operator pos:line="54" pos:column="20">=<pos:position pos:line="54" pos:column="21"/></operator> <name pos:line="54" pos:column="22">value<pos:position pos:line="54" pos:column="27"/></name></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="55" pos:column="7">v<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">-&gt;<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="10">flags<pos:position pos:line="55" pos:column="15"/></name></name> <operator pos:line="55" pos:column="16">|=<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="19">HAVE_VOLUME_USAGE_NORM_USED<pos:position pos:line="55" pos:column="46"/></name></expr>;<pos:position pos:line="55" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="58" pos:column="5">value<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">na_child_get_uint64<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">elem_volume<pos:position pos:line="58" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="46">"snapshot-blocks-reserved"<pos:position pos:line="58" pos:column="72"/></literal></expr></argument>,
                                <argument><expr><name pos:line="59" pos:column="33">UINT64_MAX<pos:position pos:line="59" pos:column="43"/></name></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">value<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">!=<pos:position pos:line="60" pos:column="17"/></operator> <name pos:line="60" pos:column="18">UINT64_MAX<pos:position pos:line="60" pos:column="28"/></name></expr>)<pos:position pos:line="60" pos:column="29"/></condition><then pos:line="60" pos:column="29"> <block pos:line="60" pos:column="30">{
      <comment type="block" pos:line="61" pos:column="7">/* 1 block == 1024 bytes  as per API docs */</comment>
      <expr_stmt><expr><name><name pos:line="62" pos:column="7">v<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">-&gt;<pos:position pos:line="62" pos:column="13"/></operator><name pos:line="62" pos:column="10">snap_reserved<pos:position pos:line="62" pos:column="23"/></name></name> <operator pos:line="62" pos:column="24">=<pos:position pos:line="62" pos:column="25"/></operator> <literal type="number" pos:line="62" pos:column="26">1024<pos:position pos:line="62" pos:column="30"/></literal> <operator pos:line="62" pos:column="31">*<pos:position pos:line="62" pos:column="32"/></operator> <name pos:line="62" pos:column="33">value<pos:position pos:line="62" pos:column="38"/></name></expr>;<pos:position pos:line="62" pos:column="39"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="63" pos:column="7">v<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">-&gt;<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="10">flags<pos:position pos:line="63" pos:column="15"/></name></name> <operator pos:line="63" pos:column="16">|=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">HAVE_VOLUME_USAGE_SNAP_RSVD<pos:position pos:line="63" pos:column="46"/></name></expr>;<pos:position pos:line="63" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="66" pos:column="5">sis<pos:position pos:line="66" pos:column="8"/></name> <operator pos:line="66" pos:column="9">=<pos:position pos:line="66" pos:column="10"/></operator> <call><name pos:line="66" pos:column="11">na_elem_child<pos:position pos:line="66" pos:column="24"/></name><argument_list pos:line="66" pos:column="24">(<argument><expr><name pos:line="66" pos:column="25">elem_volume<pos:position pos:line="66" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="38">"sis"<pos:position pos:line="66" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="45"/></expr_stmt>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">sis<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">!=<pos:position pos:line="67" pos:column="15"/></operator> <name pos:line="67" pos:column="16">NULL<pos:position pos:line="67" pos:column="20"/></name></expr>)<pos:position pos:line="67" pos:column="21"/></condition><then pos:line="67" pos:column="21"> <block pos:line="67" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="68" pos:column="7">cna_handle_volume_sis_data<pos:position pos:line="68" pos:column="33"/></name><argument_list pos:line="68" pos:column="33">(<argument><expr><name pos:line="68" pos:column="34">host<pos:position pos:line="68" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="40">v<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="43">sis<pos:position pos:line="68" pos:column="46"/></name></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="69" pos:column="7">cna_handle_volume_sis_saved<pos:position pos:line="69" pos:column="34"/></name><argument_list pos:line="69" pos:column="34">(<argument><expr><name pos:line="69" pos:column="35">host<pos:position pos:line="69" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">v<pos:position pos:line="69" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="44">sis<pos:position pos:line="69" pos:column="47"/></name></expr></argument>)<pos:position pos:line="69" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if>
  }<pos:position pos:line="71" pos:column="4"/></block></for> <comment type="block" pos:line="71" pos:column="5">/* for (elem_volume) */</comment>

  <return pos:line="73" pos:column="3">return <expr><call><name pos:line="73" pos:column="10">cna_submit_volume_usage_data<pos:position pos:line="73" pos:column="38"/></name><argument_list pos:line="73" pos:column="38">(
      <argument><expr><name><name pos:line="74" pos:column="7">host<pos:position pos:line="74" pos:column="11"/></name><operator pos:line="74" pos:column="11">-&gt;<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="13">name<pos:position pos:line="74" pos:column="17"/></name></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="19">cfg_volume<pos:position pos:line="74" pos:column="29"/></name></expr></argument>, <argument><expr><name><name pos:line="74" pos:column="31">host<pos:position pos:line="74" pos:column="35"/></name><operator pos:line="74" pos:column="35">-&gt;<pos:position pos:line="74" pos:column="40"/></operator><name pos:line="74" pos:column="37">cfg_volume_usage<pos:position pos:line="74" pos:column="53"/></name><operator pos:line="74" pos:column="53">-&gt;<pos:position pos:line="74" pos:column="58"/></operator><name pos:line="74" pos:column="55">interval<pos:position pos:line="74" pos:column="63"/></name><operator pos:line="74" pos:column="63">.<pos:position pos:line="74" pos:column="64"/></operator><name pos:line="74" pos:column="64">interval<pos:position pos:line="74" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="74"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

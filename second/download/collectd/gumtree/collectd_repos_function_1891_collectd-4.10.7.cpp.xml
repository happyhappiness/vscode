<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1891_collectd-4.10.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">dump_entry<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name><name pos:line="2" pos:column="12">struct<pos:position pos:line="2" pos:column="18"/></name> <name pos:line="2" pos:column="19">ip6t_entry<pos:position pos:line="2" pos:column="29"/></name></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">e<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">ip6tc_handle_t<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">handle<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">i<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name></type> <name><name pos:line="5" pos:column="14">buf<pos:position pos:line="5" pos:column="17"/></name><index pos:line="5" pos:column="17">[<expr><literal type="number" pos:line="5" pos:column="18">40<pos:position pos:line="5" pos:column="20"/></literal></expr>]<pos:position pos:line="5" pos:column="21"/></index></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">int<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">len<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="7" pos:column="9">struct<pos:position pos:line="7" pos:column="15"/></name> <name pos:line="7" pos:column="16">ip6t_entry_target<pos:position pos:line="7" pos:column="33"/></name></name> <modifier pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></modifier></type><name pos:line="7" pos:column="35">t<pos:position pos:line="7" pos:column="36"/></name></decl>;<pos:position pos:line="7" pos:column="37"/></decl_stmt>
	
	<expr_stmt><expr><call><name pos:line="9" pos:column="9">printf<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="string" pos:line="9" pos:column="16">"Entry %u (%lu):\n"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="37">iptcb_entry2index<pos:position pos:line="9" pos:column="54"/></name><argument_list pos:line="9" pos:column="54">(<argument><expr><name pos:line="9" pos:column="55">handle<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">e<pos:position pos:line="9" pos:column="64"/></name></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr></argument>,
	       <argument><expr><call><name pos:line="10" pos:column="16">iptcb_entry2offset<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">handle<pos:position pos:line="10" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="43">e<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="11" pos:column="9">puts<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><literal type="string" pos:line="11" pos:column="14">"SRC IP: "<pos:position pos:line="11" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="12" pos:column="9">inet_ntop<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">AF_INET6<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="29">&amp;<pos:position pos:line="12" pos:column="34"/></operator><name><name pos:line="12" pos:column="30">e<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">ipv6<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">.<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">src<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">buf<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="48">sizeof <name pos:line="12" pos:column="55">buf<pos:position pos:line="12" pos:column="58"/></name></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="13" pos:column="9">puts<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">buf<pos:position pos:line="13" pos:column="17"/></name></expr></argument>)<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="14" pos:column="9">putchar<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><literal type="char" pos:line="14" pos:column="17">'/'<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">ipv6_prefix_length<pos:position pos:line="15" pos:column="33"/></name><argument_list pos:line="15" pos:column="33">(<argument><expr><operator pos:line="15" pos:column="34">&amp;<pos:position pos:line="15" pos:column="39"/></operator><name><name pos:line="15" pos:column="35">e<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">ipv6<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">.<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">smsk<pos:position pos:line="15" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">!=<pos:position pos:line="16" pos:column="19"/></operator> <operator pos:line="16" pos:column="20">-<pos:position pos:line="16" pos:column="21"/></operator><literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="17">printf<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"%d"<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">len<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt></block></then>
	<else pos:line="18" pos:column="9">else <block pos:line="18" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">inet_ntop<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">AF_INET6<pos:position pos:line="19" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="37">&amp;<pos:position pos:line="19" pos:column="42"/></operator><name><name pos:line="19" pos:column="38">e<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">-&gt;<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="41">ipv6<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">smsk<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="52">buf<pos:position pos:line="19" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="57">sizeof <name pos:line="19" pos:column="64">buf<pos:position pos:line="19" pos:column="67"/></name></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">puts<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">buf<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="21" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">putchar<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><literal type="char" pos:line="22" pos:column="17">'\n'<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="23"/></expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="24" pos:column="9">puts<pos:position pos:line="24" pos:column="13"/></name><argument_list pos:line="24" pos:column="13">(<argument><expr><literal type="string" pos:line="24" pos:column="14">"DST IP: "<pos:position pos:line="24" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="25" pos:column="9">inet_ntop<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">AF_INET6<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="29">&amp;<pos:position pos:line="25" pos:column="34"/></operator><name><name pos:line="25" pos:column="30">e<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">ipv6<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">dst<pos:position pos:line="25" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="43">buf<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><sizeof pos:line="25" pos:column="48">sizeof <name pos:line="25" pos:column="55">buf<pos:position pos:line="25" pos:column="58"/></name></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="26" pos:column="9">puts<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><name pos:line="26" pos:column="14">buf<pos:position pos:line="26" pos:column="17"/></name></expr></argument>)<pos:position pos:line="26" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="27" pos:column="9">putchar<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><literal type="char" pos:line="27" pos:column="17">'/'<pos:position pos:line="27" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="28" pos:column="9">len<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">ipv6_prefix_length<pos:position pos:line="28" pos:column="33"/></name><argument_list pos:line="28" pos:column="33">(<argument><expr><operator pos:line="28" pos:column="34">&amp;<pos:position pos:line="28" pos:column="39"/></operator><name><name pos:line="28" pos:column="35">e<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">ipv6<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">.<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">dmsk<pos:position pos:line="28" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">len<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">!=<pos:position pos:line="29" pos:column="19"/></operator> <operator pos:line="29" pos:column="20">-<pos:position pos:line="29" pos:column="21"/></operator><literal type="number" pos:line="29" pos:column="21">1<pos:position pos:line="29" pos:column="22"/></literal></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="17">printf<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><literal type="string" pos:line="30" pos:column="24">"%d"<pos:position pos:line="30" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">len<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt></block></then>
	<else pos:line="31" pos:column="9">else <block pos:line="31" pos:column="14">{
		<expr_stmt><expr><call><name pos:line="32" pos:column="17">inet_ntop<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><name pos:line="32" pos:column="27">AF_INET6<pos:position pos:line="32" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="37">&amp;<pos:position pos:line="32" pos:column="42"/></operator><name><name pos:line="32" pos:column="38">e<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">-&gt;<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="41">ipv6<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">.<pos:position pos:line="32" pos:column="46"/></operator><name pos:line="32" pos:column="46">dmsk<pos:position pos:line="32" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="52">buf<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="57">sizeof <name pos:line="32" pos:column="64">buf<pos:position pos:line="32" pos:column="67"/></name></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">puts<pos:position pos:line="33" pos:column="21"/></name><argument_list pos:line="33" pos:column="21">(<argument><expr><name pos:line="33" pos:column="22">buf<pos:position pos:line="33" pos:column="25"/></name></expr></argument>)<pos:position pos:line="33" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
	}<pos:position pos:line="34" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="35" pos:column="9">putchar<pos:position pos:line="35" pos:column="16"/></name><argument_list pos:line="35" pos:column="16">(<argument><expr><literal type="char" pos:line="35" pos:column="17">'\n'<pos:position pos:line="35" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="37" pos:column="9">printf<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="string" pos:line="37" pos:column="16">"Interface: `%s'/"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="36">e<pos:position pos:line="37" pos:column="37"/></name><operator pos:line="37" pos:column="37">-&gt;<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="39">ipv6<pos:position pos:line="37" pos:column="43"/></name><operator pos:line="37" pos:column="43">.<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="44">iniface<pos:position pos:line="37" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>
	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="25">IFNAMSIZ<pos:position pos:line="38" pos:column="33"/></name></expr>;<pos:position pos:line="38" pos:column="34"/></condition> <incr><expr><name pos:line="38" pos:column="35">i<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">++<pos:position pos:line="38" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">printf<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><literal type="string" pos:line="39" pos:column="24">"%c"<pos:position pos:line="39" pos:column="28"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="39" pos:column="30">e<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">-&gt;<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="33">ipv6<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">.<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="38">iniface_mask<pos:position pos:line="39" pos:column="50"/></name><index pos:line="39" pos:column="50">[<expr><name pos:line="39" pos:column="51">i<pos:position pos:line="39" pos:column="52"/></name></expr>]<pos:position pos:line="39" pos:column="53"/></index></name></expr> ?<pos:position pos:line="39" pos:column="55"/></condition><then pos:line="39" pos:column="55"> <expr><literal type="char" pos:line="39" pos:column="56">'X'<pos:position pos:line="39" pos:column="59"/></literal></expr> <pos:position pos:line="39" pos:column="60"/></then><else pos:line="39" pos:column="60">: <expr><literal type="char" pos:line="39" pos:column="62">'.'<pos:position pos:line="39" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">printf<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><literal type="string" pos:line="40" pos:column="16">"to `%s'/"<pos:position pos:line="40" pos:column="26"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="28">e<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">-&gt;<pos:position pos:line="40" pos:column="34"/></operator><name pos:line="40" pos:column="31">ipv6<pos:position pos:line="40" pos:column="35"/></name><operator pos:line="40" pos:column="35">.<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="36">outiface<pos:position pos:line="40" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
	<for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">i<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>;<pos:position pos:line="41" pos:column="20"/></init> <condition><expr><name pos:line="41" pos:column="21">i<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">&lt;<pos:position pos:line="41" pos:column="27"/></operator> <name pos:line="41" pos:column="25">IFNAMSIZ<pos:position pos:line="41" pos:column="33"/></name></expr>;<pos:position pos:line="41" pos:column="34"/></condition> <incr><expr><name pos:line="41" pos:column="35">i<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">++<pos:position pos:line="41" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="41" pos:column="39"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="17">printf<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><literal type="string" pos:line="42" pos:column="24">"%c"<pos:position pos:line="42" pos:column="28"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="42" pos:column="30">e<pos:position pos:line="42" pos:column="31"/></name><operator pos:line="42" pos:column="31">-&gt;<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="33">ipv6<pos:position pos:line="42" pos:column="37"/></name><operator pos:line="42" pos:column="37">.<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="38">outiface_mask<pos:position pos:line="42" pos:column="51"/></name><index pos:line="42" pos:column="51">[<expr><name pos:line="42" pos:column="52">i<pos:position pos:line="42" pos:column="53"/></name></expr>]<pos:position pos:line="42" pos:column="54"/></index></name></expr> ?<pos:position pos:line="42" pos:column="56"/></condition><then pos:line="42" pos:column="56"> <expr><literal type="char" pos:line="42" pos:column="57">'X'<pos:position pos:line="42" pos:column="60"/></literal></expr> <pos:position pos:line="42" pos:column="61"/></then><else pos:line="42" pos:column="61">: <expr><literal type="char" pos:line="42" pos:column="63">'.'<pos:position pos:line="42" pos:column="66"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="42" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="68"/></expr_stmt></block></for>
	<expr_stmt><expr><call><name pos:line="43" pos:column="9">printf<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="string" pos:line="43" pos:column="16">"\nProtocol: %u\n"<pos:position pos:line="43" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="36">e<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">ipv6<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">.<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="44">proto<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">e<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">ipv6<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">.<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">flags<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">&amp;<pos:position pos:line="44" pos:column="32"/></operator> <name pos:line="44" pos:column="29">IP6T_F_TOS<pos:position pos:line="44" pos:column="39"/></name></expr>)<pos:position pos:line="44" pos:column="40"/></condition><then pos:line="44" pos:column="40">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="17">printf<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><literal type="string" pos:line="45" pos:column="24">"TOS: %u\n"<pos:position pos:line="45" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="37">e<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">ipv6<pos:position pos:line="45" pos:column="44"/></name><operator pos:line="45" pos:column="44">.<pos:position pos:line="45" pos:column="45"/></operator><name pos:line="45" pos:column="45">tos<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt></block></then></if>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">printf<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="string" pos:line="46" pos:column="16">"Flags: %02X\n"<pos:position pos:line="46" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="33">e<pos:position pos:line="46" pos:column="34"/></name><operator pos:line="46" pos:column="34">-&gt;<pos:position pos:line="46" pos:column="39"/></operator><name pos:line="46" pos:column="36">ipv6<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">.<pos:position pos:line="46" pos:column="41"/></operator><name pos:line="46" pos:column="41">flags<pos:position pos:line="46" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="48"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">printf<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><literal type="string" pos:line="47" pos:column="16">"Invflags: %02X\n"<pos:position pos:line="47" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="36">e<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">-&gt;<pos:position pos:line="47" pos:column="42"/></operator><name pos:line="47" pos:column="39">ipv6<pos:position pos:line="47" pos:column="43"/></name><operator pos:line="47" pos:column="43">.<pos:position pos:line="47" pos:column="44"/></operator><name pos:line="47" pos:column="44">invflags<pos:position pos:line="47" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">printf<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="string" pos:line="48" pos:column="16">"Counters: %llu packets, %llu bytes\n"<pos:position pos:line="48" pos:column="54"/></literal></expr></argument>,
	       <argument><expr><operator pos:line="49" pos:column="16">(<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="17">unsigned<pos:position pos:line="49" pos:column="25"/></name> <name pos:line="49" pos:column="26">long<pos:position pos:line="49" pos:column="30"/></name> <name pos:line="49" pos:column="31">long<pos:position pos:line="49" pos:column="35"/></name><operator pos:line="49" pos:column="35">)<pos:position pos:line="49" pos:column="36"/></operator><name><name pos:line="49" pos:column="36">e<pos:position pos:line="49" pos:column="37"/></name><operator pos:line="49" pos:column="37">-&gt;<pos:position pos:line="49" pos:column="42"/></operator><name pos:line="49" pos:column="39">counters<pos:position pos:line="49" pos:column="47"/></name><operator pos:line="49" pos:column="47">.<pos:position pos:line="49" pos:column="48"/></operator><name pos:line="49" pos:column="48">pcnt<pos:position pos:line="49" pos:column="52"/></name></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="54">(<pos:position pos:line="49" pos:column="55"/></operator><name pos:line="49" pos:column="55">unsigned<pos:position pos:line="49" pos:column="63"/></name> <name pos:line="49" pos:column="64">long<pos:position pos:line="49" pos:column="68"/></name> <name pos:line="49" pos:column="69">long<pos:position pos:line="49" pos:column="73"/></name><operator pos:line="49" pos:column="73">)<pos:position pos:line="49" pos:column="74"/></operator><name><name pos:line="49" pos:column="74">e<pos:position pos:line="49" pos:column="75"/></name><operator pos:line="49" pos:column="75">-&gt;<pos:position pos:line="49" pos:column="80"/></operator><name pos:line="49" pos:column="77">counters<pos:position pos:line="49" pos:column="85"/></name><operator pos:line="49" pos:column="85">.<pos:position pos:line="49" pos:column="86"/></operator><name pos:line="49" pos:column="86">bcnt<pos:position pos:line="49" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="92"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="50" pos:column="9">printf<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="string" pos:line="50" pos:column="16">"Cache: %08X\n"<pos:position pos:line="50" pos:column="31"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="33">e<pos:position pos:line="50" pos:column="34"/></name><operator pos:line="50" pos:column="34">-&gt;<pos:position pos:line="50" pos:column="39"/></operator><name pos:line="50" pos:column="36">nfcache<pos:position pos:line="50" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="45"/></expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="52" pos:column="9">IP6T_MATCH_ITERATE<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">e<pos:position pos:line="52" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="31">print_match<pos:position pos:line="52" pos:column="42"/></name></expr></argument>)<pos:position pos:line="52" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="44"/></expr_stmt>

	<expr_stmt><expr><name pos:line="54" pos:column="9">t<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <call><name pos:line="54" pos:column="13">ip6t_get_target<pos:position pos:line="54" pos:column="28"/></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">e<pos:position pos:line="54" pos:column="30"/></name></expr></argument>)<pos:position pos:line="54" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="55" pos:column="9">printf<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><literal type="string" pos:line="55" pos:column="16">"Target name: `%s' [%u]\n"<pos:position pos:line="55" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="44">t<pos:position pos:line="55" pos:column="45"/></name><operator pos:line="55" pos:column="45">-&gt;<pos:position pos:line="55" pos:column="50"/></operator><name pos:line="55" pos:column="47">u<pos:position pos:line="55" pos:column="48"/></name><operator pos:line="55" pos:column="48">.<pos:position pos:line="55" pos:column="49"/></operator><name pos:line="55" pos:column="49">user<pos:position pos:line="55" pos:column="53"/></name><operator pos:line="55" pos:column="53">.<pos:position pos:line="55" pos:column="54"/></operator><name pos:line="55" pos:column="54">name<pos:position pos:line="55" pos:column="58"/></name></name></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="60">t<pos:position pos:line="55" pos:column="61"/></name><operator pos:line="55" pos:column="61">-&gt;<pos:position pos:line="55" pos:column="66"/></operator><name pos:line="55" pos:column="63">u<pos:position pos:line="55" pos:column="64"/></name><operator pos:line="55" pos:column="64">.<pos:position pos:line="55" pos:column="65"/></operator><name pos:line="55" pos:column="65">target_size<pos:position pos:line="55" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="78"/></expr_stmt>
	<if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><call><name pos:line="56" pos:column="13">strcmp<pos:position pos:line="56" pos:column="19"/></name><argument_list pos:line="56" pos:column="19">(<argument><expr><name><name pos:line="56" pos:column="20">t<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">u<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">.<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="25">user<pos:position pos:line="56" pos:column="29"/></name><operator pos:line="56" pos:column="29">.<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="30">name<pos:position pos:line="56" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="36">IP6T_STANDARD_TARGET<pos:position pos:line="56" pos:column="56"/></name></expr></argument>)<pos:position pos:line="56" pos:column="57"/></argument_list></call> <operator pos:line="56" pos:column="58">==<pos:position pos:line="56" pos:column="60"/></operator> <literal type="number" pos:line="56" pos:column="61">0<pos:position pos:line="56" pos:column="62"/></literal></expr>)<pos:position pos:line="56" pos:column="63"/></condition><then pos:line="56" pos:column="63"> <block pos:line="56" pos:column="64">{
		<decl_stmt><decl><type><specifier pos:line="57" pos:column="17">const<pos:position pos:line="57" pos:column="22"/></specifier> <name pos:line="57" pos:column="23">unsigned<pos:position pos:line="57" pos:column="31"/></name> <name pos:line="57" pos:column="32">char<pos:position pos:line="57" pos:column="36"/></name> <modifier pos:line="57" pos:column="37">*<pos:position pos:line="57" pos:column="38"/></modifier></type><name pos:line="57" pos:column="38">data<pos:position pos:line="57" pos:column="42"/></name> <init pos:line="57" pos:column="43">= <expr><name><name pos:line="57" pos:column="45">t<pos:position pos:line="57" pos:column="46"/></name><operator pos:line="57" pos:column="46">-&gt;<pos:position pos:line="57" pos:column="51"/></operator><name pos:line="57" pos:column="48">data<pos:position pos:line="57" pos:column="52"/></name></name></expr></init></decl>;<pos:position pos:line="57" pos:column="53"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="58" pos:column="17">int<pos:position pos:line="58" pos:column="20"/></name></type> <name pos:line="58" pos:column="21">pos<pos:position pos:line="58" pos:column="24"/></name> <init pos:line="58" pos:column="25">= <expr><operator pos:line="58" pos:column="27">*<pos:position pos:line="58" pos:column="28"/></operator><operator pos:line="58" pos:column="28">(<pos:position pos:line="58" pos:column="29"/></operator><specifier pos:line="58" pos:column="29">const<pos:position pos:line="58" pos:column="34"/></specifier> <name pos:line="58" pos:column="35">int<pos:position pos:line="58" pos:column="38"/></name> <operator pos:line="58" pos:column="39">*<pos:position pos:line="58" pos:column="40"/></operator><operator pos:line="58" pos:column="40">)<pos:position pos:line="58" pos:column="41"/></operator><name pos:line="58" pos:column="41">data<pos:position pos:line="58" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="58" pos:column="46"/></decl_stmt>
		<if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><name pos:line="59" pos:column="21">pos<pos:position pos:line="59" pos:column="24"/></name> <operator pos:line="59" pos:column="25">&lt;<pos:position pos:line="59" pos:column="29"/></operator> <literal type="number" pos:line="59" pos:column="27">0<pos:position pos:line="59" pos:column="28"/></literal></expr>)<pos:position pos:line="59" pos:column="29"/></condition><then pos:line="59" pos:column="29">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="60" pos:column="25">printf<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><literal type="string" pos:line="60" pos:column="32">"verdict=%s\n"<pos:position pos:line="60" pos:column="46"/></literal></expr></argument>,
			       <argument><expr><ternary><condition><expr><name pos:line="61" pos:column="32">pos<pos:position pos:line="61" pos:column="35"/></name> <operator pos:line="61" pos:column="36">==<pos:position pos:line="61" pos:column="38"/></operator> <operator pos:line="61" pos:column="39">-<pos:position pos:line="61" pos:column="40"/></operator><name pos:line="61" pos:column="40">NF_ACCEPT<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">-<pos:position pos:line="61" pos:column="50"/></operator><literal type="number" pos:line="61" pos:column="50">1<pos:position pos:line="61" pos:column="51"/></literal></expr> ?<pos:position pos:line="61" pos:column="53"/></condition><then pos:line="61" pos:column="53"> <expr><literal type="string" pos:line="61" pos:column="54">"NF_ACCEPT"<pos:position pos:line="61" pos:column="65"/></literal></expr>
			       <pos:position pos:line="62" pos:column="11"/></then><else pos:line="62" pos:column="32">: <expr><ternary><condition><expr><name pos:line="62" pos:column="34">pos<pos:position pos:line="62" pos:column="37"/></name> <operator pos:line="62" pos:column="38">==<pos:position pos:line="62" pos:column="40"/></operator> <operator pos:line="62" pos:column="41">-<pos:position pos:line="62" pos:column="42"/></operator><name pos:line="62" pos:column="42">NF_DROP<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">-<pos:position pos:line="62" pos:column="50"/></operator><literal type="number" pos:line="62" pos:column="50">1<pos:position pos:line="62" pos:column="51"/></literal></expr> ?<pos:position pos:line="62" pos:column="53"/></condition><then pos:line="62" pos:column="53"> <expr><literal type="string" pos:line="62" pos:column="54">"NF_DROP"<pos:position pos:line="62" pos:column="63"/></literal></expr>
			       <pos:position pos:line="63" pos:column="11"/></then><else pos:line="63" pos:column="32">: <expr><ternary><condition><expr><name pos:line="63" pos:column="34">pos<pos:position pos:line="63" pos:column="37"/></name> <operator pos:line="63" pos:column="38">==<pos:position pos:line="63" pos:column="40"/></operator> <name pos:line="63" pos:column="41">IP6T_RETURN<pos:position pos:line="63" pos:column="52"/></name></expr> ?<pos:position pos:line="63" pos:column="54"/></condition><then pos:line="63" pos:column="54"> <expr><literal type="string" pos:line="63" pos:column="55">"RETURN"<pos:position pos:line="63" pos:column="63"/></literal></expr>
			       <pos:position pos:line="64" pos:column="11"/></then><else pos:line="64" pos:column="32">: <expr><literal type="string" pos:line="64" pos:column="34">"UNKNOWN"<pos:position pos:line="64" pos:column="43"/></literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></argument>)<pos:position pos:line="64" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="45"/></expr_stmt></block></then>
		<else pos:line="65" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="25">printf<pos:position pos:line="66" pos:column="31"/></name><argument_list pos:line="66" pos:column="31">(<argument><expr><literal type="string" pos:line="66" pos:column="32">"verdict=%u\n"<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="48">pos<pos:position pos:line="66" pos:column="51"/></name></expr></argument>)<pos:position pos:line="66" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt></block></else></if>
	}<pos:position pos:line="67" pos:column="10"/></block></then> <elseif pos:line="67" pos:column="11">else <if pos:line="67" pos:column="16">if <condition pos:line="67" pos:column="19">(<expr><call><name pos:line="67" pos:column="20">strcmp<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><name><name pos:line="67" pos:column="27">t<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">u<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">.<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="32">user<pos:position pos:line="67" pos:column="36"/></name><operator pos:line="67" pos:column="36">.<pos:position pos:line="67" pos:column="37"/></operator><name pos:line="67" pos:column="37">name<pos:position pos:line="67" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="43">IP6T_ERROR_TARGET<pos:position pos:line="67" pos:column="60"/></name></expr></argument>)<pos:position pos:line="67" pos:column="61"/></argument_list></call> <operator pos:line="67" pos:column="62">==<pos:position pos:line="67" pos:column="64"/></operator> <literal type="number" pos:line="67" pos:column="65">0<pos:position pos:line="67" pos:column="66"/></literal></expr>)<pos:position pos:line="67" pos:column="67"/></condition><then pos:line="67" pos:column="67">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="68" pos:column="17">printf<pos:position pos:line="68" pos:column="23"/></name><argument_list pos:line="68" pos:column="23">(<argument><expr><literal type="string" pos:line="68" pos:column="24">"error=`%s'\n"<pos:position pos:line="68" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="68" pos:column="40">t<pos:position pos:line="68" pos:column="41"/></name><operator pos:line="68" pos:column="41">-&gt;<pos:position pos:line="68" pos:column="46"/></operator><name pos:line="68" pos:column="43">data<pos:position pos:line="68" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="68" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="49"/></expr_stmt></block></then></if></elseif></if>

	<expr_stmt><expr><call><name pos:line="70" pos:column="9">printf<pos:position pos:line="70" pos:column="15"/></name><argument_list pos:line="70" pos:column="15">(<argument><expr><literal type="string" pos:line="70" pos:column="16">"\n"<pos:position pos:line="70" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
	<return pos:line="71" pos:column="9">return <expr><literal type="number" pos:line="71" pos:column="16">0<pos:position pos:line="71" pos:column="17"/></literal></expr>;<pos:position pos:line="71" pos:column="18"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

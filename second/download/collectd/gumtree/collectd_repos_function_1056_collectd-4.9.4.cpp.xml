<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1056_collectd-4.9.4.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">uptime_init<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">void<pos:position pos:line="1" pos:column="29"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="30"/></parameter_list> <comment type="block" pos:line="1" pos:column="31">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/*
	 * On most unix systems the uptime is calculated by looking at the boot
	 * time (stored in unix time, since epoch) and the current one. We are
	 * going to do the same, reading the boot time value while executing
	 * the uptime_init function (there is no need to read, every time the
	 * plugin_read is called, a value that won't change). However, since
	 * uptime_init is run only once, if the function fails in retrieving
	 * the boot time, the plugin is unregistered and there is no chance to
	 * try again later. Nevertheless, this is very unlikely to happen.
	 */</comment>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">KERNEL_LINUX<pos:position pos:line="14" pos:column="17"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">unsigned<pos:position pos:line="15" pos:column="17"/></name> <name pos:line="15" pos:column="18">long<pos:position pos:line="15" pos:column="22"/></name></type> <name pos:line="15" pos:column="23">starttime<pos:position pos:line="15" pos:column="32"/></name></decl>;<pos:position pos:line="15" pos:column="33"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name></type> <name><name pos:line="16" pos:column="14">buffer<pos:position pos:line="16" pos:column="20"/></name><index pos:line="16" pos:column="20">[<expr><literal type="number" pos:line="16" pos:column="21">1024<pos:position pos:line="16" pos:column="25"/></literal></expr>]<pos:position pos:line="16" pos:column="26"/></index></name></decl>;<pos:position pos:line="16" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">ret<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="18" pos:column="9">FILE<pos:position pos:line="18" pos:column="13"/></name> <modifier pos:line="18" pos:column="14">*<pos:position pos:line="18" pos:column="15"/></modifier></type><name pos:line="18" pos:column="15">fh<pos:position pos:line="18" pos:column="17"/></name></decl>;<pos:position pos:line="18" pos:column="18"/></decl_stmt>

	<expr_stmt><expr><name pos:line="20" pos:column="9">ret<pos:position pos:line="20" pos:column="12"/></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>

	<expr_stmt><expr><name pos:line="22" pos:column="9">fh<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">fopen<pos:position pos:line="22" pos:column="19"/></name> <argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">STAT_FILE<pos:position pos:line="22" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="32">"r"<pos:position pos:line="22" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>

	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">fh<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">==<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">NULL<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24">
	<block pos:line="25" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="26" pos:column="17">char<pos:position pos:line="26" pos:column="21"/></name></type> <name><name pos:line="26" pos:column="22">errbuf<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><literal type="number" pos:line="26" pos:column="29">1024<pos:position pos:line="26" pos:column="33"/></literal></expr>]<pos:position pos:line="26" pos:column="34"/></index></name></decl>;<pos:position pos:line="26" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="27" pos:column="17">ERROR<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="string" pos:line="27" pos:column="24">"uptime plugin: Cannot open "<pos:position pos:line="27" pos:column="53"/></literal><name pos:line="27" pos:column="53">STAT_FILE<pos:position pos:line="27" pos:column="62"/></name><literal type="string" pos:line="27" pos:column="62">": %s"<pos:position pos:line="27" pos:column="68"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="28" pos:column="25">sstrerror<pos:position pos:line="28" pos:column="34"/></name> <argument_list pos:line="28" pos:column="35">(<argument><expr><name pos:line="28" pos:column="36">errno<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">errbuf<pos:position pos:line="28" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="51">sizeof <argument_list pos:line="28" pos:column="58">(<argument><expr><name pos:line="28" pos:column="59">errbuf<pos:position pos:line="28" pos:column="65"/></name></expr></argument>)<pos:position pos:line="28" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
		<return pos:line="29" pos:column="17">return <expr><operator pos:line="29" pos:column="24">(<pos:position pos:line="29" pos:column="25"/></operator><operator pos:line="29" pos:column="25">-<pos:position pos:line="29" pos:column="26"/></operator><literal type="number" pos:line="29" pos:column="26">1<pos:position pos:line="29" pos:column="27"/></literal><operator pos:line="29" pos:column="27">)<pos:position pos:line="29" pos:column="28"/></operator></expr>;<pos:position pos:line="29" pos:column="29"/></return>
	}<pos:position pos:line="30" pos:column="10"/></block></then></if>

	<while pos:line="32" pos:column="9">while <condition pos:line="32" pos:column="15">(<expr><call><name pos:line="32" pos:column="16">fgets<pos:position pos:line="32" pos:column="21"/></name> <argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">buffer<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="31">1024<pos:position pos:line="32" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="37">fh<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call> <operator pos:line="32" pos:column="41">!=<pos:position pos:line="32" pos:column="43"/></operator> <name pos:line="32" pos:column="44">NULL<pos:position pos:line="32" pos:column="48"/></name></expr>)<pos:position pos:line="32" pos:column="49"/></condition>
	<block pos:line="33" pos:column="9">{
		<comment type="block" pos:line="34" pos:column="17">/* look for the btime string and read the value */</comment>
		<expr_stmt><expr><name pos:line="35" pos:column="17">ret<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <call><name pos:line="35" pos:column="23">sscanf<pos:position pos:line="35" pos:column="29"/></name> <argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">buffer<pos:position pos:line="35" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="39">"btime %lu"<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="35" pos:column="52">&amp;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="53">starttime<pos:position pos:line="35" pos:column="62"/></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
		<comment type="block" pos:line="36" pos:column="17">/* avoid further loops if btime has been found and read
		 * correctly (hopefully) */</comment>
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">ret<pos:position pos:line="38" pos:column="24"/></name> <operator pos:line="38" pos:column="25">==<pos:position pos:line="38" pos:column="27"/></operator> <literal type="number" pos:line="38" pos:column="28">1<pos:position pos:line="38" pos:column="29"/></literal></expr>)<pos:position pos:line="38" pos:column="30"/></condition><then pos:line="38" pos:column="30">
			<block type="pseudo"><break pos:line="39" pos:column="25">break;<pos:position pos:line="39" pos:column="31"/></break></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="42" pos:column="9">fclose<pos:position pos:line="42" pos:column="15"/></name> <argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">fh<pos:position pos:line="42" pos:column="19"/></name></expr></argument>)<pos:position pos:line="42" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>

	<comment type="block" pos:line="44" pos:column="9">/* loop done, check if no value has been found/read */</comment>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">ret<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">!=<pos:position pos:line="45" pos:column="19"/></operator> <literal type="number" pos:line="45" pos:column="20">1<pos:position pos:line="45" pos:column="21"/></literal></expr>)<pos:position pos:line="45" pos:column="22"/></condition><then pos:line="45" pos:column="22">
	<block pos:line="46" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="47" pos:column="17">ERROR<pos:position pos:line="47" pos:column="22"/></name> <argument_list pos:line="47" pos:column="23">(<argument><expr><literal type="string" pos:line="47" pos:column="24">"uptime plugin: No value read from "<pos:position pos:line="47" pos:column="60"/></literal><name pos:line="47" pos:column="60">STAT_FILE<pos:position pos:line="47" pos:column="69"/></name><literal type="string" pos:line="47" pos:column="69">""<pos:position pos:line="47" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="73"/></expr_stmt>
		<return pos:line="48" pos:column="17">return <expr><operator pos:line="48" pos:column="24">(<pos:position pos:line="48" pos:column="25"/></operator><operator pos:line="48" pos:column="25">-<pos:position pos:line="48" pos:column="26"/></operator><literal type="number" pos:line="48" pos:column="26">1<pos:position pos:line="48" pos:column="27"/></literal><operator pos:line="48" pos:column="27">)<pos:position pos:line="48" pos:column="28"/></operator></expr>;<pos:position pos:line="48" pos:column="29"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="51" pos:column="9">boottime<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <operator pos:line="51" pos:column="20">(<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="21">time_t<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">)<pos:position pos:line="51" pos:column="28"/></operator> <name pos:line="51" pos:column="29">starttime<pos:position pos:line="51" pos:column="38"/></name></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>

	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">boottime<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">==<pos:position pos:line="53" pos:column="24"/></operator> <literal type="number" pos:line="53" pos:column="25">0<pos:position pos:line="53" pos:column="26"/></literal></expr>)<pos:position pos:line="53" pos:column="27"/></condition><then pos:line="53" pos:column="27">
	<block pos:line="54" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="55" pos:column="17">ERROR<pos:position pos:line="55" pos:column="22"/></name> <argument_list pos:line="55" pos:column="23">(<argument><expr><literal type="string" pos:line="55" pos:column="24">"uptime plugin: btime read from "<pos:position pos:line="55" pos:column="57"/></literal><name pos:line="55" pos:column="57">STAT_FILE<pos:position pos:line="55" pos:column="66"/></name><literal type="string" pos:line="55" pos:column="66">", "<pos:position pos:line="55" pos:column="70"/></literal>
				<literal type="string" pos:line="56" pos:column="33">"but `boottime' is zero!"<pos:position pos:line="56" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="60"/></expr_stmt>
		<return pos:line="57" pos:column="17">return <expr><operator pos:line="57" pos:column="24">(<pos:position pos:line="57" pos:column="25"/></operator><operator pos:line="57" pos:column="25">-<pos:position pos:line="57" pos:column="26"/></operator><literal type="number" pos:line="57" pos:column="26">1<pos:position pos:line="57" pos:column="27"/></literal><operator pos:line="57" pos:column="27">)<pos:position pos:line="57" pos:column="28"/></operator></expr>;<pos:position pos:line="57" pos:column="29"/></return>
	}<pos:position pos:line="58" pos:column="10"/></block></then></if>
<comment type="block" pos:line="59" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">elif<pos:position pos:line="61" pos:column="6"/></cpp:directive> <expr><name pos:line="61" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="61" pos:column="20"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="62" pos:column="9">kstat_t<pos:position pos:line="62" pos:column="16"/></name> <modifier pos:line="62" pos:column="17">*<pos:position pos:line="62" pos:column="18"/></modifier></type><name pos:line="62" pos:column="18">ksp<pos:position pos:line="62" pos:column="21"/></name></decl>;<pos:position pos:line="62" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="63" pos:column="9">kstat_named_t<pos:position pos:line="63" pos:column="22"/></name> <modifier pos:line="63" pos:column="23">*<pos:position pos:line="63" pos:column="24"/></modifier></type><name pos:line="63" pos:column="24">knp<pos:position pos:line="63" pos:column="27"/></name></decl>;<pos:position pos:line="63" pos:column="28"/></decl_stmt>

	<expr_stmt><expr><name pos:line="65" pos:column="9">ksp<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">=<pos:position pos:line="65" pos:column="14"/></operator> <name pos:line="65" pos:column="15">NULL<pos:position pos:line="65" pos:column="19"/></name></expr>;<pos:position pos:line="65" pos:column="20"/></expr_stmt>
	<expr_stmt><expr><name pos:line="66" pos:column="9">knp<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <name pos:line="66" pos:column="15">NULL<pos:position pos:line="66" pos:column="19"/></name></expr>;<pos:position pos:line="66" pos:column="20"/></expr_stmt>

	<comment type="block" pos:line="68" pos:column="9">/* kstats chain already opened by update_kstat (using *kc), verify everything went fine. */</comment>
	<if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">kc<pos:position pos:line="69" pos:column="15"/></name> <operator pos:line="69" pos:column="16">==<pos:position pos:line="69" pos:column="18"/></operator> <name pos:line="69" pos:column="19">NULL<pos:position pos:line="69" pos:column="23"/></name></expr>)<pos:position pos:line="69" pos:column="24"/></condition><then pos:line="69" pos:column="24">
	<block pos:line="70" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="71" pos:column="17">ERROR<pos:position pos:line="71" pos:column="22"/></name> <argument_list pos:line="71" pos:column="23">(<argument><expr><literal type="string" pos:line="71" pos:column="24">"uptime plugin: kstat chain control structure not available."<pos:position pos:line="71" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="87"/></expr_stmt>
		<return pos:line="72" pos:column="17">return <expr><operator pos:line="72" pos:column="24">(<pos:position pos:line="72" pos:column="25"/></operator><operator pos:line="72" pos:column="25">-<pos:position pos:line="72" pos:column="26"/></operator><literal type="number" pos:line="72" pos:column="26">1<pos:position pos:line="72" pos:column="27"/></literal><operator pos:line="72" pos:column="27">)<pos:position pos:line="72" pos:column="28"/></operator></expr>;<pos:position pos:line="72" pos:column="29"/></return>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="75" pos:column="9">ksp<pos:position pos:line="75" pos:column="12"/></name> <operator pos:line="75" pos:column="13">=<pos:position pos:line="75" pos:column="14"/></operator> <call><name pos:line="75" pos:column="15">kstat_lookup<pos:position pos:line="75" pos:column="27"/></name> <argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">kc<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="33">"unix"<pos:position pos:line="75" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="41">0<pos:position pos:line="75" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="44">"system_misc"<pos:position pos:line="75" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="59"/></expr_stmt>
	<if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><name pos:line="76" pos:column="13">ksp<pos:position pos:line="76" pos:column="16"/></name> <operator pos:line="76" pos:column="17">==<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">NULL<pos:position pos:line="76" pos:column="24"/></name></expr>)<pos:position pos:line="76" pos:column="25"/></condition><then pos:line="76" pos:column="25">
	<block pos:line="77" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="78" pos:column="17">ERROR<pos:position pos:line="78" pos:column="22"/></name> <argument_list pos:line="78" pos:column="23">(<argument><expr><literal type="string" pos:line="78" pos:column="24">"uptime plugin: Cannot find unix:0:system_misc kstat."<pos:position pos:line="78" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="80"/></expr_stmt>
		<return pos:line="79" pos:column="17">return <expr><operator pos:line="79" pos:column="24">(<pos:position pos:line="79" pos:column="25"/></operator><operator pos:line="79" pos:column="25">-<pos:position pos:line="79" pos:column="26"/></operator><literal type="number" pos:line="79" pos:column="26">1<pos:position pos:line="79" pos:column="27"/></literal><operator pos:line="79" pos:column="27">)<pos:position pos:line="79" pos:column="28"/></operator></expr>;<pos:position pos:line="79" pos:column="29"/></return>
	}<pos:position pos:line="80" pos:column="10"/></block></then></if>

	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><call><name pos:line="82" pos:column="13">kstat_read<pos:position pos:line="82" pos:column="23"/></name> <argument_list pos:line="82" pos:column="24">(<argument><expr><name pos:line="82" pos:column="25">kc<pos:position pos:line="82" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="29">ksp<pos:position pos:line="82" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="34">NULL<pos:position pos:line="82" pos:column="38"/></name></expr></argument>)<pos:position pos:line="82" pos:column="39"/></argument_list></call> <operator pos:line="82" pos:column="40">&lt;<pos:position pos:line="82" pos:column="44"/></operator> <literal type="number" pos:line="82" pos:column="42">0<pos:position pos:line="82" pos:column="43"/></literal></expr>)<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44">
	<block pos:line="83" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="84" pos:column="17">ERROR<pos:position pos:line="84" pos:column="22"/></name> <argument_list pos:line="84" pos:column="23">(<argument><expr><literal type="string" pos:line="84" pos:column="24">"uptime plugin: kstat_read failed."<pos:position pos:line="84" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="61"/></expr_stmt>
		<return pos:line="85" pos:column="17">return <expr><operator pos:line="85" pos:column="24">(<pos:position pos:line="85" pos:column="25"/></operator><operator pos:line="85" pos:column="25">-<pos:position pos:line="85" pos:column="26"/></operator><literal type="number" pos:line="85" pos:column="26">1<pos:position pos:line="85" pos:column="27"/></literal><operator pos:line="85" pos:column="27">)<pos:position pos:line="85" pos:column="28"/></operator></expr>;<pos:position pos:line="85" pos:column="29"/></return>
	}<pos:position pos:line="86" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="88" pos:column="9">knp<pos:position pos:line="88" pos:column="12"/></name> <operator pos:line="88" pos:column="13">=<pos:position pos:line="88" pos:column="14"/></operator> <operator pos:line="88" pos:column="15">(<pos:position pos:line="88" pos:column="16"/></operator><name pos:line="88" pos:column="16">kstat_named_t<pos:position pos:line="88" pos:column="29"/></name> <operator pos:line="88" pos:column="30">*<pos:position pos:line="88" pos:column="31"/></operator><operator pos:line="88" pos:column="31">)<pos:position pos:line="88" pos:column="32"/></operator> <call><name pos:line="88" pos:column="33">kstat_data_lookup<pos:position pos:line="88" pos:column="50"/></name> <argument_list pos:line="88" pos:column="51">(<argument><expr><name pos:line="88" pos:column="52">ksp<pos:position pos:line="88" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="57">"boot_time"<pos:position pos:line="88" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="70"/></expr_stmt>
	<if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">knp<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">==<pos:position pos:line="89" pos:column="19"/></operator> <name pos:line="89" pos:column="20">NULL<pos:position pos:line="89" pos:column="24"/></name></expr>)<pos:position pos:line="89" pos:column="25"/></condition><then pos:line="89" pos:column="25">
	<block pos:line="90" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="91" pos:column="17">ERROR<pos:position pos:line="91" pos:column="22"/></name> <argument_list pos:line="91" pos:column="23">(<argument><expr><literal type="string" pos:line="91" pos:column="24">"uptime plugin: kstat_data_lookup (boot_time) failed."<pos:position pos:line="91" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="80"/></expr_stmt>
		<return pos:line="92" pos:column="17">return <expr><operator pos:line="92" pos:column="24">(<pos:position pos:line="92" pos:column="25"/></operator><operator pos:line="92" pos:column="25">-<pos:position pos:line="92" pos:column="26"/></operator><literal type="number" pos:line="92" pos:column="26">1<pos:position pos:line="92" pos:column="27"/></literal><operator pos:line="92" pos:column="27">)<pos:position pos:line="92" pos:column="28"/></operator></expr>;<pos:position pos:line="92" pos:column="29"/></return>
	}<pos:position pos:line="93" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="95" pos:column="9">boottime<pos:position pos:line="95" pos:column="17"/></name> <operator pos:line="95" pos:column="18">=<pos:position pos:line="95" pos:column="19"/></operator> <operator pos:line="95" pos:column="20">(<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="21">time_t<pos:position pos:line="95" pos:column="27"/></name><operator pos:line="95" pos:column="27">)<pos:position pos:line="95" pos:column="28"/></operator> <name><name pos:line="95" pos:column="29">knp<pos:position pos:line="95" pos:column="32"/></name><operator pos:line="95" pos:column="32">-&gt;<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="34">value<pos:position pos:line="95" pos:column="39"/></name><operator pos:line="95" pos:column="39">.<pos:position pos:line="95" pos:column="40"/></operator><name pos:line="95" pos:column="40">ui32<pos:position pos:line="95" pos:column="44"/></name></name></expr>;<pos:position pos:line="95" pos:column="45"/></expr_stmt>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">boottime<pos:position pos:line="97" pos:column="21"/></name> <operator pos:line="97" pos:column="22">==<pos:position pos:line="97" pos:column="24"/></operator> <literal type="number" pos:line="97" pos:column="25">0<pos:position pos:line="97" pos:column="26"/></literal></expr>)<pos:position pos:line="97" pos:column="27"/></condition><then pos:line="97" pos:column="27">
	<block pos:line="98" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">ERROR<pos:position pos:line="99" pos:column="22"/></name> <argument_list pos:line="99" pos:column="23">(<argument><expr><literal type="string" pos:line="99" pos:column="24">"uptime plugin: kstat_data_lookup returned success, "<pos:position pos:line="99" pos:column="77"/></literal>
			<literal type="string" pos:line="100" pos:column="25">"but `boottime' is zero!"<pos:position pos:line="100" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="52"/></expr_stmt>
		<return pos:line="101" pos:column="17">return <expr><operator pos:line="101" pos:column="24">(<pos:position pos:line="101" pos:column="25"/></operator><operator pos:line="101" pos:column="25">-<pos:position pos:line="101" pos:column="26"/></operator><literal type="number" pos:line="101" pos:column="26">1<pos:position pos:line="101" pos:column="27"/></literal><operator pos:line="101" pos:column="27">)<pos:position pos:line="101" pos:column="28"/></operator></expr>;<pos:position pos:line="101" pos:column="29"/></return>
	}<pos:position pos:line="102" pos:column="10"/></block></then></if>
<comment type="block" pos:line="103" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="105" pos:column="1"># <cpp:directive pos:line="105" pos:column="3">elif<pos:position pos:line="105" pos:column="7"/></cpp:directive> <expr><name pos:line="105" pos:column="8">HAVE_SYS_SYSCTL_H<pos:position pos:line="105" pos:column="25"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name><name pos:line="106" pos:column="9">struct<pos:position pos:line="106" pos:column="15"/></name> <name pos:line="106" pos:column="16">timeval<pos:position pos:line="106" pos:column="23"/></name></name></type> <name pos:line="106" pos:column="24">boottv<pos:position pos:line="106" pos:column="30"/></name></decl>;<pos:position pos:line="106" pos:column="31"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="107" pos:column="9">size_t<pos:position pos:line="107" pos:column="15"/></name></type> <name pos:line="107" pos:column="16">boottv_len<pos:position pos:line="107" pos:column="26"/></name></decl>;<pos:position pos:line="107" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="108" pos:column="9">int<pos:position pos:line="108" pos:column="12"/></name></type> <name pos:line="108" pos:column="13">status<pos:position pos:line="108" pos:column="19"/></name></decl>;<pos:position pos:line="108" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="110" pos:column="9">int<pos:position pos:line="110" pos:column="12"/></name></type> <name><name pos:line="110" pos:column="13">mib<pos:position pos:line="110" pos:column="16"/></name><index pos:line="110" pos:column="16">[<expr><literal type="number" pos:line="110" pos:column="17">2<pos:position pos:line="110" pos:column="18"/></literal></expr>]<pos:position pos:line="110" pos:column="19"/></index></name></decl>;<pos:position pos:line="110" pos:column="20"/></decl_stmt>

	<expr_stmt><expr><name><name pos:line="112" pos:column="9">mib<pos:position pos:line="112" pos:column="12"/></name><index pos:line="112" pos:column="12">[<expr><literal type="number" pos:line="112" pos:column="13">0<pos:position pos:line="112" pos:column="14"/></literal></expr>]<pos:position pos:line="112" pos:column="15"/></index></name> <operator pos:line="112" pos:column="16">=<pos:position pos:line="112" pos:column="17"/></operator> <name pos:line="112" pos:column="18">CTL_KERN<pos:position pos:line="112" pos:column="26"/></name></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="113" pos:column="9">mib<pos:position pos:line="113" pos:column="12"/></name><index pos:line="113" pos:column="12">[<expr><literal type="number" pos:line="113" pos:column="13">1<pos:position pos:line="113" pos:column="14"/></literal></expr>]<pos:position pos:line="113" pos:column="15"/></index></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <name pos:line="113" pos:column="18">KERN_BOOTTIME<pos:position pos:line="113" pos:column="31"/></name></expr>;<pos:position pos:line="113" pos:column="32"/></expr_stmt>

	<expr_stmt><expr><name pos:line="115" pos:column="9">boottv_len<pos:position pos:line="115" pos:column="19"/></name> <operator pos:line="115" pos:column="20">=<pos:position pos:line="115" pos:column="21"/></operator> <sizeof pos:line="115" pos:column="22">sizeof <argument_list pos:line="115" pos:column="29">(<argument><expr><name pos:line="115" pos:column="30">boottv<pos:position pos:line="115" pos:column="36"/></name></expr></argument>)<pos:position pos:line="115" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="115" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="116" pos:column="9">memset<pos:position pos:line="116" pos:column="15"/></name> <argument_list pos:line="116" pos:column="16">(<argument><expr><operator pos:line="116" pos:column="17">&amp;<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="18">boottv<pos:position pos:line="116" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="26">0<pos:position pos:line="116" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="29">boottv_len<pos:position pos:line="116" pos:column="39"/></name></expr></argument>)<pos:position pos:line="116" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="41"/></expr_stmt>

	<expr_stmt><expr><name pos:line="118" pos:column="9">status<pos:position pos:line="118" pos:column="15"/></name> <operator pos:line="118" pos:column="16">=<pos:position pos:line="118" pos:column="17"/></operator> <call><name pos:line="118" pos:column="18">sysctl<pos:position pos:line="118" pos:column="24"/></name> <argument_list pos:line="118" pos:column="25">(<argument><expr><name pos:line="118" pos:column="26">mib<pos:position pos:line="118" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="31">STATIC_ARRAY_SIZE<pos:position pos:line="118" pos:column="48"/></name> <argument_list pos:line="118" pos:column="49">(<argument><expr><name pos:line="118" pos:column="50">mib<pos:position pos:line="118" pos:column="53"/></name></expr></argument>)<pos:position pos:line="118" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="118" pos:column="56">&amp;<pos:position pos:line="118" pos:column="61"/></operator><name pos:line="118" pos:column="57">boottv<pos:position pos:line="118" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="65">&amp;<pos:position pos:line="118" pos:column="70"/></operator><name pos:line="118" pos:column="66">boottv_len<pos:position pos:line="118" pos:column="76"/></name></expr></argument>,
			<comment type="block" pos:line="119" pos:column="25">/* new_value = */</comment> <argument><expr><name pos:line="119" pos:column="43">NULL<pos:position pos:line="119" pos:column="47"/></name></expr></argument>, <comment type="block" pos:line="119" pos:column="49">/* new_length = */</comment> <argument><expr><literal type="number" pos:line="119" pos:column="68">0<pos:position pos:line="119" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="71"/></expr_stmt>
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name pos:line="120" pos:column="13">status<pos:position pos:line="120" pos:column="19"/></name> <operator pos:line="120" pos:column="20">!=<pos:position pos:line="120" pos:column="22"/></operator> <literal type="number" pos:line="120" pos:column="23">0<pos:position pos:line="120" pos:column="24"/></literal></expr>)<pos:position pos:line="120" pos:column="25"/></condition><then pos:line="120" pos:column="25">
	<block pos:line="121" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="122" pos:column="17">char<pos:position pos:line="122" pos:column="21"/></name></type> <name><name pos:line="122" pos:column="22">errbuf<pos:position pos:line="122" pos:column="28"/></name><index pos:line="122" pos:column="28">[<expr><literal type="number" pos:line="122" pos:column="29">1024<pos:position pos:line="122" pos:column="33"/></literal></expr>]<pos:position pos:line="122" pos:column="34"/></index></name></decl>;<pos:position pos:line="122" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="123" pos:column="17">ERROR<pos:position pos:line="123" pos:column="22"/></name> <argument_list pos:line="123" pos:column="23">(<argument><expr><literal type="string" pos:line="123" pos:column="24">"uptime plugin: No value read from sysctl interface: %s"<pos:position pos:line="123" pos:column="80"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="124" pos:column="25">sstrerror<pos:position pos:line="124" pos:column="34"/></name> <argument_list pos:line="124" pos:column="35">(<argument><expr><name pos:line="124" pos:column="36">errno<pos:position pos:line="124" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="124" pos:column="43">errbuf<pos:position pos:line="124" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="124" pos:column="51">sizeof <argument_list pos:line="124" pos:column="58">(<argument><expr><name pos:line="124" pos:column="59">errbuf<pos:position pos:line="124" pos:column="65"/></name></expr></argument>)<pos:position pos:line="124" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="124" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="124" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="69"/></expr_stmt>
		<return pos:line="125" pos:column="17">return <expr><operator pos:line="125" pos:column="24">(<pos:position pos:line="125" pos:column="25"/></operator><operator pos:line="125" pos:column="25">-<pos:position pos:line="125" pos:column="26"/></operator><literal type="number" pos:line="125" pos:column="26">1<pos:position pos:line="125" pos:column="27"/></literal><operator pos:line="125" pos:column="27">)<pos:position pos:line="125" pos:column="28"/></operator></expr>;<pos:position pos:line="125" pos:column="29"/></return>
	}<pos:position pos:line="126" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="128" pos:column="9">boottime<pos:position pos:line="128" pos:column="17"/></name> <operator pos:line="128" pos:column="18">=<pos:position pos:line="128" pos:column="19"/></operator> <name><name pos:line="128" pos:column="20">boottv<pos:position pos:line="128" pos:column="26"/></name><operator pos:line="128" pos:column="26">.<pos:position pos:line="128" pos:column="27"/></operator><name pos:line="128" pos:column="27">tv_sec<pos:position pos:line="128" pos:column="33"/></name></name></expr>;<pos:position pos:line="128" pos:column="34"/></expr_stmt>

	<if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">boottime<pos:position pos:line="130" pos:column="21"/></name> <operator pos:line="130" pos:column="22">==<pos:position pos:line="130" pos:column="24"/></operator> <literal type="number" pos:line="130" pos:column="25">0<pos:position pos:line="130" pos:column="26"/></literal></expr>)<pos:position pos:line="130" pos:column="27"/></condition><then pos:line="130" pos:column="27">
	<block pos:line="131" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="132" pos:column="17">ERROR<pos:position pos:line="132" pos:column="22"/></name> <argument_list pos:line="132" pos:column="23">(<argument><expr><literal type="string" pos:line="132" pos:column="24">"uptime plugin: sysctl(3) returned success, "<pos:position pos:line="132" pos:column="69"/></literal>
				<literal type="string" pos:line="133" pos:column="33">"but `boottime' is zero!"<pos:position pos:line="133" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="60"/></expr_stmt>
		<return pos:line="134" pos:column="17">return <expr><operator pos:line="134" pos:column="24">(<pos:position pos:line="134" pos:column="25"/></operator><operator pos:line="134" pos:column="25">-<pos:position pos:line="134" pos:column="26"/></operator><literal type="number" pos:line="134" pos:column="26">1<pos:position pos:line="134" pos:column="27"/></literal><operator pos:line="134" pos:column="27">)<pos:position pos:line="134" pos:column="28"/></operator></expr>;<pos:position pos:line="134" pos:column="29"/></return>
	}<pos:position pos:line="135" pos:column="10"/></block></then></if>
<cpp:endif pos:line="136" pos:column="1">#<cpp:directive pos:line="136" pos:column="2">endif<pos:position pos:line="136" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="136" pos:column="8">/* HAVE_SYS_SYSCTL_H */</comment>

	<return pos:line="138" pos:column="9">return <expr><operator pos:line="138" pos:column="16">(<pos:position pos:line="138" pos:column="17"/></operator><literal type="number" pos:line="138" pos:column="17">0<pos:position pos:line="138" pos:column="18"/></literal><operator pos:line="138" pos:column="18">)<pos:position pos:line="138" pos:column="19"/></operator></expr>;<pos:position pos:line="138" pos:column="20"/></return>
}<pos:position pos:line="139" pos:column="2"/></block></function></unit>

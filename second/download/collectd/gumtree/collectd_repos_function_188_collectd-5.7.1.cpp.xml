<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_188_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">rra_free<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">int<pos:position pos:line="1" pos:column="25"/></name></type> <name pos:line="1" pos:column="26">rra_num<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier><modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">rra_def<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="50"/></parameter_list> <comment type="block" pos:line="1" pos:column="51">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <for pos:line="3" pos:column="3">for <control pos:line="3" pos:column="7">(<init><decl><type><name pos:line="3" pos:column="8">int<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">i<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><literal type="number" pos:line="3" pos:column="16">0<pos:position pos:line="3" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="18"/></init> <condition><expr><name pos:line="3" pos:column="19">i<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">&lt;<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="23">rra_num<pos:position pos:line="3" pos:column="30"/></name></expr>;<pos:position pos:line="3" pos:column="31"/></condition> <incr><expr><name pos:line="3" pos:column="32">i<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">++<pos:position pos:line="3" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="3" pos:column="36"/></control> <block pos:line="3" pos:column="37">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">sfree<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><name><name pos:line="4" pos:column="11">rra_def<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><name pos:line="4" pos:column="19">i<pos:position pos:line="4" pos:column="20"/></name></expr>]<pos:position pos:line="4" pos:column="21"/></index></name></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="5" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="6" pos:column="3">sfree<pos:position pos:line="6" pos:column="8"/></name><argument_list pos:line="6" pos:column="8">(<argument><expr><name pos:line="6" pos:column="9">rra_def<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2269_collectd-5.6.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">lcc_network_buffer_add_value<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">lcc_network_buffer_t<pos:position pos:line="1" pos:column="54"/></name> <modifier pos:line="1" pos:column="55">*<pos:position pos:line="1" pos:column="56"/></modifier></type><name pos:line="1" pos:column="56">nb<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="60">/* {{{ */</comment>
                                 <parameter><decl><type><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">lcc_value_list_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">vl<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list> <block pos:line="2" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><operator pos:line="5" pos:column="7">(<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">nb<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <name pos:line="5" pos:column="14">NULL<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">)<pos:position pos:line="5" pos:column="19"/></operator> <operator pos:line="5" pos:column="20">||<pos:position pos:line="5" pos:column="22"/></operator> <operator pos:line="5" pos:column="23">(<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">vl<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">==<pos:position pos:line="5" pos:column="29"/></operator> <name pos:line="5" pos:column="30">NULL<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">)<pos:position pos:line="5" pos:column="35"/></operator></expr>)<pos:position pos:line="5" pos:column="36"/></condition><then pos:line="5" pos:column="36">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">EINVAL<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="8" pos:column="3">status<pos:position pos:line="8" pos:column="9"/></name> <operator pos:line="8" pos:column="10">=<pos:position pos:line="8" pos:column="11"/></operator> <call><name pos:line="8" pos:column="12">nb_add_value_list<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">nb<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">vl<pos:position pos:line="8" pos:column="36"/></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
  <return pos:line="9" pos:column="3">return <expr><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">status<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">)<pos:position pos:line="9" pos:column="18"/></operator></expr>;<pos:position pos:line="9" pos:column="19"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1725_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_handle_base_xpath<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">char<pos:position pos:line="1" pos:column="37"/></name> <specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <modifier pos:line="1" pos:column="44">*<pos:position pos:line="1" pos:column="45"/></modifier></type><name pos:line="1" pos:column="45">plugin_instance<pos:position pos:line="1" pos:column="60"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="62">/* {{{ */</comment>
                                <parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">host<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">xmlXPathContextPtr<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">xpath_ctx<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>,
                                <parameter><decl><type><specifier pos:line="3" pos:column="33">const<pos:position pos:line="3" pos:column="38"/></specifier> <name pos:line="3" pos:column="39">data_set_t<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type><name pos:line="3" pos:column="51">ds<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="55">char<pos:position pos:line="3" pos:column="59"/></name> <modifier pos:line="3" pos:column="60">*<pos:position pos:line="3" pos:column="61"/></modifier></type><name pos:line="3" pos:column="61">base_xpath<pos:position pos:line="3" pos:column="71"/></name></decl></parameter>,
                                <parameter><decl><type><name pos:line="4" pos:column="33">cx_xpath_t<pos:position pos:line="4" pos:column="43"/></name> <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier></type><name pos:line="4" pos:column="45">xpath<pos:position pos:line="4" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="51"/></parameter_list> <block pos:line="4" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">total_nodes<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">xmlXPathObjectPtr<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">base_node_obj<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><name pos:line="7" pos:column="37">NULL<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">xmlNodeSetPtr<pos:position pos:line="8" pos:column="16"/></name></type> <name pos:line="8" pos:column="17">base_nodes<pos:position pos:line="8" pos:column="27"/></name> <init pos:line="8" pos:column="28">= <expr><name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="35"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="10" pos:column="3">value_list_t<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">vl<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>

  <expr_stmt><expr><name pos:line="12" pos:column="3">base_node_obj<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <macro><name pos:line="12" pos:column="19">cx_evaluate_xpath<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument pos:line="12" pos:column="37">xpath_ctx<pos:position pos:line="12" pos:column="46"/></argument>, <argument pos:line="12" pos:column="48">BAD_CAST base_xpath<pos:position pos:line="12" pos:column="67"/></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></macro></expr>;<pos:position pos:line="12" pos:column="69"/></expr_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">base_node_obj<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">==<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">NULL<pos:position pos:line="13" pos:column="28"/></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return></block></then></if> <comment type="block" pos:line="14" pos:column="16">/* error is logged already */</comment>

  <expr_stmt><expr><name pos:line="16" pos:column="3">base_nodes<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">base_node_obj<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">nodesetval<pos:position pos:line="16" pos:column="41"/></name></name></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">total_nodes<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <ternary><condition><expr><operator pos:line="17" pos:column="17">(<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">base_nodes<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">)<pos:position pos:line="17" pos:column="29"/></operator></expr> ?<pos:position pos:line="17" pos:column="31"/></condition><then pos:line="17" pos:column="31"> <expr><name><name pos:line="17" pos:column="32">base_nodes<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">nodeNr<pos:position pos:line="17" pos:column="50"/></name></name></expr> <pos:position pos:line="17" pos:column="51"/></then><else pos:line="17" pos:column="51">: <expr><literal type="number" pos:line="17" pos:column="53">0<pos:position pos:line="17" pos:column="54"/></literal></expr></else></ternary></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>

  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">total_nodes<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr>)<pos:position pos:line="19" pos:column="24"/></condition><then pos:line="19" pos:column="24"> <block pos:line="19" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">ERROR<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="string" pos:line="20" pos:column="11">"curl_xml plugin: "<pos:position pos:line="20" pos:column="30"/></literal>
          <literal type="string" pos:line="21" pos:column="11">"xpath expression \"%s\" doesn't match any of the nodes. "<pos:position pos:line="21" pos:column="69"/></literal>
          <literal type="string" pos:line="22" pos:column="11">"Skipping the xpath block..."<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>,
          <argument><expr><name pos:line="23" pos:column="11">base_xpath<pos:position pos:line="23" pos:column="21"/></name></expr></argument>)<pos:position pos:line="23" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">xmlXPathFreeObject<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><name pos:line="24" pos:column="24">base_node_obj<pos:position pos:line="24" pos:column="37"/></name></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
    <return pos:line="25" pos:column="5">return <expr><operator pos:line="25" pos:column="12">-<pos:position pos:line="25" pos:column="13"/></operator><literal type="number" pos:line="25" pos:column="13">1<pos:position pos:line="25" pos:column="14"/></literal></expr>;<pos:position pos:line="25" pos:column="15"/></return>
  }<pos:position pos:line="26" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="28" pos:column="3">/* If base_xpath returned multiple results, then */</comment>
  <comment type="block" pos:line="29" pos:column="3">/* Instance in the xpath block is required */</comment>
  <if pos:line="30" pos:column="3">if <condition pos:line="30" pos:column="6">(<expr><name pos:line="30" pos:column="7">total_nodes<pos:position pos:line="30" pos:column="18"/></name> <operator pos:line="30" pos:column="19">&gt;<pos:position pos:line="30" pos:column="23"/></operator> <literal type="number" pos:line="30" pos:column="21">1<pos:position pos:line="30" pos:column="22"/></literal> <operator pos:line="30" pos:column="23">&amp;&amp;<pos:position pos:line="30" pos:column="33"/></operator> <name><name pos:line="30" pos:column="26">xpath<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">instance<pos:position pos:line="30" pos:column="41"/></name></name> <operator pos:line="30" pos:column="42">==<pos:position pos:line="30" pos:column="44"/></operator> <name pos:line="30" pos:column="45">NULL<pos:position pos:line="30" pos:column="49"/></name></expr>)<pos:position pos:line="30" pos:column="50"/></condition><then pos:line="30" pos:column="50"> <block pos:line="30" pos:column="51">{
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">ERROR<pos:position pos:line="31" pos:column="10"/></name><argument_list pos:line="31" pos:column="10">(<argument><expr><literal type="string" pos:line="31" pos:column="11">"curl_xml plugin: "<pos:position pos:line="31" pos:column="30"/></literal>
          <literal type="string" pos:line="32" pos:column="11">"InstanceFrom is must in xpath block since the base xpath expression "<pos:position pos:line="32" pos:column="81"/></literal>
          <literal type="string" pos:line="33" pos:column="11">"\"%s\" "<pos:position pos:line="33" pos:column="20"/></literal>
          <literal type="string" pos:line="34" pos:column="11">"returned multiple results. Skipping the xpath block..."<pos:position pos:line="34" pos:column="67"/></literal></expr></argument>,
          <argument><expr><name pos:line="35" pos:column="11">base_xpath<pos:position pos:line="35" pos:column="21"/></name></expr></argument>)<pos:position pos:line="35" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">-<pos:position pos:line="36" pos:column="13"/></operator><literal type="number" pos:line="36" pos:column="13">1<pos:position pos:line="36" pos:column="14"/></literal></expr>;<pos:position pos:line="36" pos:column="15"/></return>
  }<pos:position pos:line="37" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="39" pos:column="3">/* set the values for the value_list */</comment>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">vl<pos:position pos:line="40" pos:column="5"/></name><operator pos:line="40" pos:column="5">.<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">values_len<pos:position pos:line="40" pos:column="16"/></name></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name><name pos:line="40" pos:column="19">ds<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">-&gt;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="23">ds_num<pos:position pos:line="40" pos:column="29"/></name></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">sstrncpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name><name pos:line="41" pos:column="12">vl<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">type<pos:position pos:line="41" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="21">xpath<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">type<pos:position pos:line="41" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="34">sizeof<argument_list pos:line="41" pos:column="40">(<argument><expr><name><name pos:line="41" pos:column="41">vl<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">.<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="44">type<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">sstrncpy<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><name><name pos:line="42" pos:column="12">vl<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">.<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">plugin<pos:position pos:line="42" pos:column="21"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"curl_xml"<pos:position pos:line="42" pos:column="33"/></literal></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="35">sizeof<argument_list pos:line="42" pos:column="41">(<argument><expr><name><name pos:line="42" pos:column="42">vl<pos:position pos:line="42" pos:column="44"/></name><operator pos:line="42" pos:column="44">.<pos:position pos:line="42" pos:column="45"/></operator><name pos:line="42" pos:column="45">plugin<pos:position pos:line="42" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="54"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="43" pos:column="3">sstrncpy<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name><name pos:line="43" pos:column="12">vl<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">.<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">host<pos:position pos:line="43" pos:column="19"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="21">host<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="27">sizeof<argument_list pos:line="43" pos:column="33">(<argument><expr><name><name pos:line="43" pos:column="34">vl<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">.<pos:position pos:line="43" pos:column="37"/></operator><name pos:line="43" pos:column="37">host<pos:position pos:line="43" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="44"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">plugin_instance<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">!=<pos:position pos:line="44" pos:column="25"/></operator> <name pos:line="44" pos:column="26">NULL<pos:position pos:line="44" pos:column="30"/></name></expr>)<pos:position pos:line="44" pos:column="31"/></condition><then pos:line="44" pos:column="31">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="5">sstrncpy<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><name><name pos:line="45" pos:column="14">vl<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">.<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">plugin_instance<pos:position pos:line="45" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="34">plugin_instance<pos:position pos:line="45" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="51">sizeof<argument_list pos:line="45" pos:column="57">(<argument><expr><name><name pos:line="45" pos:column="58">vl<pos:position pos:line="45" pos:column="60"/></name><operator pos:line="45" pos:column="60">.<pos:position pos:line="45" pos:column="61"/></operator><name pos:line="45" pos:column="61">plugin_instance<pos:position pos:line="45" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="79"/></expr_stmt></block></then></if>

  <for pos:line="47" pos:column="3">for <control pos:line="47" pos:column="7">(<init><decl><type><name pos:line="47" pos:column="8">int<pos:position pos:line="47" pos:column="11"/></name></type> <name pos:line="47" pos:column="12">i<pos:position pos:line="47" pos:column="13"/></name> <init pos:line="47" pos:column="14">= <expr><literal type="number" pos:line="47" pos:column="16">0<pos:position pos:line="47" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="47" pos:column="18"/></init> <condition><expr><name pos:line="47" pos:column="19">i<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">&lt;<pos:position pos:line="47" pos:column="25"/></operator> <name pos:line="47" pos:column="23">total_nodes<pos:position pos:line="47" pos:column="34"/></name></expr>;<pos:position pos:line="47" pos:column="35"/></condition> <incr><expr><name pos:line="47" pos:column="36">i<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">++<pos:position pos:line="47" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="47" pos:column="40"/></control> <block pos:line="47" pos:column="41">{
    <decl_stmt><decl><type><name pos:line="48" pos:column="5">int<pos:position pos:line="48" pos:column="8"/></name></type> <name pos:line="48" pos:column="9">status<pos:position pos:line="48" pos:column="15"/></name></decl>;<pos:position pos:line="48" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">xpath_ctx<pos:position pos:line="50" pos:column="14"/></name><operator pos:line="50" pos:column="14">-&gt;<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="16">node<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name><name pos:line="50" pos:column="23">base_nodes<pos:position pos:line="50" pos:column="33"/></name><operator pos:line="50" pos:column="33">-&gt;<pos:position pos:line="50" pos:column="38"/></operator><name pos:line="50" pos:column="35">nodeTab<pos:position pos:line="50" pos:column="42"/></name><index pos:line="50" pos:column="42">[<expr><name pos:line="50" pos:column="43">i<pos:position pos:line="50" pos:column="44"/></name></expr>]<pos:position pos:line="50" pos:column="45"/></index></name></expr>;<pos:position pos:line="50" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><name pos:line="52" pos:column="5">status<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name pos:line="52" pos:column="14">cx_handle_instance_xpath<pos:position pos:line="52" pos:column="38"/></name><argument_list pos:line="52" pos:column="38">(<argument><expr><name pos:line="52" pos:column="39">xpath_ctx<pos:position pos:line="52" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="50">xpath<pos:position pos:line="52" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="57">&amp;<pos:position pos:line="52" pos:column="62"/></operator><name pos:line="52" pos:column="58">vl<pos:position pos:line="52" pos:column="60"/></name></expr></argument>,
                                      <comment type="block" pos:line="53" pos:column="39">/* is_table = */</comment> <argument><expr><operator pos:line="53" pos:column="56">(<pos:position pos:line="53" pos:column="57"/></operator><name pos:line="53" pos:column="57">total_nodes<pos:position pos:line="53" pos:column="68"/></name> <operator pos:line="53" pos:column="69">&gt;<pos:position pos:line="53" pos:column="73"/></operator> <literal type="number" pos:line="53" pos:column="71">1<pos:position pos:line="53" pos:column="72"/></literal><operator pos:line="53" pos:column="72">)<pos:position pos:line="53" pos:column="73"/></operator></expr></argument>)<pos:position pos:line="53" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="75"/></expr_stmt>
    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">status<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">!=<pos:position pos:line="54" pos:column="18"/></operator> <literal type="number" pos:line="54" pos:column="19">0<pos:position pos:line="54" pos:column="20"/></literal></expr>)<pos:position pos:line="54" pos:column="21"/></condition><then pos:line="54" pos:column="21">
      <block type="pseudo"><continue pos:line="55" pos:column="7">continue;<pos:position pos:line="55" pos:column="16"/></continue></block></then></if> <comment type="block" pos:line="55" pos:column="17">/* An error has already been reported. */</comment>

    <expr_stmt><expr><name pos:line="57" pos:column="5">status<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">cx_handle_all_value_xpaths<pos:position pos:line="57" pos:column="40"/></name><argument_list pos:line="57" pos:column="40">(<argument><expr><name pos:line="57" pos:column="41">xpath_ctx<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="52">xpath<pos:position pos:line="57" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="59">ds<pos:position pos:line="57" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="57" pos:column="63">&amp;<pos:position pos:line="57" pos:column="68"/></operator><name pos:line="57" pos:column="64">vl<pos:position pos:line="57" pos:column="66"/></name></expr></argument>)<pos:position pos:line="57" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="68"/></expr_stmt>
    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">status<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">!=<pos:position pos:line="58" pos:column="18"/></operator> <literal type="number" pos:line="58" pos:column="19">0<pos:position pos:line="58" pos:column="20"/></literal></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21">
      <block type="pseudo"><continue pos:line="59" pos:column="7">continue;<pos:position pos:line="59" pos:column="16"/></continue></block></then></if> <comment type="block" pos:line="59" pos:column="17">/* An error has been logged. */</comment>
  }<pos:position pos:line="60" pos:column="4"/></block></for>             <comment type="block" pos:line="60" pos:column="17">/* for (i = 0; i &lt; total_nodes; i++) */</comment>

  <comment type="block" pos:line="62" pos:column="3">/* free up the allocated memory */</comment>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">xmlXPathFreeObject<pos:position pos:line="63" pos:column="21"/></name><argument_list pos:line="63" pos:column="21">(<argument><expr><name pos:line="63" pos:column="22">base_node_obj<pos:position pos:line="63" pos:column="35"/></name></expr></argument>)<pos:position pos:line="63" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="37"/></expr_stmt>

  <return pos:line="65" pos:column="3">return <expr><operator pos:line="65" pos:column="10">(<pos:position pos:line="65" pos:column="11"/></operator><literal type="number" pos:line="65" pos:column="11">0<pos:position pos:line="65" pos:column="12"/></literal><operator pos:line="65" pos:column="12">)<pos:position pos:line="65" pos:column="13"/></operator></expr>;<pos:position pos:line="65" pos:column="14"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

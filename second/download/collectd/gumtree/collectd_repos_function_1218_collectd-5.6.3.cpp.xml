<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1218_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wm_write<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><specifier pos:line="1" pos:column="21">const<pos:position pos:line="1" pos:column="26"/></specifier> <name pos:line="1" pos:column="27">data_set_t<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ds<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="43">/* {{{ */</comment>
                    <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">value_list_t<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">vl<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">user_data_t<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">ud<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list> <block pos:line="2" pos:column="62">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">wm_node_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">node<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name><name pos:line="3" pos:column="21">ud<pos:position pos:line="3" pos:column="23"/></name><operator pos:line="3" pos:column="23">-&gt;<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="25">data<pos:position pos:line="3" pos:column="29"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">char<pos:position pos:line="4" pos:column="7"/></name></type> <name><name pos:line="4" pos:column="8">collection_name<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">512<pos:position pos:line="4" pos:column="27"/></literal></expr>]<pos:position pos:line="4" pos:column="28"/></index></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">bson<pos:position pos:line="5" pos:column="7"/></name> <modifier pos:line="5" pos:column="8">*<pos:position pos:line="5" pos:column="9"/></modifier></type><name pos:line="5" pos:column="9">bson_record<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">status<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">ssnprintf<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">collection_name<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="30">sizeof<argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">collection_name<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="55">"collectd.%s"<pos:position pos:line="8" pos:column="68"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="9" pos:column="13">vl<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">-&gt;<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="17">plugin<pos:position pos:line="9" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>

  <expr_stmt><expr><name pos:line="11" pos:column="3">bson_record<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">wm_create_bson<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">ds<pos:position pos:line="11" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="36">vl<pos:position pos:line="11" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="40">node<pos:position pos:line="11" pos:column="44"/></name><operator pos:line="11" pos:column="44">-&gt;<pos:position pos:line="11" pos:column="49"/></operator><name pos:line="11" pos:column="46">store_rates<pos:position pos:line="11" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">bson_record<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">==<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">NULL<pos:position pos:line="12" pos:column="26"/></name></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
    <block type="pseudo"><return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">ENOMEM<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">)<pos:position pos:line="13" pos:column="20"/></operator></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="15" pos:column="3">pthread_mutex_lock<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><operator pos:line="15" pos:column="22">&amp;<pos:position pos:line="15" pos:column="27"/></operator><name><name pos:line="15" pos:column="23">node<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">lock<pos:position pos:line="15" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><operator pos:line="17" pos:column="7">!<pos:position pos:line="17" pos:column="8"/></operator><call><name pos:line="17" pos:column="8">mongo_is_connected<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">node<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">conn<pos:position pos:line="17" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="39"/></condition><then pos:line="17" pos:column="39"> <block pos:line="17" pos:column="40">{
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">INFO<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><literal type="string" pos:line="18" pos:column="10">"write_mongodb plugin: Connecting to [%s]:%i"<pos:position pos:line="18" pos:column="55"/></literal></expr></argument>,
         <argument><expr><ternary><condition><expr><operator pos:line="19" pos:column="10">(<pos:position pos:line="19" pos:column="11"/></operator><name><name pos:line="19" pos:column="11">node<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">host<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">!=<pos:position pos:line="19" pos:column="24"/></operator> <name pos:line="19" pos:column="25">NULL<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">)<pos:position pos:line="19" pos:column="30"/></operator></expr> ?<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <expr><name><name pos:line="19" pos:column="33">node<pos:position pos:line="19" pos:column="37"/></name><operator pos:line="19" pos:column="37">-&gt;<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="39">host<pos:position pos:line="19" pos:column="43"/></name></name></expr> <pos:position pos:line="19" pos:column="44"/></then><else pos:line="19" pos:column="44">: <expr><literal type="string" pos:line="19" pos:column="46">"localhost"<pos:position pos:line="19" pos:column="57"/></literal></expr></else></ternary></expr></argument>,
         <argument><expr><ternary><condition><expr><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name><name pos:line="20" pos:column="11">node<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">-&gt;<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="17">port<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">!=<pos:position pos:line="20" pos:column="24"/></operator> <literal type="number" pos:line="20" pos:column="25">0<pos:position pos:line="20" pos:column="26"/></literal><operator pos:line="20" pos:column="26">)<pos:position pos:line="20" pos:column="27"/></operator></expr> ?<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <expr><name><name pos:line="20" pos:column="30">node<pos:position pos:line="20" pos:column="34"/></name><operator pos:line="20" pos:column="34">-&gt;<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="36">port<pos:position pos:line="20" pos:column="40"/></name></name></expr> <pos:position pos:line="20" pos:column="41"/></then><else pos:line="20" pos:column="41">: <expr><name pos:line="20" pos:column="43">MONGO_DEFAULT_PORT<pos:position pos:line="20" pos:column="61"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="20" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">status<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <call><name pos:line="21" pos:column="14">mongo_connect<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">node<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">conn<pos:position pos:line="21" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="40">node<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">-&gt;<pos:position pos:line="21" pos:column="49"/></operator><name pos:line="21" pos:column="46">host<pos:position pos:line="21" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="52">node<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">-&gt;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="58">port<pos:position pos:line="21" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">status<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">!=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">MONGO_OK<pos:position pos:line="22" pos:column="27"/></name></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">ERROR<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><literal type="string" pos:line="23" pos:column="13">"write_mongodb plugin: Connecting to [%s]:%i failed."<pos:position pos:line="23" pos:column="66"/></literal></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name><name pos:line="24" pos:column="14">node<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">host<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">!=<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="28">NULL<pos:position pos:line="24" pos:column="32"/></name><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator></expr> ?<pos:position pos:line="24" pos:column="35"/></condition><then pos:line="24" pos:column="35"> <expr><name><name pos:line="24" pos:column="36">node<pos:position pos:line="24" pos:column="40"/></name><operator pos:line="24" pos:column="40">-&gt;<pos:position pos:line="24" pos:column="45"/></operator><name pos:line="24" pos:column="42">host<pos:position pos:line="24" pos:column="46"/></name></name></expr> <pos:position pos:line="24" pos:column="47"/></then><else pos:line="24" pos:column="47">: <expr><literal type="string" pos:line="24" pos:column="49">"localhost"<pos:position pos:line="24" pos:column="60"/></literal></expr></else></ternary></expr></argument>,
            <argument><expr><ternary><condition><expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><name><name pos:line="25" pos:column="14">node<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">port<pos:position pos:line="25" pos:column="24"/></name></name> <operator pos:line="25" pos:column="25">!=<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="28">0<pos:position pos:line="25" pos:column="29"/></literal><operator pos:line="25" pos:column="29">)<pos:position pos:line="25" pos:column="30"/></operator></expr> ?<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32"> <expr><name><name pos:line="25" pos:column="33">node<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">-&gt;<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="39">port<pos:position pos:line="25" pos:column="43"/></name></name></expr> <pos:position pos:line="25" pos:column="44"/></then><else pos:line="25" pos:column="44">: <expr><name pos:line="25" pos:column="46">MONGO_DEFAULT_PORT<pos:position pos:line="25" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">mongo_destroy<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name><name pos:line="26" pos:column="21">node<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">conn<pos:position pos:line="26" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">pthread_mutex_unlock<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><operator pos:line="27" pos:column="28">&amp;<pos:position pos:line="27" pos:column="33"/></operator><name><name pos:line="27" pos:column="29">node<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">lock<pos:position pos:line="27" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
      <return pos:line="28" pos:column="7">return <expr><operator pos:line="28" pos:column="14">(<pos:position pos:line="28" pos:column="15"/></operator><operator pos:line="28" pos:column="15">-<pos:position pos:line="28" pos:column="16"/></operator><literal type="number" pos:line="28" pos:column="16">1<pos:position pos:line="28" pos:column="17"/></literal><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr>;<pos:position pos:line="28" pos:column="19"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><name><name pos:line="31" pos:column="10">node<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">-&gt;<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="16">db<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">!=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">NULL<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">)<pos:position pos:line="31" pos:column="27"/></operator> <operator pos:line="31" pos:column="28">&amp;&amp;<pos:position pos:line="31" pos:column="38"/></operator> <operator pos:line="31" pos:column="31">(<pos:position pos:line="31" pos:column="32"/></operator><name><name pos:line="31" pos:column="32">node<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">-&gt;<pos:position pos:line="31" pos:column="41"/></operator><name pos:line="31" pos:column="38">user<pos:position pos:line="31" pos:column="42"/></name></name> <operator pos:line="31" pos:column="43">!=<pos:position pos:line="31" pos:column="45"/></operator> <name pos:line="31" pos:column="46">NULL<pos:position pos:line="31" pos:column="50"/></name><operator pos:line="31" pos:column="50">)<pos:position pos:line="31" pos:column="51"/></operator> <operator pos:line="31" pos:column="52">&amp;&amp;<pos:position pos:line="31" pos:column="62"/></operator> <operator pos:line="31" pos:column="55">(<pos:position pos:line="31" pos:column="56"/></operator><name><name pos:line="31" pos:column="56">node<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">passwd<pos:position pos:line="31" pos:column="68"/></name></name> <operator pos:line="31" pos:column="69">!=<pos:position pos:line="31" pos:column="71"/></operator> <name pos:line="31" pos:column="72">NULL<pos:position pos:line="31" pos:column="76"/></name><operator pos:line="31" pos:column="76">)<pos:position pos:line="31" pos:column="77"/></operator></expr>)<pos:position pos:line="31" pos:column="78"/></condition><then pos:line="31" pos:column="78"> <block pos:line="31" pos:column="79">{
      <expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">mongo_cmd_authenticate<pos:position pos:line="32" pos:column="38"/></name><argument_list pos:line="32" pos:column="38">(<argument><expr><name><name pos:line="32" pos:column="39">node<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">-&gt;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="45">conn<pos:position pos:line="32" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="51">node<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">-&gt;<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="57">db<pos:position pos:line="32" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="61">node<pos:position pos:line="32" pos:column="65"/></name><operator pos:line="32" pos:column="65">-&gt;<pos:position pos:line="32" pos:column="70"/></operator><name pos:line="32" pos:column="67">user<pos:position pos:line="32" pos:column="71"/></name></name></expr></argument>,
                                      <argument><expr><name><name pos:line="33" pos:column="39">node<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">-&gt;<pos:position pos:line="33" pos:column="48"/></operator><name pos:line="33" pos:column="45">passwd<pos:position pos:line="33" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="53"/></expr_stmt>
      <if pos:line="34" pos:column="7">if <condition pos:line="34" pos:column="10">(<expr><name pos:line="34" pos:column="11">status<pos:position pos:line="34" pos:column="17"/></name> <operator pos:line="34" pos:column="18">!=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">MONGO_OK<pos:position pos:line="34" pos:column="29"/></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30"> <block pos:line="34" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ERROR<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><literal type="string" pos:line="35" pos:column="15">"write_mongodb plugin: Authenticating to [%s]%i for database "<pos:position pos:line="35" pos:column="77"/></literal>
              <literal type="string" pos:line="36" pos:column="15">"\"%s\" as user \"%s\" failed."<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="37" pos:column="15">(<pos:position pos:line="37" pos:column="16"/></operator><name><name pos:line="37" pos:column="16">node<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">-&gt;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="22">host<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">!=<pos:position pos:line="37" pos:column="29"/></operator> <name pos:line="37" pos:column="30">NULL<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">)<pos:position pos:line="37" pos:column="35"/></operator></expr> ?<pos:position pos:line="37" pos:column="37"/></condition><then pos:line="37" pos:column="37"> <expr><name><name pos:line="37" pos:column="38">node<pos:position pos:line="37" pos:column="42"/></name><operator pos:line="37" pos:column="42">-&gt;<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="44">host<pos:position pos:line="37" pos:column="48"/></name></name></expr> <pos:position pos:line="37" pos:column="49"/></then><else pos:line="37" pos:column="49">: <expr><literal type="string" pos:line="37" pos:column="51">"localhost"<pos:position pos:line="37" pos:column="62"/></literal></expr></else></ternary></expr></argument>,
              <argument><expr><ternary><condition><expr><operator pos:line="38" pos:column="15">(<pos:position pos:line="38" pos:column="16"/></operator><name><name pos:line="38" pos:column="16">node<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">port<pos:position pos:line="38" pos:column="26"/></name></name> <operator pos:line="38" pos:column="27">!=<pos:position pos:line="38" pos:column="29"/></operator> <literal type="number" pos:line="38" pos:column="30">0<pos:position pos:line="38" pos:column="31"/></literal><operator pos:line="38" pos:column="31">)<pos:position pos:line="38" pos:column="32"/></operator></expr> ?<pos:position pos:line="38" pos:column="34"/></condition><then pos:line="38" pos:column="34"> <expr><name><name pos:line="38" pos:column="35">node<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">port<pos:position pos:line="38" pos:column="45"/></name></name></expr> <pos:position pos:line="38" pos:column="46"/></then><else pos:line="38" pos:column="46">: <expr><name pos:line="38" pos:column="48">MONGO_DEFAULT_PORT<pos:position pos:line="38" pos:column="66"/></name></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="68">node<pos:position pos:line="38" pos:column="72"/></name><operator pos:line="38" pos:column="72">-&gt;<pos:position pos:line="38" pos:column="77"/></operator><name pos:line="38" pos:column="74">db<pos:position pos:line="38" pos:column="76"/></name></name></expr></argument>,
              <argument><expr><name><name pos:line="39" pos:column="15">node<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">user<pos:position pos:line="39" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">mongo_destroy<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name><name pos:line="40" pos:column="23">node<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">conn<pos:position pos:line="40" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">pthread_mutex_unlock<pos:position pos:line="41" pos:column="29"/></name><argument_list pos:line="41" pos:column="29">(<argument><expr><operator pos:line="41" pos:column="30">&amp;<pos:position pos:line="41" pos:column="35"/></operator><name><name pos:line="41" pos:column="31">node<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">lock<pos:position pos:line="41" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="43"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><operator pos:line="42" pos:column="17">-<pos:position pos:line="42" pos:column="18"/></operator><literal type="number" pos:line="42" pos:column="18">1<pos:position pos:line="42" pos:column="19"/></literal><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></return>
      }<pos:position pos:line="43" pos:column="8"/></block></then></if>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name><name pos:line="46" pos:column="9">node<pos:position pos:line="46" pos:column="13"/></name><operator pos:line="46" pos:column="13">-&gt;<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="15">timeout<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">&gt;<pos:position pos:line="46" pos:column="27"/></operator> <literal type="number" pos:line="46" pos:column="25">0<pos:position pos:line="46" pos:column="26"/></literal></expr>)<pos:position pos:line="46" pos:column="27"/></condition><then pos:line="46" pos:column="27"> <block pos:line="46" pos:column="28">{
      <expr_stmt><expr><name pos:line="47" pos:column="7">status<pos:position pos:line="47" pos:column="13"/></name> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <call><name pos:line="47" pos:column="16">mongo_set_op_timeout<pos:position pos:line="47" pos:column="36"/></name><argument_list pos:line="47" pos:column="36">(<argument><expr><name><name pos:line="47" pos:column="37">node<pos:position pos:line="47" pos:column="41"/></name><operator pos:line="47" pos:column="41">-&gt;<pos:position pos:line="47" pos:column="46"/></operator><name pos:line="47" pos:column="43">conn<pos:position pos:line="47" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="49">node<pos:position pos:line="47" pos:column="53"/></name><operator pos:line="47" pos:column="53">-&gt;<pos:position pos:line="47" pos:column="58"/></operator><name pos:line="47" pos:column="55">timeout<pos:position pos:line="47" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="64"/></expr_stmt>
      <if pos:line="48" pos:column="7">if <condition pos:line="48" pos:column="10">(<expr><name pos:line="48" pos:column="11">status<pos:position pos:line="48" pos:column="17"/></name> <operator pos:line="48" pos:column="18">!=<pos:position pos:line="48" pos:column="20"/></operator> <name pos:line="48" pos:column="21">MONGO_OK<pos:position pos:line="48" pos:column="29"/></name></expr>)<pos:position pos:line="48" pos:column="30"/></condition><then pos:line="48" pos:column="30"> <block pos:line="48" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">WARNING<pos:position pos:line="49" pos:column="16"/></name><argument_list pos:line="49" pos:column="16">(<argument><expr><literal type="string" pos:line="49" pos:column="17">"write_mongodb plugin: mongo_set_op_timeout(%i) failed: %s"<pos:position pos:line="49" pos:column="76"/></literal></expr></argument>,
                <argument><expr><name><name pos:line="50" pos:column="17">node<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">timeout<pos:position pos:line="50" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="32">node<pos:position pos:line="50" pos:column="36"/></name><operator pos:line="50" pos:column="36">-&gt;<pos:position pos:line="50" pos:column="41"/></operator><name pos:line="50" pos:column="38">conn<pos:position pos:line="50" pos:column="42"/></name><operator pos:line="50" pos:column="42">-&gt;<pos:position pos:line="50" pos:column="47"/></operator><name pos:line="50" pos:column="44">errstr<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt>
      }<pos:position pos:line="51" pos:column="8"/></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="55" pos:column="3">/* Assert if the connection has been established */</comment>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">assert<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><call><name pos:line="56" pos:column="10">mongo_is_connected<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name><name pos:line="56" pos:column="29">node<pos:position pos:line="56" pos:column="33"/></name><operator pos:line="56" pos:column="33">-&gt;<pos:position pos:line="56" pos:column="38"/></operator><name pos:line="56" pos:column="35">conn<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="42"/></expr_stmt>

<cpp:if pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">if<pos:position pos:line="58" pos:column="4"/></cpp:directive> <expr><name pos:line="58" pos:column="5">MONGO_MINOR<pos:position pos:line="58" pos:column="16"/></name> <operator pos:line="58" pos:column="17">&gt;=<pos:position pos:line="58" pos:column="22"/></operator> <literal type="number" pos:line="58" pos:column="20">6<pos:position pos:line="58" pos:column="21"/></literal></expr></cpp:if>
  <comment type="block" pos:line="59" pos:column="3">/* There was an API change in 0.6.0 as linked below */</comment>
  <comment type="block" pos:line="60" pos:column="3">/* https://github.com/mongodb/mongo-c-driver/blob/master/HISTORY.md */</comment>
  <expr_stmt><expr><name pos:line="61" pos:column="3">status<pos:position pos:line="61" pos:column="9"/></name> <operator pos:line="61" pos:column="10">=<pos:position pos:line="61" pos:column="11"/></operator> <call><name pos:line="61" pos:column="12">mongo_insert<pos:position pos:line="61" pos:column="24"/></name><argument_list pos:line="61" pos:column="24">(<argument><expr><name><name pos:line="61" pos:column="25">node<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">conn<pos:position pos:line="61" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="37">collection_name<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">bson_record<pos:position pos:line="61" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="67">NULL<pos:position pos:line="61" pos:column="71"/></name></expr></argument>)<pos:position pos:line="61" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="73"/></expr_stmt>
<cpp:else pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">else<pos:position pos:line="62" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="63" pos:column="3">status<pos:position pos:line="63" pos:column="9"/></name> <operator pos:line="63" pos:column="10">=<pos:position pos:line="63" pos:column="11"/></operator> <call><name pos:line="63" pos:column="12">mongo_insert<pos:position pos:line="63" pos:column="24"/></name><argument_list pos:line="63" pos:column="24">(<argument><expr><name><name pos:line="63" pos:column="25">node<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">conn<pos:position pos:line="63" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="37">collection_name<pos:position pos:line="63" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="54">bson_record<pos:position pos:line="63" pos:column="65"/></name></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="67"/></expr_stmt>
<cpp:endif pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">endif<pos:position pos:line="64" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="66" pos:column="3">if <condition pos:line="66" pos:column="6">(<expr><name pos:line="66" pos:column="7">status<pos:position pos:line="66" pos:column="13"/></name> <operator pos:line="66" pos:column="14">!=<pos:position pos:line="66" pos:column="16"/></operator> <name pos:line="66" pos:column="17">MONGO_OK<pos:position pos:line="66" pos:column="25"/></name></expr>)<pos:position pos:line="66" pos:column="26"/></condition><then pos:line="66" pos:column="26"> <block pos:line="66" pos:column="27">{
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">ERROR<pos:position pos:line="67" pos:column="10"/></name><argument_list pos:line="67" pos:column="10">(<argument><expr><literal type="string" pos:line="67" pos:column="11">"write_mongodb plugin: error inserting record: %d"<pos:position pos:line="67" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="67" pos:column="63">node<pos:position pos:line="67" pos:column="67"/></name><operator pos:line="67" pos:column="67">-&gt;<pos:position pos:line="67" pos:column="72"/></operator><name pos:line="67" pos:column="69">conn<pos:position pos:line="67" pos:column="73"/></name><operator pos:line="67" pos:column="73">-&gt;<pos:position pos:line="67" pos:column="78"/></operator><name pos:line="67" pos:column="75">err<pos:position pos:line="67" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="80"/></expr_stmt>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><name><name pos:line="68" pos:column="9">node<pos:position pos:line="68" pos:column="13"/></name><operator pos:line="68" pos:column="13">-&gt;<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="15">conn<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">-&gt;<pos:position pos:line="68" pos:column="24"/></operator><name pos:line="68" pos:column="21">err<pos:position pos:line="68" pos:column="24"/></name></name> <operator pos:line="68" pos:column="25">!=<pos:position pos:line="68" pos:column="27"/></operator> <name pos:line="68" pos:column="28">MONGO_BSON_INVALID<pos:position pos:line="68" pos:column="46"/></name></expr>)<pos:position pos:line="68" pos:column="47"/></condition><then pos:line="68" pos:column="47">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="69" pos:column="7">ERROR<pos:position pos:line="69" pos:column="12"/></name><argument_list pos:line="69" pos:column="12">(<argument><expr><literal type="string" pos:line="69" pos:column="13">"write_mongodb plugin: %s"<pos:position pos:line="69" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="69" pos:column="41">node<pos:position pos:line="69" pos:column="45"/></name><operator pos:line="69" pos:column="45">-&gt;<pos:position pos:line="69" pos:column="50"/></operator><name pos:line="69" pos:column="47">conn<pos:position pos:line="69" pos:column="51"/></name><operator pos:line="69" pos:column="51">-&gt;<pos:position pos:line="69" pos:column="56"/></operator><name pos:line="69" pos:column="53">errstr<pos:position pos:line="69" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="69" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="61"/></expr_stmt></block></then>
    <else pos:line="70" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="7">ERROR<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><literal type="string" pos:line="71" pos:column="13">"write_mongodb plugin: Invalid BSON structure, error = %#x"<pos:position pos:line="71" pos:column="72"/></literal></expr></argument>,
            <argument><expr><operator pos:line="72" pos:column="13">(<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">unsigned<pos:position pos:line="72" pos:column="22"/></name> <name pos:line="72" pos:column="23">int<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">)<pos:position pos:line="72" pos:column="27"/></operator><name><name pos:line="72" pos:column="27">bson_record<pos:position pos:line="72" pos:column="38"/></name><operator pos:line="72" pos:column="38">-&gt;<pos:position pos:line="72" pos:column="43"/></operator><name pos:line="72" pos:column="40">err<pos:position pos:line="72" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="45"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="74" pos:column="5">/* Disconnect except on data errors. */</comment>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">(<pos:position pos:line="75" pos:column="10"/></operator><name><name pos:line="75" pos:column="10">node<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">-&gt;<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="16">conn<pos:position pos:line="75" pos:column="20"/></name><operator pos:line="75" pos:column="20">-&gt;<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="22">err<pos:position pos:line="75" pos:column="25"/></name></name> <operator pos:line="75" pos:column="26">!=<pos:position pos:line="75" pos:column="28"/></operator> <name pos:line="75" pos:column="29">MONGO_BSON_INVALID<pos:position pos:line="75" pos:column="47"/></name><operator pos:line="75" pos:column="47">)<pos:position pos:line="75" pos:column="48"/></operator> <operator pos:line="75" pos:column="49">&amp;&amp;<pos:position pos:line="75" pos:column="59"/></operator>
        <operator pos:line="76" pos:column="9">(<pos:position pos:line="76" pos:column="10"/></operator><name><name pos:line="76" pos:column="10">node<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">-&gt;<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="16">conn<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">-&gt;<pos:position pos:line="76" pos:column="25"/></operator><name pos:line="76" pos:column="22">err<pos:position pos:line="76" pos:column="25"/></name></name> <operator pos:line="76" pos:column="26">!=<pos:position pos:line="76" pos:column="28"/></operator> <name pos:line="76" pos:column="29">MONGO_BSON_NOT_FINISHED<pos:position pos:line="76" pos:column="52"/></name><operator pos:line="76" pos:column="52">)<pos:position pos:line="76" pos:column="53"/></operator></expr>)<pos:position pos:line="76" pos:column="54"/></condition><then pos:line="76" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="7">mongo_destroy<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name><name pos:line="77" pos:column="21">node<pos:position pos:line="77" pos:column="25"/></name><operator pos:line="77" pos:column="25">-&gt;<pos:position pos:line="77" pos:column="30"/></operator><name pos:line="77" pos:column="27">conn<pos:position pos:line="77" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="77" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="33"/></expr_stmt></block></then></if>
  }<pos:position pos:line="78" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="80" pos:column="3">pthread_mutex_unlock<pos:position pos:line="80" pos:column="23"/></name><argument_list pos:line="80" pos:column="23">(<argument><expr><operator pos:line="80" pos:column="24">&amp;<pos:position pos:line="80" pos:column="29"/></operator><name><name pos:line="80" pos:column="25">node<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">-&gt;<pos:position pos:line="80" pos:column="34"/></operator><name pos:line="80" pos:column="31">lock<pos:position pos:line="80" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt>

  <comment type="block" pos:line="82" pos:column="3">/* free our resource as not to leak memory */</comment>
  <expr_stmt><expr><call><name pos:line="83" pos:column="3">bson_destroy<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name pos:line="83" pos:column="16">bson_record<pos:position pos:line="83" pos:column="27"/></name></expr></argument>)<pos:position pos:line="83" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="29"/></expr_stmt> <comment type="block" pos:line="83" pos:column="30">/* matches bson_init() */</comment>
  <expr_stmt><expr><call><name pos:line="84" pos:column="3">bson_dealloc<pos:position pos:line="84" pos:column="15"/></name><argument_list pos:line="84" pos:column="15">(<argument><expr><name pos:line="84" pos:column="16">bson_record<pos:position pos:line="84" pos:column="27"/></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt> <comment type="block" pos:line="84" pos:column="30">/* matches bson_alloc() */</comment>

  <return pos:line="86" pos:column="3">return <expr><operator pos:line="86" pos:column="10">(<pos:position pos:line="86" pos:column="11"/></operator><literal type="number" pos:line="86" pos:column="11">0<pos:position pos:line="86" pos:column="12"/></literal><operator pos:line="86" pos:column="12">)<pos:position pos:line="86" pos:column="13"/></operator></expr>;<pos:position pos:line="86" pos:column="14"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_820_collectd-4.4.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">plugin_register_log<pos:position pos:line="1" pos:column="24"/></name> <parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">char<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">name<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>,
		<parameter><function_decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name></type> (<modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier><name pos:line="2" pos:column="24">callback<pos:position pos:line="2" pos:column="32"/></name>) <parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">priority<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <name pos:line="2" pos:column="55">char<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">msg<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list></function_decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<return pos:line="4" pos:column="9">return <expr><operator pos:line="4" pos:column="16">(<pos:position pos:line="4" pos:column="17"/></operator><call><name pos:line="4" pos:column="17">register_callback<pos:position pos:line="4" pos:column="34"/></name> <argument_list pos:line="4" pos:column="35">(<argument><expr><operator pos:line="4" pos:column="36">&amp;<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="37">list_log<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="47">name<pos:position pos:line="4" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="53">(<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">void<pos:position pos:line="4" pos:column="58"/></name> <operator pos:line="4" pos:column="59">*<pos:position pos:line="4" pos:column="60"/></operator><operator pos:line="4" pos:column="60">)<pos:position pos:line="4" pos:column="61"/></operator> <name pos:line="4" pos:column="62">callback<pos:position pos:line="4" pos:column="70"/></name></expr></argument>)<pos:position pos:line="4" pos:column="71"/></argument_list></call><operator pos:line="4" pos:column="71">)<pos:position pos:line="4" pos:column="72"/></operator></expr>;<pos:position pos:line="4" pos:column="73"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

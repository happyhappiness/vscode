<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_368_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">df_config<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name pos:line="1" pos:column="28">char<pos:position pos:line="1" pos:column="32"/></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type><name pos:line="1" pos:column="34">key<pos:position pos:line="1" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="39">const<pos:position pos:line="1" pos:column="44"/></specifier> <name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier></type><name pos:line="1" pos:column="51">value<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list> <block pos:line="1" pos:column="58">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">df_init<pos:position pos:line="2" pos:column="10"/></name><argument_list pos:line="2" pos:column="10">()<pos:position pos:line="2" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="13"/></expr_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><call><name pos:line="4" pos:column="7">strcasecmp<pos:position pos:line="4" pos:column="17"/></name><argument_list pos:line="4" pos:column="17">(<argument><expr><name pos:line="4" pos:column="18">key<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="23">"Device"<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call> <operator pos:line="4" pos:column="33">==<pos:position pos:line="4" pos:column="35"/></operator> <literal type="number" pos:line="4" pos:column="36">0<pos:position pos:line="4" pos:column="37"/></literal></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38"> <block pos:line="4" pos:column="39">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">ignorelist_add<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">il_device<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="35">value<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="42"/></condition><then pos:line="5" pos:column="42">
      <block type="pseudo"><return pos:line="6" pos:column="7">return <expr><operator pos:line="6" pos:column="14">(<pos:position pos:line="6" pos:column="15"/></operator><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal><operator pos:line="6" pos:column="16">)<pos:position pos:line="6" pos:column="17"/></operator></expr>;<pos:position pos:line="6" pos:column="18"/></return></block></then></if>
    <return pos:line="7" pos:column="5">return <expr><operator pos:line="7" pos:column="12">(<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal><operator pos:line="7" pos:column="14">)<pos:position pos:line="7" pos:column="15"/></operator></expr>;<pos:position pos:line="7" pos:column="16"/></return>
  }<pos:position pos:line="8" pos:column="4"/></block></then> <elseif pos:line="8" pos:column="5">else <if pos:line="8" pos:column="10">if <condition pos:line="8" pos:column="13">(<expr><call><name pos:line="8" pos:column="14">strcasecmp<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">key<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"MountPoint"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></call> <operator pos:line="8" pos:column="44">==<pos:position pos:line="8" pos:column="46"/></operator> <literal type="number" pos:line="8" pos:column="47">0<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">ignorelist_add<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">il_mountpoint<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="39">value<pos:position pos:line="9" pos:column="44"/></name></expr></argument>)<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
      <block type="pseudo"><return pos:line="10" pos:column="7">return <expr><operator pos:line="10" pos:column="14">(<pos:position pos:line="10" pos:column="15"/></operator><literal type="number" pos:line="10" pos:column="15">1<pos:position pos:line="10" pos:column="16"/></literal><operator pos:line="10" pos:column="16">)<pos:position pos:line="10" pos:column="17"/></operator></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><literal type="number" pos:line="11" pos:column="13">0<pos:position pos:line="11" pos:column="14"/></literal><operator pos:line="11" pos:column="14">)<pos:position pos:line="11" pos:column="15"/></operator></expr>;<pos:position pos:line="11" pos:column="16"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if></elseif> <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><call><name pos:line="12" pos:column="14">strcasecmp<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">key<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"FSType"<pos:position pos:line="12" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call> <operator pos:line="12" pos:column="40">==<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="43">0<pos:position pos:line="12" pos:column="44"/></literal></expr>)<pos:position pos:line="12" pos:column="45"/></condition><then pos:line="12" pos:column="45"> <block pos:line="12" pos:column="46">{
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">ignorelist_add<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">il_fstype<pos:position pos:line="13" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="35">value<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42">
      <block type="pseudo"><return pos:line="14" pos:column="7">return <expr><operator pos:line="14" pos:column="14">(<pos:position pos:line="14" pos:column="15"/></operator><literal type="number" pos:line="14" pos:column="15">1<pos:position pos:line="14" pos:column="16"/></literal><operator pos:line="14" pos:column="16">)<pos:position pos:line="14" pos:column="17"/></operator></expr>;<pos:position pos:line="14" pos:column="18"/></return></block></then></if>
    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if></elseif> <elseif pos:line="16" pos:column="5">else <if pos:line="16" pos:column="10">if <condition pos:line="16" pos:column="13">(<expr><call><name pos:line="16" pos:column="14">strcasecmp<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">key<pos:position pos:line="16" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="30">"IgnoreSelected"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call> <operator pos:line="16" pos:column="48">==<pos:position pos:line="16" pos:column="50"/></operator> <literal type="number" pos:line="16" pos:column="51">0<pos:position pos:line="16" pos:column="52"/></literal></expr>)<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53"> <block pos:line="16" pos:column="54">{
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name pos:line="17" pos:column="9">IS_TRUE<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">value<pos:position pos:line="17" pos:column="22"/></name></expr></argument>)<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">ignorelist_set_invert<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">il_device<pos:position pos:line="18" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="40">0<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="19" pos:column="7">ignorelist_set_invert<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name pos:line="19" pos:column="29">il_mountpoint<pos:position pos:line="19" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="44">0<pos:position pos:line="19" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ignorelist_set_invert<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">il_fstype<pos:position pos:line="20" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="40">0<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">ignorelist_set_invert<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">il_device<pos:position pos:line="22" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="40">1<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">ignorelist_set_invert<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">il_mountpoint<pos:position pos:line="23" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="44">1<pos:position pos:line="23" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="24" pos:column="7">ignorelist_set_invert<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">il_fstype<pos:position pos:line="24" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="40">1<pos:position pos:line="24" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>
    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal><operator pos:line="26" pos:column="14">)<pos:position pos:line="26" pos:column="15"/></operator></expr>;<pos:position pos:line="26" pos:column="16"/></return>
  }<pos:position pos:line="27" pos:column="4"/></block></then></if></elseif> <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><call><name pos:line="27" pos:column="14">strcasecmp<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">key<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="30">"ReportByDevice"<pos:position pos:line="27" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="47"/></argument_list></call> <operator pos:line="27" pos:column="48">==<pos:position pos:line="27" pos:column="50"/></operator> <literal type="number" pos:line="27" pos:column="51">0<pos:position pos:line="27" pos:column="52"/></literal></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53"> <block pos:line="27" pos:column="54">{
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">IS_TRUE<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">value<pos:position pos:line="28" pos:column="22"/></name></expr></argument>)<pos:position pos:line="28" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">by_device<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">1<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt></block></then></if>

    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">0<pos:position pos:line="31" pos:column="14"/></literal><operator pos:line="31" pos:column="14">)<pos:position pos:line="31" pos:column="15"/></operator></expr>;<pos:position pos:line="31" pos:column="16"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if></elseif> <elseif pos:line="32" pos:column="5">else <if pos:line="32" pos:column="10">if <condition pos:line="32" pos:column="13">(<expr><call><name pos:line="32" pos:column="14">strcasecmp<pos:position pos:line="32" pos:column="24"/></name><argument_list pos:line="32" pos:column="24">(<argument><expr><name pos:line="32" pos:column="25">key<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="30">"ReportInodes"<pos:position pos:line="32" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call> <operator pos:line="32" pos:column="46">==<pos:position pos:line="32" pos:column="48"/></operator> <literal type="number" pos:line="32" pos:column="49">0<pos:position pos:line="32" pos:column="50"/></literal></expr>)<pos:position pos:line="32" pos:column="51"/></condition><then pos:line="32" pos:column="51"> <block pos:line="32" pos:column="52">{
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">IS_TRUE<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><name pos:line="33" pos:column="17">value<pos:position pos:line="33" pos:column="22"/></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="24"/></condition><then pos:line="33" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="7">report_inodes<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <literal type="number" pos:line="34" pos:column="23">1<pos:position pos:line="34" pos:column="24"/></literal></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt></block></then>
    <else pos:line="35" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="7">report_inodes<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">=<pos:position pos:line="36" pos:column="22"/></operator> <literal type="number" pos:line="36" pos:column="23">0<pos:position pos:line="36" pos:column="24"/></literal></expr>;<pos:position pos:line="36" pos:column="25"/></expr_stmt></block></else></if>

    <return pos:line="38" pos:column="5">return <expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><literal type="number" pos:line="38" pos:column="13">0<pos:position pos:line="38" pos:column="14"/></literal><operator pos:line="38" pos:column="14">)<pos:position pos:line="38" pos:column="15"/></operator></expr>;<pos:position pos:line="38" pos:column="16"/></return>
  }<pos:position pos:line="39" pos:column="4"/></block></then></if></elseif> <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><name pos:line="39" pos:column="25">key<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="30">"ValuesAbsolute"<pos:position pos:line="39" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call> <operator pos:line="39" pos:column="48">==<pos:position pos:line="39" pos:column="50"/></operator> <literal type="number" pos:line="39" pos:column="51">0<pos:position pos:line="39" pos:column="52"/></literal></expr>)<pos:position pos:line="39" pos:column="53"/></condition><then pos:line="39" pos:column="53"> <block pos:line="39" pos:column="54">{
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">IS_TRUE<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><name pos:line="40" pos:column="17">value<pos:position pos:line="40" pos:column="22"/></name></expr></argument>)<pos:position pos:line="40" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="24"/></condition><then pos:line="40" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="7">values_absolute<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <literal type="number" pos:line="41" pos:column="25">1<pos:position pos:line="41" pos:column="26"/></literal></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="42" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="7">values_absolute<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">=<pos:position pos:line="43" pos:column="24"/></operator> <literal type="number" pos:line="43" pos:column="25">0<pos:position pos:line="43" pos:column="26"/></literal></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt></block></else></if>

    <return pos:line="45" pos:column="5">return <expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><literal type="number" pos:line="45" pos:column="13">0<pos:position pos:line="45" pos:column="14"/></literal><operator pos:line="45" pos:column="14">)<pos:position pos:line="45" pos:column="15"/></operator></expr>;<pos:position pos:line="45" pos:column="16"/></return>
  }<pos:position pos:line="46" pos:column="4"/></block></then></if></elseif> <elseif pos:line="46" pos:column="5">else <if pos:line="46" pos:column="10">if <condition pos:line="46" pos:column="13">(<expr><call><name pos:line="46" pos:column="14">strcasecmp<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">key<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="30">"ValuesPercentage"<pos:position pos:line="46" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="49"/></argument_list></call> <operator pos:line="46" pos:column="50">==<pos:position pos:line="46" pos:column="52"/></operator> <literal type="number" pos:line="46" pos:column="53">0<pos:position pos:line="46" pos:column="54"/></literal></expr>)<pos:position pos:line="46" pos:column="55"/></condition><then pos:line="46" pos:column="55"> <block pos:line="46" pos:column="56">{
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><call><name pos:line="47" pos:column="9">IS_TRUE<pos:position pos:line="47" pos:column="16"/></name><argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">value<pos:position pos:line="47" pos:column="22"/></name></expr></argument>)<pos:position pos:line="47" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="24"/></condition><then pos:line="47" pos:column="24">
      <block type="pseudo"><expr_stmt><expr><name pos:line="48" pos:column="7">values_percentage<pos:position pos:line="48" pos:column="24"/></name> <operator pos:line="48" pos:column="25">=<pos:position pos:line="48" pos:column="26"/></operator> <literal type="number" pos:line="48" pos:column="27">1<pos:position pos:line="48" pos:column="28"/></literal></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="49" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="7">values_percentage<pos:position pos:line="50" pos:column="24"/></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <literal type="number" pos:line="50" pos:column="27">0<pos:position pos:line="50" pos:column="28"/></literal></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt></block></else></if>

    <return pos:line="52" pos:column="5">return <expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal><operator pos:line="52" pos:column="14">)<pos:position pos:line="52" pos:column="15"/></operator></expr>;<pos:position pos:line="52" pos:column="16"/></return>
  }<pos:position pos:line="53" pos:column="4"/></block></then></if></elseif></if>

  <return pos:line="55" pos:column="3">return <expr><operator pos:line="55" pos:column="10">(<pos:position pos:line="55" pos:column="11"/></operator><operator pos:line="55" pos:column="11">-<pos:position pos:line="55" pos:column="12"/></operator><literal type="number" pos:line="55" pos:column="12">1<pos:position pos:line="55" pos:column="13"/></literal><operator pos:line="55" pos:column="13">)<pos:position pos:line="55" pos:column="14"/></operator></expr>;<pos:position pos:line="55" pos:column="15"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_243_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_helper_run<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list> <block pos:line="1" pos:column="34">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">errbuf<pos:position pos:line="2" pos:column="14"/></name><index pos:line="2" pos:column="14">[<expr><name pos:line="2" pos:column="15">ERR_BUF_SIZE<pos:position pos:line="2" pos:column="27"/></name></expr>]<pos:position pos:line="2" pos:column="28"/></index></name></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">pid_t<pos:position pos:line="3" pos:column="8"/></name></type> <name pos:line="3" pos:column="9">ppid<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><call><name pos:line="3" pos:column="16">getppid<pos:position pos:line="3" pos:column="23"/></name><argument_list pos:line="3" pos:column="23">()<pos:position pos:line="3" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
  <expr_stmt><expr><name><name pos:line="4" pos:column="3">g_configuration<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">helper_status<pos:position pos:line="4" pos:column="33"/></name></name> <operator pos:line="4" pos:column="34">=<pos:position pos:line="4" pos:column="35"/></operator> <name pos:line="4" pos:column="36">DPDK_HELPER_WAITING_ON_PRIMARY<pos:position pos:line="4" pos:column="66"/></name></expr>;<pos:position pos:line="4" pos:column="67"/></expr_stmt>

  <while pos:line="6" pos:column="3">while <condition pos:line="6" pos:column="9">(<expr><literal type="number" pos:line="6" pos:column="10">1<pos:position pos:line="6" pos:column="11"/></literal></expr>)<pos:position pos:line="6" pos:column="12"/></condition> <block pos:line="6" pos:column="13">{
    <comment type="block" pos:line="7" pos:column="5">/* sem_timedwait() to avoid blocking forever */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">cdtime_t<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">now<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><call><name pos:line="8" pos:column="20">cdtime<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">()<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">cdtime_t<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">safety_period<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><call><name pos:line="9" pos:column="30">MS_TO_CDTIME_T<pos:position pos:line="9" pos:column="44"/></name><argument_list pos:line="9" pos:column="44">(<argument><expr><literal type="number" pos:line="9" pos:column="45">1500<pos:position pos:line="9" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ret<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">=
        <expr><call><name pos:line="11" pos:column="9">sem_timedwait<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><operator pos:line="11" pos:column="23">&amp;<pos:position pos:line="11" pos:column="28"/></operator><name><name pos:line="11" pos:column="24">g_configuration<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">sema_helper_get_stats<pos:position pos:line="11" pos:column="62"/></name></name></expr></argument>,
                      <argument><expr><operator pos:line="12" pos:column="23">&amp;<pos:position pos:line="12" pos:column="28"/></operator><call><name pos:line="12" pos:column="24">CDTIME_T_TO_TIMESPEC<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><name pos:line="12" pos:column="45">now<pos:position pos:line="12" pos:column="48"/></name> <operator pos:line="12" pos:column="49">+<pos:position pos:line="12" pos:column="50"/></operator> <name pos:line="12" pos:column="51">safety_period<pos:position pos:line="12" pos:column="64"/></name> <operator pos:line="12" pos:column="65">+<pos:position pos:line="12" pos:column="66"/></operator>
                                            <name><name pos:line="13" pos:column="45">g_configuration<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">-&gt;<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="62">interval<pos:position pos:line="13" pos:column="70"/></name></name> <operator pos:line="13" pos:column="71">*<pos:position pos:line="13" pos:column="72"/></operator> <literal type="number" pos:line="13" pos:column="73">2<pos:position pos:line="13" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="77"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">ret<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">==<pos:position pos:line="15" pos:column="15"/></operator> <operator pos:line="15" pos:column="16">-<pos:position pos:line="15" pos:column="17"/></operator><literal type="number" pos:line="15" pos:column="17">1<pos:position pos:line="15" pos:column="18"/></literal> <operator pos:line="15" pos:column="19">&amp;&amp;<pos:position pos:line="15" pos:column="29"/></operator> <name pos:line="15" pos:column="22">errno<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">==<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="31">ETIMEDOUT<pos:position pos:line="15" pos:column="40"/></name></expr>)<pos:position pos:line="15" pos:column="41"/></condition><then pos:line="15" pos:column="41"> <block pos:line="15" pos:column="42">{
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ERROR<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"dpdkstat-helper: sem timedwait()"<pos:position pos:line="16" pos:column="47"/></literal>
            <literal type="string" pos:line="17" pos:column="13">" timeout, did collectd terminate?"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="18" pos:column="7">dpdk_helper_stop<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">RESET<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="20" pos:column="5">/* Parent PID change means collectd died so quit the helper process. */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">ppid<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">!=<pos:position pos:line="21" pos:column="16"/></operator> <call><name pos:line="21" pos:column="17">getppid<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">()<pos:position pos:line="21" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">WARNING<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="string" pos:line="22" pos:column="15">"dpdkstat-helper: parent PID changed, quitting."<pos:position pos:line="22" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="23" pos:column="7">dpdk_helper_stop<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">RESET<pos:position pos:line="23" pos:column="29"/></name></expr></argument>)<pos:position pos:line="23" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* Checking for DPDK primary process. */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><call><name pos:line="27" pos:column="10">rte_eal_primary_proc_alive<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name><name pos:line="27" pos:column="37">g_configuration<pos:position pos:line="27" pos:column="52"/></name><operator pos:line="27" pos:column="52">-&gt;<pos:position pos:line="27" pos:column="57"/></operator><name pos:line="27" pos:column="54">file_prefix<pos:position pos:line="27" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="67"/></condition><then pos:line="27" pos:column="67"> <block pos:line="27" pos:column="68">{
      <if pos:line="28" pos:column="7">if <condition pos:line="28" pos:column="10">(<expr><name><name pos:line="28" pos:column="11">g_configuration<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">eal_initialized<pos:position pos:line="28" pos:column="43"/></name></name></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44"> <block pos:line="28" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">WARNING<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><literal type="string" pos:line="29" pos:column="17">"dpdkstat-helper: no primary alive but EAL initialized:"<pos:position pos:line="29" pos:column="73"/></literal>
                <literal type="string" pos:line="30" pos:column="17">" quitting."<pos:position pos:line="30" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">dpdk_helper_stop<pos:position pos:line="31" pos:column="25"/></name><argument_list pos:line="31" pos:column="25">(<argument><expr><name pos:line="31" pos:column="26">RESET<pos:position pos:line="31" pos:column="31"/></name></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="33" pos:column="7">g_configuration<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">helper_status<pos:position pos:line="33" pos:column="37"/></name></name> <operator pos:line="33" pos:column="38">=<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="40">DPDK_HELPER_WAITING_ON_PRIMARY<pos:position pos:line="33" pos:column="70"/></name></expr>;<pos:position pos:line="33" pos:column="71"/></expr_stmt>
      <comment type="block" pos:line="34" pos:column="7">/* Back to start of while() - waiting for primary process */</comment>
      <continue pos:line="35" pos:column="7">continue;<pos:position pos:line="35" pos:column="16"/></continue>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><name><name pos:line="38" pos:column="10">g_configuration<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">eal_initialized<pos:position pos:line="38" pos:column="42"/></name></name></expr>)<pos:position pos:line="38" pos:column="43"/></condition><then pos:line="38" pos:column="43"> <block pos:line="38" pos:column="44">{
      <comment type="block" pos:line="39" pos:column="7">/* Initialize EAL. */</comment>
      <decl_stmt><decl><type><name pos:line="40" pos:column="7">int<pos:position pos:line="40" pos:column="10"/></name></type> <name pos:line="40" pos:column="11">ret<pos:position pos:line="40" pos:column="14"/></name> <init pos:line="40" pos:column="15">= <expr><call><name pos:line="40" pos:column="17">dpdk_helper_init_eal<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">()<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="40"/></decl_stmt>
      <if pos:line="41" pos:column="7">if <condition pos:line="41" pos:column="10">(<expr><name pos:line="41" pos:column="11">ret<pos:position pos:line="41" pos:column="14"/></name> <operator pos:line="41" pos:column="15">!=<pos:position pos:line="41" pos:column="17"/></operator> <literal type="number" pos:line="41" pos:column="18">0<pos:position pos:line="41" pos:column="19"/></literal></expr>)<pos:position pos:line="41" pos:column="20"/></condition><then pos:line="41" pos:column="20"> <block pos:line="41" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">WARNING<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><literal type="string" pos:line="42" pos:column="17">"ERROR INITIALIZING EAL"<pos:position pos:line="42" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">dpdk_helper_stop<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">RESET<pos:position pos:line="43" pos:column="31"/></name></expr></argument>)<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="33"/></expr_stmt>
      }<pos:position pos:line="44" pos:column="8"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="47" pos:column="5">g_configuration<pos:position pos:line="47" pos:column="20"/></name><operator pos:line="47" pos:column="20">-&gt;<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="22">helper_status<pos:position pos:line="47" pos:column="35"/></name></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <name pos:line="47" pos:column="38">DPDK_HELPER_ALIVE_SENDING_STATS<pos:position pos:line="47" pos:column="69"/></name></expr>;<pos:position pos:line="47" pos:column="70"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="49" pos:column="5">uint8_t<pos:position pos:line="49" pos:column="12"/></name></type> <name pos:line="49" pos:column="13">nb_ports<pos:position pos:line="49" pos:column="21"/></name> <init pos:line="49" pos:column="22">= <expr><call><name pos:line="49" pos:column="24">rte_eth_dev_count<pos:position pos:line="49" pos:column="41"/></name><argument_list pos:line="49" pos:column="41">()<pos:position pos:line="49" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="44"/></decl_stmt>
    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">nb_ports<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">==<pos:position pos:line="50" pos:column="20"/></operator> <literal type="number" pos:line="50" pos:column="21">0<pos:position pos:line="50" pos:column="22"/></literal></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <block pos:line="50" pos:column="24">{
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">DEBUG<pos:position pos:line="51" pos:column="12"/></name><argument_list pos:line="51" pos:column="12">(<argument><expr><literal type="string" pos:line="51" pos:column="13">"dpdkstat-helper: No DPDK ports available. "<pos:position pos:line="51" pos:column="57"/></literal>
            <literal type="string" pos:line="52" pos:column="13">"Check bound devices to DPDK driver."<pos:position pos:line="52" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="53" pos:column="7">dpdk_helper_stop<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><name pos:line="53" pos:column="24">RESET<pos:position pos:line="53" pos:column="29"/></name></expr></argument>)<pos:position pos:line="53" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></then></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">nb_ports<pos:position pos:line="56" pos:column="17"/></name> <operator pos:line="56" pos:column="18">&gt;<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="20">RTE_MAX_ETHPORTS<pos:position pos:line="56" pos:column="36"/></name></expr>)<pos:position pos:line="56" pos:column="37"/></condition><then pos:line="56" pos:column="37">
      <block type="pseudo"><expr_stmt><expr><name pos:line="57" pos:column="7">nb_ports<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <name pos:line="57" pos:column="18">RTE_MAX_ETHPORTS<pos:position pos:line="57" pos:column="34"/></name></expr>;<pos:position pos:line="57" pos:column="35"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="59" pos:column="5">int<pos:position pos:line="59" pos:column="8"/></name></type> <name pos:line="59" pos:column="9">len<pos:position pos:line="59" pos:column="12"/></name> <init pos:line="59" pos:column="13">= <expr><literal type="number" pos:line="59" pos:column="15">0<pos:position pos:line="59" pos:column="16"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="59" pos:column="18">enabled_port_count<pos:position pos:line="59" pos:column="36"/></name> <init pos:line="59" pos:column="37">= <expr><literal type="number" pos:line="59" pos:column="39">0<pos:position pos:line="59" pos:column="40"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="59" pos:column="42">num_xstats<pos:position pos:line="59" pos:column="52"/></name> <init pos:line="59" pos:column="53">= <expr><literal type="number" pos:line="59" pos:column="55">0<pos:position pos:line="59" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="59" pos:column="57"/></decl_stmt>
    <for pos:line="60" pos:column="5">for <control pos:line="60" pos:column="9">(<init><decl><type><name pos:line="60" pos:column="10">uint8_t<pos:position pos:line="60" pos:column="17"/></name></type> <name pos:line="60" pos:column="18">i<pos:position pos:line="60" pos:column="19"/></name> <init pos:line="60" pos:column="20">= <expr><literal type="number" pos:line="60" pos:column="22">0<pos:position pos:line="60" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="60" pos:column="24"/></init> <condition><expr><name pos:line="60" pos:column="25">i<pos:position pos:line="60" pos:column="26"/></name> <operator pos:line="60" pos:column="27">&lt;<pos:position pos:line="60" pos:column="31"/></operator> <name pos:line="60" pos:column="29">nb_ports<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></condition> <incr><expr><name pos:line="60" pos:column="39">i<pos:position pos:line="60" pos:column="40"/></name><operator pos:line="60" pos:column="40">++<pos:position pos:line="60" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="60" pos:column="43"/></control> <block pos:line="60" pos:column="44">{
      <if pos:line="61" pos:column="7">if <condition pos:line="61" pos:column="10">(<expr><operator pos:line="61" pos:column="11">!<pos:position pos:line="61" pos:column="12"/></operator><operator pos:line="61" pos:column="12">(<pos:position pos:line="61" pos:column="13"/></operator><name><name pos:line="61" pos:column="13">g_configuration<pos:position pos:line="61" pos:column="28"/></name><operator pos:line="61" pos:column="28">-&gt;<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="30">enabled_port_mask<pos:position pos:line="61" pos:column="47"/></name></name> <operator pos:line="61" pos:column="48">&amp;<pos:position pos:line="61" pos:column="53"/></operator> <operator pos:line="61" pos:column="50">(<pos:position pos:line="61" pos:column="51"/></operator><literal type="number" pos:line="61" pos:column="51">1<pos:position pos:line="61" pos:column="52"/></literal> <operator pos:line="61" pos:column="53">&lt;&lt;<pos:position pos:line="61" pos:column="61"/></operator> <name pos:line="61" pos:column="56">i<pos:position pos:line="61" pos:column="57"/></name><operator pos:line="61" pos:column="57">)<pos:position pos:line="61" pos:column="58"/></operator><operator pos:line="61" pos:column="58">)<pos:position pos:line="61" pos:column="59"/></operator></expr>)<pos:position pos:line="61" pos:column="60"/></condition><then pos:line="61" pos:column="60">
        <block type="pseudo"><continue pos:line="62" pos:column="9">continue;<pos:position pos:line="62" pos:column="18"/></continue></block></then></if>

      <if pos:line="64" pos:column="7">if <condition pos:line="64" pos:column="10">(<expr><name><name pos:line="64" pos:column="11">g_configuration<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">-&gt;<pos:position pos:line="64" pos:column="31"/></operator><name pos:line="64" pos:column="28">helper_action<pos:position pos:line="64" pos:column="41"/></name></name> <operator pos:line="64" pos:column="42">==<pos:position pos:line="64" pos:column="44"/></operator> <name pos:line="64" pos:column="45">DPDK_HELPER_ACTION_COUNT_STATS<pos:position pos:line="64" pos:column="75"/></name></expr>)<pos:position pos:line="64" pos:column="76"/></condition><then pos:line="64" pos:column="76"> <block pos:line="64" pos:column="77">{
<cpp:if pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">if<pos:position pos:line="65" pos:column="4"/></cpp:directive> <expr><name pos:line="65" pos:column="5">RTE_VERSION<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">&gt;=<pos:position pos:line="65" pos:column="22"/></operator> <name pos:line="65" pos:column="20">RTE_VERSION_16_07<pos:position pos:line="65" pos:column="37"/></name></expr></cpp:if>
        <expr_stmt><expr><name pos:line="66" pos:column="9">len<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">=<pos:position pos:line="66" pos:column="14"/></operator> <call><name pos:line="66" pos:column="15">rte_eth_xstats_get_names<pos:position pos:line="66" pos:column="39"/></name><argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">i<pos:position pos:line="66" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="43">NULL<pos:position pos:line="66" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="49">0<pos:position pos:line="66" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="52"/></expr_stmt>
<cpp:else pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">else<pos:position pos:line="67" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="68" pos:column="9">len<pos:position pos:line="68" pos:column="12"/></name> <operator pos:line="68" pos:column="13">=<pos:position pos:line="68" pos:column="14"/></operator> <call><name pos:line="68" pos:column="15">rte_eth_xstats_get<pos:position pos:line="68" pos:column="33"/></name><argument_list pos:line="68" pos:column="33">(<argument><expr><name pos:line="68" pos:column="34">i<pos:position pos:line="68" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="37">NULL<pos:position pos:line="68" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="43">0<pos:position pos:line="68" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">len<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">&lt;<pos:position pos:line="70" pos:column="21"/></operator> <literal type="number" pos:line="70" pos:column="19">0<pos:position pos:line="70" pos:column="20"/></literal></expr>)<pos:position pos:line="70" pos:column="21"/></condition><then pos:line="70" pos:column="21"> <block pos:line="70" pos:column="22">{
          <expr_stmt><expr><call><name pos:line="71" pos:column="11">ERROR<pos:position pos:line="71" pos:column="16"/></name><argument_list pos:line="71" pos:column="16">(<argument><expr><literal type="string" pos:line="71" pos:column="17">"dpdkstat-helper: Cannot get xstats count on port %"<pos:position pos:line="71" pos:column="69"/></literal> <name pos:line="71" pos:column="70">PRIu8<pos:position pos:line="71" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="77">i<pos:position pos:line="71" pos:column="78"/></name></expr></argument>)<pos:position pos:line="71" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="80"/></expr_stmt>
          <break pos:line="72" pos:column="11">break;<pos:position pos:line="72" pos:column="17"/></break>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="74" pos:column="9">num_xstats<pos:position pos:line="74" pos:column="19"/></name> <operator pos:line="74" pos:column="20">+=<pos:position pos:line="74" pos:column="22"/></operator> <name pos:line="74" pos:column="23">len<pos:position pos:line="74" pos:column="26"/></name></expr>;<pos:position pos:line="74" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">g_configuration<pos:position pos:line="75" pos:column="24"/></name><operator pos:line="75" pos:column="24">-&gt;<pos:position pos:line="75" pos:column="29"/></operator><name pos:line="75" pos:column="26">num_stats_in_port<pos:position pos:line="75" pos:column="43"/></name><index pos:line="75" pos:column="43">[<expr><name pos:line="75" pos:column="44">enabled_port_count<pos:position pos:line="75" pos:column="62"/></name></expr>]<pos:position pos:line="75" pos:column="63"/></index></name> <operator pos:line="75" pos:column="64">=<pos:position pos:line="75" pos:column="65"/></operator> <name pos:line="75" pos:column="66">len<pos:position pos:line="75" pos:column="69"/></name></expr>;<pos:position pos:line="75" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">enabled_port_count<pos:position pos:line="76" pos:column="27"/></name><operator pos:line="76" pos:column="27">++<pos:position pos:line="76" pos:column="29"/></operator></expr>;<pos:position pos:line="76" pos:column="30"/></expr_stmt>
        <continue pos:line="77" pos:column="9">continue;<pos:position pos:line="77" pos:column="18"/></continue>
      }<pos:position pos:line="78" pos:column="8"/></block></then> <else pos:line="78" pos:column="9">else <block pos:line="78" pos:column="14">{
        <expr_stmt><expr><name pos:line="79" pos:column="9">len<pos:position pos:line="79" pos:column="12"/></name> <operator pos:line="79" pos:column="13">=<pos:position pos:line="79" pos:column="14"/></operator> <name><name pos:line="79" pos:column="15">g_configuration<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">-&gt;<pos:position pos:line="79" pos:column="35"/></operator><name pos:line="79" pos:column="32">num_stats_in_port<pos:position pos:line="79" pos:column="49"/></name><index pos:line="79" pos:column="49">[<expr><name pos:line="79" pos:column="50">enabled_port_count<pos:position pos:line="79" pos:column="68"/></name></expr>]<pos:position pos:line="79" pos:column="69"/></index></name></expr>;<pos:position pos:line="79" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">g_configuration<pos:position pos:line="80" pos:column="24"/></name><operator pos:line="80" pos:column="24">-&gt;<pos:position pos:line="80" pos:column="29"/></operator><name pos:line="80" pos:column="26">port_read_time<pos:position pos:line="80" pos:column="40"/></name><index pos:line="80" pos:column="40">[<expr><name pos:line="80" pos:column="41">enabled_port_count<pos:position pos:line="80" pos:column="59"/></name></expr>]<pos:position pos:line="80" pos:column="60"/></index></name> <operator pos:line="80" pos:column="61">=<pos:position pos:line="80" pos:column="62"/></operator> <call><name pos:line="80" pos:column="63">cdtime<pos:position pos:line="80" pos:column="69"/></name><argument_list pos:line="80" pos:column="69">()<pos:position pos:line="80" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name pos:line="81" pos:column="9">ret<pos:position pos:line="81" pos:column="12"/></name> <operator pos:line="81" pos:column="13">=<pos:position pos:line="81" pos:column="14"/></operator> <call><name pos:line="81" pos:column="15">rte_eth_xstats_get<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(
            <argument><expr><name pos:line="82" pos:column="13">i<pos:position pos:line="82" pos:column="14"/></name></expr></argument>, <argument><expr><name><name pos:line="82" pos:column="16">g_configuration<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">-&gt;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="33">xstats<pos:position pos:line="82" pos:column="39"/></name></name> <operator pos:line="82" pos:column="40">+<pos:position pos:line="82" pos:column="41"/></operator> <name pos:line="82" pos:column="42">num_xstats<pos:position pos:line="82" pos:column="52"/></name></expr></argument>,
            <argument><expr><name><name pos:line="83" pos:column="13">g_configuration<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">num_stats_in_port<pos:position pos:line="83" pos:column="47"/></name><index pos:line="83" pos:column="47">[<expr><name pos:line="83" pos:column="48">enabled_port_count<pos:position pos:line="83" pos:column="66"/></name></expr>]<pos:position pos:line="83" pos:column="67"/></index></name></expr></argument>)<pos:position pos:line="83" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="69"/></expr_stmt>
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">ret<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">&lt;<pos:position pos:line="84" pos:column="21"/></operator> <literal type="number" pos:line="84" pos:column="19">0<pos:position pos:line="84" pos:column="20"/></literal> <operator pos:line="84" pos:column="21">||<pos:position pos:line="84" pos:column="23"/></operator> <name pos:line="84" pos:column="24">ret<pos:position pos:line="84" pos:column="27"/></name> <operator pos:line="84" pos:column="28">!=<pos:position pos:line="84" pos:column="30"/></operator> <name pos:line="84" pos:column="31">len<pos:position pos:line="84" pos:column="34"/></name></expr>)<pos:position pos:line="84" pos:column="35"/></condition><then pos:line="84" pos:column="35"> <block pos:line="84" pos:column="36">{
          <expr_stmt><expr><call><name pos:line="85" pos:column="11">DEBUG<pos:position pos:line="85" pos:column="16"/></name><argument_list pos:line="85" pos:column="16">(<argument><expr><literal type="string" pos:line="85" pos:column="17">"dpdkstat-helper: Error reading xstats on port %"<pos:position pos:line="85" pos:column="66"/></literal> <name pos:line="85" pos:column="67">PRIu8<pos:position pos:line="85" pos:column="72"/></name>
                <literal type="string" pos:line="86" pos:column="17">" len = %d"<pos:position pos:line="86" pos:column="28"/></literal></expr></argument>,
                <argument><expr><name pos:line="87" pos:column="17">i<pos:position pos:line="87" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="87" pos:column="20">len<pos:position pos:line="87" pos:column="23"/></name></expr></argument>)<pos:position pos:line="87" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>
          <break pos:line="88" pos:column="11">break;<pos:position pos:line="88" pos:column="17"/></break>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
<cpp:if pos:line="90" pos:column="1">#<cpp:directive pos:line="90" pos:column="2">if<pos:position pos:line="90" pos:column="4"/></cpp:directive> <expr><name pos:line="90" pos:column="5">RTE_VERSION<pos:position pos:line="90" pos:column="16"/></name> <operator pos:line="90" pos:column="17">&gt;=<pos:position pos:line="90" pos:column="22"/></operator> <name pos:line="90" pos:column="20">RTE_VERSION_16_07<pos:position pos:line="90" pos:column="37"/></name></expr></cpp:if>
        <expr_stmt><expr><name pos:line="91" pos:column="9">ret<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <call><name pos:line="91" pos:column="15">rte_eth_xstats_get_names<pos:position pos:line="91" pos:column="39"/></name><argument_list pos:line="91" pos:column="39">(<argument><expr><name pos:line="91" pos:column="40">i<pos:position pos:line="91" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="43">g_configuration<pos:position pos:line="91" pos:column="58"/></name><operator pos:line="91" pos:column="58">-&gt;<pos:position pos:line="91" pos:column="63"/></operator><name pos:line="91" pos:column="60">xnames<pos:position pos:line="91" pos:column="66"/></name></name> <operator pos:line="91" pos:column="67">+<pos:position pos:line="91" pos:column="68"/></operator> <name pos:line="91" pos:column="69">num_xstats<pos:position pos:line="91" pos:column="79"/></name></expr></argument>,
                                       <argument><expr><name pos:line="92" pos:column="40">len<pos:position pos:line="92" pos:column="43"/></name></expr></argument>)<pos:position pos:line="92" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="45"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">ret<pos:position pos:line="93" pos:column="16"/></name> <operator pos:line="93" pos:column="17">&lt;<pos:position pos:line="93" pos:column="21"/></operator> <literal type="number" pos:line="93" pos:column="19">0<pos:position pos:line="93" pos:column="20"/></literal> <operator pos:line="93" pos:column="21">||<pos:position pos:line="93" pos:column="23"/></operator> <name pos:line="93" pos:column="24">ret<pos:position pos:line="93" pos:column="27"/></name> <operator pos:line="93" pos:column="28">!=<pos:position pos:line="93" pos:column="30"/></operator> <name pos:line="93" pos:column="31">len<pos:position pos:line="93" pos:column="34"/></name></expr>)<pos:position pos:line="93" pos:column="35"/></condition><then pos:line="93" pos:column="35"> <block pos:line="93" pos:column="36">{
          <expr_stmt><expr><call><name pos:line="94" pos:column="11">ERROR<pos:position pos:line="94" pos:column="16"/></name><argument_list pos:line="94" pos:column="16">(<argument><expr><literal type="string" pos:line="94" pos:column="17">"dpdkstat-helper: Error reading xstat names (port=%d; len=%d)"<pos:position pos:line="94" pos:column="79"/></literal></expr></argument>,
                <argument><expr><name pos:line="95" pos:column="17">i<pos:position pos:line="95" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="20">len<pos:position pos:line="95" pos:column="23"/></name></expr></argument>)<pos:position pos:line="95" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="25"/></expr_stmt>
          <break pos:line="96" pos:column="11">break;<pos:position pos:line="96" pos:column="17"/></break>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>
<cpp:endif pos:line="98" pos:column="1">#<cpp:directive pos:line="98" pos:column="2">endif<pos:position pos:line="98" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><name pos:line="99" pos:column="9">num_xstats<pos:position pos:line="99" pos:column="19"/></name> <operator pos:line="99" pos:column="20">+=<pos:position pos:line="99" pos:column="22"/></operator> <name><name pos:line="99" pos:column="23">g_configuration<pos:position pos:line="99" pos:column="38"/></name><operator pos:line="99" pos:column="38">-&gt;<pos:position pos:line="99" pos:column="43"/></operator><name pos:line="99" pos:column="40">num_stats_in_port<pos:position pos:line="99" pos:column="57"/></name><index pos:line="99" pos:column="57">[<expr><name pos:line="99" pos:column="58">enabled_port_count<pos:position pos:line="99" pos:column="76"/></name></expr>]<pos:position pos:line="99" pos:column="77"/></index></name></expr>;<pos:position pos:line="99" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><name pos:line="100" pos:column="9">enabled_port_count<pos:position pos:line="100" pos:column="27"/></name><operator pos:line="100" pos:column="27">++<pos:position pos:line="100" pos:column="29"/></operator></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
      }<pos:position pos:line="101" pos:column="8"/></block></else></if>
    }<pos:position pos:line="102" pos:column="6"/></block></for> <comment type="block" pos:line="102" pos:column="7">/* for (nb_ports) */</comment>

    <if pos:line="104" pos:column="5">if <condition pos:line="104" pos:column="8">(<expr><name><name pos:line="104" pos:column="9">g_configuration<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">-&gt;<pos:position pos:line="104" pos:column="29"/></operator><name pos:line="104" pos:column="26">helper_action<pos:position pos:line="104" pos:column="39"/></name></name> <operator pos:line="104" pos:column="40">==<pos:position pos:line="104" pos:column="42"/></operator> <name pos:line="104" pos:column="43">DPDK_HELPER_ACTION_COUNT_STATS<pos:position pos:line="104" pos:column="73"/></name></expr>)<pos:position pos:line="104" pos:column="74"/></condition><then pos:line="104" pos:column="74"> <block pos:line="104" pos:column="75">{
      <expr_stmt><expr><name><name pos:line="105" pos:column="7">g_configuration<pos:position pos:line="105" pos:column="22"/></name><operator pos:line="105" pos:column="22">-&gt;<pos:position pos:line="105" pos:column="27"/></operator><name pos:line="105" pos:column="24">num_ports<pos:position pos:line="105" pos:column="33"/></name></name> <operator pos:line="105" pos:column="34">=<pos:position pos:line="105" pos:column="35"/></operator> <name pos:line="105" pos:column="36">enabled_port_count<pos:position pos:line="105" pos:column="54"/></name></expr>;<pos:position pos:line="105" pos:column="55"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="106" pos:column="7">g_configuration<pos:position pos:line="106" pos:column="22"/></name><operator pos:line="106" pos:column="22">-&gt;<pos:position pos:line="106" pos:column="27"/></operator><name pos:line="106" pos:column="24">num_xstats<pos:position pos:line="106" pos:column="34"/></name></name> <operator pos:line="106" pos:column="35">=<pos:position pos:line="106" pos:column="36"/></operator> <name pos:line="106" pos:column="37">num_xstats<pos:position pos:line="106" pos:column="47"/></name></expr>;<pos:position pos:line="106" pos:column="48"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="107" pos:column="7">DEBUG<pos:position pos:line="107" pos:column="12"/></name><argument_list pos:line="107" pos:column="12">(<argument><expr><literal type="string" pos:line="107" pos:column="13">"dpdkstat-helper ports: %"<pos:position pos:line="107" pos:column="39"/></literal> <name pos:line="107" pos:column="40">PRIu32<pos:position pos:line="107" pos:column="46"/></name> <literal type="string" pos:line="107" pos:column="47">", num stats: %"<pos:position pos:line="107" pos:column="63"/></literal> <name pos:line="107" pos:column="64">PRIu32<pos:position pos:line="107" pos:column="70"/></name></expr></argument>,
            <argument><expr><name><name pos:line="108" pos:column="13">g_configuration<pos:position pos:line="108" pos:column="28"/></name><operator pos:line="108" pos:column="28">-&gt;<pos:position pos:line="108" pos:column="33"/></operator><name pos:line="108" pos:column="30">num_ports<pos:position pos:line="108" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="41">g_configuration<pos:position pos:line="108" pos:column="56"/></name><operator pos:line="108" pos:column="56">-&gt;<pos:position pos:line="108" pos:column="61"/></operator><name pos:line="108" pos:column="58">num_xstats<pos:position pos:line="108" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="108" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="70"/></expr_stmt>
      <comment type="block" pos:line="109" pos:column="7">/* Exit, allowing collectd to re-init SHM to the right size */</comment>
      <expr_stmt><expr><name><name pos:line="110" pos:column="7">g_configuration<pos:position pos:line="110" pos:column="22"/></name><operator pos:line="110" pos:column="22">-&gt;<pos:position pos:line="110" pos:column="27"/></operator><name pos:line="110" pos:column="24">collectd_reinit_shm<pos:position pos:line="110" pos:column="43"/></name></name> <operator pos:line="110" pos:column="44">=<pos:position pos:line="110" pos:column="45"/></operator> <name pos:line="110" pos:column="46">REINIT_SHM<pos:position pos:line="110" pos:column="56"/></name></expr>;<pos:position pos:line="110" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="111" pos:column="7">dpdk_helper_stop<pos:position pos:line="111" pos:column="23"/></name><argument_list pos:line="111" pos:column="23">(<argument><expr><name pos:line="111" pos:column="24">NO_RESET<pos:position pos:line="111" pos:column="32"/></name></expr></argument>)<pos:position pos:line="111" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="113" pos:column="5">/* Now kick collectd send thread to send the stats */</comment>
    <decl_stmt><decl><type><name pos:line="114" pos:column="5">int<pos:position pos:line="114" pos:column="8"/></name></type> <name pos:line="114" pos:column="9">err<pos:position pos:line="114" pos:column="12"/></name> <init pos:line="114" pos:column="13">= <expr><call><name pos:line="114" pos:column="15">sem_post<pos:position pos:line="114" pos:column="23"/></name><argument_list pos:line="114" pos:column="23">(<argument><expr><operator pos:line="114" pos:column="24">&amp;<pos:position pos:line="114" pos:column="29"/></operator><name><name pos:line="114" pos:column="25">g_configuration<pos:position pos:line="114" pos:column="40"/></name><operator pos:line="114" pos:column="40">-&gt;<pos:position pos:line="114" pos:column="45"/></operator><name pos:line="114" pos:column="42">sema_stats_in_shm<pos:position pos:line="114" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="114" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="114" pos:column="61"/></decl_stmt>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><name pos:line="115" pos:column="9">err<pos:position pos:line="115" pos:column="12"/></name></expr>)<pos:position pos:line="115" pos:column="13"/></condition><then pos:line="115" pos:column="13"> <block pos:line="115" pos:column="14">{
      <expr_stmt><expr><call><name pos:line="116" pos:column="7">WARNING<pos:position pos:line="116" pos:column="14"/></name><argument_list pos:line="116" pos:column="14">(<argument><expr><literal type="string" pos:line="116" pos:column="15">"dpdkstat: error posting semaphore to helper %s"<pos:position pos:line="116" pos:column="63"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="117" pos:column="15">sstrerror<pos:position pos:line="117" pos:column="24"/></name><argument_list pos:line="117" pos:column="24">(<argument><expr><name pos:line="117" pos:column="25">errno<pos:position pos:line="117" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="32">errbuf<pos:position pos:line="117" pos:column="38"/></name></expr></argument>, <argument><expr><sizeof pos:line="117" pos:column="40">sizeof<argument_list pos:line="117" pos:column="46">(<argument><expr><name pos:line="117" pos:column="47">errbuf<pos:position pos:line="117" pos:column="53"/></name></expr></argument>)<pos:position pos:line="117" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="117" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="117" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="57"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="118" pos:column="7">dpdk_helper_stop<pos:position pos:line="118" pos:column="23"/></name><argument_list pos:line="118" pos:column="23">(<argument><expr><name pos:line="118" pos:column="24">RESET<pos:position pos:line="118" pos:column="29"/></name></expr></argument>)<pos:position pos:line="118" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="119" pos:column="6"/></block></then></if>
  }<pos:position pos:line="120" pos:column="4"/></block></while> <comment type="block" pos:line="120" pos:column="5">/* while(1) */</comment>

  <return pos:line="122" pos:column="3">return <expr><literal type="number" pos:line="122" pos:column="10">0<pos:position pos:line="122" pos:column="11"/></literal></expr>;<pos:position pos:line="122" pos:column="12"/></return>
}<pos:position pos:line="123" pos:column="2"/></block></function></unit>

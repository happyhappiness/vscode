<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_525_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sensors_load_conf<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">fh<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">featurelist_t<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">last_feature<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">featurelist_t<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">new_feature<pos:position pos:line="5" pos:column="35"/></name> <init pos:line="5" pos:column="36">= <expr><name pos:line="5" pos:column="38">NULL<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
	
	<decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">sensors_chip_name<pos:position pos:line="7" pos:column="32"/></name> <modifier pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></modifier></type><name pos:line="7" pos:column="34">chip<pos:position pos:line="7" pos:column="38"/></name></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">chip_num<pos:position pos:line="8" pos:column="21"/></name></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">sensors_feature_data<pos:position pos:line="10" pos:column="35"/></name> <modifier pos:line="10" pos:column="36">*<pos:position pos:line="10" pos:column="37"/></modifier></type><name pos:line="10" pos:column="37">data<pos:position pos:line="10" pos:column="41"/></name></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">data_num0<pos:position pos:line="11" pos:column="22"/></name></decl>, <decl><type ref="prev"/><name pos:line="11" pos:column="24">data_num1<pos:position pos:line="11" pos:column="33"/></name></decl>;<pos:position pos:line="11" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="13" pos:column="9">struct<pos:position pos:line="13" pos:column="15"/></name> <name pos:line="13" pos:column="16">stat<pos:position pos:line="13" pos:column="20"/></name></name></type> <name pos:line="13" pos:column="21">statbuf<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">status<pos:position pos:line="14" pos:column="19"/></name></decl>;<pos:position pos:line="14" pos:column="20"/></decl_stmt>
	
	<expr_stmt><expr><name pos:line="16" pos:column="9">status<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">stat<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><name pos:line="16" pos:column="24">conffile<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="34">&amp;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="35">statbuf<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="44"/></expr_stmt>
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">status<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">!=<pos:position pos:line="17" pos:column="22"/></operator> <literal type="number" pos:line="17" pos:column="23">0<pos:position pos:line="17" pos:column="24"/></literal></expr>)<pos:position pos:line="17" pos:column="25"/></condition><then pos:line="17" pos:column="25">
	<block pos:line="18" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="19" pos:column="17">char<pos:position pos:line="19" pos:column="21"/></name></type> <name><name pos:line="19" pos:column="22">errbuf<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><literal type="number" pos:line="19" pos:column="29">1024<pos:position pos:line="19" pos:column="33"/></literal></expr>]<pos:position pos:line="19" pos:column="34"/></index></name></decl>;<pos:position pos:line="19" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="20" pos:column="17">ERROR<pos:position pos:line="20" pos:column="22"/></name> <argument_list pos:line="20" pos:column="23">(<argument><expr><literal type="string" pos:line="20" pos:column="24">"sensors plugin: stat (%s) failed: %s"<pos:position pos:line="20" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">conffile<pos:position pos:line="20" pos:column="72"/></name></expr></argument>,
				<argument><expr><call><name pos:line="21" pos:column="33">sstrerror<pos:position pos:line="21" pos:column="42"/></name> <argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">errno<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">errbuf<pos:position pos:line="21" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="59">sizeof <argument_list pos:line="21" pos:column="66">(<argument><expr><name pos:line="21" pos:column="67">errbuf<pos:position pos:line="21" pos:column="73"/></name></expr></argument>)<pos:position pos:line="21" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="77"/></expr_stmt>
		<expr_stmt><expr><name pos:line="22" pos:column="17">sensors_config_mtime<pos:position pos:line="22" pos:column="37"/></name> <operator pos:line="22" pos:column="38">=<pos:position pos:line="22" pos:column="39"/></operator> <literal type="number" pos:line="22" pos:column="40">0<pos:position pos:line="22" pos:column="41"/></literal></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="23" pos:column="10"/></block></then></if>

	<if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><operator pos:line="25" pos:column="13">(<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">sensors_config_mtime<pos:position pos:line="25" pos:column="34"/></name> <operator pos:line="25" pos:column="35">!=<pos:position pos:line="25" pos:column="37"/></operator> <literal type="number" pos:line="25" pos:column="38">0<pos:position pos:line="25" pos:column="39"/></literal><operator pos:line="25" pos:column="39">)<pos:position pos:line="25" pos:column="40"/></operator>
			<operator pos:line="26" pos:column="25">&amp;&amp;<pos:position pos:line="26" pos:column="35"/></operator> <operator pos:line="26" pos:column="28">(<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">sensors_config_mtime<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">==<pos:position pos:line="26" pos:column="52"/></operator> <name><name pos:line="26" pos:column="53">statbuf<pos:position pos:line="26" pos:column="60"/></name><operator pos:line="26" pos:column="60">.<pos:position pos:line="26" pos:column="61"/></operator><name pos:line="26" pos:column="61">st_mtime<pos:position pos:line="26" pos:column="69"/></name></name><operator pos:line="26" pos:column="69">)<pos:position pos:line="26" pos:column="70"/></operator></expr>)<pos:position pos:line="26" pos:column="71"/></condition><then pos:line="26" pos:column="71">
		<block type="pseudo"><return pos:line="27" pos:column="17">return <expr><operator pos:line="27" pos:column="24">(<pos:position pos:line="27" pos:column="25"/></operator><literal type="number" pos:line="27" pos:column="25">0<pos:position pos:line="27" pos:column="26"/></literal><operator pos:line="27" pos:column="26">)<pos:position pos:line="27" pos:column="27"/></operator></expr>;<pos:position pos:line="27" pos:column="28"/></return></block></then></if>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">sensors_config_mtime<pos:position pos:line="29" pos:column="33"/></name> <operator pos:line="29" pos:column="34">!=<pos:position pos:line="29" pos:column="36"/></operator> <literal type="number" pos:line="29" pos:column="37">0<pos:position pos:line="29" pos:column="38"/></literal></expr>)<pos:position pos:line="29" pos:column="39"/></condition><then pos:line="29" pos:column="39">
	<block pos:line="30" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">NOTICE<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><literal type="string" pos:line="31" pos:column="25">"sensors plugin: Reloading config from %s"<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>,
				<argument><expr><name pos:line="32" pos:column="33">conffile<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="33" pos:column="17">sensors_free_features<pos:position pos:line="33" pos:column="38"/></name> <argument_list pos:line="33" pos:column="39">()<pos:position pos:line="33" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">sensors_config_mtime<pos:position pos:line="34" pos:column="37"/></name> <operator pos:line="34" pos:column="38">=<pos:position pos:line="34" pos:column="39"/></operator> <literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
	}<pos:position pos:line="35" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="37" pos:column="9">fh<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">fopen<pos:position pos:line="37" pos:column="19"/></name> <argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">conffile<pos:position pos:line="37" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="31">"r"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="36"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">fh<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">==<pos:position pos:line="38" pos:column="18"/></operator> <name pos:line="38" pos:column="19">NULL<pos:position pos:line="38" pos:column="23"/></name></expr>)<pos:position pos:line="38" pos:column="24"/></condition><then pos:line="38" pos:column="24">
	<block pos:line="39" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="40" pos:column="17">char<pos:position pos:line="40" pos:column="21"/></name></type> <name><name pos:line="40" pos:column="22">errbuf<pos:position pos:line="40" pos:column="28"/></name><index pos:line="40" pos:column="28">[<expr><literal type="number" pos:line="40" pos:column="29">1024<pos:position pos:line="40" pos:column="33"/></literal></expr>]<pos:position pos:line="40" pos:column="34"/></index></name></decl>;<pos:position pos:line="40" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">ERROR<pos:position pos:line="41" pos:column="22"/></name> <argument_list pos:line="41" pos:column="23">(<argument><expr><literal type="string" pos:line="41" pos:column="24">"sensors plugin: fopen(%s) failed: %s"<pos:position pos:line="41" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="64">conffile<pos:position pos:line="41" pos:column="72"/></name></expr></argument>,
				<argument><expr><call><name pos:line="42" pos:column="33">sstrerror<pos:position pos:line="42" pos:column="42"/></name> <argument_list pos:line="42" pos:column="43">(<argument><expr><name pos:line="42" pos:column="44">errno<pos:position pos:line="42" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="51">errbuf<pos:position pos:line="42" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="42" pos:column="59">sizeof <argument_list pos:line="42" pos:column="66">(<argument><expr><name pos:line="42" pos:column="67">errbuf<pos:position pos:line="42" pos:column="73"/></name></expr></argument>)<pos:position pos:line="42" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="77"/></expr_stmt>
		<return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><operator pos:line="43" pos:column="25">-<pos:position pos:line="43" pos:column="26"/></operator><literal type="number" pos:line="43" pos:column="26">1<pos:position pos:line="43" pos:column="27"/></literal><operator pos:line="43" pos:column="27">)<pos:position pos:line="43" pos:column="28"/></operator></expr>;<pos:position pos:line="43" pos:column="29"/></return>
	}<pos:position pos:line="44" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="46" pos:column="9">status<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">sensors_init<pos:position pos:line="46" pos:column="30"/></name> <argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">fh<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="47" pos:column="9">fclose<pos:position pos:line="47" pos:column="15"/></name> <argument_list pos:line="47" pos:column="16">(<argument><expr><name pos:line="47" pos:column="17">fh<pos:position pos:line="47" pos:column="19"/></name></expr></argument>)<pos:position pos:line="47" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name pos:line="48" pos:column="13">status<pos:position pos:line="48" pos:column="19"/></name> <operator pos:line="48" pos:column="20">!=<pos:position pos:line="48" pos:column="22"/></operator> <literal type="number" pos:line="48" pos:column="23">0<pos:position pos:line="48" pos:column="24"/></literal></expr>)<pos:position pos:line="48" pos:column="25"/></condition><then pos:line="48" pos:column="25">
	<block pos:line="49" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="50" pos:column="17">ERROR<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><literal type="string" pos:line="50" pos:column="24">"sensors plugin: Cannot initialize sensors. "<pos:position pos:line="50" pos:column="69"/></literal>
				<literal type="string" pos:line="51" pos:column="33">"Data will not be collected."<pos:position pos:line="51" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="64"/></expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><operator pos:line="52" pos:column="24">(<pos:position pos:line="52" pos:column="25"/></operator><operator pos:line="52" pos:column="25">-<pos:position pos:line="52" pos:column="26"/></operator><literal type="number" pos:line="52" pos:column="26">1<pos:position pos:line="52" pos:column="27"/></literal><operator pos:line="52" pos:column="27">)<pos:position pos:line="52" pos:column="28"/></operator></expr>;<pos:position pos:line="52" pos:column="29"/></return>
	}<pos:position pos:line="53" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="55" pos:column="9">sensors_config_mtime<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">=<pos:position pos:line="55" pos:column="31"/></operator> <name><name pos:line="55" pos:column="32">statbuf<pos:position pos:line="55" pos:column="39"/></name><operator pos:line="55" pos:column="39">.<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="40">st_mtime<pos:position pos:line="55" pos:column="48"/></name></name></expr>;<pos:position pos:line="55" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><name pos:line="57" pos:column="9">chip_num<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <literal type="number" pos:line="57" pos:column="20">0<pos:position pos:line="57" pos:column="21"/></literal></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt>
	<while pos:line="58" pos:column="9">while <condition pos:line="58" pos:column="15">(<expr><operator pos:line="58" pos:column="16">(<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">chip<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <call><name pos:line="58" pos:column="24">sensors_get_detected_chips<pos:position pos:line="58" pos:column="50"/></name> <argument_list pos:line="58" pos:column="51">(<argument><expr><operator pos:line="58" pos:column="52">&amp;<pos:position pos:line="58" pos:column="57"/></operator><name pos:line="58" pos:column="53">chip_num<pos:position pos:line="58" pos:column="61"/></name></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call><operator pos:line="58" pos:column="62">)<pos:position pos:line="58" pos:column="63"/></operator> <operator pos:line="58" pos:column="64">!=<pos:position pos:line="58" pos:column="66"/></operator> <name pos:line="58" pos:column="67">NULL<pos:position pos:line="58" pos:column="71"/></name></expr>)<pos:position pos:line="58" pos:column="72"/></condition>
	<block pos:line="59" pos:column="9">{
		<expr_stmt><expr><name pos:line="60" pos:column="17">data<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <name pos:line="60" pos:column="24">NULL<pos:position pos:line="60" pos:column="28"/></name></expr>;<pos:position pos:line="60" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><name pos:line="61" pos:column="17">data_num0<pos:position pos:line="61" pos:column="26"/></name> <operator pos:line="61" pos:column="27">=<pos:position pos:line="61" pos:column="28"/></operator> <name pos:line="61" pos:column="29">data_num1<pos:position pos:line="61" pos:column="38"/></name> <operator pos:line="61" pos:column="39">=<pos:position pos:line="61" pos:column="40"/></operator> <literal type="number" pos:line="61" pos:column="41">0<pos:position pos:line="61" pos:column="42"/></literal></expr>;<pos:position pos:line="61" pos:column="43"/></expr_stmt>

		<while pos:line="63" pos:column="17">while <condition pos:line="63" pos:column="23">(<expr><operator pos:line="63" pos:column="24">(<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="25">data<pos:position pos:line="63" pos:column="29"/></name> <operator pos:line="63" pos:column="30">=<pos:position pos:line="63" pos:column="31"/></operator> <call><name pos:line="63" pos:column="32">sensors_get_all_features<pos:position pos:line="63" pos:column="56"/></name> <argument_list pos:line="63" pos:column="57">(<argument><expr><operator pos:line="63" pos:column="58">*<pos:position pos:line="63" pos:column="59"/></operator><name pos:line="63" pos:column="59">chip<pos:position pos:line="63" pos:column="63"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="65">&amp;<pos:position pos:line="63" pos:column="70"/></operator><name pos:line="63" pos:column="66">data_num0<pos:position pos:line="63" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="77">&amp;<pos:position pos:line="63" pos:column="82"/></operator><name pos:line="63" pos:column="78">data_num1<pos:position pos:line="63" pos:column="87"/></name></expr></argument>)<pos:position pos:line="63" pos:column="88"/></argument_list></call><operator pos:line="63" pos:column="88">)<pos:position pos:line="63" pos:column="89"/></operator>
				<operator pos:line="64" pos:column="33">!=<pos:position pos:line="64" pos:column="35"/></operator> <name pos:line="64" pos:column="36">NULL<pos:position pos:line="64" pos:column="40"/></name></expr>)<pos:position pos:line="64" pos:column="41"/></condition>
		<block pos:line="65" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="66" pos:column="25">int<pos:position pos:line="66" pos:column="28"/></name></type> <name pos:line="66" pos:column="29">i<pos:position pos:line="66" pos:column="30"/></name></decl>;<pos:position pos:line="66" pos:column="31"/></decl_stmt>

			<comment type="block" pos:line="68" pos:column="25">/* "master features" only */</comment>
			<if pos:line="69" pos:column="25">if <condition pos:line="69" pos:column="28">(<expr><name><name pos:line="69" pos:column="29">data<pos:position pos:line="69" pos:column="33"/></name><operator pos:line="69" pos:column="33">-&gt;<pos:position pos:line="69" pos:column="38"/></operator><name pos:line="69" pos:column="35">mapping<pos:position pos:line="69" pos:column="42"/></name></name> <operator pos:line="69" pos:column="43">!=<pos:position pos:line="69" pos:column="45"/></operator> <name pos:line="69" pos:column="46">SENSORS_NO_MAPPING<pos:position pos:line="69" pos:column="64"/></name></expr>)<pos:position pos:line="69" pos:column="65"/></condition><then pos:line="69" pos:column="65">
				<block type="pseudo"><continue pos:line="70" pos:column="33">continue;<pos:position pos:line="70" pos:column="42"/></continue></block></then></if>

			<comment type="block" pos:line="72" pos:column="25">/* Only known features */</comment>
			<for pos:line="73" pos:column="25">for <control pos:line="73" pos:column="29">(<init><expr><name pos:line="73" pos:column="30">i<pos:position pos:line="73" pos:column="31"/></name> <operator pos:line="73" pos:column="32">=<pos:position pos:line="73" pos:column="33"/></operator> <literal type="number" pos:line="73" pos:column="34">0<pos:position pos:line="73" pos:column="35"/></literal></expr>;<pos:position pos:line="73" pos:column="36"/></init> <condition><expr><name pos:line="73" pos:column="37">i<pos:position pos:line="73" pos:column="38"/></name> <operator pos:line="73" pos:column="39">&lt;<pos:position pos:line="73" pos:column="43"/></operator> <name pos:line="73" pos:column="41">known_features_num<pos:position pos:line="73" pos:column="59"/></name></expr>;<pos:position pos:line="73" pos:column="60"/></condition> <incr><expr><name pos:line="73" pos:column="61">i<pos:position pos:line="73" pos:column="62"/></name><operator pos:line="73" pos:column="62">++<pos:position pos:line="73" pos:column="64"/></operator></expr></incr>)<pos:position pos:line="73" pos:column="65"/></control>
			<block pos:line="74" pos:column="25">{
				<if pos:line="75" pos:column="33">if <condition pos:line="75" pos:column="36">(<expr><call><name pos:line="75" pos:column="37">strcmp<pos:position pos:line="75" pos:column="43"/></name> <argument_list pos:line="75" pos:column="44">(<argument><expr><name><name pos:line="75" pos:column="45">data<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">-&gt;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="51">name<pos:position pos:line="75" pos:column="55"/></name></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="57">known_features<pos:position pos:line="75" pos:column="71"/></name><index pos:line="75" pos:column="71">[<expr><name pos:line="75" pos:column="72">i<pos:position pos:line="75" pos:column="73"/></name></expr>]<pos:position pos:line="75" pos:column="74"/></index></name><operator pos:line="75" pos:column="74">.<pos:position pos:line="75" pos:column="75"/></operator><name pos:line="75" pos:column="75">label<pos:position pos:line="75" pos:column="80"/></name></expr></argument>)<pos:position pos:line="75" pos:column="81"/></argument_list></call> <operator pos:line="75" pos:column="82">!=<pos:position pos:line="75" pos:column="84"/></operator> <literal type="number" pos:line="75" pos:column="85">0<pos:position pos:line="75" pos:column="86"/></literal></expr>)<pos:position pos:line="75" pos:column="87"/></condition><then pos:line="75" pos:column="87">
					<block type="pseudo"><continue pos:line="76" pos:column="41">continue;<pos:position pos:line="76" pos:column="50"/></continue></block></then></if>

				<comment type="block" pos:line="78" pos:column="33">/* skip ignored in sensors.conf */</comment>
				<if pos:line="79" pos:column="33">if <condition pos:line="79" pos:column="36">(<expr><call><name pos:line="79" pos:column="37">sensors_get_ignored<pos:position pos:line="79" pos:column="56"/></name> <argument_list pos:line="79" pos:column="57">(<argument><expr><operator pos:line="79" pos:column="58">*<pos:position pos:line="79" pos:column="59"/></operator><name pos:line="79" pos:column="59">chip<pos:position pos:line="79" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="65">data<pos:position pos:line="79" pos:column="69"/></name><operator pos:line="79" pos:column="69">-&gt;<pos:position pos:line="79" pos:column="74"/></operator><name pos:line="79" pos:column="71">number<pos:position pos:line="79" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="78"/></argument_list></call> <operator pos:line="79" pos:column="79">==<pos:position pos:line="79" pos:column="81"/></operator> <literal type="number" pos:line="79" pos:column="82">0<pos:position pos:line="79" pos:column="83"/></literal></expr>)<pos:position pos:line="79" pos:column="84"/></condition><then pos:line="79" pos:column="84">
					<block type="pseudo"><break pos:line="80" pos:column="41">break;<pos:position pos:line="80" pos:column="47"/></break></block></then></if>

				<expr_stmt><expr><call><name pos:line="82" pos:column="33">DEBUG<pos:position pos:line="82" pos:column="38"/></name> <argument_list pos:line="82" pos:column="39">(<argument><expr><literal type="string" pos:line="82" pos:column="40">"Adding feature: %s-%s-%s"<pos:position pos:line="82" pos:column="66"/></literal></expr></argument>,
						<argument><expr><name><name pos:line="83" pos:column="49">chip<pos:position pos:line="83" pos:column="53"/></name><operator pos:line="83" pos:column="53">-&gt;<pos:position pos:line="83" pos:column="58"/></operator><name pos:line="83" pos:column="55">prefix<pos:position pos:line="83" pos:column="61"/></name></name></expr></argument>,
						<argument><expr><name><name pos:line="84" pos:column="49">sensor_to_type<pos:position pos:line="84" pos:column="63"/></name><index pos:line="84" pos:column="63">[<expr><name><name pos:line="84" pos:column="64">known_features<pos:position pos:line="84" pos:column="78"/></name><index pos:line="84" pos:column="78">[<expr><name pos:line="84" pos:column="79">i<pos:position pos:line="84" pos:column="80"/></name></expr>]<pos:position pos:line="84" pos:column="81"/></index></name><operator pos:line="84" pos:column="81">.<pos:position pos:line="84" pos:column="82"/></operator><name pos:line="84" pos:column="82">type<pos:position pos:line="84" pos:column="86"/></name></expr>]<pos:position pos:line="84" pos:column="87"/></index></name></expr></argument>,
						<argument><expr><name><name pos:line="85" pos:column="49">data<pos:position pos:line="85" pos:column="53"/></name><operator pos:line="85" pos:column="53">-&gt;<pos:position pos:line="85" pos:column="58"/></operator><name pos:line="85" pos:column="55">name<pos:position pos:line="85" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="61"/></expr_stmt>

				<if pos:line="87" pos:column="33">if <condition pos:line="87" pos:column="36">(<expr><operator pos:line="87" pos:column="37">(<pos:position pos:line="87" pos:column="38"/></operator><name pos:line="87" pos:column="38">new_feature<pos:position pos:line="87" pos:column="49"/></name> <operator pos:line="87" pos:column="50">=<pos:position pos:line="87" pos:column="51"/></operator> <operator pos:line="87" pos:column="52">(<pos:position pos:line="87" pos:column="53"/></operator><name pos:line="87" pos:column="53">featurelist_t<pos:position pos:line="87" pos:column="66"/></name> <operator pos:line="87" pos:column="67">*<pos:position pos:line="87" pos:column="68"/></operator><operator pos:line="87" pos:column="68">)<pos:position pos:line="87" pos:column="69"/></operator> <call><name pos:line="87" pos:column="70">malloc<pos:position pos:line="87" pos:column="76"/></name> <argument_list pos:line="87" pos:column="77">(<argument><expr><sizeof pos:line="87" pos:column="78">sizeof <argument_list pos:line="87" pos:column="85">(<argument><expr><name pos:line="87" pos:column="86">featurelist_t<pos:position pos:line="87" pos:column="99"/></name></expr></argument>)<pos:position pos:line="87" pos:column="100"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="87" pos:column="101"/></argument_list></call><operator pos:line="87" pos:column="101">)<pos:position pos:line="87" pos:column="102"/></operator> <operator pos:line="87" pos:column="103">==<pos:position pos:line="87" pos:column="105"/></operator> <name pos:line="87" pos:column="106">NULL<pos:position pos:line="87" pos:column="110"/></name></expr>)<pos:position pos:line="87" pos:column="111"/></condition><then pos:line="87" pos:column="111">
				<block pos:line="88" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="89" pos:column="41">char<pos:position pos:line="89" pos:column="45"/></name></type> <name><name pos:line="89" pos:column="46">errbuf<pos:position pos:line="89" pos:column="52"/></name><index pos:line="89" pos:column="52">[<expr><literal type="number" pos:line="89" pos:column="53">1024<pos:position pos:line="89" pos:column="57"/></literal></expr>]<pos:position pos:line="89" pos:column="58"/></index></name></decl>;<pos:position pos:line="89" pos:column="59"/></decl_stmt>
					<expr_stmt><expr><call><name pos:line="90" pos:column="41">ERROR<pos:position pos:line="90" pos:column="46"/></name> <argument_list pos:line="90" pos:column="47">(<argument><expr><literal type="string" pos:line="90" pos:column="48">"sensors plugin: malloc: %s"<pos:position pos:line="90" pos:column="76"/></literal></expr></argument>,
							<argument><expr><call><name pos:line="91" pos:column="57">sstrerror<pos:position pos:line="91" pos:column="66"/></name> <argument_list pos:line="91" pos:column="67">(<argument><expr><name pos:line="91" pos:column="68">errno<pos:position pos:line="91" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="75">errbuf<pos:position pos:line="91" pos:column="81"/></name></expr></argument>, <argument><expr><sizeof pos:line="91" pos:column="83">sizeof <argument_list pos:line="91" pos:column="90">(<argument><expr><name pos:line="91" pos:column="91">errbuf<pos:position pos:line="91" pos:column="97"/></name></expr></argument>)<pos:position pos:line="91" pos:column="98"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="91" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="101"/></expr_stmt>
					<break pos:line="92" pos:column="41">break;<pos:position pos:line="92" pos:column="47"/></break>
				}<pos:position pos:line="93" pos:column="34"/></block></then></if>

				<expr_stmt><expr><name><name pos:line="95" pos:column="33">new_feature<pos:position pos:line="95" pos:column="44"/></name><operator pos:line="95" pos:column="44">-&gt;<pos:position pos:line="95" pos:column="49"/></operator><name pos:line="95" pos:column="46">chip<pos:position pos:line="95" pos:column="50"/></name></name> <operator pos:line="95" pos:column="51">=<pos:position pos:line="95" pos:column="52"/></operator> <name pos:line="95" pos:column="53">chip<pos:position pos:line="95" pos:column="57"/></name></expr>;<pos:position pos:line="95" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="96" pos:column="33">new_feature<pos:position pos:line="96" pos:column="44"/></name><operator pos:line="96" pos:column="44">-&gt;<pos:position pos:line="96" pos:column="49"/></operator><name pos:line="96" pos:column="46">data<pos:position pos:line="96" pos:column="50"/></name></name> <operator pos:line="96" pos:column="51">=<pos:position pos:line="96" pos:column="52"/></operator> <name pos:line="96" pos:column="53">data<pos:position pos:line="96" pos:column="57"/></name></expr>;<pos:position pos:line="96" pos:column="58"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="97" pos:column="33">new_feature<pos:position pos:line="97" pos:column="44"/></name><operator pos:line="97" pos:column="44">-&gt;<pos:position pos:line="97" pos:column="49"/></operator><name pos:line="97" pos:column="46">type<pos:position pos:line="97" pos:column="50"/></name></name> <operator pos:line="97" pos:column="51">=<pos:position pos:line="97" pos:column="52"/></operator> <name><name pos:line="97" pos:column="53">known_features<pos:position pos:line="97" pos:column="67"/></name><index pos:line="97" pos:column="67">[<expr><name pos:line="97" pos:column="68">i<pos:position pos:line="97" pos:column="69"/></name></expr>]<pos:position pos:line="97" pos:column="70"/></index></name><operator pos:line="97" pos:column="70">.<pos:position pos:line="97" pos:column="71"/></operator><name pos:line="97" pos:column="71">type<pos:position pos:line="97" pos:column="75"/></name></expr>;<pos:position pos:line="97" pos:column="76"/></expr_stmt>
				<expr_stmt><expr><name><name pos:line="98" pos:column="33">new_feature<pos:position pos:line="98" pos:column="44"/></name><operator pos:line="98" pos:column="44">-&gt;<pos:position pos:line="98" pos:column="49"/></operator><name pos:line="98" pos:column="46">next<pos:position pos:line="98" pos:column="50"/></name></name> <operator pos:line="98" pos:column="51">=<pos:position pos:line="98" pos:column="52"/></operator> <name pos:line="98" pos:column="53">NULL<pos:position pos:line="98" pos:column="57"/></name></expr>;<pos:position pos:line="98" pos:column="58"/></expr_stmt>

				<if pos:line="100" pos:column="33">if <condition pos:line="100" pos:column="36">(<expr><name pos:line="100" pos:column="37">first_feature<pos:position pos:line="100" pos:column="50"/></name> <operator pos:line="100" pos:column="51">==<pos:position pos:line="100" pos:column="53"/></operator> <name pos:line="100" pos:column="54">NULL<pos:position pos:line="100" pos:column="58"/></name></expr>)<pos:position pos:line="100" pos:column="59"/></condition><then pos:line="100" pos:column="59">
				<block pos:line="101" pos:column="33">{
					<expr_stmt><expr><name pos:line="102" pos:column="41">first_feature<pos:position pos:line="102" pos:column="54"/></name> <operator pos:line="102" pos:column="55">=<pos:position pos:line="102" pos:column="56"/></operator> <name pos:line="102" pos:column="57">new_feature<pos:position pos:line="102" pos:column="68"/></name></expr>;<pos:position pos:line="102" pos:column="69"/></expr_stmt>
					<expr_stmt><expr><name pos:line="103" pos:column="41">last_feature<pos:position pos:line="103" pos:column="53"/></name>  <operator pos:line="103" pos:column="55">=<pos:position pos:line="103" pos:column="56"/></operator> <name pos:line="103" pos:column="57">new_feature<pos:position pos:line="103" pos:column="68"/></name></expr>;<pos:position pos:line="103" pos:column="69"/></expr_stmt>
				}<pos:position pos:line="104" pos:column="34"/></block></then>
				<else pos:line="105" pos:column="33">else
				<block pos:line="106" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="107" pos:column="41">last_feature<pos:position pos:line="107" pos:column="53"/></name><operator pos:line="107" pos:column="53">-&gt;<pos:position pos:line="107" pos:column="58"/></operator><name pos:line="107" pos:column="55">next<pos:position pos:line="107" pos:column="59"/></name></name> <operator pos:line="107" pos:column="60">=<pos:position pos:line="107" pos:column="61"/></operator> <name pos:line="107" pos:column="62">new_feature<pos:position pos:line="107" pos:column="73"/></name></expr>;<pos:position pos:line="107" pos:column="74"/></expr_stmt>
					<expr_stmt><expr><name pos:line="108" pos:column="41">last_feature<pos:position pos:line="108" pos:column="53"/></name> <operator pos:line="108" pos:column="54">=<pos:position pos:line="108" pos:column="55"/></operator> <name pos:line="108" pos:column="56">new_feature<pos:position pos:line="108" pos:column="67"/></name></expr>;<pos:position pos:line="108" pos:column="68"/></expr_stmt>
				}<pos:position pos:line="109" pos:column="34"/></block></else></if>

				<comment type="block" pos:line="111" pos:column="33">/* stop searching known features at first found */</comment>
				<break pos:line="112" pos:column="33">break;<pos:position pos:line="112" pos:column="39"/></break>
			}<pos:position pos:line="113" pos:column="26"/></block></for> <comment type="block" pos:line="113" pos:column="27">/* for i */</comment>
		}<pos:position pos:line="114" pos:column="18"/></block></while> <comment type="block" pos:line="114" pos:column="19">/* while sensors_get_all_features */</comment>
	}<pos:position pos:line="115" pos:column="10"/></block></while> <comment type="block" pos:line="115" pos:column="11">/* while sensors_get_detected_chips */</comment>

	<if pos:line="117" pos:column="9">if <condition pos:line="117" pos:column="12">(<expr><name pos:line="117" pos:column="13">first_feature<pos:position pos:line="117" pos:column="26"/></name> <operator pos:line="117" pos:column="27">==<pos:position pos:line="117" pos:column="29"/></operator> <name pos:line="117" pos:column="30">NULL<pos:position pos:line="117" pos:column="34"/></name></expr>)<pos:position pos:line="117" pos:column="35"/></condition><then pos:line="117" pos:column="35">
	<block pos:line="118" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="119" pos:column="17">sensors_cleanup<pos:position pos:line="119" pos:column="32"/></name> <argument_list pos:line="119" pos:column="33">()<pos:position pos:line="119" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="120" pos:column="17">INFO<pos:position pos:line="120" pos:column="21"/></name> <argument_list pos:line="120" pos:column="22">(<argument><expr><literal type="string" pos:line="120" pos:column="23">"sensors plugin: lm_sensors reports no "<pos:position pos:line="120" pos:column="63"/></literal>
				<literal type="string" pos:line="121" pos:column="33">"features. Data will not be collected."<pos:position pos:line="121" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="74"/></expr_stmt>
		<return pos:line="122" pos:column="17">return <expr><operator pos:line="122" pos:column="24">(<pos:position pos:line="122" pos:column="25"/></operator><operator pos:line="122" pos:column="25">-<pos:position pos:line="122" pos:column="26"/></operator><literal type="number" pos:line="122" pos:column="26">1<pos:position pos:line="122" pos:column="27"/></literal><operator pos:line="122" pos:column="27">)<pos:position pos:line="122" pos:column="28"/></operator></expr>;<pos:position pos:line="122" pos:column="29"/></return>
	}<pos:position pos:line="123" pos:column="10"/></block></then></if>

	<return pos:line="125" pos:column="9">return <expr><operator pos:line="125" pos:column="16">(<pos:position pos:line="125" pos:column="17"/></operator><literal type="number" pos:line="125" pos:column="17">0<pos:position pos:line="125" pos:column="18"/></literal><operator pos:line="125" pos:column="18">)<pos:position pos:line="125" pos:column="19"/></operator></expr>;<pos:position pos:line="125" pos:column="20"/></return>
}<pos:position pos:line="126" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1167_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tcsv_read_buffer<pos:position pos:line="1" pos:column="28"/></name> <parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">instance_definition_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">id<pos:position pos:line="1" pos:column="55"/></name></decl></parameter>,
        <parameter><decl><type><name pos:line="2" pos:column="9">char<pos:position pos:line="2" pos:column="13"/></name> <modifier pos:line="2" pos:column="14">*<pos:position pos:line="2" pos:column="15"/></modifier></type><name pos:line="2" pos:column="15">buffer<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">size_t<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">buffer_size<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier><modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">metrics<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">size_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">metrics_num<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">ptr<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">i<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* Remove newlines at the end of line. */</comment>
    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><name pos:line="11" pos:column="12">buffer_size<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&gt;<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="26">0<pos:position pos:line="11" pos:column="27"/></literal></expr>)<pos:position pos:line="11" pos:column="28"/></condition> <block pos:line="11" pos:column="29">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">buffer<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><name pos:line="12" pos:column="21">buffer_size<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">-<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr>]<pos:position pos:line="12" pos:column="37"/></index></name> <operator pos:line="12" pos:column="38">==<pos:position pos:line="12" pos:column="40"/></operator> <literal type="char" pos:line="12" pos:column="41">'\n'<pos:position pos:line="12" pos:column="45"/></literal><operator pos:line="12" pos:column="45">)<pos:position pos:line="12" pos:column="46"/></operator>
                <operator pos:line="13" pos:column="17">||<pos:position pos:line="13" pos:column="19"/></operator> <operator pos:line="13" pos:column="20">(<pos:position pos:line="13" pos:column="21"/></operator><name><name pos:line="13" pos:column="21">buffer<pos:position pos:line="13" pos:column="27"/></name><index pos:line="13" pos:column="27">[<expr><name pos:line="13" pos:column="28">buffer_size<pos:position pos:line="13" pos:column="39"/></name> <operator pos:line="13" pos:column="40">-<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr>]<pos:position pos:line="13" pos:column="44"/></index></name> <operator pos:line="13" pos:column="45">==<pos:position pos:line="13" pos:column="47"/></operator> <literal type="char" pos:line="13" pos:column="48">'\r'<pos:position pos:line="13" pos:column="52"/></literal><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator></expr>)<pos:position pos:line="13" pos:column="54"/></condition><then pos:line="13" pos:column="54"> <block pos:line="13" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">buffer<pos:position pos:line="14" pos:column="19"/></name><index pos:line="14" pos:column="19">[<expr><name pos:line="14" pos:column="20">buffer_size<pos:position pos:line="14" pos:column="31"/></name> <operator pos:line="14" pos:column="32">-<pos:position pos:line="14" pos:column="33"/></operator> <literal type="number" pos:line="14" pos:column="34">1<pos:position pos:line="14" pos:column="35"/></literal></expr>]<pos:position pos:line="14" pos:column="36"/></index></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <literal type="number" pos:line="14" pos:column="39">0<pos:position pos:line="14" pos:column="40"/></literal></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">buffer_size<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">--<pos:position pos:line="15" pos:column="26"/></operator></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then> <else pos:line="16" pos:column="11">else <block pos:line="16" pos:column="16">{
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>
        }<pos:position pos:line="18" pos:column="10"/></block></else></if>
    }<pos:position pos:line="19" pos:column="6"/></block></while>

    <comment type="block" pos:line="21" pos:column="5">/* Ignore empty lines. */</comment>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">buffer_size<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">==<pos:position pos:line="22" pos:column="24"/></operator> <literal type="number" pos:line="22" pos:column="25">0<pos:position pos:line="22" pos:column="26"/></literal><operator pos:line="22" pos:column="26">)<pos:position pos:line="22" pos:column="27"/></operator> <operator pos:line="22" pos:column="28">||<pos:position pos:line="22" pos:column="30"/></operator> <operator pos:line="22" pos:column="31">(<pos:position pos:line="22" pos:column="32"/></operator><name><name pos:line="22" pos:column="32">buffer<pos:position pos:line="22" pos:column="38"/></name><index pos:line="22" pos:column="38">[<expr><literal type="number" pos:line="22" pos:column="39">0<pos:position pos:line="22" pos:column="40"/></literal></expr>]<pos:position pos:line="22" pos:column="41"/></index></name> <operator pos:line="22" pos:column="42">==<pos:position pos:line="22" pos:column="44"/></operator> <literal type="char" pos:line="22" pos:column="45">'#'<pos:position pos:line="22" pos:column="48"/></literal><operator pos:line="22" pos:column="48">)<pos:position pos:line="22" pos:column="49"/></operator></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal><operator pos:line="23" pos:column="18">)<pos:position pos:line="23" pos:column="19"/></operator></expr>;<pos:position pos:line="23" pos:column="20"/></return></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* Count the number of fields. */</comment>
    <expr_stmt><expr><name pos:line="26" pos:column="5">metrics_num<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <literal type="number" pos:line="26" pos:column="19">1<pos:position pos:line="26" pos:column="20"/></literal></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
    <for pos:line="27" pos:column="5">for <control pos:line="27" pos:column="9">(<init><expr><name pos:line="27" pos:column="10">i<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>;<pos:position pos:line="27" pos:column="16"/></init> <condition><expr><name pos:line="27" pos:column="17">i<pos:position pos:line="27" pos:column="18"/></name> <operator pos:line="27" pos:column="19">&lt;<pos:position pos:line="27" pos:column="23"/></operator> <name pos:line="27" pos:column="21">buffer_size<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></condition> <incr><expr><name pos:line="27" pos:column="34">i<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">++<pos:position pos:line="27" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="27" pos:column="38"/></control> <block pos:line="27" pos:column="39">{
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">buffer<pos:position pos:line="28" pos:column="19"/></name><index pos:line="28" pos:column="19">[<expr><name pos:line="28" pos:column="20">i<pos:position pos:line="28" pos:column="21"/></name></expr>]<pos:position pos:line="28" pos:column="22"/></index></name> <operator pos:line="28" pos:column="23">==<pos:position pos:line="28" pos:column="25"/></operator> <literal type="char" pos:line="28" pos:column="26">','<pos:position pos:line="28" pos:column="29"/></literal></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">metrics_num<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">++<pos:position pos:line="29" pos:column="26"/></operator></expr>;<pos:position pos:line="29" pos:column="27"/></expr_stmt></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">metrics_num<pos:position pos:line="32" pos:column="20"/></name> <operator pos:line="32" pos:column="21">==<pos:position pos:line="32" pos:column="23"/></operator> <literal type="number" pos:line="32" pos:column="24">1<pos:position pos:line="32" pos:column="25"/></literal></expr>)<pos:position pos:line="32" pos:column="26"/></condition><then pos:line="32" pos:column="26"> <block pos:line="32" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">ERROR<pos:position pos:line="33" pos:column="14"/></name><argument_list pos:line="33" pos:column="14">(<argument><expr><literal type="string" pos:line="33" pos:column="15">"tail_csv plugin: last line of `%s' does not contain "<pos:position pos:line="33" pos:column="69"/></literal>
                <literal type="string" pos:line="34" pos:column="17">"enough values."<pos:position pos:line="34" pos:column="33"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="35">id<pos:position pos:line="34" pos:column="37"/></name><operator pos:line="34" pos:column="37">-&gt;<pos:position pos:line="34" pos:column="42"/></operator><name pos:line="34" pos:column="39">path<pos:position pos:line="34" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><operator pos:line="35" pos:column="17">-<pos:position pos:line="35" pos:column="18"/></operator><literal type="number" pos:line="35" pos:column="18">1<pos:position pos:line="35" pos:column="19"/></literal><operator pos:line="35" pos:column="19">)<pos:position pos:line="35" pos:column="20"/></operator></expr>;<pos:position pos:line="35" pos:column="21"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="38" pos:column="5">/* Create a list of all values */</comment>
    <expr_stmt><expr><name pos:line="39" pos:column="5">metrics<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <call><name pos:line="39" pos:column="15">calloc<pos:position pos:line="39" pos:column="21"/></name> <argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">metrics_num<pos:position pos:line="39" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="36">sizeof <argument_list pos:line="39" pos:column="43">(<argument><expr><operator pos:line="39" pos:column="44">*<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="45">metrics<pos:position pos:line="39" pos:column="52"/></name></expr></argument>)<pos:position pos:line="39" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="55"/></expr_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">metrics<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">==<pos:position pos:line="40" pos:column="19"/></operator> <name pos:line="40" pos:column="20">NULL<pos:position pos:line="40" pos:column="24"/></name></expr>)<pos:position pos:line="40" pos:column="25"/></condition><then pos:line="40" pos:column="25"> <block pos:line="40" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ERROR<pos:position pos:line="41" pos:column="14"/></name> <argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="string" pos:line="41" pos:column="16">"tail_csv plugin: calloc failed."<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><operator pos:line="42" pos:column="16">(<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="17">ENOMEM<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">)<pos:position pos:line="42" pos:column="24"/></operator></expr>;<pos:position pos:line="42" pos:column="25"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="45" pos:column="5">ptr<pos:position pos:line="45" pos:column="8"/></name> <operator pos:line="45" pos:column="9">=<pos:position pos:line="45" pos:column="10"/></operator> <name pos:line="45" pos:column="11">buffer<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">metrics<pos:position pos:line="46" pos:column="12"/></name><index pos:line="46" pos:column="12">[<expr><literal type="number" pos:line="46" pos:column="13">0<pos:position pos:line="46" pos:column="14"/></literal></expr>]<pos:position pos:line="46" pos:column="15"/></index></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <name pos:line="46" pos:column="18">ptr<pos:position pos:line="46" pos:column="21"/></name></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">i<pos:position pos:line="47" pos:column="6"/></name> <operator pos:line="47" pos:column="7">=<pos:position pos:line="47" pos:column="8"/></operator> <literal type="number" pos:line="47" pos:column="9">1<pos:position pos:line="47" pos:column="10"/></literal></expr>;<pos:position pos:line="47" pos:column="11"/></expr_stmt>
    <for pos:line="48" pos:column="5">for <control pos:line="48" pos:column="9">(<init><expr><name pos:line="48" pos:column="10">ptr<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">buffer<pos:position pos:line="48" pos:column="22"/></name></expr>;<pos:position pos:line="48" pos:column="23"/></init> <condition><expr><operator pos:line="48" pos:column="24">*<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">ptr<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">!=<pos:position pos:line="48" pos:column="31"/></operator> <literal type="number" pos:line="48" pos:column="32">0<pos:position pos:line="48" pos:column="33"/></literal></expr>;<pos:position pos:line="48" pos:column="34"/></condition> <incr><expr><name pos:line="48" pos:column="35">ptr<pos:position pos:line="48" pos:column="38"/></name><operator pos:line="48" pos:column="38">++<pos:position pos:line="48" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="41"/></control> <block pos:line="48" pos:column="42">{
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">*<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">ptr<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">!=<pos:position pos:line="49" pos:column="20"/></operator> <literal type="char" pos:line="49" pos:column="21">','<pos:position pos:line="49" pos:column="24"/></literal></expr>)<pos:position pos:line="49" pos:column="25"/></condition><then pos:line="49" pos:column="25">
            <block type="pseudo"><continue pos:line="50" pos:column="13">continue;<pos:position pos:line="50" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><operator pos:line="52" pos:column="9">*<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">ptr<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">=<pos:position pos:line="52" pos:column="15"/></operator> <literal type="number" pos:line="52" pos:column="16">0<pos:position pos:line="52" pos:column="17"/></literal></expr>;<pos:position pos:line="52" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">metrics<pos:position pos:line="53" pos:column="16"/></name><index pos:line="53" pos:column="16">[<expr><name pos:line="53" pos:column="17">i<pos:position pos:line="53" pos:column="18"/></name></expr>]<pos:position pos:line="53" pos:column="19"/></index></name> <operator pos:line="53" pos:column="20">=<pos:position pos:line="53" pos:column="21"/></operator> <name pos:line="53" pos:column="22">ptr<pos:position pos:line="53" pos:column="25"/></name> <operator pos:line="53" pos:column="26">+<pos:position pos:line="53" pos:column="27"/></operator> <literal type="number" pos:line="53" pos:column="28">1<pos:position pos:line="53" pos:column="29"/></literal></expr>;<pos:position pos:line="53" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">i<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">++<pos:position pos:line="54" pos:column="12"/></operator></expr>;<pos:position pos:line="54" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">assert<pos:position pos:line="56" pos:column="11"/></name> <argument_list pos:line="56" pos:column="12">(<argument><expr><name pos:line="56" pos:column="13">i<pos:position pos:line="56" pos:column="14"/></name> <operator pos:line="56" pos:column="15">==<pos:position pos:line="56" pos:column="17"/></operator> <name pos:line="56" pos:column="18">metrics_num<pos:position pos:line="56" pos:column="29"/></name></expr></argument>)<pos:position pos:line="56" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>

    <comment type="block" pos:line="58" pos:column="5">/* Register values */</comment>
    <for pos:line="59" pos:column="5">for <control pos:line="59" pos:column="9">(<init><expr><name pos:line="59" pos:column="10">i<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <literal type="number" pos:line="59" pos:column="14">0<pos:position pos:line="59" pos:column="15"/></literal></expr>;<pos:position pos:line="59" pos:column="16"/></init> <condition><expr><name pos:line="59" pos:column="17">i<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">&lt;<pos:position pos:line="59" pos:column="23"/></operator> <name><name pos:line="59" pos:column="21">id<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">-&gt;<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="25">metric_list_len<pos:position pos:line="59" pos:column="40"/></name></name></expr>;<pos:position pos:line="59" pos:column="41"/></condition> <incr><expr><operator pos:line="59" pos:column="42">++<pos:position pos:line="59" pos:column="44"/></operator><name pos:line="59" pos:column="44">i<pos:position pos:line="59" pos:column="45"/></name></expr></incr>)<pos:position pos:line="59" pos:column="46"/></control><block pos:line="59" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="60" pos:column="9">metric_definition_t<pos:position pos:line="60" pos:column="28"/></name> <modifier pos:line="60" pos:column="29">*<pos:position pos:line="60" pos:column="30"/></modifier></type><name pos:line="60" pos:column="30">md<pos:position pos:line="60" pos:column="32"/></name> <init pos:line="60" pos:column="33">= <expr><name><name pos:line="60" pos:column="35">id<pos:position pos:line="60" pos:column="37"/></name><operator pos:line="60" pos:column="37">-&gt;<pos:position pos:line="60" pos:column="42"/></operator><name pos:line="60" pos:column="39">metric_list<pos:position pos:line="60" pos:column="50"/></name><index pos:line="60" pos:column="50">[<expr><name pos:line="60" pos:column="51">i<pos:position pos:line="60" pos:column="52"/></name></expr>]<pos:position pos:line="60" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="60" pos:column="54"/></decl_stmt>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><call><name pos:line="62" pos:column="14">tcsv_check_index<pos:position pos:line="62" pos:column="30"/></name> <argument_list pos:line="62" pos:column="31">(<argument><expr><name><name pos:line="62" pos:column="32">md<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">-&gt;<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="36">value_from<pos:position pos:line="62" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="48">metrics_num<pos:position pos:line="62" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="61">md<pos:position pos:line="62" pos:column="63"/></name><operator pos:line="62" pos:column="63">-&gt;<pos:position pos:line="62" pos:column="68"/></operator><name pos:line="62" pos:column="65">name<pos:position pos:line="62" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call>
                <operator pos:line="63" pos:column="17">||<pos:position pos:line="63" pos:column="19"/></operator> <operator pos:line="63" pos:column="20">!<pos:position pos:line="63" pos:column="21"/></operator><call><name pos:line="63" pos:column="21">tcsv_check_index<pos:position pos:line="63" pos:column="37"/></name> <argument_list pos:line="63" pos:column="38">(<argument><expr><name><name pos:line="63" pos:column="39">id<pos:position pos:line="63" pos:column="41"/></name><operator pos:line="63" pos:column="41">-&gt;<pos:position pos:line="63" pos:column="46"/></operator><name pos:line="63" pos:column="43">time_from<pos:position pos:line="63" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="54">metrics_num<pos:position pos:line="63" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="67">md<pos:position pos:line="63" pos:column="69"/></name><operator pos:line="63" pos:column="69">-&gt;<pos:position pos:line="63" pos:column="74"/></operator><name pos:line="63" pos:column="71">name<pos:position pos:line="63" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="77"/></condition><then pos:line="63" pos:column="77">
            <block type="pseudo"><continue pos:line="64" pos:column="13">continue;<pos:position pos:line="64" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="66" pos:column="9">tcsv_read_metric<pos:position pos:line="66" pos:column="25"/></name> <argument_list pos:line="66" pos:column="26">(<argument><expr><name pos:line="66" pos:column="27">id<pos:position pos:line="66" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="31">md<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="35">metrics<pos:position pos:line="66" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="44">metrics_num<pos:position pos:line="66" pos:column="55"/></name></expr></argument>)<pos:position pos:line="66" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></for>

    <comment type="block" pos:line="69" pos:column="5">/* Free up resources */</comment>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">sfree<pos:position pos:line="70" pos:column="10"/></name> <argument_list pos:line="70" pos:column="11">(<argument><expr><name pos:line="70" pos:column="12">metrics<pos:position pos:line="70" pos:column="19"/></name></expr></argument>)<pos:position pos:line="70" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="21"/></expr_stmt>
    <return pos:line="71" pos:column="5">return <expr><operator pos:line="71" pos:column="12">(<pos:position pos:line="71" pos:column="13"/></operator><literal type="number" pos:line="71" pos:column="13">0<pos:position pos:line="71" pos:column="14"/></literal><operator pos:line="71" pos:column="14">)<pos:position pos:line="71" pos:column="15"/></operator></expr>;<pos:position pos:line="71" pos:column="16"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2267_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">fc_bit_write_create<pos:position pos:line="1" pos:column="31"/></name> <parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><specifier pos:line="1" pos:column="33">const<pos:position pos:line="1" pos:column="38"/></specifier> <name pos:line="1" pos:column="39">oconfig_item_t<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ci<pos:position pos:line="1" pos:column="57"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="59">/* {{{ */</comment>
    <parameter><decl><type><name pos:line="2" pos:column="5">void<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier><modifier pos:line="2" pos:column="11">*<pos:position pos:line="2" pos:column="12"/></modifier></type><name pos:line="2" pos:column="12">user_data<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">i<pos:position pos:line="4" pos:column="8"/></name></decl>;<pos:position pos:line="4" pos:column="9"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">fc_writer_t<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">plugin_list<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">plugin_list_len<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><expr><name pos:line="9" pos:column="8">i<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></init> <condition><expr><name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <name><name pos:line="9" pos:column="19">ci<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">children_num<pos:position pos:line="9" pos:column="35"/></name></name></expr>;<pos:position pos:line="9" pos:column="36"/></condition> <incr><expr><name pos:line="9" pos:column="37">i<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">++<pos:position pos:line="9" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="41"/></control>
  <block pos:line="10" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">oconfig_item_t<pos:position pos:line="11" pos:column="19"/></name> <modifier pos:line="11" pos:column="20">*<pos:position pos:line="11" pos:column="21"/></modifier></type><name pos:line="11" pos:column="21">child<pos:position pos:line="11" pos:column="26"/></name> <init pos:line="11" pos:column="27">= <expr><name><name pos:line="11" pos:column="29">ci<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">-&gt;<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="33">children<pos:position pos:line="11" pos:column="41"/></name></name> <operator pos:line="11" pos:column="42">+<pos:position pos:line="11" pos:column="43"/></operator> <name pos:line="11" pos:column="44">i<pos:position pos:line="11" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">fc_writer_t<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">temp<pos:position pos:line="12" pos:column="22"/></name></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">j<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">strcasecmp<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><literal type="string" pos:line="15" pos:column="21">"Plugin"<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="31">child<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">key<pos:position pos:line="15" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call> <operator pos:line="15" pos:column="43">!=<pos:position pos:line="15" pos:column="45"/></operator> <literal type="number" pos:line="15" pos:column="46">0<pos:position pos:line="15" pos:column="47"/></literal></expr>)<pos:position pos:line="15" pos:column="48"/></condition><then pos:line="15" pos:column="48">
    <block pos:line="16" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">ERROR<pos:position pos:line="17" pos:column="12"/></name> <argument_list pos:line="17" pos:column="13">(<argument><expr><literal type="string" pos:line="17" pos:column="14">"Filter subsystem: The built-in target `write' does not "<pos:position pos:line="17" pos:column="71"/></literal>
          <literal type="string" pos:line="18" pos:column="11">"support the configuration option `%s'."<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="19" pos:column="11">child<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">key<pos:position pos:line="19" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="23"/></expr_stmt>
      <continue pos:line="20" pos:column="7">continue;<pos:position pos:line="20" pos:column="16"/></continue>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">j<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">0<pos:position pos:line="23" pos:column="15"/></literal></expr>;<pos:position pos:line="23" pos:column="16"/></init> <condition><expr><name pos:line="23" pos:column="17">j<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">&lt;<pos:position pos:line="23" pos:column="23"/></operator> <name><name pos:line="23" pos:column="21">child<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">values_num<pos:position pos:line="23" pos:column="38"/></name></name></expr>;<pos:position pos:line="23" pos:column="39"/></condition> <incr><expr><name pos:line="23" pos:column="40">j<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">++<pos:position pos:line="23" pos:column="43"/></operator></expr></incr>)<pos:position pos:line="23" pos:column="44"/></control>
    <block pos:line="24" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="25" pos:column="7">char<pos:position pos:line="25" pos:column="11"/></name> <modifier pos:line="25" pos:column="12">*<pos:position pos:line="25" pos:column="13"/></modifier></type><name pos:line="25" pos:column="13">plugin<pos:position pos:line="25" pos:column="19"/></name></decl>;<pos:position pos:line="25" pos:column="20"/></decl_stmt>

      <if pos:line="27" pos:column="7">if <condition pos:line="27" pos:column="10">(<expr><name><name pos:line="27" pos:column="11">child<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">values<pos:position pos:line="27" pos:column="24"/></name><index pos:line="27" pos:column="24">[<expr><name pos:line="27" pos:column="25">j<pos:position pos:line="27" pos:column="26"/></name></expr>]<pos:position pos:line="27" pos:column="27"/></index></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">type<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">!=<pos:position pos:line="27" pos:column="35"/></operator> <name pos:line="27" pos:column="36">OCONFIG_TYPE_STRING<pos:position pos:line="27" pos:column="55"/></name></expr>)<pos:position pos:line="27" pos:column="56"/></condition><then pos:line="27" pos:column="56">
      <block pos:line="28" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">ERROR<pos:position pos:line="29" pos:column="14"/></name> <argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="string" pos:line="29" pos:column="16">"Filter subsystem: Built-in target `write': "<pos:position pos:line="29" pos:column="61"/></literal>
            <literal type="string" pos:line="30" pos:column="13">"The `Plugin' option accepts only string arguments."<pos:position pos:line="30" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="67"/></expr_stmt>
        <continue pos:line="31" pos:column="9">continue;<pos:position pos:line="31" pos:column="18"/></continue>
      }<pos:position pos:line="32" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="33" pos:column="7">plugin<pos:position pos:line="33" pos:column="13"/></name> <operator pos:line="33" pos:column="14">=<pos:position pos:line="33" pos:column="15"/></operator> <name><name pos:line="33" pos:column="16">child<pos:position pos:line="33" pos:column="21"/></name><operator pos:line="33" pos:column="21">-&gt;<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="23">values<pos:position pos:line="33" pos:column="29"/></name><index pos:line="33" pos:column="29">[<expr><name pos:line="33" pos:column="30">j<pos:position pos:line="33" pos:column="31"/></name></expr>]<pos:position pos:line="33" pos:column="32"/></index></name><operator pos:line="33" pos:column="32">.<pos:position pos:line="33" pos:column="33"/></operator><name><name pos:line="33" pos:column="33">value<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">.<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">string<pos:position pos:line="33" pos:column="45"/></name></name></expr>;<pos:position pos:line="33" pos:column="46"/></expr_stmt>

      <expr_stmt><expr><name pos:line="35" pos:column="7">temp<pos:position pos:line="35" pos:column="11"/></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">fc_writer_t<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">*<pos:position pos:line="35" pos:column="28"/></operator><operator pos:line="35" pos:column="28">)<pos:position pos:line="35" pos:column="29"/></operator> <call><name pos:line="35" pos:column="30">realloc<pos:position pos:line="35" pos:column="37"/></name> <argument_list pos:line="35" pos:column="38">(<argument><expr><name pos:line="35" pos:column="39">plugin_list<pos:position pos:line="35" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="52">(<pos:position pos:line="35" pos:column="53"/></operator><name pos:line="35" pos:column="53">plugin_list_len<pos:position pos:line="35" pos:column="68"/></name> <operator pos:line="35" pos:column="69">+<pos:position pos:line="35" pos:column="70"/></operator> <literal type="number" pos:line="35" pos:column="71">2<pos:position pos:line="35" pos:column="72"/></literal><operator pos:line="35" pos:column="72">)<pos:position pos:line="35" pos:column="73"/></operator>
          <operator pos:line="36" pos:column="11">*<pos:position pos:line="36" pos:column="12"/></operator> <operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><sizeof pos:line="36" pos:column="14">sizeof <argument_list pos:line="36" pos:column="21">(<argument><expr><operator pos:line="36" pos:column="22">*<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">plugin_list<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></sizeof><operator pos:line="36" pos:column="35">)<pos:position pos:line="36" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
      <if pos:line="37" pos:column="7">if <condition pos:line="37" pos:column="10">(<expr><name pos:line="37" pos:column="11">temp<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">==<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">NULL<pos:position pos:line="37" pos:column="23"/></name></expr>)<pos:position pos:line="37" pos:column="24"/></condition><then pos:line="37" pos:column="24">
      <block pos:line="38" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ERROR<pos:position pos:line="39" pos:column="14"/></name> <argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="string" pos:line="39" pos:column="16">"fc_bit_write_create: realloc failed."<pos:position pos:line="39" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="56"/></expr_stmt>
        <continue pos:line="40" pos:column="9">continue;<pos:position pos:line="40" pos:column="18"/></continue>
      }<pos:position pos:line="41" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name pos:line="42" pos:column="7">plugin_list<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="21">temp<pos:position pos:line="42" pos:column="25"/></name></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>

      <expr_stmt><expr><name><name pos:line="44" pos:column="7">plugin_list<pos:position pos:line="44" pos:column="18"/></name><index pos:line="44" pos:column="18">[<expr><name pos:line="44" pos:column="19">plugin_list_len<pos:position pos:line="44" pos:column="34"/></name></expr>]<pos:position pos:line="44" pos:column="35"/></index></name><operator pos:line="44" pos:column="35">.<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">plugin<pos:position pos:line="44" pos:column="42"/></name> <operator pos:line="44" pos:column="43">=<pos:position pos:line="44" pos:column="44"/></operator> <call><name pos:line="44" pos:column="45">fc_strdup<pos:position pos:line="44" pos:column="54"/></name> <argument_list pos:line="44" pos:column="55">(<argument><expr><name pos:line="44" pos:column="56">plugin<pos:position pos:line="44" pos:column="62"/></name></expr></argument>)<pos:position pos:line="44" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="64"/></expr_stmt>
      <if pos:line="45" pos:column="7">if <condition pos:line="45" pos:column="10">(<expr><name><name pos:line="45" pos:column="11">plugin_list<pos:position pos:line="45" pos:column="22"/></name><index pos:line="45" pos:column="22">[<expr><name pos:line="45" pos:column="23">plugin_list_len<pos:position pos:line="45" pos:column="38"/></name></expr>]<pos:position pos:line="45" pos:column="39"/></index></name><operator pos:line="45" pos:column="39">.<pos:position pos:line="45" pos:column="40"/></operator><name pos:line="45" pos:column="40">plugin<pos:position pos:line="45" pos:column="46"/></name> <operator pos:line="45" pos:column="47">==<pos:position pos:line="45" pos:column="49"/></operator> <name pos:line="45" pos:column="50">NULL<pos:position pos:line="45" pos:column="54"/></name></expr>)<pos:position pos:line="45" pos:column="55"/></condition><then pos:line="45" pos:column="55">
      <block pos:line="46" pos:column="7">{
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">ERROR<pos:position pos:line="47" pos:column="14"/></name> <argument_list pos:line="47" pos:column="15">(<argument><expr><literal type="string" pos:line="47" pos:column="16">"fc_bit_write_create: fc_strdup failed."<pos:position pos:line="47" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
        <continue pos:line="48" pos:column="9">continue;<pos:position pos:line="48" pos:column="18"/></continue>
      }<pos:position pos:line="49" pos:column="8"/></block></then></if>
      <expr_stmt><expr><call><name pos:line="50" pos:column="7">C_COMPLAIN_INIT<pos:position pos:line="50" pos:column="22"/></name> <argument_list pos:line="50" pos:column="23">(<argument><expr><operator pos:line="50" pos:column="24">&amp;<pos:position pos:line="50" pos:column="29"/></operator><name><name pos:line="50" pos:column="25">plugin_list<pos:position pos:line="50" pos:column="36"/></name><index pos:line="50" pos:column="36">[<expr><name pos:line="50" pos:column="37">plugin_list_len<pos:position pos:line="50" pos:column="52"/></name></expr>]<pos:position pos:line="50" pos:column="53"/></index></name><operator pos:line="50" pos:column="53">.<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="54">complaint<pos:position pos:line="50" pos:column="63"/></name></expr></argument>)<pos:position pos:line="50" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="65"/></expr_stmt>
      <expr_stmt><expr><name pos:line="51" pos:column="7">plugin_list_len<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">++<pos:position pos:line="51" pos:column="24"/></operator></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="52" pos:column="7">plugin_list<pos:position pos:line="52" pos:column="18"/></name><index pos:line="52" pos:column="18">[<expr><name pos:line="52" pos:column="19">plugin_list_len<pos:position pos:line="52" pos:column="34"/></name></expr>]<pos:position pos:line="52" pos:column="35"/></index></name><operator pos:line="52" pos:column="35">.<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">plugin<pos:position pos:line="52" pos:column="42"/></name> <operator pos:line="52" pos:column="43">=<pos:position pos:line="52" pos:column="44"/></operator> <name pos:line="52" pos:column="45">NULL<pos:position pos:line="52" pos:column="49"/></name></expr>;<pos:position pos:line="52" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></for> <comment type="block" pos:line="53" pos:column="7">/* for (j = 0; j &lt; child-&gt;values_num; j++) */</comment>
  }<pos:position pos:line="54" pos:column="4"/></block></for> <comment type="block" pos:line="54" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <expr_stmt><expr><operator pos:line="56" pos:column="3">*<pos:position pos:line="56" pos:column="4"/></operator><name pos:line="56" pos:column="4">user_data<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <name pos:line="56" pos:column="16">plugin_list<pos:position pos:line="56" pos:column="27"/></name></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>

  <return pos:line="58" pos:column="3">return <expr><operator pos:line="58" pos:column="10">(<pos:position pos:line="58" pos:column="11"/></operator><literal type="number" pos:line="58" pos:column="11">0<pos:position pos:line="58" pos:column="12"/></literal><operator pos:line="58" pos:column="12">)<pos:position pos:line="58" pos:column="13"/></operator></expr>;<pos:position pos:line="58" pos:column="14"/></return>
}<pos:position pos:line="59" pos:column="2"/></block></function></unit>

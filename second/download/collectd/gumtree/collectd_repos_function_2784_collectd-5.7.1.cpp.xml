<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2784_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">my_read<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list> <block pos:line="1" pos:column="26">{
  <comment type="block" pos:line="2" pos:column="3">/* do the magic to read the data */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">gauge_t<pos:position pos:line="3" pos:column="10"/></name></type> <name pos:line="3" pos:column="11">value<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><call><name pos:line="3" pos:column="19">random<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">()<pos:position pos:line="3" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">my_submit<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">value<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call> <operator pos:line="5" pos:column="24">!=<pos:position pos:line="5" pos:column="26"/></operator> <literal type="number" pos:line="5" pos:column="27">0<pos:position pos:line="5" pos:column="28"/></literal></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="5">WARNING<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><literal type="string" pos:line="6" pos:column="13">"myplugin plugin: Dispatching a random value failed."<pos:position pos:line="6" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt></block></then></if>

  <comment type="block" pos:line="8" pos:column="3">/* A return value != 0 indicates an error and the plugin will be skipped
   * for an increasing amount of time. */</comment>
  <return pos:line="10" pos:column="3">return <expr><literal type="number" pos:line="10" pos:column="10">0<pos:position pos:line="10" pos:column="11"/></literal></expr>;<pos:position pos:line="10" pos:column="12"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

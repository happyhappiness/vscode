<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1183_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mqtt_init<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list> <block pos:line="1" pos:column="28">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">mosquitto_lib_init<pos:position pos:line="2" pos:column="21"/></name><argument_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="24"/></expr_stmt>

  <for pos:line="4" pos:column="3">for <control pos:line="4" pos:column="7">(<init><decl><type><name pos:line="4" pos:column="8">size_t<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">i<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></init> <condition><expr><name pos:line="4" pos:column="22">i<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="26">subscribers_num<pos:position pos:line="4" pos:column="41"/></name></expr>;<pos:position pos:line="4" pos:column="42"/></condition> <incr><expr><name pos:line="4" pos:column="43">i<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">++<pos:position pos:line="4" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="4" pos:column="47"/></control> <block pos:line="4" pos:column="48">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">status<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">subscribers<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><name pos:line="7" pos:column="21">i<pos:position pos:line="7" pos:column="22"/></name></expr>]<pos:position pos:line="7" pos:column="23"/></index></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">loop<pos:position pos:line="7" pos:column="29"/></name></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
      <block type="pseudo"><continue pos:line="8" pos:column="7">continue;<pos:position pos:line="8" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">status<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">plugin_thread_create<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><operator pos:line="10" pos:column="35">&amp;<pos:position pos:line="10" pos:column="40"/></operator><name><name pos:line="10" pos:column="36">subscribers<pos:position pos:line="10" pos:column="47"/></name><index pos:line="10" pos:column="47">[<expr><name pos:line="10" pos:column="48">i<pos:position pos:line="10" pos:column="49"/></name></expr>]<pos:position pos:line="10" pos:column="50"/></index></name><operator pos:line="10" pos:column="50">-&gt;<pos:position pos:line="10" pos:column="55"/></operator><name pos:line="10" pos:column="52">thread<pos:position pos:line="10" pos:column="58"/></name></expr></argument>,
                                  <comment type="block" pos:line="11" pos:column="35">/* attrs = */</comment> <argument><expr><name pos:line="11" pos:column="49">NULL<pos:position pos:line="11" pos:column="53"/></name></expr></argument>,
                                  <comment type="block" pos:line="12" pos:column="35">/* func  = */</comment> <argument><expr><name pos:line="12" pos:column="49">subscribers_thread<pos:position pos:line="12" pos:column="67"/></name></expr></argument>,
                                  <comment type="block" pos:line="13" pos:column="35">/* args  = */</comment> <argument><expr><name><name pos:line="13" pos:column="49">subscribers<pos:position pos:line="13" pos:column="60"/></name><index pos:line="13" pos:column="60">[<expr><name pos:line="13" pos:column="61">i<pos:position pos:line="13" pos:column="62"/></name></expr>]<pos:position pos:line="13" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="65"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">!=<pos:position pos:line="14" pos:column="18"/></operator> <literal type="number" pos:line="14" pos:column="19">0<pos:position pos:line="14" pos:column="20"/></literal></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
      <decl_stmt><decl><type><name pos:line="15" pos:column="7">char<pos:position pos:line="15" pos:column="11"/></name></type> <name><name pos:line="15" pos:column="12">errbuf<pos:position pos:line="15" pos:column="18"/></name><index pos:line="15" pos:column="18">[<expr><literal type="number" pos:line="15" pos:column="19">1024<pos:position pos:line="15" pos:column="23"/></literal></expr>]<pos:position pos:line="15" pos:column="24"/></index></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
      <expr_stmt><expr><call><name pos:line="16" pos:column="7">ERROR<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><literal type="string" pos:line="16" pos:column="13">"mqtt plugin: pthread_create failed: %s"<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>,
            <argument><expr><call><name pos:line="17" pos:column="13">sstrerror<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">errno<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">errbuf<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="38">sizeof<argument_list pos:line="17" pos:column="44">(<argument><expr><name pos:line="17" pos:column="45">errbuf<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
      <continue pos:line="18" pos:column="7">continue;<pos:position pos:line="18" pos:column="16"/></continue>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></for>

  <return pos:line="22" pos:column="3">return <expr><operator pos:line="22" pos:column="10">(<pos:position pos:line="22" pos:column="11"/></operator><literal type="number" pos:line="22" pos:column="11">0<pos:position pos:line="22" pos:column="12"/></literal><operator pos:line="22" pos:column="12">)<pos:position pos:line="22" pos:column="13"/></operator></expr>;<pos:position pos:line="22" pos:column="14"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

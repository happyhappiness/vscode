<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1089_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">data_volume_usage_t<pos:position pos:line="1" pos:column="27"/></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">get_volume_usage<pos:position pos:line="1" pos:column="45"/></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">cfg_volume_usage_t<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">cvu<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="71">/* {{{ */</comment>
                                             <parameter><decl><type><specifier pos:line="2" pos:column="46">const<pos:position pos:line="2" pos:column="51"/></specifier> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="58">name<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list> <block pos:line="2" pos:column="64">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">data_volume_usage_t<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">last<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><name pos:line="4" pos:column="3">data_volume_usage_t<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><operator pos:line="4" pos:column="24">new<pos:position pos:line="4" pos:column="27"/></operator></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">ignore_capacity<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">ignore_snapshot<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><literal type="number" pos:line="7" pos:column="25">0<pos:position pos:line="7" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">cvu<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator> <operator pos:line="9" pos:column="21">||<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">name<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">==<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">(<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">)<pos:position pos:line="10" pos:column="18"/></operator></expr>;<pos:position pos:line="10" pos:column="19"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="12" pos:column="3">last<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <name><name pos:line="12" pos:column="10">cvu<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">volumes<pos:position pos:line="12" pos:column="22"/></name></name></expr>;<pos:position pos:line="12" pos:column="23"/></expr_stmt>
  <while pos:line="13" pos:column="3">while <condition pos:line="13" pos:column="9">(<expr><name pos:line="13" pos:column="10">last<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">!=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">NULL<pos:position pos:line="13" pos:column="22"/></name></expr>)<pos:position pos:line="13" pos:column="23"/></condition> <block pos:line="13" pos:column="24">{
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">strcmp<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name><name pos:line="14" pos:column="16">last<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">-&gt;<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="22">name<pos:position pos:line="14" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="28">name<pos:position pos:line="14" pos:column="32"/></name></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call> <operator pos:line="14" pos:column="34">==<pos:position pos:line="14" pos:column="36"/></operator> <literal type="number" pos:line="14" pos:column="37">0<pos:position pos:line="14" pos:column="38"/></literal></expr>)<pos:position pos:line="14" pos:column="39"/></condition><then pos:line="14" pos:column="39">
      <block type="pseudo"><return pos:line="15" pos:column="7">return <expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">last<pos:position pos:line="15" pos:column="19"/></name><operator pos:line="15" pos:column="19">)<pos:position pos:line="15" pos:column="20"/></operator></expr>;<pos:position pos:line="15" pos:column="21"/></return></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">last<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">-&gt;<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="15">next<pos:position pos:line="17" pos:column="19"/></name></name> <operator pos:line="17" pos:column="20">==<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
      <block type="pseudo"><break pos:line="18" pos:column="7">break;<pos:position pos:line="18" pos:column="13"/></break></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">last<pos:position pos:line="20" pos:column="9"/></name> <operator pos:line="20" pos:column="10">=<pos:position pos:line="20" pos:column="11"/></operator> <name><name pos:line="20" pos:column="12">last<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">next<pos:position pos:line="20" pos:column="22"/></name></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
  }<pos:position pos:line="21" pos:column="4"/></block></while>

  <comment type="block" pos:line="23" pos:column="3">/* Check the ignorelists. If *both* tell us to ignore a volume, return NULL.
   */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">ignore_capacity<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">ignorelist_match<pos:position pos:line="25" pos:column="37"/></name><argument_list pos:line="25" pos:column="37">(<argument><expr><name><name pos:line="25" pos:column="38">cvu<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">-&gt;<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="43">il_capacity<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">name<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
  <expr_stmt><expr><name pos:line="26" pos:column="3">ignore_snapshot<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">=<pos:position pos:line="26" pos:column="20"/></operator> <call><name pos:line="26" pos:column="21">ignorelist_match<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">(<argument><expr><name><name pos:line="26" pos:column="38">cvu<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">-&gt;<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="43">il_snapshot<pos:position pos:line="26" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="56">name<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><operator pos:line="27" pos:column="7">(<pos:position pos:line="27" pos:column="8"/></operator><name pos:line="27" pos:column="8">ignore_capacity<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">!=<pos:position pos:line="27" pos:column="26"/></operator> <literal type="number" pos:line="27" pos:column="27">0<pos:position pos:line="27" pos:column="28"/></literal><operator pos:line="27" pos:column="28">)<pos:position pos:line="27" pos:column="29"/></operator> <operator pos:line="27" pos:column="30">&amp;&amp;<pos:position pos:line="27" pos:column="40"/></operator> <operator pos:line="27" pos:column="33">(<pos:position pos:line="27" pos:column="34"/></operator><name pos:line="27" pos:column="34">ignore_snapshot<pos:position pos:line="27" pos:column="49"/></name> <operator pos:line="27" pos:column="50">!=<pos:position pos:line="27" pos:column="52"/></operator> <literal type="number" pos:line="27" pos:column="53">0<pos:position pos:line="27" pos:column="54"/></literal><operator pos:line="27" pos:column="54">)<pos:position pos:line="27" pos:column="55"/></operator></expr>)<pos:position pos:line="27" pos:column="56"/></condition><then pos:line="27" pos:column="56">
    <block type="pseudo"><return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">NULL<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">)<pos:position pos:line="28" pos:column="18"/></operator></expr>;<pos:position pos:line="28" pos:column="19"/></return></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/* Not found: allocate. */</comment>
  <expr_stmt><expr><operator pos:line="31" pos:column="3">new<pos:position pos:line="31" pos:column="6"/></operator> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <call><name pos:line="31" pos:column="9">calloc<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">1<pos:position pos:line="31" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="19">sizeof<argument_list pos:line="31" pos:column="25">(<argument><expr><operator pos:line="31" pos:column="26">*<pos:position pos:line="31" pos:column="27"/></operator><operator pos:line="31" pos:column="27">new<pos:position pos:line="31" pos:column="30"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><operator pos:line="32" pos:column="7">new<pos:position pos:line="32" pos:column="10"/></operator> <operator pos:line="32" pos:column="11">==<pos:position pos:line="32" pos:column="13"/></operator> <name pos:line="32" pos:column="14">NULL<pos:position pos:line="32" pos:column="18"/></name></expr>)<pos:position pos:line="32" pos:column="19"/></condition><then pos:line="32" pos:column="19">
    <block type="pseudo"><return pos:line="33" pos:column="5">return <expr><operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">NULL<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">)<pos:position pos:line="33" pos:column="18"/></operator></expr>;<pos:position pos:line="33" pos:column="19"/></return></block></then></if>
  <expr_stmt><expr><operator pos:line="34" pos:column="3">new<pos:position pos:line="34" pos:column="6"/></operator><operator pos:line="34" pos:column="6">-&gt;<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="8">next<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <name pos:line="34" pos:column="15">NULL<pos:position pos:line="34" pos:column="19"/></name></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>

  <expr_stmt><expr><operator pos:line="36" pos:column="3">new<pos:position pos:line="36" pos:column="6"/></operator><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">name<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">strdup<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">name<pos:position pos:line="36" pos:column="26"/></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
  <if pos:line="37" pos:column="3">if <condition pos:line="37" pos:column="6">(<expr><operator pos:line="37" pos:column="7">new<pos:position pos:line="37" pos:column="10"/></operator><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">name<pos:position pos:line="37" pos:column="16"/></name> <operator pos:line="37" pos:column="17">==<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">NULL<pos:position pos:line="37" pos:column="24"/></name></expr>)<pos:position pos:line="37" pos:column="25"/></condition><then pos:line="37" pos:column="25"> <block pos:line="37" pos:column="26">{
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sfree<pos:position pos:line="38" pos:column="10"/></name><argument_list pos:line="38" pos:column="10">(<argument><expr><operator pos:line="38" pos:column="11">new<pos:position pos:line="38" pos:column="14"/></operator></expr></argument>)<pos:position pos:line="38" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="16"/></expr_stmt>
    <return pos:line="39" pos:column="5">return <expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">NULL<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">)<pos:position pos:line="39" pos:column="18"/></operator></expr>;<pos:position pos:line="39" pos:column="19"/></return>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name pos:line="42" pos:column="7">ignore_capacity<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">==<pos:position pos:line="42" pos:column="25"/></operator> <literal type="number" pos:line="42" pos:column="26">0<pos:position pos:line="42" pos:column="27"/></literal></expr>)<pos:position pos:line="42" pos:column="28"/></condition><then pos:line="42" pos:column="28">
    <block type="pseudo"><expr_stmt><expr><operator pos:line="43" pos:column="5">new<pos:position pos:line="43" pos:column="8"/></operator><operator pos:line="43" pos:column="8">-&gt;<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="10">flags<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">|=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">CFG_VOLUME_USAGE_DF<pos:position pos:line="43" pos:column="38"/></name></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt></block></then></if>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">ignore_snapshot<pos:position pos:line="44" pos:column="22"/></name> <operator pos:line="44" pos:column="23">==<pos:position pos:line="44" pos:column="25"/></operator> <literal type="number" pos:line="44" pos:column="26">0<pos:position pos:line="44" pos:column="27"/></literal></expr>)<pos:position pos:line="44" pos:column="28"/></condition><then pos:line="44" pos:column="28"> <block pos:line="44" pos:column="29">{
    <expr_stmt><expr><operator pos:line="45" pos:column="5">new<pos:position pos:line="45" pos:column="8"/></operator><operator pos:line="45" pos:column="8">-&gt;<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="10">flags<pos:position pos:line="45" pos:column="15"/></name> <operator pos:line="45" pos:column="16">|=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">CFG_VOLUME_USAGE_SNAP<pos:position pos:line="45" pos:column="40"/></name></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="46" pos:column="5">new<pos:position pos:line="46" pos:column="8"/></operator><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">snap_query<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">=<pos:position pos:line="46" pos:column="22"/></operator> <call><name pos:line="46" pos:column="23">na_elem_new<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><literal type="string" pos:line="46" pos:column="35">"snapshot-list-info"<pos:position pos:line="46" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">na_child_add_string<pos:position pos:line="47" pos:column="24"/></name><argument_list pos:line="47" pos:column="24">(<argument><expr><operator pos:line="47" pos:column="25">new<pos:position pos:line="47" pos:column="28"/></operator><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">snap_query<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="42">"target-type"<pos:position pos:line="47" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="57">"volume"<pos:position pos:line="47" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">na_child_add_string<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><operator pos:line="48" pos:column="25">new<pos:position pos:line="48" pos:column="28"/></operator><operator pos:line="48" pos:column="28">-&gt;<pos:position pos:line="48" pos:column="33"/></operator><name pos:line="48" pos:column="30">snap_query<pos:position pos:line="48" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="42">"target-name"<pos:position pos:line="48" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="57">name<pos:position pos:line="48" pos:column="61"/></name></expr></argument>)<pos:position pos:line="48" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="63"/></expr_stmt>
  }<pos:position pos:line="49" pos:column="4"/></block></then> <else pos:line="49" pos:column="5">else <block pos:line="49" pos:column="10">{
    <expr_stmt><expr><operator pos:line="50" pos:column="5">new<pos:position pos:line="50" pos:column="8"/></operator><operator pos:line="50" pos:column="8">-&gt;<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="10">snap_query<pos:position pos:line="50" pos:column="20"/></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">NULL<pos:position pos:line="50" pos:column="27"/></name></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt>
  }<pos:position pos:line="51" pos:column="4"/></block></else></if>

  <comment type="block" pos:line="53" pos:column="3">/* Add to end of list. */</comment>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">last<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">==<pos:position pos:line="54" pos:column="14"/></operator> <name pos:line="54" pos:column="15">NULL<pos:position pos:line="54" pos:column="19"/></name></expr>)<pos:position pos:line="54" pos:column="20"/></condition><then pos:line="54" pos:column="20">
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="5">cvu<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">-&gt;<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="10">volumes<pos:position pos:line="55" pos:column="17"/></name></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <operator pos:line="55" pos:column="20">new<pos:position pos:line="55" pos:column="23"/></operator></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt></block></then>
  <else pos:line="56" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="5">last<pos:position pos:line="57" pos:column="9"/></name><operator pos:line="57" pos:column="9">-&gt;<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="11">next<pos:position pos:line="57" pos:column="15"/></name></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <operator pos:line="57" pos:column="18">new<pos:position pos:line="57" pos:column="21"/></operator></expr>;<pos:position pos:line="57" pos:column="22"/></expr_stmt></block></else></if>

  <return pos:line="59" pos:column="3">return <expr><operator pos:line="59" pos:column="10">(<pos:position pos:line="59" pos:column="11"/></operator><operator pos:line="59" pos:column="11">new<pos:position pos:line="59" pos:column="14"/></operator><operator pos:line="59" pos:column="14">)<pos:position pos:line="59" pos:column="15"/></operator></expr>;<pos:position pos:line="59" pos:column="16"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_896_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_threads_on_core<pos:position pos:line="1" pos:column="31"/></name><parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">unsigned<pos:position pos:line="1" pos:column="40"/></name> <name pos:line="1" pos:column="41">int<pos:position pos:line="1" pos:column="44"/></name></type> <name pos:line="1" pos:column="45">cpu<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <block pos:line="1" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">path<pos:position pos:line="2" pos:column="12"/></name><index pos:line="2" pos:column="12">[<expr><literal type="number" pos:line="2" pos:column="13">80<pos:position pos:line="2" pos:column="15"/></literal></expr>]<pos:position pos:line="2" pos:column="16"/></index></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">FILE<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier></type><name pos:line="3" pos:column="9">filep<pos:position pos:line="3" pos:column="14"/></name></decl>;<pos:position pos:line="3" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">sib1<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">sib2<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">matches<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name pos:line="6" pos:column="8">character<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">ssnprintf<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name pos:line="8" pos:column="13">path<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="19">sizeof<argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">path<pos:position pos:line="8" pos:column="30"/></name></expr></argument>)<pos:position pos:line="8" pos:column="31"/></argument_list></sizeof></expr></argument>,
            <argument><expr><literal type="string" pos:line="9" pos:column="13">"/sys/devices/system/cpu/cpu%d/topology/thread_siblings_list"<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="76">cpu<pos:position pos:line="9" pos:column="79"/></name></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="81"/></expr_stmt>
  <expr_stmt><expr><name pos:line="10" pos:column="3">filep<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">fopen<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">path<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"r"<pos:position pos:line="10" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><operator pos:line="11" pos:column="7">!<pos:position pos:line="11" pos:column="8"/></operator><name pos:line="11" pos:column="8">filep<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14"> <block pos:line="11" pos:column="15">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"turbostat plugin: Failed to open '%s'"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="52">path<pos:position pos:line="12" pos:column="56"/></name></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">-<pos:position pos:line="13" pos:column="13"/></operator><literal type="number" pos:line="13" pos:column="13">1<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></return>
  }<pos:position pos:line="14" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="15" pos:column="3">/*
   * file format:
   * if a pair of number with a character between: 2 siblings (eg. 1-2, or 1,4)
   * otherwinse 1 sibling (self).
   */</comment>
  <expr_stmt><expr><name pos:line="20" pos:column="3">matches<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <call><name pos:line="20" pos:column="13">fscanf<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">filep<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"%d%c%d\n"<pos:position pos:line="20" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="20" pos:column="39">&amp;<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="40">sib1<pos:position pos:line="20" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="46">&amp;<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="47">character<pos:position pos:line="20" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="58">&amp;<pos:position pos:line="20" pos:column="63"/></operator><name pos:line="20" pos:column="59">sib2<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">fclose<pos:position pos:line="22" pos:column="9"/></name><argument_list pos:line="22" pos:column="9">(<argument><expr><name pos:line="22" pos:column="10">filep<pos:position pos:line="22" pos:column="15"/></name></expr></argument>)<pos:position pos:line="22" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="17"/></expr_stmt>

  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">matches<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">==<pos:position pos:line="24" pos:column="17"/></operator> <literal type="number" pos:line="24" pos:column="18">3<pos:position pos:line="24" pos:column="19"/></literal></expr>)<pos:position pos:line="24" pos:column="20"/></condition><then pos:line="24" pos:column="20">
    <block type="pseudo"><return pos:line="25" pos:column="5">return <expr><literal type="number" pos:line="25" pos:column="12">2<pos:position pos:line="25" pos:column="13"/></literal></expr>;<pos:position pos:line="25" pos:column="14"/></return></block></then>
  <else pos:line="26" pos:column="3">else
    <block type="pseudo"><return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return></block></else></if>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

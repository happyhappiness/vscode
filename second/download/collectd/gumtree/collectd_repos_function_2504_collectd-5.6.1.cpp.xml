<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2504_collectd-5.6.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">cf_read<pos:position pos:line="1" pos:column="12"/></name> <parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">filename<pos:position pos:line="1" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="35"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">oconfig_item_t<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">conf<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">ret<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

	<expr_stmt><expr><name pos:line="6" pos:column="9">conf<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <call><name pos:line="6" pos:column="16">cf_read_generic<pos:position pos:line="6" pos:column="31"/></name> <argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">filename<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <comment type="block" pos:line="6" pos:column="43">/* pattern = */</comment> <argument><expr><name pos:line="6" pos:column="59">NULL<pos:position pos:line="6" pos:column="63"/></name></expr></argument>, <comment type="block" pos:line="6" pos:column="65">/* depth = */</comment> <argument><expr><literal type="number" pos:line="6" pos:column="79">0<pos:position pos:line="6" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="82"/></expr_stmt>
	<if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">conf<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">==<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
	<block pos:line="8" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="9" pos:column="17">ERROR<pos:position pos:line="9" pos:column="22"/></name> <argument_list pos:line="9" pos:column="23">(<argument><expr><literal type="string" pos:line="9" pos:column="24">"Unable to read config file %s."<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="58">filename<pos:position pos:line="9" pos:column="66"/></name></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
		<return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">(<pos:position pos:line="10" pos:column="25"/></operator><operator pos:line="10" pos:column="25">-<pos:position pos:line="10" pos:column="26"/></operator><literal type="number" pos:line="10" pos:column="26">1<pos:position pos:line="10" pos:column="27"/></literal><operator pos:line="10" pos:column="27">)<pos:position pos:line="10" pos:column="28"/></operator></expr>;<pos:position pos:line="10" pos:column="29"/></return>
	}<pos:position pos:line="11" pos:column="10"/></block></then>
	<elseif pos:line="12" pos:column="9">else <if pos:line="12" pos:column="14">if <condition pos:line="12" pos:column="17">(<expr><name><name pos:line="12" pos:column="18">conf<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">children_num<pos:position pos:line="12" pos:column="36"/></name></name> <operator pos:line="12" pos:column="37">==<pos:position pos:line="12" pos:column="39"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42">
	<block pos:line="13" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">ERROR<pos:position pos:line="14" pos:column="22"/></name> <argument_list pos:line="14" pos:column="23">(<argument><expr><literal type="string" pos:line="14" pos:column="24">"Configuration file %s is empty."<pos:position pos:line="14" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="59">filename<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">oconfig_free<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">conf<pos:position pos:line="15" pos:column="35"/></name></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
		<return pos:line="16" pos:column="17">return <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>;<pos:position pos:line="16" pos:column="29"/></return>
	}<pos:position pos:line="17" pos:column="10"/></block></then></if></elseif></if>

	<for pos:line="19" pos:column="9">for <control pos:line="19" pos:column="13">(<init><decl><type><name pos:line="19" pos:column="14">int<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">i<pos:position pos:line="19" pos:column="19"/></name> <init pos:line="19" pos:column="20">= <expr><literal type="number" pos:line="19" pos:column="22">0<pos:position pos:line="19" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="24"/></init> <condition><expr><name pos:line="19" pos:column="25">i<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;<pos:position pos:line="19" pos:column="31"/></operator> <name><name pos:line="19" pos:column="29">conf<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">children_num<pos:position pos:line="19" pos:column="47"/></name></name></expr>;<pos:position pos:line="19" pos:column="48"/></condition> <incr><expr><name pos:line="19" pos:column="49">i<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">++<pos:position pos:line="19" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="19" pos:column="53"/></control>
	<block pos:line="20" pos:column="9">{
		<if pos:line="21" pos:column="17">if <condition pos:line="21" pos:column="20">(<expr><name><name pos:line="21" pos:column="21">conf<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">-&gt;<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="27">children<pos:position pos:line="21" pos:column="35"/></name><index pos:line="21" pos:column="35">[<expr><name pos:line="21" pos:column="36">i<pos:position pos:line="21" pos:column="37"/></name></expr>]<pos:position pos:line="21" pos:column="38"/></index></name><operator pos:line="21" pos:column="38">.<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="39">children<pos:position pos:line="21" pos:column="47"/></name> <operator pos:line="21" pos:column="48">==<pos:position pos:line="21" pos:column="50"/></operator> <name pos:line="21" pos:column="51">NULL<pos:position pos:line="21" pos:column="55"/></name></expr>)<pos:position pos:line="21" pos:column="56"/></condition><then pos:line="21" pos:column="56">
		<block pos:line="22" pos:column="17">{
			<if pos:line="23" pos:column="25">if <condition pos:line="23" pos:column="28">(<expr><call><name pos:line="23" pos:column="29">dispatch_value<pos:position pos:line="23" pos:column="43"/></name> <argument_list pos:line="23" pos:column="44">(<argument><expr><name><name pos:line="23" pos:column="45">conf<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">-&gt;<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="51">children<pos:position pos:line="23" pos:column="59"/></name></name> <operator pos:line="23" pos:column="60">+<pos:position pos:line="23" pos:column="61"/></operator> <name pos:line="23" pos:column="62">i<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></call> <operator pos:line="23" pos:column="65">!=<pos:position pos:line="23" pos:column="67"/></operator> <literal type="number" pos:line="23" pos:column="68">0<pos:position pos:line="23" pos:column="69"/></literal></expr>)<pos:position pos:line="23" pos:column="70"/></condition><then pos:line="23" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="33">ret<pos:position pos:line="24" pos:column="36"/></name> <operator pos:line="24" pos:column="37">=<pos:position pos:line="24" pos:column="38"/></operator> <operator pos:line="24" pos:column="39">-<pos:position pos:line="24" pos:column="40"/></operator><literal type="number" pos:line="24" pos:column="40">1<pos:position pos:line="24" pos:column="41"/></literal></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt></block></then></if>
		}<pos:position pos:line="25" pos:column="18"/></block></then>
		<else pos:line="26" pos:column="17">else
		<block pos:line="27" pos:column="17">{
			<if pos:line="28" pos:column="25">if <condition pos:line="28" pos:column="28">(<expr><call><name pos:line="28" pos:column="29">dispatch_block<pos:position pos:line="28" pos:column="43"/></name> <argument_list pos:line="28" pos:column="44">(<argument><expr><name><name pos:line="28" pos:column="45">conf<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">children<pos:position pos:line="28" pos:column="59"/></name></name> <operator pos:line="28" pos:column="60">+<pos:position pos:line="28" pos:column="61"/></operator> <name pos:line="28" pos:column="62">i<pos:position pos:line="28" pos:column="63"/></name></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call> <operator pos:line="28" pos:column="65">!=<pos:position pos:line="28" pos:column="67"/></operator> <literal type="number" pos:line="28" pos:column="68">0<pos:position pos:line="28" pos:column="69"/></literal></expr>)<pos:position pos:line="28" pos:column="70"/></condition><then pos:line="28" pos:column="70">
				<block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="33">ret<pos:position pos:line="29" pos:column="36"/></name> <operator pos:line="29" pos:column="37">=<pos:position pos:line="29" pos:column="38"/></operator> <operator pos:line="29" pos:column="39">-<pos:position pos:line="29" pos:column="40"/></operator><literal type="number" pos:line="29" pos:column="40">1<pos:position pos:line="29" pos:column="41"/></literal></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt></block></then></if>
		}<pos:position pos:line="30" pos:column="18"/></block></else></if>
	}<pos:position pos:line="31" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="33" pos:column="9">oconfig_free<pos:position pos:line="33" pos:column="21"/></name> <argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">conf<pos:position pos:line="33" pos:column="27"/></name></expr></argument>)<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="29"/></expr_stmt>

	<comment type="block" pos:line="35" pos:column="9">/* Read the default types.db if no `TypesDB' option was given. */</comment>
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">cf_default_typesdb<pos:position pos:line="36" pos:column="31"/></name></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32">
	<block pos:line="37" pos:column="9">{
		<if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><call><name pos:line="38" pos:column="21">read_types_list<pos:position pos:line="38" pos:column="36"/></name> <argument_list pos:line="38" pos:column="37">(<argument><expr><name pos:line="38" pos:column="38">PKGDATADIR<pos:position pos:line="38" pos:column="48"/></name><literal type="string" pos:line="38" pos:column="48">"/types.db"<pos:position pos:line="38" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></call> <operator pos:line="38" pos:column="61">!=<pos:position pos:line="38" pos:column="63"/></operator> <literal type="number" pos:line="38" pos:column="64">0<pos:position pos:line="38" pos:column="65"/></literal></expr>)<pos:position pos:line="38" pos:column="66"/></condition><then pos:line="38" pos:column="66">
			<block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">ret<pos:position pos:line="39" pos:column="28"/></name> <operator pos:line="39" pos:column="29">=<pos:position pos:line="39" pos:column="30"/></operator> <operator pos:line="39" pos:column="31">-<pos:position pos:line="39" pos:column="32"/></operator><literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt></block></then></if>
	}<pos:position pos:line="40" pos:column="10"/></block></then></if>

	<return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">ret<pos:position pos:line="42" pos:column="19"/></name></expr>;<pos:position pos:line="42" pos:column="20"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

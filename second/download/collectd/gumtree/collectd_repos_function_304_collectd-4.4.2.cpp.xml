<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_304_collectd-4.4.2.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ssize_t<pos:position pos:line="1" pos:column="8"/></name></type> <name pos:line="1" pos:column="9">sread<pos:position pos:line="1" pos:column="14"/></name> <parameter_list pos:line="1" pos:column="15">(<parameter><decl><type><name pos:line="1" pos:column="16">int<pos:position pos:line="1" pos:column="19"/></name></type> <name pos:line="1" pos:column="20">fd<pos:position pos:line="1" pos:column="22"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="24">void<pos:position pos:line="1" pos:column="28"/></name> <modifier pos:line="1" pos:column="29">*<pos:position pos:line="1" pos:column="30"/></modifier></type><name pos:line="1" pos:column="30">buf<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">size_t<pos:position pos:line="1" pos:column="41"/></name></type> <name pos:line="1" pos:column="42">count<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name>    <modifier pos:line="3" pos:column="17">*<pos:position pos:line="3" pos:column="18"/></modifier></type><name pos:line="3" pos:column="18">ptr<pos:position pos:line="3" pos:column="21"/></name></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">size_t<pos:position pos:line="4" pos:column="15"/></name></type>   <name pos:line="4" pos:column="18">nleft<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">ssize_t<pos:position pos:line="5" pos:column="16"/></name></type>  <name pos:line="5" pos:column="18">status<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

	<expr_stmt><expr><name pos:line="7" pos:column="9">ptr<pos:position pos:line="7" pos:column="12"/></name>   <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <operator pos:line="7" pos:column="17">(<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">char<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></operator><operator pos:line="7" pos:column="24">)<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">buf<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><name pos:line="8" pos:column="9">nleft<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">count<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>

	<while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><name pos:line="10" pos:column="16">nleft<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&gt;<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>)<pos:position pos:line="10" pos:column="26"/></condition>
	<block pos:line="11" pos:column="9">{
		<expr_stmt><expr><name pos:line="12" pos:column="17">status<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">read<pos:position pos:line="12" pos:column="30"/></name> <argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">fd<pos:position pos:line="12" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="36">(<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">void<pos:position pos:line="12" pos:column="41"/></name> <operator pos:line="12" pos:column="42">*<pos:position pos:line="12" pos:column="43"/></operator><operator pos:line="12" pos:column="43">)<pos:position pos:line="12" pos:column="44"/></operator> <name pos:line="12" pos:column="45">ptr<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="50">nleft<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>

		<if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">status<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">&lt;<pos:position pos:line="14" pos:column="33"/></operator> <literal type="number" pos:line="14" pos:column="31">0<pos:position pos:line="14" pos:column="32"/></literal><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator> <operator pos:line="14" pos:column="34">&amp;&amp;<pos:position pos:line="14" pos:column="44"/></operator> <operator pos:line="14" pos:column="37">(<pos:position pos:line="14" pos:column="38"/></operator><operator pos:line="14" pos:column="38">(<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">errno<pos:position pos:line="14" pos:column="44"/></name> <operator pos:line="14" pos:column="45">==<pos:position pos:line="14" pos:column="47"/></operator> <name pos:line="14" pos:column="48">EAGAIN<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">)<pos:position pos:line="14" pos:column="55"/></operator> <operator pos:line="14" pos:column="56">||<pos:position pos:line="14" pos:column="58"/></operator> <operator pos:line="14" pos:column="59">(<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="60">errno<pos:position pos:line="14" pos:column="65"/></name> <operator pos:line="14" pos:column="66">==<pos:position pos:line="14" pos:column="68"/></operator> <name pos:line="14" pos:column="69">EINTR<pos:position pos:line="14" pos:column="74"/></name><operator pos:line="14" pos:column="74">)<pos:position pos:line="14" pos:column="75"/></operator><operator pos:line="14" pos:column="75">)<pos:position pos:line="14" pos:column="76"/></operator></expr>)<pos:position pos:line="14" pos:column="77"/></condition><then pos:line="14" pos:column="77">
			<block type="pseudo"><continue pos:line="15" pos:column="25">continue;<pos:position pos:line="15" pos:column="34"/></continue></block></then></if>

		<if pos:line="17" pos:column="17">if <condition pos:line="17" pos:column="20">(<expr><name pos:line="17" pos:column="21">status<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&lt;<pos:position pos:line="17" pos:column="32"/></operator> <literal type="number" pos:line="17" pos:column="30">0<pos:position pos:line="17" pos:column="31"/></literal></expr>)<pos:position pos:line="17" pos:column="32"/></condition><then pos:line="17" pos:column="32">
			<block type="pseudo"><return pos:line="18" pos:column="25">return <expr><operator pos:line="18" pos:column="32">(<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">status<pos:position pos:line="18" pos:column="39"/></name><operator pos:line="18" pos:column="39">)<pos:position pos:line="18" pos:column="40"/></operator></expr>;<pos:position pos:line="18" pos:column="41"/></return></block></then></if>

		<if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name pos:line="20" pos:column="21">status<pos:position pos:line="20" pos:column="27"/></name> <operator pos:line="20" pos:column="28">==<pos:position pos:line="20" pos:column="30"/></operator> <literal type="number" pos:line="20" pos:column="31">0<pos:position pos:line="20" pos:column="32"/></literal></expr>)<pos:position pos:line="20" pos:column="33"/></condition><then pos:line="20" pos:column="33">
		<block pos:line="21" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="22" pos:column="25">DEBUG<pos:position pos:line="22" pos:column="30"/></name> <argument_list pos:line="22" pos:column="31">(<argument><expr><literal type="string" pos:line="22" pos:column="32">"Received EOF from fd %i. "<pos:position pos:line="22" pos:column="59"/></literal>
					<literal type="string" pos:line="23" pos:column="41">"Closing fd and returning error."<pos:position pos:line="23" pos:column="74"/></literal></expr></argument>,
					<argument><expr><name pos:line="24" pos:column="41">fd<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="25" pos:column="25">close<pos:position pos:line="25" pos:column="30"/></name> <argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">fd<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
			<return pos:line="26" pos:column="25">return <expr><operator pos:line="26" pos:column="32">(<pos:position pos:line="26" pos:column="33"/></operator><operator pos:line="26" pos:column="33">-<pos:position pos:line="26" pos:column="34"/></operator><literal type="number" pos:line="26" pos:column="34">1<pos:position pos:line="26" pos:column="35"/></literal><operator pos:line="26" pos:column="35">)<pos:position pos:line="26" pos:column="36"/></operator></expr>;<pos:position pos:line="26" pos:column="37"/></return>
		}<pos:position pos:line="27" pos:column="18"/></block></then></if>

		<expr_stmt><expr><call><name pos:line="29" pos:column="17">assert<pos:position pos:line="29" pos:column="23"/></name> <argument_list pos:line="29" pos:column="24">(<argument><expr><operator pos:line="29" pos:column="25">(<pos:position pos:line="29" pos:column="26"/></operator><literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal> <operator pos:line="29" pos:column="28">&gt;<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="30">status<pos:position pos:line="29" pos:column="36"/></name><operator pos:line="29" pos:column="36">)<pos:position pos:line="29" pos:column="37"/></operator> <operator pos:line="29" pos:column="38">||<pos:position pos:line="29" pos:column="40"/></operator> <operator pos:line="29" pos:column="41">(<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">nleft<pos:position pos:line="29" pos:column="47"/></name> <operator pos:line="29" pos:column="48">&gt;=<pos:position pos:line="29" pos:column="53"/></operator> <operator pos:line="29" pos:column="51">(<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="52">size_t<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">)<pos:position pos:line="29" pos:column="59"/></operator><name pos:line="29" pos:column="59">status<pos:position pos:line="29" pos:column="65"/></name><operator pos:line="29" pos:column="65">)<pos:position pos:line="29" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>

		<expr_stmt><expr><name pos:line="31" pos:column="17">nleft<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">nleft<pos:position pos:line="31" pos:column="30"/></name> <operator pos:line="31" pos:column="31">-<pos:position pos:line="31" pos:column="32"/></operator> <name pos:line="31" pos:column="33">status<pos:position pos:line="31" pos:column="39"/></name></expr>;<pos:position pos:line="31" pos:column="40"/></expr_stmt>
		<expr_stmt><expr><name pos:line="32" pos:column="17">ptr<pos:position pos:line="32" pos:column="20"/></name>   <operator pos:line="32" pos:column="23">=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">ptr<pos:position pos:line="32" pos:column="28"/></name>   <operator pos:line="32" pos:column="31">+<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">status<pos:position pos:line="32" pos:column="39"/></name></expr>;<pos:position pos:line="32" pos:column="40"/></expr_stmt>
	}<pos:position pos:line="33" pos:column="10"/></block></while>

	<return pos:line="35" pos:column="9">return <expr><operator pos:line="35" pos:column="16">(<pos:position pos:line="35" pos:column="17"/></operator><literal type="number" pos:line="35" pos:column="17">0<pos:position pos:line="35" pos:column="18"/></literal><operator pos:line="35" pos:column="18">)<pos:position pos:line="35" pos:column="19"/></operator></expr>;<pos:position pos:line="35" pos:column="20"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

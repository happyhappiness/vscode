<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2479_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">notify_systemd<pos:position pos:line="1" pos:column="26"/></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><name pos:line="1" pos:column="27">void<pos:position pos:line="1" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="32"/></parameter_list> <block pos:line="1" pos:column="33">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">fd<pos:position pos:line="2" pos:column="9"/></name></decl>;<pos:position pos:line="2" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">notifysocket<pos:position pos:line="3" pos:column="27"/></name></decl>;<pos:position pos:line="3" pos:column="28"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">sockaddr_un<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">su<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><block pos:line="4" pos:column="27">{<expr><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr>}<pos:position pos:line="4" pos:column="30"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">size_t<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">su_size<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name></type> <name><name pos:line="6" pos:column="8">buffer<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[]<pos:position pos:line="6" pos:column="16"/></index></name> <init pos:line="6" pos:column="17">= <expr><literal type="string" pos:line="6" pos:column="19">"READY=1\n"<pos:position pos:line="6" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>

  <expr_stmt><expr><name pos:line="8" pos:column="3">notifysocket<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <call><name pos:line="8" pos:column="18">getenv<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><literal type="string" pos:line="8" pos:column="25">"NOTIFY_SOCKET"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">notifysocket<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">==<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr>)<pos:position pos:line="9" pos:column="28"/></condition><then pos:line="9" pos:column="28">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><operator pos:line="12" pos:column="7">(<pos:position pos:line="12" pos:column="8"/></operator><call><name pos:line="12" pos:column="8">strlen<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name pos:line="12" pos:column="15">notifysocket<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call> <operator pos:line="12" pos:column="29">&lt;<pos:position pos:line="12" pos:column="33"/></operator> <literal type="number" pos:line="12" pos:column="31">2<pos:position pos:line="12" pos:column="32"/></literal><operator pos:line="12" pos:column="32">)<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="34">||<pos:position pos:line="12" pos:column="36"/></operator>
      <operator pos:line="13" pos:column="7">(<pos:position pos:line="13" pos:column="8"/></operator><operator pos:line="13" pos:column="8">(<pos:position pos:line="13" pos:column="9"/></operator><name><name pos:line="13" pos:column="9">notifysocket<pos:position pos:line="13" pos:column="21"/></name><index pos:line="13" pos:column="21">[<expr><literal type="number" pos:line="13" pos:column="22">0<pos:position pos:line="13" pos:column="23"/></literal></expr>]<pos:position pos:line="13" pos:column="24"/></index></name> <operator pos:line="13" pos:column="25">!=<pos:position pos:line="13" pos:column="27"/></operator> <literal type="char" pos:line="13" pos:column="28">'@'<pos:position pos:line="13" pos:column="31"/></literal><operator pos:line="13" pos:column="31">)<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="33">&amp;&amp;<pos:position pos:line="13" pos:column="43"/></operator> <operator pos:line="13" pos:column="36">(<pos:position pos:line="13" pos:column="37"/></operator><name><name pos:line="13" pos:column="37">notifysocket<pos:position pos:line="13" pos:column="49"/></name><index pos:line="13" pos:column="49">[<expr><literal type="number" pos:line="13" pos:column="50">0<pos:position pos:line="13" pos:column="51"/></literal></expr>]<pos:position pos:line="13" pos:column="52"/></index></name> <operator pos:line="13" pos:column="53">!=<pos:position pos:line="13" pos:column="55"/></operator> <literal type="char" pos:line="13" pos:column="56">'/'<pos:position pos:line="13" pos:column="59"/></literal><operator pos:line="13" pos:column="59">)<pos:position pos:line="13" pos:column="60"/></operator><operator pos:line="13" pos:column="60">)<pos:position pos:line="13" pos:column="61"/></operator></expr>)<pos:position pos:line="13" pos:column="62"/></condition><then pos:line="13" pos:column="62"> <block pos:line="13" pos:column="63">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"invalid notification socket NOTIFY_SOCKET=\"%s\": path must be "<pos:position pos:line="14" pos:column="76"/></literal>
          <literal type="string" pos:line="15" pos:column="11">"absolute"<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>,
          <argument><expr><name pos:line="16" pos:column="11">notifysocket<pos:position pos:line="16" pos:column="23"/></name></expr></argument>)<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">NOTICE<pos:position pos:line="19" pos:column="9"/></name><argument_list pos:line="19" pos:column="9">(<argument><expr><literal type="string" pos:line="19" pos:column="10">"Systemd detected, trying to signal readyness."<pos:position pos:line="19" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="59"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="21" pos:column="3">unsetenv<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="string" pos:line="21" pos:column="12">"NOTIFY_SOCKET"<pos:position pos:line="21" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><call><name pos:line="23" pos:column="5">defined<pos:position pos:line="23" pos:column="12"/></name><argument_list pos:line="23" pos:column="12">(<argument><expr><name pos:line="23" pos:column="13">SOCK_CLOEXEC<pos:position pos:line="23" pos:column="25"/></name></expr></argument>)<pos:position pos:line="23" pos:column="26"/></argument_list></call></expr></cpp:if>
  <expr_stmt><expr><name pos:line="24" pos:column="3">fd<pos:position pos:line="24" pos:column="5"/></name> <operator pos:line="24" pos:column="6">=<pos:position pos:line="24" pos:column="7"/></operator> <call><name pos:line="24" pos:column="8">socket<pos:position pos:line="24" pos:column="14"/></name><argument_list pos:line="24" pos:column="14">(<argument><expr><name pos:line="24" pos:column="15">AF_UNIX<pos:position pos:line="24" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">SOCK_DGRAM<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">|<pos:position pos:line="24" pos:column="36"/></operator> <name pos:line="24" pos:column="37">SOCK_CLOEXEC<pos:position pos:line="24" pos:column="49"/></name></expr></argument>, <comment type="block" pos:line="24" pos:column="51">/* protocol = */</comment> <argument><expr><literal type="number" pos:line="24" pos:column="68">0<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><name pos:line="26" pos:column="3">fd<pos:position pos:line="26" pos:column="5"/></name> <operator pos:line="26" pos:column="6">=<pos:position pos:line="26" pos:column="7"/></operator> <call><name pos:line="26" pos:column="8">socket<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">AF_UNIX<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="24">SOCK_DGRAM<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <comment type="block" pos:line="26" pos:column="36">/* protocol = */</comment> <argument><expr><literal type="number" pos:line="26" pos:column="53">0<pos:position pos:line="26" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>
  <if pos:line="28" pos:column="3">if <condition pos:line="28" pos:column="6">(<expr><name pos:line="28" pos:column="7">fd<pos:position pos:line="28" pos:column="9"/></name> <operator pos:line="28" pos:column="10">&lt;<pos:position pos:line="28" pos:column="14"/></operator> <literal type="number" pos:line="28" pos:column="12">0<pos:position pos:line="28" pos:column="13"/></literal></expr>)<pos:position pos:line="28" pos:column="14"/></condition><then pos:line="28" pos:column="14"> <block pos:line="28" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">char<pos:position pos:line="29" pos:column="9"/></name></type> <name><name pos:line="29" pos:column="10">errbuf<pos:position pos:line="29" pos:column="16"/></name><index pos:line="29" pos:column="16">[<expr><literal type="number" pos:line="29" pos:column="17">1024<pos:position pos:line="29" pos:column="21"/></literal></expr>]<pos:position pos:line="29" pos:column="22"/></index></name></decl>;<pos:position pos:line="29" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">ERROR<pos:position pos:line="30" pos:column="10"/></name><argument_list pos:line="30" pos:column="10">(<argument><expr><literal type="string" pos:line="30" pos:column="11">"creating UNIX socket failed: %s"<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="31" pos:column="11">sstrerror<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">errno<pos:position pos:line="31" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="28">errbuf<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="31" pos:column="36">sizeof<argument_list pos:line="31" pos:column="42">(<argument><expr><name pos:line="31" pos:column="43">errbuf<pos:position pos:line="31" pos:column="49"/></name></expr></argument>)<pos:position pos:line="31" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="31" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="53"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
  }<pos:position pos:line="33" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="35" pos:column="3">su<pos:position pos:line="35" pos:column="5"/></name><operator pos:line="35" pos:column="5">.<pos:position pos:line="35" pos:column="6"/></operator><name pos:line="35" pos:column="6">sun_family<pos:position pos:line="35" pos:column="16"/></name></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <name pos:line="35" pos:column="19">AF_UNIX<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
  <if pos:line="36" pos:column="3">if <condition pos:line="36" pos:column="6">(<expr><name><name pos:line="36" pos:column="7">notifysocket<pos:position pos:line="36" pos:column="19"/></name><index pos:line="36" pos:column="19">[<expr><literal type="number" pos:line="36" pos:column="20">0<pos:position pos:line="36" pos:column="21"/></literal></expr>]<pos:position pos:line="36" pos:column="22"/></index></name> <operator pos:line="36" pos:column="23">!=<pos:position pos:line="36" pos:column="25"/></operator> <literal type="char" pos:line="36" pos:column="26">'@'<pos:position pos:line="36" pos:column="29"/></literal></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
    <comment type="block" pos:line="37" pos:column="5">/* regular UNIX socket */</comment>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">sstrncpy<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name><name pos:line="38" pos:column="14">su<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">.<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">sun_path<pos:position pos:line="38" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="27">notifysocket<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="41">sizeof<argument_list pos:line="38" pos:column="47">(<argument><expr><name><name pos:line="38" pos:column="48">su<pos:position pos:line="38" pos:column="50"/></name><operator pos:line="38" pos:column="50">.<pos:position pos:line="38" pos:column="51"/></operator><name pos:line="38" pos:column="51">sun_path<pos:position pos:line="38" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">su_size<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <sizeof pos:line="39" pos:column="15">sizeof<argument_list pos:line="39" pos:column="21">(<argument><expr><name pos:line="39" pos:column="22">su<pos:position pos:line="39" pos:column="24"/></name></expr></argument>)<pos:position pos:line="39" pos:column="25"/></argument_list></sizeof></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then> <else pos:line="40" pos:column="5">else <block pos:line="40" pos:column="10">{
    <comment type="block" pos:line="41" pos:column="5">/* Linux abstract namespace socket: specify address as "\0foo", i.e.
     * start with a null byte. Since null bytes have no special meaning in
     * that case, we have to set su_size correctly to cover only the bytes
     * that are part of the address. */</comment>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">sstrncpy<pos:position pos:line="45" pos:column="13"/></name><argument_list pos:line="45" pos:column="13">(<argument><expr><name><name pos:line="45" pos:column="14">su<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">.<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">sun_path<pos:position pos:line="45" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="27">notifysocket<pos:position pos:line="45" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="41">sizeof<argument_list pos:line="45" pos:column="47">(<argument><expr><name><name pos:line="45" pos:column="48">su<pos:position pos:line="45" pos:column="50"/></name><operator pos:line="45" pos:column="50">.<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">sun_path<pos:position pos:line="45" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="45" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">su<pos:position pos:line="46" pos:column="7"/></name><operator pos:line="46" pos:column="7">.<pos:position pos:line="46" pos:column="8"/></operator><name pos:line="46" pos:column="8">sun_path<pos:position pos:line="46" pos:column="16"/></name><index pos:line="46" pos:column="16">[<expr><literal type="number" pos:line="46" pos:column="17">0<pos:position pos:line="46" pos:column="18"/></literal></expr>]<pos:position pos:line="46" pos:column="19"/></index></name> <operator pos:line="46" pos:column="20">=<pos:position pos:line="46" pos:column="21"/></operator> <literal type="number" pos:line="46" pos:column="22">0<pos:position pos:line="46" pos:column="23"/></literal></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="47" pos:column="5">su_size<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <sizeof pos:line="47" pos:column="15">sizeof<argument_list pos:line="47" pos:column="21">(<argument><expr><name pos:line="47" pos:column="22">sa_family_t<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></sizeof> <operator pos:line="47" pos:column="35">+<pos:position pos:line="47" pos:column="36"/></operator> <call><name pos:line="47" pos:column="37">strlen<pos:position pos:line="47" pos:column="43"/></name><argument_list pos:line="47" pos:column="43">(<argument><expr><name pos:line="47" pos:column="44">notifysocket<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">su_size<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">&gt;<pos:position pos:line="48" pos:column="21"/></operator> <sizeof pos:line="48" pos:column="19">sizeof<argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">su<pos:position pos:line="48" pos:column="28"/></name></expr></argument>)<pos:position pos:line="48" pos:column="29"/></argument_list></sizeof></expr>)<pos:position pos:line="48" pos:column="30"/></condition><then pos:line="48" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><name pos:line="49" pos:column="7">su_size<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <sizeof pos:line="49" pos:column="17">sizeof<argument_list pos:line="49" pos:column="23">(<argument><expr><name pos:line="49" pos:column="24">su<pos:position pos:line="49" pos:column="26"/></name></expr></argument>)<pos:position pos:line="49" pos:column="27"/></argument_list></sizeof></expr>;<pos:position pos:line="49" pos:column="28"/></expr_stmt></block></then></if>
  }<pos:position pos:line="50" pos:column="4"/></block></else></if>

  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><call><name pos:line="52" pos:column="7">sendto<pos:position pos:line="52" pos:column="13"/></name><argument_list pos:line="52" pos:column="13">(<argument><expr><name pos:line="52" pos:column="14">fd<pos:position pos:line="52" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="18">buffer<pos:position pos:line="52" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="26">strlen<pos:position pos:line="52" pos:column="32"/></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">buffer<pos:position pos:line="52" pos:column="39"/></name></expr></argument>)<pos:position pos:line="52" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="42">MSG_NOSIGNAL<pos:position pos:line="52" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="56">(<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="57">void<pos:position pos:line="52" pos:column="61"/></name> <operator pos:line="52" pos:column="62">*<pos:position pos:line="52" pos:column="63"/></operator><operator pos:line="52" pos:column="63">)<pos:position pos:line="52" pos:column="64"/></operator><operator pos:line="52" pos:column="64">&amp;<pos:position pos:line="52" pos:column="69"/></operator><name pos:line="52" pos:column="65">su<pos:position pos:line="52" pos:column="67"/></name></expr></argument>,
             <argument><expr><operator pos:line="53" pos:column="14">(<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">socklen_t<pos:position pos:line="53" pos:column="24"/></name><operator pos:line="53" pos:column="24">)<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="25">su_size<pos:position pos:line="53" pos:column="32"/></name></expr></argument>)<pos:position pos:line="53" pos:column="33"/></argument_list></call> <operator pos:line="53" pos:column="34">&lt;<pos:position pos:line="53" pos:column="38"/></operator> <literal type="number" pos:line="53" pos:column="36">0<pos:position pos:line="53" pos:column="37"/></literal></expr>)<pos:position pos:line="53" pos:column="38"/></condition><then pos:line="53" pos:column="38"> <block pos:line="53" pos:column="39">{
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">char<pos:position pos:line="54" pos:column="9"/></name></type> <name><name pos:line="54" pos:column="10">errbuf<pos:position pos:line="54" pos:column="16"/></name><index pos:line="54" pos:column="16">[<expr><literal type="number" pos:line="54" pos:column="17">1024<pos:position pos:line="54" pos:column="21"/></literal></expr>]<pos:position pos:line="54" pos:column="22"/></index></name></decl>;<pos:position pos:line="54" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">ERROR<pos:position pos:line="55" pos:column="10"/></name><argument_list pos:line="55" pos:column="10">(<argument><expr><literal type="string" pos:line="55" pos:column="11">"sendto(\"%s\") failed: %s"<pos:position pos:line="55" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="40">notifysocket<pos:position pos:line="55" pos:column="52"/></name></expr></argument>,
          <argument><expr><call><name pos:line="56" pos:column="11">sstrerror<pos:position pos:line="56" pos:column="20"/></name><argument_list pos:line="56" pos:column="20">(<argument><expr><name pos:line="56" pos:column="21">errno<pos:position pos:line="56" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="28">errbuf<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="36">sizeof<argument_list pos:line="56" pos:column="42">(<argument><expr><name pos:line="56" pos:column="43">errbuf<pos:position pos:line="56" pos:column="49"/></name></expr></argument>)<pos:position pos:line="56" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="56" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="56" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="57" pos:column="5">close<pos:position pos:line="57" pos:column="10"/></name><argument_list pos:line="57" pos:column="10">(<argument><expr><name pos:line="57" pos:column="11">fd<pos:position pos:line="57" pos:column="13"/></name></expr></argument>)<pos:position pos:line="57" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="15"/></expr_stmt>
    <return pos:line="58" pos:column="5">return <expr><literal type="number" pos:line="58" pos:column="12">0<pos:position pos:line="58" pos:column="13"/></literal></expr>;<pos:position pos:line="58" pos:column="14"/></return>
  }<pos:position pos:line="59" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="61" pos:column="3">unsetenv<pos:position pos:line="61" pos:column="11"/></name><argument_list pos:line="61" pos:column="11">(<argument><expr><literal type="string" pos:line="61" pos:column="12">"NOTIFY_SOCKET"<pos:position pos:line="61" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="62" pos:column="3">close<pos:position pos:line="62" pos:column="8"/></name><argument_list pos:line="62" pos:column="8">(<argument><expr><name pos:line="62" pos:column="9">fd<pos:position pos:line="62" pos:column="11"/></name></expr></argument>)<pos:position pos:line="62" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="13"/></expr_stmt>
  <return pos:line="63" pos:column="3">return <expr><literal type="number" pos:line="63" pos:column="10">1<pos:position pos:line="63" pos:column="11"/></literal></expr>;<pos:position pos:line="63" pos:column="12"/></return>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

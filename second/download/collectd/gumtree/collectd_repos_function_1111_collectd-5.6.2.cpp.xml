<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1111_collectd-5.6.2.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">cna_handle_volume_snap_usage<pos:position pos:line="1" pos:column="41"/></name><parameter_list pos:line="1" pos:column="41">(<parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">host_config_t<pos:position pos:line="1" pos:column="61"/></name> <modifier pos:line="1" pos:column="62">*<pos:position pos:line="1" pos:column="63"/></modifier></type><name pos:line="1" pos:column="63">host<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="69">/* {{{ */</comment>
                                         <parameter><decl><type><name pos:line="2" pos:column="42">data_volume_usage_t<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">v<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list> <block pos:line="2" pos:column="66">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">uint64_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">snap_used<pos:position pos:line="3" pos:column="21"/></name> <init pos:line="3" pos:column="22">= <expr><literal type="number" pos:line="3" pos:column="24">0<pos:position pos:line="3" pos:column="25"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="3" pos:column="27">value<pos:position pos:line="3" pos:column="32"/></name></decl>;<pos:position pos:line="3" pos:column="33"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">na_elem_t<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">data<pos:position pos:line="4" pos:column="18"/></name></decl>, <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="21">elem_snapshots<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">na_elem_iter_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">iter_snap<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">data<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">na_server_invoke_elem<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name><name pos:line="7" pos:column="32">host<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">srv<pos:position pos:line="7" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="43">v<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">-&gt;<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="46">snap_query<pos:position pos:line="7" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">na_results_status<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">data<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></call> <operator pos:line="8" pos:column="31">!=<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="34">NA_OK<pos:position pos:line="8" pos:column="39"/></name></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40"> <block pos:line="8" pos:column="41">{
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">na_results_errno<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">data<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call> <operator pos:line="9" pos:column="32">==<pos:position pos:line="9" pos:column="34"/></operator> <name pos:line="9" pos:column="35">EVOLUMEOFFLINE<pos:position pos:line="9" pos:column="49"/></name></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
      <if pos:line="10" pos:column="7">if <condition pos:line="10" pos:column="10">(<expr><operator pos:line="10" pos:column="11">(<pos:position pos:line="10" pos:column="12"/></operator><name><name pos:line="10" pos:column="12">v<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">flags<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="23">IS_VOLUME_USAGE_OFFLINE<pos:position pos:line="10" pos:column="46"/></name><operator pos:line="10" pos:column="46">)<pos:position pos:line="10" pos:column="47"/></operator> <operator pos:line="10" pos:column="48">==<pos:position pos:line="10" pos:column="50"/></operator> <literal type="number" pos:line="10" pos:column="51">0<pos:position pos:line="10" pos:column="52"/></literal></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">cna_change_volume_status<pos:position pos:line="11" pos:column="33"/></name><argument_list pos:line="11" pos:column="33">(<argument><expr><name><name pos:line="11" pos:column="34">host<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">name<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">v<pos:position pos:line="11" pos:column="47"/></name></expr></argument>)<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="49"/></expr_stmt></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">ERROR<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><literal type="string" pos:line="13" pos:column="13">"netapp plugin: cna_handle_volume_snap_usage: "<pos:position pos:line="13" pos:column="60"/></literal>
            <literal type="string" pos:line="14" pos:column="13">"na_server_invoke_elem for "<pos:position pos:line="14" pos:column="41"/></literal>
            <literal type="string" pos:line="15" pos:column="13">"volume \"%s\" on host %s failed with error %d: %s"<pos:position pos:line="15" pos:column="64"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="16" pos:column="13">v<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">name<pos:position pos:line="16" pos:column="20"/></name></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="22">host<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">name<pos:position pos:line="16" pos:column="32"/></name></name></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="34">na_results_errno<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><name pos:line="16" pos:column="51">data<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr></argument>,
            <argument><expr><call><name pos:line="17" pos:column="13">na_results_reason<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">data<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">na_elem_free<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name pos:line="19" pos:column="18">data<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <return pos:line="20" pos:column="5">return;<pos:position pos:line="20" pos:column="12"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">(<pos:position pos:line="23" pos:column="8"/></operator><name><name pos:line="23" pos:column="8">v<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">flags<pos:position pos:line="23" pos:column="16"/></name></name> <operator pos:line="23" pos:column="17">&amp;<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="19">IS_VOLUME_USAGE_OFFLINE<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">)<pos:position pos:line="23" pos:column="43"/></operator> <operator pos:line="23" pos:column="44">!=<pos:position pos:line="23" pos:column="46"/></operator> <literal type="number" pos:line="23" pos:column="47">0<pos:position pos:line="23" pos:column="48"/></literal></expr>)<pos:position pos:line="23" pos:column="49"/></condition><then pos:line="23" pos:column="49">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">cna_change_volume_status<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name><name pos:line="24" pos:column="30">host<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">-&gt;<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="36">name<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">v<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="26" pos:column="3">elem_snapshots<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">na_elem_child<pos:position pos:line="26" pos:column="33"/></name><argument_list pos:line="26" pos:column="33">(<argument><expr><name pos:line="26" pos:column="34">data<pos:position pos:line="26" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="40">"snapshots"<pos:position pos:line="26" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="53"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">elem_snapshots<pos:position pos:line="27" pos:column="21"/></name> <operator pos:line="27" pos:column="22">==<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">NULL<pos:position pos:line="27" pos:column="29"/></name></expr>)<pos:position pos:line="27" pos:column="30"/></condition><then pos:line="27" pos:column="30"> <block pos:line="27" pos:column="31">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"netapp plugin: cna_handle_volume_snap_usage: "<pos:position pos:line="28" pos:column="58"/></literal>
          <literal type="string" pos:line="29" pos:column="11">"na_elem_child (\"snapshots\") failed "<pos:position pos:line="29" pos:column="50"/></literal>
          <literal type="string" pos:line="30" pos:column="11">"for host %s."<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="31" pos:column="11">host<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">name<pos:position pos:line="31" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">na_elem_free<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><name pos:line="32" pos:column="18">data<pos:position pos:line="32" pos:column="22"/></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
    <return pos:line="33" pos:column="5">return;<pos:position pos:line="33" pos:column="12"/></return>
  }<pos:position pos:line="34" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="36" pos:column="3">iter_snap<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">=<pos:position pos:line="36" pos:column="14"/></operator> <call><name pos:line="36" pos:column="15">na_child_iterator<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">(<argument><expr><name pos:line="36" pos:column="33">elem_snapshots<pos:position pos:line="36" pos:column="47"/></name></expr></argument>)<pos:position pos:line="36" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="49"/></expr_stmt>
  <for pos:line="37" pos:column="3">for <control pos:line="37" pos:column="7">(<init><decl><type><name pos:line="37" pos:column="8">na_elem_t<pos:position pos:line="37" pos:column="17"/></name> <modifier pos:line="37" pos:column="18">*<pos:position pos:line="37" pos:column="19"/></modifier></type><name pos:line="37" pos:column="19">elem_snap<pos:position pos:line="37" pos:column="28"/></name> <init pos:line="37" pos:column="29">= <expr><call><name pos:line="37" pos:column="31">na_iterator_next<pos:position pos:line="37" pos:column="47"/></name><argument_list pos:line="37" pos:column="47">(<argument><expr><operator pos:line="37" pos:column="48">&amp;<pos:position pos:line="37" pos:column="53"/></operator><name pos:line="37" pos:column="49">iter_snap<pos:position pos:line="37" pos:column="58"/></name></expr></argument>)<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="60"/></init> <condition><expr><name pos:line="37" pos:column="61">elem_snap<pos:position pos:line="37" pos:column="70"/></name> <operator pos:line="37" pos:column="71">!=<pos:position pos:line="37" pos:column="73"/></operator> <name pos:line="37" pos:column="74">NULL<pos:position pos:line="37" pos:column="78"/></name></expr>;<pos:position pos:line="37" pos:column="79"/></condition>
       <incr><expr><name pos:line="38" pos:column="8">elem_snap<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">na_iterator_next<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><operator pos:line="38" pos:column="37">&amp;<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="38">iter_snap<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr></incr>)<pos:position pos:line="38" pos:column="49"/></control> <block pos:line="38" pos:column="50">{
    <expr_stmt><expr><name pos:line="39" pos:column="5">value<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <call><name pos:line="39" pos:column="13">na_child_get_uint64<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">elem_snap<pos:position pos:line="39" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="44">"cumulative-total"<pos:position pos:line="39" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="64">0<pos:position pos:line="39" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="67"/></expr_stmt>
    <comment type="block" pos:line="40" pos:column="5">/* "cumulative-total" is the total size of the oldest snapshot plus all
     * newer ones in blocks (1KB). We therefore are looking for the highest
     * number of all snapshots - that's the size required for the snapshots. */</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">value<pos:position pos:line="43" pos:column="14"/></name> <operator pos:line="43" pos:column="15">&gt;<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="17">snap_used<pos:position pos:line="43" pos:column="26"/></name></expr>)<pos:position pos:line="43" pos:column="27"/></condition><then pos:line="43" pos:column="27">
      <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="7">snap_used<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <name pos:line="44" pos:column="19">value<pos:position pos:line="44" pos:column="24"/></name></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt></block></then></if>
  }<pos:position pos:line="45" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="46" pos:column="3">na_elem_free<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><name pos:line="46" pos:column="16">data<pos:position pos:line="46" pos:column="20"/></name></expr></argument>)<pos:position pos:line="46" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="22"/></expr_stmt>
  <comment type="block" pos:line="47" pos:column="3">/* snap_used is in 1024 byte blocks */</comment>
  <expr_stmt><expr><name><name pos:line="48" pos:column="3">v<pos:position pos:line="48" pos:column="4"/></name><operator pos:line="48" pos:column="4">-&gt;<pos:position pos:line="48" pos:column="9"/></operator><name pos:line="48" pos:column="6">snap_used<pos:position pos:line="48" pos:column="15"/></name></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">snap_used<pos:position pos:line="48" pos:column="27"/></name> <operator pos:line="48" pos:column="28">*<pos:position pos:line="48" pos:column="29"/></operator> <literal type="number" pos:line="48" pos:column="30">1024<pos:position pos:line="48" pos:column="34"/></literal></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="49" pos:column="3">v<pos:position pos:line="49" pos:column="4"/></name><operator pos:line="49" pos:column="4">-&gt;<pos:position pos:line="49" pos:column="9"/></operator><name pos:line="49" pos:column="6">flags<pos:position pos:line="49" pos:column="11"/></name></name> <operator pos:line="49" pos:column="12">|=<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">HAVE_VOLUME_USAGE_SNAP_USED<pos:position pos:line="49" pos:column="42"/></name></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1019_collectd-5.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">wm_config_node<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">wm_node_t<pos:position pos:line="3" pos:column="12"/></name> <modifier pos:line="3" pos:column="13">*<pos:position pos:line="3" pos:column="14"/></modifier></type><name pos:line="3" pos:column="14">node<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">status<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">i<pos:position pos:line="5" pos:column="8"/></name></decl>;<pos:position pos:line="5" pos:column="9"/></decl_stmt>

  <expr_stmt><expr><name pos:line="7" pos:column="3">node<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">malloc<pos:position pos:line="7" pos:column="16"/></name> <argument_list pos:line="7" pos:column="17">(<argument><expr><sizeof pos:line="7" pos:column="18">sizeof <argument_list pos:line="7" pos:column="25">(<argument><expr><operator pos:line="7" pos:column="26">*<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">node<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">node<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">ENOMEM<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">)<pos:position pos:line="9" pos:column="20"/></operator></expr>;<pos:position pos:line="9" pos:column="21"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">memset<pos:position pos:line="10" pos:column="9"/></name> <argument_list pos:line="10" pos:column="10">(<argument><expr><name pos:line="10" pos:column="11">node<pos:position pos:line="10" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="17">0<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="20">sizeof <argument_list pos:line="10" pos:column="27">(<argument><expr><operator pos:line="10" pos:column="28">*<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">node<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="11" pos:column="3">mongo_init<pos:position pos:line="11" pos:column="13"/></name> <argument_list pos:line="11" pos:column="14">(<argument><expr><name><name pos:line="11" pos:column="15">node<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">conn<pos:position pos:line="11" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="12" pos:column="3">node<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">host<pos:position pos:line="12" pos:column="13"/></name></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">NULL<pos:position pos:line="12" pos:column="20"/></name></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="13" pos:column="3">node<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">store_rates<pos:position pos:line="13" pos:column="20"/></name></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="14" pos:column="3">pthread_mutex_init<pos:position pos:line="14" pos:column="21"/></name> <argument_list pos:line="14" pos:column="22">(<argument><expr><operator pos:line="14" pos:column="23">&amp;<pos:position pos:line="14" pos:column="28"/></operator><name><name pos:line="14" pos:column="24">node<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">lock<pos:position pos:line="14" pos:column="34"/></name></name></expr></argument>, <comment type="block" pos:line="14" pos:column="36">/* attr = */</comment> <argument><expr><name pos:line="14" pos:column="49">NULL<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><name pos:line="16" pos:column="3">status<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">cf_util_get_string_buffer<pos:position pos:line="16" pos:column="37"/></name> <argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">ci<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="43">node<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">-&gt;<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="49">name<pos:position pos:line="16" pos:column="53"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="55">sizeof <argument_list pos:line="16" pos:column="62">(<argument><expr><name><name pos:line="16" pos:column="63">node<pos:position pos:line="16" pos:column="67"/></name><operator pos:line="16" pos:column="67">-&gt;<pos:position pos:line="16" pos:column="72"/></operator><name pos:line="16" pos:column="69">name<pos:position pos:line="16" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="76"/></expr_stmt>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">status<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
  <block pos:line="19" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">sfree<pos:position pos:line="20" pos:column="10"/></name> <argument_list pos:line="20" pos:column="11">(<argument><expr><name pos:line="20" pos:column="12">node<pos:position pos:line="20" pos:column="16"/></name></expr></argument>)<pos:position pos:line="20" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">status<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator></expr>;<pos:position pos:line="21" pos:column="21"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <for pos:line="24" pos:column="3">for <control pos:line="24" pos:column="7">(<init><expr><name pos:line="24" pos:column="8">i<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <literal type="number" pos:line="24" pos:column="12">0<pos:position pos:line="24" pos:column="13"/></literal></expr>;<pos:position pos:line="24" pos:column="14"/></init> <condition><expr><name pos:line="24" pos:column="15">i<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">&lt;<pos:position pos:line="24" pos:column="21"/></operator> <name><name pos:line="24" pos:column="19">ci<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">-&gt;<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="23">children_num<pos:position pos:line="24" pos:column="35"/></name></name></expr>;<pos:position pos:line="24" pos:column="36"/></condition> <incr><expr><name pos:line="24" pos:column="37">i<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">++<pos:position pos:line="24" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="24" pos:column="41"/></control>
  <block pos:line="25" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">oconfig_item_t<pos:position pos:line="26" pos:column="19"/></name> <modifier pos:line="26" pos:column="20">*<pos:position pos:line="26" pos:column="21"/></modifier></type><name pos:line="26" pos:column="21">child<pos:position pos:line="26" pos:column="26"/></name> <init pos:line="26" pos:column="27">= <expr><name><name pos:line="26" pos:column="29">ci<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">children<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">+<pos:position pos:line="26" pos:column="43"/></operator> <name pos:line="26" pos:column="44">i<pos:position pos:line="26" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="46"/></decl_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">strcasecmp<pos:position pos:line="28" pos:column="19"/></name> <argument_list pos:line="28" pos:column="20">(<argument><expr><literal type="string" pos:line="28" pos:column="21">"Host"<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="29">child<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">-&gt;<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="36">key<pos:position pos:line="28" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call> <operator pos:line="28" pos:column="41">==<pos:position pos:line="28" pos:column="43"/></operator> <literal type="number" pos:line="28" pos:column="44">0<pos:position pos:line="28" pos:column="45"/></literal></expr>)<pos:position pos:line="28" pos:column="46"/></condition><then pos:line="28" pos:column="46">
      <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">cf_util_get_string<pos:position pos:line="29" pos:column="34"/></name> <argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">child<pos:position pos:line="29" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="43">&amp;<pos:position pos:line="29" pos:column="48"/></operator><name><name pos:line="29" pos:column="44">node<pos:position pos:line="29" pos:column="48"/></name><operator pos:line="29" pos:column="48">-&gt;<pos:position pos:line="29" pos:column="53"/></operator><name pos:line="29" pos:column="50">host<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="56"/></expr_stmt></block></then>
    <elseif pos:line="30" pos:column="5">else <if pos:line="30" pos:column="10">if <condition pos:line="30" pos:column="13">(<expr><call><name pos:line="30" pos:column="14">strcasecmp<pos:position pos:line="30" pos:column="24"/></name> <argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="string" pos:line="30" pos:column="26">"Port"<pos:position pos:line="30" pos:column="32"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="34">child<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">key<pos:position pos:line="30" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="45"/></argument_list></call> <operator pos:line="30" pos:column="46">==<pos:position pos:line="30" pos:column="48"/></operator> <literal type="number" pos:line="30" pos:column="49">0<pos:position pos:line="30" pos:column="50"/></literal></expr>)<pos:position pos:line="30" pos:column="51"/></condition><then pos:line="30" pos:column="51">
    <block pos:line="31" pos:column="5">{
      <expr_stmt><expr><name pos:line="32" pos:column="7">status<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">cf_util_get_port_number<pos:position pos:line="32" pos:column="39"/></name> <argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">child<pos:position pos:line="32" pos:column="46"/></name></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
      <if pos:line="33" pos:column="7">if <condition pos:line="33" pos:column="10">(<expr><name pos:line="33" pos:column="11">status<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">&gt;<pos:position pos:line="33" pos:column="22"/></operator> <literal type="number" pos:line="33" pos:column="20">0<pos:position pos:line="33" pos:column="21"/></literal></expr>)<pos:position pos:line="33" pos:column="22"/></condition><then pos:line="33" pos:column="22">
      <block pos:line="34" pos:column="7">{
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">node<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">port<pos:position pos:line="35" pos:column="19"/></name></name> <operator pos:line="35" pos:column="20">=<pos:position pos:line="35" pos:column="21"/></operator> <name pos:line="35" pos:column="22">status<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">status<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <literal type="number" pos:line="36" pos:column="18">0<pos:position pos:line="36" pos:column="19"/></literal></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
      }<pos:position pos:line="37" pos:column="8"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif>
    <elseif pos:line="39" pos:column="5">else <if pos:line="39" pos:column="10">if <condition pos:line="39" pos:column="13">(<expr><call><name pos:line="39" pos:column="14">strcasecmp<pos:position pos:line="39" pos:column="24"/></name> <argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="string" pos:line="39" pos:column="26">"Timeout"<pos:position pos:line="39" pos:column="35"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="37">child<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">-&gt;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="44">key<pos:position pos:line="39" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call> <operator pos:line="39" pos:column="49">==<pos:position pos:line="39" pos:column="51"/></operator> <literal type="number" pos:line="39" pos:column="52">0<pos:position pos:line="39" pos:column="53"/></literal></expr>)<pos:position pos:line="39" pos:column="54"/></condition><then pos:line="39" pos:column="54">
      <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="7">status<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">cf_util_get_int<pos:position pos:line="40" pos:column="31"/></name> <argument_list pos:line="40" pos:column="32">(<argument><expr><name pos:line="40" pos:column="33">child<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="40">&amp;<pos:position pos:line="40" pos:column="45"/></operator><name><name pos:line="40" pos:column="41">node<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">-&gt;<pos:position pos:line="40" pos:column="50"/></operator><name pos:line="40" pos:column="47">timeout<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="41" pos:column="5">else <if pos:line="41" pos:column="10">if <condition pos:line="41" pos:column="13">(<expr><call><name pos:line="41" pos:column="14">strcasecmp<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"StoreRates"<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="40">child<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">key<pos:position pos:line="41" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call> <operator pos:line="41" pos:column="52">==<pos:position pos:line="41" pos:column="54"/></operator> <literal type="number" pos:line="41" pos:column="55">0<pos:position pos:line="41" pos:column="56"/></literal></expr>)<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57">
      <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="7">status<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">cf_util_get_boolean<pos:position pos:line="42" pos:column="35"/></name> <argument_list pos:line="42" pos:column="36">(<argument><expr><name pos:line="42" pos:column="37">child<pos:position pos:line="42" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="42" pos:column="44">&amp;<pos:position pos:line="42" pos:column="49"/></operator><name><name pos:line="42" pos:column="45">node<pos:position pos:line="42" pos:column="49"/></name><operator pos:line="42" pos:column="49">-&gt;<pos:position pos:line="42" pos:column="54"/></operator><name pos:line="42" pos:column="51">store_rates<pos:position pos:line="42" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt></block></then></if></elseif>
    <else pos:line="43" pos:column="5">else
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="7">WARNING<pos:position pos:line="44" pos:column="14"/></name> <argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="string" pos:line="44" pos:column="16">"write_mongodb plugin: Ignoring unknown config option \"%s\"."<pos:position pos:line="44" pos:column="78"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="45" pos:column="11">child<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">key<pos:position pos:line="45" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="23"/></expr_stmt></block></else></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">status<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">!=<pos:position pos:line="47" pos:column="18"/></operator> <literal type="number" pos:line="47" pos:column="19">0<pos:position pos:line="47" pos:column="20"/></literal></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21">
      <block type="pseudo"><break pos:line="48" pos:column="7">break;<pos:position pos:line="48" pos:column="13"/></break></block></then></if>
  }<pos:position pos:line="49" pos:column="4"/></block></for> <comment type="block" pos:line="49" pos:column="5">/* for (i = 0; i &lt; ci-&gt;children_num; i++) */</comment>

  <if pos:line="51" pos:column="3">if <condition pos:line="51" pos:column="6">(<expr><name pos:line="51" pos:column="7">status<pos:position pos:line="51" pos:column="13"/></name> <operator pos:line="51" pos:column="14">==<pos:position pos:line="51" pos:column="16"/></operator> <literal type="number" pos:line="51" pos:column="17">0<pos:position pos:line="51" pos:column="18"/></literal></expr>)<pos:position pos:line="51" pos:column="19"/></condition><then pos:line="51" pos:column="19">
  <block pos:line="52" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="53" pos:column="5">char<pos:position pos:line="53" pos:column="9"/></name></type> <name><name pos:line="53" pos:column="10">cb_name<pos:position pos:line="53" pos:column="17"/></name><index pos:line="53" pos:column="17">[<expr><name pos:line="53" pos:column="18">DATA_MAX_NAME_LEN<pos:position pos:line="53" pos:column="35"/></name></expr>]<pos:position pos:line="53" pos:column="36"/></index></name></decl>;<pos:position pos:line="53" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">user_data_t<pos:position pos:line="54" pos:column="16"/></name></type> <name pos:line="54" pos:column="17">ud<pos:position pos:line="54" pos:column="19"/></name></decl>;<pos:position pos:line="54" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="56" pos:column="5">ssnprintf<pos:position pos:line="56" pos:column="14"/></name> <argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">cb_name<pos:position pos:line="56" pos:column="23"/></name></expr></argument>, <argument><expr><sizeof pos:line="56" pos:column="25">sizeof <argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">cb_name<pos:position pos:line="56" pos:column="40"/></name></expr></argument>)<pos:position pos:line="56" pos:column="41"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="43">"write_mongodb/%s"<pos:position pos:line="56" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="63">node<pos:position pos:line="56" pos:column="67"/></name><operator pos:line="56" pos:column="67">-&gt;<pos:position pos:line="56" pos:column="72"/></operator><name pos:line="56" pos:column="69">name<pos:position pos:line="56" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="75"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="58" pos:column="5">ud<pos:position pos:line="58" pos:column="7"/></name><operator pos:line="58" pos:column="7">.<pos:position pos:line="58" pos:column="8"/></operator><name pos:line="58" pos:column="8">data<pos:position pos:line="58" pos:column="12"/></name></name> <operator pos:line="58" pos:column="13">=<pos:position pos:line="58" pos:column="14"/></operator> <name pos:line="58" pos:column="15">node<pos:position pos:line="58" pos:column="19"/></name></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="59" pos:column="5">ud<pos:position pos:line="59" pos:column="7"/></name><operator pos:line="59" pos:column="7">.<pos:position pos:line="59" pos:column="8"/></operator><name pos:line="59" pos:column="8">free_func<pos:position pos:line="59" pos:column="17"/></name></name> <operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator> <name pos:line="59" pos:column="20">wm_config_free<pos:position pos:line="59" pos:column="34"/></name></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="61" pos:column="5">status<pos:position pos:line="61" pos:column="11"/></name> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <call><name pos:line="61" pos:column="14">plugin_register_write<pos:position pos:line="61" pos:column="35"/></name> <argument_list pos:line="61" pos:column="36">(<argument><expr><name pos:line="61" pos:column="37">cb_name<pos:position pos:line="61" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="46">wm_write<pos:position pos:line="61" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="56">&amp;<pos:position pos:line="61" pos:column="61"/></operator><name pos:line="61" pos:column="57">ud<pos:position pos:line="61" pos:column="59"/></name></expr></argument>)<pos:position pos:line="61" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">INFO<pos:position pos:line="62" pos:column="9"/></name> <argument_list pos:line="62" pos:column="10">(<argument><expr><literal type="string" pos:line="62" pos:column="11">"write_mongodb plugin: registered write plugin %s %d"<pos:position pos:line="62" pos:column="64"/></literal></expr></argument>,<argument><expr><name pos:line="62" pos:column="65">cb_name<pos:position pos:line="62" pos:column="72"/></name></expr></argument>,<argument><expr><name pos:line="62" pos:column="73">status<pos:position pos:line="62" pos:column="79"/></name></expr></argument>)<pos:position pos:line="62" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="81"/></expr_stmt>
  }<pos:position pos:line="63" pos:column="4"/></block></then></if>

  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name pos:line="65" pos:column="7">status<pos:position pos:line="65" pos:column="13"/></name> <operator pos:line="65" pos:column="14">!=<pos:position pos:line="65" pos:column="16"/></operator> <literal type="number" pos:line="65" pos:column="17">0<pos:position pos:line="65" pos:column="18"/></literal></expr>)<pos:position pos:line="65" pos:column="19"/></condition><then pos:line="65" pos:column="19">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="66" pos:column="5">wm_config_free<pos:position pos:line="66" pos:column="19"/></name> <argument_list pos:line="66" pos:column="20">(<argument><expr><name pos:line="66" pos:column="21">node<pos:position pos:line="66" pos:column="25"/></name></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt></block></then></if>

  <return pos:line="68" pos:column="3">return <expr><operator pos:line="68" pos:column="10">(<pos:position pos:line="68" pos:column="11"/></operator><name pos:line="68" pos:column="11">status<pos:position pos:line="68" pos:column="17"/></name><operator pos:line="68" pos:column="17">)<pos:position pos:line="68" pos:column="18"/></operator></expr>;<pos:position pos:line="68" pos:column="19"/></return>
}<pos:position pos:line="69" pos:column="2"/></block></function></unit>

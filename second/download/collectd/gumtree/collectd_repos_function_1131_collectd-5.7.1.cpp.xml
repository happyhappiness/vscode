<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1131_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">nagios_print<pos:position pos:line="1" pos:column="24"/></name><parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><name pos:line="1" pos:column="25">char<pos:position pos:line="1" pos:column="29"/></name> <specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">buffer<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <comment type="block" pos:line="1" pos:column="45">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <specifier pos:line="3" pos:column="8">const<pos:position pos:line="3" pos:column="13"/></specifier> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">file<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><name pos:line="3" pos:column="22">NAGIOS_COMMAND_FILE<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">int<pos:position pos:line="4" pos:column="6"/></name></type> <name pos:line="4" pos:column="7">fd<pos:position pos:line="4" pos:column="9"/></name></decl>;<pos:position pos:line="4" pos:column="10"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="6" pos:column="3">struct<pos:position pos:line="6" pos:column="9"/></name> <name pos:line="6" pos:column="10">flock<pos:position pos:line="6" pos:column="15"/></name></name></type> <name pos:line="6" pos:column="16">lock<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><block pos:line="6" pos:column="23">{<expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr>}<pos:position pos:line="6" pos:column="26"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">nagios_command_file<pos:position pos:line="8" pos:column="26"/></name> <operator pos:line="8" pos:column="27">!=<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">NULL<pos:position pos:line="8" pos:column="34"/></name></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">file<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">nagios_command_file<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt></block></then></if>

  <expr_stmt><expr><name pos:line="11" pos:column="3">fd<pos:position pos:line="11" pos:column="5"/></name> <operator pos:line="11" pos:column="6">=<pos:position pos:line="11" pos:column="7"/></operator> <call><name pos:line="11" pos:column="8">open<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">(<argument><expr><name pos:line="11" pos:column="13">file<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">O_WRONLY<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">|<pos:position pos:line="11" pos:column="29"/></operator> <name pos:line="11" pos:column="30">O_APPEND<pos:position pos:line="11" pos:column="38"/></name></expr></argument>)<pos:position pos:line="11" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">fd<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">&lt;<pos:position pos:line="12" pos:column="14"/></operator> <literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>)<pos:position pos:line="12" pos:column="14"/></condition><then pos:line="12" pos:column="14"> <block pos:line="12" pos:column="15">{
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">errbuf<pos:position pos:line="13" pos:column="16"/></name><index pos:line="13" pos:column="16">[<expr><literal type="number" pos:line="13" pos:column="17">1024<pos:position pos:line="13" pos:column="21"/></literal></expr>]<pos:position pos:line="13" pos:column="22"/></index></name></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">status<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">errno<pos:position pos:line="14" pos:column="19"/></name></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ERROR<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"notify_nagios plugin: Opening \"%s\" failed: %s"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="62">file<pos:position pos:line="15" pos:column="66"/></name></expr></argument>,
          <argument><expr><call><name pos:line="16" pos:column="11">sstrerror<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">status<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="29">errbuf<pos:position pos:line="16" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="37">sizeof<argument_list pos:line="16" pos:column="43">(<argument><expr><name pos:line="16" pos:column="44">errbuf<pos:position pos:line="16" pos:column="50"/></name></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">status<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
  }<pos:position pos:line="18" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="20" pos:column="3">lock<pos:position pos:line="20" pos:column="7"/></name><operator pos:line="20" pos:column="7">.<pos:position pos:line="20" pos:column="8"/></operator><name pos:line="20" pos:column="8">l_type<pos:position pos:line="20" pos:column="14"/></name></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">F_WRLCK<pos:position pos:line="20" pos:column="24"/></name></expr>;<pos:position pos:line="20" pos:column="25"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="21" pos:column="3">lock<pos:position pos:line="21" pos:column="7"/></name><operator pos:line="21" pos:column="7">.<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">l_whence<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">SEEK_END<pos:position pos:line="21" pos:column="27"/></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">status<pos:position pos:line="23" pos:column="9"/></name> <operator pos:line="23" pos:column="10">=<pos:position pos:line="23" pos:column="11"/></operator> <call><name pos:line="23" pos:column="12">fcntl<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><name pos:line="23" pos:column="18">fd<pos:position pos:line="23" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="22">F_GETLK<pos:position pos:line="23" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="31">&amp;<pos:position pos:line="23" pos:column="36"/></operator><name pos:line="23" pos:column="32">lock<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">status<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">!=<pos:position pos:line="24" pos:column="16"/></operator> <literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name></type> <name><name pos:line="25" pos:column="10">errbuf<pos:position pos:line="25" pos:column="16"/></name><index pos:line="25" pos:column="16">[<expr><literal type="number" pos:line="25" pos:column="17">1024<pos:position pos:line="25" pos:column="21"/></literal></expr>]<pos:position pos:line="25" pos:column="22"/></index></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">status<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">errno<pos:position pos:line="26" pos:column="19"/></name></expr>;<pos:position pos:line="26" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">ERROR<pos:position pos:line="27" pos:column="10"/></name><argument_list pos:line="27" pos:column="10">(<argument><expr><literal type="string" pos:line="27" pos:column="11">"notify_nagios plugin: Failed to acquire write lock on \"%s\": %s"<pos:position pos:line="27" pos:column="77"/></literal></expr></argument>,
          <argument><expr><name pos:line="28" pos:column="11">file<pos:position pos:line="28" pos:column="15"/></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="17">sstrerror<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name pos:line="28" pos:column="27">status<pos:position pos:line="28" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="35">errbuf<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="28" pos:column="43">sizeof<argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">errbuf<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">close<pos:position pos:line="29" pos:column="10"/></name><argument_list pos:line="29" pos:column="10">(<argument><expr><name pos:line="29" pos:column="11">fd<pos:position pos:line="29" pos:column="13"/></name></expr></argument>)<pos:position pos:line="29" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="15"/></expr_stmt>
    <return pos:line="30" pos:column="5">return <expr><name pos:line="30" pos:column="12">status<pos:position pos:line="30" pos:column="18"/></name></expr>;<pos:position pos:line="30" pos:column="19"/></return>
  }<pos:position pos:line="31" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="33" pos:column="3">status<pos:position pos:line="33" pos:column="9"/></name> <operator pos:line="33" pos:column="10">=<pos:position pos:line="33" pos:column="11"/></operator> <operator pos:line="33" pos:column="12">(<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">int<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">)<pos:position pos:line="33" pos:column="17"/></operator><call><name pos:line="33" pos:column="17">lseek<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">fd<pos:position pos:line="33" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="27">0<pos:position pos:line="33" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="30">SEEK_END<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
  <if pos:line="34" pos:column="3">if <condition pos:line="34" pos:column="6">(<expr><name pos:line="34" pos:column="7">status<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <operator pos:line="34" pos:column="17">-<pos:position pos:line="34" pos:column="18"/></operator><literal type="number" pos:line="34" pos:column="18">1<pos:position pos:line="34" pos:column="19"/></literal></expr>)<pos:position pos:line="34" pos:column="20"/></condition><then pos:line="34" pos:column="20"> <block pos:line="34" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">char<pos:position pos:line="35" pos:column="9"/></name></type> <name><name pos:line="35" pos:column="10">errbuf<pos:position pos:line="35" pos:column="16"/></name><index pos:line="35" pos:column="16">[<expr><literal type="number" pos:line="35" pos:column="17">1024<pos:position pos:line="35" pos:column="21"/></literal></expr>]<pos:position pos:line="35" pos:column="22"/></index></name></decl>;<pos:position pos:line="35" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">status<pos:position pos:line="36" pos:column="11"/></name> <operator pos:line="36" pos:column="12">=<pos:position pos:line="36" pos:column="13"/></operator> <name pos:line="36" pos:column="14">errno<pos:position pos:line="36" pos:column="19"/></name></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">ERROR<pos:position pos:line="37" pos:column="10"/></name><argument_list pos:line="37" pos:column="10">(<argument><expr><literal type="string" pos:line="37" pos:column="11">"notify_nagios plugin: Seeking to end of \"%s\" failed: %s"<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="72">file<pos:position pos:line="37" pos:column="76"/></name></expr></argument>,
          <argument><expr><call><name pos:line="38" pos:column="11">sstrerror<pos:position pos:line="38" pos:column="20"/></name><argument_list pos:line="38" pos:column="20">(<argument><expr><name pos:line="38" pos:column="21">status<pos:position pos:line="38" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">errbuf<pos:position pos:line="38" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="37">sizeof<argument_list pos:line="38" pos:column="43">(<argument><expr><name pos:line="38" pos:column="44">errbuf<pos:position pos:line="38" pos:column="50"/></name></expr></argument>)<pos:position pos:line="38" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">close<pos:position pos:line="39" pos:column="10"/></name><argument_list pos:line="39" pos:column="10">(<argument><expr><name pos:line="39" pos:column="11">fd<pos:position pos:line="39" pos:column="13"/></name></expr></argument>)<pos:position pos:line="39" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="15"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">status<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></return>
  }<pos:position pos:line="41" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="43" pos:column="3">status<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <operator pos:line="43" pos:column="12">(<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="13">int<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">)<pos:position pos:line="43" pos:column="17"/></operator><call><name pos:line="43" pos:column="17">swrite<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">fd<pos:position pos:line="43" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="28">buffer<pos:position pos:line="43" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="36">strlen<pos:position pos:line="43" pos:column="42"/></name><argument_list pos:line="43" pos:column="42">(<argument><expr><name pos:line="43" pos:column="43">buffer<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">status<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">!=<pos:position pos:line="44" pos:column="16"/></operator> <literal type="number" pos:line="44" pos:column="17">0<pos:position pos:line="44" pos:column="18"/></literal></expr>)<pos:position pos:line="44" pos:column="19"/></condition><then pos:line="44" pos:column="19"> <block pos:line="44" pos:column="20">{
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">char<pos:position pos:line="45" pos:column="9"/></name></type> <name><name pos:line="45" pos:column="10">errbuf<pos:position pos:line="45" pos:column="16"/></name><index pos:line="45" pos:column="16">[<expr><literal type="number" pos:line="45" pos:column="17">1024<pos:position pos:line="45" pos:column="21"/></literal></expr>]<pos:position pos:line="45" pos:column="22"/></index></name></decl>;<pos:position pos:line="45" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><name pos:line="46" pos:column="5">status<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <name pos:line="46" pos:column="14">errno<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">ERROR<pos:position pos:line="47" pos:column="10"/></name><argument_list pos:line="47" pos:column="10">(<argument><expr><literal type="string" pos:line="47" pos:column="11">"notify_nagios plugin: Writing to \"%s\" failed: %s"<pos:position pos:line="47" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="65">file<pos:position pos:line="47" pos:column="69"/></name></expr></argument>,
          <argument><expr><call><name pos:line="48" pos:column="11">sstrerror<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">(<argument><expr><name pos:line="48" pos:column="21">status<pos:position pos:line="48" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="29">errbuf<pos:position pos:line="48" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="37">sizeof<argument_list pos:line="48" pos:column="43">(<argument><expr><name pos:line="48" pos:column="44">errbuf<pos:position pos:line="48" pos:column="50"/></name></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="49" pos:column="5">close<pos:position pos:line="49" pos:column="10"/></name><argument_list pos:line="49" pos:column="10">(<argument><expr><name pos:line="49" pos:column="11">fd<pos:position pos:line="49" pos:column="13"/></name></expr></argument>)<pos:position pos:line="49" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="15"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">status<pos:position pos:line="50" pos:column="18"/></name></expr>;<pos:position pos:line="50" pos:column="19"/></return>
  }<pos:position pos:line="51" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="53" pos:column="3">close<pos:position pos:line="53" pos:column="8"/></name><argument_list pos:line="53" pos:column="8">(<argument><expr><name pos:line="53" pos:column="9">fd<pos:position pos:line="53" pos:column="11"/></name></expr></argument>)<pos:position pos:line="53" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="13"/></expr_stmt>
  <return pos:line="54" pos:column="3">return <expr><name pos:line="54" pos:column="10">status<pos:position pos:line="54" pos:column="16"/></name></expr>;<pos:position pos:line="54" pos:column="17"/></return>
}<pos:position pos:line="55" pos:column="2"/></block></function></unit>

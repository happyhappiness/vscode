<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1208_collectd-4.10.9.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dispatch_value<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">oconfig_item_t<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">ci<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">int<pos:position pos:line="3" pos:column="12"/></name></type> <name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><operator pos:line="3" pos:column="19">-<pos:position pos:line="3" pos:column="20"/></operator><literal type="number" pos:line="3" pos:column="20">2<pos:position pos:line="3" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<for pos:line="6" pos:column="9">for <control pos:line="6" pos:column="13">(<init><expr><name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">cf_value_map_num<pos:position pos:line="6" pos:column="41"/></name></expr>;<pos:position pos:line="6" pos:column="42"/></condition> <incr><expr><name pos:line="6" pos:column="43">i<pos:position pos:line="6" pos:column="44"/></name><operator pos:line="6" pos:column="44">++<pos:position pos:line="6" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="47"/></control>
		<block type="pseudo"><if pos:line="7" pos:column="17">if <condition pos:line="7" pos:column="20">(<expr><call><name pos:line="7" pos:column="21">strcasecmp<pos:position pos:line="7" pos:column="31"/></name> <argument_list pos:line="7" pos:column="32">(<argument><expr><name><name pos:line="7" pos:column="33">cf_value_map<pos:position pos:line="7" pos:column="45"/></name><index pos:line="7" pos:column="45">[<expr><name pos:line="7" pos:column="46">i<pos:position pos:line="7" pos:column="47"/></name></expr>]<pos:position pos:line="7" pos:column="48"/></index></name><operator pos:line="7" pos:column="48">.<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">key<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="54">ci<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">-&gt;<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="58">key<pos:position pos:line="7" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call> <operator pos:line="7" pos:column="63">==<pos:position pos:line="7" pos:column="65"/></operator> <literal type="number" pos:line="7" pos:column="66">0<pos:position pos:line="7" pos:column="67"/></literal></expr>)<pos:position pos:line="7" pos:column="68"/></condition><then pos:line="7" pos:column="68">
		<block pos:line="8" pos:column="17">{
			<expr_stmt><expr><name pos:line="9" pos:column="25">ret<pos:position pos:line="9" pos:column="28"/></name> <operator pos:line="9" pos:column="29">=<pos:position pos:line="9" pos:column="30"/></operator> <name><name pos:line="9" pos:column="31">cf_value_map<pos:position pos:line="9" pos:column="43"/></name><index pos:line="9" pos:column="43">[<expr><name pos:line="9" pos:column="44">i<pos:position pos:line="9" pos:column="45"/></name></expr>]<pos:position pos:line="9" pos:column="46"/></index></name><operator pos:line="9" pos:column="46">.<pos:position pos:line="9" pos:column="47"/></operator><call><name pos:line="9" pos:column="47">func<pos:position pos:line="9" pos:column="51"/></name> <argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">ci<pos:position pos:line="9" pos:column="55"/></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="57"/></expr_stmt>
			<break pos:line="10" pos:column="25">break;<pos:position pos:line="10" pos:column="31"/></break>
		}<pos:position pos:line="11" pos:column="18"/></block></then></if></block></for>

	<for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="25">cf_global_options_num<pos:position pos:line="13" pos:column="46"/></name></expr>;<pos:position pos:line="13" pos:column="47"/></condition> <incr><expr><name pos:line="13" pos:column="48">i<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">++<pos:position pos:line="13" pos:column="51"/></operator></expr></incr>)<pos:position pos:line="13" pos:column="52"/></control>
		<block type="pseudo"><if pos:line="14" pos:column="17">if <condition pos:line="14" pos:column="20">(<expr><call><name pos:line="14" pos:column="21">strcasecmp<pos:position pos:line="14" pos:column="31"/></name> <argument_list pos:line="14" pos:column="32">(<argument><expr><name><name pos:line="14" pos:column="33">cf_global_options<pos:position pos:line="14" pos:column="50"/></name><index pos:line="14" pos:column="50">[<expr><name pos:line="14" pos:column="51">i<pos:position pos:line="14" pos:column="52"/></name></expr>]<pos:position pos:line="14" pos:column="53"/></index></name><operator pos:line="14" pos:column="53">.<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="54">key<pos:position pos:line="14" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="59">ci<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">-&gt;<pos:position pos:line="14" pos:column="66"/></operator><name pos:line="14" pos:column="63">key<pos:position pos:line="14" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call> <operator pos:line="14" pos:column="68">==<pos:position pos:line="14" pos:column="70"/></operator> <literal type="number" pos:line="14" pos:column="71">0<pos:position pos:line="14" pos:column="72"/></literal></expr>)<pos:position pos:line="14" pos:column="73"/></condition><then pos:line="14" pos:column="73">
		<block pos:line="15" pos:column="17">{
			<expr_stmt><expr><name pos:line="16" pos:column="25">ret<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <call><name pos:line="16" pos:column="31">dispatch_global_option<pos:position pos:line="16" pos:column="53"/></name> <argument_list pos:line="16" pos:column="54">(<argument><expr><name pos:line="16" pos:column="55">ci<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt>
			<break pos:line="17" pos:column="25">break;<pos:position pos:line="17" pos:column="31"/></break>
		}<pos:position pos:line="18" pos:column="18"/></block></then></if></block></for>

	<return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">ret<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">)<pos:position pos:line="20" pos:column="21"/></operator></expr>;<pos:position pos:line="20" pos:column="22"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

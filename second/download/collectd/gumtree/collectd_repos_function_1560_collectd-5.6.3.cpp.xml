<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1560_collectd-5.6.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">c_notify_config<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">oconfig_item_t<pos:position pos:line="1" pos:column="42"/></name> <modifier pos:line="1" pos:column="43">*<pos:position pos:line="1" pos:column="44"/></modifier></type><name pos:line="1" pos:column="44">ci<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <block pos:line="1" pos:column="48">{
  <for pos:line="2" pos:column="3">for <control pos:line="2" pos:column="7">(<init><decl><type><name pos:line="2" pos:column="8">int<pos:position pos:line="2" pos:column="11"/></name></type> <name pos:line="2" pos:column="12">i<pos:position pos:line="2" pos:column="13"/></name> <init pos:line="2" pos:column="14">= <expr><literal type="number" pos:line="2" pos:column="16">0<pos:position pos:line="2" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="18"/></init> <condition><expr><name pos:line="2" pos:column="19">i<pos:position pos:line="2" pos:column="20"/></name> <operator pos:line="2" pos:column="21">&lt;<pos:position pos:line="2" pos:column="25"/></operator> <name><name pos:line="2" pos:column="23">ci<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">-&gt;<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="27">children_num<pos:position pos:line="2" pos:column="39"/></name></name></expr>;<pos:position pos:line="2" pos:column="40"/></condition> <incr><expr><operator pos:line="2" pos:column="41">++<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">i<pos:position pos:line="2" pos:column="44"/></name></expr></incr>)<pos:position pos:line="2" pos:column="45"/></control> <block pos:line="2" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">oconfig_item_t<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">c<pos:position pos:line="3" pos:column="22"/></name> <init pos:line="3" pos:column="23">= <expr><name><name pos:line="3" pos:column="25">ci<pos:position pos:line="3" pos:column="27"/></name><operator pos:line="3" pos:column="27">-&gt;<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="29">children<pos:position pos:line="3" pos:column="37"/></name></name> <operator pos:line="3" pos:column="38">+<pos:position pos:line="3" pos:column="39"/></operator> <name pos:line="3" pos:column="40">i<pos:position pos:line="3" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="42"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><literal type="number" pos:line="5" pos:column="9">0<pos:position pos:line="5" pos:column="10"/></literal> <operator pos:line="5" pos:column="11">==<pos:position pos:line="5" pos:column="13"/></operator> <call><name pos:line="5" pos:column="14">strcasecmp<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name><name pos:line="5" pos:column="25">c<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">-&gt;<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="28">key<pos:position pos:line="5" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="33">"OkayTimeout"<pos:position pos:line="5" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="7">set_timeout<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">c<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="23">okay_timeout<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="37"/></expr_stmt></block></then>
    <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">strcasecmp<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name><name pos:line="7" pos:column="30">c<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">-&gt;<pos:position pos:line="7" pos:column="36"/></operator><name pos:line="7" pos:column="33">key<pos:position pos:line="7" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="38">"WarningTimeout"<pos:position pos:line="7" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="7">set_timeout<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">c<pos:position pos:line="8" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="22">&amp;<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="23">warn_timeout<pos:position pos:line="8" pos:column="35"/></name></expr></argument>)<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <call><name pos:line="9" pos:column="19">strcasecmp<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name><name pos:line="9" pos:column="30">c<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">-&gt;<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="33">key<pos:position pos:line="9" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="38">"FailureTimeout"<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="56"/></condition><then pos:line="9" pos:column="56">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="7">set_timeout<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">c<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="22">&amp;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="23">fail_timeout<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt></block></then></if></elseif></if>
  }<pos:position pos:line="11" pos:column="4"/></block></for>
  <return pos:line="12" pos:column="3">return <expr><literal type="number" pos:line="12" pos:column="10">0<pos:position pos:line="12" pos:column="11"/></literal></expr>;<pos:position pos:line="12" pos:column="12"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

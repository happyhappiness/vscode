<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2014_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">sigrok_config_device<pos:position pos:line="1" pos:column="32"/></name><parameter_list pos:line="1" pos:column="32">(<parameter><decl><type><name pos:line="1" pos:column="33">oconfig_item_t<pos:position pos:line="1" pos:column="47"/></name> <modifier pos:line="1" pos:column="48">*<pos:position pos:line="1" pos:column="49"/></modifier></type><name pos:line="1" pos:column="49">ci<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="3" pos:column="9">struct<pos:position pos:line="3" pos:column="15"/></name> <name pos:line="3" pos:column="16">config_device<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">*<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="31">cfdev<pos:position pos:line="3" pos:column="36"/></name></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><operator pos:line="5" pos:column="14">(<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">cfdev<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <call><name pos:line="5" pos:column="23">calloc<pos:position pos:line="5" pos:column="29"/></name><argument_list pos:line="5" pos:column="29">(<argument><expr><literal type="number" pos:line="5" pos:column="30">1<pos:position pos:line="5" pos:column="31"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="33">sizeof<argument_list pos:line="5" pos:column="39">(<argument><expr><operator pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="41">cfdev<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator></expr>)<pos:position pos:line="5" pos:column="50"/></condition><then pos:line="5" pos:column="50"> <block pos:line="5" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="6" pos:column="17">ERROR<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><literal type="string" pos:line="6" pos:column="23">"sigrok plugin: calloc failed."<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>
		<return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>;<pos:position pos:line="7" pos:column="27"/></return>
	}<pos:position pos:line="8" pos:column="10"/></block></then></if>
	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">cf_util_get_string<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><name pos:line="9" pos:column="32">ci<pos:position pos:line="9" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="36">&amp;<pos:position pos:line="9" pos:column="41"/></operator><name><name pos:line="9" pos:column="37">cfdev<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">name<pos:position pos:line="9" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
		<expr_stmt><expr><call><name pos:line="10" pos:column="17">free<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name pos:line="10" pos:column="22">cfdev<pos:position pos:line="10" pos:column="27"/></name></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="11" pos:column="17">WARNING<pos:position pos:line="11" pos:column="24"/></name><argument_list pos:line="11" pos:column="24">(<argument><expr><literal type="string" pos:line="11" pos:column="25">"sigrok plugin: Invalid device name."<pos:position pos:line="11" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
		<return pos:line="12" pos:column="17">return <expr><operator pos:line="12" pos:column="24">-<pos:position pos:line="12" pos:column="25"/></operator><literal type="number" pos:line="12" pos:column="25">1<pos:position pos:line="12" pos:column="26"/></literal></expr>;<pos:position pos:line="12" pos:column="27"/></return>
	}<pos:position pos:line="13" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name><name pos:line="14" pos:column="9">cfdev<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">min_dispatch_interval<pos:position pos:line="14" pos:column="37"/></name></name> <operator pos:line="14" pos:column="38">=<pos:position pos:line="14" pos:column="39"/></operator> <name pos:line="14" pos:column="40">DEFAULT_MIN_DISPATCH_INTERVAL<pos:position pos:line="14" pos:column="69"/></name></expr>;<pos:position pos:line="14" pos:column="70"/></expr_stmt>

	<for pos:line="16" pos:column="9">for <control pos:line="16" pos:column="13">(<init><decl><type><name pos:line="16" pos:column="14">int<pos:position pos:line="16" pos:column="17"/></name></type> <name pos:line="16" pos:column="18">i<pos:position pos:line="16" pos:column="19"/></name> <init pos:line="16" pos:column="20">= <expr><literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="24"/></init> <condition><expr><name pos:line="16" pos:column="25">i<pos:position pos:line="16" pos:column="26"/></name> <operator pos:line="16" pos:column="27">&lt;<pos:position pos:line="16" pos:column="31"/></operator> <name><name pos:line="16" pos:column="29">ci<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">children_num<pos:position pos:line="16" pos:column="45"/></name></name></expr>;<pos:position pos:line="16" pos:column="46"/></condition> <incr><expr><name pos:line="16" pos:column="47">i<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">++<pos:position pos:line="16" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="16" pos:column="51"/></control> <block pos:line="16" pos:column="52">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">oconfig_item_t<pos:position pos:line="17" pos:column="31"/></name> <modifier pos:line="17" pos:column="32">*<pos:position pos:line="17" pos:column="33"/></modifier></type><name pos:line="17" pos:column="33">item<pos:position pos:line="17" pos:column="37"/></name> <init pos:line="17" pos:column="38">= <expr><name><name pos:line="17" pos:column="40">ci<pos:position pos:line="17" pos:column="42"/></name><operator pos:line="17" pos:column="42">-&gt;<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="44">children<pos:position pos:line="17" pos:column="52"/></name></name> <operator pos:line="17" pos:column="53">+<pos:position pos:line="17" pos:column="54"/></operator> <name pos:line="17" pos:column="55">i<pos:position pos:line="17" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="57"/></decl_stmt>
		<if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><operator pos:line="18" pos:column="21">!<pos:position pos:line="18" pos:column="22"/></operator><call><name pos:line="18" pos:column="22">strcasecmp<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name><name pos:line="18" pos:column="33">item<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">key<pos:position pos:line="18" pos:column="42"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="44">"driver"<pos:position pos:line="18" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="54"/></condition><then pos:line="18" pos:column="54">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="25">cf_util_get_string<pos:position pos:line="19" pos:column="43"/></name><argument_list pos:line="19" pos:column="43">(<argument><expr><name pos:line="19" pos:column="44">item<pos:position pos:line="19" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="50">&amp;<pos:position pos:line="19" pos:column="55"/></operator><name><name pos:line="19" pos:column="51">cfdev<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">driver<pos:position pos:line="19" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt></block></then>
		<elseif pos:line="20" pos:column="17">else <if pos:line="20" pos:column="22">if <condition pos:line="20" pos:column="25">(<expr><operator pos:line="20" pos:column="26">!<pos:position pos:line="20" pos:column="27"/></operator><call><name pos:line="20" pos:column="27">strcasecmp<pos:position pos:line="20" pos:column="37"/></name><argument_list pos:line="20" pos:column="37">(<argument><expr><name><name pos:line="20" pos:column="38">item<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">-&gt;<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="44">key<pos:position pos:line="20" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="49">"conn"<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="57"/></condition><then pos:line="20" pos:column="57">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="25">cf_util_get_string<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">item<pos:position pos:line="21" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="50">&amp;<pos:position pos:line="21" pos:column="55"/></operator><name><name pos:line="21" pos:column="51">cfdev<pos:position pos:line="21" pos:column="56"/></name><operator pos:line="21" pos:column="56">-&gt;<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="58">conn<pos:position pos:line="21" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="22" pos:column="17">else <if pos:line="22" pos:column="22">if <condition pos:line="22" pos:column="25">(<expr><operator pos:line="22" pos:column="26">!<pos:position pos:line="22" pos:column="27"/></operator><call><name pos:line="22" pos:column="27">strcasecmp<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name><name pos:line="22" pos:column="38">item<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">-&gt;<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="44">key<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="49">"serialcomm"<pos:position pos:line="22" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="63"/></condition><then pos:line="22" pos:column="63">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="25">cf_util_get_string<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">(<argument><expr><name pos:line="23" pos:column="44">item<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="50">&amp;<pos:position pos:line="23" pos:column="55"/></operator><name><name pos:line="23" pos:column="51">cfdev<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">serialcomm<pos:position pos:line="23" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="70"/></expr_stmt></block></then></if></elseif>
		<elseif pos:line="24" pos:column="17">else <if pos:line="24" pos:column="22">if <condition pos:line="24" pos:column="25">(<expr><operator pos:line="24" pos:column="26">!<pos:position pos:line="24" pos:column="27"/></operator><call><name pos:line="24" pos:column="27">strcasecmp<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><name><name pos:line="24" pos:column="38">item<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">key<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="49">"minimuminterval"<pos:position pos:line="24" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="68"/></condition><then pos:line="24" pos:column="68">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="25">cf_util_get_cdtime<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">item<pos:position pos:line="25" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="50">&amp;<pos:position pos:line="25" pos:column="55"/></operator><name><name pos:line="25" pos:column="51">cfdev<pos:position pos:line="25" pos:column="56"/></name><operator pos:line="25" pos:column="56">-&gt;<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="58">min_dispatch_interval<pos:position pos:line="25" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="81"/></expr_stmt></block></then></if></elseif>
		<else pos:line="26" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="25">WARNING<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><literal type="string" pos:line="27" pos:column="33">"sigrok plugin: Invalid keyword \"%s\"."<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="28" pos:column="41">item<pos:position pos:line="28" pos:column="45"/></name><operator pos:line="28" pos:column="45">-&gt;<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="47">key<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt></block></else></if>
	}<pos:position pos:line="29" pos:column="10"/></block></for>

	<expr_stmt><expr><name pos:line="31" pos:column="9">config_devices<pos:position pos:line="31" pos:column="23"/></name> <operator pos:line="31" pos:column="24">=<pos:position pos:line="31" pos:column="25"/></operator> <call><name pos:line="31" pos:column="26">g_slist_append<pos:position pos:line="31" pos:column="40"/></name><argument_list pos:line="31" pos:column="40">(<argument><expr><name pos:line="31" pos:column="41">config_devices<pos:position pos:line="31" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="57">cfdev<pos:position pos:line="31" pos:column="62"/></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>

	<return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">0<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

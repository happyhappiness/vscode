<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_92_collectd-4.1.0.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">lt_ptr<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">lt_dlcaller_get_data<pos:position pos:line="2" pos:column="21"/></name>  <parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">key<pos:position pos:line="2" pos:column="27"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">handle<pos:position pos:line="2" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_dlcaller_id<pos:position pos:line="3" pos:column="20"/></name></type> <name pos:line="3" pos:column="21">key<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
     <decl_stmt><decl><type><name pos:line="4" pos:column="6">lt_dlhandle<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">handle<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
<block pos:line="5" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_ptr<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">result<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><operator pos:line="6" pos:column="19">(<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">lt_ptr<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">)<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>

  <comment type="block" pos:line="8" pos:column="3">/* This needs to be locked so that the caller data isn't updated by
     another thread part way through this function.  */</comment>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="10" pos:column="18"/></name> <argument_list pos:line="10" pos:column="19">()<pos:position pos:line="10" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="12" pos:column="3">/* Locate the index of the element with a matching KEY.  */</comment>
  <block pos:line="13" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name></decl>;<pos:position pos:line="14" pos:column="11"/></decl_stmt>
    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">i<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr>;<pos:position pos:line="15" pos:column="16"/></init> <condition><expr><name><name pos:line="15" pos:column="17">handle<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">caller_data<pos:position pos:line="15" pos:column="36"/></name><index pos:line="15" pos:column="36">[<expr><name pos:line="15" pos:column="37">i<pos:position pos:line="15" pos:column="38"/></name></expr>]<pos:position pos:line="15" pos:column="39"/></index></name><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">key<pos:position pos:line="15" pos:column="43"/></name></expr>;<pos:position pos:line="15" pos:column="44"/></condition> <incr><expr><operator pos:line="15" pos:column="45">++<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">i<pos:position pos:line="15" pos:column="48"/></name></expr></incr>)<pos:position pos:line="15" pos:column="49"/></control>
      <block pos:line="16" pos:column="7">{
	<if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">handle<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">caller_data<pos:position pos:line="17" pos:column="32"/></name><index pos:line="17" pos:column="32">[<expr><name pos:line="17" pos:column="33">i<pos:position pos:line="17" pos:column="34"/></name></expr>]<pos:position pos:line="17" pos:column="35"/></index></name><operator pos:line="17" pos:column="35">.<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">key<pos:position pos:line="17" pos:column="39"/></name> <operator pos:line="17" pos:column="40">==<pos:position pos:line="17" pos:column="42"/></operator> <name pos:line="17" pos:column="43">key<pos:position pos:line="17" pos:column="46"/></name></expr>)<pos:position pos:line="17" pos:column="47"/></condition><then pos:line="17" pos:column="47">
	  <block pos:line="18" pos:column="11">{
	    <expr_stmt><expr><name pos:line="19" pos:column="13">result<pos:position pos:line="19" pos:column="19"/></name> <operator pos:line="19" pos:column="20">=<pos:position pos:line="19" pos:column="21"/></operator> <name><name pos:line="19" pos:column="22">handle<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">caller_data<pos:position pos:line="19" pos:column="41"/></name><index pos:line="19" pos:column="41">[<expr><name pos:line="19" pos:column="42">i<pos:position pos:line="19" pos:column="43"/></name></expr>]<pos:position pos:line="19" pos:column="44"/></index></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">data<pos:position pos:line="19" pos:column="49"/></name></expr>;<pos:position pos:line="19" pos:column="50"/></expr_stmt>
	    <break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break>
	  }<pos:position pos:line="21" pos:column="12"/></block></then></if>
      }<pos:position pos:line="22" pos:column="8"/></block></for>
  }<pos:position pos:line="23" pos:column="4"/></block>

  <expr_stmt><expr><call><name pos:line="25" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="25" pos:column="20"/></name> <argument_list pos:line="25" pos:column="21">()<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>

  <return pos:line="27" pos:column="3">return <expr><name pos:line="27" pos:column="10">result<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function_decl></unit>

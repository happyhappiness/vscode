<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_502_collectd-4.0.7.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">parse_part_values<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier><modifier pos:line="1" pos:column="37">*<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="38">ret_buffer<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="50">int<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">ret_buffer_len<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">value_t<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier><modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">ret_values<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">ret_num_values<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">char<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">buffer<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">ret_buffer<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type>   <name pos:line="5" pos:column="15">buffer_len<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">ret_buffer_len<pos:position pos:line="5" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">part_values_t<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">pv<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type>   <name pos:line="7" pos:column="15">i<pos:position pos:line="7" pos:column="16"/></name></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="9" pos:column="9">uint16_t<pos:position pos:line="9" pos:column="17"/></name></type> <name pos:line="9" pos:column="18">h_length<pos:position pos:line="9" pos:column="26"/></name></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">uint16_t<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">h_type<pos:position pos:line="10" pos:column="24"/></name></decl>;<pos:position pos:line="10" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">uint16_t<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">h_num<pos:position pos:line="11" pos:column="23"/></name></decl>;<pos:position pos:line="11" pos:column="24"/></decl_stmt>

	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">buffer_len<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">&lt;<pos:position pos:line="13" pos:column="28"/></operator> <operator pos:line="13" pos:column="26">(<pos:position pos:line="13" pos:column="27"/></operator><literal type="number" pos:line="13" pos:column="27">15<pos:position pos:line="13" pos:column="29"/></literal><operator pos:line="13" pos:column="29">)<pos:position pos:line="13" pos:column="30"/></operator></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31">
	<block pos:line="14" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="15" pos:column="17">DEBUG<pos:position pos:line="15" pos:column="22"/></name> <argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="string" pos:line="15" pos:column="24">"network plugin: packet is too short: buffer_len = %i"<pos:position pos:line="15" pos:column="78"/></literal></expr></argument>,
				<argument><expr><name pos:line="16" pos:column="33">buffer_len<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="20" pos:column="9">pv<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">head<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">part_header_t<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">*<pos:position pos:line="20" pos:column="35"/></operator><operator pos:line="20" pos:column="35">)<pos:position pos:line="20" pos:column="36"/></operator> <name pos:line="20" pos:column="37">buffer<pos:position pos:line="20" pos:column="43"/></name></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="21" pos:column="9">h_length<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">ntohs<pos:position pos:line="21" pos:column="25"/></name> <argument_list pos:line="21" pos:column="26">(<argument><expr><name><name pos:line="21" pos:column="27">pv<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">head<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">length<pos:position pos:line="21" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><name pos:line="22" pos:column="9">h_type<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <call><name pos:line="22" pos:column="18">ntohs<pos:position pos:line="22" pos:column="23"/></name> <argument_list pos:line="22" pos:column="24">(<argument><expr><name><name pos:line="22" pos:column="25">pv<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">.<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">head<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">type<pos:position pos:line="22" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="24" pos:column="9">assert<pos:position pos:line="24" pos:column="15"/></name> <argument_list pos:line="24" pos:column="16">(<argument><expr><name pos:line="24" pos:column="17">h_type<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">==<pos:position pos:line="24" pos:column="26"/></operator> <name pos:line="24" pos:column="27">TYPE_VALUES<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="26" pos:column="9">pv<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">.<pos:position pos:line="26" pos:column="12"/></operator><name pos:line="26" pos:column="12">num_values<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">uint16_t<pos:position pos:line="26" pos:column="34"/></name> <operator pos:line="26" pos:column="35">*<pos:position pos:line="26" pos:column="36"/></operator><operator pos:line="26" pos:column="36">)<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="38">(<pos:position pos:line="26" pos:column="39"/></operator><name><name pos:line="26" pos:column="39">pv<pos:position pos:line="26" pos:column="41"/></name><operator pos:line="26" pos:column="41">.<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="42">head<pos:position pos:line="26" pos:column="46"/></name></name> <operator pos:line="26" pos:column="47">+<pos:position pos:line="26" pos:column="48"/></operator> <literal type="number" pos:line="26" pos:column="49">1<pos:position pos:line="26" pos:column="50"/></literal><operator pos:line="26" pos:column="50">)<pos:position pos:line="26" pos:column="51"/></operator></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name pos:line="27" pos:column="9">h_num<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">ntohs<pos:position pos:line="27" pos:column="22"/></name> <argument_list pos:line="27" pos:column="23">(<argument><expr><operator pos:line="27" pos:column="24">*<pos:position pos:line="27" pos:column="25"/></operator><name><name pos:line="27" pos:column="25">pv<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">num_values<pos:position pos:line="27" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>

	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">h_num<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">!=<pos:position pos:line="29" pos:column="21"/></operator> <operator pos:line="29" pos:column="22">(<pos:position pos:line="29" pos:column="23"/></operator><operator pos:line="29" pos:column="23">(<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">h_length<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">-<pos:position pos:line="29" pos:column="34"/></operator> <literal type="number" pos:line="29" pos:column="35">6<pos:position pos:line="29" pos:column="36"/></literal><operator pos:line="29" pos:column="36">)<pos:position pos:line="29" pos:column="37"/></operator> <operator pos:line="29" pos:column="38">/<pos:position pos:line="29" pos:column="39"/></operator> <literal type="number" pos:line="29" pos:column="40">9<pos:position pos:line="29" pos:column="41"/></literal><operator pos:line="29" pos:column="41">)<pos:position pos:line="29" pos:column="42"/></operator></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43">
	<block pos:line="30" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="31" pos:column="17">DEBUG<pos:position pos:line="31" pos:column="22"/></name> <argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="string" pos:line="31" pos:column="24">"`length' and `num of values' don't match"<pos:position pos:line="31" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="68"/></expr_stmt>
		<return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><operator pos:line="32" pos:column="25">-<pos:position pos:line="32" pos:column="26"/></operator><literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator></expr>;<pos:position pos:line="32" pos:column="29"/></return>
	}<pos:position pos:line="33" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name><name pos:line="35" pos:column="9">pv<pos:position pos:line="35" pos:column="11"/></name><operator pos:line="35" pos:column="11">.<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">values_types<pos:position pos:line="35" pos:column="24"/></name></name> <operator pos:line="35" pos:column="25">=<pos:position pos:line="35" pos:column="26"/></operator> <operator pos:line="35" pos:column="27">(<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">uint8_t<pos:position pos:line="35" pos:column="35"/></name> <operator pos:line="35" pos:column="36">*<pos:position pos:line="35" pos:column="37"/></operator><operator pos:line="35" pos:column="37">)<pos:position pos:line="35" pos:column="38"/></operator> <operator pos:line="35" pos:column="39">(<pos:position pos:line="35" pos:column="40"/></operator><name><name pos:line="35" pos:column="40">pv<pos:position pos:line="35" pos:column="42"/></name><operator pos:line="35" pos:column="42">.<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="43">num_values<pos:position pos:line="35" pos:column="53"/></name></name> <operator pos:line="35" pos:column="54">+<pos:position pos:line="35" pos:column="55"/></operator> <literal type="number" pos:line="35" pos:column="56">1<pos:position pos:line="35" pos:column="57"/></literal><operator pos:line="35" pos:column="57">)<pos:position pos:line="35" pos:column="58"/></operator></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">pv<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">values<pos:position pos:line="36" pos:column="18"/></name></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="21">(<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">value_t<pos:position pos:line="36" pos:column="29"/></name> <operator pos:line="36" pos:column="30">*<pos:position pos:line="36" pos:column="31"/></operator><operator pos:line="36" pos:column="31">)<pos:position pos:line="36" pos:column="32"/></operator> <operator pos:line="36" pos:column="33">(<pos:position pos:line="36" pos:column="34"/></operator><name><name pos:line="36" pos:column="34">pv<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">.<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">values_types<pos:position pos:line="36" pos:column="49"/></name></name> <operator pos:line="36" pos:column="50">+<pos:position pos:line="36" pos:column="51"/></operator> <name pos:line="36" pos:column="52">h_num<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">)<pos:position pos:line="36" pos:column="58"/></operator></expr>;<pos:position pos:line="36" pos:column="59"/></expr_stmt>

	<for pos:line="38" pos:column="9">for <control pos:line="38" pos:column="13">(<init><expr><name pos:line="38" pos:column="14">i<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <literal type="number" pos:line="38" pos:column="18">0<pos:position pos:line="38" pos:column="19"/></literal></expr>;<pos:position pos:line="38" pos:column="20"/></init> <condition><expr><name pos:line="38" pos:column="21">i<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="25">h_num<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></condition> <incr><expr><name pos:line="38" pos:column="32">i<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">++<pos:position pos:line="38" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="38" pos:column="36"/></control>
		<block type="pseudo"><if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><name><name pos:line="39" pos:column="21">pv<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">values_types<pos:position pos:line="39" pos:column="36"/></name><index pos:line="39" pos:column="36">[<expr><name pos:line="39" pos:column="37">i<pos:position pos:line="39" pos:column="38"/></name></expr>]<pos:position pos:line="39" pos:column="39"/></index></name> <operator pos:line="39" pos:column="40">==<pos:position pos:line="39" pos:column="42"/></operator> <name pos:line="39" pos:column="43">DS_TYPE_COUNTER<pos:position pos:line="39" pos:column="58"/></name></expr>)<pos:position pos:line="39" pos:column="59"/></condition><then pos:line="39" pos:column="59">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="25">pv<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">.<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">values<pos:position pos:line="40" pos:column="34"/></name><index pos:line="40" pos:column="34">[<expr><name pos:line="40" pos:column="35">i<pos:position pos:line="40" pos:column="36"/></name></expr>]<pos:position pos:line="40" pos:column="37"/></index></name><operator pos:line="40" pos:column="37">.<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">counter<pos:position pos:line="40" pos:column="45"/></name> <operator pos:line="40" pos:column="46">=<pos:position pos:line="40" pos:column="47"/></operator> <call><name pos:line="40" pos:column="48">ntohll<pos:position pos:line="40" pos:column="54"/></name> <argument_list pos:line="40" pos:column="55">(<argument><expr><name><name pos:line="40" pos:column="56">pv<pos:position pos:line="40" pos:column="58"/></name><operator pos:line="40" pos:column="58">.<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="59">values<pos:position pos:line="40" pos:column="65"/></name><index pos:line="40" pos:column="65">[<expr><name pos:line="40" pos:column="66">i<pos:position pos:line="40" pos:column="67"/></name></expr>]<pos:position pos:line="40" pos:column="68"/></index></name><operator pos:line="40" pos:column="68">.<pos:position pos:line="40" pos:column="69"/></operator><name pos:line="40" pos:column="69">counter<pos:position pos:line="40" pos:column="76"/></name></expr></argument>)<pos:position pos:line="40" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="78"/></expr_stmt></block></then></if></block></for>

	<expr_stmt><expr><operator pos:line="42" pos:column="9">*<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">ret_buffer<pos:position pos:line="42" pos:column="20"/></name>     <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <operator pos:line="42" pos:column="27">(<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">void<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">*<pos:position pos:line="42" pos:column="34"/></operator><operator pos:line="42" pos:column="34">)<pos:position pos:line="42" pos:column="35"/></operator> <operator pos:line="42" pos:column="36">(<pos:position pos:line="42" pos:column="37"/></operator><name><name pos:line="42" pos:column="37">pv<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">.<pos:position pos:line="42" pos:column="40"/></operator><name pos:line="42" pos:column="40">values<pos:position pos:line="42" pos:column="46"/></name></name> <operator pos:line="42" pos:column="47">+<pos:position pos:line="42" pos:column="48"/></operator> <name pos:line="42" pos:column="49">h_num<pos:position pos:line="42" pos:column="54"/></name><operator pos:line="42" pos:column="54">)<pos:position pos:line="42" pos:column="55"/></operator></expr>;<pos:position pos:line="42" pos:column="56"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="43" pos:column="9">*<pos:position pos:line="43" pos:column="10"/></operator><name pos:line="43" pos:column="10">ret_buffer_len<pos:position pos:line="43" pos:column="24"/></name> <operator pos:line="43" pos:column="25">=<pos:position pos:line="43" pos:column="26"/></operator> <name pos:line="43" pos:column="27">buffer_len<pos:position pos:line="43" pos:column="37"/></name> <operator pos:line="43" pos:column="38">-<pos:position pos:line="43" pos:column="39"/></operator> <name pos:line="43" pos:column="40">h_length<pos:position pos:line="43" pos:column="48"/></name></expr>;<pos:position pos:line="43" pos:column="49"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">ret_num_values<pos:position pos:line="44" pos:column="24"/></name> <operator pos:line="44" pos:column="25">=<pos:position pos:line="44" pos:column="26"/></operator> <name pos:line="44" pos:column="27">h_num<pos:position pos:line="44" pos:column="32"/></name></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
	<expr_stmt><expr><operator pos:line="45" pos:column="9">*<pos:position pos:line="45" pos:column="10"/></operator><name pos:line="45" pos:column="10">ret_values<pos:position pos:line="45" pos:column="20"/></name>     <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <name><name pos:line="45" pos:column="27">pv<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">.<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">values<pos:position pos:line="45" pos:column="36"/></name></name></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>

	<return pos:line="47" pos:column="9">return <expr><operator pos:line="47" pos:column="16">(<pos:position pos:line="47" pos:column="17"/></operator><literal type="number" pos:line="47" pos:column="17">0<pos:position pos:line="47" pos:column="18"/></literal><operator pos:line="47" pos:column="18">)<pos:position pos:line="47" pos:column="19"/></operator></expr>;<pos:position pos:line="47" pos:column="20"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

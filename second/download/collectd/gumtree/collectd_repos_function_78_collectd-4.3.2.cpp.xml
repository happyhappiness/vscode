<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_78_collectd-4.3.2.cpp" pos:tabs="8"><function_decl><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">lt_dlclose<pos:position pos:line="2" pos:column="11"/></name> <parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">handle<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
     <decl_stmt><decl><type><name pos:line="3" pos:column="6">lt_dlhandle<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">handle<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">lt_dlhandle<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">cur<pos:position pos:line="5" pos:column="18"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="20">last<pos:position pos:line="5" pos:column="24"/></name></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">int<pos:position pos:line="6" pos:column="6"/></name></type> <name pos:line="6" pos:column="7">errors<pos:position pos:line="6" pos:column="13"/></name> <init pos:line="6" pos:column="14">= <expr><literal type="number" pos:line="6" pos:column="16">0<pos:position pos:line="6" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="8" pos:column="3">LT_DLMUTEX_LOCK<pos:position pos:line="8" pos:column="18"/></name> <argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>

  <comment type="block" pos:line="10" pos:column="3">/* check whether the handle is valid */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">last<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <name pos:line="11" pos:column="10">cur<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name pos:line="11" pos:column="16">handles<pos:position pos:line="11" pos:column="23"/></name></expr>;<pos:position pos:line="11" pos:column="24"/></expr_stmt>
  <while pos:line="12" pos:column="3">while <condition pos:line="12" pos:column="9">(<expr><name pos:line="12" pos:column="10">cur<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">&amp;&amp;<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="17">handle<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">!=<pos:position pos:line="12" pos:column="26"/></operator> <name pos:line="12" pos:column="27">cur<pos:position pos:line="12" pos:column="30"/></name></expr>)<pos:position pos:line="12" pos:column="31"/></condition>
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><name pos:line="14" pos:column="7">last<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">cur<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
      <expr_stmt><expr><name pos:line="15" pos:column="7">cur<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name><name pos:line="15" pos:column="13">cur<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">next<pos:position pos:line="15" pos:column="22"/></name></name></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></while>

  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">cur<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="20" pos:column="26"/></name> <argument_list pos:line="20" pos:column="27">(<argument><expr><call><name pos:line="20" pos:column="28">LT_DLSTRERROR<pos:position pos:line="20" pos:column="41"/></name> <argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">INVALID_HANDLE<pos:position pos:line="20" pos:column="57"/></name></expr></argument>)<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="21" pos:column="7">++<pos:position pos:line="21" pos:column="9"/></operator><name pos:line="21" pos:column="9">errors<pos:position pos:line="21" pos:column="15"/></name></expr>;<pos:position pos:line="21" pos:column="16"/></expr_stmt>
      <goto pos:line="22" pos:column="7">goto <name pos:line="22" pos:column="12">done<pos:position pos:line="22" pos:column="16"/></name>;<pos:position pos:line="22" pos:column="17"/></goto>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="25" pos:column="3">handle<pos:position pos:line="25" pos:column="9"/></name><operator pos:line="25" pos:column="9">-&gt;<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="11">info<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">ref_count<pos:position pos:line="25" pos:column="25"/></name></name><operator pos:line="25" pos:column="25">--<pos:position pos:line="25" pos:column="27"/></operator></expr>;<pos:position pos:line="25" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="27" pos:column="3">/* Note that even with resident modules, we must track the ref_count
     correctly incase the user decides to reset the residency flag
     later (even though the API makes no provision for that at the
     moment).  */</comment>
  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name><name pos:line="31" pos:column="7">handle<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">-&gt;<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="15">info<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">ref_count<pos:position pos:line="31" pos:column="29"/></name></name> <operator pos:line="31" pos:column="30">&lt;=<pos:position pos:line="31" pos:column="35"/></operator> <literal type="number" pos:line="31" pos:column="33">0<pos:position pos:line="31" pos:column="34"/></literal> <operator pos:line="31" pos:column="35">&amp;&amp;<pos:position pos:line="31" pos:column="45"/></operator> <operator pos:line="31" pos:column="38">!<pos:position pos:line="31" pos:column="39"/></operator><call><name pos:line="31" pos:column="39">LT_DLIS_RESIDENT<pos:position pos:line="31" pos:column="55"/></name> <argument_list pos:line="31" pos:column="56">(<argument><expr><name pos:line="31" pos:column="57">handle<pos:position pos:line="31" pos:column="63"/></name></expr></argument>)<pos:position pos:line="31" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="65"/></condition><then pos:line="31" pos:column="65">
    <block pos:line="32" pos:column="5">{
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">lt_user_data<pos:position pos:line="33" pos:column="19"/></name></type> <name pos:line="33" pos:column="20">data<pos:position pos:line="33" pos:column="24"/></name> <init pos:line="33" pos:column="25">= <expr><name><name pos:line="33" pos:column="27">handle<pos:position pos:line="33" pos:column="33"/></name><operator pos:line="33" pos:column="33">-&gt;<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="35">loader<pos:position pos:line="33" pos:column="41"/></name><operator pos:line="33" pos:column="41">-&gt;<pos:position pos:line="33" pos:column="46"/></operator><name pos:line="33" pos:column="43">dlloader_data<pos:position pos:line="33" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="33" pos:column="57"/></decl_stmt>

      <if pos:line="35" pos:column="7">if <condition pos:line="35" pos:column="10">(<expr><name pos:line="35" pos:column="11">handle<pos:position pos:line="35" pos:column="17"/></name> <operator pos:line="35" pos:column="18">!=<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">handles<pos:position pos:line="35" pos:column="28"/></name></expr>)<pos:position pos:line="35" pos:column="29"/></condition><then pos:line="35" pos:column="29">
	<block pos:line="36" pos:column="9">{
	  <expr_stmt><expr><name><name pos:line="37" pos:column="11">last<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">-&gt;<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="17">next<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">=<pos:position pos:line="37" pos:column="23"/></operator> <name><name pos:line="37" pos:column="24">handle<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">next<pos:position pos:line="37" pos:column="36"/></name></name></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>
	}<pos:position pos:line="38" pos:column="10"/></block></then>
      <else pos:line="39" pos:column="7">else
	<block pos:line="40" pos:column="9">{
	  <expr_stmt><expr><name pos:line="41" pos:column="11">handles<pos:position pos:line="41" pos:column="18"/></name> <operator pos:line="41" pos:column="19">=<pos:position pos:line="41" pos:column="20"/></operator> <name><name pos:line="41" pos:column="21">handle<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">next<pos:position pos:line="41" pos:column="33"/></name></name></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
	}<pos:position pos:line="42" pos:column="10"/></block></else></if>

      <expr_stmt><expr><name pos:line="44" pos:column="7">errors<pos:position pos:line="44" pos:column="13"/></name> <operator pos:line="44" pos:column="14">+=<pos:position pos:line="44" pos:column="16"/></operator> <call><name><name pos:line="44" pos:column="17">handle<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">-&gt;<pos:position pos:line="44" pos:column="28"/></operator><name pos:line="44" pos:column="25">loader<pos:position pos:line="44" pos:column="31"/></name><operator pos:line="44" pos:column="31">-&gt;<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="33">module_close<pos:position pos:line="44" pos:column="45"/></name></name> <argument_list pos:line="44" pos:column="46">(<argument><expr><name pos:line="44" pos:column="47">data<pos:position pos:line="44" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="53">handle<pos:position pos:line="44" pos:column="59"/></name><operator pos:line="44" pos:column="59">-&gt;<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="61">module<pos:position pos:line="44" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
      <expr_stmt><expr><name pos:line="45" pos:column="7">errors<pos:position pos:line="45" pos:column="13"/></name> <operator pos:line="45" pos:column="14">+=<pos:position pos:line="45" pos:column="16"/></operator> <call><name pos:line="45" pos:column="17">unload_deplibs<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">handle<pos:position pos:line="45" pos:column="38"/></name></expr></argument>)<pos:position pos:line="45" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>

      <comment type="block" pos:line="47" pos:column="7">/* It is up to the callers to free the data itself.  */</comment>
      <expr_stmt><expr><call><name pos:line="48" pos:column="7">LT_DLFREE<pos:position pos:line="48" pos:column="16"/></name> <argument_list pos:line="48" pos:column="17">(<argument><expr><name><name pos:line="48" pos:column="18">handle<pos:position pos:line="48" pos:column="24"/></name><operator pos:line="48" pos:column="24">-&gt;<pos:position pos:line="48" pos:column="29"/></operator><name pos:line="48" pos:column="26">caller_data<pos:position pos:line="48" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>

      <expr_stmt><expr><call><name pos:line="50" pos:column="7">LT_DLFREE<pos:position pos:line="50" pos:column="16"/></name> <argument_list pos:line="50" pos:column="17">(<argument><expr><name><name pos:line="50" pos:column="18">handle<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">info<pos:position pos:line="50" pos:column="30"/></name><operator pos:line="50" pos:column="30">.<pos:position pos:line="50" pos:column="31"/></operator><name pos:line="50" pos:column="31">filename<pos:position pos:line="50" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="51" pos:column="7">LT_DLFREE<pos:position pos:line="51" pos:column="16"/></name> <argument_list pos:line="51" pos:column="17">(<argument><expr><name><name pos:line="51" pos:column="18">handle<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">-&gt;<pos:position pos:line="51" pos:column="29"/></operator><name pos:line="51" pos:column="26">info<pos:position pos:line="51" pos:column="30"/></name><operator pos:line="51" pos:column="30">.<pos:position pos:line="51" pos:column="31"/></operator><name pos:line="51" pos:column="31">name<pos:position pos:line="51" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">LT_DLFREE<pos:position pos:line="52" pos:column="16"/></name> <argument_list pos:line="52" pos:column="17">(<argument><expr><name pos:line="52" pos:column="18">handle<pos:position pos:line="52" pos:column="24"/></name></expr></argument>)<pos:position pos:line="52" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="26"/></expr_stmt>

      <goto pos:line="54" pos:column="7">goto <name pos:line="54" pos:column="12">done<pos:position pos:line="54" pos:column="16"/></name>;<pos:position pos:line="54" pos:column="17"/></goto>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

  <if pos:line="57" pos:column="3">if <condition pos:line="57" pos:column="6">(<expr><call><name pos:line="57" pos:column="7">LT_DLIS_RESIDENT<pos:position pos:line="57" pos:column="23"/></name> <argument_list pos:line="57" pos:column="24">(<argument><expr><name pos:line="57" pos:column="25">handle<pos:position pos:line="57" pos:column="31"/></name></expr></argument>)<pos:position pos:line="57" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="33"/></condition><then pos:line="57" pos:column="33">
    <block pos:line="58" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="59" pos:column="7">LT_DLMUTEX_SETERROR<pos:position pos:line="59" pos:column="26"/></name> <argument_list pos:line="59" pos:column="27">(<argument><expr><call><name pos:line="59" pos:column="28">LT_DLSTRERROR<pos:position pos:line="59" pos:column="41"/></name> <argument_list pos:line="59" pos:column="42">(<argument><expr><name pos:line="59" pos:column="43">CLOSE_RESIDENT_MODULE<pos:position pos:line="59" pos:column="64"/></name></expr></argument>)<pos:position pos:line="59" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="67"/></expr_stmt>
      <expr_stmt><expr><operator pos:line="60" pos:column="7">++<pos:position pos:line="60" pos:column="9"/></operator><name pos:line="60" pos:column="9">errors<pos:position pos:line="60" pos:column="15"/></name></expr>;<pos:position pos:line="60" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

 <label><name pos:line="63" pos:column="2">done<pos:position pos:line="63" pos:column="6"/></name>:<pos:position pos:line="63" pos:column="7"/></label>
  <expr_stmt><expr><call><name pos:line="64" pos:column="3">LT_DLMUTEX_UNLOCK<pos:position pos:line="64" pos:column="20"/></name> <argument_list pos:line="64" pos:column="21">()<pos:position pos:line="64" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="24"/></expr_stmt>

  <return pos:line="66" pos:column="3">return <expr><name pos:line="66" pos:column="10">errors<pos:position pos:line="66" pos:column="16"/></name></expr>;<pos:position pos:line="66" pos:column="17"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function_decl></unit>

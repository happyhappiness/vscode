<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_394_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">us_init<pos:position pos:line="1" pos:column="19"/></name> <parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><specifier pos:line="3" pos:column="9">static<pos:position pos:line="3" pos:column="15"/></specifier> <type><name pos:line="3" pos:column="16">int<pos:position pos:line="3" pos:column="19"/></name></type> <name pos:line="3" pos:column="20">have_init<pos:position pos:line="3" pos:column="29"/></name> <init pos:line="3" pos:column="30">= <expr><literal type="number" pos:line="3" pos:column="32">0<pos:position pos:line="3" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="34"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">status<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<comment type="block" pos:line="7" pos:column="9">/* Initialize only once. */</comment>
	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">have_init<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">!=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr>)<pos:position pos:line="8" pos:column="28"/></condition><then pos:line="8" pos:column="28">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">0<pos:position pos:line="9" pos:column="26"/></literal><operator pos:line="9" pos:column="26">)<pos:position pos:line="9" pos:column="27"/></operator></expr>;<pos:position pos:line="9" pos:column="28"/></return></block></then></if>
	<expr_stmt><expr><name pos:line="10" pos:column="9">have_init<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <literal type="number" pos:line="10" pos:column="21">1<pos:position pos:line="10" pos:column="22"/></literal></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>

	<expr_stmt><expr><name pos:line="12" pos:column="9">loop<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">=<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>

	<expr_stmt><expr><name pos:line="14" pos:column="9">status<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">plugin_thread_create<pos:position pos:line="14" pos:column="38"/></name> <argument_list pos:line="14" pos:column="39">(<argument><expr><operator pos:line="14" pos:column="40">&amp;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="41">listen_thread<pos:position pos:line="14" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="56">NULL<pos:position pos:line="14" pos:column="60"/></name></expr></argument>,
			<argument><expr><name pos:line="15" pos:column="25">us_server_thread<pos:position pos:line="15" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="43">NULL<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">status<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">!=<pos:position pos:line="16" pos:column="22"/></operator> <literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
	<block pos:line="17" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name></type> <name><name pos:line="18" pos:column="22">errbuf<pos:position pos:line="18" pos:column="28"/></name><index pos:line="18" pos:column="28">[<expr><literal type="number" pos:line="18" pos:column="29">1024<pos:position pos:line="18" pos:column="33"/></literal></expr>]<pos:position pos:line="18" pos:column="34"/></index></name></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="19" pos:column="17">ERROR<pos:position pos:line="19" pos:column="22"/></name> <argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="string" pos:line="19" pos:column="24">"unixsock plugin: pthread_create failed: %s"<pos:position pos:line="19" pos:column="68"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="20" pos:column="33">sstrerror<pos:position pos:line="20" pos:column="42"/></name> <argument_list pos:line="20" pos:column="43">(<argument><expr><name pos:line="20" pos:column="44">errno<pos:position pos:line="20" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="51">errbuf<pos:position pos:line="20" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="59">sizeof <argument_list pos:line="20" pos:column="66">(<argument><expr><name pos:line="20" pos:column="67">errbuf<pos:position pos:line="20" pos:column="73"/></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="77"/></expr_stmt>
		<return pos:line="21" pos:column="17">return <expr><operator pos:line="21" pos:column="24">(<pos:position pos:line="21" pos:column="25"/></operator><operator pos:line="21" pos:column="25">-<pos:position pos:line="21" pos:column="26"/></operator><literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal><operator pos:line="21" pos:column="27">)<pos:position pos:line="21" pos:column="28"/></operator></expr>;<pos:position pos:line="21" pos:column="29"/></return>
	}<pos:position pos:line="22" pos:column="10"/></block></then></if>

	<return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal><operator pos:line="24" pos:column="18">)<pos:position pos:line="24" pos:column="19"/></operator></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2013_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pmu_init<pos:position pos:line="1" pos:column="20"/></name><parameter_list pos:line="1" pos:column="20">(<parameter><decl><type><name pos:line="1" pos:column="21">void<pos:position pos:line="1" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="26"/></parameter_list> <block pos:line="1" pos:column="27">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">ret<pos:position pos:line="2" pos:column="10"/></name></decl>;<pos:position pos:line="2" pos:column="11"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="4" pos:column="3">DEBUG<pos:position pos:line="4" pos:column="8"/></name><argument_list pos:line="4" pos:column="8">(<argument><expr><name pos:line="4" pos:column="9">PMU_PLUGIN<pos:position pos:line="4" pos:column="19"/></name> <literal type="string" pos:line="4" pos:column="20">": %s:%d"<pos:position pos:line="4" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="31">__FUNCTION__<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="45">__LINE__<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="6" pos:column="3">g_ctx<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">.<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">event_list<pos:position pos:line="6" pos:column="19"/></name></name> <operator pos:line="6" pos:column="20">=<pos:position pos:line="6" pos:column="21"/></operator> <call><name pos:line="6" pos:column="22">alloc_eventlist<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">()<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">g_ctx<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">.<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">event_list<pos:position pos:line="7" pos:column="23"/></name></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr>)<pos:position pos:line="7" pos:column="32"/></condition><then pos:line="7" pos:column="32"> <block pos:line="7" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><name pos:line="8" pos:column="11">PMU_PLUGIN<pos:position pos:line="8" pos:column="21"/></name> <literal type="string" pos:line="8" pos:column="22">": Failed to allocate event list."<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">ENOMEM<pos:position pos:line="9" pos:column="19"/></name></expr>;<pos:position pos:line="9" pos:column="20"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name><name pos:line="12" pos:column="7">g_ctx<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">hw_cache_events<pos:position pos:line="12" pos:column="28"/></name></name></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29"> <block pos:line="12" pos:column="30">{
    <expr_stmt><expr><name pos:line="13" pos:column="5">ret<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">=<pos:position pos:line="13" pos:column="10"/></operator>
        <call><name pos:line="14" pos:column="9">pmu_add_events<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name><name pos:line="14" pos:column="24">g_ctx<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">.<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">event_list<pos:position pos:line="14" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">PERF_TYPE_HW_CACHE<pos:position pos:line="14" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="62">g_hw_cache_events<pos:position pos:line="14" pos:column="79"/></name></expr></argument>,
                       <argument><expr><call><name pos:line="15" pos:column="24">STATIC_ARRAY_SIZE<pos:position pos:line="15" pos:column="41"/></name><argument_list pos:line="15" pos:column="41">(<argument><expr><name pos:line="15" pos:column="42">g_hw_cache_events<pos:position pos:line="15" pos:column="59"/></name></expr></argument>)<pos:position pos:line="15" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">ret<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">!=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>)<pos:position pos:line="16" pos:column="18"/></condition><then pos:line="16" pos:column="18"> <block pos:line="16" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="17" pos:column="7">ERROR<pos:position pos:line="17" pos:column="12"/></name><argument_list pos:line="17" pos:column="12">(<argument><expr><name pos:line="17" pos:column="13">PMU_PLUGIN<pos:position pos:line="17" pos:column="23"/></name> <literal type="string" pos:line="17" pos:column="24">": Failed to add hw cache events."<pos:position pos:line="17" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
      <goto pos:line="18" pos:column="7">goto <name pos:line="18" pos:column="12">init_error<pos:position pos:line="18" pos:column="22"/></name>;<pos:position pos:line="18" pos:column="23"/></goto>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
  }<pos:position pos:line="20" pos:column="4"/></block></then></if>

  <if pos:line="22" pos:column="3">if <condition pos:line="22" pos:column="6">(<expr><name><name pos:line="22" pos:column="7">g_ctx<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">kernel_pmu_events<pos:position pos:line="22" pos:column="30"/></name></name></expr>)<pos:position pos:line="22" pos:column="31"/></condition><then pos:line="22" pos:column="31"> <block pos:line="22" pos:column="32">{
    <expr_stmt><expr><name pos:line="23" pos:column="5">ret<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <call><name pos:line="23" pos:column="11">pmu_add_events<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name><name pos:line="23" pos:column="26">g_ctx<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">event_list<pos:position pos:line="23" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="44">PERF_TYPE_HARDWARE<pos:position pos:line="23" pos:column="62"/></name></expr></argument>,
                         <argument><expr><name pos:line="24" pos:column="26">g_kernel_pmu_events<pos:position pos:line="24" pos:column="45"/></name></expr></argument>,
                         <argument><expr><call><name pos:line="25" pos:column="26">STATIC_ARRAY_SIZE<pos:position pos:line="25" pos:column="43"/></name><argument_list pos:line="25" pos:column="43">(<argument><expr><name pos:line="25" pos:column="44">g_kernel_pmu_events<pos:position pos:line="25" pos:column="63"/></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="66"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">ret<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">!=<pos:position pos:line="26" pos:column="15"/></operator> <literal type="number" pos:line="26" pos:column="16">0<pos:position pos:line="26" pos:column="17"/></literal></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18"> <block pos:line="26" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="27" pos:column="7">ERROR<pos:position pos:line="27" pos:column="12"/></name><argument_list pos:line="27" pos:column="12">(<argument><expr><name pos:line="27" pos:column="13">PMU_PLUGIN<pos:position pos:line="27" pos:column="23"/></name> <literal type="string" pos:line="27" pos:column="24">": Failed to add kernel PMU events."<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
      <goto pos:line="28" pos:column="7">goto <name pos:line="28" pos:column="12">init_error<pos:position pos:line="28" pos:column="22"/></name>;<pos:position pos:line="28" pos:column="23"/></goto>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="32" pos:column="3">/* parse events names if config option is present and is not empty */</comment>
  <if pos:line="33" pos:column="3">if <condition pos:line="33" pos:column="6">(<expr><name><name pos:line="33" pos:column="7">g_ctx<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">.<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">hw_events_count<pos:position pos:line="33" pos:column="28"/></name></name></expr>)<pos:position pos:line="33" pos:column="29"/></condition><then pos:line="33" pos:column="29"> <block pos:line="33" pos:column="30">{

    <expr_stmt><expr><name pos:line="35" pos:column="5">ret<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <call><name pos:line="35" pos:column="11">read_events<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name><name pos:line="35" pos:column="23">g_ctx<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">event_list_fn<pos:position pos:line="35" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="44"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">ret<pos:position pos:line="36" pos:column="12"/></name> <operator pos:line="36" pos:column="13">!=<pos:position pos:line="36" pos:column="15"/></operator> <literal type="number" pos:line="36" pos:column="16">0<pos:position pos:line="36" pos:column="17"/></literal></expr>)<pos:position pos:line="36" pos:column="18"/></condition><then pos:line="36" pos:column="18"> <block pos:line="36" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="37" pos:column="7">ERROR<pos:position pos:line="37" pos:column="12"/></name><argument_list pos:line="37" pos:column="12">(<argument><expr><name pos:line="37" pos:column="13">PMU_PLUGIN<pos:position pos:line="37" pos:column="23"/></name> <literal type="string" pos:line="37" pos:column="24">": Failed to read event list file '%s'."<pos:position pos:line="37" pos:column="64"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="38" pos:column="13">g_ctx<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">event_list_fn<pos:position pos:line="38" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="34"/></expr_stmt>
      <return pos:line="39" pos:column="7">return <expr><name pos:line="39" pos:column="14">ret<pos:position pos:line="39" pos:column="17"/></name></expr>;<pos:position pos:line="39" pos:column="18"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="42" pos:column="5">ret<pos:position pos:line="42" pos:column="8"/></name> <operator pos:line="42" pos:column="9">=<pos:position pos:line="42" pos:column="10"/></operator> <call><name pos:line="42" pos:column="11">pmu_add_hw_events<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name><name pos:line="42" pos:column="29">g_ctx<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">.<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">event_list<pos:position pos:line="42" pos:column="45"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="47">g_ctx<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">.<pos:position pos:line="42" pos:column="53"/></operator><name pos:line="42" pos:column="53">hw_events<pos:position pos:line="42" pos:column="62"/></name></name></expr></argument>,
                            <argument><expr><name><name pos:line="43" pos:column="29">g_ctx<pos:position pos:line="43" pos:column="34"/></name><operator pos:line="43" pos:column="34">.<pos:position pos:line="43" pos:column="35"/></operator><name pos:line="43" pos:column="35">hw_events_count<pos:position pos:line="43" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="52"/></expr_stmt>
    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">ret<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">!=<pos:position pos:line="44" pos:column="15"/></operator> <literal type="number" pos:line="44" pos:column="16">0<pos:position pos:line="44" pos:column="17"/></literal></expr>)<pos:position pos:line="44" pos:column="18"/></condition><then pos:line="44" pos:column="18"> <block pos:line="44" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="45" pos:column="7">ERROR<pos:position pos:line="45" pos:column="12"/></name><argument_list pos:line="45" pos:column="12">(<argument><expr><name pos:line="45" pos:column="13">PMU_PLUGIN<pos:position pos:line="45" pos:column="23"/></name> <literal type="string" pos:line="45" pos:column="24">": Failed to add hardware events."<pos:position pos:line="45" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt>
      <goto pos:line="46" pos:column="7">goto <name pos:line="46" pos:column="12">init_error<pos:position pos:line="46" pos:column="22"/></name>;<pos:position pos:line="46" pos:column="23"/></goto>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><name><name pos:line="50" pos:column="7">g_ctx<pos:position pos:line="50" pos:column="12"/></name><operator pos:line="50" pos:column="12">.<pos:position pos:line="50" pos:column="13"/></operator><name pos:line="50" pos:column="13">sw_events<pos:position pos:line="50" pos:column="22"/></name></name></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <block pos:line="50" pos:column="24">{
    <expr_stmt><expr><name pos:line="51" pos:column="5">ret<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <call><name pos:line="51" pos:column="11">pmu_add_events<pos:position pos:line="51" pos:column="25"/></name><argument_list pos:line="51" pos:column="25">(<argument><expr><name><name pos:line="51" pos:column="26">g_ctx<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">.<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="32">event_list<pos:position pos:line="51" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="44">PERF_TYPE_SOFTWARE<pos:position pos:line="51" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="64">g_sw_events<pos:position pos:line="51" pos:column="75"/></name></expr></argument>,
                         <argument><expr><call><name pos:line="52" pos:column="26">STATIC_ARRAY_SIZE<pos:position pos:line="52" pos:column="43"/></name><argument_list pos:line="52" pos:column="43">(<argument><expr><name pos:line="52" pos:column="44">g_sw_events<pos:position pos:line="52" pos:column="55"/></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">ret<pos:position pos:line="53" pos:column="12"/></name> <operator pos:line="53" pos:column="13">!=<pos:position pos:line="53" pos:column="15"/></operator> <literal type="number" pos:line="53" pos:column="16">0<pos:position pos:line="53" pos:column="17"/></literal></expr>)<pos:position pos:line="53" pos:column="18"/></condition><then pos:line="53" pos:column="18"> <block pos:line="53" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="54" pos:column="7">ERROR<pos:position pos:line="54" pos:column="12"/></name><argument_list pos:line="54" pos:column="12">(<argument><expr><name pos:line="54" pos:column="13">PMU_PLUGIN<pos:position pos:line="54" pos:column="23"/></name> <literal type="string" pos:line="54" pos:column="24">": Failed to add software events."<pos:position pos:line="54" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="60"/></expr_stmt>
      <goto pos:line="55" pos:column="7">goto <name pos:line="55" pos:column="12">init_error<pos:position pos:line="55" pos:column="22"/></name>;<pos:position pos:line="55" pos:column="23"/></goto>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

<cpp:if pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">if<pos:position pos:line="59" pos:column="4"/></cpp:directive> <expr><name pos:line="59" pos:column="5">COLLECT_DEBUG<pos:position pos:line="59" pos:column="18"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">pmu_dump_events<pos:position pos:line="60" pos:column="18"/></name><argument_list pos:line="60" pos:column="18">()<pos:position pos:line="60" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="21"/></expr_stmt>
<cpp:endif pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">endif<pos:position pos:line="61" pos:column="7"/></cpp:directive></cpp:endif>

  <if pos:line="63" pos:column="3">if <condition pos:line="63" pos:column="6">(<expr><name><name pos:line="63" pos:column="7">g_ctx<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">.<pos:position pos:line="63" pos:column="13"/></operator><name pos:line="63" pos:column="13">event_list<pos:position pos:line="63" pos:column="23"/></name><operator pos:line="63" pos:column="23">-&gt;<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="25">eventlist<pos:position pos:line="63" pos:column="34"/></name></name> <operator pos:line="63" pos:column="35">!=<pos:position pos:line="63" pos:column="37"/></operator> <name pos:line="63" pos:column="38">NULL<pos:position pos:line="63" pos:column="42"/></name></expr>)<pos:position pos:line="63" pos:column="43"/></condition><then pos:line="63" pos:column="43"> <block pos:line="63" pos:column="44">{
    <comment type="block" pos:line="64" pos:column="5">/* measure all processes */</comment>
    <expr_stmt><expr><name pos:line="65" pos:column="5">ret<pos:position pos:line="65" pos:column="8"/></name> <operator pos:line="65" pos:column="9">=<pos:position pos:line="65" pos:column="10"/></operator> <call><name pos:line="65" pos:column="11">pmu_setup_events<pos:position pos:line="65" pos:column="27"/></name><argument_list pos:line="65" pos:column="27">(<argument><expr><name><name pos:line="65" pos:column="28">g_ctx<pos:position pos:line="65" pos:column="33"/></name><operator pos:line="65" pos:column="33">.<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="34">event_list<pos:position pos:line="65" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="65" pos:column="46">true<pos:position pos:line="65" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="52">-<pos:position pos:line="65" pos:column="53"/></operator><literal type="number" pos:line="65" pos:column="53">1<pos:position pos:line="65" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="56"/></expr_stmt>
    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">ret<pos:position pos:line="66" pos:column="12"/></name> <operator pos:line="66" pos:column="13">!=<pos:position pos:line="66" pos:column="15"/></operator> <literal type="number" pos:line="66" pos:column="16">0<pos:position pos:line="66" pos:column="17"/></literal></expr>)<pos:position pos:line="66" pos:column="18"/></condition><then pos:line="66" pos:column="18"> <block pos:line="66" pos:column="19">{
      <expr_stmt><expr><call><name pos:line="67" pos:column="7">ERROR<pos:position pos:line="67" pos:column="12"/></name><argument_list pos:line="67" pos:column="12">(<argument><expr><name pos:line="67" pos:column="13">PMU_PLUGIN<pos:position pos:line="67" pos:column="23"/></name> <literal type="string" pos:line="67" pos:column="24">": Failed to setup perf events for the event list."<pos:position pos:line="67" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="77"/></expr_stmt>
      <goto pos:line="68" pos:column="7">goto <name pos:line="68" pos:column="12">init_error<pos:position pos:line="68" pos:column="22"/></name>;<pos:position pos:line="68" pos:column="23"/></goto>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>
  }<pos:position pos:line="70" pos:column="4"/></block></then> <else pos:line="70" pos:column="5">else <block pos:line="70" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">WARNING<pos:position pos:line="71" pos:column="12"/></name><argument_list pos:line="71" pos:column="12">(<argument><expr><name pos:line="71" pos:column="13">PMU_PLUGIN<pos:position pos:line="71" pos:column="23"/></name>
            <literal type="string" pos:line="72" pos:column="13">": Events list is empty. No events were setup for monitoring."<pos:position pos:line="72" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="77"/></expr_stmt>
  }<pos:position pos:line="73" pos:column="4"/></block></else></if>

  <return pos:line="75" pos:column="3">return <expr><literal type="number" pos:line="75" pos:column="10">0<pos:position pos:line="75" pos:column="11"/></literal></expr>;<pos:position pos:line="75" pos:column="12"/></return>

<label><name pos:line="77" pos:column="1">init_error<pos:position pos:line="77" pos:column="11"/></name>:<pos:position pos:line="77" pos:column="12"/></label>

  <expr_stmt><expr><call><name pos:line="79" pos:column="3">pmu_free_events<pos:position pos:line="79" pos:column="18"/></name><argument_list pos:line="79" pos:column="18">(<argument><expr><name><name pos:line="79" pos:column="19">g_ctx<pos:position pos:line="79" pos:column="24"/></name><operator pos:line="79" pos:column="24">.<pos:position pos:line="79" pos:column="25"/></operator><name pos:line="79" pos:column="25">event_list<pos:position pos:line="79" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="79" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="37"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="80" pos:column="3">sfree<pos:position pos:line="80" pos:column="8"/></name><argument_list pos:line="80" pos:column="8">(<argument><expr><name><name pos:line="80" pos:column="9">g_ctx<pos:position pos:line="80" pos:column="14"/></name><operator pos:line="80" pos:column="14">.<pos:position pos:line="80" pos:column="15"/></operator><name pos:line="80" pos:column="15">event_list<pos:position pos:line="80" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="27"/></expr_stmt>
  <for pos:line="81" pos:column="3">for <control pos:line="81" pos:column="7">(<init><decl><type><name pos:line="81" pos:column="8">size_t<pos:position pos:line="81" pos:column="14"/></name></type> <name pos:line="81" pos:column="15">i<pos:position pos:line="81" pos:column="16"/></name> <init pos:line="81" pos:column="17">= <expr><literal type="number" pos:line="81" pos:column="19">0<pos:position pos:line="81" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="81" pos:column="21"/></init> <condition><expr><name pos:line="81" pos:column="22">i<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">&lt;<pos:position pos:line="81" pos:column="28"/></operator> <name><name pos:line="81" pos:column="26">g_ctx<pos:position pos:line="81" pos:column="31"/></name><operator pos:line="81" pos:column="31">.<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="32">hw_events_count<pos:position pos:line="81" pos:column="47"/></name></name></expr>;<pos:position pos:line="81" pos:column="48"/></condition> <incr><expr><name pos:line="81" pos:column="49">i<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">++<pos:position pos:line="81" pos:column="52"/></operator></expr></incr>)<pos:position pos:line="81" pos:column="53"/></control> <block pos:line="81" pos:column="54">{
    <expr_stmt><expr><call><name pos:line="82" pos:column="5">sfree<pos:position pos:line="82" pos:column="10"/></name><argument_list pos:line="82" pos:column="10">(<argument><expr><name><name pos:line="82" pos:column="11">g_ctx<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">.<pos:position pos:line="82" pos:column="17"/></operator><name pos:line="82" pos:column="17">hw_events<pos:position pos:line="82" pos:column="26"/></name><index pos:line="82" pos:column="26">[<expr><name pos:line="82" pos:column="27">i<pos:position pos:line="82" pos:column="28"/></name></expr>]<pos:position pos:line="82" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="82" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="31"/></expr_stmt>
  }<pos:position pos:line="83" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="84" pos:column="3">sfree<pos:position pos:line="84" pos:column="8"/></name><argument_list pos:line="84" pos:column="8">(<argument><expr><name><name pos:line="84" pos:column="9">g_ctx<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">.<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="15">hw_events<pos:position pos:line="84" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="26"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="85" pos:column="3">g_ctx<pos:position pos:line="85" pos:column="8"/></name><operator pos:line="85" pos:column="8">.<pos:position pos:line="85" pos:column="9"/></operator><name pos:line="85" pos:column="9">hw_events_count<pos:position pos:line="85" pos:column="24"/></name></name> <operator pos:line="85" pos:column="25">=<pos:position pos:line="85" pos:column="26"/></operator> <literal type="number" pos:line="85" pos:column="27">0<pos:position pos:line="85" pos:column="28"/></literal></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>

  <return pos:line="87" pos:column="3">return <expr><name pos:line="87" pos:column="10">ret<pos:position pos:line="87" pos:column="13"/></name></expr>;<pos:position pos:line="87" pos:column="14"/></return>
}<pos:position pos:line="88" pos:column="2"/></block></function></unit>

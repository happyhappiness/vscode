<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2288_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">ctail_init<pos:position pos:line="1" pos:column="22"/></name><parameter_list pos:line="1" pos:column="22">(<parameter><decl><type><name pos:line="1" pos:column="23">void<pos:position pos:line="1" pos:column="27"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list> <block pos:line="1" pos:column="29">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">str<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><literal type="number" pos:line="2" pos:column="12">255<pos:position pos:line="2" pos:column="15"/></literal></expr>]<pos:position pos:line="2" pos:column="16"/></index></name></decl>;<pos:position pos:line="2" pos:column="17"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">tail_match_list_num<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">==<pos:position pos:line="4" pos:column="29"/></operator> <literal type="number" pos:line="4" pos:column="30">0<pos:position pos:line="4" pos:column="31"/></literal></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32"> <block pos:line="4" pos:column="33">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">WARNING<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><literal type="string" pos:line="5" pos:column="13">"tail plugin: File list is empty. Returning an error."<pos:position pos:line="5" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="69"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <for pos:line="9" pos:column="3">for <control pos:line="9" pos:column="7">(<init><decl><type><name pos:line="9" pos:column="8">size_t<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">i<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="21"/></init> <condition><expr><name pos:line="9" pos:column="22">i<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&lt;<pos:position pos:line="9" pos:column="28"/></operator> <name pos:line="9" pos:column="26">tail_match_list_num<pos:position pos:line="9" pos:column="45"/></name></expr>;<pos:position pos:line="9" pos:column="46"/></condition> <incr><expr><name pos:line="9" pos:column="47">i<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">++<pos:position pos:line="9" pos:column="50"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="51"/></control> <block pos:line="9" pos:column="52">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">snprintf<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">str<pos:position pos:line="10" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="19">sizeof<argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">str<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="32">"tail-%zu"<pos:position pos:line="10" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">i<pos:position pos:line="10" pos:column="45"/></name></expr></argument>)<pos:position pos:line="10" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="47"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">plugin_register_complex_read<pos:position pos:line="12" pos:column="33"/></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">NULL<pos:position pos:line="12" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="40">str<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">ctail_read<pos:position pos:line="12" pos:column="55"/></name></expr></argument>,
                                 <argument><expr><name><name pos:line="13" pos:column="34">tail_match_list_intervals<pos:position pos:line="13" pos:column="59"/></name><index pos:line="13" pos:column="59">[<expr><name pos:line="13" pos:column="60">i<pos:position pos:line="13" pos:column="61"/></name></expr>]<pos:position pos:line="13" pos:column="62"/></index></name></expr></argument>,
                                 <argument><expr><operator pos:line="14" pos:column="34">&amp;<pos:position pos:line="14" pos:column="39"/></operator><operator pos:line="14" pos:column="35">(<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="36">user_data_t<pos:position pos:line="14" pos:column="47"/></name><operator pos:line="14" pos:column="47">)<pos:position pos:line="14" pos:column="48"/></operator><block pos:line="14" pos:column="48">{
                                     <expr><operator pos:line="15" pos:column="38">.<pos:position pos:line="15" pos:column="39"/></operator><name pos:line="15" pos:column="39">data<pos:position pos:line="15" pos:column="43"/></name> <operator pos:line="15" pos:column="44">=<pos:position pos:line="15" pos:column="45"/></operator> <name><name pos:line="15" pos:column="46">tail_match_list<pos:position pos:line="15" pos:column="61"/></name><index pos:line="15" pos:column="61">[<expr><name pos:line="15" pos:column="62">i<pos:position pos:line="15" pos:column="63"/></name></expr>]<pos:position pos:line="15" pos:column="64"/></index></name></expr>,
                                 }<pos:position pos:line="16" pos:column="35"/></block></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
  }<pos:position pos:line="17" pos:column="4"/></block></for>

  <return pos:line="19" pos:column="3">return <expr><literal type="number" pos:line="19" pos:column="10">0<pos:position pos:line="19" pos:column="11"/></literal></expr>;<pos:position pos:line="19" pos:column="12"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_98_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">get_domain_metrics<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">domain_t<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">domain<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <block pos:line="1" pos:column="49">{
  <decl_stmt><decl><type><name><name pos:line="2" pos:column="3">struct<pos:position pos:line="2" pos:column="9"/></name> <name pos:line="2" pos:column="10">lv_info<pos:position pos:line="2" pos:column="17"/></name></name></type> <name pos:line="2" pos:column="18">info<pos:position pos:line="2" pos:column="22"/></name></decl>;<pos:position pos:line="2" pos:column="23"/></decl_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><operator pos:line="4" pos:column="7">!<pos:position pos:line="4" pos:column="8"/></operator><name pos:line="4" pos:column="8">domain<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">||<pos:position pos:line="4" pos:column="17"/></operator> <operator pos:line="4" pos:column="18">!<pos:position pos:line="4" pos:column="19"/></operator><name><name pos:line="4" pos:column="19">domain<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">-&gt;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="27">ptr<pos:position pos:line="4" pos:column="30"/></name></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">PLUGIN_NAME<pos:position pos:line="5" pos:column="22"/></name> <literal type="string" pos:line="5" pos:column="23">": get_domain_metrics: NULL pointer"<pos:position pos:line="5" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="9" pos:column="3">init_lv_info<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><operator pos:line="9" pos:column="16">&amp;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="17">info<pos:position pos:line="9" pos:column="21"/></name></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="10" pos:column="3">int<pos:position pos:line="10" pos:column="6"/></name></type> <name pos:line="10" pos:column="7">status<pos:position pos:line="10" pos:column="13"/></name> <init pos:line="10" pos:column="14">= <expr><call><name pos:line="10" pos:column="16">lv_domain_info<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name><name pos:line="10" pos:column="31">domain<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">-&gt;<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="39">ptr<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="44">&amp;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="45">info<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">status<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">!=<pos:position pos:line="11" pos:column="16"/></operator> <literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19"> <block pos:line="11" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">ERROR<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">PLUGIN_NAME<pos:position pos:line="12" pos:column="22"/></name> <literal type="string" pos:line="12" pos:column="23">" plugin: virDomainGetInfo failed with status %i."<pos:position pos:line="12" pos:column="73"/></literal></expr></argument>,
          <argument><expr><name pos:line="13" pos:column="11">status<pos:position pos:line="13" pos:column="17"/></name></expr></argument>)<pos:position pos:line="13" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="19"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><operator pos:line="14" pos:column="12">-<pos:position pos:line="14" pos:column="13"/></operator><literal type="number" pos:line="14" pos:column="13">1<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></return>
  }<pos:position pos:line="15" pos:column="4"/></block></then></if>

  <if pos:line="17" pos:column="3">if <condition pos:line="17" pos:column="6">(<expr><name pos:line="17" pos:column="7">extra_stats<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&amp;<pos:position pos:line="17" pos:column="24"/></operator> <name pos:line="17" pos:column="21">ex_stats_domain_state<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43"> <block pos:line="17" pos:column="44">{
<cpp:ifdef pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">ifdef<pos:position pos:line="18" pos:column="7"/></cpp:directive> <name pos:line="18" pos:column="8">HAVE_DOM_REASON<pos:position pos:line="18" pos:column="23"/></name></cpp:ifdef>
    <comment type="block" pos:line="19" pos:column="5">/* At this point we already know domain's state from virDomainGetInfo call,
     * however it doesn't provide a reason for entering particular state.
     * We need to get it from virDomainGetState.
     */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">GET_STATS<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><name pos:line="23" pos:column="15">get_domain_state<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="33">"domain reason"<pos:position pos:line="23" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="50">domain<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">ptr<pos:position pos:line="23" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="63"/></expr_stmt>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else<pos:position pos:line="24" pos:column="6"/></cpp:directive></cpp:else>
    <comment type="block" pos:line="25" pos:column="5">/* virDomainGetState is not available. Submit 0, which corresponds to
     * unknown reason. */</comment>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">domain_state_submit<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name><name pos:line="27" pos:column="25">domain<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">ptr<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="38">info<pos:position pos:line="27" pos:column="42"/></name><operator pos:line="27" pos:column="42">.<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">di<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">state<pos:position pos:line="27" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="53">0<pos:position pos:line="27" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="56"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
  }<pos:position pos:line="29" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="31" pos:column="3">/* Gather remaining stats only for running domains */</comment>
  <if pos:line="32" pos:column="3">if <condition pos:line="32" pos:column="6">(<expr><name><name pos:line="32" pos:column="7">info<pos:position pos:line="32" pos:column="11"/></name><operator pos:line="32" pos:column="11">.<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="12">di<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">.<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">state<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">!=<pos:position pos:line="32" pos:column="23"/></operator> <name pos:line="32" pos:column="24">VIR_DOMAIN_RUNNING<pos:position pos:line="32" pos:column="42"/></name></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43">
    <block type="pseudo"><return pos:line="33" pos:column="5">return <expr><literal type="number" pos:line="33" pos:column="12">0<pos:position pos:line="33" pos:column="13"/></literal></expr>;<pos:position pos:line="33" pos:column="14"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="35" pos:column="3">pcpu_submit<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name><name pos:line="35" pos:column="15">domain<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">ptr<pos:position pos:line="35" pos:column="26"/></name></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="28">&amp;<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="29">info<pos:position pos:line="35" pos:column="33"/></name></expr></argument>)<pos:position pos:line="35" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="35"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="36" pos:column="3">cpu_submit<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">domain<pos:position pos:line="36" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="22">info<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">di<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">.<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">cpuTime<pos:position pos:line="36" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">memory_submit<pos:position pos:line="38" pos:column="16"/></name><argument_list pos:line="38" pos:column="16">(<argument><expr><name><name pos:line="38" pos:column="17">domain<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">ptr<pos:position pos:line="38" pos:column="28"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="30">(<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">gauge_t<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">)<pos:position pos:line="38" pos:column="39"/></operator><name><name pos:line="38" pos:column="39">info<pos:position pos:line="38" pos:column="43"/></name><operator pos:line="38" pos:column="43">.<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="44">di<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">.<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">memory<pos:position pos:line="38" pos:column="53"/></name></name> <operator pos:line="38" pos:column="54">*<pos:position pos:line="38" pos:column="55"/></operator> <literal type="number" pos:line="38" pos:column="56">1024<pos:position pos:line="38" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="40" pos:column="3">GET_STATS<pos:position pos:line="40" pos:column="12"/></name><argument_list pos:line="40" pos:column="12">(<argument><expr><name pos:line="40" pos:column="13">get_vcpu_stats<pos:position pos:line="40" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="29">"vcpu stats"<pos:position pos:line="40" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="43">domain<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">ptr<pos:position pos:line="40" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="56">info<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">.<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="61">di<pos:position pos:line="40" pos:column="63"/></name><operator pos:line="40" pos:column="63">.<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="64">nrVirtCpu<pos:position pos:line="40" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="75"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">GET_STATS<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">get_memory_stats<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="31">"memory stats"<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="47">domain<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">ptr<pos:position pos:line="41" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="60"/></expr_stmt>

<cpp:ifdef pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">ifdef<pos:position pos:line="43" pos:column="7"/></cpp:directive> <name pos:line="43" pos:column="8">HAVE_PERF_STATS<pos:position pos:line="43" pos:column="23"/></name></cpp:ifdef>
  <if pos:line="44" pos:column="3">if <condition pos:line="44" pos:column="6">(<expr><name pos:line="44" pos:column="7">extra_stats<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">&amp;<pos:position pos:line="44" pos:column="24"/></operator> <name pos:line="44" pos:column="21">ex_stats_perf<pos:position pos:line="44" pos:column="34"/></name></expr>)<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="5">GET_STATS<pos:position pos:line="45" pos:column="14"/></name><argument_list pos:line="45" pos:column="14">(<argument><expr><name pos:line="45" pos:column="15">get_perf_events<pos:position pos:line="45" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="32">"performance monitoring events"<pos:position pos:line="45" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="65">domain<pos:position pos:line="45" pos:column="71"/></name><operator pos:line="45" pos:column="71">-&gt;<pos:position pos:line="45" pos:column="76"/></operator><name pos:line="45" pos:column="73">ptr<pos:position pos:line="45" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="78"/></expr_stmt></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">ifdef<pos:position pos:line="48" pos:column="7"/></cpp:directive> <name pos:line="48" pos:column="8">HAVE_FS_INFO<pos:position pos:line="48" pos:column="20"/></name></cpp:ifdef>
  <if pos:line="49" pos:column="3">if <condition pos:line="49" pos:column="6">(<expr><name pos:line="49" pos:column="7">extra_stats<pos:position pos:line="49" pos:column="18"/></name> <operator pos:line="49" pos:column="19">&amp;<pos:position pos:line="49" pos:column="24"/></operator> <name pos:line="49" pos:column="21">ex_stats_fs_info<pos:position pos:line="49" pos:column="37"/></name></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="5">GET_STATS<pos:position pos:line="50" pos:column="14"/></name><argument_list pos:line="50" pos:column="14">(<argument><expr><name pos:line="50" pos:column="15">get_fs_info<pos:position pos:line="50" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="28">"file system info"<pos:position pos:line="50" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="48">domain<pos:position pos:line="50" pos:column="54"/></name><operator pos:line="50" pos:column="54">-&gt;<pos:position pos:line="50" pos:column="59"/></operator><name pos:line="50" pos:column="56">ptr<pos:position pos:line="50" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="61"/></expr_stmt></block></then></if>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">ifdef<pos:position pos:line="53" pos:column="7"/></cpp:directive> <name pos:line="53" pos:column="8">HAVE_DISK_ERR<pos:position pos:line="53" pos:column="21"/></name></cpp:ifdef>
  <if pos:line="54" pos:column="3">if <condition pos:line="54" pos:column="6">(<expr><name pos:line="54" pos:column="7">extra_stats<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">&amp;<pos:position pos:line="54" pos:column="24"/></operator> <name pos:line="54" pos:column="21">ex_stats_disk_err<pos:position pos:line="54" pos:column="38"/></name></expr>)<pos:position pos:line="54" pos:column="39"/></condition><then pos:line="54" pos:column="39">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="55" pos:column="5">GET_STATS<pos:position pos:line="55" pos:column="14"/></name><argument_list pos:line="55" pos:column="14">(<argument><expr><name pos:line="55" pos:column="15">get_disk_err<pos:position pos:line="55" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="29">"disk errors"<pos:position pos:line="55" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="55" pos:column="44">domain<pos:position pos:line="55" pos:column="50"/></name><operator pos:line="55" pos:column="50">-&gt;<pos:position pos:line="55" pos:column="55"/></operator><name pos:line="55" pos:column="52">ptr<pos:position pos:line="55" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt></block></then></if>
<cpp:endif pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">endif<pos:position pos:line="56" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:ifdef pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">ifdef<pos:position pos:line="58" pos:column="7"/></cpp:directive> <name pos:line="58" pos:column="8">HAVE_JOB_STATS<pos:position pos:line="58" pos:column="22"/></name></cpp:ifdef>
  <if pos:line="59" pos:column="3">if <condition pos:line="59" pos:column="6">(<expr><name pos:line="59" pos:column="7">extra_stats<pos:position pos:line="59" pos:column="18"/></name> <operator pos:line="59" pos:column="19">&amp;<pos:position pos:line="59" pos:column="24"/></operator>
      <operator pos:line="60" pos:column="7">(<pos:position pos:line="60" pos:column="8"/></operator><name pos:line="60" pos:column="8">ex_stats_job_stats_completed<pos:position pos:line="60" pos:column="36"/></name> <operator pos:line="60" pos:column="37">|<pos:position pos:line="60" pos:column="38"/></operator> <name pos:line="60" pos:column="39">ex_stats_job_stats_background<pos:position pos:line="60" pos:column="68"/></name><operator pos:line="60" pos:column="68">)<pos:position pos:line="60" pos:column="69"/></operator></expr>)<pos:position pos:line="60" pos:column="70"/></condition><then pos:line="60" pos:column="70">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="61" pos:column="5">GET_STATS<pos:position pos:line="61" pos:column="14"/></name><argument_list pos:line="61" pos:column="14">(<argument><expr><name pos:line="61" pos:column="15">get_job_stats<pos:position pos:line="61" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="30">"job stats"<pos:position pos:line="61" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="43">domain<pos:position pos:line="61" pos:column="49"/></name><operator pos:line="61" pos:column="49">-&gt;<pos:position pos:line="61" pos:column="54"/></operator><name pos:line="61" pos:column="51">ptr<pos:position pos:line="61" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="64" pos:column="3">/* Update cached virDomainInfo. It has to be done after cpu_submit */</comment>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">memcpy<pos:position pos:line="65" pos:column="9"/></name><argument_list pos:line="65" pos:column="9">(<argument><expr><operator pos:line="65" pos:column="10">&amp;<pos:position pos:line="65" pos:column="15"/></operator><name><name pos:line="65" pos:column="11">domain<pos:position pos:line="65" pos:column="17"/></name><operator pos:line="65" pos:column="17">-&gt;<pos:position pos:line="65" pos:column="22"/></operator><name pos:line="65" pos:column="19">info<pos:position pos:line="65" pos:column="23"/></name></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="25">&amp;<pos:position pos:line="65" pos:column="30"/></operator><name><name pos:line="65" pos:column="26">info<pos:position pos:line="65" pos:column="30"/></name><operator pos:line="65" pos:column="30">.<pos:position pos:line="65" pos:column="31"/></operator><name pos:line="65" pos:column="31">di<pos:position pos:line="65" pos:column="33"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="65" pos:column="35">sizeof<argument_list pos:line="65" pos:column="41">(<argument><expr><name><name pos:line="65" pos:column="42">domain<pos:position pos:line="65" pos:column="48"/></name><operator pos:line="65" pos:column="48">-&gt;<pos:position pos:line="65" pos:column="53"/></operator><name pos:line="65" pos:column="50">info<pos:position pos:line="65" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="65" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="57"/></expr_stmt>
  <return pos:line="66" pos:column="3">return <expr><literal type="number" pos:line="66" pos:column="10">0<pos:position pos:line="66" pos:column="11"/></literal></expr>;<pos:position pos:line="66" pos:column="12"/></return>
}<pos:position pos:line="67" pos:column="2"/></block></function></unit>

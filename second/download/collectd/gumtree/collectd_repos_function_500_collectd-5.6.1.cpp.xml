<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_500_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">config_add_writer<pos:position pos:line="1" pos:column="29"/></name> <parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">oconfig_item_t<pos:position pos:line="1" pos:column="45"/></name> <modifier pos:line="1" pos:column="46">*<pos:position pos:line="1" pos:column="47"/></modifier></type><name pos:line="1" pos:column="47">ci<pos:position pos:line="1" pos:column="49"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="2" pos:column="17">c_psql_writer_t<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">src_writers<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">size_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">src_writers_num<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">c_psql_writer_t<pos:position pos:line="3" pos:column="32"/></name> <modifier pos:line="3" pos:column="33">*<pos:position pos:line="3" pos:column="34"/></modifier><modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier><modifier pos:line="3" pos:column="35">*<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="36">dst_writers<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="49">size_t<pos:position pos:line="3" pos:column="55"/></name> <modifier pos:line="3" pos:column="56">*<pos:position pos:line="3" pos:column="57"/></modifier></type><name pos:line="3" pos:column="57">dst_writers_num<pos:position pos:line="3" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="73"/></parameter_list>
<block pos:line="4" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">char<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">name<pos:position pos:line="5" pos:column="19"/></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="7" pos:column="9">size_t<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">i<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

	<if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">(<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">ci<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">==<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">NULL<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <operator pos:line="9" pos:column="26">||<pos:position pos:line="9" pos:column="28"/></operator> <operator pos:line="9" pos:column="29">(<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">dst_writers<pos:position pos:line="9" pos:column="41"/></name> <operator pos:line="9" pos:column="42">==<pos:position pos:line="9" pos:column="44"/></operator> <name pos:line="9" pos:column="45">NULL<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">)<pos:position pos:line="9" pos:column="50"/></operator> <operator pos:line="9" pos:column="51">||<pos:position pos:line="9" pos:column="53"/></operator> <operator pos:line="9" pos:column="54">(<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="55">dst_writers_num<pos:position pos:line="9" pos:column="70"/></name> <operator pos:line="9" pos:column="71">==<pos:position pos:line="9" pos:column="73"/></operator> <name pos:line="9" pos:column="74">NULL<pos:position pos:line="9" pos:column="78"/></name><operator pos:line="9" pos:column="78">)<pos:position pos:line="9" pos:column="79"/></operator></expr>)<pos:position pos:line="9" pos:column="80"/></condition><then pos:line="9" pos:column="80">
		<block type="pseudo"><return pos:line="10" pos:column="17">return <expr><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></return></block></then></if>

	<if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">(<pos:position pos:line="12" pos:column="14"/></operator><name><name pos:line="12" pos:column="14">ci<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">values_num<pos:position pos:line="12" pos:column="28"/></name></name> <operator pos:line="12" pos:column="29">!=<pos:position pos:line="12" pos:column="31"/></operator> <literal type="number" pos:line="12" pos:column="32">1<pos:position pos:line="12" pos:column="33"/></literal><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator>
			<operator pos:line="13" pos:column="25">||<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="28">(<pos:position pos:line="13" pos:column="29"/></operator><name><name pos:line="13" pos:column="29">ci<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">values<pos:position pos:line="13" pos:column="39"/></name><index pos:line="13" pos:column="39">[<expr><literal type="number" pos:line="13" pos:column="40">0<pos:position pos:line="13" pos:column="41"/></literal></expr>]<pos:position pos:line="13" pos:column="42"/></index></name><operator pos:line="13" pos:column="42">.<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">type<pos:position pos:line="13" pos:column="47"/></name> <operator pos:line="13" pos:column="48">!=<pos:position pos:line="13" pos:column="50"/></operator> <name pos:line="13" pos:column="51">OCONFIG_TYPE_STRING<pos:position pos:line="13" pos:column="70"/></name><operator pos:line="13" pos:column="70">)<pos:position pos:line="13" pos:column="71"/></operator></expr>)<pos:position pos:line="13" pos:column="72"/></condition><then pos:line="13" pos:column="72"> <block pos:line="13" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="14" pos:column="17">log_err<pos:position pos:line="14" pos:column="24"/></name> <argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="string" pos:line="14" pos:column="26">"`Writer' expects a single string argument."<pos:position pos:line="14" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
		<return pos:line="15" pos:column="17">return <expr><literal type="number" pos:line="15" pos:column="24">1<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return>
	}<pos:position pos:line="16" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="18" pos:column="9">name<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name><name pos:line="18" pos:column="16">ci<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">-&gt;<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="20">values<pos:position pos:line="18" pos:column="26"/></name><index pos:line="18" pos:column="26">[<expr><literal type="number" pos:line="18" pos:column="27">0<pos:position pos:line="18" pos:column="28"/></literal></expr>]<pos:position pos:line="18" pos:column="29"/></index></name><operator pos:line="18" pos:column="29">.<pos:position pos:line="18" pos:column="30"/></operator><name><name pos:line="18" pos:column="30">value<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">.<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">string<pos:position pos:line="18" pos:column="42"/></name></name></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>

	<for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><expr><name pos:line="20" pos:column="14">i<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr>;<pos:position pos:line="20" pos:column="20"/></init> <condition><expr><name pos:line="20" pos:column="21">i<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">src_writers_num<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></condition> <incr><expr><operator pos:line="20" pos:column="42">++<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">i<pos:position pos:line="20" pos:column="45"/></name></expr></incr>)<pos:position pos:line="20" pos:column="46"/></control> <block pos:line="20" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">c_psql_writer_t<pos:position pos:line="21" pos:column="32"/></name> <modifier pos:line="21" pos:column="33">*<pos:position pos:line="21" pos:column="34"/></modifier><modifier pos:line="21" pos:column="34">*<pos:position pos:line="21" pos:column="35"/></modifier></type><name pos:line="21" pos:column="35">tmp<pos:position pos:line="21" pos:column="38"/></name></decl>;<pos:position pos:line="21" pos:column="39"/></decl_stmt>

		<if pos:line="23" pos:column="17">if <condition pos:line="23" pos:column="20">(<expr><call><name pos:line="23" pos:column="21">strcasecmp<pos:position pos:line="23" pos:column="31"/></name> <argument_list pos:line="23" pos:column="32">(<argument><expr><name pos:line="23" pos:column="33">name<pos:position pos:line="23" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="39">src_writers<pos:position pos:line="23" pos:column="50"/></name><index pos:line="23" pos:column="50">[<expr><name pos:line="23" pos:column="51">i<pos:position pos:line="23" pos:column="52"/></name></expr>]<pos:position pos:line="23" pos:column="53"/></index></name><operator pos:line="23" pos:column="53">.<pos:position pos:line="23" pos:column="54"/></operator><name pos:line="23" pos:column="54">name<pos:position pos:line="23" pos:column="58"/></name></expr></argument>)<pos:position pos:line="23" pos:column="59"/></argument_list></call> <operator pos:line="23" pos:column="60">!=<pos:position pos:line="23" pos:column="62"/></operator> <literal type="number" pos:line="23" pos:column="63">0<pos:position pos:line="23" pos:column="64"/></literal></expr>)<pos:position pos:line="23" pos:column="65"/></condition><then pos:line="23" pos:column="65">
			<block type="pseudo"><continue pos:line="24" pos:column="25">continue;<pos:position pos:line="24" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="26" pos:column="17">tmp<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">=<pos:position pos:line="26" pos:column="22"/></operator> <call><name pos:line="26" pos:column="23">realloc<pos:position pos:line="26" pos:column="30"/></name> <argument_list pos:line="26" pos:column="31">(<argument><expr><operator pos:line="26" pos:column="32">*<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">dst_writers<pos:position pos:line="26" pos:column="44"/></name></expr></argument>,
				<argument><expr><sizeof pos:line="27" pos:column="33">sizeof <argument_list pos:line="27" pos:column="40">(<argument><expr><operator pos:line="27" pos:column="41">*<pos:position pos:line="27" pos:column="42"/></operator><operator pos:line="27" pos:column="42">*<pos:position pos:line="27" pos:column="43"/></operator><name pos:line="27" pos:column="43">dst_writers<pos:position pos:line="27" pos:column="54"/></name></expr></argument>)<pos:position pos:line="27" pos:column="55"/></argument_list></sizeof> <operator pos:line="27" pos:column="56">*<pos:position pos:line="27" pos:column="57"/></operator> <operator pos:line="27" pos:column="58">(<pos:position pos:line="27" pos:column="59"/></operator><operator pos:line="27" pos:column="59">*<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="60">dst_writers_num<pos:position pos:line="27" pos:column="75"/></name> <operator pos:line="27" pos:column="76">+<pos:position pos:line="27" pos:column="77"/></operator> <literal type="number" pos:line="27" pos:column="78">1<pos:position pos:line="27" pos:column="79"/></literal><operator pos:line="27" pos:column="79">)<pos:position pos:line="27" pos:column="80"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="82"/></expr_stmt>
		<if pos:line="28" pos:column="17">if <condition pos:line="28" pos:column="20">(<expr><name pos:line="28" pos:column="21">tmp<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">==<pos:position pos:line="28" pos:column="27"/></operator> <name pos:line="28" pos:column="28">NULL<pos:position pos:line="28" pos:column="32"/></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33"> <block pos:line="28" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">log_err<pos:position pos:line="29" pos:column="32"/></name> <argument_list pos:line="29" pos:column="33">(<argument><expr><literal type="string" pos:line="29" pos:column="34">"Out of memory."<pos:position pos:line="29" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>
			<return pos:line="30" pos:column="25">return <expr><operator pos:line="30" pos:column="32">-<pos:position pos:line="30" pos:column="33"/></operator><literal type="number" pos:line="30" pos:column="33">1<pos:position pos:line="30" pos:column="34"/></literal></expr>;<pos:position pos:line="30" pos:column="35"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name><name pos:line="33" pos:column="17">tmp<pos:position pos:line="33" pos:column="20"/></name><index pos:line="33" pos:column="20">[<expr><operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">dst_writers_num<pos:position pos:line="33" pos:column="37"/></name></expr>]<pos:position pos:line="33" pos:column="38"/></index></name> <operator pos:line="33" pos:column="39">=<pos:position pos:line="33" pos:column="40"/></operator> <name pos:line="33" pos:column="41">src_writers<pos:position pos:line="33" pos:column="52"/></name> <operator pos:line="33" pos:column="53">+<pos:position pos:line="33" pos:column="54"/></operator> <name pos:line="33" pos:column="55">i<pos:position pos:line="33" pos:column="56"/></name></expr>;<pos:position pos:line="33" pos:column="57"/></expr_stmt>

		<expr_stmt><expr><operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">dst_writers<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name pos:line="35" pos:column="32">tmp<pos:position pos:line="35" pos:column="35"/></name></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
		<expr_stmt><expr><operator pos:line="36" pos:column="17">++<pos:position pos:line="36" pos:column="19"/></operator><operator pos:line="36" pos:column="19">(<pos:position pos:line="36" pos:column="20"/></operator><operator pos:line="36" pos:column="20">*<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">dst_writers_num<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">)<pos:position pos:line="36" pos:column="37"/></operator></expr>;<pos:position pos:line="36" pos:column="38"/></expr_stmt>
		<break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>
	}<pos:position pos:line="38" pos:column="10"/></block></for>

	<if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><name pos:line="40" pos:column="13">i<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">&gt;=<pos:position pos:line="40" pos:column="20"/></operator> <name pos:line="40" pos:column="18">src_writers_num<pos:position pos:line="40" pos:column="33"/></name></expr>)<pos:position pos:line="40" pos:column="34"/></condition><then pos:line="40" pos:column="34"> <block pos:line="40" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="41" pos:column="17">log_err<pos:position pos:line="41" pos:column="24"/></name> <argument_list pos:line="41" pos:column="25">(<argument><expr><literal type="string" pos:line="41" pos:column="26">"No such writer: `%s'"<pos:position pos:line="41" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="50">name<pos:position pos:line="41" pos:column="54"/></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>
		<return pos:line="42" pos:column="17">return <expr><operator pos:line="42" pos:column="24">-<pos:position pos:line="42" pos:column="25"/></operator><literal type="number" pos:line="42" pos:column="25">1<pos:position pos:line="42" pos:column="26"/></literal></expr>;<pos:position pos:line="42" pos:column="27"/></return>
	}<pos:position pos:line="43" pos:column="10"/></block></then></if>

	<return pos:line="45" pos:column="9">return <expr><literal type="number" pos:line="45" pos:column="16">0<pos:position pos:line="45" pos:column="17"/></literal></expr>;<pos:position pos:line="45" pos:column="18"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

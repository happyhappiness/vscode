<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_887_collectd-4.5.3.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">ut_check_threshold<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">data_set_t<pos:position pos:line="1" pos:column="41"/></name> <modifier pos:line="1" pos:column="42">*<pos:position pos:line="1" pos:column="43"/></modifier></type><name pos:line="1" pos:column="43">ds<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="47">const<pos:position pos:line="1" pos:column="52"/></specifier> <name pos:line="1" pos:column="53">value_list_t<pos:position pos:line="1" pos:column="65"/></name> <modifier pos:line="1" pos:column="66">*<pos:position pos:line="1" pos:column="67"/></modifier></type><name pos:line="1" pos:column="67">vl<pos:position pos:line="1" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="70"/></parameter_list>
<block pos:line="2" pos:column="1">{ <comment type="block" pos:line="2" pos:column="3">/* {{{ */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">threshold_t<pos:position pos:line="3" pos:column="14"/></name> <modifier pos:line="3" pos:column="15">*<pos:position pos:line="3" pos:column="16"/></modifier></type><name pos:line="3" pos:column="16">th<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">gauge_t<pos:position pos:line="4" pos:column="10"/></name> <modifier pos:line="4" pos:column="11">*<pos:position pos:line="4" pos:column="12"/></modifier></type><name pos:line="4" pos:column="12">values<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">int<pos:position pos:line="5" pos:column="6"/></name></type> <name pos:line="5" pos:column="7">status<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">int<pos:position pos:line="7" pos:column="6"/></name></type> <name pos:line="7" pos:column="7">worst_state<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><operator pos:line="7" pos:column="21">-<pos:position pos:line="7" pos:column="22"/></operator><literal type="number" pos:line="7" pos:column="22">1<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="8" pos:column="3">threshold_t<pos:position pos:line="8" pos:column="14"/></name> <modifier pos:line="8" pos:column="15">*<pos:position pos:line="8" pos:column="16"/></modifier></type><name pos:line="8" pos:column="16">worst_th<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="9" pos:column="3">int<pos:position pos:line="9" pos:column="6"/></name></type> <name pos:line="9" pos:column="7">worst_ds_index<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="27"/></decl_stmt>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">threshold_tree<pos:position pos:line="11" pos:column="21"/></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr>)<pos:position pos:line="11" pos:column="30"/></condition><then pos:line="11" pos:column="30">
    <block type="pseudo"><return pos:line="12" pos:column="5">return <expr><operator pos:line="12" pos:column="12">(<pos:position pos:line="12" pos:column="13"/></operator><literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal><operator pos:line="12" pos:column="14">)<pos:position pos:line="12" pos:column="15"/></operator></expr>;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* Is this lock really necessary? So far, thresholds are only inserted at
   * startup. -octo */</comment>
  <expr_stmt><expr><call><name pos:line="16" pos:column="3">pthread_mutex_lock<pos:position pos:line="16" pos:column="21"/></name> <argument_list pos:line="16" pos:column="22">(<argument><expr><operator pos:line="16" pos:column="23">&amp;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="24">threshold_lock<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="40"/></expr_stmt>
  <expr_stmt><expr><name pos:line="17" pos:column="3">th<pos:position pos:line="17" pos:column="5"/></name> <operator pos:line="17" pos:column="6">=<pos:position pos:line="17" pos:column="7"/></operator> <call><name pos:line="17" pos:column="8">threshold_search<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">vl<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">pthread_mutex_unlock<pos:position pos:line="18" pos:column="23"/></name> <argument_list pos:line="18" pos:column="24">(<argument><expr><operator pos:line="18" pos:column="25">&amp;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="26">threshold_lock<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><name pos:line="19" pos:column="7">th<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">==<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">NULL<pos:position pos:line="19" pos:column="17"/></name></expr>)<pos:position pos:line="19" pos:column="18"/></condition><then pos:line="19" pos:column="18">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal><operator pos:line="20" pos:column="14">)<pos:position pos:line="20" pos:column="15"/></operator></expr>;<pos:position pos:line="20" pos:column="16"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="22" pos:column="3">DEBUG<pos:position pos:line="22" pos:column="8"/></name> <argument_list pos:line="22" pos:column="9">(<argument><expr><literal type="string" pos:line="22" pos:column="10">"ut_check_threshold: Found matching threshold(s)"<pos:position pos:line="22" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="61"/></expr_stmt>

  <expr_stmt><expr><name pos:line="24" pos:column="3">values<pos:position pos:line="24" pos:column="9"/></name> <operator pos:line="24" pos:column="10">=<pos:position pos:line="24" pos:column="11"/></operator> <call><name pos:line="24" pos:column="12">uc_get_rate<pos:position pos:line="24" pos:column="23"/></name> <argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">ds<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="29">vl<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
  <if pos:line="25" pos:column="3">if <condition pos:line="25" pos:column="6">(<expr><name pos:line="25" pos:column="7">values<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">==<pos:position pos:line="25" pos:column="16"/></operator> <name pos:line="25" pos:column="17">NULL<pos:position pos:line="25" pos:column="21"/></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22">
    <block type="pseudo"><return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">(<pos:position pos:line="26" pos:column="13"/></operator><literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal><operator pos:line="26" pos:column="14">)<pos:position pos:line="26" pos:column="15"/></operator></expr>;<pos:position pos:line="26" pos:column="16"/></return></block></then></if>

  <while pos:line="28" pos:column="3">while <condition pos:line="28" pos:column="9">(<expr><name pos:line="28" pos:column="10">th<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">!=<pos:position pos:line="28" pos:column="15"/></operator> <name pos:line="28" pos:column="16">NULL<pos:position pos:line="28" pos:column="20"/></name></expr>)<pos:position pos:line="28" pos:column="21"/></condition>
  <block pos:line="29" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">int<pos:position pos:line="30" pos:column="8"/></name></type> <name pos:line="30" pos:column="9">ds_index<pos:position pos:line="30" pos:column="17"/></name> <init pos:line="30" pos:column="18">= <expr><operator pos:line="30" pos:column="20">-<pos:position pos:line="30" pos:column="21"/></operator><literal type="number" pos:line="30" pos:column="21">1<pos:position pos:line="30" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="30" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><name pos:line="32" pos:column="5">status<pos:position pos:line="32" pos:column="11"/></name> <operator pos:line="32" pos:column="12">=<pos:position pos:line="32" pos:column="13"/></operator> <call><name pos:line="32" pos:column="14">ut_check_one_threshold<pos:position pos:line="32" pos:column="36"/></name> <argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">ds<pos:position pos:line="32" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">vl<pos:position pos:line="32" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="46">th<pos:position pos:line="32" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="50">values<pos:position pos:line="32" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="58">&amp;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="59">ds_index<pos:position pos:line="32" pos:column="67"/></name></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">&lt;<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>)<pos:position pos:line="33" pos:column="20"/></condition><then pos:line="33" pos:column="20">
    <block pos:line="34" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="35" pos:column="7">ERROR<pos:position pos:line="35" pos:column="12"/></name> <argument_list pos:line="35" pos:column="13">(<argument><expr><literal type="string" pos:line="35" pos:column="14">"ut_check_threshold: ut_check_one_threshold failed."<pos:position pos:line="35" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="68"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="36" pos:column="7">sfree<pos:position pos:line="36" pos:column="12"/></name> <argument_list pos:line="36" pos:column="13">(<argument><expr><name pos:line="36" pos:column="14">values<pos:position pos:line="36" pos:column="20"/></name></expr></argument>)<pos:position pos:line="36" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="22"/></expr_stmt>
      <return pos:line="37" pos:column="7">return <expr><operator pos:line="37" pos:column="14">(<pos:position pos:line="37" pos:column="15"/></operator><operator pos:line="37" pos:column="15">-<pos:position pos:line="37" pos:column="16"/></operator><literal type="number" pos:line="37" pos:column="16">1<pos:position pos:line="37" pos:column="17"/></literal><operator pos:line="37" pos:column="17">)<pos:position pos:line="37" pos:column="18"/></operator></expr>;<pos:position pos:line="37" pos:column="19"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">worst_state<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">&lt;<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="23">status<pos:position pos:line="40" pos:column="29"/></name></expr>)<pos:position pos:line="40" pos:column="30"/></condition><then pos:line="40" pos:column="30">
    <block pos:line="41" pos:column="5">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">worst_state<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <name pos:line="42" pos:column="21">status<pos:position pos:line="42" pos:column="27"/></name></expr>;<pos:position pos:line="42" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name pos:line="43" pos:column="7">worst_th<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">th<pos:position pos:line="43" pos:column="20"/></name></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
      <expr_stmt><expr><name pos:line="44" pos:column="7">worst_ds_index<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">ds_index<pos:position pos:line="44" pos:column="32"/></name></expr>;<pos:position pos:line="44" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="47" pos:column="5">th<pos:position pos:line="47" pos:column="7"/></name> <operator pos:line="47" pos:column="8">=<pos:position pos:line="47" pos:column="9"/></operator> <name><name pos:line="47" pos:column="10">th<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">-&gt;<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="14">next<pos:position pos:line="47" pos:column="18"/></name></name></expr>;<pos:position pos:line="47" pos:column="19"/></expr_stmt>
  }<pos:position pos:line="48" pos:column="4"/></block></while> <comment type="block" pos:line="48" pos:column="5">/* while (th) */</comment>

  <expr_stmt><expr><name pos:line="50" pos:column="3">status<pos:position pos:line="50" pos:column="9"/></name> <operator pos:line="50" pos:column="10">=<pos:position pos:line="50" pos:column="11"/></operator> <call><name pos:line="50" pos:column="12">ut_report_state<pos:position pos:line="50" pos:column="27"/></name> <argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">ds<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="33">vl<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">worst_th<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">values<pos:position pos:line="50" pos:column="53"/></name></expr></argument>,
      <argument><expr><name pos:line="51" pos:column="7">worst_ds_index<pos:position pos:line="51" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="23">worst_state<pos:position pos:line="51" pos:column="34"/></name></expr></argument>)<pos:position pos:line="51" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="36"/></expr_stmt>
  <if pos:line="52" pos:column="3">if <condition pos:line="52" pos:column="6">(<expr><name pos:line="52" pos:column="7">status<pos:position pos:line="52" pos:column="13"/></name> <operator pos:line="52" pos:column="14">!=<pos:position pos:line="52" pos:column="16"/></operator> <literal type="number" pos:line="52" pos:column="17">0<pos:position pos:line="52" pos:column="18"/></literal></expr>)<pos:position pos:line="52" pos:column="19"/></condition><then pos:line="52" pos:column="19">
  <block pos:line="53" pos:column="3">{
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">ERROR<pos:position pos:line="54" pos:column="10"/></name> <argument_list pos:line="54" pos:column="11">(<argument><expr><literal type="string" pos:line="54" pos:column="12">"ut_check_threshold: ut_report_state failed."<pos:position pos:line="54" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">sfree<pos:position pos:line="55" pos:column="10"/></name> <argument_list pos:line="55" pos:column="11">(<argument><expr><name pos:line="55" pos:column="12">values<pos:position pos:line="55" pos:column="18"/></name></expr></argument>)<pos:position pos:line="55" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><operator pos:line="56" pos:column="13">-<pos:position pos:line="56" pos:column="14"/></operator><literal type="number" pos:line="56" pos:column="14">1<pos:position pos:line="56" pos:column="15"/></literal><operator pos:line="56" pos:column="15">)<pos:position pos:line="56" pos:column="16"/></operator></expr>;<pos:position pos:line="56" pos:column="17"/></return>
  }<pos:position pos:line="57" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="59" pos:column="3">sfree<pos:position pos:line="59" pos:column="8"/></name> <argument_list pos:line="59" pos:column="9">(<argument><expr><name pos:line="59" pos:column="10">values<pos:position pos:line="59" pos:column="16"/></name></expr></argument>)<pos:position pos:line="59" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="18"/></expr_stmt>

  <return pos:line="61" pos:column="3">return <expr><operator pos:line="61" pos:column="10">(<pos:position pos:line="61" pos:column="11"/></operator><literal type="number" pos:line="61" pos:column="11">0<pos:position pos:line="61" pos:column="12"/></literal><operator pos:line="61" pos:column="12">)<pos:position pos:line="61" pos:column="13"/></operator></expr>;<pos:position pos:line="61" pos:column="14"/></return>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1837_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cx_handle_xpath<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">cx_t<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">db<pos:position pos:line="1" pos:column="42"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="44">/* {{{ */</comment>
                           <parameter><decl><type><name pos:line="2" pos:column="28">xmlXPathContextPtr<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">xpath_ctx<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">cx_xpath_t<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type><name pos:line="2" pos:column="70">xpath<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list> <block pos:line="2" pos:column="77">{

  <decl_stmt><decl><type><specifier pos:line="4" pos:column="3">const<pos:position pos:line="4" pos:column="8"/></specifier> <name pos:line="4" pos:column="9">data_set_t<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">ds<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">plugin_get_ds<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">(<argument><expr><name><name pos:line="4" pos:column="40">xpath<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">type<pos:position pos:line="4" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="53"/></decl_stmt>
  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">cx_check_type<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">ds<pos:position pos:line="5" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="25">xpath<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call> <operator pos:line="5" pos:column="32">!=<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><literal type="number" pos:line="6" pos:column="13">1<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></return></block></then></if>

  <decl_stmt><decl><type><name pos:line="8" pos:column="3">xmlXPathObjectPtr<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">base_node_obj<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><call><name pos:line="8" pos:column="37">cx_evaluate_xpath<pos:position pos:line="8" pos:column="54"/></name><argument_list pos:line="8" pos:column="54">(<argument><expr><name pos:line="8" pos:column="55">xpath_ctx<pos:position pos:line="8" pos:column="64"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="66">xpath<pos:position pos:line="8" pos:column="71"/></name><operator pos:line="8" pos:column="71">-&gt;<pos:position pos:line="8" pos:column="76"/></operator><name pos:line="8" pos:column="73">path<pos:position pos:line="8" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="79"/></decl_stmt>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">base_node_obj<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">==<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="24">NULL<pos:position pos:line="9" pos:column="28"/></name></expr>)<pos:position pos:line="9" pos:column="29"/></condition><then pos:line="9" pos:column="29">
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return></block></then></if> <comment type="block" pos:line="10" pos:column="16">/* error is logged already */</comment>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">xmlNodeSetPtr<pos:position pos:line="12" pos:column="16"/></name></type> <name pos:line="12" pos:column="17">base_nodes<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><name><name pos:line="12" pos:column="30">base_node_obj<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">nodesetval<pos:position pos:line="12" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="56"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">int<pos:position pos:line="13" pos:column="6"/></name></type> <name pos:line="13" pos:column="7">total_nodes<pos:position pos:line="13" pos:column="18"/></name> <init pos:line="13" pos:column="19">= <expr><ternary><condition><expr><operator pos:line="13" pos:column="21">(<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">base_nodes<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">)<pos:position pos:line="13" pos:column="33"/></operator></expr> ?<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <expr><name><name pos:line="13" pos:column="36">base_nodes<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">-&gt;<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="48">nodeNr<pos:position pos:line="13" pos:column="54"/></name></name></expr> <pos:position pos:line="13" pos:column="55"/></then><else pos:line="13" pos:column="55">: <expr><literal type="number" pos:line="13" pos:column="57">0<pos:position pos:line="13" pos:column="58"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="13" pos:column="59"/></decl_stmt>

  <if pos:line="15" pos:column="3">if <condition pos:line="15" pos:column="6">(<expr><name pos:line="15" pos:column="7">total_nodes<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>)<pos:position pos:line="15" pos:column="24"/></condition><then pos:line="15" pos:column="24"> <block pos:line="15" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">ERROR<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"curl_xml plugin: "<pos:position pos:line="16" pos:column="30"/></literal>
          <literal type="string" pos:line="17" pos:column="11">"xpath expression \"%s\" doesn't match any of the nodes. "<pos:position pos:line="17" pos:column="69"/></literal>
          <literal type="string" pos:line="18" pos:column="11">"Skipping the xpath block..."<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="19" pos:column="11">xpath<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">path<pos:position pos:line="19" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">xmlXPathFreeObject<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">base_node_obj<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><operator pos:line="21" pos:column="12">-<pos:position pos:line="21" pos:column="13"/></operator><literal type="number" pos:line="21" pos:column="13">1<pos:position pos:line="21" pos:column="14"/></literal></expr>;<pos:position pos:line="21" pos:column="15"/></return>
  }<pos:position pos:line="22" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* If base_xpath returned multiple results, then */</comment>
  <comment type="block" pos:line="25" pos:column="3">/* InstanceFrom or PluginInstanceFrom in the xpath block is required */</comment>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name pos:line="26" pos:column="7">total_nodes<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">&gt;<pos:position pos:line="26" pos:column="23"/></operator> <literal type="number" pos:line="26" pos:column="21">1<pos:position pos:line="26" pos:column="22"/></literal> <operator pos:line="26" pos:column="23">&amp;&amp;<pos:position pos:line="26" pos:column="33"/></operator> <name><name pos:line="26" pos:column="26">xpath<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">instance<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">==<pos:position pos:line="26" pos:column="44"/></operator> <name pos:line="26" pos:column="45">NULL<pos:position pos:line="26" pos:column="49"/></name> <operator pos:line="26" pos:column="50">&amp;&amp;<pos:position pos:line="26" pos:column="60"/></operator>
      <name><name pos:line="27" pos:column="7">xpath<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">plugin_instance_from<pos:position pos:line="27" pos:column="34"/></name></name> <operator pos:line="27" pos:column="35">==<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="38">NULL<pos:position pos:line="27" pos:column="42"/></name></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><literal type="string" pos:line="28" pos:column="11">"curl_xml plugin: "<pos:position pos:line="28" pos:column="30"/></literal>
          <literal type="string" pos:line="29" pos:column="11">"InstanceFrom or PluginInstanceFrom is must in xpath block "<pos:position pos:line="29" pos:column="71"/></literal>
          <literal type="string" pos:line="30" pos:column="11">"since the base xpath expression \"%s\" "<pos:position pos:line="30" pos:column="52"/></literal>
          <literal type="string" pos:line="31" pos:column="11">"returned multiple results. Skipping the xpath block..."<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="32" pos:column="11">xpath<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">path<pos:position pos:line="32" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">xmlXPathFreeObject<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">base_node_obj<pos:position pos:line="33" pos:column="37"/></name></expr></argument>)<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">-<pos:position pos:line="34" pos:column="13"/></operator><literal type="number" pos:line="34" pos:column="13">1<pos:position pos:line="34" pos:column="14"/></literal></expr>;<pos:position pos:line="34" pos:column="15"/></return>
  }<pos:position pos:line="35" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="37" pos:column="3">value_list_t<pos:position pos:line="37" pos:column="15"/></name></type> <name pos:line="37" pos:column="16">vl<pos:position pos:line="37" pos:column="18"/></name> <init pos:line="37" pos:column="19">= <expr><name pos:line="37" pos:column="21">VALUE_LIST_INIT<pos:position pos:line="37" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="37"/></decl_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* set the values for the value_list */</comment>
  <expr_stmt><expr><name><name pos:line="40" pos:column="3">vl<pos:position pos:line="40" pos:column="5"/></name><operator pos:line="40" pos:column="5">.<pos:position pos:line="40" pos:column="6"/></operator><name pos:line="40" pos:column="6">values_len<pos:position pos:line="40" pos:column="16"/></name></name> <operator pos:line="40" pos:column="17">=<pos:position pos:line="40" pos:column="18"/></operator> <name><name pos:line="40" pos:column="19">ds<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">-&gt;<pos:position pos:line="40" pos:column="26"/></operator><name pos:line="40" pos:column="23">ds_num<pos:position pos:line="40" pos:column="29"/></name></name></expr>;<pos:position pos:line="40" pos:column="30"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="41" pos:column="3">sstrncpy<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name><name pos:line="41" pos:column="12">vl<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">.<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">type<pos:position pos:line="41" pos:column="19"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="21">xpath<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">type<pos:position pos:line="41" pos:column="32"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="41" pos:column="34">sizeof<argument_list pos:line="41" pos:column="40">(<argument><expr><name><name pos:line="41" pos:column="41">vl<pos:position pos:line="41" pos:column="43"/></name><operator pos:line="41" pos:column="43">.<pos:position pos:line="41" pos:column="44"/></operator><name pos:line="41" pos:column="44">type<pos:position pos:line="41" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="42" pos:column="3">sstrncpy<pos:position pos:line="42" pos:column="11"/></name><argument_list pos:line="42" pos:column="11">(<argument><expr><name><name pos:line="42" pos:column="12">vl<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">.<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">plugin<pos:position pos:line="42" pos:column="21"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="42" pos:column="23">(<pos:position pos:line="42" pos:column="24"/></operator><name><name pos:line="42" pos:column="24">db<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">plugin_name<pos:position pos:line="42" pos:column="39"/></name></name> <operator pos:line="42" pos:column="40">!=<pos:position pos:line="42" pos:column="42"/></operator> <name pos:line="42" pos:column="43">NULL<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">)<pos:position pos:line="42" pos:column="48"/></operator></expr> ?<pos:position pos:line="42" pos:column="50"/></condition><then pos:line="42" pos:column="50"> <expr><name><name pos:line="42" pos:column="51">db<pos:position pos:line="42" pos:column="53"/></name><operator pos:line="42" pos:column="53">-&gt;<pos:position pos:line="42" pos:column="58"/></operator><name pos:line="42" pos:column="55">plugin_name<pos:position pos:line="42" pos:column="66"/></name></name></expr> <pos:position pos:line="42" pos:column="67"/></then><else pos:line="42" pos:column="67">: <expr><literal type="string" pos:line="42" pos:column="69">"curl_xml"<pos:position pos:line="42" pos:column="79"/></literal></expr></else></ternary></expr></argument>,
           <argument><expr><sizeof pos:line="43" pos:column="12">sizeof<argument_list pos:line="43" pos:column="18">(<argument><expr><name><name pos:line="43" pos:column="19">vl<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">.<pos:position pos:line="43" pos:column="22"/></operator><name pos:line="43" pos:column="22">plugin<pos:position pos:line="43" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="29"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="44" pos:column="3">sstrncpy<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name><name pos:line="44" pos:column="12">vl<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">host<pos:position pos:line="44" pos:column="19"/></name></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="21">cx_host<pos:position pos:line="44" pos:column="28"/></name><argument_list pos:line="44" pos:column="28">(<argument><expr><name pos:line="44" pos:column="29">db<pos:position pos:line="44" pos:column="31"/></name></expr></argument>)<pos:position pos:line="44" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><sizeof pos:line="44" pos:column="34">sizeof<argument_list pos:line="44" pos:column="40">(<argument><expr><name><name pos:line="44" pos:column="41">vl<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">.<pos:position pos:line="44" pos:column="44"/></operator><name pos:line="44" pos:column="44">host<pos:position pos:line="44" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="44" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="51"/></expr_stmt>

  <for pos:line="46" pos:column="3">for <control pos:line="46" pos:column="7">(<init><decl><type><name pos:line="46" pos:column="8">int<pos:position pos:line="46" pos:column="11"/></name></type> <name pos:line="46" pos:column="12">i<pos:position pos:line="46" pos:column="13"/></name> <init pos:line="46" pos:column="14">= <expr><literal type="number" pos:line="46" pos:column="16">0<pos:position pos:line="46" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="18"/></init> <condition><expr><name pos:line="46" pos:column="19">i<pos:position pos:line="46" pos:column="20"/></name> <operator pos:line="46" pos:column="21">&lt;<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="23">total_nodes<pos:position pos:line="46" pos:column="34"/></name></expr>;<pos:position pos:line="46" pos:column="35"/></condition> <incr><expr><name pos:line="46" pos:column="36">i<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">++<pos:position pos:line="46" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="46" pos:column="40"/></control> <block pos:line="46" pos:column="41">{
    <expr_stmt><expr><name><name pos:line="47" pos:column="5">xpath_ctx<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">node<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name><name pos:line="47" pos:column="23">base_nodes<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">-&gt;<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="35">nodeTab<pos:position pos:line="47" pos:column="42"/></name><index pos:line="47" pos:column="42">[<expr><name pos:line="47" pos:column="43">i<pos:position pos:line="47" pos:column="44"/></name></expr>]<pos:position pos:line="47" pos:column="45"/></index></name></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><name><name pos:line="49" pos:column="9">db<pos:position pos:line="49" pos:column="11"/></name><operator pos:line="49" pos:column="11">-&gt;<pos:position pos:line="49" pos:column="16"/></operator><name pos:line="49" pos:column="13">instance<pos:position pos:line="49" pos:column="21"/></name></name> <operator pos:line="49" pos:column="22">!=<pos:position pos:line="49" pos:column="24"/></operator> <name pos:line="49" pos:column="25">NULL<pos:position pos:line="49" pos:column="29"/></name></expr>)<pos:position pos:line="49" pos:column="30"/></condition><then pos:line="49" pos:column="30">
      <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="7">sstrncpy<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><name><name pos:line="50" pos:column="16">vl<pos:position pos:line="50" pos:column="18"/></name><operator pos:line="50" pos:column="18">.<pos:position pos:line="50" pos:column="19"/></operator><name pos:line="50" pos:column="19">plugin_instance<pos:position pos:line="50" pos:column="34"/></name></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="36">db<pos:position pos:line="50" pos:column="38"/></name><operator pos:line="50" pos:column="38">-&gt;<pos:position pos:line="50" pos:column="43"/></operator><name pos:line="50" pos:column="40">instance<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="50" pos:column="50">sizeof<argument_list pos:line="50" pos:column="56">(<argument><expr><name><name pos:line="50" pos:column="57">vl<pos:position pos:line="50" pos:column="59"/></name><operator pos:line="50" pos:column="59">.<pos:position pos:line="50" pos:column="60"/></operator><name pos:line="50" pos:column="60">plugin_instance<pos:position pos:line="50" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="50" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="78"/></expr_stmt></block></then></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><call><name pos:line="52" pos:column="9">cx_handle_instance_xpath<pos:position pos:line="52" pos:column="33"/></name><argument_list pos:line="52" pos:column="33">(<argument><expr><name pos:line="52" pos:column="34">xpath_ctx<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="45">xpath<pos:position pos:line="52" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="52" pos:column="52">&amp;<pos:position pos:line="52" pos:column="57"/></operator><name pos:line="52" pos:column="53">vl<pos:position pos:line="52" pos:column="55"/></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call> <operator pos:line="52" pos:column="57">!=<pos:position pos:line="52" pos:column="59"/></operator> <literal type="number" pos:line="52" pos:column="60">0<pos:position pos:line="52" pos:column="61"/></literal></expr>)<pos:position pos:line="52" pos:column="62"/></condition><then pos:line="52" pos:column="62">
      <block type="pseudo"><continue pos:line="53" pos:column="7">continue;<pos:position pos:line="53" pos:column="16"/></continue></block></then></if> <comment type="block" pos:line="53" pos:column="17">/* An error has already been reported. */</comment>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><call><name pos:line="55" pos:column="9">cx_handle_all_value_xpaths<pos:position pos:line="55" pos:column="35"/></name><argument_list pos:line="55" pos:column="35">(<argument><expr><name pos:line="55" pos:column="36">xpath_ctx<pos:position pos:line="55" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">xpath<pos:position pos:line="55" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="54">ds<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="58">&amp;<pos:position pos:line="55" pos:column="63"/></operator><name pos:line="55" pos:column="59">vl<pos:position pos:line="55" pos:column="61"/></name></expr></argument>)<pos:position pos:line="55" pos:column="62"/></argument_list></call> <operator pos:line="55" pos:column="63">!=<pos:position pos:line="55" pos:column="65"/></operator> <literal type="number" pos:line="55" pos:column="66">0<pos:position pos:line="55" pos:column="67"/></literal></expr>)<pos:position pos:line="55" pos:column="68"/></condition><then pos:line="55" pos:column="68">
      <block type="pseudo"><continue pos:line="56" pos:column="7">continue;<pos:position pos:line="56" pos:column="16"/></continue></block></then></if> <comment type="block" pos:line="56" pos:column="17">/* An error has been logged. */</comment>
  }<pos:position pos:line="57" pos:column="4"/></block></for>             <comment type="block" pos:line="57" pos:column="17">/* for (i = 0; i &lt; total_nodes; i++) */</comment>

  <comment type="block" pos:line="59" pos:column="3">/* free up the allocated memory */</comment>
  <expr_stmt><expr><call><name pos:line="60" pos:column="3">xmlXPathFreeObject<pos:position pos:line="60" pos:column="21"/></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">base_node_obj<pos:position pos:line="60" pos:column="35"/></name></expr></argument>)<pos:position pos:line="60" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="37"/></expr_stmt>

  <return pos:line="62" pos:column="3">return <expr><literal type="number" pos:line="62" pos:column="10">0<pos:position pos:line="62" pos:column="11"/></literal></expr>;<pos:position pos:line="62" pos:column="12"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

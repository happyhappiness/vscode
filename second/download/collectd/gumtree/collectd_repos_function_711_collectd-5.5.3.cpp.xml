<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_711_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptables_config<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier> <name pos:line="1" pos:column="35">char<pos:position pos:line="1" pos:column="39"/></name> <modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">key<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="46">const<pos:position pos:line="1" pos:column="51"/></specifier> <name pos:line="1" pos:column="52">char<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<comment type="block" pos:line="3" pos:column="9">/* int ip_value; */</comment>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">protocol_version_t<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">ip_version<pos:position pos:line="4" pos:column="38"/></name> <init pos:line="4" pos:column="39">= <expr><literal type="number" pos:line="4" pos:column="41">0<pos:position pos:line="4" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">strcasecmp<pos:position pos:line="6" pos:column="23"/></name> <argument_list pos:line="6" pos:column="24">(<argument><expr><name pos:line="6" pos:column="25">key<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="30">"Chain"<pos:position pos:line="6" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call> <operator pos:line="6" pos:column="39">==<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="42">0<pos:position pos:line="6" pos:column="43"/></literal></expr>)<pos:position pos:line="6" pos:column="44"/></condition><then pos:line="6" pos:column="44">
		<block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="17">ip_version<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <name pos:line="7" pos:column="30">IPV4<pos:position pos:line="7" pos:column="34"/></name></expr>;<pos:position pos:line="7" pos:column="35"/></expr_stmt></block></then>
	<elseif pos:line="8" pos:column="9">else <if pos:line="8" pos:column="14">if <condition pos:line="8" pos:column="17">(<expr><call><name pos:line="8" pos:column="18">strcasecmp<pos:position pos:line="8" pos:column="28"/></name> <argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">key<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"Chain6"<pos:position pos:line="8" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call> <operator pos:line="8" pos:column="45">==<pos:position pos:line="8" pos:column="47"/></operator> <literal type="number" pos:line="8" pos:column="48">0<pos:position pos:line="8" pos:column="49"/></literal></expr>)<pos:position pos:line="8" pos:column="50"/></condition><then pos:line="8" pos:column="50">
		<block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="17">ip_version<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="30">IPV6<pos:position pos:line="9" pos:column="34"/></name></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt></block></then></if></elseif>
	<else pos:line="10" pos:column="9">else
		<block type="pseudo"><return pos:line="11" pos:column="17">return <expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><literal type="number" pos:line="11" pos:column="25">1<pos:position pos:line="11" pos:column="26"/></literal><operator pos:line="11" pos:column="26">)<pos:position pos:line="11" pos:column="27"/></operator></expr>;<pos:position pos:line="11" pos:column="28"/></return></block></else></if>

	<decl_stmt><decl><type><name pos:line="13" pos:column="9">ip_chain_t<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">temp<pos:position pos:line="13" pos:column="24"/></name></decl>, <modifier pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="27">final<pos:position pos:line="13" pos:column="32"/></name></decl>, <modifier pos:line="13" pos:column="34">*<pos:position pos:line="13" pos:column="35"/></modifier><modifier pos:line="13" pos:column="35">*<pos:position pos:line="13" pos:column="36"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="36">list<pos:position pos:line="13" pos:column="40"/></name></decl>;<pos:position pos:line="13" pos:column="41"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="14" pos:column="9">char<pos:position pos:line="14" pos:column="13"/></name> <modifier pos:line="14" pos:column="14">*<pos:position pos:line="14" pos:column="15"/></modifier></type><name pos:line="14" pos:column="15">table<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type>   <name pos:line="15" pos:column="15">table_len<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">chain<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type>   <name pos:line="17" pos:column="15">chain_len<pos:position pos:line="17" pos:column="24"/></name></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name> <modifier pos:line="19" pos:column="14">*<pos:position pos:line="19" pos:column="15"/></modifier></type><name pos:line="19" pos:column="15">value_copy<pos:position pos:line="19" pos:column="25"/></name></decl>;<pos:position pos:line="19" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">char<pos:position pos:line="20" pos:column="13"/></name> <modifier pos:line="20" pos:column="14">*<pos:position pos:line="20" pos:column="15"/></modifier></type><name><name pos:line="20" pos:column="15">fields<pos:position pos:line="20" pos:column="21"/></name><index pos:line="20" pos:column="21">[<expr><literal type="number" pos:line="20" pos:column="22">4<pos:position pos:line="20" pos:column="23"/></literal></expr>]<pos:position pos:line="20" pos:column="24"/></index></name></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int<pos:position pos:line="21" pos:column="12"/></name></type>   <name pos:line="21" pos:column="15">fields_num<pos:position pos:line="21" pos:column="25"/></name></decl>;<pos:position pos:line="21" pos:column="26"/></decl_stmt>

	<expr_stmt><expr><call><name pos:line="23" pos:column="9">memset<pos:position pos:line="23" pos:column="15"/></name> <argument_list pos:line="23" pos:column="16">(<argument><expr><operator pos:line="23" pos:column="17">&amp;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="18">temp<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="27">sizeof <argument_list pos:line="23" pos:column="34">(<argument><expr><name pos:line="23" pos:column="35">temp<pos:position pos:line="23" pos:column="39"/></name></expr></argument>)<pos:position pos:line="23" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="42"/></expr_stmt>

	<expr_stmt><expr><name pos:line="25" pos:column="9">value_copy<pos:position pos:line="25" pos:column="19"/></name> <operator pos:line="25" pos:column="20">=<pos:position pos:line="25" pos:column="21"/></operator> <call><name pos:line="25" pos:column="22">strdup<pos:position pos:line="25" pos:column="28"/></name> <argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">value<pos:position pos:line="25" pos:column="35"/></name></expr></argument>)<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">value_copy<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">==<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">NULL<pos:position pos:line="26" pos:column="31"/></name></expr>)<pos:position pos:line="26" pos:column="32"/></condition><then pos:line="26" pos:column="32">
	<block pos:line="27" pos:column="9">{
	    <decl_stmt><decl><type><name pos:line="28" pos:column="13">char<pos:position pos:line="28" pos:column="17"/></name></type> <name><name pos:line="28" pos:column="18">errbuf<pos:position pos:line="28" pos:column="24"/></name><index pos:line="28" pos:column="24">[<expr><literal type="number" pos:line="28" pos:column="25">1024<pos:position pos:line="28" pos:column="29"/></literal></expr>]<pos:position pos:line="28" pos:column="30"/></index></name></decl>;<pos:position pos:line="28" pos:column="31"/></decl_stmt>
	    <expr_stmt><expr><call><name pos:line="29" pos:column="13">ERROR<pos:position pos:line="29" pos:column="18"/></name> <argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="string" pos:line="29" pos:column="20">"strdup failed: %s"<pos:position pos:line="29" pos:column="39"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="30" pos:column="21">sstrerror<pos:position pos:line="30" pos:column="30"/></name> <argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">errno<pos:position pos:line="30" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">errbuf<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="30" pos:column="47">sizeof <argument_list pos:line="30" pos:column="54">(<argument><expr><name pos:line="30" pos:column="55">errbuf<pos:position pos:line="30" pos:column="61"/></name></expr></argument>)<pos:position pos:line="30" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="65"/></expr_stmt>
	    <return pos:line="31" pos:column="13">return <expr><operator pos:line="31" pos:column="20">(<pos:position pos:line="31" pos:column="21"/></operator><literal type="number" pos:line="31" pos:column="21">1<pos:position pos:line="31" pos:column="22"/></literal><operator pos:line="31" pos:column="22">)<pos:position pos:line="31" pos:column="23"/></operator></expr>;<pos:position pos:line="31" pos:column="24"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>

	<comment type="block" pos:line="34" pos:column="9">/*
	 *  Time to fill the temp element
	 *  Examine value string, it should look like:
	 *  Chain[6] &lt;table&gt; &lt;chain&gt; [&lt;comment|num&gt; [name]]
	 */</comment>

	<comment type="block" pos:line="40" pos:column="9">/* set IPv4 or IPv6 */</comment>
	<expr_stmt><expr><name><name pos:line="41" pos:column="9">temp<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">.<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">ip_version<pos:position pos:line="41" pos:column="24"/></name></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <name pos:line="41" pos:column="27">ip_version<pos:position pos:line="41" pos:column="37"/></name></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>

	<comment type="block" pos:line="43" pos:column="9">/* Chain &lt;table&gt; &lt;chain&gt; [&lt;comment|num&gt; [name]] */</comment>
	<expr_stmt><expr><name pos:line="44" pos:column="9">fields_num<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <call><name pos:line="44" pos:column="22">strsplit<pos:position pos:line="44" pos:column="30"/></name> <argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">value_copy<pos:position pos:line="44" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="44">fields<pos:position pos:line="44" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="52">4<pos:position pos:line="44" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt>
	<if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name pos:line="45" pos:column="13">fields_num<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">&lt;<pos:position pos:line="45" pos:column="28"/></operator> <literal type="number" pos:line="45" pos:column="26">2<pos:position pos:line="45" pos:column="27"/></literal></expr>)<pos:position pos:line="45" pos:column="28"/></condition><then pos:line="45" pos:column="28">
	<block pos:line="46" pos:column="9">{
	    <expr_stmt><expr><call><name pos:line="47" pos:column="13">free<pos:position pos:line="47" pos:column="17"/></name> <argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">value_copy<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt>
	    <return pos:line="48" pos:column="13">return <expr><operator pos:line="48" pos:column="20">(<pos:position pos:line="48" pos:column="21"/></operator><literal type="number" pos:line="48" pos:column="21">1<pos:position pos:line="48" pos:column="22"/></literal><operator pos:line="48" pos:column="22">)<pos:position pos:line="48" pos:column="23"/></operator></expr>;<pos:position pos:line="48" pos:column="24"/></return>
	}<pos:position pos:line="49" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="51" pos:column="9">table<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">=<pos:position pos:line="51" pos:column="16"/></operator> <name><name pos:line="51" pos:column="17">fields<pos:position pos:line="51" pos:column="23"/></name><index pos:line="51" pos:column="23">[<expr><literal type="number" pos:line="51" pos:column="24">0<pos:position pos:line="51" pos:column="25"/></literal></expr>]<pos:position pos:line="51" pos:column="26"/></index></name></expr>;<pos:position pos:line="51" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="52" pos:column="9">chain<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <name><name pos:line="52" pos:column="17">fields<pos:position pos:line="52" pos:column="23"/></name><index pos:line="52" pos:column="23">[<expr><literal type="number" pos:line="52" pos:column="24">1<pos:position pos:line="52" pos:column="25"/></literal></expr>]<pos:position pos:line="52" pos:column="26"/></index></name></expr>;<pos:position pos:line="52" pos:column="27"/></expr_stmt>

	<expr_stmt><expr><name pos:line="54" pos:column="9">table_len<pos:position pos:line="54" pos:column="18"/></name> <operator pos:line="54" pos:column="19">=<pos:position pos:line="54" pos:column="20"/></operator> <call><name pos:line="54" pos:column="21">strlen<pos:position pos:line="54" pos:column="27"/></name> <argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">table<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call> <operator pos:line="54" pos:column="36">+<pos:position pos:line="54" pos:column="37"/></operator> <literal type="number" pos:line="54" pos:column="38">1<pos:position pos:line="54" pos:column="39"/></literal></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><operator pos:line="55" pos:column="13">(<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">unsigned<pos:position pos:line="55" pos:column="22"/></name> <name pos:line="55" pos:column="23">int<pos:position pos:line="55" pos:column="26"/></name><operator pos:line="55" pos:column="26">)<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="27">table_len<pos:position pos:line="55" pos:column="36"/></name> <operator pos:line="55" pos:column="37">&gt;<pos:position pos:line="55" pos:column="41"/></operator> <sizeof pos:line="55" pos:column="39">sizeof<argument_list pos:line="55" pos:column="45">(<argument><expr><name><name pos:line="55" pos:column="46">temp<pos:position pos:line="55" pos:column="50"/></name><operator pos:line="55" pos:column="50">.<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="51">table<pos:position pos:line="55" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></sizeof></expr>)<pos:position pos:line="55" pos:column="58"/></condition><then pos:line="55" pos:column="58">
	<block pos:line="56" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="57" pos:column="17">ERROR<pos:position pos:line="57" pos:column="22"/></name> <argument_list pos:line="57" pos:column="23">(<argument><expr><literal type="string" pos:line="57" pos:column="24">"Table `%s' too long."<pos:position pos:line="57" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="48">table<pos:position pos:line="57" pos:column="53"/></name></expr></argument>)<pos:position pos:line="57" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="58" pos:column="17">free<pos:position pos:line="58" pos:column="21"/></name> <argument_list pos:line="58" pos:column="22">(<argument><expr><name pos:line="58" pos:column="23">value_copy<pos:position pos:line="58" pos:column="33"/></name></expr></argument>)<pos:position pos:line="58" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="35"/></expr_stmt>
		<return pos:line="59" pos:column="17">return <expr><operator pos:line="59" pos:column="24">(<pos:position pos:line="59" pos:column="25"/></operator><literal type="number" pos:line="59" pos:column="25">1<pos:position pos:line="59" pos:column="26"/></literal><operator pos:line="59" pos:column="26">)<pos:position pos:line="59" pos:column="27"/></operator></expr>;<pos:position pos:line="59" pos:column="28"/></return>
	}<pos:position pos:line="60" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="61" pos:column="9">sstrncpy<pos:position pos:line="61" pos:column="17"/></name> <argument_list pos:line="61" pos:column="18">(<argument><expr><name><name pos:line="61" pos:column="19">temp<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">.<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">table<pos:position pos:line="61" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="31">table<pos:position pos:line="61" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="38">table_len<pos:position pos:line="61" pos:column="47"/></name></expr></argument>)<pos:position pos:line="61" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="49"/></expr_stmt>

	<expr_stmt><expr><name pos:line="63" pos:column="9">chain_len<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">=<pos:position pos:line="63" pos:column="20"/></operator> <call><name pos:line="63" pos:column="21">strlen<pos:position pos:line="63" pos:column="27"/></name> <argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">chain<pos:position pos:line="63" pos:column="34"/></name></expr></argument>)<pos:position pos:line="63" pos:column="35"/></argument_list></call> <operator pos:line="63" pos:column="36">+<pos:position pos:line="63" pos:column="37"/></operator> <literal type="number" pos:line="63" pos:column="38">1<pos:position pos:line="63" pos:column="39"/></literal></expr>;<pos:position pos:line="63" pos:column="40"/></expr_stmt>
	<if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">(<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">unsigned<pos:position pos:line="64" pos:column="22"/></name> <name pos:line="64" pos:column="23">int<pos:position pos:line="64" pos:column="26"/></name><operator pos:line="64" pos:column="26">)<pos:position pos:line="64" pos:column="27"/></operator><name pos:line="64" pos:column="27">chain_len<pos:position pos:line="64" pos:column="36"/></name> <operator pos:line="64" pos:column="37">&gt;<pos:position pos:line="64" pos:column="41"/></operator> <sizeof pos:line="64" pos:column="39">sizeof<argument_list pos:line="64" pos:column="45">(<argument><expr><name><name pos:line="64" pos:column="46">temp<pos:position pos:line="64" pos:column="50"/></name><operator pos:line="64" pos:column="50">.<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="51">chain<pos:position pos:line="64" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></sizeof></expr>)<pos:position pos:line="64" pos:column="58"/></condition><then pos:line="64" pos:column="58">
	<block pos:line="65" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="66" pos:column="17">ERROR<pos:position pos:line="66" pos:column="22"/></name> <argument_list pos:line="66" pos:column="23">(<argument><expr><literal type="string" pos:line="66" pos:column="24">"Chain `%s' too long."<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="48">chain<pos:position pos:line="66" pos:column="53"/></name></expr></argument>)<pos:position pos:line="66" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="55"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">free<pos:position pos:line="67" pos:column="21"/></name> <argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">value_copy<pos:position pos:line="67" pos:column="33"/></name></expr></argument>)<pos:position pos:line="67" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="35"/></expr_stmt>
		<return pos:line="68" pos:column="17">return <expr><operator pos:line="68" pos:column="24">(<pos:position pos:line="68" pos:column="25"/></operator><literal type="number" pos:line="68" pos:column="25">1<pos:position pos:line="68" pos:column="26"/></literal><operator pos:line="68" pos:column="26">)<pos:position pos:line="68" pos:column="27"/></operator></expr>;<pos:position pos:line="68" pos:column="28"/></return>
	}<pos:position pos:line="69" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">sstrncpy<pos:position pos:line="70" pos:column="17"/></name> <argument_list pos:line="70" pos:column="18">(<argument><expr><name><name pos:line="70" pos:column="19">temp<pos:position pos:line="70" pos:column="23"/></name><operator pos:line="70" pos:column="23">.<pos:position pos:line="70" pos:column="24"/></operator><name pos:line="70" pos:column="24">chain<pos:position pos:line="70" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="31">chain<pos:position pos:line="70" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="38">chain_len<pos:position pos:line="70" pos:column="47"/></name></expr></argument>)<pos:position pos:line="70" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="49"/></expr_stmt>

	<if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">fields_num<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">&gt;=<pos:position pos:line="72" pos:column="29"/></operator> <literal type="number" pos:line="72" pos:column="27">3<pos:position pos:line="72" pos:column="28"/></literal></expr>)<pos:position pos:line="72" pos:column="29"/></condition><then pos:line="72" pos:column="29">
	<block pos:line="73" pos:column="9">{
	    <decl_stmt><decl><type><name pos:line="74" pos:column="13">char<pos:position pos:line="74" pos:column="17"/></name> <modifier pos:line="74" pos:column="18">*<pos:position pos:line="74" pos:column="19"/></modifier></type><name pos:line="74" pos:column="19">comment<pos:position pos:line="74" pos:column="26"/></name> <init pos:line="74" pos:column="27">= <expr><name><name pos:line="74" pos:column="29">fields<pos:position pos:line="74" pos:column="35"/></name><index pos:line="74" pos:column="35">[<expr><literal type="number" pos:line="74" pos:column="36">2<pos:position pos:line="74" pos:column="37"/></literal></expr>]<pos:position pos:line="74" pos:column="38"/></index></name></expr></init></decl>;<pos:position pos:line="74" pos:column="39"/></decl_stmt>
	    <decl_stmt><decl><type><name pos:line="75" pos:column="13">int<pos:position pos:line="75" pos:column="16"/></name></type>   <name pos:line="75" pos:column="19">rule<pos:position pos:line="75" pos:column="23"/></name> <init pos:line="75" pos:column="24">= <expr><call><name pos:line="75" pos:column="26">atoi<pos:position pos:line="75" pos:column="30"/></name> <argument_list pos:line="75" pos:column="31">(<argument><expr><name pos:line="75" pos:column="32">comment<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="41"/></decl_stmt>

	    <if pos:line="77" pos:column="13">if <condition pos:line="77" pos:column="16">(<expr><name pos:line="77" pos:column="17">rule<pos:position pos:line="77" pos:column="21"/></name></expr>)<pos:position pos:line="77" pos:column="22"/></condition><then pos:line="77" pos:column="22">
	    <block pos:line="78" pos:column="13">{
		<expr_stmt><expr><name><name pos:line="79" pos:column="17">temp<pos:position pos:line="79" pos:column="21"/></name><operator pos:line="79" pos:column="21">.<pos:position pos:line="79" pos:column="22"/></operator><name pos:line="79" pos:column="22">rule<pos:position pos:line="79" pos:column="26"/></name><operator pos:line="79" pos:column="26">.<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="27">num<pos:position pos:line="79" pos:column="30"/></name></name> <operator pos:line="79" pos:column="31">=<pos:position pos:line="79" pos:column="32"/></operator> <name pos:line="79" pos:column="33">rule<pos:position pos:line="79" pos:column="37"/></name></expr>;<pos:position pos:line="79" pos:column="38"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="80" pos:column="17">temp<pos:position pos:line="80" pos:column="21"/></name><operator pos:line="80" pos:column="21">.<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">rule_type<pos:position pos:line="80" pos:column="31"/></name></name> <operator pos:line="80" pos:column="32">=<pos:position pos:line="80" pos:column="33"/></operator> <name pos:line="80" pos:column="34">RTYPE_NUM<pos:position pos:line="80" pos:column="43"/></name></expr>;<pos:position pos:line="80" pos:column="44"/></expr_stmt>
	    }<pos:position pos:line="81" pos:column="14"/></block></then>
	    <else pos:line="82" pos:column="13">else
	    <block pos:line="83" pos:column="13">{
		<expr_stmt><expr><name><name pos:line="84" pos:column="17">temp<pos:position pos:line="84" pos:column="21"/></name><operator pos:line="84" pos:column="21">.<pos:position pos:line="84" pos:column="22"/></operator><name pos:line="84" pos:column="22">rule<pos:position pos:line="84" pos:column="26"/></name><operator pos:line="84" pos:column="26">.<pos:position pos:line="84" pos:column="27"/></operator><name pos:line="84" pos:column="27">comment<pos:position pos:line="84" pos:column="34"/></name></name> <operator pos:line="84" pos:column="35">=<pos:position pos:line="84" pos:column="36"/></operator> <call><name pos:line="84" pos:column="37">strdup<pos:position pos:line="84" pos:column="43"/></name> <argument_list pos:line="84" pos:column="44">(<argument><expr><name pos:line="84" pos:column="45">comment<pos:position pos:line="84" pos:column="52"/></name></expr></argument>)<pos:position pos:line="84" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="54"/></expr_stmt>
		<if pos:line="85" pos:column="17">if <condition pos:line="85" pos:column="20">(<expr><name><name pos:line="85" pos:column="21">temp<pos:position pos:line="85" pos:column="25"/></name><operator pos:line="85" pos:column="25">.<pos:position pos:line="85" pos:column="26"/></operator><name pos:line="85" pos:column="26">rule<pos:position pos:line="85" pos:column="30"/></name><operator pos:line="85" pos:column="30">.<pos:position pos:line="85" pos:column="31"/></operator><name pos:line="85" pos:column="31">comment<pos:position pos:line="85" pos:column="38"/></name></name> <operator pos:line="85" pos:column="39">==<pos:position pos:line="85" pos:column="41"/></operator> <name pos:line="85" pos:column="42">NULL<pos:position pos:line="85" pos:column="46"/></name></expr>)<pos:position pos:line="85" pos:column="47"/></condition><then pos:line="85" pos:column="47">
		<block pos:line="86" pos:column="17">{
		    <expr_stmt><expr><call><name pos:line="87" pos:column="21">free<pos:position pos:line="87" pos:column="25"/></name> <argument_list pos:line="87" pos:column="26">(<argument><expr><name pos:line="87" pos:column="27">value_copy<pos:position pos:line="87" pos:column="37"/></name></expr></argument>)<pos:position pos:line="87" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="39"/></expr_stmt>
		    <return pos:line="88" pos:column="21">return <expr><operator pos:line="88" pos:column="28">(<pos:position pos:line="88" pos:column="29"/></operator><literal type="number" pos:line="88" pos:column="29">1<pos:position pos:line="88" pos:column="30"/></literal><operator pos:line="88" pos:column="30">)<pos:position pos:line="88" pos:column="31"/></operator></expr>;<pos:position pos:line="88" pos:column="32"/></return>
		}<pos:position pos:line="89" pos:column="18"/></block></then></if>
		<expr_stmt><expr><name><name pos:line="90" pos:column="17">temp<pos:position pos:line="90" pos:column="21"/></name><operator pos:line="90" pos:column="21">.<pos:position pos:line="90" pos:column="22"/></operator><name pos:line="90" pos:column="22">rule_type<pos:position pos:line="90" pos:column="31"/></name></name> <operator pos:line="90" pos:column="32">=<pos:position pos:line="90" pos:column="33"/></operator> <name pos:line="90" pos:column="34">RTYPE_COMMENT<pos:position pos:line="90" pos:column="47"/></name></expr>;<pos:position pos:line="90" pos:column="48"/></expr_stmt>
	    }<pos:position pos:line="91" pos:column="14"/></block></else></if>
	}<pos:position pos:line="92" pos:column="10"/></block></then>
	<else pos:line="93" pos:column="9">else
	<block pos:line="94" pos:column="9">{
	    <expr_stmt><expr><name><name pos:line="95" pos:column="13">temp<pos:position pos:line="95" pos:column="17"/></name><operator pos:line="95" pos:column="17">.<pos:position pos:line="95" pos:column="18"/></operator><name pos:line="95" pos:column="18">rule_type<pos:position pos:line="95" pos:column="27"/></name></name> <operator pos:line="95" pos:column="28">=<pos:position pos:line="95" pos:column="29"/></operator> <name pos:line="95" pos:column="30">RTYPE_COMMENT_ALL<pos:position pos:line="95" pos:column="47"/></name></expr>;<pos:position pos:line="95" pos:column="48"/></expr_stmt>
	}<pos:position pos:line="96" pos:column="10"/></block></else></if>

	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">fields_num<pos:position pos:line="98" pos:column="23"/></name> <operator pos:line="98" pos:column="24">&gt;=<pos:position pos:line="98" pos:column="29"/></operator> <literal type="number" pos:line="98" pos:column="27">4<pos:position pos:line="98" pos:column="28"/></literal></expr>)<pos:position pos:line="98" pos:column="29"/></condition><then pos:line="98" pos:column="29">
	    <block type="pseudo"><expr_stmt><expr><call><name pos:line="99" pos:column="13">sstrncpy<pos:position pos:line="99" pos:column="21"/></name> <argument_list pos:line="99" pos:column="22">(<argument><expr><name><name pos:line="99" pos:column="23">temp<pos:position pos:line="99" pos:column="27"/></name><operator pos:line="99" pos:column="27">.<pos:position pos:line="99" pos:column="28"/></operator><name pos:line="99" pos:column="28">name<pos:position pos:line="99" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="34">fields<pos:position pos:line="99" pos:column="40"/></name><index pos:line="99" pos:column="40">[<expr><literal type="number" pos:line="99" pos:column="41">3<pos:position pos:line="99" pos:column="42"/></literal></expr>]<pos:position pos:line="99" pos:column="43"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="99" pos:column="45">sizeof <argument_list pos:line="99" pos:column="52">(<argument><expr><name><name pos:line="99" pos:column="53">temp<pos:position pos:line="99" pos:column="57"/></name><operator pos:line="99" pos:column="57">.<pos:position pos:line="99" pos:column="58"/></operator><name pos:line="99" pos:column="58">name<pos:position pos:line="99" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="99" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="65"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="101" pos:column="9">free<pos:position pos:line="101" pos:column="13"/></name> <argument_list pos:line="101" pos:column="14">(<argument><expr><name pos:line="101" pos:column="15">value_copy<pos:position pos:line="101" pos:column="25"/></name></expr></argument>)<pos:position pos:line="101" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="102" pos:column="9">value_copy<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">=<pos:position pos:line="102" pos:column="21"/></operator> <name pos:line="102" pos:column="22">NULL<pos:position pos:line="102" pos:column="26"/></name></expr>;<pos:position pos:line="102" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="103" pos:column="9">table<pos:position pos:line="103" pos:column="14"/></name> <operator pos:line="103" pos:column="15">=<pos:position pos:line="103" pos:column="16"/></operator> <name pos:line="103" pos:column="17">NULL<pos:position pos:line="103" pos:column="21"/></name></expr>;<pos:position pos:line="103" pos:column="22"/></expr_stmt>
	<expr_stmt><expr><name pos:line="104" pos:column="9">chain<pos:position pos:line="104" pos:column="14"/></name> <operator pos:line="104" pos:column="15">=<pos:position pos:line="104" pos:column="16"/></operator> <name pos:line="104" pos:column="17">NULL<pos:position pos:line="104" pos:column="21"/></name></expr>;<pos:position pos:line="104" pos:column="22"/></expr_stmt>

	<expr_stmt><expr><name pos:line="106" pos:column="9">list<pos:position pos:line="106" pos:column="13"/></name> <operator pos:line="106" pos:column="14">=<pos:position pos:line="106" pos:column="15"/></operator> <operator pos:line="106" pos:column="16">(<pos:position pos:line="106" pos:column="17"/></operator><name pos:line="106" pos:column="17">ip_chain_t<pos:position pos:line="106" pos:column="27"/></name> <operator pos:line="106" pos:column="28">*<pos:position pos:line="106" pos:column="29"/></operator><operator pos:line="106" pos:column="29">*<pos:position pos:line="106" pos:column="30"/></operator><operator pos:line="106" pos:column="30">)<pos:position pos:line="106" pos:column="31"/></operator> <call><name pos:line="106" pos:column="32">realloc<pos:position pos:line="106" pos:column="39"/></name> <argument_list pos:line="106" pos:column="40">(<argument><expr><name pos:line="106" pos:column="41">chain_list<pos:position pos:line="106" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="106" pos:column="53">(<pos:position pos:line="106" pos:column="54"/></operator><name pos:line="106" pos:column="54">chain_num<pos:position pos:line="106" pos:column="63"/></name> <operator pos:line="106" pos:column="64">+<pos:position pos:line="106" pos:column="65"/></operator> <literal type="number" pos:line="106" pos:column="66">1<pos:position pos:line="106" pos:column="67"/></literal><operator pos:line="106" pos:column="67">)<pos:position pos:line="106" pos:column="68"/></operator> <operator pos:line="106" pos:column="69">*<pos:position pos:line="106" pos:column="70"/></operator> <sizeof pos:line="106" pos:column="71">sizeof <argument_list pos:line="106" pos:column="78">(<argument><expr><name pos:line="106" pos:column="79">ip_chain_t<pos:position pos:line="106" pos:column="89"/></name> <operator pos:line="106" pos:column="90">*<pos:position pos:line="106" pos:column="91"/></operator></expr></argument>)<pos:position pos:line="106" pos:column="92"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="106" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="94"/></expr_stmt>
	<if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">list<pos:position pos:line="107" pos:column="17"/></name> <operator pos:line="107" pos:column="18">==<pos:position pos:line="107" pos:column="20"/></operator> <name pos:line="107" pos:column="21">NULL<pos:position pos:line="107" pos:column="25"/></name></expr>)<pos:position pos:line="107" pos:column="26"/></condition><then pos:line="107" pos:column="26">
	<block pos:line="108" pos:column="9">{
	    <decl_stmt><decl><type><name pos:line="109" pos:column="13">char<pos:position pos:line="109" pos:column="17"/></name></type> <name><name pos:line="109" pos:column="18">errbuf<pos:position pos:line="109" pos:column="24"/></name><index pos:line="109" pos:column="24">[<expr><literal type="number" pos:line="109" pos:column="25">1024<pos:position pos:line="109" pos:column="29"/></literal></expr>]<pos:position pos:line="109" pos:column="30"/></index></name></decl>;<pos:position pos:line="109" pos:column="31"/></decl_stmt>
	    <expr_stmt><expr><call><name pos:line="110" pos:column="13">ERROR<pos:position pos:line="110" pos:column="18"/></name> <argument_list pos:line="110" pos:column="19">(<argument><expr><literal type="string" pos:line="110" pos:column="20">"realloc failed: %s"<pos:position pos:line="110" pos:column="40"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="111" pos:column="21">sstrerror<pos:position pos:line="111" pos:column="30"/></name> <argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">errno<pos:position pos:line="111" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="39">errbuf<pos:position pos:line="111" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="111" pos:column="47">sizeof <argument_list pos:line="111" pos:column="54">(<argument><expr><name pos:line="111" pos:column="55">errbuf<pos:position pos:line="111" pos:column="61"/></name></expr></argument>)<pos:position pos:line="111" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="111" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="111" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="65"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="112" pos:column="13">sfree<pos:position pos:line="112" pos:column="18"/></name> <argument_list pos:line="112" pos:column="19">(<argument><expr><name><name pos:line="112" pos:column="20">temp<pos:position pos:line="112" pos:column="24"/></name><operator pos:line="112" pos:column="24">.<pos:position pos:line="112" pos:column="25"/></operator><name pos:line="112" pos:column="25">rule<pos:position pos:line="112" pos:column="29"/></name><operator pos:line="112" pos:column="29">.<pos:position pos:line="112" pos:column="30"/></operator><name pos:line="112" pos:column="30">comment<pos:position pos:line="112" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="112" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="39"/></expr_stmt>
	    <return pos:line="113" pos:column="13">return <expr><operator pos:line="113" pos:column="20">(<pos:position pos:line="113" pos:column="21"/></operator><literal type="number" pos:line="113" pos:column="21">1<pos:position pos:line="113" pos:column="22"/></literal><operator pos:line="113" pos:column="22">)<pos:position pos:line="113" pos:column="23"/></operator></expr>;<pos:position pos:line="113" pos:column="24"/></return>
	}<pos:position pos:line="114" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="116" pos:column="9">chain_list<pos:position pos:line="116" pos:column="19"/></name> <operator pos:line="116" pos:column="20">=<pos:position pos:line="116" pos:column="21"/></operator> <name pos:line="116" pos:column="22">list<pos:position pos:line="116" pos:column="26"/></name></expr>;<pos:position pos:line="116" pos:column="27"/></expr_stmt>
	<expr_stmt><expr><name pos:line="117" pos:column="9">final<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <operator pos:line="117" pos:column="17">(<pos:position pos:line="117" pos:column="18"/></operator><name pos:line="117" pos:column="18">ip_chain_t<pos:position pos:line="117" pos:column="28"/></name> <operator pos:line="117" pos:column="29">*<pos:position pos:line="117" pos:column="30"/></operator><operator pos:line="117" pos:column="30">)<pos:position pos:line="117" pos:column="31"/></operator> <call><name pos:line="117" pos:column="32">malloc<pos:position pos:line="117" pos:column="38"/></name><argument_list pos:line="117" pos:column="38">( <argument><expr><sizeof pos:line="117" pos:column="40">sizeof<argument_list pos:line="117" pos:column="46">(<argument><expr><name pos:line="117" pos:column="47">temp<pos:position pos:line="117" pos:column="51"/></name></expr></argument>)<pos:position pos:line="117" pos:column="52"/></argument_list></sizeof></expr></argument> )<pos:position pos:line="117" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="55"/></expr_stmt>
	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name pos:line="118" pos:column="13">final<pos:position pos:line="118" pos:column="18"/></name> <operator pos:line="118" pos:column="19">==<pos:position pos:line="118" pos:column="21"/></operator> <name pos:line="118" pos:column="22">NULL<pos:position pos:line="118" pos:column="26"/></name></expr>)<pos:position pos:line="118" pos:column="27"/></condition><then pos:line="118" pos:column="27">
	<block pos:line="119" pos:column="9">{
	    <decl_stmt><decl><type><name pos:line="120" pos:column="13">char<pos:position pos:line="120" pos:column="17"/></name></type> <name><name pos:line="120" pos:column="18">errbuf<pos:position pos:line="120" pos:column="24"/></name><index pos:line="120" pos:column="24">[<expr><literal type="number" pos:line="120" pos:column="25">1024<pos:position pos:line="120" pos:column="29"/></literal></expr>]<pos:position pos:line="120" pos:column="30"/></index></name></decl>;<pos:position pos:line="120" pos:column="31"/></decl_stmt>
	    <expr_stmt><expr><call><name pos:line="121" pos:column="13">ERROR<pos:position pos:line="121" pos:column="18"/></name> <argument_list pos:line="121" pos:column="19">(<argument><expr><literal type="string" pos:line="121" pos:column="20">"malloc failed: %s"<pos:position pos:line="121" pos:column="39"/></literal></expr></argument>,
		    <argument><expr><call><name pos:line="122" pos:column="21">sstrerror<pos:position pos:line="122" pos:column="30"/></name> <argument_list pos:line="122" pos:column="31">(<argument><expr><name pos:line="122" pos:column="32">errno<pos:position pos:line="122" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="39">errbuf<pos:position pos:line="122" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="47">sizeof <argument_list pos:line="122" pos:column="54">(<argument><expr><name pos:line="122" pos:column="55">errbuf<pos:position pos:line="122" pos:column="61"/></name></expr></argument>)<pos:position pos:line="122" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="122" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="122" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="65"/></expr_stmt>
	    <expr_stmt><expr><call><name pos:line="123" pos:column="13">sfree<pos:position pos:line="123" pos:column="18"/></name> <argument_list pos:line="123" pos:column="19">(<argument><expr><name><name pos:line="123" pos:column="20">temp<pos:position pos:line="123" pos:column="24"/></name><operator pos:line="123" pos:column="24">.<pos:position pos:line="123" pos:column="25"/></operator><name pos:line="123" pos:column="25">rule<pos:position pos:line="123" pos:column="29"/></name><operator pos:line="123" pos:column="29">.<pos:position pos:line="123" pos:column="30"/></operator><name pos:line="123" pos:column="30">comment<pos:position pos:line="123" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="39"/></expr_stmt>
	    <return pos:line="124" pos:column="13">return <expr><operator pos:line="124" pos:column="20">(<pos:position pos:line="124" pos:column="21"/></operator><literal type="number" pos:line="124" pos:column="21">1<pos:position pos:line="124" pos:column="22"/></literal><operator pos:line="124" pos:column="22">)<pos:position pos:line="124" pos:column="23"/></operator></expr>;<pos:position pos:line="124" pos:column="24"/></return>
	}<pos:position pos:line="125" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="126" pos:column="9">memcpy<pos:position pos:line="126" pos:column="15"/></name> <argument_list pos:line="126" pos:column="16">(<argument><expr><name pos:line="126" pos:column="17">final<pos:position pos:line="126" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="24">&amp;<pos:position pos:line="126" pos:column="29"/></operator><name pos:line="126" pos:column="25">temp<pos:position pos:line="126" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="126" pos:column="31">sizeof <argument_list pos:line="126" pos:column="38">(<argument><expr><name pos:line="126" pos:column="39">temp<pos:position pos:line="126" pos:column="43"/></name></expr></argument>)<pos:position pos:line="126" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="126" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="46"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="127" pos:column="9">chain_list<pos:position pos:line="127" pos:column="19"/></name><index pos:line="127" pos:column="19">[<expr><name pos:line="127" pos:column="20">chain_num<pos:position pos:line="127" pos:column="29"/></name></expr>]<pos:position pos:line="127" pos:column="30"/></index></name> <operator pos:line="127" pos:column="31">=<pos:position pos:line="127" pos:column="32"/></operator> <name pos:line="127" pos:column="33">final<pos:position pos:line="127" pos:column="38"/></name></expr>;<pos:position pos:line="127" pos:column="39"/></expr_stmt>
	<expr_stmt><expr><name pos:line="128" pos:column="9">chain_num<pos:position pos:line="128" pos:column="18"/></name><operator pos:line="128" pos:column="18">++<pos:position pos:line="128" pos:column="20"/></operator></expr>;<pos:position pos:line="128" pos:column="21"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="130" pos:column="9">DEBUG<pos:position pos:line="130" pos:column="14"/></name> <argument_list pos:line="130" pos:column="15">(<argument><expr><literal type="string" pos:line="130" pos:column="16">"Chain #%i: table = %s; chain = %s;"<pos:position pos:line="130" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="130" pos:column="54">chain_num<pos:position pos:line="130" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="65">final<pos:position pos:line="130" pos:column="70"/></name><operator pos:line="130" pos:column="70">-&gt;<pos:position pos:line="130" pos:column="75"/></operator><name pos:line="130" pos:column="72">table<pos:position pos:line="130" pos:column="77"/></name></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="79">final<pos:position pos:line="130" pos:column="84"/></name><operator pos:line="130" pos:column="84">-&gt;<pos:position pos:line="130" pos:column="89"/></operator><name pos:line="130" pos:column="86">chain<pos:position pos:line="130" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="93"/></expr_stmt>

	<return pos:line="132" pos:column="9">return <expr><operator pos:line="132" pos:column="16">(<pos:position pos:line="132" pos:column="17"/></operator><literal type="number" pos:line="132" pos:column="17">0<pos:position pos:line="132" pos:column="18"/></literal><operator pos:line="132" pos:column="18">)<pos:position pos:line="132" pos:column="19"/></operator></expr>;<pos:position pos:line="132" pos:column="20"/></return>
}<pos:position pos:line="133" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_726_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">iptables_config<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">key<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="45">const<pos:position pos:line="1" pos:column="50"/></specifier> <name pos:line="1" pos:column="51">char<pos:position pos:line="1" pos:column="55"/></name> <modifier pos:line="1" pos:column="56">*<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="57">value<pos:position pos:line="1" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="63"/></parameter_list> <block pos:line="1" pos:column="64">{
  <comment type="block" pos:line="2" pos:column="3">/* int ip_value; */</comment>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">protocol_version_t<pos:position pos:line="3" pos:column="21"/></name></type> <name pos:line="3" pos:column="22">ip_version<pos:position pos:line="3" pos:column="32"/></name> <init pos:line="3" pos:column="33">= <expr><literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="37"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><call><name pos:line="5" pos:column="7">strcasecmp<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">key<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"Chain"<pos:position pos:line="5" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call> <operator pos:line="5" pos:column="32">==<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr>)<pos:position pos:line="5" pos:column="37"/></condition><then pos:line="5" pos:column="37">
    <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="5">ip_version<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">=<pos:position pos:line="6" pos:column="17"/></operator> <name pos:line="6" pos:column="18">IPV4<pos:position pos:line="6" pos:column="22"/></name></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt></block></then>
  <elseif pos:line="7" pos:column="3">else <if pos:line="7" pos:column="8">if <condition pos:line="7" pos:column="11">(<expr><call><name pos:line="7" pos:column="12">strcasecmp<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><name pos:line="7" pos:column="23">key<pos:position pos:line="7" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="28">"Chain6"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">==<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">ip_version<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">IPV6<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt></block></then></if></elseif>
  <else pos:line="9" pos:column="3">else
    <block type="pseudo"><return pos:line="10" pos:column="5">return <expr><literal type="number" pos:line="10" pos:column="12">1<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></return></block></else></if>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">ip_chain_t<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">temp<pos:position pos:line="12" pos:column="18"/></name> <init pos:line="12" pos:column="19">= <expr><block pos:line="12" pos:column="21">{<expr><literal type="number" pos:line="12" pos:column="22">0<pos:position pos:line="12" pos:column="23"/></literal></expr>}<pos:position pos:line="12" pos:column="24"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="25"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="13" pos:column="3">ip_chain_t<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">final<pos:position pos:line="13" pos:column="20"/></name></decl>, <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier><modifier pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="13" pos:column="24">list<pos:position pos:line="13" pos:column="28"/></name></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="14" pos:column="3">char<pos:position pos:line="14" pos:column="7"/></name> <modifier pos:line="14" pos:column="8">*<pos:position pos:line="14" pos:column="9"/></modifier></type><name pos:line="14" pos:column="9">table<pos:position pos:line="14" pos:column="14"/></name></decl>;<pos:position pos:line="14" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="15" pos:column="3">int<pos:position pos:line="15" pos:column="6"/></name></type> <name pos:line="15" pos:column="7">table_len<pos:position pos:line="15" pos:column="16"/></name></decl>;<pos:position pos:line="15" pos:column="17"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="16" pos:column="3">char<pos:position pos:line="16" pos:column="7"/></name> <modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type><name pos:line="16" pos:column="9">chain<pos:position pos:line="16" pos:column="14"/></name></decl>;<pos:position pos:line="16" pos:column="15"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="17" pos:column="3">int<pos:position pos:line="17" pos:column="6"/></name></type> <name pos:line="17" pos:column="7">chain_len<pos:position pos:line="17" pos:column="16"/></name></decl>;<pos:position pos:line="17" pos:column="17"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="19" pos:column="3">char<pos:position pos:line="19" pos:column="7"/></name> <modifier pos:line="19" pos:column="8">*<pos:position pos:line="19" pos:column="9"/></modifier></type><name pos:line="19" pos:column="9">value_copy<pos:position pos:line="19" pos:column="19"/></name></decl>;<pos:position pos:line="19" pos:column="20"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">char<pos:position pos:line="20" pos:column="7"/></name> <modifier pos:line="20" pos:column="8">*<pos:position pos:line="20" pos:column="9"/></modifier></type><name><name pos:line="20" pos:column="9">fields<pos:position pos:line="20" pos:column="15"/></name><index pos:line="20" pos:column="15">[<expr><literal type="number" pos:line="20" pos:column="16">4<pos:position pos:line="20" pos:column="17"/></literal></expr>]<pos:position pos:line="20" pos:column="18"/></index></name></decl>;<pos:position pos:line="20" pos:column="19"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="21" pos:column="3">int<pos:position pos:line="21" pos:column="6"/></name></type> <name pos:line="21" pos:column="7">fields_num<pos:position pos:line="21" pos:column="17"/></name></decl>;<pos:position pos:line="21" pos:column="18"/></decl_stmt>

  <expr_stmt><expr><name pos:line="23" pos:column="3">value_copy<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <call><name pos:line="23" pos:column="16">strdup<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">value<pos:position pos:line="23" pos:column="28"/></name></expr></argument>)<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><name pos:line="24" pos:column="7">value_copy<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">==<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">NULL<pos:position pos:line="24" pos:column="25"/></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name></type> <name><name pos:line="25" pos:column="10">errbuf<pos:position pos:line="25" pos:column="16"/></name><index pos:line="25" pos:column="16">[<expr><literal type="number" pos:line="25" pos:column="17">1024<pos:position pos:line="25" pos:column="21"/></literal></expr>]<pos:position pos:line="25" pos:column="22"/></index></name></decl>;<pos:position pos:line="25" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">ERROR<pos:position pos:line="26" pos:column="10"/></name><argument_list pos:line="26" pos:column="10">(<argument><expr><literal type="string" pos:line="26" pos:column="11">"strdup failed: %s"<pos:position pos:line="26" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="32">sstrerror<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">(<argument><expr><name pos:line="26" pos:column="42">errno<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">errbuf<pos:position pos:line="26" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="57">sizeof<argument_list pos:line="26" pos:column="63">(<argument><expr><name pos:line="26" pos:column="64">errbuf<pos:position pos:line="26" pos:column="70"/></name></expr></argument>)<pos:position pos:line="26" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="74"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><literal type="number" pos:line="27" pos:column="12">1<pos:position pos:line="27" pos:column="13"/></literal></expr>;<pos:position pos:line="27" pos:column="14"/></return>
  }<pos:position pos:line="28" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="30" pos:column="3">/*
   *  Time to fill the temp element
   *  Examine value string, it should look like:
   *  Chain[6] &lt;table&gt; &lt;chain&gt; [&lt;comment|num&gt; [name]]
   */</comment>

  <comment type="block" pos:line="36" pos:column="3">/* set IPv4 or IPv6 */</comment>
  <expr_stmt><expr><name><name pos:line="37" pos:column="3">temp<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">.<pos:position pos:line="37" pos:column="8"/></operator><name pos:line="37" pos:column="8">ip_version<pos:position pos:line="37" pos:column="18"/></name></name> <operator pos:line="37" pos:column="19">=<pos:position pos:line="37" pos:column="20"/></operator> <name pos:line="37" pos:column="21">ip_version<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt>

  <comment type="block" pos:line="39" pos:column="3">/* Chain &lt;table&gt; &lt;chain&gt; [&lt;comment|num&gt; [name]] */</comment>
  <expr_stmt><expr><name pos:line="40" pos:column="3">fields_num<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <call><name pos:line="40" pos:column="16">strsplit<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">value_copy<pos:position pos:line="40" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="37">fields<pos:position pos:line="40" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="45">4<pos:position pos:line="40" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="48"/></expr_stmt>
  <if pos:line="41" pos:column="3">if <condition pos:line="41" pos:column="6">(<expr><name pos:line="41" pos:column="7">fields_num<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">&lt;<pos:position pos:line="41" pos:column="22"/></operator> <literal type="number" pos:line="41" pos:column="20">2<pos:position pos:line="41" pos:column="21"/></literal></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22"> <block pos:line="41" pos:column="23">{
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">free<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">(<argument><expr><name pos:line="42" pos:column="10">value_copy<pos:position pos:line="42" pos:column="20"/></name></expr></argument>)<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>
    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">1<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
  }<pos:position pos:line="44" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="46" pos:column="3">table<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <name><name pos:line="46" pos:column="11">fields<pos:position pos:line="46" pos:column="17"/></name><index pos:line="46" pos:column="17">[<expr><literal type="number" pos:line="46" pos:column="18">0<pos:position pos:line="46" pos:column="19"/></literal></expr>]<pos:position pos:line="46" pos:column="20"/></index></name></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">chain<pos:position pos:line="47" pos:column="8"/></name> <operator pos:line="47" pos:column="9">=<pos:position pos:line="47" pos:column="10"/></operator> <name><name pos:line="47" pos:column="11">fields<pos:position pos:line="47" pos:column="17"/></name><index pos:line="47" pos:column="17">[<expr><literal type="number" pos:line="47" pos:column="18">1<pos:position pos:line="47" pos:column="19"/></literal></expr>]<pos:position pos:line="47" pos:column="20"/></index></name></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>

  <expr_stmt><expr><name pos:line="49" pos:column="3">table_len<pos:position pos:line="49" pos:column="12"/></name> <operator pos:line="49" pos:column="13">=<pos:position pos:line="49" pos:column="14"/></operator> <call><name pos:line="49" pos:column="15">strlen<pos:position pos:line="49" pos:column="21"/></name><argument_list pos:line="49" pos:column="21">(<argument><expr><name pos:line="49" pos:column="22">table<pos:position pos:line="49" pos:column="27"/></name></expr></argument>)<pos:position pos:line="49" pos:column="28"/></argument_list></call> <operator pos:line="49" pos:column="29">+<pos:position pos:line="49" pos:column="30"/></operator> <literal type="number" pos:line="49" pos:column="31">1<pos:position pos:line="49" pos:column="32"/></literal></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
  <if pos:line="50" pos:column="3">if <condition pos:line="50" pos:column="6">(<expr><operator pos:line="50" pos:column="7">(<pos:position pos:line="50" pos:column="8"/></operator><name pos:line="50" pos:column="8">unsigned<pos:position pos:line="50" pos:column="16"/></name> <name pos:line="50" pos:column="17">int<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">)<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="21">table_len<pos:position pos:line="50" pos:column="30"/></name> <operator pos:line="50" pos:column="31">&gt;<pos:position pos:line="50" pos:column="35"/></operator> <sizeof pos:line="50" pos:column="33">sizeof<argument_list pos:line="50" pos:column="39">(<argument><expr><name><name pos:line="50" pos:column="40">temp<pos:position pos:line="50" pos:column="44"/></name><operator pos:line="50" pos:column="44">.<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="45">table<pos:position pos:line="50" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></sizeof></expr>)<pos:position pos:line="50" pos:column="52"/></condition><then pos:line="50" pos:column="52"> <block pos:line="50" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">ERROR<pos:position pos:line="51" pos:column="10"/></name><argument_list pos:line="51" pos:column="10">(<argument><expr><literal type="string" pos:line="51" pos:column="11">"Table `%s' too long."<pos:position pos:line="51" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">table<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">free<pos:position pos:line="52" pos:column="9"/></name><argument_list pos:line="52" pos:column="9">(<argument><expr><name pos:line="52" pos:column="10">value_copy<pos:position pos:line="52" pos:column="20"/></name></expr></argument>)<pos:position pos:line="52" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt>
    <return pos:line="53" pos:column="5">return <expr><literal type="number" pos:line="53" pos:column="12">1<pos:position pos:line="53" pos:column="13"/></literal></expr>;<pos:position pos:line="53" pos:column="14"/></return>
  }<pos:position pos:line="54" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="55" pos:column="3">sstrncpy<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><name><name pos:line="55" pos:column="12">temp<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">.<pos:position pos:line="55" pos:column="17"/></operator><name pos:line="55" pos:column="17">table<pos:position pos:line="55" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="24">table<pos:position pos:line="55" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="31">table_len<pos:position pos:line="55" pos:column="40"/></name></expr></argument>)<pos:position pos:line="55" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="42"/></expr_stmt>

  <expr_stmt><expr><name pos:line="57" pos:column="3">chain_len<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <call><name pos:line="57" pos:column="15">strlen<pos:position pos:line="57" pos:column="21"/></name><argument_list pos:line="57" pos:column="21">(<argument><expr><name pos:line="57" pos:column="22">chain<pos:position pos:line="57" pos:column="27"/></name></expr></argument>)<pos:position pos:line="57" pos:column="28"/></argument_list></call> <operator pos:line="57" pos:column="29">+<pos:position pos:line="57" pos:column="30"/></operator> <literal type="number" pos:line="57" pos:column="31">1<pos:position pos:line="57" pos:column="32"/></literal></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt>
  <if pos:line="58" pos:column="3">if <condition pos:line="58" pos:column="6">(<expr><operator pos:line="58" pos:column="7">(<pos:position pos:line="58" pos:column="8"/></operator><name pos:line="58" pos:column="8">unsigned<pos:position pos:line="58" pos:column="16"/></name> <name pos:line="58" pos:column="17">int<pos:position pos:line="58" pos:column="20"/></name><operator pos:line="58" pos:column="20">)<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">chain_len<pos:position pos:line="58" pos:column="30"/></name> <operator pos:line="58" pos:column="31">&gt;<pos:position pos:line="58" pos:column="35"/></operator> <sizeof pos:line="58" pos:column="33">sizeof<argument_list pos:line="58" pos:column="39">(<argument><expr><name><name pos:line="58" pos:column="40">temp<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">.<pos:position pos:line="58" pos:column="45"/></operator><name pos:line="58" pos:column="45">chain<pos:position pos:line="58" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="51"/></argument_list></sizeof></expr>)<pos:position pos:line="58" pos:column="52"/></condition><then pos:line="58" pos:column="52"> <block pos:line="58" pos:column="53">{
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">ERROR<pos:position pos:line="59" pos:column="10"/></name><argument_list pos:line="59" pos:column="10">(<argument><expr><literal type="string" pos:line="59" pos:column="11">"Chain `%s' too long."<pos:position pos:line="59" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">chain<pos:position pos:line="59" pos:column="40"/></name></expr></argument>)<pos:position pos:line="59" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">free<pos:position pos:line="60" pos:column="9"/></name><argument_list pos:line="60" pos:column="9">(<argument><expr><name pos:line="60" pos:column="10">value_copy<pos:position pos:line="60" pos:column="20"/></name></expr></argument>)<pos:position pos:line="60" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
    <return pos:line="61" pos:column="5">return <expr><literal type="number" pos:line="61" pos:column="12">1<pos:position pos:line="61" pos:column="13"/></literal></expr>;<pos:position pos:line="61" pos:column="14"/></return>
  }<pos:position pos:line="62" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="63" pos:column="3">sstrncpy<pos:position pos:line="63" pos:column="11"/></name><argument_list pos:line="63" pos:column="11">(<argument><expr><name><name pos:line="63" pos:column="12">temp<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">.<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="17">chain<pos:position pos:line="63" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="24">chain<pos:position pos:line="63" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="31">chain_len<pos:position pos:line="63" pos:column="40"/></name></expr></argument>)<pos:position pos:line="63" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="42"/></expr_stmt>

  <if pos:line="65" pos:column="3">if <condition pos:line="65" pos:column="6">(<expr><name pos:line="65" pos:column="7">fields_num<pos:position pos:line="65" pos:column="17"/></name> <operator pos:line="65" pos:column="18">&gt;=<pos:position pos:line="65" pos:column="23"/></operator> <literal type="number" pos:line="65" pos:column="21">3<pos:position pos:line="65" pos:column="22"/></literal></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23"> <block pos:line="65" pos:column="24">{
    <decl_stmt><decl><type><name pos:line="66" pos:column="5">char<pos:position pos:line="66" pos:column="9"/></name> <modifier pos:line="66" pos:column="10">*<pos:position pos:line="66" pos:column="11"/></modifier></type><name pos:line="66" pos:column="11">comment<pos:position pos:line="66" pos:column="18"/></name> <init pos:line="66" pos:column="19">= <expr><name><name pos:line="66" pos:column="21">fields<pos:position pos:line="66" pos:column="27"/></name><index pos:line="66" pos:column="27">[<expr><literal type="number" pos:line="66" pos:column="28">2<pos:position pos:line="66" pos:column="29"/></literal></expr>]<pos:position pos:line="66" pos:column="30"/></index></name></expr></init></decl>;<pos:position pos:line="66" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="67" pos:column="5">int<pos:position pos:line="67" pos:column="8"/></name></type> <name pos:line="67" pos:column="9">rule<pos:position pos:line="67" pos:column="13"/></name> <init pos:line="67" pos:column="14">= <expr><call><name pos:line="67" pos:column="16">atoi<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">comment<pos:position pos:line="67" pos:column="28"/></name></expr></argument>)<pos:position pos:line="67" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="30"/></decl_stmt>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><name pos:line="69" pos:column="9">rule<pos:position pos:line="69" pos:column="13"/></name></expr>)<pos:position pos:line="69" pos:column="14"/></condition><then pos:line="69" pos:column="14"> <block pos:line="69" pos:column="15">{
      <expr_stmt><expr><name><name pos:line="70" pos:column="7">temp<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">.<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">rule<pos:position pos:line="70" pos:column="16"/></name><operator pos:line="70" pos:column="16">.<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="17">num<pos:position pos:line="70" pos:column="20"/></name></name> <operator pos:line="70" pos:column="21">=<pos:position pos:line="70" pos:column="22"/></operator> <name pos:line="70" pos:column="23">rule<pos:position pos:line="70" pos:column="27"/></name></expr>;<pos:position pos:line="70" pos:column="28"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="71" pos:column="7">temp<pos:position pos:line="71" pos:column="11"/></name><operator pos:line="71" pos:column="11">.<pos:position pos:line="71" pos:column="12"/></operator><name pos:line="71" pos:column="12">rule_type<pos:position pos:line="71" pos:column="21"/></name></name> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <name pos:line="71" pos:column="24">RTYPE_NUM<pos:position pos:line="71" pos:column="33"/></name></expr>;<pos:position pos:line="71" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then> <else pos:line="72" pos:column="7">else <block pos:line="72" pos:column="12">{
      <expr_stmt><expr><name><name pos:line="73" pos:column="7">temp<pos:position pos:line="73" pos:column="11"/></name><operator pos:line="73" pos:column="11">.<pos:position pos:line="73" pos:column="12"/></operator><name pos:line="73" pos:column="12">rule<pos:position pos:line="73" pos:column="16"/></name><operator pos:line="73" pos:column="16">.<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="17">comment<pos:position pos:line="73" pos:column="24"/></name></name> <operator pos:line="73" pos:column="25">=<pos:position pos:line="73" pos:column="26"/></operator> <call><name pos:line="73" pos:column="27">strdup<pos:position pos:line="73" pos:column="33"/></name><argument_list pos:line="73" pos:column="33">(<argument><expr><name pos:line="73" pos:column="34">comment<pos:position pos:line="73" pos:column="41"/></name></expr></argument>)<pos:position pos:line="73" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="43"/></expr_stmt>
      <if pos:line="74" pos:column="7">if <condition pos:line="74" pos:column="10">(<expr><name><name pos:line="74" pos:column="11">temp<pos:position pos:line="74" pos:column="15"/></name><operator pos:line="74" pos:column="15">.<pos:position pos:line="74" pos:column="16"/></operator><name pos:line="74" pos:column="16">rule<pos:position pos:line="74" pos:column="20"/></name><operator pos:line="74" pos:column="20">.<pos:position pos:line="74" pos:column="21"/></operator><name pos:line="74" pos:column="21">comment<pos:position pos:line="74" pos:column="28"/></name></name> <operator pos:line="74" pos:column="29">==<pos:position pos:line="74" pos:column="31"/></operator> <name pos:line="74" pos:column="32">NULL<pos:position pos:line="74" pos:column="36"/></name></expr>)<pos:position pos:line="74" pos:column="37"/></condition><then pos:line="74" pos:column="37"> <block pos:line="74" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">free<pos:position pos:line="75" pos:column="13"/></name><argument_list pos:line="75" pos:column="13">(<argument><expr><name pos:line="75" pos:column="14">value_copy<pos:position pos:line="75" pos:column="24"/></name></expr></argument>)<pos:position pos:line="75" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="26"/></expr_stmt>
        <return pos:line="76" pos:column="9">return <expr><literal type="number" pos:line="76" pos:column="16">1<pos:position pos:line="76" pos:column="17"/></literal></expr>;<pos:position pos:line="76" pos:column="18"/></return>
      }<pos:position pos:line="77" pos:column="8"/></block></then></if>
      <expr_stmt><expr><name><name pos:line="78" pos:column="7">temp<pos:position pos:line="78" pos:column="11"/></name><operator pos:line="78" pos:column="11">.<pos:position pos:line="78" pos:column="12"/></operator><name pos:line="78" pos:column="12">rule_type<pos:position pos:line="78" pos:column="21"/></name></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <name pos:line="78" pos:column="24">RTYPE_COMMENT<pos:position pos:line="78" pos:column="37"/></name></expr>;<pos:position pos:line="78" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></else></if>
  }<pos:position pos:line="80" pos:column="4"/></block></then> <else pos:line="80" pos:column="5">else <block pos:line="80" pos:column="10">{
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">temp<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">.<pos:position pos:line="81" pos:column="10"/></operator><name pos:line="81" pos:column="10">rule_type<pos:position pos:line="81" pos:column="19"/></name></name> <operator pos:line="81" pos:column="20">=<pos:position pos:line="81" pos:column="21"/></operator> <name pos:line="81" pos:column="22">RTYPE_COMMENT_ALL<pos:position pos:line="81" pos:column="39"/></name></expr>;<pos:position pos:line="81" pos:column="40"/></expr_stmt>
  }<pos:position pos:line="82" pos:column="4"/></block></else></if>

  <if pos:line="84" pos:column="3">if <condition pos:line="84" pos:column="6">(<expr><name pos:line="84" pos:column="7">fields_num<pos:position pos:line="84" pos:column="17"/></name> <operator pos:line="84" pos:column="18">&gt;=<pos:position pos:line="84" pos:column="23"/></operator> <literal type="number" pos:line="84" pos:column="21">4<pos:position pos:line="84" pos:column="22"/></literal></expr>)<pos:position pos:line="84" pos:column="23"/></condition><then pos:line="84" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="5">sstrncpy<pos:position pos:line="85" pos:column="13"/></name><argument_list pos:line="85" pos:column="13">(<argument><expr><name><name pos:line="85" pos:column="14">temp<pos:position pos:line="85" pos:column="18"/></name><operator pos:line="85" pos:column="18">.<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="19">name<pos:position pos:line="85" pos:column="23"/></name></name></expr></argument>, <argument><expr><name><name pos:line="85" pos:column="25">fields<pos:position pos:line="85" pos:column="31"/></name><index pos:line="85" pos:column="31">[<expr><literal type="number" pos:line="85" pos:column="32">3<pos:position pos:line="85" pos:column="33"/></literal></expr>]<pos:position pos:line="85" pos:column="34"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="85" pos:column="36">sizeof<argument_list pos:line="85" pos:column="42">(<argument><expr><name><name pos:line="85" pos:column="43">temp<pos:position pos:line="85" pos:column="47"/></name><operator pos:line="85" pos:column="47">.<pos:position pos:line="85" pos:column="48"/></operator><name pos:line="85" pos:column="48">name<pos:position pos:line="85" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="85" pos:column="53"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="55"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="87" pos:column="3">free<pos:position pos:line="87" pos:column="7"/></name><argument_list pos:line="87" pos:column="7">(<argument><expr><name pos:line="87" pos:column="8">value_copy<pos:position pos:line="87" pos:column="18"/></name></expr></argument>)<pos:position pos:line="87" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="88" pos:column="3">value_copy<pos:position pos:line="88" pos:column="13"/></name> <operator pos:line="88" pos:column="14">=<pos:position pos:line="88" pos:column="15"/></operator> <name pos:line="88" pos:column="16">NULL<pos:position pos:line="88" pos:column="20"/></name></expr>;<pos:position pos:line="88" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="89" pos:column="3">table<pos:position pos:line="89" pos:column="8"/></name> <operator pos:line="89" pos:column="9">=<pos:position pos:line="89" pos:column="10"/></operator> <name pos:line="89" pos:column="11">NULL<pos:position pos:line="89" pos:column="15"/></name></expr>;<pos:position pos:line="89" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name pos:line="90" pos:column="3">chain<pos:position pos:line="90" pos:column="8"/></name> <operator pos:line="90" pos:column="9">=<pos:position pos:line="90" pos:column="10"/></operator> <name pos:line="90" pos:column="11">NULL<pos:position pos:line="90" pos:column="15"/></name></expr>;<pos:position pos:line="90" pos:column="16"/></expr_stmt>

  <expr_stmt><expr><name pos:line="92" pos:column="3">list<pos:position pos:line="92" pos:column="7"/></name> <operator pos:line="92" pos:column="8">=<pos:position pos:line="92" pos:column="9"/></operator> <call><name pos:line="92" pos:column="10">realloc<pos:position pos:line="92" pos:column="17"/></name><argument_list pos:line="92" pos:column="17">(<argument><expr><name pos:line="92" pos:column="18">chain_list<pos:position pos:line="92" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="92" pos:column="30">(<pos:position pos:line="92" pos:column="31"/></operator><name pos:line="92" pos:column="31">chain_num<pos:position pos:line="92" pos:column="40"/></name> <operator pos:line="92" pos:column="41">+<pos:position pos:line="92" pos:column="42"/></operator> <literal type="number" pos:line="92" pos:column="43">1<pos:position pos:line="92" pos:column="44"/></literal><operator pos:line="92" pos:column="44">)<pos:position pos:line="92" pos:column="45"/></operator> <operator pos:line="92" pos:column="46">*<pos:position pos:line="92" pos:column="47"/></operator> <sizeof pos:line="92" pos:column="48">sizeof<argument_list pos:line="92" pos:column="54">(<argument><expr><name pos:line="92" pos:column="55">ip_chain_t<pos:position pos:line="92" pos:column="65"/></name> <operator pos:line="92" pos:column="66">*<pos:position pos:line="92" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="92" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="92" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="70"/></expr_stmt>
  <if pos:line="93" pos:column="3">if <condition pos:line="93" pos:column="6">(<expr><name pos:line="93" pos:column="7">list<pos:position pos:line="93" pos:column="11"/></name> <operator pos:line="93" pos:column="12">==<pos:position pos:line="93" pos:column="14"/></operator> <name pos:line="93" pos:column="15">NULL<pos:position pos:line="93" pos:column="19"/></name></expr>)<pos:position pos:line="93" pos:column="20"/></condition><then pos:line="93" pos:column="20"> <block pos:line="93" pos:column="21">{
    <decl_stmt><decl><type><name pos:line="94" pos:column="5">char<pos:position pos:line="94" pos:column="9"/></name></type> <name><name pos:line="94" pos:column="10">errbuf<pos:position pos:line="94" pos:column="16"/></name><index pos:line="94" pos:column="16">[<expr><literal type="number" pos:line="94" pos:column="17">1024<pos:position pos:line="94" pos:column="21"/></literal></expr>]<pos:position pos:line="94" pos:column="22"/></index></name></decl>;<pos:position pos:line="94" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="95" pos:column="5">ERROR<pos:position pos:line="95" pos:column="10"/></name><argument_list pos:line="95" pos:column="10">(<argument><expr><literal type="string" pos:line="95" pos:column="11">"realloc failed: %s"<pos:position pos:line="95" pos:column="31"/></literal></expr></argument>, <argument><expr><call><name pos:line="95" pos:column="33">sstrerror<pos:position pos:line="95" pos:column="42"/></name><argument_list pos:line="95" pos:column="42">(<argument><expr><name pos:line="95" pos:column="43">errno<pos:position pos:line="95" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="50">errbuf<pos:position pos:line="95" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="58">sizeof<argument_list pos:line="95" pos:column="64">(<argument><expr><name pos:line="95" pos:column="65">errbuf<pos:position pos:line="95" pos:column="71"/></name></expr></argument>)<pos:position pos:line="95" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="95" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="96" pos:column="5">sfree<pos:position pos:line="96" pos:column="10"/></name><argument_list pos:line="96" pos:column="10">(<argument><expr><name><name pos:line="96" pos:column="11">temp<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">.<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">rule<pos:position pos:line="96" pos:column="20"/></name><operator pos:line="96" pos:column="20">.<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="21">comment<pos:position pos:line="96" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="96" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="30"/></expr_stmt>
    <return pos:line="97" pos:column="5">return <expr><literal type="number" pos:line="97" pos:column="12">1<pos:position pos:line="97" pos:column="13"/></literal></expr>;<pos:position pos:line="97" pos:column="14"/></return>
  }<pos:position pos:line="98" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="100" pos:column="3">chain_list<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">=<pos:position pos:line="100" pos:column="15"/></operator> <name pos:line="100" pos:column="16">list<pos:position pos:line="100" pos:column="20"/></name></expr>;<pos:position pos:line="100" pos:column="21"/></expr_stmt>
  <expr_stmt><expr><name pos:line="101" pos:column="3">final<pos:position pos:line="101" pos:column="8"/></name> <operator pos:line="101" pos:column="9">=<pos:position pos:line="101" pos:column="10"/></operator> <call><name pos:line="101" pos:column="11">malloc<pos:position pos:line="101" pos:column="17"/></name><argument_list pos:line="101" pos:column="17">(<argument><expr><sizeof pos:line="101" pos:column="18">sizeof<argument_list pos:line="101" pos:column="24">(<argument><expr><operator pos:line="101" pos:column="25">*<pos:position pos:line="101" pos:column="26"/></operator><name pos:line="101" pos:column="26">final<pos:position pos:line="101" pos:column="31"/></name></expr></argument>)<pos:position pos:line="101" pos:column="32"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="101" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>
  <if pos:line="102" pos:column="3">if <condition pos:line="102" pos:column="6">(<expr><name pos:line="102" pos:column="7">final<pos:position pos:line="102" pos:column="12"/></name> <operator pos:line="102" pos:column="13">==<pos:position pos:line="102" pos:column="15"/></operator> <name pos:line="102" pos:column="16">NULL<pos:position pos:line="102" pos:column="20"/></name></expr>)<pos:position pos:line="102" pos:column="21"/></condition><then pos:line="102" pos:column="21"> <block pos:line="102" pos:column="22">{
    <decl_stmt><decl><type><name pos:line="103" pos:column="5">char<pos:position pos:line="103" pos:column="9"/></name></type> <name><name pos:line="103" pos:column="10">errbuf<pos:position pos:line="103" pos:column="16"/></name><index pos:line="103" pos:column="16">[<expr><literal type="number" pos:line="103" pos:column="17">1024<pos:position pos:line="103" pos:column="21"/></literal></expr>]<pos:position pos:line="103" pos:column="22"/></index></name></decl>;<pos:position pos:line="103" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="104" pos:column="5">ERROR<pos:position pos:line="104" pos:column="10"/></name><argument_list pos:line="104" pos:column="10">(<argument><expr><literal type="string" pos:line="104" pos:column="11">"malloc failed: %s"<pos:position pos:line="104" pos:column="30"/></literal></expr></argument>, <argument><expr><call><name pos:line="104" pos:column="32">sstrerror<pos:position pos:line="104" pos:column="41"/></name><argument_list pos:line="104" pos:column="41">(<argument><expr><name pos:line="104" pos:column="42">errno<pos:position pos:line="104" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="49">errbuf<pos:position pos:line="104" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="104" pos:column="57">sizeof<argument_list pos:line="104" pos:column="63">(<argument><expr><name pos:line="104" pos:column="64">errbuf<pos:position pos:line="104" pos:column="70"/></name></expr></argument>)<pos:position pos:line="104" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="104" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="104" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">sfree<pos:position pos:line="105" pos:column="10"/></name><argument_list pos:line="105" pos:column="10">(<argument><expr><name><name pos:line="105" pos:column="11">temp<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">.<pos:position pos:line="105" pos:column="16"/></operator><name pos:line="105" pos:column="16">rule<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">.<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="21">comment<pos:position pos:line="105" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="30"/></expr_stmt>
    <return pos:line="106" pos:column="5">return <expr><literal type="number" pos:line="106" pos:column="12">1<pos:position pos:line="106" pos:column="13"/></literal></expr>;<pos:position pos:line="106" pos:column="14"/></return>
  }<pos:position pos:line="107" pos:column="4"/></block></then></if>
  <expr_stmt><expr><call><name pos:line="108" pos:column="3">memcpy<pos:position pos:line="108" pos:column="9"/></name><argument_list pos:line="108" pos:column="9">(<argument><expr><name pos:line="108" pos:column="10">final<pos:position pos:line="108" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="108" pos:column="17">&amp;<pos:position pos:line="108" pos:column="22"/></operator><name pos:line="108" pos:column="18">temp<pos:position pos:line="108" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="108" pos:column="24">sizeof<argument_list pos:line="108" pos:column="30">(<argument><expr><name pos:line="108" pos:column="31">temp<pos:position pos:line="108" pos:column="35"/></name></expr></argument>)<pos:position pos:line="108" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="108" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="38"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="109" pos:column="3">chain_list<pos:position pos:line="109" pos:column="13"/></name><index pos:line="109" pos:column="13">[<expr><name pos:line="109" pos:column="14">chain_num<pos:position pos:line="109" pos:column="23"/></name></expr>]<pos:position pos:line="109" pos:column="24"/></index></name> <operator pos:line="109" pos:column="25">=<pos:position pos:line="109" pos:column="26"/></operator> <name pos:line="109" pos:column="27">final<pos:position pos:line="109" pos:column="32"/></name></expr>;<pos:position pos:line="109" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><name pos:line="110" pos:column="3">chain_num<pos:position pos:line="110" pos:column="12"/></name><operator pos:line="110" pos:column="12">++<pos:position pos:line="110" pos:column="14"/></operator></expr>;<pos:position pos:line="110" pos:column="15"/></expr_stmt>

  <expr_stmt><expr><call><name pos:line="112" pos:column="3">DEBUG<pos:position pos:line="112" pos:column="8"/></name><argument_list pos:line="112" pos:column="8">(<argument><expr><literal type="string" pos:line="112" pos:column="9">"Chain #%i: table = %s; chain = %s;"<pos:position pos:line="112" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="112" pos:column="47">chain_num<pos:position pos:line="112" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="58">final<pos:position pos:line="112" pos:column="63"/></name><operator pos:line="112" pos:column="63">-&gt;<pos:position pos:line="112" pos:column="68"/></operator><name pos:line="112" pos:column="65">table<pos:position pos:line="112" pos:column="70"/></name></name></expr></argument>,
        <argument><expr><name><name pos:line="113" pos:column="9">final<pos:position pos:line="113" pos:column="14"/></name><operator pos:line="113" pos:column="14">-&gt;<pos:position pos:line="113" pos:column="19"/></operator><name pos:line="113" pos:column="16">chain<pos:position pos:line="113" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="113" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="23"/></expr_stmt>

  <return pos:line="115" pos:column="3">return <expr><literal type="number" pos:line="115" pos:column="10">0<pos:position pos:line="115" pos:column="11"/></literal></expr>;<pos:position pos:line="115" pos:column="12"/></return>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

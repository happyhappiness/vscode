<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_118_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">exec_config<pos:position pos:line="1" pos:column="23"/></name> <parameter_list pos:line="1" pos:column="24">(<parameter><decl><type><specifier pos:line="1" pos:column="25">const<pos:position pos:line="1" pos:column="30"/></specifier> <name pos:line="1" pos:column="31">char<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">key<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier> <name pos:line="1" pos:column="48">char<pos:position pos:line="1" pos:column="52"/></name> <modifier pos:line="1" pos:column="53">*<pos:position pos:line="1" pos:column="54"/></modifier></type><name pos:line="1" pos:column="54">value<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
  <if pos:line="3" pos:column="3">if <condition pos:line="3" pos:column="6">(<expr><call><name pos:line="3" pos:column="7">strcasecmp<pos:position pos:line="3" pos:column="17"/></name> <argument_list pos:line="3" pos:column="18">(<argument><expr><literal type="string" pos:line="3" pos:column="19">"Exec"<pos:position pos:line="3" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="27">key<pos:position pos:line="3" pos:column="30"/></name></expr></argument>)<pos:position pos:line="3" pos:column="31"/></argument_list></call> <operator pos:line="3" pos:column="32">==<pos:position pos:line="3" pos:column="34"/></operator> <literal type="number" pos:line="3" pos:column="35">0<pos:position pos:line="3" pos:column="36"/></literal></expr>)<pos:position pos:line="3" pos:column="37"/></condition><then pos:line="3" pos:column="37">
  <block pos:line="4" pos:column="3">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">program_list_t<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">pl<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">pl<pos:position pos:line="6" pos:column="7"/></name> <operator pos:line="6" pos:column="8">=<pos:position pos:line="6" pos:column="9"/></operator> <operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">program_list_t<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></operator><operator pos:line="6" pos:column="27">)<pos:position pos:line="6" pos:column="28"/></operator> <call><name pos:line="6" pos:column="29">malloc<pos:position pos:line="6" pos:column="35"/></name> <argument_list pos:line="6" pos:column="36">(<argument><expr><sizeof pos:line="6" pos:column="37">sizeof <argument_list pos:line="6" pos:column="44">(<argument><expr><name pos:line="6" pos:column="45">program_list_t<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">pl<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">==<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">NULL<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
      <block type="pseudo"><return pos:line="8" pos:column="7">return <expr><operator pos:line="8" pos:column="14">(<pos:position pos:line="8" pos:column="15"/></operator><literal type="number" pos:line="8" pos:column="15">1<pos:position pos:line="8" pos:column="16"/></literal><operator pos:line="8" pos:column="16">)<pos:position pos:line="8" pos:column="17"/></operator></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name> <argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">pl<pos:position pos:line="9" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="17">'\0'<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="23">sizeof <argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">program_list_t<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">pl<pos:position pos:line="11" pos:column="7"/></name><operator pos:line="11" pos:column="7">-&gt;<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="9">user<pos:position pos:line="11" pos:column="13"/></name></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">strdup<pos:position pos:line="11" pos:column="22"/></name> <argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">value<pos:position pos:line="11" pos:column="29"/></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">pl<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">user<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <name pos:line="12" pos:column="21">NULL<pos:position pos:line="12" pos:column="25"/></name></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
    <block pos:line="13" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="14" pos:column="7">sfree<pos:position pos:line="14" pos:column="12"/></name> <argument_list pos:line="14" pos:column="13">(<argument><expr><name pos:line="14" pos:column="14">pl<pos:position pos:line="14" pos:column="16"/></name></expr></argument>)<pos:position pos:line="14" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
      <return pos:line="15" pos:column="7">return <expr><operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><literal type="number" pos:line="15" pos:column="15">1<pos:position pos:line="15" pos:column="16"/></literal><operator pos:line="15" pos:column="16">)<pos:position pos:line="15" pos:column="17"/></operator></expr>;<pos:position pos:line="15" pos:column="18"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">pl<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">exec<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <call><name pos:line="18" pos:column="16">strchr<pos:position pos:line="18" pos:column="22"/></name> <argument_list pos:line="18" pos:column="23">(<argument><expr><name><name pos:line="18" pos:column="24">pl<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">user<pos:position pos:line="18" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="34">' '<pos:position pos:line="18" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">pl<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">exec<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">==<pos:position pos:line="19" pos:column="20"/></operator> <name pos:line="19" pos:column="21">NULL<pos:position pos:line="19" pos:column="25"/></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition><then pos:line="19" pos:column="26">
    <block pos:line="20" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">sfree<pos:position pos:line="21" pos:column="12"/></name> <argument_list pos:line="21" pos:column="13">(<argument><expr><name><name pos:line="21" pos:column="14">pl<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">user<pos:position pos:line="21" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="22" pos:column="7">sfree<pos:position pos:line="22" pos:column="12"/></name> <argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">pl<pos:position pos:line="22" pos:column="16"/></name></expr></argument>)<pos:position pos:line="22" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="18"/></expr_stmt>
      <return pos:line="23" pos:column="7">return <expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><literal type="number" pos:line="23" pos:column="15">1<pos:position pos:line="23" pos:column="16"/></literal><operator pos:line="23" pos:column="16">)<pos:position pos:line="23" pos:column="17"/></operator></expr>;<pos:position pos:line="23" pos:column="18"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <while pos:line="25" pos:column="5">while <condition pos:line="25" pos:column="11">(<expr><operator pos:line="25" pos:column="12">*<pos:position pos:line="25" pos:column="13"/></operator><name><name pos:line="25" pos:column="13">pl<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">exec<pos:position pos:line="25" pos:column="21"/></name></name> <operator pos:line="25" pos:column="22">==<pos:position pos:line="25" pos:column="24"/></operator> <literal type="char" pos:line="25" pos:column="25">' '<pos:position pos:line="25" pos:column="28"/></literal></expr>)<pos:position pos:line="25" pos:column="29"/></condition>
    <block pos:line="26" pos:column="5">{
      <expr_stmt><expr><operator pos:line="27" pos:column="7">*<pos:position pos:line="27" pos:column="8"/></operator><name><name pos:line="27" pos:column="8">pl<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">exec<pos:position pos:line="27" pos:column="16"/></name></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <literal type="char" pos:line="27" pos:column="19">'\0'<pos:position pos:line="27" pos:column="23"/></literal></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="28" pos:column="7">pl<pos:position pos:line="28" pos:column="9"/></name><operator pos:line="28" pos:column="9">-&gt;<pos:position pos:line="28" pos:column="14"/></operator><name pos:line="28" pos:column="11">exec<pos:position pos:line="28" pos:column="15"/></name></name><operator pos:line="28" pos:column="15">++<pos:position pos:line="28" pos:column="17"/></operator></expr>;<pos:position pos:line="28" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></while>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><name><name pos:line="31" pos:column="10">pl<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">exec<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <literal type="char" pos:line="31" pos:column="22">'\0'<pos:position pos:line="31" pos:column="26"/></literal></expr>)<pos:position pos:line="31" pos:column="27"/></condition><then pos:line="31" pos:column="27">
    <block pos:line="32" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">sfree<pos:position pos:line="33" pos:column="12"/></name> <argument_list pos:line="33" pos:column="13">(<argument><expr><name><name pos:line="33" pos:column="14">pl<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">user<pos:position pos:line="33" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="24"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="34" pos:column="7">sfree<pos:position pos:line="34" pos:column="12"/></name> <argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">pl<pos:position pos:line="34" pos:column="16"/></name></expr></argument>)<pos:position pos:line="34" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>
      <return pos:line="35" pos:column="7">return <expr><operator pos:line="35" pos:column="14">(<pos:position pos:line="35" pos:column="15"/></operator><literal type="number" pos:line="35" pos:column="15">1<pos:position pos:line="35" pos:column="16"/></literal><operator pos:line="35" pos:column="16">)<pos:position pos:line="35" pos:column="17"/></operator></expr>;<pos:position pos:line="35" pos:column="18"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">pl<pos:position pos:line="38" pos:column="7"/></name><operator pos:line="38" pos:column="7">-&gt;<pos:position pos:line="38" pos:column="12"/></operator><name pos:line="38" pos:column="9">next<pos:position pos:line="38" pos:column="13"/></name></name> <operator pos:line="38" pos:column="14">=<pos:position pos:line="38" pos:column="15"/></operator> <name pos:line="38" pos:column="16">pl_head<pos:position pos:line="38" pos:column="23"/></name></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">pl_head<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <name pos:line="39" pos:column="15">pl<pos:position pos:line="39" pos:column="17"/></name></expr>;<pos:position pos:line="39" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">pl<pos:position pos:line="41" pos:column="7"/></name><operator pos:line="41" pos:column="7">-&gt;<pos:position pos:line="41" pos:column="12"/></operator><name pos:line="41" pos:column="9">group<pos:position pos:line="41" pos:column="14"/></name></name> <operator pos:line="41" pos:column="15">=<pos:position pos:line="41" pos:column="16"/></operator> <call><name pos:line="41" pos:column="17">strchr<pos:position pos:line="41" pos:column="23"/></name> <argument_list pos:line="41" pos:column="24">(<argument><expr><name><name pos:line="41" pos:column="25">pl<pos:position pos:line="41" pos:column="27"/></name><operator pos:line="41" pos:column="27">-&gt;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="29">user<pos:position pos:line="41" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="41" pos:column="35">':'<pos:position pos:line="41" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">NULL<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">!=<pos:position pos:line="42" pos:column="16"/></operator> <name><name pos:line="42" pos:column="17">pl<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">group<pos:position pos:line="42" pos:column="26"/></name></name></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <block pos:line="42" pos:column="28">{
      <expr_stmt><expr><operator pos:line="43" pos:column="7">*<pos:position pos:line="43" pos:column="8"/></operator><name><name pos:line="43" pos:column="8">pl<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">group<pos:position pos:line="43" pos:column="17"/></name></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <literal type="char" pos:line="43" pos:column="20">'\0'<pos:position pos:line="43" pos:column="24"/></literal></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
      <expr_stmt><expr><name><name pos:line="44" pos:column="7">pl<pos:position pos:line="44" pos:column="9"/></name><operator pos:line="44" pos:column="9">-&gt;<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="11">group<pos:position pos:line="44" pos:column="16"/></name></name><operator pos:line="44" pos:column="16">++<pos:position pos:line="44" pos:column="18"/></operator></expr>;<pos:position pos:line="44" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
  }<pos:position pos:line="46" pos:column="4"/></block></then>
  <else pos:line="47" pos:column="3">else
  <block pos:line="48" pos:column="3">{
    <return pos:line="49" pos:column="5">return <expr><operator pos:line="49" pos:column="12">(<pos:position pos:line="49" pos:column="13"/></operator><operator pos:line="49" pos:column="13">-<pos:position pos:line="49" pos:column="14"/></operator><literal type="number" pos:line="49" pos:column="14">1<pos:position pos:line="49" pos:column="15"/></literal><operator pos:line="49" pos:column="15">)<pos:position pos:line="49" pos:column="16"/></operator></expr>;<pos:position pos:line="49" pos:column="17"/></return>
  }<pos:position pos:line="50" pos:column="4"/></block></else></if>

  <return pos:line="52" pos:column="3">return <expr><operator pos:line="52" pos:column="10">(<pos:position pos:line="52" pos:column="11"/></operator><literal type="number" pos:line="52" pos:column="11">0<pos:position pos:line="52" pos:column="12"/></literal><operator pos:line="52" pos:column="12">)<pos:position pos:line="52" pos:column="13"/></operator></expr>;<pos:position pos:line="52" pos:column="14"/></return>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

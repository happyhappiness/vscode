<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_473_collectd-4.5.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">refresh_lists<pos:position pos:line="2" pos:column="14"/></name> <parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">n<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">n<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">=<pos:position pos:line="6" pos:column="8"/></operator> <call><name pos:line="6" pos:column="9">virConnectNumOfDomains<pos:position pos:line="6" pos:column="31"/></name> <argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">conn<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">n<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">&lt;<pos:position pos:line="7" pos:column="15"/></operator> <literal type="number" pos:line="7" pos:column="13">0<pos:position pos:line="7" pos:column="14"/></literal></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15"> <block pos:line="7" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">VIRT_ERROR<pos:position pos:line="8" pos:column="19"/></name> <argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">conn<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="27">"reading number of domains"<pos:position pos:line="8" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="56"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">-<pos:position pos:line="9" pos:column="17"/></operator><literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">n<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&gt;<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block pos:line="12" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">int<pos:position pos:line="13" pos:column="12"/></name></type> <name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name> <modifier pos:line="14" pos:column="13">*<pos:position pos:line="14" pos:column="14"/></modifier></type><name pos:line="14" pos:column="14">domids<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>

        <comment type="block" pos:line="16" pos:column="9">/* Get list of domains. */</comment>
        <expr_stmt><expr><name pos:line="17" pos:column="9">domids<pos:position pos:line="17" pos:column="15"/></name> <operator pos:line="17" pos:column="16">=<pos:position pos:line="17" pos:column="17"/></operator> <call><name pos:line="17" pos:column="18">malloc<pos:position pos:line="17" pos:column="24"/></name> <argument_list pos:line="17" pos:column="25">(<argument><expr><sizeof pos:line="17" pos:column="26">sizeof <argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">int<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></sizeof> <operator pos:line="17" pos:column="39">*<pos:position pos:line="17" pos:column="40"/></operator> <name pos:line="17" pos:column="41">n<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">domids<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">ERROR<pos:position pos:line="19" pos:column="18"/></name> <argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="string" pos:line="19" pos:column="20">"libvirt plugin: malloc failed."<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
            <return pos:line="20" pos:column="13">return <expr><operator pos:line="20" pos:column="20">-<pos:position pos:line="20" pos:column="21"/></operator><literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal></expr>;<pos:position pos:line="20" pos:column="23"/></return>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="23" pos:column="9">n<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">=<pos:position pos:line="23" pos:column="12"/></operator> <call><name pos:line="23" pos:column="13">virConnectListDomains<pos:position pos:line="23" pos:column="34"/></name> <argument_list pos:line="23" pos:column="35">(<argument><expr><name pos:line="23" pos:column="36">conn<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">domids<pos:position pos:line="23" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="50">n<pos:position pos:line="23" pos:column="51"/></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">n<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">&lt;<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="17">0<pos:position pos:line="24" pos:column="18"/></literal></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">VIRT_ERROR<pos:position pos:line="25" pos:column="23"/></name> <argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">conn<pos:position pos:line="25" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="31">"reading list of domains"<pos:position pos:line="25" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">free<pos:position pos:line="26" pos:column="17"/></name> <argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">domids<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>
            <return pos:line="27" pos:column="13">return <expr><operator pos:line="27" pos:column="20">-<pos:position pos:line="27" pos:column="21"/></operator><literal type="number" pos:line="27" pos:column="21">1<pos:position pos:line="27" pos:column="22"/></literal></expr>;<pos:position pos:line="27" pos:column="23"/></return>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">free_block_devices<pos:position pos:line="30" pos:column="27"/></name> <argument_list pos:line="30" pos:column="28">()<pos:position pos:line="30" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">free_interface_devices<pos:position pos:line="31" pos:column="31"/></name> <argument_list pos:line="31" pos:column="32">()<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">free_domains<pos:position pos:line="32" pos:column="21"/></name> <argument_list pos:line="32" pos:column="22">()<pos:position pos:line="32" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="25"/></expr_stmt>

        <comment type="block" pos:line="34" pos:column="9">/* Fetch each domain and add it to the list, unless ignore. */</comment>
        <for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">i<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <literal type="number" pos:line="35" pos:column="18">0<pos:position pos:line="35" pos:column="19"/></literal></expr>;<pos:position pos:line="35" pos:column="20"/></init> <condition><expr><name pos:line="35" pos:column="21">i<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&lt;<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="25">n<pos:position pos:line="35" pos:column="26"/></name></expr>;<pos:position pos:line="35" pos:column="27"/></condition> <incr><expr><operator pos:line="35" pos:column="28">++<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">i<pos:position pos:line="35" pos:column="31"/></name></expr></incr>)<pos:position pos:line="35" pos:column="32"/></control> <block pos:line="35" pos:column="33">{
            <decl_stmt><decl><type><name pos:line="36" pos:column="13">virDomainPtr<pos:position pos:line="36" pos:column="25"/></name></type> <name pos:line="36" pos:column="26">dom<pos:position pos:line="36" pos:column="29"/></name> <init pos:line="36" pos:column="30">= <expr><name pos:line="36" pos:column="32">NULL<pos:position pos:line="36" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="37"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="37" pos:column="13">const<pos:position pos:line="37" pos:column="18"/></specifier> <name pos:line="37" pos:column="19">char<pos:position pos:line="37" pos:column="23"/></name> <modifier pos:line="37" pos:column="24">*<pos:position pos:line="37" pos:column="25"/></modifier></type><name pos:line="37" pos:column="25">name<pos:position pos:line="37" pos:column="29"/></name></decl>;<pos:position pos:line="37" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="38" pos:column="13">char<pos:position pos:line="38" pos:column="17"/></name> <modifier pos:line="38" pos:column="18">*<pos:position pos:line="38" pos:column="19"/></modifier></type><name pos:line="38" pos:column="19">xml<pos:position pos:line="38" pos:column="22"/></name> <init pos:line="38" pos:column="23">= <expr><name pos:line="38" pos:column="25">NULL<pos:position pos:line="38" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="38" pos:column="30"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="39" pos:column="13">xmlDocPtr<pos:position pos:line="39" pos:column="22"/></name></type> <name pos:line="39" pos:column="23">xml_doc<pos:position pos:line="39" pos:column="30"/></name> <init pos:line="39" pos:column="31">= <expr><name pos:line="39" pos:column="33">NULL<pos:position pos:line="39" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="39" pos:column="38"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="40" pos:column="13">xmlXPathContextPtr<pos:position pos:line="40" pos:column="31"/></name></type> <name pos:line="40" pos:column="32">xpath_ctx<pos:position pos:line="40" pos:column="41"/></name> <init pos:line="40" pos:column="42">= <expr><name pos:line="40" pos:column="44">NULL<pos:position pos:line="40" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="40" pos:column="49"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="41" pos:column="13">xmlXPathObjectPtr<pos:position pos:line="41" pos:column="30"/></name></type> <name pos:line="41" pos:column="31">xpath_obj<pos:position pos:line="41" pos:column="40"/></name> <init pos:line="41" pos:column="41">= <expr><name pos:line="41" pos:column="43">NULL<pos:position pos:line="41" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="41" pos:column="48"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="42" pos:column="13">int<pos:position pos:line="42" pos:column="16"/></name></type> <name pos:line="42" pos:column="17">j<pos:position pos:line="42" pos:column="18"/></name></decl>;<pos:position pos:line="42" pos:column="19"/></decl_stmt>

            <expr_stmt><expr><name pos:line="44" pos:column="13">dom<pos:position pos:line="44" pos:column="16"/></name> <operator pos:line="44" pos:column="17">=<pos:position pos:line="44" pos:column="18"/></operator> <call><name pos:line="44" pos:column="19">virDomainLookupByID<pos:position pos:line="44" pos:column="38"/></name> <argument_list pos:line="44" pos:column="39">(<argument><expr><name pos:line="44" pos:column="40">conn<pos:position pos:line="44" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="46">domids<pos:position pos:line="44" pos:column="52"/></name><index pos:line="44" pos:column="52">[<expr><name pos:line="44" pos:column="53">i<pos:position pos:line="44" pos:column="54"/></name></expr>]<pos:position pos:line="44" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">dom<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">==<pos:position pos:line="45" pos:column="23"/></operator> <name pos:line="45" pos:column="24">NULL<pos:position pos:line="45" pos:column="28"/></name></expr>)<pos:position pos:line="45" pos:column="29"/></condition><then pos:line="45" pos:column="29"> <block pos:line="45" pos:column="30">{
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">VIRT_ERROR<pos:position pos:line="46" pos:column="27"/></name> <argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">conn<pos:position pos:line="46" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="35">"virDomainLookupByID"<pos:position pos:line="46" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="58"/></expr_stmt>
                <comment type="block" pos:line="47" pos:column="17">/* Could be that the domain went away -- ignore it anyway. */</comment>
                <continue pos:line="48" pos:column="17">continue;<pos:position pos:line="48" pos:column="26"/></continue>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="51" pos:column="13">name<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <call><name pos:line="51" pos:column="20">virDomainGetName<pos:position pos:line="51" pos:column="36"/></name> <argument_list pos:line="51" pos:column="37">(<argument><expr><name pos:line="51" pos:column="38">dom<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><name pos:line="52" pos:column="17">name<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">==<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="25">NULL<pos:position pos:line="52" pos:column="29"/></name></expr>)<pos:position pos:line="52" pos:column="30"/></condition><then pos:line="52" pos:column="30"> <block pos:line="52" pos:column="31">{
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">VIRT_ERROR<pos:position pos:line="53" pos:column="27"/></name> <argument_list pos:line="53" pos:column="28">(<argument><expr><name pos:line="53" pos:column="29">conn<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="35">"virDomainGetName"<pos:position pos:line="53" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="55"/></expr_stmt>
                <goto pos:line="54" pos:column="17">goto <name pos:line="54" pos:column="22">cont<pos:position pos:line="54" pos:column="26"/></name>;<pos:position pos:line="54" pos:column="27"/></goto>
            }<pos:position pos:line="55" pos:column="14"/></block></then></if>

            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><name pos:line="57" pos:column="17">il_domains<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">&amp;&amp;<pos:position pos:line="57" pos:column="38"/></operator> <call><name pos:line="57" pos:column="31">ignorelist_match<pos:position pos:line="57" pos:column="47"/></name> <argument_list pos:line="57" pos:column="48">(<argument><expr><name pos:line="57" pos:column="49">il_domains<pos:position pos:line="57" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="61">name<pos:position pos:line="57" pos:column="65"/></name></expr></argument>)<pos:position pos:line="57" pos:column="66"/></argument_list></call> <operator pos:line="57" pos:column="67">!=<pos:position pos:line="57" pos:column="69"/></operator> <literal type="number" pos:line="57" pos:column="70">0<pos:position pos:line="57" pos:column="71"/></literal></expr>)<pos:position pos:line="57" pos:column="72"/></condition><then pos:line="57" pos:column="72">
                <block type="pseudo"><goto pos:line="58" pos:column="17">goto <name pos:line="58" pos:column="22">cont<pos:position pos:line="58" pos:column="26"/></name>;<pos:position pos:line="58" pos:column="27"/></goto></block></then></if>

            <if pos:line="60" pos:column="13">if <condition pos:line="60" pos:column="16">(<expr><call><name pos:line="60" pos:column="17">add_domain<pos:position pos:line="60" pos:column="27"/></name> <argument_list pos:line="60" pos:column="28">(<argument><expr><name pos:line="60" pos:column="29">dom<pos:position pos:line="60" pos:column="32"/></name></expr></argument>)<pos:position pos:line="60" pos:column="33"/></argument_list></call> <operator pos:line="60" pos:column="34">&lt;<pos:position pos:line="60" pos:column="38"/></operator> <literal type="number" pos:line="60" pos:column="36">0<pos:position pos:line="60" pos:column="37"/></literal></expr>)<pos:position pos:line="60" pos:column="38"/></condition><then pos:line="60" pos:column="38"> <block pos:line="60" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">ERROR<pos:position pos:line="61" pos:column="22"/></name> <argument_list pos:line="61" pos:column="23">(<argument><expr><literal type="string" pos:line="61" pos:column="24">"libvirt plugin: malloc failed."<pos:position pos:line="61" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="58"/></expr_stmt>
                <goto pos:line="62" pos:column="17">goto <name pos:line="62" pos:column="22">cont<pos:position pos:line="62" pos:column="26"/></name>;<pos:position pos:line="62" pos:column="27"/></goto>
            }<pos:position pos:line="63" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="65" pos:column="13">/* Get a list of devices for this domain. */</comment>
            <expr_stmt><expr><name pos:line="66" pos:column="13">xml<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">=<pos:position pos:line="66" pos:column="18"/></operator> <call><name pos:line="66" pos:column="19">virDomainGetXMLDesc<pos:position pos:line="66" pos:column="38"/></name> <argument_list pos:line="66" pos:column="39">(<argument><expr><name pos:line="66" pos:column="40">dom<pos:position pos:line="66" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="45">0<pos:position pos:line="66" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="48"/></expr_stmt>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">(<expr><operator pos:line="67" pos:column="17">!<pos:position pos:line="67" pos:column="18"/></operator><name pos:line="67" pos:column="18">xml<pos:position pos:line="67" pos:column="21"/></name></expr>)<pos:position pos:line="67" pos:column="22"/></condition><then pos:line="67" pos:column="22"> <block pos:line="67" pos:column="23">{
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">VIRT_ERROR<pos:position pos:line="68" pos:column="27"/></name> <argument_list pos:line="68" pos:column="28">(<argument><expr><name pos:line="68" pos:column="29">conn<pos:position pos:line="68" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="35">"virDomainGetXMLDesc"<pos:position pos:line="68" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="58"/></expr_stmt>
                <goto pos:line="69" pos:column="17">goto <name pos:line="69" pos:column="22">cont<pos:position pos:line="69" pos:column="26"/></name>;<pos:position pos:line="69" pos:column="27"/></goto>
            }<pos:position pos:line="70" pos:column="14"/></block></then></if>

            <comment type="block" pos:line="72" pos:column="13">/* Yuck, XML.  Parse out the devices. */</comment>
            <expr_stmt><expr><name pos:line="73" pos:column="13">xml_doc<pos:position pos:line="73" pos:column="20"/></name> <operator pos:line="73" pos:column="21">=<pos:position pos:line="73" pos:column="22"/></operator> <call><name pos:line="73" pos:column="23">xmlReadDoc<pos:position pos:line="73" pos:column="33"/></name> <argument_list pos:line="73" pos:column="34">(<argument><expr><operator pos:line="73" pos:column="35">(<pos:position pos:line="73" pos:column="36"/></operator><name pos:line="73" pos:column="36">xmlChar<pos:position pos:line="73" pos:column="43"/></name> <operator pos:line="73" pos:column="44">*<pos:position pos:line="73" pos:column="45"/></operator><operator pos:line="73" pos:column="45">)<pos:position pos:line="73" pos:column="46"/></operator> <name pos:line="73" pos:column="47">xml<pos:position pos:line="73" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="52">NULL<pos:position pos:line="73" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="58">NULL<pos:position pos:line="73" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="64">XML_PARSE_NONET<pos:position pos:line="73" pos:column="79"/></name></expr></argument>)<pos:position pos:line="73" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="81"/></expr_stmt>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name pos:line="74" pos:column="17">xml_doc<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">==<pos:position pos:line="74" pos:column="27"/></operator> <name pos:line="74" pos:column="28">NULL<pos:position pos:line="74" pos:column="32"/></name></expr>)<pos:position pos:line="74" pos:column="33"/></condition><then pos:line="74" pos:column="33"> <block pos:line="74" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">VIRT_ERROR<pos:position pos:line="75" pos:column="27"/></name> <argument_list pos:line="75" pos:column="28">(<argument><expr><name pos:line="75" pos:column="29">conn<pos:position pos:line="75" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="35">"xmlReadDoc"<pos:position pos:line="75" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="49"/></expr_stmt>
                <goto pos:line="76" pos:column="17">goto <name pos:line="76" pos:column="22">cont<pos:position pos:line="76" pos:column="26"/></name>;<pos:position pos:line="76" pos:column="27"/></goto>
            }<pos:position pos:line="77" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name pos:line="79" pos:column="13">xpath_ctx<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">=<pos:position pos:line="79" pos:column="24"/></operator> <call><name pos:line="79" pos:column="25">xmlXPathNewContext<pos:position pos:line="79" pos:column="43"/></name> <argument_list pos:line="79" pos:column="44">(<argument><expr><name pos:line="79" pos:column="45">xml_doc<pos:position pos:line="79" pos:column="52"/></name></expr></argument>)<pos:position pos:line="79" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="54"/></expr_stmt>

            <comment type="block" pos:line="81" pos:column="13">/* Block devices. */</comment>
            <expr_stmt><expr><name pos:line="82" pos:column="13">xpath_obj<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">=<pos:position pos:line="82" pos:column="24"/></operator> <call><name pos:line="82" pos:column="25">xmlXPathEval<pos:position pos:line="82" pos:column="37"/></name>
                <argument_list pos:line="83" pos:column="17">(<argument><expr><operator pos:line="83" pos:column="18">(<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="19">xmlChar<pos:position pos:line="83" pos:column="26"/></name> <operator pos:line="83" pos:column="27">*<pos:position pos:line="83" pos:column="28"/></operator><operator pos:line="83" pos:column="28">)<pos:position pos:line="83" pos:column="29"/></operator> <literal type="string" pos:line="83" pos:column="30">"/domain/devices/disk/target[@dev]"<pos:position pos:line="83" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><name pos:line="84" pos:column="18">xpath_ctx<pos:position pos:line="84" pos:column="27"/></name></expr></argument>)<pos:position pos:line="84" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
            <if pos:line="85" pos:column="13">if <condition pos:line="85" pos:column="16">(<expr><name pos:line="85" pos:column="17">xpath_obj<pos:position pos:line="85" pos:column="26"/></name> <operator pos:line="85" pos:column="27">==<pos:position pos:line="85" pos:column="29"/></operator> <name pos:line="85" pos:column="30">NULL<pos:position pos:line="85" pos:column="34"/></name> <operator pos:line="85" pos:column="35">||<pos:position pos:line="85" pos:column="37"/></operator> <name><name pos:line="85" pos:column="38">xpath_obj<pos:position pos:line="85" pos:column="47"/></name><operator pos:line="85" pos:column="47">-&gt;<pos:position pos:line="85" pos:column="52"/></operator><name pos:line="85" pos:column="49">type<pos:position pos:line="85" pos:column="53"/></name></name> <operator pos:line="85" pos:column="54">!=<pos:position pos:line="85" pos:column="56"/></operator> <name pos:line="85" pos:column="57">XPATH_NODESET<pos:position pos:line="85" pos:column="70"/></name> <operator pos:line="85" pos:column="71">||<pos:position pos:line="85" pos:column="73"/></operator>
                <name><name pos:line="86" pos:column="17">xpath_obj<pos:position pos:line="86" pos:column="26"/></name><operator pos:line="86" pos:column="26">-&gt;<pos:position pos:line="86" pos:column="31"/></operator><name pos:line="86" pos:column="28">nodesetval<pos:position pos:line="86" pos:column="38"/></name></name> <operator pos:line="86" pos:column="39">==<pos:position pos:line="86" pos:column="41"/></operator> <name pos:line="86" pos:column="42">NULL<pos:position pos:line="86" pos:column="46"/></name></expr>)<pos:position pos:line="86" pos:column="47"/></condition><then pos:line="86" pos:column="47">
                <block type="pseudo"><goto pos:line="87" pos:column="17">goto <name pos:line="87" pos:column="22">cont<pos:position pos:line="87" pos:column="26"/></name>;<pos:position pos:line="87" pos:column="27"/></goto></block></then></if>

            <for pos:line="89" pos:column="13">for <control pos:line="89" pos:column="17">(<init><expr><name pos:line="89" pos:column="18">j<pos:position pos:line="89" pos:column="19"/></name> <operator pos:line="89" pos:column="20">=<pos:position pos:line="89" pos:column="21"/></operator> <literal type="number" pos:line="89" pos:column="22">0<pos:position pos:line="89" pos:column="23"/></literal></expr>;<pos:position pos:line="89" pos:column="24"/></init> <condition><expr><name pos:line="89" pos:column="25">j<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">&lt;<pos:position pos:line="89" pos:column="31"/></operator> <name><name pos:line="89" pos:column="29">xpath_obj<pos:position pos:line="89" pos:column="38"/></name><operator pos:line="89" pos:column="38">-&gt;<pos:position pos:line="89" pos:column="43"/></operator><name pos:line="89" pos:column="40">nodesetval<pos:position pos:line="89" pos:column="50"/></name><operator pos:line="89" pos:column="50">-&gt;<pos:position pos:line="89" pos:column="55"/></operator><name pos:line="89" pos:column="52">nodeNr<pos:position pos:line="89" pos:column="58"/></name></name></expr>;<pos:position pos:line="89" pos:column="59"/></condition> <incr><expr><operator pos:line="89" pos:column="60">++<pos:position pos:line="89" pos:column="62"/></operator><name pos:line="89" pos:column="62">j<pos:position pos:line="89" pos:column="63"/></name></expr></incr>)<pos:position pos:line="89" pos:column="64"/></control> <block pos:line="89" pos:column="65">{
                <decl_stmt><decl><type><name pos:line="90" pos:column="17">xmlNodePtr<pos:position pos:line="90" pos:column="27"/></name></type> <name pos:line="90" pos:column="28">node<pos:position pos:line="90" pos:column="32"/></name></decl>;<pos:position pos:line="90" pos:column="33"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="91" pos:column="17">char<pos:position pos:line="91" pos:column="21"/></name> <modifier pos:line="91" pos:column="22">*<pos:position pos:line="91" pos:column="23"/></modifier></type><name pos:line="91" pos:column="23">path<pos:position pos:line="91" pos:column="27"/></name> <init pos:line="91" pos:column="28">= <expr><name pos:line="91" pos:column="30">NULL<pos:position pos:line="91" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="91" pos:column="35"/></decl_stmt>

                <expr_stmt><expr><name pos:line="93" pos:column="17">node<pos:position pos:line="93" pos:column="21"/></name> <operator pos:line="93" pos:column="22">=<pos:position pos:line="93" pos:column="23"/></operator> <name><name pos:line="93" pos:column="24">xpath_obj<pos:position pos:line="93" pos:column="33"/></name><operator pos:line="93" pos:column="33">-&gt;<pos:position pos:line="93" pos:column="38"/></operator><name pos:line="93" pos:column="35">nodesetval<pos:position pos:line="93" pos:column="45"/></name><operator pos:line="93" pos:column="45">-&gt;<pos:position pos:line="93" pos:column="50"/></operator><name pos:line="93" pos:column="47">nodeTab<pos:position pos:line="93" pos:column="54"/></name><index pos:line="93" pos:column="54">[<expr><name pos:line="93" pos:column="55">j<pos:position pos:line="93" pos:column="56"/></name></expr>]<pos:position pos:line="93" pos:column="57"/></index></name></expr>;<pos:position pos:line="93" pos:column="58"/></expr_stmt>
                <if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><operator pos:line="94" pos:column="21">!<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="22">node<pos:position pos:line="94" pos:column="26"/></name></expr>)<pos:position pos:line="94" pos:column="27"/></condition><then pos:line="94" pos:column="27"> <block type="pseudo"><continue pos:line="94" pos:column="28">continue;<pos:position pos:line="94" pos:column="37"/></continue></block></then></if>
                <expr_stmt><expr><name pos:line="95" pos:column="17">path<pos:position pos:line="95" pos:column="21"/></name> <operator pos:line="95" pos:column="22">=<pos:position pos:line="95" pos:column="23"/></operator> <operator pos:line="95" pos:column="24">(<pos:position pos:line="95" pos:column="25"/></operator><name pos:line="95" pos:column="25">char<pos:position pos:line="95" pos:column="29"/></name> <operator pos:line="95" pos:column="30">*<pos:position pos:line="95" pos:column="31"/></operator><operator pos:line="95" pos:column="31">)<pos:position pos:line="95" pos:column="32"/></operator> <call><name pos:line="95" pos:column="33">xmlGetProp<pos:position pos:line="95" pos:column="43"/></name> <argument_list pos:line="95" pos:column="44">(<argument><expr><name pos:line="95" pos:column="45">node<pos:position pos:line="95" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="51">(<pos:position pos:line="95" pos:column="52"/></operator><name pos:line="95" pos:column="52">xmlChar<pos:position pos:line="95" pos:column="59"/></name> <operator pos:line="95" pos:column="60">*<pos:position pos:line="95" pos:column="61"/></operator><operator pos:line="95" pos:column="61">)<pos:position pos:line="95" pos:column="62"/></operator> <literal type="string" pos:line="95" pos:column="63">"dev"<pos:position pos:line="95" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="70"/></expr_stmt>
                <if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><operator pos:line="96" pos:column="21">!<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="22">path<pos:position pos:line="96" pos:column="26"/></name></expr>)<pos:position pos:line="96" pos:column="27"/></condition><then pos:line="96" pos:column="27"> <block type="pseudo"><continue pos:line="96" pos:column="28">continue;<pos:position pos:line="96" pos:column="37"/></continue></block></then></if>

                <if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">il_block_devices<pos:position pos:line="98" pos:column="37"/></name> <operator pos:line="98" pos:column="38">&amp;&amp;<pos:position pos:line="98" pos:column="48"/></operator>
                    <call><name pos:line="99" pos:column="21">ignore_device_match<pos:position pos:line="99" pos:column="40"/></name> <argument_list pos:line="99" pos:column="41">(<argument><expr><name pos:line="99" pos:column="42">il_block_devices<pos:position pos:line="99" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="60">name<pos:position pos:line="99" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="66">path<pos:position pos:line="99" pos:column="70"/></name></expr></argument>)<pos:position pos:line="99" pos:column="71"/></argument_list></call> <operator pos:line="99" pos:column="72">!=<pos:position pos:line="99" pos:column="74"/></operator> <literal type="number" pos:line="99" pos:column="75">0<pos:position pos:line="99" pos:column="76"/></literal></expr>)<pos:position pos:line="99" pos:column="77"/></condition><then pos:line="99" pos:column="77">
                    <block type="pseudo"><goto pos:line="100" pos:column="21">goto <name pos:line="100" pos:column="26">cont2<pos:position pos:line="100" pos:column="31"/></name>;<pos:position pos:line="100" pos:column="32"/></goto></block></then></if>

                <expr_stmt><expr><call><name pos:line="102" pos:column="17">add_block_device<pos:position pos:line="102" pos:column="33"/></name> <argument_list pos:line="102" pos:column="34">(<argument><expr><name pos:line="102" pos:column="35">dom<pos:position pos:line="102" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="40">path<pos:position pos:line="102" pos:column="44"/></name></expr></argument>)<pos:position pos:line="102" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="46"/></expr_stmt>
            <label><name pos:line="103" pos:column="13">cont2<pos:position pos:line="103" pos:column="18"/></name>:<pos:position pos:line="103" pos:column="19"/></label>
                <if pos:line="104" pos:column="17">if <condition pos:line="104" pos:column="20">(<expr><name pos:line="104" pos:column="21">path<pos:position pos:line="104" pos:column="25"/></name></expr>)<pos:position pos:line="104" pos:column="26"/></condition><then pos:line="104" pos:column="26"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="104" pos:column="27">xmlFree<pos:position pos:line="104" pos:column="34"/></name> <argument_list pos:line="104" pos:column="35">(<argument><expr><name pos:line="104" pos:column="36">path<pos:position pos:line="104" pos:column="40"/></name></expr></argument>)<pos:position pos:line="104" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="42"/></expr_stmt></block></then></if>
            }<pos:position pos:line="105" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="106" pos:column="13">xmlXPathFreeObject<pos:position pos:line="106" pos:column="31"/></name> <argument_list pos:line="106" pos:column="32">(<argument><expr><name pos:line="106" pos:column="33">xpath_obj<pos:position pos:line="106" pos:column="42"/></name></expr></argument>)<pos:position pos:line="106" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="44"/></expr_stmt>

            <comment type="block" pos:line="108" pos:column="13">/* Network interfaces. */</comment>
            <expr_stmt><expr><name pos:line="109" pos:column="13">xpath_obj<pos:position pos:line="109" pos:column="22"/></name> <operator pos:line="109" pos:column="23">=<pos:position pos:line="109" pos:column="24"/></operator> <call><name pos:line="109" pos:column="25">xmlXPathEval<pos:position pos:line="109" pos:column="37"/></name>
                <argument_list pos:line="110" pos:column="17">(<argument><expr><operator pos:line="110" pos:column="18">(<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="19">xmlChar<pos:position pos:line="110" pos:column="26"/></name> <operator pos:line="110" pos:column="27">*<pos:position pos:line="110" pos:column="28"/></operator><operator pos:line="110" pos:column="28">)<pos:position pos:line="110" pos:column="29"/></operator> <literal type="string" pos:line="110" pos:column="30">"/domain/devices/interface/target[@dev]"<pos:position pos:line="110" pos:column="70"/></literal></expr></argument>,
                 <argument><expr><name pos:line="111" pos:column="18">xpath_ctx<pos:position pos:line="111" pos:column="27"/></name></expr></argument>)<pos:position pos:line="111" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="29"/></expr_stmt>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><name pos:line="112" pos:column="17">xpath_obj<pos:position pos:line="112" pos:column="26"/></name> <operator pos:line="112" pos:column="27">==<pos:position pos:line="112" pos:column="29"/></operator> <name pos:line="112" pos:column="30">NULL<pos:position pos:line="112" pos:column="34"/></name> <operator pos:line="112" pos:column="35">||<pos:position pos:line="112" pos:column="37"/></operator> <name><name pos:line="112" pos:column="38">xpath_obj<pos:position pos:line="112" pos:column="47"/></name><operator pos:line="112" pos:column="47">-&gt;<pos:position pos:line="112" pos:column="52"/></operator><name pos:line="112" pos:column="49">type<pos:position pos:line="112" pos:column="53"/></name></name> <operator pos:line="112" pos:column="54">!=<pos:position pos:line="112" pos:column="56"/></operator> <name pos:line="112" pos:column="57">XPATH_NODESET<pos:position pos:line="112" pos:column="70"/></name> <operator pos:line="112" pos:column="71">||<pos:position pos:line="112" pos:column="73"/></operator>
                <name><name pos:line="113" pos:column="17">xpath_obj<pos:position pos:line="113" pos:column="26"/></name><operator pos:line="113" pos:column="26">-&gt;<pos:position pos:line="113" pos:column="31"/></operator><name pos:line="113" pos:column="28">nodesetval<pos:position pos:line="113" pos:column="38"/></name></name> <operator pos:line="113" pos:column="39">==<pos:position pos:line="113" pos:column="41"/></operator> <name pos:line="113" pos:column="42">NULL<pos:position pos:line="113" pos:column="46"/></name></expr>)<pos:position pos:line="113" pos:column="47"/></condition><then pos:line="113" pos:column="47">
                <block type="pseudo"><goto pos:line="114" pos:column="17">goto <name pos:line="114" pos:column="22">cont<pos:position pos:line="114" pos:column="26"/></name>;<pos:position pos:line="114" pos:column="27"/></goto></block></then></if>

            <for pos:line="116" pos:column="13">for <control pos:line="116" pos:column="17">(<init><expr><name pos:line="116" pos:column="18">j<pos:position pos:line="116" pos:column="19"/></name> <operator pos:line="116" pos:column="20">=<pos:position pos:line="116" pos:column="21"/></operator> <literal type="number" pos:line="116" pos:column="22">0<pos:position pos:line="116" pos:column="23"/></literal></expr>;<pos:position pos:line="116" pos:column="24"/></init> <condition><expr><name pos:line="116" pos:column="25">j<pos:position pos:line="116" pos:column="26"/></name> <operator pos:line="116" pos:column="27">&lt;<pos:position pos:line="116" pos:column="31"/></operator> <name><name pos:line="116" pos:column="29">xpath_obj<pos:position pos:line="116" pos:column="38"/></name><operator pos:line="116" pos:column="38">-&gt;<pos:position pos:line="116" pos:column="43"/></operator><name pos:line="116" pos:column="40">nodesetval<pos:position pos:line="116" pos:column="50"/></name><operator pos:line="116" pos:column="50">-&gt;<pos:position pos:line="116" pos:column="55"/></operator><name pos:line="116" pos:column="52">nodeNr<pos:position pos:line="116" pos:column="58"/></name></name></expr>;<pos:position pos:line="116" pos:column="59"/></condition> <incr><expr><operator pos:line="116" pos:column="60">++<pos:position pos:line="116" pos:column="62"/></operator><name pos:line="116" pos:column="62">j<pos:position pos:line="116" pos:column="63"/></name></expr></incr>)<pos:position pos:line="116" pos:column="64"/></control> <block pos:line="116" pos:column="65">{
                <decl_stmt><decl><type><name pos:line="117" pos:column="17">xmlNodePtr<pos:position pos:line="117" pos:column="27"/></name></type> <name pos:line="117" pos:column="28">node<pos:position pos:line="117" pos:column="32"/></name></decl>;<pos:position pos:line="117" pos:column="33"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="118" pos:column="17">char<pos:position pos:line="118" pos:column="21"/></name> <modifier pos:line="118" pos:column="22">*<pos:position pos:line="118" pos:column="23"/></modifier></type><name pos:line="118" pos:column="23">path<pos:position pos:line="118" pos:column="27"/></name> <init pos:line="118" pos:column="28">= <expr><name pos:line="118" pos:column="30">NULL<pos:position pos:line="118" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="118" pos:column="35"/></decl_stmt>

                <expr_stmt><expr><name pos:line="120" pos:column="17">node<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <name><name pos:line="120" pos:column="24">xpath_obj<pos:position pos:line="120" pos:column="33"/></name><operator pos:line="120" pos:column="33">-&gt;<pos:position pos:line="120" pos:column="38"/></operator><name pos:line="120" pos:column="35">nodesetval<pos:position pos:line="120" pos:column="45"/></name><operator pos:line="120" pos:column="45">-&gt;<pos:position pos:line="120" pos:column="50"/></operator><name pos:line="120" pos:column="47">nodeTab<pos:position pos:line="120" pos:column="54"/></name><index pos:line="120" pos:column="54">[<expr><name pos:line="120" pos:column="55">j<pos:position pos:line="120" pos:column="56"/></name></expr>]<pos:position pos:line="120" pos:column="57"/></index></name></expr>;<pos:position pos:line="120" pos:column="58"/></expr_stmt>
                <if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><operator pos:line="121" pos:column="21">!<pos:position pos:line="121" pos:column="22"/></operator><name pos:line="121" pos:column="22">node<pos:position pos:line="121" pos:column="26"/></name></expr>)<pos:position pos:line="121" pos:column="27"/></condition><then pos:line="121" pos:column="27"> <block type="pseudo"><continue pos:line="121" pos:column="28">continue;<pos:position pos:line="121" pos:column="37"/></continue></block></then></if>
                <expr_stmt><expr><name pos:line="122" pos:column="17">path<pos:position pos:line="122" pos:column="21"/></name> <operator pos:line="122" pos:column="22">=<pos:position pos:line="122" pos:column="23"/></operator> <operator pos:line="122" pos:column="24">(<pos:position pos:line="122" pos:column="25"/></operator><name pos:line="122" pos:column="25">char<pos:position pos:line="122" pos:column="29"/></name> <operator pos:line="122" pos:column="30">*<pos:position pos:line="122" pos:column="31"/></operator><operator pos:line="122" pos:column="31">)<pos:position pos:line="122" pos:column="32"/></operator> <call><name pos:line="122" pos:column="33">xmlGetProp<pos:position pos:line="122" pos:column="43"/></name> <argument_list pos:line="122" pos:column="44">(<argument><expr><name pos:line="122" pos:column="45">node<pos:position pos:line="122" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="51">(<pos:position pos:line="122" pos:column="52"/></operator><name pos:line="122" pos:column="52">xmlChar<pos:position pos:line="122" pos:column="59"/></name> <operator pos:line="122" pos:column="60">*<pos:position pos:line="122" pos:column="61"/></operator><operator pos:line="122" pos:column="61">)<pos:position pos:line="122" pos:column="62"/></operator> <literal type="string" pos:line="122" pos:column="63">"dev"<pos:position pos:line="122" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="70"/></expr_stmt>
                <if pos:line="123" pos:column="17">if <condition pos:line="123" pos:column="20">(<expr><operator pos:line="123" pos:column="21">!<pos:position pos:line="123" pos:column="22"/></operator><name pos:line="123" pos:column="22">path<pos:position pos:line="123" pos:column="26"/></name></expr>)<pos:position pos:line="123" pos:column="27"/></condition><then pos:line="123" pos:column="27"> <block type="pseudo"><continue pos:line="123" pos:column="28">continue;<pos:position pos:line="123" pos:column="37"/></continue></block></then></if>

                <if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><name pos:line="125" pos:column="21">il_interface_devices<pos:position pos:line="125" pos:column="41"/></name> <operator pos:line="125" pos:column="42">&amp;&amp;<pos:position pos:line="125" pos:column="52"/></operator>
                    <call><name pos:line="126" pos:column="21">ignore_device_match<pos:position pos:line="126" pos:column="40"/></name> <argument_list pos:line="126" pos:column="41">(<argument><expr><name pos:line="126" pos:column="42">il_interface_devices<pos:position pos:line="126" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="64">name<pos:position pos:line="126" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="70">path<pos:position pos:line="126" pos:column="74"/></name></expr></argument>)<pos:position pos:line="126" pos:column="75"/></argument_list></call> <operator pos:line="126" pos:column="76">!=<pos:position pos:line="126" pos:column="78"/></operator> <literal type="number" pos:line="126" pos:column="79">0<pos:position pos:line="126" pos:column="80"/></literal></expr>)<pos:position pos:line="126" pos:column="81"/></condition><then pos:line="126" pos:column="81">
                    <block type="pseudo"><goto pos:line="127" pos:column="21">goto <name pos:line="127" pos:column="26">cont3<pos:position pos:line="127" pos:column="31"/></name>;<pos:position pos:line="127" pos:column="32"/></goto></block></then></if>

                <expr_stmt><expr><call><name pos:line="129" pos:column="17">add_interface_device<pos:position pos:line="129" pos:column="37"/></name> <argument_list pos:line="129" pos:column="38">(<argument><expr><name pos:line="129" pos:column="39">dom<pos:position pos:line="129" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="44">path<pos:position pos:line="129" pos:column="48"/></name></expr></argument>)<pos:position pos:line="129" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="50"/></expr_stmt>
            <label><name pos:line="130" pos:column="13">cont3<pos:position pos:line="130" pos:column="18"/></name>:<pos:position pos:line="130" pos:column="19"/></label>
                <if pos:line="131" pos:column="17">if <condition pos:line="131" pos:column="20">(<expr><name pos:line="131" pos:column="21">path<pos:position pos:line="131" pos:column="25"/></name></expr>)<pos:position pos:line="131" pos:column="26"/></condition><then pos:line="131" pos:column="26"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="27">xmlFree<pos:position pos:line="131" pos:column="34"/></name> <argument_list pos:line="131" pos:column="35">(<argument><expr><name pos:line="131" pos:column="36">path<pos:position pos:line="131" pos:column="40"/></name></expr></argument>)<pos:position pos:line="131" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="42"/></expr_stmt></block></then></if>
            }<pos:position pos:line="132" pos:column="14"/></block></for>

        <label><name pos:line="134" pos:column="9">cont<pos:position pos:line="134" pos:column="13"/></name>:<pos:position pos:line="134" pos:column="14"/></label>
            <if pos:line="135" pos:column="13">if <condition pos:line="135" pos:column="16">(<expr><name pos:line="135" pos:column="17">xpath_obj<pos:position pos:line="135" pos:column="26"/></name></expr>)<pos:position pos:line="135" pos:column="27"/></condition><then pos:line="135" pos:column="27"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="135" pos:column="28">xmlXPathFreeObject<pos:position pos:line="135" pos:column="46"/></name> <argument_list pos:line="135" pos:column="47">(<argument><expr><name pos:line="135" pos:column="48">xpath_obj<pos:position pos:line="135" pos:column="57"/></name></expr></argument>)<pos:position pos:line="135" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="59"/></expr_stmt></block></then></if>
            <if pos:line="136" pos:column="13">if <condition pos:line="136" pos:column="16">(<expr><name pos:line="136" pos:column="17">xpath_ctx<pos:position pos:line="136" pos:column="26"/></name></expr>)<pos:position pos:line="136" pos:column="27"/></condition><then pos:line="136" pos:column="27"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="136" pos:column="28">xmlXPathFreeContext<pos:position pos:line="136" pos:column="47"/></name> <argument_list pos:line="136" pos:column="48">(<argument><expr><name pos:line="136" pos:column="49">xpath_ctx<pos:position pos:line="136" pos:column="58"/></name></expr></argument>)<pos:position pos:line="136" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="60"/></expr_stmt></block></then></if>
            <if pos:line="137" pos:column="13">if <condition pos:line="137" pos:column="16">(<expr><name pos:line="137" pos:column="17">xml_doc<pos:position pos:line="137" pos:column="24"/></name></expr>)<pos:position pos:line="137" pos:column="25"/></condition><then pos:line="137" pos:column="25"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="26">xmlFreeDoc<pos:position pos:line="137" pos:column="36"/></name> <argument_list pos:line="137" pos:column="37">(<argument><expr><name pos:line="137" pos:column="38">xml_doc<pos:position pos:line="137" pos:column="45"/></name></expr></argument>)<pos:position pos:line="137" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="47"/></expr_stmt></block></then></if>
            <if pos:line="138" pos:column="13">if <condition pos:line="138" pos:column="16">(<expr><name pos:line="138" pos:column="17">xml<pos:position pos:line="138" pos:column="20"/></name></expr>)<pos:position pos:line="138" pos:column="21"/></condition><then pos:line="138" pos:column="21"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="22">free<pos:position pos:line="138" pos:column="26"/></name> <argument_list pos:line="138" pos:column="27">(<argument><expr><name pos:line="138" pos:column="28">xml<pos:position pos:line="138" pos:column="31"/></name></expr></argument>)<pos:position pos:line="138" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="33"/></expr_stmt></block></then></if>
        }<pos:position pos:line="139" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name pos:line="141" pos:column="9">free<pos:position pos:line="141" pos:column="13"/></name> <argument_list pos:line="141" pos:column="14">(<argument><expr><name pos:line="141" pos:column="15">domids<pos:position pos:line="141" pos:column="21"/></name></expr></argument>)<pos:position pos:line="141" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="142" pos:column="6"/></block></then></if>

    <return pos:line="144" pos:column="5">return <expr><literal type="number" pos:line="144" pos:column="12">0<pos:position pos:line="144" pos:column="13"/></literal></expr>;<pos:position pos:line="144" pos:column="14"/></return>
}<pos:position pos:line="145" pos:column="2"/></block></function></unit>

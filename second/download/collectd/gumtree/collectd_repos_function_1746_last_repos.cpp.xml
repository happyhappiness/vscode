<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1746_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name pos:line="1" pos:column="14">ovs_event_worker<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name> <modifier pos:line="1" pos:column="36">*<pos:position pos:line="1" pos:column="37"/></modifier></type><name pos:line="1" pos:column="37">arg<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <block pos:line="1" pos:column="42">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">ovs_db_t<pos:position pos:line="2" pos:column="11"/></name> <modifier pos:line="2" pos:column="12">*<pos:position pos:line="2" pos:column="13"/></modifier></type><name pos:line="2" pos:column="13">pdb<pos:position pos:line="2" pos:column="16"/></name> <init pos:line="2" pos:column="17">= <expr><operator pos:line="2" pos:column="19">(<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">ovs_db_t<pos:position pos:line="2" pos:column="28"/></name> <operator pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></operator><operator pos:line="2" pos:column="30">)<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">arg<pos:position pos:line="2" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="35"/></decl_stmt>

  <while pos:line="4" pos:column="3">while <condition pos:line="4" pos:column="9">(<expr><name><name pos:line="4" pos:column="10">pdb<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">event_thread<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">.<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">value<pos:position pos:line="4" pos:column="33"/></name></name> <operator pos:line="4" pos:column="34">!=<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="37">OVS_DB_EVENT_TERMINATE<pos:position pos:line="4" pos:column="59"/></name></expr>)<pos:position pos:line="4" pos:column="60"/></condition> <block pos:line="4" pos:column="61">{
    <comment type="block" pos:line="5" pos:column="5">/* wait for an event */</comment>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">timespec<pos:position pos:line="6" pos:column="20"/></name></name></type> <name pos:line="6" pos:column="21">ts<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">clock_gettime<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">CLOCK_REALTIME<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="35">&amp;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="36">ts<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">ts<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">.<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">tv_sec<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">+=<pos:position pos:line="8" pos:column="17"/></operator> <operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">OVS_DB_EVENT_TIMEOUT<pos:position pos:line="8" pos:column="39"/></name><operator pos:line="8" pos:column="39">)<pos:position pos:line="8" pos:column="40"/></operator></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">ret<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><call><name pos:line="9" pos:column="15">pthread_cond_timedwait<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><operator pos:line="9" pos:column="38">&amp;<pos:position pos:line="9" pos:column="43"/></operator><name><name pos:line="9" pos:column="39">pdb<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">event_thread<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">.<pos:position pos:line="9" pos:column="57"/></operator><name pos:line="9" pos:column="57">cond<pos:position pos:line="9" pos:column="61"/></name></name></expr></argument>,
                                     <argument><expr><operator pos:line="10" pos:column="38">&amp;<pos:position pos:line="10" pos:column="43"/></operator><name><name pos:line="10" pos:column="39">pdb<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">-&gt;<pos:position pos:line="10" pos:column="47"/></operator><name pos:line="10" pos:column="44">event_thread<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">.<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">mutex<pos:position pos:line="10" pos:column="62"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="64">&amp;<pos:position pos:line="10" pos:column="69"/></operator><name pos:line="10" pos:column="65">ts<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="69"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">ret<pos:position pos:line="11" pos:column="13"/></name></expr>)<pos:position pos:line="11" pos:column="14"/></condition><then pos:line="11" pos:column="14"> <block pos:line="11" pos:column="15">{
      <comment type="block" pos:line="12" pos:column="7">/* handle the event */</comment>
      <expr_stmt><expr><call><name pos:line="13" pos:column="7">OVS_DEBUG<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><literal type="string" pos:line="13" pos:column="17">"handle event %d"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="36">pdb<pos:position pos:line="13" pos:column="39"/></name><operator pos:line="13" pos:column="39">-&gt;<pos:position pos:line="13" pos:column="44"/></operator><name pos:line="13" pos:column="41">event_thread<pos:position pos:line="13" pos:column="53"/></name><operator pos:line="13" pos:column="53">.<pos:position pos:line="13" pos:column="54"/></operator><name pos:line="13" pos:column="54">value<pos:position pos:line="13" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="61"/></expr_stmt>
      <switch pos:line="14" pos:column="7">switch <condition pos:line="14" pos:column="14">(<expr><name><name pos:line="14" pos:column="15">pdb<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">event_thread<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">value<pos:position pos:line="14" pos:column="38"/></name></name></expr>)<pos:position pos:line="14" pos:column="39"/></condition> <block pos:line="14" pos:column="40">{
      <case pos:line="15" pos:column="7">case <expr><name pos:line="15" pos:column="12">OVS_DB_EVENT_CONN_ESTABLISHED<pos:position pos:line="15" pos:column="41"/></name></expr>:<pos:position pos:line="15" pos:column="42"/></case>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">pdb<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">cb<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">post_conn_init<pos:position pos:line="16" pos:column="35"/></name></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36">
          <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="11">pdb<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">cb<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">.<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">post_conn_init<pos:position pos:line="17" pos:column="33"/></name></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">pdb<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt></block></then></if>
        <break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break>
      <case pos:line="19" pos:column="7">case <expr><name pos:line="19" pos:column="12">OVS_DB_EVENT_CONN_TERMINATED<pos:position pos:line="19" pos:column="40"/></name></expr>:<pos:position pos:line="19" pos:column="41"/></case>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">pdb<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">cb<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">.<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">post_conn_terminate<pos:position pos:line="20" pos:column="40"/></name></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41">
          <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="21" pos:column="11">pdb<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">cb<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">post_conn_terminate<pos:position pos:line="21" pos:column="38"/></name></name><argument_list pos:line="21" pos:column="38">()<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt></block></then></if>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>
      <default pos:line="23" pos:column="7">default:<pos:position pos:line="23" pos:column="15"/></default>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">OVS_DEBUG<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><literal type="string" pos:line="24" pos:column="19">"unknown event received"<pos:position pos:line="24" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="45"/></expr_stmt>
        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>
      }<pos:position pos:line="26" pos:column="8"/></block></switch>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <elseif pos:line="27" pos:column="7">else <if pos:line="27" pos:column="12">if <condition pos:line="27" pos:column="15">(<expr><name pos:line="27" pos:column="16">ret<pos:position pos:line="27" pos:column="19"/></name> <operator pos:line="27" pos:column="20">==<pos:position pos:line="27" pos:column="22"/></operator> <name pos:line="27" pos:column="23">ETIMEDOUT<pos:position pos:line="27" pos:column="32"/></name></expr>)<pos:position pos:line="27" pos:column="33"/></condition><then pos:line="27" pos:column="33"> <block pos:line="27" pos:column="34">{
      <comment type="block" pos:line="28" pos:column="7">/* wait timeout */</comment>
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">OVS_DEBUG<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><literal type="string" pos:line="29" pos:column="17">"no event received (timeout)"<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="48"/></expr_stmt>
      <continue pos:line="30" pos:column="7">continue;<pos:position pos:line="30" pos:column="16"/></continue>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif> <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
      <comment type="block" pos:line="32" pos:column="7">/* unexpected error */</comment>
      <expr_stmt><expr><call><name pos:line="33" pos:column="7">OVS_ERROR<pos:position pos:line="33" pos:column="16"/></name><argument_list pos:line="33" pos:column="16">(<argument><expr><literal type="string" pos:line="33" pos:column="17">"pthread_cond_timedwait() failed"<pos:position pos:line="33" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
      <break pos:line="34" pos:column="7">break;<pos:position pos:line="34" pos:column="13"/></break>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
  }<pos:position pos:line="36" pos:column="4"/></block></while>

  <expr_stmt><expr><call><name pos:line="38" pos:column="3">OVS_DEBUG<pos:position pos:line="38" pos:column="12"/></name><argument_list pos:line="38" pos:column="12">(<argument><expr><literal type="string" pos:line="38" pos:column="13">"event thread has been completed"<pos:position pos:line="38" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>
  <return pos:line="39" pos:column="3">return <expr><name pos:line="39" pos:column="10">NULL<pos:position pos:line="39" pos:column="14"/></name></expr>;<pos:position pos:line="39" pos:column="15"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

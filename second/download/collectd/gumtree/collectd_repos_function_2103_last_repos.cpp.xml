<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2103_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">mb_init_connection<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">mb_host_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">host<pos:position pos:line="1" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="47"/></parameter_list> <comment type="block" pos:line="1" pos:column="48">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">status<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>

  <if pos:line="5" pos:column="3">if <condition pos:line="5" pos:column="6">(<expr><name pos:line="5" pos:column="7">host<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">==<pos:position pos:line="5" pos:column="14"/></operator> <name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr>)<pos:position pos:line="5" pos:column="20"/></condition><then pos:line="5" pos:column="20">
    <block type="pseudo"><return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">EINVAL<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></return></block></then></if>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name><name pos:line="8" pos:column="7">host<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">connection<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">!=<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="27">NULL<pos:position pos:line="8" pos:column="31"/></name></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><literal type="number" pos:line="9" pos:column="12">0<pos:position pos:line="9" pos:column="13"/></literal></expr>;<pos:position pos:line="9" pos:column="14"/></return></block></then></if>

  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name><name pos:line="11" pos:column="7">host<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">conntype<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">==<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="25">MBCONN_TCP<pos:position pos:line="11" pos:column="35"/></name></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <block pos:line="11" pos:column="37">{
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">host<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">port<pos:position pos:line="12" pos:column="20"/></name></name> <operator pos:line="12" pos:column="21">&lt;<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="23">1<pos:position pos:line="12" pos:column="24"/></literal><operator pos:line="12" pos:column="24">)<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="26">||<pos:position pos:line="12" pos:column="28"/></operator> <operator pos:line="12" pos:column="29">(<pos:position pos:line="12" pos:column="30"/></operator><name><name pos:line="12" pos:column="30">host<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">port<pos:position pos:line="12" pos:column="40"/></name></name> <operator pos:line="12" pos:column="41">&gt;<pos:position pos:line="12" pos:column="45"/></operator> <literal type="number" pos:line="12" pos:column="43">65535<pos:position pos:line="12" pos:column="48"/></literal><operator pos:line="12" pos:column="48">)<pos:position pos:line="12" pos:column="49"/></operator></expr>)<pos:position pos:line="12" pos:column="50"/></condition><then pos:line="12" pos:column="50">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="7">host<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">port<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="20">MODBUS_TCP_DEFAULT_PORT<pos:position pos:line="13" pos:column="43"/></name></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">DEBUG<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"Modbus plugin: Trying to connect to \"%s\", port %i."<pos:position pos:line="15" pos:column="65"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="67">host<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">-&gt;<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="73">node<pos:position pos:line="15" pos:column="77"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="16" pos:column="11">host<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">port<pos:position pos:line="16" pos:column="21"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">host<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">-&gt;<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="11">connection<pos:position pos:line="18" pos:column="21"/></name></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <call><name pos:line="18" pos:column="24">modbus_new_tcp<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">(<argument><expr><name><name pos:line="18" pos:column="39">host<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">-&gt;<pos:position pos:line="18" pos:column="48"/></operator><name pos:line="18" pos:column="45">node<pos:position pos:line="18" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="51">host<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">-&gt;<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="57">port<pos:position pos:line="18" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">host<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">connection<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">==<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="29">NULL<pos:position pos:line="19" pos:column="33"/></name></expr>)<pos:position pos:line="19" pos:column="34"/></condition><then pos:line="19" pos:column="34"> <block pos:line="19" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="20" pos:column="7">ERROR<pos:position pos:line="20" pos:column="12"/></name><argument_list pos:line="20" pos:column="12">(<argument><expr><literal type="string" pos:line="20" pos:column="13">"Modbus plugin: Creating new Modbus/TCP object failed."<pos:position pos:line="20" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
      <return pos:line="21" pos:column="7">return <expr><operator pos:line="21" pos:column="14">-<pos:position pos:line="21" pos:column="15"/></operator><literal type="number" pos:line="21" pos:column="15">1<pos:position pos:line="21" pos:column="16"/></literal></expr>;<pos:position pos:line="21" pos:column="17"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>
  }<pos:position pos:line="23" pos:column="4"/></block></then> <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">DEBUG<pos:position pos:line="24" pos:column="10"/></name><argument_list pos:line="24" pos:column="10">(<argument><expr><literal type="string" pos:line="24" pos:column="11">"Modbus plugin: Trying to connect to \"%s\", baudrate %i."<pos:position pos:line="24" pos:column="69"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="25" pos:column="11">host<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">node<pos:position pos:line="25" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="23">host<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">-&gt;<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="29">baudrate<pos:position pos:line="25" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">host<pos:position pos:line="27" pos:column="9"/></name><operator pos:line="27" pos:column="9">-&gt;<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="11">connection<pos:position pos:line="27" pos:column="21"/></name></name> <operator pos:line="27" pos:column="22">=<pos:position pos:line="27" pos:column="23"/></operator> <call><name pos:line="27" pos:column="24">modbus_new_rtu<pos:position pos:line="27" pos:column="38"/></name><argument_list pos:line="27" pos:column="38">(<argument><expr><name><name pos:line="27" pos:column="39">host<pos:position pos:line="27" pos:column="43"/></name><operator pos:line="27" pos:column="43">-&gt;<pos:position pos:line="27" pos:column="48"/></operator><name pos:line="27" pos:column="45">node<pos:position pos:line="27" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="51">host<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">baudrate<pos:position pos:line="27" pos:column="65"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="67">'N'<pos:position pos:line="27" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="72">8<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="75">1<pos:position pos:line="27" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="78"/></expr_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">host<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">connection<pos:position pos:line="28" pos:column="25"/></name></name> <operator pos:line="28" pos:column="26">==<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">NULL<pos:position pos:line="28" pos:column="33"/></name></expr>)<pos:position pos:line="28" pos:column="34"/></condition><then pos:line="28" pos:column="34"> <block pos:line="28" pos:column="35">{
      <expr_stmt><expr><call><name pos:line="29" pos:column="7">ERROR<pos:position pos:line="29" pos:column="12"/></name><argument_list pos:line="29" pos:column="12">(<argument><expr><literal type="string" pos:line="29" pos:column="13">"Modbus plugin: Creating new Modbus/RTU object failed."<pos:position pos:line="29" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="70"/></expr_stmt>
      <return pos:line="30" pos:column="7">return <expr><operator pos:line="30" pos:column="14">-<pos:position pos:line="30" pos:column="15"/></operator><literal type="number" pos:line="30" pos:column="15">1<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
  }<pos:position pos:line="32" pos:column="4"/></block></else></if>

<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">COLLECT_DEBUG<pos:position pos:line="34" pos:column="18"/></name></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="35" pos:column="3">modbus_set_debug<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name><name pos:line="35" pos:column="20">host<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">connection<pos:position pos:line="35" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="38">1<pos:position pos:line="35" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="38" pos:column="3">/* We'll do the error handling ourselves. */</comment>
  <expr_stmt><expr><call><name pos:line="39" pos:column="3">modbus_set_error_recovery<pos:position pos:line="39" pos:column="28"/></name><argument_list pos:line="39" pos:column="28">(<argument><expr><name><name pos:line="39" pos:column="29">host<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">connection<pos:position pos:line="39" pos:column="45"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="47">0<pos:position pos:line="39" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="50"/></expr_stmt>

  <expr_stmt><expr><name pos:line="41" pos:column="3">status<pos:position pos:line="41" pos:column="9"/></name> <operator pos:line="41" pos:column="10">=<pos:position pos:line="41" pos:column="11"/></operator> <call><name pos:line="41" pos:column="12">modbus_connect<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name><name pos:line="41" pos:column="27">host<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">-&gt;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="33">connection<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="45"/></expr_stmt>
  <if pos:line="42" pos:column="3">if <condition pos:line="42" pos:column="6">(<expr><name pos:line="42" pos:column="7">status<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">!=<pos:position pos:line="42" pos:column="16"/></operator> <literal type="number" pos:line="42" pos:column="17">0<pos:position pos:line="42" pos:column="18"/></literal></expr>)<pos:position pos:line="42" pos:column="19"/></condition><then pos:line="42" pos:column="19"> <block pos:line="42" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">ERROR<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><literal type="string" pos:line="43" pos:column="11">"Modbus plugin: modbus_connect (%s, %i) failed with status %i."<pos:position pos:line="43" pos:column="74"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="44" pos:column="11">host<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">node<pos:position pos:line="44" pos:column="21"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="44" pos:column="23">host<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">-&gt;<pos:position pos:line="44" pos:column="32"/></operator><name pos:line="44" pos:column="29">port<pos:position pos:line="44" pos:column="33"/></name></name></expr> ?<pos:position pos:line="44" pos:column="35"/></condition><then pos:line="44" pos:column="35"> <expr><name><name pos:line="44" pos:column="36">host<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">port<pos:position pos:line="44" pos:column="46"/></name></name></expr> <pos:position pos:line="44" pos:column="47"/></then><else pos:line="44" pos:column="47">: <expr><name><name pos:line="44" pos:column="49">host<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">-&gt;<pos:position pos:line="44" pos:column="58"/></operator><name pos:line="44" pos:column="55">baudrate<pos:position pos:line="44" pos:column="63"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="44" pos:column="65">status<pos:position pos:line="44" pos:column="71"/></name></expr></argument>)<pos:position pos:line="44" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="45" pos:column="5">modbus_free<pos:position pos:line="45" pos:column="16"/></name><argument_list pos:line="45" pos:column="16">(<argument><expr><name><name pos:line="45" pos:column="17">host<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">connection<pos:position pos:line="45" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">host<pos:position pos:line="46" pos:column="9"/></name><operator pos:line="46" pos:column="9">-&gt;<pos:position pos:line="46" pos:column="14"/></operator><name pos:line="46" pos:column="11">connection<pos:position pos:line="46" pos:column="21"/></name></name> <operator pos:line="46" pos:column="22">=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="24">NULL<pos:position pos:line="46" pos:column="28"/></name></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">status<pos:position pos:line="47" pos:column="18"/></name></expr>;<pos:position pos:line="47" pos:column="19"/></return>
  }<pos:position pos:line="48" pos:column="4"/></block></then></if>

  <return pos:line="50" pos:column="3">return <expr><literal type="number" pos:line="50" pos:column="10">0<pos:position pos:line="50" pos:column="11"/></literal></expr>;<pos:position pos:line="50" pos:column="12"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

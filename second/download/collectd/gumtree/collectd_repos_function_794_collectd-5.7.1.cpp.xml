<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_794_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">handle_ip<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><specifier pos:line="1" pos:column="22">const<pos:position pos:line="1" pos:column="27"/></specifier> <name><name pos:line="1" pos:column="28">struct<pos:position pos:line="1" pos:column="34"/></name> <name pos:line="1" pos:column="35">ip<pos:position pos:line="1" pos:column="37"/></name></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">ip<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="43">int<pos:position pos:line="1" pos:column="46"/></name></type> <name pos:line="1" pos:column="47">len<pos:position pos:line="1" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="51"/></parameter_list> <block pos:line="1" pos:column="52">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">char<pos:position pos:line="2" pos:column="7"/></name></type> <name><name pos:line="2" pos:column="8">buf<pos:position pos:line="2" pos:column="11"/></name><index pos:line="2" pos:column="11">[<expr><name pos:line="2" pos:column="12">PCAP_SNAPLEN<pos:position pos:line="2" pos:column="24"/></name></expr>]<pos:position pos:line="2" pos:column="25"/></index></name></decl>;<pos:position pos:line="2" pos:column="26"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">int<pos:position pos:line="3" pos:column="6"/></name></type> <name pos:line="3" pos:column="7">offset<pos:position pos:line="3" pos:column="13"/></name> <init pos:line="3" pos:column="14">= <expr><name><name pos:line="3" pos:column="16">ip<pos:position pos:line="3" pos:column="18"/></name><operator pos:line="3" pos:column="18">-&gt;<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="20">ip_hl<pos:position pos:line="3" pos:column="25"/></name></name> <operator pos:line="3" pos:column="26">&lt;&lt;<pos:position pos:line="3" pos:column="34"/></operator> <literal type="number" pos:line="3" pos:column="29">2<pos:position pos:line="3" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="31"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="4" pos:column="3">struct<pos:position pos:line="4" pos:column="9"/></name> <name pos:line="4" pos:column="10">in6_addr<pos:position pos:line="4" pos:column="18"/></name></name></type> <name pos:line="4" pos:column="19">c_src_addr<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name><name pos:line="5" pos:column="3">struct<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">in6_addr<pos:position pos:line="5" pos:column="18"/></name></name></type> <name pos:line="5" pos:column="19">c_dst_addr<pos:position pos:line="5" pos:column="29"/></name></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>

  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">ip<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">-&gt;<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="11">ip_v<pos:position pos:line="7" pos:column="15"/></name></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="19">6<pos:position pos:line="7" pos:column="20"/></literal></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
    <block type="pseudo"><return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><call><name pos:line="8" pos:column="13">handle_ipv6<pos:position pos:line="8" pos:column="24"/></name><argument_list pos:line="8" pos:column="24">(<argument><expr><operator pos:line="8" pos:column="25">(<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">void<pos:position pos:line="8" pos:column="30"/></name> <operator pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></operator><operator pos:line="8" pos:column="32">)<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">ip<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">len<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call><operator pos:line="8" pos:column="41">)<pos:position pos:line="8" pos:column="42"/></operator></expr>;<pos:position pos:line="8" pos:column="43"/></return></block></then></if>

  <expr_stmt><expr><call><name pos:line="10" pos:column="3">in6_addr_from_buffer<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><operator pos:line="10" pos:column="24">&amp;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="25">c_src_addr<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="37">&amp;<pos:position pos:line="10" pos:column="42"/></operator><name><name pos:line="10" pos:column="38">ip<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">-&gt;<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="42">ip_src<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">.<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">s_addr<pos:position pos:line="10" pos:column="55"/></name></name></expr></argument>,
                       <argument><expr><sizeof pos:line="11" pos:column="24">sizeof<argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">ip<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">ip_src<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">s_addr<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="11" pos:column="51">AF_INET<pos:position pos:line="11" pos:column="58"/></name></expr></argument>)<pos:position pos:line="11" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="60"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="12" pos:column="3">in6_addr_from_buffer<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><operator pos:line="12" pos:column="24">&amp;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="25">c_dst_addr<pos:position pos:line="12" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="37">&amp;<pos:position pos:line="12" pos:column="42"/></operator><name><name pos:line="12" pos:column="38">ip<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">ip_dst<pos:position pos:line="12" pos:column="48"/></name><operator pos:line="12" pos:column="48">.<pos:position pos:line="12" pos:column="49"/></operator><name pos:line="12" pos:column="49">s_addr<pos:position pos:line="12" pos:column="55"/></name></name></expr></argument>,
                       <argument><expr><sizeof pos:line="13" pos:column="24">sizeof<argument_list pos:line="13" pos:column="30">(<argument><expr><name><name pos:line="13" pos:column="31">ip<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="35">ip_dst<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">s_addr<pos:position pos:line="13" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="13" pos:column="51">AF_INET<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><call><name pos:line="14" pos:column="7">ignore_list_match<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><operator pos:line="14" pos:column="25">&amp;<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="26">c_src_addr<pos:position pos:line="14" pos:column="36"/></name></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38">
    <block type="pseudo"><return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal><operator pos:line="15" pos:column="14">)<pos:position pos:line="15" pos:column="15"/></operator></expr>;<pos:position pos:line="15" pos:column="16"/></return></block></then></if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name pos:line="16" pos:column="7">IPPROTO_UDP<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">!=<pos:position pos:line="16" pos:column="21"/></operator> <name><name pos:line="16" pos:column="22">ip<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">ip_p<pos:position pos:line="16" pos:column="30"/></name></name></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
    <block type="pseudo"><return pos:line="17" pos:column="5">return <expr><literal type="number" pos:line="17" pos:column="12">0<pos:position pos:line="17" pos:column="13"/></literal></expr>;<pos:position pos:line="17" pos:column="14"/></return></block></then></if>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">memcpy<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><name pos:line="18" pos:column="10">buf<pos:position pos:line="18" pos:column="13"/></name></expr></argument>, <argument><expr><operator pos:line="18" pos:column="15">(<pos:position pos:line="18" pos:column="16"/></operator><operator pos:line="18" pos:column="16">(<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">char<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></operator><operator pos:line="18" pos:column="23">)<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">ip<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="28">+<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="30">offset<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="38">len<pos:position pos:line="18" pos:column="41"/></name> <operator pos:line="18" pos:column="42">-<pos:position pos:line="18" pos:column="43"/></operator> <name pos:line="18" pos:column="44">offset<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>
  <if pos:line="19" pos:column="3">if <condition pos:line="19" pos:column="6">(<expr><literal type="number" pos:line="19" pos:column="7">0<pos:position pos:line="19" pos:column="8"/></literal> <operator pos:line="19" pos:column="9">==<pos:position pos:line="19" pos:column="11"/></operator> <call><name pos:line="19" pos:column="12">handle_udp<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><operator pos:line="19" pos:column="23">(<pos:position pos:line="19" pos:column="24"/></operator>struct <name pos:line="19" pos:column="31">udphdr<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">*<pos:position pos:line="19" pos:column="39"/></operator><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">buf<pos:position pos:line="19" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="45">len<pos:position pos:line="19" pos:column="48"/></name> <operator pos:line="19" pos:column="49">-<pos:position pos:line="19" pos:column="50"/></operator> <name pos:line="19" pos:column="51">offset<pos:position pos:line="19" pos:column="57"/></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59">
    <block type="pseudo"><return pos:line="20" pos:column="5">return <expr><literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></return></block></then></if>
  <return pos:line="21" pos:column="3">return <expr><literal type="number" pos:line="21" pos:column="10">1<pos:position pos:line="21" pos:column="11"/></literal></expr>;<pos:position pos:line="21" pos:column="12"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

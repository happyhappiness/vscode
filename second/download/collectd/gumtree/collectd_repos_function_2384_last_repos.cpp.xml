<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2384_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">cj_cb_map_key<pos:position pos:line="1" pos:column="25"/></name><parameter_list pos:line="1" pos:column="25">(<parameter><decl><type><name pos:line="1" pos:column="26">void<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">ctx<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="37">unsigned<pos:position pos:line="1" pos:column="45"/></name> <name pos:line="1" pos:column="46">char<pos:position pos:line="1" pos:column="50"/></name> <specifier pos:line="1" pos:column="51">const<pos:position pos:line="1" pos:column="56"/></specifier> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier></type><name pos:line="1" pos:column="58">in_name<pos:position pos:line="1" pos:column="65"/></name></decl></parameter>,
                         <parameter><decl><type><name pos:line="2" pos:column="26">yajl_len_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">in_name_len<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list> <block pos:line="2" pos:column="50">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name></type> <name><name pos:line="3" pos:column="8">name<pos:position pos:line="3" pos:column="12"/></name><index pos:line="3" pos:column="12">[<expr><name pos:line="3" pos:column="13">in_name_len<pos:position pos:line="3" pos:column="24"/></name> <operator pos:line="3" pos:column="25">+<pos:position pos:line="3" pos:column="26"/></operator> <literal type="number" pos:line="3" pos:column="27">1<pos:position pos:line="3" pos:column="28"/></literal></expr>]<pos:position pos:line="3" pos:column="29"/></index></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="5" pos:column="3">memmove<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><name pos:line="5" pos:column="11">name<pos:position pos:line="5" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="17">in_name<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">in_name_len<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">name<pos:position pos:line="6" pos:column="7"/></name><index pos:line="6" pos:column="7">[<expr><sizeof pos:line="6" pos:column="8">sizeof<argument_list pos:line="6" pos:column="14">(<argument><expr><name pos:line="6" pos:column="15">name<pos:position pos:line="6" pos:column="19"/></name></expr></argument>)<pos:position pos:line="6" pos:column="20"/></argument_list></sizeof> <operator pos:line="6" pos:column="21">-<pos:position pos:line="6" pos:column="22"/></operator> <literal type="number" pos:line="6" pos:column="23">1<pos:position pos:line="6" pos:column="24"/></literal></expr>]<pos:position pos:line="6" pos:column="25"/></index></name> <operator pos:line="6" pos:column="26">=<pos:position pos:line="6" pos:column="27"/></operator> <literal type="number" pos:line="6" pos:column="28">0<pos:position pos:line="6" pos:column="29"/></literal></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><call><name pos:line="8" pos:column="7">cj_load_key<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name pos:line="8" pos:column="19">ctx<pos:position pos:line="8" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="24">name<pos:position pos:line="8" pos:column="28"/></name></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call> <operator pos:line="8" pos:column="30">!=<pos:position pos:line="8" pos:column="32"/></operator> <literal type="number" pos:line="8" pos:column="33">0<pos:position pos:line="8" pos:column="34"/></literal></expr>)<pos:position pos:line="8" pos:column="35"/></condition><then pos:line="8" pos:column="35">
    <block type="pseudo"><return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">CJ_CB_ABORT<pos:position pos:line="9" pos:column="23"/></name></expr>;<pos:position pos:line="9" pos:column="24"/></return></block></then></if>

  <return pos:line="11" pos:column="3">return <expr><name pos:line="11" pos:column="10">CJ_CB_CONTINUE<pos:position pos:line="11" pos:column="24"/></name></expr>;<pos:position pos:line="11" pos:column="25"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

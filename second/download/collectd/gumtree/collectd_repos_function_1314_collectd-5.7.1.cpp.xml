<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1314_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">tcsv_read_buffer<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">instance_definition_t<pos:position pos:line="1" pos:column="50"/></name> <modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">id<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="56">char<pos:position pos:line="1" pos:column="60"/></name> <modifier pos:line="1" pos:column="61">*<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="62">buffer<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>,
                            <parameter><decl><type><name pos:line="2" pos:column="29">size_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">buffer_size<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <block pos:line="2" pos:column="49">{
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">char<pos:position pos:line="3" pos:column="7"/></name> <modifier pos:line="3" pos:column="8">*<pos:position pos:line="3" pos:column="9"/></modifier><modifier pos:line="3" pos:column="9">*<pos:position pos:line="3" pos:column="10"/></modifier></type><name pos:line="3" pos:column="10">metrics<pos:position pos:line="3" pos:column="17"/></name></decl>;<pos:position pos:line="3" pos:column="18"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">size_t<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">metrics_num<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>

  <decl_stmt><decl><type><name pos:line="6" pos:column="3">char<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">ptr<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">i<pos:position pos:line="7" pos:column="11"/></name></decl>;<pos:position pos:line="7" pos:column="12"/></decl_stmt>

  <comment type="block" pos:line="9" pos:column="3">/* Remove newlines at the end of line. */</comment>
  <while pos:line="10" pos:column="3">while <condition pos:line="10" pos:column="9">(<expr><name pos:line="10" pos:column="10">buffer_size<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&gt;<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>)<pos:position pos:line="10" pos:column="26"/></condition> <block pos:line="10" pos:column="27">{
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">buffer<pos:position pos:line="11" pos:column="16"/></name><index pos:line="11" pos:column="16">[<expr><name pos:line="11" pos:column="17">buffer_size<pos:position pos:line="11" pos:column="28"/></name> <operator pos:line="11" pos:column="29">-<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>]<pos:position pos:line="11" pos:column="33"/></index></name> <operator pos:line="11" pos:column="34">==<pos:position pos:line="11" pos:column="36"/></operator> <literal type="char" pos:line="11" pos:column="37">'\n'<pos:position pos:line="11" pos:column="41"/></literal><operator pos:line="11" pos:column="41">)<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="43">||<pos:position pos:line="11" pos:column="45"/></operator>
        <operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">buffer<pos:position pos:line="12" pos:column="16"/></name><index pos:line="12" pos:column="16">[<expr><name pos:line="12" pos:column="17">buffer_size<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">-<pos:position pos:line="12" pos:column="30"/></operator> <literal type="number" pos:line="12" pos:column="31">1<pos:position pos:line="12" pos:column="32"/></literal></expr>]<pos:position pos:line="12" pos:column="33"/></index></name> <operator pos:line="12" pos:column="34">==<pos:position pos:line="12" pos:column="36"/></operator> <literal type="char" pos:line="12" pos:column="37">'\r'<pos:position pos:line="12" pos:column="41"/></literal><operator pos:line="12" pos:column="41">)<pos:position pos:line="12" pos:column="42"/></operator></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43"> <block pos:line="12" pos:column="44">{
      <expr_stmt><expr><name><name pos:line="13" pos:column="7">buffer<pos:position pos:line="13" pos:column="13"/></name><index pos:line="13" pos:column="13">[<expr><name pos:line="13" pos:column="14">buffer_size<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">-<pos:position pos:line="13" pos:column="27"/></operator> <literal type="number" pos:line="13" pos:column="28">1<pos:position pos:line="13" pos:column="29"/></literal></expr>]<pos:position pos:line="13" pos:column="30"/></index></name> <operator pos:line="13" pos:column="31">=<pos:position pos:line="13" pos:column="32"/></operator> <literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
      <expr_stmt><expr><name pos:line="14" pos:column="7">buffer_size<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">--<pos:position pos:line="14" pos:column="20"/></operator></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
      <break pos:line="16" pos:column="7">break;<pos:position pos:line="16" pos:column="13"/></break>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>
  }<pos:position pos:line="18" pos:column="4"/></block></while>

  <comment type="block" pos:line="20" pos:column="3">/* Ignore empty lines. */</comment>
  <if pos:line="21" pos:column="3">if <condition pos:line="21" pos:column="6">(<expr><operator pos:line="21" pos:column="7">(<pos:position pos:line="21" pos:column="8"/></operator><name pos:line="21" pos:column="8">buffer_size<pos:position pos:line="21" pos:column="19"/></name> <operator pos:line="21" pos:column="20">==<pos:position pos:line="21" pos:column="22"/></operator> <literal type="number" pos:line="21" pos:column="23">0<pos:position pos:line="21" pos:column="24"/></literal><operator pos:line="21" pos:column="24">)<pos:position pos:line="21" pos:column="25"/></operator> <operator pos:line="21" pos:column="26">||<pos:position pos:line="21" pos:column="28"/></operator> <operator pos:line="21" pos:column="29">(<pos:position pos:line="21" pos:column="30"/></operator><name><name pos:line="21" pos:column="30">buffer<pos:position pos:line="21" pos:column="36"/></name><index pos:line="21" pos:column="36">[<expr><literal type="number" pos:line="21" pos:column="37">0<pos:position pos:line="21" pos:column="38"/></literal></expr>]<pos:position pos:line="21" pos:column="39"/></index></name> <operator pos:line="21" pos:column="40">==<pos:position pos:line="21" pos:column="42"/></operator> <literal type="char" pos:line="21" pos:column="43">'#'<pos:position pos:line="21" pos:column="46"/></literal><operator pos:line="21" pos:column="46">)<pos:position pos:line="21" pos:column="47"/></operator></expr>)<pos:position pos:line="21" pos:column="48"/></condition><then pos:line="21" pos:column="48">
    <block type="pseudo"><return pos:line="22" pos:column="5">return <expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><literal type="number" pos:line="22" pos:column="13">0<pos:position pos:line="22" pos:column="14"/></literal><operator pos:line="22" pos:column="14">)<pos:position pos:line="22" pos:column="15"/></operator></expr>;<pos:position pos:line="22" pos:column="16"/></return></block></then></if>

  <comment type="block" pos:line="24" pos:column="3">/* Count the number of fields. */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">metrics_num<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <literal type="number" pos:line="25" pos:column="17">1<pos:position pos:line="25" pos:column="18"/></literal></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
  <for pos:line="26" pos:column="3">for <control pos:line="26" pos:column="7">(<init><expr><name pos:line="26" pos:column="8">i<pos:position pos:line="26" pos:column="9"/></name> <operator pos:line="26" pos:column="10">=<pos:position pos:line="26" pos:column="11"/></operator> <literal type="number" pos:line="26" pos:column="12">0<pos:position pos:line="26" pos:column="13"/></literal></expr>;<pos:position pos:line="26" pos:column="14"/></init> <condition><expr><name pos:line="26" pos:column="15">i<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">&lt;<pos:position pos:line="26" pos:column="21"/></operator> <name pos:line="26" pos:column="19">buffer_size<pos:position pos:line="26" pos:column="30"/></name></expr>;<pos:position pos:line="26" pos:column="31"/></condition> <incr><expr><name pos:line="26" pos:column="32">i<pos:position pos:line="26" pos:column="33"/></name><operator pos:line="26" pos:column="33">++<pos:position pos:line="26" pos:column="35"/></operator></expr></incr>)<pos:position pos:line="26" pos:column="36"/></control> <block pos:line="26" pos:column="37">{
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">buffer<pos:position pos:line="27" pos:column="15"/></name><index pos:line="27" pos:column="15">[<expr><name pos:line="27" pos:column="16">i<pos:position pos:line="27" pos:column="17"/></name></expr>]<pos:position pos:line="27" pos:column="18"/></index></name> <operator pos:line="27" pos:column="19">==<pos:position pos:line="27" pos:column="21"/></operator> <literal type="char" pos:line="27" pos:column="22">','<pos:position pos:line="27" pos:column="25"/></literal></expr>)<pos:position pos:line="27" pos:column="26"/></condition><then pos:line="27" pos:column="26">
      <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="7">metrics_num<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">++<pos:position pos:line="28" pos:column="20"/></operator></expr>;<pos:position pos:line="28" pos:column="21"/></expr_stmt></block></then></if>
  }<pos:position pos:line="29" pos:column="4"/></block></for>

  <if pos:line="31" pos:column="3">if <condition pos:line="31" pos:column="6">(<expr><name pos:line="31" pos:column="7">metrics_num<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">==<pos:position pos:line="31" pos:column="21"/></operator> <literal type="number" pos:line="31" pos:column="22">1<pos:position pos:line="31" pos:column="23"/></literal></expr>)<pos:position pos:line="31" pos:column="24"/></condition><then pos:line="31" pos:column="24"> <block pos:line="31" pos:column="25">{
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">ERROR<pos:position pos:line="32" pos:column="10"/></name><argument_list pos:line="32" pos:column="10">(<argument><expr><literal type="string" pos:line="32" pos:column="11">"tail_csv plugin: last line of `%s' does not contain "<pos:position pos:line="32" pos:column="65"/></literal>
          <literal type="string" pos:line="33" pos:column="11">"enough values."<pos:position pos:line="33" pos:column="27"/></literal></expr></argument>,
          <argument><expr><name><name pos:line="34" pos:column="11">id<pos:position pos:line="34" pos:column="13"/></name><operator pos:line="34" pos:column="13">-&gt;<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="15">path<pos:position pos:line="34" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="21"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">(<pos:position pos:line="35" pos:column="13"/></operator><operator pos:line="35" pos:column="13">-<pos:position pos:line="35" pos:column="14"/></operator><literal type="number" pos:line="35" pos:column="14">1<pos:position pos:line="35" pos:column="15"/></literal><operator pos:line="35" pos:column="15">)<pos:position pos:line="35" pos:column="16"/></operator></expr>;<pos:position pos:line="35" pos:column="17"/></return>
  }<pos:position pos:line="36" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="38" pos:column="3">/* Create a list of all values */</comment>
  <expr_stmt><expr><name pos:line="39" pos:column="3">metrics<pos:position pos:line="39" pos:column="10"/></name> <operator pos:line="39" pos:column="11">=<pos:position pos:line="39" pos:column="12"/></operator> <call><name pos:line="39" pos:column="13">calloc<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">metrics_num<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="33">sizeof<argument_list pos:line="39" pos:column="39">(<argument><expr><operator pos:line="39" pos:column="40">*<pos:position pos:line="39" pos:column="41"/></operator><name pos:line="39" pos:column="41">metrics<pos:position pos:line="39" pos:column="48"/></name></expr></argument>)<pos:position pos:line="39" pos:column="49"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="51"/></expr_stmt>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">metrics<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <name pos:line="40" pos:column="18">NULL<pos:position pos:line="40" pos:column="22"/></name></expr>)<pos:position pos:line="40" pos:column="23"/></condition><then pos:line="40" pos:column="23"> <block pos:line="40" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ERROR<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><literal type="string" pos:line="41" pos:column="11">"tail_csv plugin: calloc failed."<pos:position pos:line="41" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="46"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><operator pos:line="42" pos:column="12">(<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">ENOMEM<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">)<pos:position pos:line="42" pos:column="20"/></operator></expr>;<pos:position pos:line="42" pos:column="21"/></return>
  }<pos:position pos:line="43" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="45" pos:column="3">ptr<pos:position pos:line="45" pos:column="6"/></name> <operator pos:line="45" pos:column="7">=<pos:position pos:line="45" pos:column="8"/></operator> <name pos:line="45" pos:column="9">buffer<pos:position pos:line="45" pos:column="15"/></name></expr>;<pos:position pos:line="45" pos:column="16"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="46" pos:column="3">metrics<pos:position pos:line="46" pos:column="10"/></name><index pos:line="46" pos:column="10">[<expr><literal type="number" pos:line="46" pos:column="11">0<pos:position pos:line="46" pos:column="12"/></literal></expr>]<pos:position pos:line="46" pos:column="13"/></index></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <name pos:line="46" pos:column="16">ptr<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><name pos:line="47" pos:column="3">i<pos:position pos:line="47" pos:column="4"/></name> <operator pos:line="47" pos:column="5">=<pos:position pos:line="47" pos:column="6"/></operator> <literal type="number" pos:line="47" pos:column="7">1<pos:position pos:line="47" pos:column="8"/></literal></expr>;<pos:position pos:line="47" pos:column="9"/></expr_stmt>
  <for pos:line="48" pos:column="3">for <control pos:line="48" pos:column="7">(<init><expr><name pos:line="48" pos:column="8">ptr<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <name pos:line="48" pos:column="14">buffer<pos:position pos:line="48" pos:column="20"/></name></expr>;<pos:position pos:line="48" pos:column="21"/></init> <condition><expr><operator pos:line="48" pos:column="22">*<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="23">ptr<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">!=<pos:position pos:line="48" pos:column="29"/></operator> <literal type="number" pos:line="48" pos:column="30">0<pos:position pos:line="48" pos:column="31"/></literal></expr>;<pos:position pos:line="48" pos:column="32"/></condition> <incr><expr><name pos:line="48" pos:column="33">ptr<pos:position pos:line="48" pos:column="36"/></name><operator pos:line="48" pos:column="36">++<pos:position pos:line="48" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="48" pos:column="39"/></control> <block pos:line="48" pos:column="40">{
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">ptr<pos:position pos:line="49" pos:column="13"/></name> <operator pos:line="49" pos:column="14">!=<pos:position pos:line="49" pos:column="16"/></operator> <literal type="char" pos:line="49" pos:column="17">','<pos:position pos:line="49" pos:column="20"/></literal></expr>)<pos:position pos:line="49" pos:column="21"/></condition><then pos:line="49" pos:column="21">
      <block type="pseudo"><continue pos:line="50" pos:column="7">continue;<pos:position pos:line="50" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><operator pos:line="52" pos:column="5">*<pos:position pos:line="52" pos:column="6"/></operator><name pos:line="52" pos:column="6">ptr<pos:position pos:line="52" pos:column="9"/></name> <operator pos:line="52" pos:column="10">=<pos:position pos:line="52" pos:column="11"/></operator> <literal type="number" pos:line="52" pos:column="12">0<pos:position pos:line="52" pos:column="13"/></literal></expr>;<pos:position pos:line="52" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">metrics<pos:position pos:line="53" pos:column="12"/></name><index pos:line="53" pos:column="12">[<expr><name pos:line="53" pos:column="13">i<pos:position pos:line="53" pos:column="14"/></name></expr>]<pos:position pos:line="53" pos:column="15"/></index></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <name pos:line="53" pos:column="18">ptr<pos:position pos:line="53" pos:column="21"/></name> <operator pos:line="53" pos:column="22">+<pos:position pos:line="53" pos:column="23"/></operator> <literal type="number" pos:line="53" pos:column="24">1<pos:position pos:line="53" pos:column="25"/></literal></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="54" pos:column="5">i<pos:position pos:line="54" pos:column="6"/></name><operator pos:line="54" pos:column="6">++<pos:position pos:line="54" pos:column="8"/></operator></expr>;<pos:position pos:line="54" pos:column="9"/></expr_stmt>
  }<pos:position pos:line="55" pos:column="4"/></block></for>
  <expr_stmt><expr><call><name pos:line="56" pos:column="3">assert<pos:position pos:line="56" pos:column="9"/></name><argument_list pos:line="56" pos:column="9">(<argument><expr><name pos:line="56" pos:column="10">i<pos:position pos:line="56" pos:column="11"/></name> <operator pos:line="56" pos:column="12">==<pos:position pos:line="56" pos:column="14"/></operator> <name pos:line="56" pos:column="15">metrics_num<pos:position pos:line="56" pos:column="26"/></name></expr></argument>)<pos:position pos:line="56" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>

  <comment type="block" pos:line="58" pos:column="3">/* Register values */</comment>
  <for pos:line="59" pos:column="3">for <control pos:line="59" pos:column="7">(<init><expr><name pos:line="59" pos:column="8">i<pos:position pos:line="59" pos:column="9"/></name> <operator pos:line="59" pos:column="10">=<pos:position pos:line="59" pos:column="11"/></operator> <literal type="number" pos:line="59" pos:column="12">0<pos:position pos:line="59" pos:column="13"/></literal></expr>;<pos:position pos:line="59" pos:column="14"/></init> <condition><expr><name pos:line="59" pos:column="15">i<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">&lt;<pos:position pos:line="59" pos:column="21"/></operator> <name><name pos:line="59" pos:column="19">id<pos:position pos:line="59" pos:column="21"/></name><operator pos:line="59" pos:column="21">-&gt;<pos:position pos:line="59" pos:column="26"/></operator><name pos:line="59" pos:column="23">metric_list_len<pos:position pos:line="59" pos:column="38"/></name></name></expr>;<pos:position pos:line="59" pos:column="39"/></condition> <incr><expr><operator pos:line="59" pos:column="40">++<pos:position pos:line="59" pos:column="42"/></operator><name pos:line="59" pos:column="42">i<pos:position pos:line="59" pos:column="43"/></name></expr></incr>)<pos:position pos:line="59" pos:column="44"/></control> <block pos:line="59" pos:column="45">{
    <decl_stmt><decl><type><name pos:line="60" pos:column="5">metric_definition_t<pos:position pos:line="60" pos:column="24"/></name> <modifier pos:line="60" pos:column="25">*<pos:position pos:line="60" pos:column="26"/></modifier></type><name pos:line="60" pos:column="26">md<pos:position pos:line="60" pos:column="28"/></name> <init pos:line="60" pos:column="29">= <expr><name><name pos:line="60" pos:column="31">id<pos:position pos:line="60" pos:column="33"/></name><operator pos:line="60" pos:column="33">-&gt;<pos:position pos:line="60" pos:column="38"/></operator><name pos:line="60" pos:column="35">metric_list<pos:position pos:line="60" pos:column="46"/></name><index pos:line="60" pos:column="46">[<expr><name pos:line="60" pos:column="47">i<pos:position pos:line="60" pos:column="48"/></name></expr>]<pos:position pos:line="60" pos:column="49"/></index></name></expr></init></decl>;<pos:position pos:line="60" pos:column="50"/></decl_stmt>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><operator pos:line="62" pos:column="9">!<pos:position pos:line="62" pos:column="10"/></operator><call><name pos:line="62" pos:column="10">tcsv_check_index<pos:position pos:line="62" pos:column="26"/></name><argument_list pos:line="62" pos:column="26">(<argument><expr><name><name pos:line="62" pos:column="27">md<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">-&gt;<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="31">value_from<pos:position pos:line="62" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">metrics_num<pos:position pos:line="62" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="56">md<pos:position pos:line="62" pos:column="58"/></name><operator pos:line="62" pos:column="58">-&gt;<pos:position pos:line="62" pos:column="63"/></operator><name pos:line="62" pos:column="60">name<pos:position pos:line="62" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="65"/></argument_list></call> <operator pos:line="62" pos:column="66">||<pos:position pos:line="62" pos:column="68"/></operator>
        <operator pos:line="63" pos:column="9">!<pos:position pos:line="63" pos:column="10"/></operator><call><name pos:line="63" pos:column="10">tcsv_check_index<pos:position pos:line="63" pos:column="26"/></name><argument_list pos:line="63" pos:column="26">(<argument><expr><name><name pos:line="63" pos:column="27">id<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">-&gt;<pos:position pos:line="63" pos:column="34"/></operator><name pos:line="63" pos:column="31">time_from<pos:position pos:line="63" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="42">metrics_num<pos:position pos:line="63" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="55">md<pos:position pos:line="63" pos:column="57"/></name><operator pos:line="63" pos:column="57">-&gt;<pos:position pos:line="63" pos:column="62"/></operator><name pos:line="63" pos:column="59">name<pos:position pos:line="63" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="63" pos:column="65"/></condition><then pos:line="63" pos:column="65">
      <block type="pseudo"><continue pos:line="64" pos:column="7">continue;<pos:position pos:line="64" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">tcsv_read_metric<pos:position pos:line="66" pos:column="21"/></name><argument_list pos:line="66" pos:column="21">(<argument><expr><name pos:line="66" pos:column="22">id<pos:position pos:line="66" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="26">md<pos:position pos:line="66" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="30">metrics<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="39">metrics_num<pos:position pos:line="66" pos:column="50"/></name></expr></argument>)<pos:position pos:line="66" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="52"/></expr_stmt>
  }<pos:position pos:line="67" pos:column="4"/></block></for>

  <comment type="block" pos:line="69" pos:column="3">/* Free up resources */</comment>
  <expr_stmt><expr><call><name pos:line="70" pos:column="3">sfree<pos:position pos:line="70" pos:column="8"/></name><argument_list pos:line="70" pos:column="8">(<argument><expr><name pos:line="70" pos:column="9">metrics<pos:position pos:line="70" pos:column="16"/></name></expr></argument>)<pos:position pos:line="70" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="18"/></expr_stmt>
  <return pos:line="71" pos:column="3">return <expr><operator pos:line="71" pos:column="10">(<pos:position pos:line="71" pos:column="11"/></operator><literal type="number" pos:line="71" pos:column="11">0<pos:position pos:line="71" pos:column="12"/></literal><operator pos:line="71" pos:column="12">)<pos:position pos:line="71" pos:column="13"/></operator></expr>;<pos:position pos:line="71" pos:column="14"/></return>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

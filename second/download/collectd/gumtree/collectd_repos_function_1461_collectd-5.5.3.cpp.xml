<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1461_collectd-5.5.3.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">Event<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type><name pos:line="1" pos:column="15">riemann_value_to_protobuf<pos:position pos:line="1" pos:column="40"/></name><parameter_list pos:line="1" pos:column="40">(<parameter><decl><type><name><name pos:line="1" pos:column="41">struct<pos:position pos:line="1" pos:column="47"/></name> <name pos:line="1" pos:column="48">riemann_host<pos:position pos:line="1" pos:column="60"/></name></name> <specifier pos:line="1" pos:column="61">const<pos:position pos:line="1" pos:column="66"/></specifier> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">host<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>, <comment type="block" pos:line="1" pos:column="74">/* {{{ */</comment>
		<parameter><decl><type><name pos:line="2" pos:column="17">data_set_t<pos:position pos:line="2" pos:column="27"/></name> <specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">ds<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>,
		<parameter><decl><type><name pos:line="3" pos:column="17">value_list_t<pos:position pos:line="3" pos:column="29"/></name> <specifier pos:line="3" pos:column="30">const<pos:position pos:line="3" pos:column="35"/></specifier> <modifier pos:line="3" pos:column="36">*<pos:position pos:line="3" pos:column="37"/></modifier></type><name pos:line="3" pos:column="37">vl<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="41">size_t<pos:position pos:line="3" pos:column="47"/></name></type> <name pos:line="3" pos:column="48">index<pos:position pos:line="3" pos:column="53"/></name></decl></parameter>,
					 <parameter><decl><type><name pos:line="4" pos:column="42">gauge_t<pos:position pos:line="4" pos:column="49"/></name> <specifier pos:line="4" pos:column="50">const<pos:position pos:line="4" pos:column="55"/></specifier> <modifier pos:line="4" pos:column="56">*<pos:position pos:line="4" pos:column="57"/></modifier></type><name pos:line="4" pos:column="57">rates<pos:position pos:line="4" pos:column="62"/></name></decl></parameter>,
					 <parameter><decl><type><name pos:line="5" pos:column="42">int<pos:position pos:line="5" pos:column="45"/></name></type> <name pos:line="5" pos:column="46">status<pos:position pos:line="5" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="53"/></parameter_list>
<block pos:line="6" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">Event<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">event<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">name_buffer<pos:position pos:line="8" pos:column="25"/></name><index pos:line="8" pos:column="25">[<expr><literal type="number" pos:line="8" pos:column="26">5<pos:position pos:line="8" pos:column="27"/></literal> <operator pos:line="8" pos:column="28">*<pos:position pos:line="8" pos:column="29"/></operator> <name pos:line="8" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="8" pos:column="47"/></name></expr>]<pos:position pos:line="8" pos:column="48"/></index></name></decl>;<pos:position pos:line="8" pos:column="49"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name></type> <name><name pos:line="9" pos:column="14">service_buffer<pos:position pos:line="9" pos:column="28"/></name><index pos:line="9" pos:column="28">[<expr><literal type="number" pos:line="9" pos:column="29">6<pos:position pos:line="9" pos:column="30"/></literal> <operator pos:line="9" pos:column="31">*<pos:position pos:line="9" pos:column="32"/></operator> <name pos:line="9" pos:column="33">DATA_MAX_NAME_LEN<pos:position pos:line="9" pos:column="50"/></name></expr>]<pos:position pos:line="9" pos:column="51"/></index></name></decl>;<pos:position pos:line="9" pos:column="52"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="10" pos:column="9">double<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">ttl<pos:position pos:line="10" pos:column="19"/></name></decl>;<pos:position pos:line="10" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">i<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

	<expr_stmt><expr><name pos:line="13" pos:column="9">event<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">=<pos:position pos:line="13" pos:column="16"/></operator> <call><name pos:line="13" pos:column="17">malloc<pos:position pos:line="13" pos:column="23"/></name> <argument_list pos:line="13" pos:column="24">(<argument><expr><sizeof pos:line="13" pos:column="25">sizeof <argument_list pos:line="13" pos:column="32">(<argument><expr><operator pos:line="13" pos:column="33">*<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">event<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
	<if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">event<pos:position pos:line="14" pos:column="18"/></name> <operator pos:line="14" pos:column="19">==<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">NULL<pos:position pos:line="14" pos:column="26"/></name></expr>)<pos:position pos:line="14" pos:column="27"/></condition><then pos:line="14" pos:column="27">
	<block pos:line="15" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="16" pos:column="17">ERROR<pos:position pos:line="16" pos:column="22"/></name> <argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="string" pos:line="16" pos:column="24">"write_riemann plugin: malloc failed."<pos:position pos:line="16" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="64"/></expr_stmt>
		<return pos:line="17" pos:column="17">return <expr><operator pos:line="17" pos:column="24">(<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">)<pos:position pos:line="17" pos:column="30"/></operator></expr>;<pos:position pos:line="17" pos:column="31"/></return>
	}<pos:position pos:line="18" pos:column="10"/></block></then></if>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">memset<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><name pos:line="19" pos:column="17">event<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="27">sizeof <argument_list pos:line="19" pos:column="34">(<argument><expr><operator pos:line="19" pos:column="35">*<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">event<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">event__init<pos:position pos:line="20" pos:column="20"/></name> <argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">event<pos:position pos:line="20" pos:column="27"/></name></expr></argument>)<pos:position pos:line="20" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="22" pos:column="9">event<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">host<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">strdup<pos:position pos:line="22" pos:column="29"/></name> <argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">vl<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">-&gt;<pos:position pos:line="22" pos:column="38"/></operator><name pos:line="22" pos:column="35">host<pos:position pos:line="22" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="23" pos:column="9">event<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">time<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">CDTIME_T_TO_TIME_T<pos:position pos:line="23" pos:column="41"/></name> <argument_list pos:line="23" pos:column="42">(<argument><expr><name><name pos:line="23" pos:column="43">vl<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">-&gt;<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="47">time<pos:position pos:line="23" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="24" pos:column="9">event<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">has_time<pos:position pos:line="24" pos:column="24"/></name></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="number" pos:line="24" pos:column="27">1<pos:position pos:line="24" pos:column="28"/></literal></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>

	<if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">host<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">-&gt;<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="19">check_thresholds<pos:position pos:line="26" pos:column="35"/></name></name></expr>)<pos:position pos:line="26" pos:column="36"/></condition><then pos:line="26" pos:column="36"> <block pos:line="26" pos:column="37">{
		<switch pos:line="27" pos:column="17">switch <condition pos:line="27" pos:column="24">(<expr><name pos:line="27" pos:column="25">status<pos:position pos:line="27" pos:column="31"/></name></expr>)<pos:position pos:line="27" pos:column="32"/></condition> <block pos:line="27" pos:column="33">{
			<case pos:line="28" pos:column="25">case <expr><name pos:line="28" pos:column="30">STATE_OKAY<pos:position pos:line="28" pos:column="40"/></name></expr>:<pos:position pos:line="28" pos:column="41"/></case>
				<expr_stmt><expr><name><name pos:line="29" pos:column="33">event<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">-&gt;<pos:position pos:line="29" pos:column="43"/></operator><name pos:line="29" pos:column="40">state<pos:position pos:line="29" pos:column="45"/></name></name> <operator pos:line="29" pos:column="46">=<pos:position pos:line="29" pos:column="47"/></operator> <call><name pos:line="29" pos:column="48">strdup<pos:position pos:line="29" pos:column="54"/></name><argument_list pos:line="29" pos:column="54">(<argument><expr><literal type="string" pos:line="29" pos:column="55">"ok"<pos:position pos:line="29" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>
				<break pos:line="30" pos:column="33">break;<pos:position pos:line="30" pos:column="39"/></break>
			<case pos:line="31" pos:column="25">case <expr><name pos:line="31" pos:column="30">STATE_ERROR<pos:position pos:line="31" pos:column="41"/></name></expr>:<pos:position pos:line="31" pos:column="42"/></case>
				<expr_stmt><expr><name><name pos:line="32" pos:column="33">event<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">-&gt;<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="40">state<pos:position pos:line="32" pos:column="45"/></name></name> <operator pos:line="32" pos:column="46">=<pos:position pos:line="32" pos:column="47"/></operator> <call><name pos:line="32" pos:column="48">strdup<pos:position pos:line="32" pos:column="54"/></name><argument_list pos:line="32" pos:column="54">(<argument><expr><literal type="string" pos:line="32" pos:column="55">"critical"<pos:position pos:line="32" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>
				<break pos:line="33" pos:column="33">break;<pos:position pos:line="33" pos:column="39"/></break>
			<case pos:line="34" pos:column="25">case <expr><name pos:line="34" pos:column="30">STATE_WARNING<pos:position pos:line="34" pos:column="43"/></name></expr>:<pos:position pos:line="34" pos:column="44"/></case>
				<expr_stmt><expr><name><name pos:line="35" pos:column="33">event<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">-&gt;<pos:position pos:line="35" pos:column="43"/></operator><name pos:line="35" pos:column="40">state<pos:position pos:line="35" pos:column="45"/></name></name> <operator pos:line="35" pos:column="46">=<pos:position pos:line="35" pos:column="47"/></operator> <call><name pos:line="35" pos:column="48">strdup<pos:position pos:line="35" pos:column="54"/></name><argument_list pos:line="35" pos:column="54">(<argument><expr><literal type="string" pos:line="35" pos:column="55">"warning"<pos:position pos:line="35" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt>
				<break pos:line="36" pos:column="33">break;<pos:position pos:line="36" pos:column="39"/></break>
			<case pos:line="37" pos:column="25">case <expr><name pos:line="37" pos:column="30">STATE_MISSING<pos:position pos:line="37" pos:column="43"/></name></expr>:<pos:position pos:line="37" pos:column="44"/></case>
				<expr_stmt><expr><name><name pos:line="38" pos:column="33">event<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">state<pos:position pos:line="38" pos:column="45"/></name></name> <operator pos:line="38" pos:column="46">=<pos:position pos:line="38" pos:column="47"/></operator> <call><name pos:line="38" pos:column="48">strdup<pos:position pos:line="38" pos:column="54"/></name><argument_list pos:line="38" pos:column="54">(<argument><expr><literal type="string" pos:line="38" pos:column="55">"unknown"<pos:position pos:line="38" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>
				<break pos:line="39" pos:column="33">break;<pos:position pos:line="39" pos:column="39"/></break>
		}<pos:position pos:line="40" pos:column="18"/></block></switch>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>

	<expr_stmt><expr><name pos:line="43" pos:column="9">ttl<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <call><name pos:line="43" pos:column="15">CDTIME_T_TO_DOUBLE<pos:position pos:line="43" pos:column="33"/></name> <argument_list pos:line="43" pos:column="34">(<argument><expr><name><name pos:line="43" pos:column="35">vl<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">interval<pos:position pos:line="43" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="48"/></argument_list></call> <operator pos:line="43" pos:column="49">*<pos:position pos:line="43" pos:column="50"/></operator> <name><name pos:line="43" pos:column="51">host<pos:position pos:line="43" pos:column="55"/></name><operator pos:line="43" pos:column="55">-&gt;<pos:position pos:line="43" pos:column="60"/></operator><name pos:line="43" pos:column="57">ttl_factor<pos:position pos:line="43" pos:column="67"/></name></name></expr>;<pos:position pos:line="43" pos:column="68"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="44" pos:column="9">event<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">ttl<pos:position pos:line="44" pos:column="19"/></name></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <operator pos:line="44" pos:column="22">(<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">float<pos:position pos:line="44" pos:column="28"/></name><operator pos:line="44" pos:column="28">)<pos:position pos:line="44" pos:column="29"/></operator> <name pos:line="44" pos:column="30">ttl<pos:position pos:line="44" pos:column="33"/></name></expr>;<pos:position pos:line="44" pos:column="34"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">event<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">has_ttl<pos:position pos:line="45" pos:column="23"/></name></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <literal type="number" pos:line="45" pos:column="26">1<pos:position pos:line="45" pos:column="27"/></literal></expr>;<pos:position pos:line="45" pos:column="28"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="47" pos:column="9">riemann_event_add_attribute<pos:position pos:line="47" pos:column="36"/></name> <argument_list pos:line="47" pos:column="37">(<argument><expr><name pos:line="47" pos:column="38">event<pos:position pos:line="47" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="45">"plugin"<pos:position pos:line="47" pos:column="53"/></literal></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="55">vl<pos:position pos:line="47" pos:column="57"/></name><operator pos:line="47" pos:column="57">-&gt;<pos:position pos:line="47" pos:column="62"/></operator><name pos:line="47" pos:column="59">plugin<pos:position pos:line="47" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="67"/></expr_stmt>
	<if pos:line="48" pos:column="9">if <condition pos:line="48" pos:column="12">(<expr><name><name pos:line="48" pos:column="13">vl<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="17">plugin_instance<pos:position pos:line="48" pos:column="32"/></name><index pos:line="48" pos:column="32">[<expr><literal type="number" pos:line="48" pos:column="33">0<pos:position pos:line="48" pos:column="34"/></literal></expr>]<pos:position pos:line="48" pos:column="35"/></index></name> <operator pos:line="48" pos:column="36">!=<pos:position pos:line="48" pos:column="38"/></operator> <literal type="number" pos:line="48" pos:column="39">0<pos:position pos:line="48" pos:column="40"/></literal></expr>)<pos:position pos:line="48" pos:column="41"/></condition><then pos:line="48" pos:column="41">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="17">riemann_event_add_attribute<pos:position pos:line="49" pos:column="44"/></name> <argument_list pos:line="49" pos:column="45">(<argument><expr><name pos:line="49" pos:column="46">event<pos:position pos:line="49" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="53">"plugin_instance"<pos:position pos:line="49" pos:column="70"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="50" pos:column="33">vl<pos:position pos:line="50" pos:column="35"/></name><operator pos:line="50" pos:column="35">-&gt;<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="37">plugin_instance<pos:position pos:line="50" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt></block></then></if>

	<expr_stmt><expr><call><name pos:line="52" pos:column="9">riemann_event_add_attribute<pos:position pos:line="52" pos:column="36"/></name> <argument_list pos:line="52" pos:column="37">(<argument><expr><name pos:line="52" pos:column="38">event<pos:position pos:line="52" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="45">"type"<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="53">vl<pos:position pos:line="52" pos:column="55"/></name><operator pos:line="52" pos:column="55">-&gt;<pos:position pos:line="52" pos:column="60"/></operator><name pos:line="52" pos:column="57">type<pos:position pos:line="52" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="63"/></expr_stmt>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">vl<pos:position pos:line="53" pos:column="15"/></name><operator pos:line="53" pos:column="15">-&gt;<pos:position pos:line="53" pos:column="20"/></operator><name pos:line="53" pos:column="17">type_instance<pos:position pos:line="53" pos:column="30"/></name><index pos:line="53" pos:column="30">[<expr><literal type="number" pos:line="53" pos:column="31">0<pos:position pos:line="53" pos:column="32"/></literal></expr>]<pos:position pos:line="53" pos:column="33"/></index></name> <operator pos:line="53" pos:column="34">!=<pos:position pos:line="53" pos:column="36"/></operator> <literal type="number" pos:line="53" pos:column="37">0<pos:position pos:line="53" pos:column="38"/></literal></expr>)<pos:position pos:line="53" pos:column="39"/></condition><then pos:line="53" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="17">riemann_event_add_attribute<pos:position pos:line="54" pos:column="44"/></name> <argument_list pos:line="54" pos:column="45">(<argument><expr><name pos:line="54" pos:column="46">event<pos:position pos:line="54" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="53">"type_instance"<pos:position pos:line="54" pos:column="68"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="55" pos:column="33">vl<pos:position pos:line="55" pos:column="35"/></name><operator pos:line="55" pos:column="35">-&gt;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="37">type_instance<pos:position pos:line="55" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt></block></then></if>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">(<pos:position pos:line="57" pos:column="14"/></operator><name><name pos:line="57" pos:column="14">ds<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">-&gt;<pos:position pos:line="57" pos:column="21"/></operator><name pos:line="57" pos:column="18">ds<pos:position pos:line="57" pos:column="20"/></name><index pos:line="57" pos:column="20">[<expr><name pos:line="57" pos:column="21">index<pos:position pos:line="57" pos:column="26"/></name></expr>]<pos:position pos:line="57" pos:column="27"/></index></name><operator pos:line="57" pos:column="27">.<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="28">type<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">!=<pos:position pos:line="57" pos:column="35"/></operator> <name pos:line="57" pos:column="36">DS_TYPE_GAUGE<pos:position pos:line="57" pos:column="49"/></name><operator pos:line="57" pos:column="49">)<pos:position pos:line="57" pos:column="50"/></operator> <operator pos:line="57" pos:column="51">&amp;&amp;<pos:position pos:line="57" pos:column="61"/></operator> <operator pos:line="57" pos:column="54">(<pos:position pos:line="57" pos:column="55"/></operator><name pos:line="57" pos:column="55">rates<pos:position pos:line="57" pos:column="60"/></name> <operator pos:line="57" pos:column="61">!=<pos:position pos:line="57" pos:column="63"/></operator> <name pos:line="57" pos:column="64">NULL<pos:position pos:line="57" pos:column="68"/></name><operator pos:line="57" pos:column="68">)<pos:position pos:line="57" pos:column="69"/></operator></expr>)<pos:position pos:line="57" pos:column="70"/></condition><then pos:line="57" pos:column="70">
	<block pos:line="58" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="59" pos:column="17">char<pos:position pos:line="59" pos:column="21"/></name></type> <name><name pos:line="59" pos:column="22">ds_type<pos:position pos:line="59" pos:column="29"/></name><index pos:line="59" pos:column="29">[<expr><name pos:line="59" pos:column="30">DATA_MAX_NAME_LEN<pos:position pos:line="59" pos:column="47"/></name></expr>]<pos:position pos:line="59" pos:column="48"/></index></name></decl>;<pos:position pos:line="59" pos:column="49"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="61" pos:column="17">ssnprintf<pos:position pos:line="61" pos:column="26"/></name> <argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">ds_type<pos:position pos:line="61" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="37">sizeof <argument_list pos:line="61" pos:column="44">(<argument><expr><name pos:line="61" pos:column="45">ds_type<pos:position pos:line="61" pos:column="52"/></name></expr></argument>)<pos:position pos:line="61" pos:column="53"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="55">"%s:rate"<pos:position pos:line="61" pos:column="64"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="62" pos:column="33">DS_TYPE_TO_STRING<pos:position pos:line="62" pos:column="50"/></name><argument_list pos:line="62" pos:column="50">(<argument><expr><name><name pos:line="62" pos:column="51">ds<pos:position pos:line="62" pos:column="53"/></name><operator pos:line="62" pos:column="53">-&gt;<pos:position pos:line="62" pos:column="58"/></operator><name pos:line="62" pos:column="55">ds<pos:position pos:line="62" pos:column="57"/></name><index pos:line="62" pos:column="57">[<expr><name pos:line="62" pos:column="58">index<pos:position pos:line="62" pos:column="63"/></name></expr>]<pos:position pos:line="62" pos:column="64"/></index></name><operator pos:line="62" pos:column="64">.<pos:position pos:line="62" pos:column="65"/></operator><name pos:line="62" pos:column="65">type<pos:position pos:line="62" pos:column="69"/></name></expr></argument>)<pos:position pos:line="62" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="72"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="63" pos:column="17">riemann_event_add_attribute<pos:position pos:line="63" pos:column="44"/></name> <argument_list pos:line="63" pos:column="45">(<argument><expr><name pos:line="63" pos:column="46">event<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="53">"ds_type"<pos:position pos:line="63" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="63" pos:column="64">ds_type<pos:position pos:line="63" pos:column="71"/></name></expr></argument>)<pos:position pos:line="63" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="73"/></expr_stmt>
	}<pos:position pos:line="64" pos:column="10"/></block></then>
	<else pos:line="65" pos:column="9">else
	<block pos:line="66" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="67" pos:column="17">riemann_event_add_attribute<pos:position pos:line="67" pos:column="44"/></name> <argument_list pos:line="67" pos:column="45">(<argument><expr><name pos:line="67" pos:column="46">event<pos:position pos:line="67" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="53">"ds_type"<pos:position pos:line="67" pos:column="62"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="68" pos:column="33">DS_TYPE_TO_STRING<pos:position pos:line="68" pos:column="50"/></name><argument_list pos:line="68" pos:column="50">(<argument><expr><name><name pos:line="68" pos:column="51">ds<pos:position pos:line="68" pos:column="53"/></name><operator pos:line="68" pos:column="53">-&gt;<pos:position pos:line="68" pos:column="58"/></operator><name pos:line="68" pos:column="55">ds<pos:position pos:line="68" pos:column="57"/></name><index pos:line="68" pos:column="57">[<expr><name pos:line="68" pos:column="58">index<pos:position pos:line="68" pos:column="63"/></name></expr>]<pos:position pos:line="68" pos:column="64"/></index></name><operator pos:line="68" pos:column="64">.<pos:position pos:line="68" pos:column="65"/></operator><name pos:line="68" pos:column="65">type<pos:position pos:line="68" pos:column="69"/></name></expr></argument>)<pos:position pos:line="68" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="72"/></expr_stmt>
	}<pos:position pos:line="69" pos:column="10"/></block></else></if>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">riemann_event_add_attribute<pos:position pos:line="70" pos:column="36"/></name> <argument_list pos:line="70" pos:column="37">(<argument><expr><name pos:line="70" pos:column="38">event<pos:position pos:line="70" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="45">"ds_name"<pos:position pos:line="70" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="70" pos:column="56">ds<pos:position pos:line="70" pos:column="58"/></name><operator pos:line="70" pos:column="58">-&gt;<pos:position pos:line="70" pos:column="63"/></operator><name pos:line="70" pos:column="60">ds<pos:position pos:line="70" pos:column="62"/></name><index pos:line="70" pos:column="62">[<expr><name pos:line="70" pos:column="63">index<pos:position pos:line="70" pos:column="68"/></name></expr>]<pos:position pos:line="70" pos:column="69"/></index></name><operator pos:line="70" pos:column="69">.<pos:position pos:line="70" pos:column="70"/></operator><name pos:line="70" pos:column="70">name<pos:position pos:line="70" pos:column="74"/></name></expr></argument>)<pos:position pos:line="70" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="76"/></expr_stmt>
	<block pos:line="71" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="72" pos:column="17">char<pos:position pos:line="72" pos:column="21"/></name></type> <name><name pos:line="72" pos:column="22">ds_index<pos:position pos:line="72" pos:column="30"/></name><index pos:line="72" pos:column="30">[<expr><name pos:line="72" pos:column="31">DATA_MAX_NAME_LEN<pos:position pos:line="72" pos:column="48"/></name></expr>]<pos:position pos:line="72" pos:column="49"/></index></name></decl>;<pos:position pos:line="72" pos:column="50"/></decl_stmt>

		<expr_stmt><expr><call><name pos:line="74" pos:column="17">ssnprintf<pos:position pos:line="74" pos:column="26"/></name> <argument_list pos:line="74" pos:column="27">(<argument><expr><name pos:line="74" pos:column="28">ds_index<pos:position pos:line="74" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="74" pos:column="38">sizeof <argument_list pos:line="74" pos:column="45">(<argument><expr><name pos:line="74" pos:column="46">ds_index<pos:position pos:line="74" pos:column="54"/></name></expr></argument>)<pos:position pos:line="74" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="57">"%zu"<pos:position pos:line="74" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="74" pos:column="64">index<pos:position pos:line="74" pos:column="69"/></name></expr></argument>)<pos:position pos:line="74" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="71"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="75" pos:column="17">riemann_event_add_attribute<pos:position pos:line="75" pos:column="44"/></name> <argument_list pos:line="75" pos:column="45">(<argument><expr><name pos:line="75" pos:column="46">event<pos:position pos:line="75" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="53">"ds_index"<pos:position pos:line="75" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="65">ds_index<pos:position pos:line="75" pos:column="73"/></name></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="75"/></expr_stmt>
	}<pos:position pos:line="76" pos:column="10"/></block>

	<for pos:line="78" pos:column="9">for <control pos:line="78" pos:column="13">(<init><expr><name pos:line="78" pos:column="14">i<pos:position pos:line="78" pos:column="15"/></name> <operator pos:line="78" pos:column="16">=<pos:position pos:line="78" pos:column="17"/></operator> <literal type="number" pos:line="78" pos:column="18">0<pos:position pos:line="78" pos:column="19"/></literal></expr>;<pos:position pos:line="78" pos:column="20"/></init> <condition><expr><name pos:line="78" pos:column="21">i<pos:position pos:line="78" pos:column="22"/></name> <operator pos:line="78" pos:column="23">&lt;<pos:position pos:line="78" pos:column="27"/></operator> <name pos:line="78" pos:column="25">riemann_attrs_num<pos:position pos:line="78" pos:column="42"/></name></expr>;<pos:position pos:line="78" pos:column="43"/></condition> <incr><expr><name pos:line="78" pos:column="44">i<pos:position pos:line="78" pos:column="45"/></name> <operator pos:line="78" pos:column="46">+=<pos:position pos:line="78" pos:column="48"/></operator> <literal type="number" pos:line="78" pos:column="49">2<pos:position pos:line="78" pos:column="50"/></literal></expr></incr>)<pos:position pos:line="78" pos:column="51"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">riemann_event_add_attribute<pos:position pos:line="79" pos:column="44"/></name><argument_list pos:line="79" pos:column="44">(<argument><expr><name pos:line="79" pos:column="45">event<pos:position pos:line="79" pos:column="50"/></name></expr></argument>,
					    <argument><expr><name><name pos:line="80" pos:column="45">riemann_attrs<pos:position pos:line="80" pos:column="58"/></name><index pos:line="80" pos:column="58">[<expr><name pos:line="80" pos:column="59">i<pos:position pos:line="80" pos:column="60"/></name></expr>]<pos:position pos:line="80" pos:column="61"/></index></name></expr></argument>,
					    <argument><expr><name><name pos:line="81" pos:column="45">riemann_attrs<pos:position pos:line="81" pos:column="58"/></name><index pos:line="81" pos:column="58">[<expr><name pos:line="81" pos:column="59">i<pos:position pos:line="81" pos:column="60"/></name> <operator pos:line="81" pos:column="61">+<pos:position pos:line="81" pos:column="62"/></operator><literal type="number" pos:line="81" pos:column="62">1<pos:position pos:line="81" pos:column="63"/></literal></expr>]<pos:position pos:line="81" pos:column="64"/></index></name></expr></argument>)<pos:position pos:line="81" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="66"/></expr_stmt></block></for>

	<for pos:line="83" pos:column="9">for <control pos:line="83" pos:column="13">(<init><expr><name pos:line="83" pos:column="14">i<pos:position pos:line="83" pos:column="15"/></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <literal type="number" pos:line="83" pos:column="18">0<pos:position pos:line="83" pos:column="19"/></literal></expr>;<pos:position pos:line="83" pos:column="20"/></init> <condition><expr><name pos:line="83" pos:column="21">i<pos:position pos:line="83" pos:column="22"/></name> <operator pos:line="83" pos:column="23">&lt;<pos:position pos:line="83" pos:column="27"/></operator> <name pos:line="83" pos:column="25">riemann_tags_num<pos:position pos:line="83" pos:column="41"/></name></expr>;<pos:position pos:line="83" pos:column="42"/></condition> <incr><expr><name pos:line="83" pos:column="43">i<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">++<pos:position pos:line="83" pos:column="46"/></operator></expr></incr>)<pos:position pos:line="83" pos:column="47"/></control>
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="84" pos:column="17">riemann_event_add_tag<pos:position pos:line="84" pos:column="38"/></name> <argument_list pos:line="84" pos:column="39">(<argument><expr><name pos:line="84" pos:column="40">event<pos:position pos:line="84" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="84" pos:column="47">riemann_tags<pos:position pos:line="84" pos:column="59"/></name><index pos:line="84" pos:column="59">[<expr><name pos:line="84" pos:column="60">i<pos:position pos:line="84" pos:column="61"/></name></expr>]<pos:position pos:line="84" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="84" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="64"/></expr_stmt></block></for>

	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name><name pos:line="86" pos:column="13">ds<pos:position pos:line="86" pos:column="15"/></name><operator pos:line="86" pos:column="15">-&gt;<pos:position pos:line="86" pos:column="20"/></operator><name pos:line="86" pos:column="17">ds<pos:position pos:line="86" pos:column="19"/></name><index pos:line="86" pos:column="19">[<expr><name pos:line="86" pos:column="20">index<pos:position pos:line="86" pos:column="25"/></name></expr>]<pos:position pos:line="86" pos:column="26"/></index></name><operator pos:line="86" pos:column="26">.<pos:position pos:line="86" pos:column="27"/></operator><name pos:line="86" pos:column="27">type<pos:position pos:line="86" pos:column="31"/></name> <operator pos:line="86" pos:column="32">==<pos:position pos:line="86" pos:column="34"/></operator> <name pos:line="86" pos:column="35">DS_TYPE_GAUGE<pos:position pos:line="86" pos:column="48"/></name></expr>)<pos:position pos:line="86" pos:column="49"/></condition><then pos:line="86" pos:column="49">
	<block pos:line="87" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="88" pos:column="17">event<pos:position pos:line="88" pos:column="22"/></name><operator pos:line="88" pos:column="22">-&gt;<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="24">has_metric_d<pos:position pos:line="88" pos:column="36"/></name></name> <operator pos:line="88" pos:column="37">=<pos:position pos:line="88" pos:column="38"/></operator> <literal type="number" pos:line="88" pos:column="39">1<pos:position pos:line="88" pos:column="40"/></literal></expr>;<pos:position pos:line="88" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="89" pos:column="17">event<pos:position pos:line="89" pos:column="22"/></name><operator pos:line="89" pos:column="22">-&gt;<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="24">metric_d<pos:position pos:line="89" pos:column="32"/></name></name> <operator pos:line="89" pos:column="33">=<pos:position pos:line="89" pos:column="34"/></operator> <operator pos:line="89" pos:column="35">(<pos:position pos:line="89" pos:column="36"/></operator><name pos:line="89" pos:column="36">double<pos:position pos:line="89" pos:column="42"/></name><operator pos:line="89" pos:column="42">)<pos:position pos:line="89" pos:column="43"/></operator> <name><name pos:line="89" pos:column="44">vl<pos:position pos:line="89" pos:column="46"/></name><operator pos:line="89" pos:column="46">-&gt;<pos:position pos:line="89" pos:column="51"/></operator><name pos:line="89" pos:column="48">values<pos:position pos:line="89" pos:column="54"/></name><index pos:line="89" pos:column="54">[<expr><name pos:line="89" pos:column="55">index<pos:position pos:line="89" pos:column="60"/></name></expr>]<pos:position pos:line="89" pos:column="61"/></index></name><operator pos:line="89" pos:column="61">.<pos:position pos:line="89" pos:column="62"/></operator><name pos:line="89" pos:column="62">gauge<pos:position pos:line="89" pos:column="67"/></name></expr>;<pos:position pos:line="89" pos:column="68"/></expr_stmt>
	}<pos:position pos:line="90" pos:column="10"/></block></then>
	<elseif pos:line="91" pos:column="9">else <if pos:line="91" pos:column="14">if <condition pos:line="91" pos:column="17">(<expr><name pos:line="91" pos:column="18">rates<pos:position pos:line="91" pos:column="23"/></name> <operator pos:line="91" pos:column="24">!=<pos:position pos:line="91" pos:column="26"/></operator> <name pos:line="91" pos:column="27">NULL<pos:position pos:line="91" pos:column="31"/></name></expr>)<pos:position pos:line="91" pos:column="32"/></condition><then pos:line="91" pos:column="32">
	<block pos:line="92" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="93" pos:column="17">event<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">has_metric_d<pos:position pos:line="93" pos:column="36"/></name></name> <operator pos:line="93" pos:column="37">=<pos:position pos:line="93" pos:column="38"/></operator> <literal type="number" pos:line="93" pos:column="39">1<pos:position pos:line="93" pos:column="40"/></literal></expr>;<pos:position pos:line="93" pos:column="41"/></expr_stmt>
		<expr_stmt><expr><name><name pos:line="94" pos:column="17">event<pos:position pos:line="94" pos:column="22"/></name><operator pos:line="94" pos:column="22">-&gt;<pos:position pos:line="94" pos:column="27"/></operator><name pos:line="94" pos:column="24">metric_d<pos:position pos:line="94" pos:column="32"/></name></name> <operator pos:line="94" pos:column="33">=<pos:position pos:line="94" pos:column="34"/></operator> <operator pos:line="94" pos:column="35">(<pos:position pos:line="94" pos:column="36"/></operator><name pos:line="94" pos:column="36">double<pos:position pos:line="94" pos:column="42"/></name><operator pos:line="94" pos:column="42">)<pos:position pos:line="94" pos:column="43"/></operator> <name><name pos:line="94" pos:column="44">rates<pos:position pos:line="94" pos:column="49"/></name><index pos:line="94" pos:column="49">[<expr><name pos:line="94" pos:column="50">index<pos:position pos:line="94" pos:column="55"/></name></expr>]<pos:position pos:line="94" pos:column="56"/></index></name></expr>;<pos:position pos:line="94" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="95" pos:column="10"/></block></then></if></elseif>
	<else pos:line="96" pos:column="9">else
	<block pos:line="97" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="98" pos:column="17">event<pos:position pos:line="98" pos:column="22"/></name><operator pos:line="98" pos:column="22">-&gt;<pos:position pos:line="98" pos:column="27"/></operator><name pos:line="98" pos:column="24">has_metric_sint64<pos:position pos:line="98" pos:column="41"/></name></name> <operator pos:line="98" pos:column="42">=<pos:position pos:line="98" pos:column="43"/></operator> <literal type="number" pos:line="98" pos:column="44">1<pos:position pos:line="98" pos:column="45"/></literal></expr>;<pos:position pos:line="98" pos:column="46"/></expr_stmt>
		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><name><name pos:line="99" pos:column="21">ds<pos:position pos:line="99" pos:column="23"/></name><operator pos:line="99" pos:column="23">-&gt;<pos:position pos:line="99" pos:column="28"/></operator><name pos:line="99" pos:column="25">ds<pos:position pos:line="99" pos:column="27"/></name><index pos:line="99" pos:column="27">[<expr><name pos:line="99" pos:column="28">index<pos:position pos:line="99" pos:column="33"/></name></expr>]<pos:position pos:line="99" pos:column="34"/></index></name><operator pos:line="99" pos:column="34">.<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="35">type<pos:position pos:line="99" pos:column="39"/></name> <operator pos:line="99" pos:column="40">==<pos:position pos:line="99" pos:column="42"/></operator> <name pos:line="99" pos:column="43">DS_TYPE_DERIVE<pos:position pos:line="99" pos:column="57"/></name></expr>)<pos:position pos:line="99" pos:column="58"/></condition><then pos:line="99" pos:column="58">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="100" pos:column="25">event<pos:position pos:line="100" pos:column="30"/></name><operator pos:line="100" pos:column="30">-&gt;<pos:position pos:line="100" pos:column="35"/></operator><name pos:line="100" pos:column="32">metric_sint64<pos:position pos:line="100" pos:column="45"/></name></name> <operator pos:line="100" pos:column="46">=<pos:position pos:line="100" pos:column="47"/></operator> <operator pos:line="100" pos:column="48">(<pos:position pos:line="100" pos:column="49"/></operator><name pos:line="100" pos:column="49">int64_t<pos:position pos:line="100" pos:column="56"/></name><operator pos:line="100" pos:column="56">)<pos:position pos:line="100" pos:column="57"/></operator> <name><name pos:line="100" pos:column="58">vl<pos:position pos:line="100" pos:column="60"/></name><operator pos:line="100" pos:column="60">-&gt;<pos:position pos:line="100" pos:column="65"/></operator><name pos:line="100" pos:column="62">values<pos:position pos:line="100" pos:column="68"/></name><index pos:line="100" pos:column="68">[<expr><name pos:line="100" pos:column="69">index<pos:position pos:line="100" pos:column="74"/></name></expr>]<pos:position pos:line="100" pos:column="75"/></index></name><operator pos:line="100" pos:column="75">.<pos:position pos:line="100" pos:column="76"/></operator><name pos:line="100" pos:column="76">derive<pos:position pos:line="100" pos:column="82"/></name></expr>;<pos:position pos:line="100" pos:column="83"/></expr_stmt></block></then>
		<elseif pos:line="101" pos:column="17">else <if pos:line="101" pos:column="22">if <condition pos:line="101" pos:column="25">(<expr><name><name pos:line="101" pos:column="26">ds<pos:position pos:line="101" pos:column="28"/></name><operator pos:line="101" pos:column="28">-&gt;<pos:position pos:line="101" pos:column="33"/></operator><name pos:line="101" pos:column="30">ds<pos:position pos:line="101" pos:column="32"/></name><index pos:line="101" pos:column="32">[<expr><name pos:line="101" pos:column="33">index<pos:position pos:line="101" pos:column="38"/></name></expr>]<pos:position pos:line="101" pos:column="39"/></index></name><operator pos:line="101" pos:column="39">.<pos:position pos:line="101" pos:column="40"/></operator><name pos:line="101" pos:column="40">type<pos:position pos:line="101" pos:column="44"/></name> <operator pos:line="101" pos:column="45">==<pos:position pos:line="101" pos:column="47"/></operator> <name pos:line="101" pos:column="48">DS_TYPE_ABSOLUTE<pos:position pos:line="101" pos:column="64"/></name></expr>)<pos:position pos:line="101" pos:column="65"/></condition><then pos:line="101" pos:column="65">
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="102" pos:column="25">event<pos:position pos:line="102" pos:column="30"/></name><operator pos:line="102" pos:column="30">-&gt;<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="32">metric_sint64<pos:position pos:line="102" pos:column="45"/></name></name> <operator pos:line="102" pos:column="46">=<pos:position pos:line="102" pos:column="47"/></operator> <operator pos:line="102" pos:column="48">(<pos:position pos:line="102" pos:column="49"/></operator><name pos:line="102" pos:column="49">int64_t<pos:position pos:line="102" pos:column="56"/></name><operator pos:line="102" pos:column="56">)<pos:position pos:line="102" pos:column="57"/></operator> <name><name pos:line="102" pos:column="58">vl<pos:position pos:line="102" pos:column="60"/></name><operator pos:line="102" pos:column="60">-&gt;<pos:position pos:line="102" pos:column="65"/></operator><name pos:line="102" pos:column="62">values<pos:position pos:line="102" pos:column="68"/></name><index pos:line="102" pos:column="68">[<expr><name pos:line="102" pos:column="69">index<pos:position pos:line="102" pos:column="74"/></name></expr>]<pos:position pos:line="102" pos:column="75"/></index></name><operator pos:line="102" pos:column="75">.<pos:position pos:line="102" pos:column="76"/></operator><name pos:line="102" pos:column="76">absolute<pos:position pos:line="102" pos:column="84"/></name></expr>;<pos:position pos:line="102" pos:column="85"/></expr_stmt></block></then></if></elseif>
		<else pos:line="103" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><name><name pos:line="104" pos:column="25">event<pos:position pos:line="104" pos:column="30"/></name><operator pos:line="104" pos:column="30">-&gt;<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="32">metric_sint64<pos:position pos:line="104" pos:column="45"/></name></name> <operator pos:line="104" pos:column="46">=<pos:position pos:line="104" pos:column="47"/></operator> <operator pos:line="104" pos:column="48">(<pos:position pos:line="104" pos:column="49"/></operator><name pos:line="104" pos:column="49">int64_t<pos:position pos:line="104" pos:column="56"/></name><operator pos:line="104" pos:column="56">)<pos:position pos:line="104" pos:column="57"/></operator> <name><name pos:line="104" pos:column="58">vl<pos:position pos:line="104" pos:column="60"/></name><operator pos:line="104" pos:column="60">-&gt;<pos:position pos:line="104" pos:column="65"/></operator><name pos:line="104" pos:column="62">values<pos:position pos:line="104" pos:column="68"/></name><index pos:line="104" pos:column="68">[<expr><name pos:line="104" pos:column="69">index<pos:position pos:line="104" pos:column="74"/></name></expr>]<pos:position pos:line="104" pos:column="75"/></index></name><operator pos:line="104" pos:column="75">.<pos:position pos:line="104" pos:column="76"/></operator><name pos:line="104" pos:column="76">counter<pos:position pos:line="104" pos:column="83"/></name></expr>;<pos:position pos:line="104" pos:column="84"/></expr_stmt></block></else></if>
	}<pos:position pos:line="105" pos:column="10"/></block></else></if>

	<expr_stmt><expr><call><name pos:line="107" pos:column="9">format_name<pos:position pos:line="107" pos:column="20"/></name> <argument_list pos:line="107" pos:column="21">(<argument><expr><name pos:line="107" pos:column="22">name_buffer<pos:position pos:line="107" pos:column="33"/></name></expr></argument>, <argument><expr><sizeof pos:line="107" pos:column="35">sizeof <argument_list pos:line="107" pos:column="42">(<argument><expr><name pos:line="107" pos:column="43">name_buffer<pos:position pos:line="107" pos:column="54"/></name></expr></argument>)<pos:position pos:line="107" pos:column="55"/></argument_list></sizeof></expr></argument>,
			<comment type="block" pos:line="108" pos:column="25">/* host = */</comment> <argument><expr><literal type="string" pos:line="108" pos:column="38">""<pos:position pos:line="108" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="42">vl<pos:position pos:line="108" pos:column="44"/></name><operator pos:line="108" pos:column="44">-&gt;<pos:position pos:line="108" pos:column="49"/></operator><name pos:line="108" pos:column="46">plugin<pos:position pos:line="108" pos:column="52"/></name></name></expr></argument>, <argument><expr><name><name pos:line="108" pos:column="54">vl<pos:position pos:line="108" pos:column="56"/></name><operator pos:line="108" pos:column="56">-&gt;<pos:position pos:line="108" pos:column="61"/></operator><name pos:line="108" pos:column="58">plugin_instance<pos:position pos:line="108" pos:column="73"/></name></name></expr></argument>,
			<argument><expr><name><name pos:line="109" pos:column="25">vl<pos:position pos:line="109" pos:column="27"/></name><operator pos:line="109" pos:column="27">-&gt;<pos:position pos:line="109" pos:column="32"/></operator><name pos:line="109" pos:column="29">type<pos:position pos:line="109" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="109" pos:column="35">vl<pos:position pos:line="109" pos:column="37"/></name><operator pos:line="109" pos:column="37">-&gt;<pos:position pos:line="109" pos:column="42"/></operator><name pos:line="109" pos:column="39">type_instance<pos:position pos:line="109" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="109" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="54"/></expr_stmt>
	<if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><name><name pos:line="110" pos:column="13">host<pos:position pos:line="110" pos:column="17"/></name><operator pos:line="110" pos:column="17">-&gt;<pos:position pos:line="110" pos:column="22"/></operator><name pos:line="110" pos:column="19">always_append_ds<pos:position pos:line="110" pos:column="35"/></name></name> <operator pos:line="110" pos:column="36">||<pos:position pos:line="110" pos:column="38"/></operator> <operator pos:line="110" pos:column="39">(<pos:position pos:line="110" pos:column="40"/></operator><name><name pos:line="110" pos:column="40">ds<pos:position pos:line="110" pos:column="42"/></name><operator pos:line="110" pos:column="42">-&gt;<pos:position pos:line="110" pos:column="47"/></operator><name pos:line="110" pos:column="44">ds_num<pos:position pos:line="110" pos:column="50"/></name></name> <operator pos:line="110" pos:column="51">&gt;<pos:position pos:line="110" pos:column="55"/></operator> <literal type="number" pos:line="110" pos:column="53">1<pos:position pos:line="110" pos:column="54"/></literal><operator pos:line="110" pos:column="54">)<pos:position pos:line="110" pos:column="55"/></operator></expr>)<pos:position pos:line="110" pos:column="56"/></condition><then pos:line="110" pos:column="56">
	<block pos:line="111" pos:column="9">{
		<if pos:line="112" pos:column="17">if <condition pos:line="112" pos:column="20">(<expr><name><name pos:line="112" pos:column="21">host<pos:position pos:line="112" pos:column="25"/></name><operator pos:line="112" pos:column="25">-&gt;<pos:position pos:line="112" pos:column="30"/></operator><name pos:line="112" pos:column="27">event_service_prefix<pos:position pos:line="112" pos:column="47"/></name></name> <operator pos:line="112" pos:column="48">==<pos:position pos:line="112" pos:column="50"/></operator> <name pos:line="112" pos:column="51">NULL<pos:position pos:line="112" pos:column="55"/></name></expr>)<pos:position pos:line="112" pos:column="56"/></condition><then pos:line="112" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="113" pos:column="25">ssnprintf<pos:position pos:line="113" pos:column="34"/></name> <argument_list pos:line="113" pos:column="35">(<argument><expr><name pos:line="113" pos:column="36">service_buffer<pos:position pos:line="113" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="113" pos:column="52">sizeof <argument_list pos:line="113" pos:column="59">(<argument><expr><name pos:line="113" pos:column="60">service_buffer<pos:position pos:line="113" pos:column="74"/></name></expr></argument>)<pos:position pos:line="113" pos:column="75"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="77">"%s/%s"<pos:position pos:line="113" pos:column="84"/></literal></expr></argument>,
					<argument><expr><operator pos:line="114" pos:column="41">&amp;<pos:position pos:line="114" pos:column="46"/></operator><name><name pos:line="114" pos:column="42">name_buffer<pos:position pos:line="114" pos:column="53"/></name><index pos:line="114" pos:column="53">[<expr><literal type="number" pos:line="114" pos:column="54">1<pos:position pos:line="114" pos:column="55"/></literal></expr>]<pos:position pos:line="114" pos:column="56"/></index></name></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="58">ds<pos:position pos:line="114" pos:column="60"/></name><operator pos:line="114" pos:column="60">-&gt;<pos:position pos:line="114" pos:column="65"/></operator><name pos:line="114" pos:column="62">ds<pos:position pos:line="114" pos:column="64"/></name><index pos:line="114" pos:column="64">[<expr><name pos:line="114" pos:column="65">index<pos:position pos:line="114" pos:column="70"/></name></expr>]<pos:position pos:line="114" pos:column="71"/></index></name><operator pos:line="114" pos:column="71">.<pos:position pos:line="114" pos:column="72"/></operator><name pos:line="114" pos:column="72">name<pos:position pos:line="114" pos:column="76"/></name></expr></argument>)<pos:position pos:line="114" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="78"/></expr_stmt></block></then>
		<else pos:line="115" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="25">ssnprintf<pos:position pos:line="116" pos:column="34"/></name> <argument_list pos:line="116" pos:column="35">(<argument><expr><name pos:line="116" pos:column="36">service_buffer<pos:position pos:line="116" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="52">sizeof <argument_list pos:line="116" pos:column="59">(<argument><expr><name pos:line="116" pos:column="60">service_buffer<pos:position pos:line="116" pos:column="74"/></name></expr></argument>)<pos:position pos:line="116" pos:column="75"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="77">"%s%s/%s"<pos:position pos:line="116" pos:column="86"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="117" pos:column="41">host<pos:position pos:line="117" pos:column="45"/></name><operator pos:line="117" pos:column="45">-&gt;<pos:position pos:line="117" pos:column="50"/></operator><name pos:line="117" pos:column="47">event_service_prefix<pos:position pos:line="117" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="117" pos:column="69">&amp;<pos:position pos:line="117" pos:column="74"/></operator><name><name pos:line="117" pos:column="70">name_buffer<pos:position pos:line="117" pos:column="81"/></name><index pos:line="117" pos:column="81">[<expr><literal type="number" pos:line="117" pos:column="82">1<pos:position pos:line="117" pos:column="83"/></literal></expr>]<pos:position pos:line="117" pos:column="84"/></index></name></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="86">ds<pos:position pos:line="117" pos:column="88"/></name><operator pos:line="117" pos:column="88">-&gt;<pos:position pos:line="117" pos:column="93"/></operator><name pos:line="117" pos:column="90">ds<pos:position pos:line="117" pos:column="92"/></name><index pos:line="117" pos:column="92">[<expr><name pos:line="117" pos:column="93">index<pos:position pos:line="117" pos:column="98"/></name></expr>]<pos:position pos:line="117" pos:column="99"/></index></name><operator pos:line="117" pos:column="99">.<pos:position pos:line="117" pos:column="100"/></operator><name pos:line="117" pos:column="100">name<pos:position pos:line="117" pos:column="104"/></name></expr></argument>)<pos:position pos:line="117" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="106"/></expr_stmt></block></else></if>
	}<pos:position pos:line="118" pos:column="10"/></block></then>
	<else pos:line="119" pos:column="9">else
	<block pos:line="120" pos:column="9">{
		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><name><name pos:line="121" pos:column="21">host<pos:position pos:line="121" pos:column="25"/></name><operator pos:line="121" pos:column="25">-&gt;<pos:position pos:line="121" pos:column="30"/></operator><name pos:line="121" pos:column="27">event_service_prefix<pos:position pos:line="121" pos:column="47"/></name></name> <operator pos:line="121" pos:column="48">==<pos:position pos:line="121" pos:column="50"/></operator> <name pos:line="121" pos:column="51">NULL<pos:position pos:line="121" pos:column="55"/></name></expr>)<pos:position pos:line="121" pos:column="56"/></condition><then pos:line="121" pos:column="56">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="122" pos:column="25">sstrncpy<pos:position pos:line="122" pos:column="33"/></name> <argument_list pos:line="122" pos:column="34">(<argument><expr><name pos:line="122" pos:column="35">service_buffer<pos:position pos:line="122" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="122" pos:column="51">&amp;<pos:position pos:line="122" pos:column="56"/></operator><name><name pos:line="122" pos:column="52">name_buffer<pos:position pos:line="122" pos:column="63"/></name><index pos:line="122" pos:column="63">[<expr><literal type="number" pos:line="122" pos:column="64">1<pos:position pos:line="122" pos:column="65"/></literal></expr>]<pos:position pos:line="122" pos:column="66"/></index></name></expr></argument>, <argument><expr><sizeof pos:line="122" pos:column="68">sizeof <argument_list pos:line="122" pos:column="75">(<argument><expr><name pos:line="122" pos:column="76">service_buffer<pos:position pos:line="122" pos:column="90"/></name></expr></argument>)<pos:position pos:line="122" pos:column="91"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="122" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="93"/></expr_stmt></block></then>
		<else pos:line="123" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="124" pos:column="25">ssnprintf<pos:position pos:line="124" pos:column="34"/></name> <argument_list pos:line="124" pos:column="35">(<argument><expr><name pos:line="124" pos:column="36">service_buffer<pos:position pos:line="124" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="124" pos:column="52">sizeof <argument_list pos:line="124" pos:column="59">(<argument><expr><name pos:line="124" pos:column="60">service_buffer<pos:position pos:line="124" pos:column="74"/></name></expr></argument>)<pos:position pos:line="124" pos:column="75"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="77">"%s%s"<pos:position pos:line="124" pos:column="83"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="125" pos:column="41">host<pos:position pos:line="125" pos:column="45"/></name><operator pos:line="125" pos:column="45">-&gt;<pos:position pos:line="125" pos:column="50"/></operator><name pos:line="125" pos:column="47">event_service_prefix<pos:position pos:line="125" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="125" pos:column="69">&amp;<pos:position pos:line="125" pos:column="74"/></operator><name><name pos:line="125" pos:column="70">name_buffer<pos:position pos:line="125" pos:column="81"/></name><index pos:line="125" pos:column="81">[<expr><literal type="number" pos:line="125" pos:column="82">1<pos:position pos:line="125" pos:column="83"/></literal></expr>]<pos:position pos:line="125" pos:column="84"/></index></name></expr></argument>)<pos:position pos:line="125" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="86"/></expr_stmt></block></else></if>
	}<pos:position pos:line="126" pos:column="10"/></block></else></if>

	<expr_stmt><expr><name><name pos:line="128" pos:column="9">event<pos:position pos:line="128" pos:column="14"/></name><operator pos:line="128" pos:column="14">-&gt;<pos:position pos:line="128" pos:column="19"/></operator><name pos:line="128" pos:column="16">service<pos:position pos:line="128" pos:column="23"/></name></name> <operator pos:line="128" pos:column="24">=<pos:position pos:line="128" pos:column="25"/></operator> <call><name pos:line="128" pos:column="26">strdup<pos:position pos:line="128" pos:column="32"/></name> <argument_list pos:line="128" pos:column="33">(<argument><expr><name pos:line="128" pos:column="34">service_buffer<pos:position pos:line="128" pos:column="48"/></name></expr></argument>)<pos:position pos:line="128" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="50"/></expr_stmt>

	<expr_stmt><expr><call><name pos:line="130" pos:column="9">DEBUG<pos:position pos:line="130" pos:column="14"/></name> <argument_list pos:line="130" pos:column="15">(<argument><expr><literal type="string" pos:line="130" pos:column="16">"write_riemann plugin: Successfully created protobuf for metric: "<pos:position pos:line="130" pos:column="82"/></literal>
			<literal type="string" pos:line="131" pos:column="25">"host = \"%s\", service = \"%s\""<pos:position pos:line="131" pos:column="58"/></literal></expr></argument>,
			<argument><expr><name><name pos:line="132" pos:column="25">event<pos:position pos:line="132" pos:column="30"/></name><operator pos:line="132" pos:column="30">-&gt;<pos:position pos:line="132" pos:column="35"/></operator><name pos:line="132" pos:column="32">host<pos:position pos:line="132" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="132" pos:column="38">event<pos:position pos:line="132" pos:column="43"/></name><operator pos:line="132" pos:column="43">-&gt;<pos:position pos:line="132" pos:column="48"/></operator><name pos:line="132" pos:column="45">service<pos:position pos:line="132" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="132" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="54"/></expr_stmt>
	<return pos:line="133" pos:column="9">return <expr><operator pos:line="133" pos:column="16">(<pos:position pos:line="133" pos:column="17"/></operator><name pos:line="133" pos:column="17">event<pos:position pos:line="133" pos:column="22"/></name><operator pos:line="133" pos:column="22">)<pos:position pos:line="133" pos:column="23"/></operator></expr>;<pos:position pos:line="133" pos:column="24"/></return>
}<pos:position pos:line="134" pos:column="2"/></block></function></unit>

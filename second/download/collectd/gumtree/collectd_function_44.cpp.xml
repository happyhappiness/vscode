<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_44.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">log_create_file<pos:position pos:line="1" pos:column="27"/></name> <parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">char<pos:position pos:line="1" pos:column="33"/></name> <modifier pos:line="1" pos:column="34">*<pos:position pos:line="1" pos:column="35"/></modifier></type><name pos:line="1" pos:column="35">filename<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">char<pos:position pos:line="1" pos:column="49"/></name> <modifier pos:line="1" pos:column="50">*<pos:position pos:line="1" pos:column="51"/></modifier><modifier pos:line="1" pos:column="51">*<pos:position pos:line="1" pos:column="52"/></modifier></type><name pos:line="1" pos:column="52">ds_def<pos:position pos:line="1" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="60">int<pos:position pos:line="1" pos:column="63"/></name></type> <name pos:line="1" pos:column="64">ds_num<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">FILE<pos:position pos:line="3" pos:column="13"/></name> <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">log<pos:position pos:line="3" pos:column="18"/></name></decl>;<pos:position pos:line="3" pos:column="19"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>

	<if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">check_create_dir<pos:position pos:line="6" pos:column="29"/></name> <argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">filename<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="41"/></condition><then pos:line="6" pos:column="41">
		<block type="pseudo"><return pos:line="7" pos:column="17">return <expr><operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator><literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal><operator pos:line="7" pos:column="27">)<pos:position pos:line="7" pos:column="28"/></operator></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><name pos:line="9" pos:column="9">log<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <call><name pos:line="9" pos:column="15">fopen<pos:position pos:line="9" pos:column="20"/></name> <argument_list pos:line="9" pos:column="21">(<argument><expr><name pos:line="9" pos:column="22">filename<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="32">"w"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
	<if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">log<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25">
	<block pos:line="11" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="12" pos:column="17">syslog<pos:position pos:line="12" pos:column="23"/></name> <argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">LOG_WARNING<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"Failed to create %s: %s"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="65">filename<pos:position pos:line="12" pos:column="73"/></name></expr></argument>,
				<argument><expr><call><name pos:line="13" pos:column="33">strerror<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">errno<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
		<return pos:line="14" pos:column="17">return <expr><operator pos:line="14" pos:column="24">(<pos:position pos:line="14" pos:column="25"/></operator><operator pos:line="14" pos:column="25">-<pos:position pos:line="14" pos:column="26"/></operator><literal type="number" pos:line="14" pos:column="26">1<pos:position pos:line="14" pos:column="27"/></literal><operator pos:line="14" pos:column="27">)<pos:position pos:line="14" pos:column="28"/></operator></expr>;<pos:position pos:line="14" pos:column="29"/></return>
	}<pos:position pos:line="15" pos:column="10"/></block></then></if>

	<expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name> <argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">log<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"epoch"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
	<for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">i<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="number" pos:line="18" pos:column="18">0<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></init> <condition><expr><name pos:line="18" pos:column="21">i<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">&lt;<pos:position pos:line="18" pos:column="27"/></operator> <name pos:line="18" pos:column="25">ds_num<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></condition> <incr><expr><name pos:line="18" pos:column="33">i<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">++<pos:position pos:line="18" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="18" pos:column="37"/></control>
	<block pos:line="19" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="20" pos:column="17">char<pos:position pos:line="20" pos:column="21"/></name> <modifier pos:line="20" pos:column="22">*<pos:position pos:line="20" pos:column="23"/></modifier></type><name pos:line="20" pos:column="23">name<pos:position pos:line="20" pos:column="27"/></name></decl>;<pos:position pos:line="20" pos:column="28"/></decl_stmt>
		<decl_stmt><decl><type><name pos:line="21" pos:column="17">char<pos:position pos:line="21" pos:column="21"/></name> <modifier pos:line="21" pos:column="22">*<pos:position pos:line="21" pos:column="23"/></modifier></type><name pos:line="21" pos:column="23">tmp<pos:position pos:line="21" pos:column="26"/></name></decl>;<pos:position pos:line="21" pos:column="27"/></decl_stmt>

		<expr_stmt><expr><name pos:line="23" pos:column="17">name<pos:position pos:line="23" pos:column="21"/></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <call><name pos:line="23" pos:column="24">strchr<pos:position pos:line="23" pos:column="30"/></name> <argument_list pos:line="23" pos:column="31">(<argument><expr><name><name pos:line="23" pos:column="32">ds_def<pos:position pos:line="23" pos:column="38"/></name><index pos:line="23" pos:column="38">[<expr><name pos:line="23" pos:column="39">i<pos:position pos:line="23" pos:column="40"/></name></expr>]<pos:position pos:line="23" pos:column="41"/></index></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="43">':'<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
		<if pos:line="24" pos:column="17">if <condition pos:line="24" pos:column="20">(<expr><name pos:line="24" pos:column="21">name<pos:position pos:line="24" pos:column="25"/></name> <operator pos:line="24" pos:column="26">==<pos:position pos:line="24" pos:column="28"/></operator> <name pos:line="24" pos:column="29">NULL<pos:position pos:line="24" pos:column="33"/></name></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34">
		<block pos:line="25" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="26" pos:column="25">syslog<pos:position pos:line="26" pos:column="31"/></name> <argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">LOG_WARNING<pos:position pos:line="26" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="46">"Invalid DS definition '%s' for %s"<pos:position pos:line="26" pos:column="81"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="27" pos:column="41">ds_def<pos:position pos:line="27" pos:column="47"/></name><index pos:line="27" pos:column="47">[<expr><name pos:line="27" pos:column="48">i<pos:position pos:line="27" pos:column="49"/></name></expr>]<pos:position pos:line="27" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="52">filename<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="28" pos:column="25">fclose<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">log<pos:position pos:line="28" pos:column="35"/></name></expr></argument>)<pos:position pos:line="28" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="29" pos:column="25">remove<pos:position pos:line="29" pos:column="31"/></name><argument_list pos:line="29" pos:column="31">(<argument><expr><name pos:line="29" pos:column="32">filename<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
			<return pos:line="30" pos:column="25">return <expr><operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><operator pos:line="30" pos:column="33">-<pos:position pos:line="30" pos:column="34"/></operator><literal type="number" pos:line="30" pos:column="34">1<pos:position pos:line="30" pos:column="35"/></literal><operator pos:line="30" pos:column="35">)<pos:position pos:line="30" pos:column="36"/></operator></expr>;<pos:position pos:line="30" pos:column="37"/></return>
		}<pos:position pos:line="31" pos:column="18"/></block></then></if>

		<expr_stmt><expr><name pos:line="33" pos:column="17">name<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">+=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="number" pos:line="33" pos:column="25">1<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
		<expr_stmt><expr><name pos:line="34" pos:column="17">tmp<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">=<pos:position pos:line="34" pos:column="22"/></operator> <call><name pos:line="34" pos:column="23">strchr<pos:position pos:line="34" pos:column="29"/></name> <argument_list pos:line="34" pos:column="30">(<argument><expr><name pos:line="34" pos:column="31">name<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="34" pos:column="37">':'<pos:position pos:line="34" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
		<if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name pos:line="35" pos:column="21">tmp<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">==<pos:position pos:line="35" pos:column="27"/></operator> <name pos:line="35" pos:column="28">NULL<pos:position pos:line="35" pos:column="32"/></name></expr>)<pos:position pos:line="35" pos:column="33"/></condition><then pos:line="35" pos:column="33">
		<block pos:line="36" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="37" pos:column="25">syslog<pos:position pos:line="37" pos:column="31"/></name> <argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">LOG_WARNING<pos:position pos:line="37" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="46">"Invalid DS definition '%s' for %s"<pos:position pos:line="37" pos:column="81"/></literal></expr></argument>,
					<argument><expr><name><name pos:line="38" pos:column="41">ds_def<pos:position pos:line="38" pos:column="47"/></name><index pos:line="38" pos:column="47">[<expr><name pos:line="38" pos:column="48">i<pos:position pos:line="38" pos:column="49"/></name></expr>]<pos:position pos:line="38" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="52">filename<pos:position pos:line="38" pos:column="60"/></name></expr></argument>)<pos:position pos:line="38" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="62"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="39" pos:column="25">fclose<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><name pos:line="39" pos:column="32">log<pos:position pos:line="39" pos:column="35"/></name></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="40" pos:column="25">remove<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">filename<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
			<return pos:line="41" pos:column="25">return <expr><operator pos:line="41" pos:column="32">(<pos:position pos:line="41" pos:column="33"/></operator><operator pos:line="41" pos:column="33">-<pos:position pos:line="41" pos:column="34"/></operator><literal type="number" pos:line="41" pos:column="34">1<pos:position pos:line="41" pos:column="35"/></literal><operator pos:line="41" pos:column="35">)<pos:position pos:line="41" pos:column="36"/></operator></expr>;<pos:position pos:line="41" pos:column="37"/></return>
		}<pos:position pos:line="42" pos:column="18"/></block></then></if>

		<comment type="block" pos:line="44" pos:column="17">/* The `%.*s' is needed because there is no null-byte behind
		 * the name. */</comment>
		<expr_stmt><expr><call><name pos:line="46" pos:column="17">fprintf<pos:position pos:line="46" pos:column="24"/></name><argument_list pos:line="46" pos:column="24">(<argument><expr><name pos:line="46" pos:column="25">log<pos:position pos:line="46" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="30">",%.*s"<pos:position pos:line="46" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="46" pos:column="39">(<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="40">tmp<pos:position pos:line="46" pos:column="43"/></name> <operator pos:line="46" pos:column="44">-<pos:position pos:line="46" pos:column="45"/></operator> <name pos:line="46" pos:column="46">name<pos:position pos:line="46" pos:column="50"/></name><operator pos:line="46" pos:column="50">)<pos:position pos:line="46" pos:column="51"/></operator></expr></argument>, <argument><expr><name pos:line="46" pos:column="53">name<pos:position pos:line="46" pos:column="57"/></name></expr></argument>)<pos:position pos:line="46" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="59"/></expr_stmt>
	}<pos:position pos:line="47" pos:column="10"/></block></for>
	<expr_stmt><expr><call><name pos:line="48" pos:column="9">fprintf<pos:position pos:line="48" pos:column="16"/></name><argument_list pos:line="48" pos:column="16">(<argument><expr><name pos:line="48" pos:column="17">log<pos:position pos:line="48" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="22">"\n"<pos:position pos:line="48" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="28"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="49" pos:column="9">fclose<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><name pos:line="49" pos:column="16">log<pos:position pos:line="49" pos:column="19"/></name></expr></argument>)<pos:position pos:line="49" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>

	<return pos:line="51" pos:column="9">return <expr><literal type="number" pos:line="51" pos:column="16">0<pos:position pos:line="51" pos:column="17"/></literal></expr>;<pos:position pos:line="51" pos:column="18"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_2090_collectd-5.7.1.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">cpy_log_exception<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier> <name pos:line="1" pos:column="30">char<pos:position pos:line="1" pos:column="34"/></name> <modifier pos:line="1" pos:column="35">*<pos:position pos:line="1" pos:column="36"/></modifier></type><name pos:line="1" pos:column="36">context<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="44"/></parameter_list> <block pos:line="1" pos:column="45">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">int<pos:position pos:line="2" pos:column="6"/></name></type> <name pos:line="2" pos:column="7">l<pos:position pos:line="2" pos:column="8"/></name> <init pos:line="2" pos:column="9">= <expr><literal type="number" pos:line="2" pos:column="11">0<pos:position pos:line="2" pos:column="12"/></literal></expr></init></decl>;<pos:position pos:line="2" pos:column="13"/></decl_stmt>
  <expr_stmt><expr><specifier pos:line="3" pos:column="3">const<pos:position pos:line="3" pos:column="8"/></specifier> <name pos:line="3" pos:column="9">char<pos:position pos:line="3" pos:column="13"/></name> <operator pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></operator><name><typename pos:line="3" pos:column="15">typename<pos:position pos:line="3" pos:column="23"/></typename></name> <operator pos:line="3" pos:column="24">=<pos:position pos:line="3" pos:column="25"/></operator> <name pos:line="3" pos:column="26">NULL<pos:position pos:line="3" pos:column="30"/></name></expr><operator pos:line="3" pos:column="30">,<pos:position pos:line="3" pos:column="31"/></operator> <expr><operator pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></operator><name pos:line="3" pos:column="33">message<pos:position pos:line="3" pos:column="40"/></name> <operator pos:line="3" pos:column="41">=<pos:position pos:line="3" pos:column="42"/></operator> <name pos:line="3" pos:column="43">NULL<pos:position pos:line="3" pos:column="47"/></name></expr>;<pos:position pos:line="3" pos:column="48"/></expr_stmt>
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">PyObject<pos:position pos:line="4" pos:column="11"/></name> <modifier pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></modifier></type><name pos:line="4" pos:column="13">type<pos:position pos:line="4" pos:column="17"/></name></decl>, <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="20">value<pos:position pos:line="4" pos:column="25"/></name></decl>, <modifier pos:line="4" pos:column="27">*<pos:position pos:line="4" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="28">traceback<pos:position pos:line="4" pos:column="37"/></name></decl>, <modifier pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="40">tn<pos:position pos:line="4" pos:column="42"/></name></decl>, <modifier pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="45">m<pos:position pos:line="4" pos:column="46"/></name></decl>, <modifier pos:line="4" pos:column="48">*<pos:position pos:line="4" pos:column="49"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="49">list<pos:position pos:line="4" pos:column="53"/></name></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>

  <expr_stmt><expr><call><name pos:line="6" pos:column="3">PyErr_Fetch<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><operator pos:line="6" pos:column="15">&amp;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="16">type<pos:position pos:line="6" pos:column="20"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="22">&amp;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="23">value<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="31">traceback<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="7" pos:column="3">PyErr_NormalizeException<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">(<argument><expr><operator pos:line="7" pos:column="28">&amp;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="29">type<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="35">&amp;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="36">value<pos:position pos:line="7" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="43">&amp;<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="44">traceback<pos:position pos:line="7" pos:column="53"/></name></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">type<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr>)<pos:position pos:line="8" pos:column="20"/></condition><then pos:line="8" pos:column="20">
    <block type="pseudo"><return pos:line="9" pos:column="5">return;<pos:position pos:line="9" pos:column="12"/></return></block></then></if>
  <expr_stmt><expr><name pos:line="10" pos:column="3">tn<pos:position pos:line="10" pos:column="5"/></name> <operator pos:line="10" pos:column="6">=<pos:position pos:line="10" pos:column="7"/></operator> <call><name pos:line="10" pos:column="8">PyObject_GetAttrString<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">type<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="37">"__name__"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="49"/></expr_stmt> <comment type="block" pos:line="10" pos:column="50">/* New reference. */</comment>
  <expr_stmt><expr><name pos:line="11" pos:column="3">m<pos:position pos:line="11" pos:column="4"/></name> <operator pos:line="11" pos:column="5">=<pos:position pos:line="11" pos:column="6"/></operator> <call><name pos:line="11" pos:column="7">PyObject_Str<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">value<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>                       <comment type="block" pos:line="11" pos:column="50">/* New reference. */</comment>
  <if pos:line="12" pos:column="3">if <condition pos:line="12" pos:column="6">(<expr><name pos:line="12" pos:column="7">tn<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">!=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">NULL<pos:position pos:line="12" pos:column="17"/></name></expr>)<pos:position pos:line="12" pos:column="18"/></condition><then pos:line="12" pos:column="18">
    <block type="pseudo"><expr_stmt><expr><name><typename pos:line="13" pos:column="5">typename<pos:position pos:line="13" pos:column="13"/></typename></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <call><name pos:line="13" pos:column="16">cpy_unicode_or_bytes_to_string<pos:position pos:line="13" pos:column="46"/></name><argument_list pos:line="13" pos:column="46">(<argument><expr><operator pos:line="13" pos:column="47">&amp;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="48">tn<pos:position pos:line="13" pos:column="50"/></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt></block></then></if>
  <if pos:line="14" pos:column="3">if <condition pos:line="14" pos:column="6">(<expr><name pos:line="14" pos:column="7">m<pos:position pos:line="14" pos:column="8"/></name> <operator pos:line="14" pos:column="9">!=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>)<pos:position pos:line="14" pos:column="17"/></condition><then pos:line="14" pos:column="17">
    <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="5">message<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">cpy_unicode_or_bytes_to_string<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><operator pos:line="15" pos:column="46">&amp;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="47">m<pos:position pos:line="15" pos:column="48"/></name></expr></argument>)<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="50"/></expr_stmt></block></then></if>
  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><typename pos:line="16" pos:column="7">typename<pos:position pos:line="16" pos:column="15"/></typename></name> <operator pos:line="16" pos:column="16">==<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">NULL<pos:position pos:line="16" pos:column="23"/></name></expr>)<pos:position pos:line="16" pos:column="24"/></condition><then pos:line="16" pos:column="24">
    <block type="pseudo"><expr_stmt><expr><name><typename pos:line="17" pos:column="5">typename<pos:position pos:line="17" pos:column="13"/></typename></name> <operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator> <literal type="string" pos:line="17" pos:column="16">"NamelessException"<pos:position pos:line="17" pos:column="35"/></literal></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt></block></then></if>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">message<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">==<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">NULL<pos:position pos:line="18" pos:column="22"/></name></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23">
    <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="5">message<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="string" pos:line="19" pos:column="15">"N/A"<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt></block></then></if>
  <decl_stmt><decl><type><name pos:line="20" pos:column="3">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="20" pos:column="25"/></name></type> <name pos:line="20" pos:column="26">ERROR<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="string" pos:line="20" pos:column="32">"Unhandled python exception in %s: %s: %s"<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>,
                               <argument><expr><name pos:line="21" pos:column="32">context<pos:position pos:line="21" pos:column="39"/></name></expr></argument>, <argument><expr><name><typename pos:line="21" pos:column="41">typename<pos:position pos:line="21" pos:column="49"/></typename></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">message<pos:position pos:line="21" pos:column="58"/></name></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></decl>;<pos:position pos:line="21" pos:column="60"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="22" pos:column="3">Py_END_ALLOW_THREADS<pos:position pos:line="22" pos:column="23"/></name></type> <name pos:line="22" pos:column="24">Py_XDECREF<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name pos:line="22" pos:column="35">tn<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></decl>;<pos:position pos:line="22" pos:column="39"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="23" pos:column="3">Py_XDECREF<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">m<pos:position pos:line="23" pos:column="15"/></name></expr></argument>)<pos:position pos:line="23" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
  <if pos:line="24" pos:column="3">if <condition pos:line="24" pos:column="6">(<expr><operator pos:line="24" pos:column="7">!<pos:position pos:line="24" pos:column="8"/></operator><name pos:line="24" pos:column="8">cpy_format_exception<pos:position pos:line="24" pos:column="28"/></name> <operator pos:line="24" pos:column="29">||<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="32">!<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="33">traceback<pos:position pos:line="24" pos:column="42"/></name></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43"> <block pos:line="24" pos:column="44">{
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">PyErr_Clear<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">()<pos:position pos:line="25" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">Py_DECREF<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name pos:line="26" pos:column="15">type<pos:position pos:line="26" pos:column="19"/></name></expr></argument>)<pos:position pos:line="26" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">Py_XDECREF<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><name pos:line="27" pos:column="16">value<pos:position pos:line="27" pos:column="21"/></name></expr></argument>)<pos:position pos:line="27" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">Py_XDECREF<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">traceback<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <return pos:line="29" pos:column="5">return;<pos:position pos:line="29" pos:column="12"/></return>
  }<pos:position pos:line="30" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="31" pos:column="3">list<pos:position pos:line="31" pos:column="7"/></name> <operator pos:line="31" pos:column="8">=<pos:position pos:line="31" pos:column="9"/></operator> <call><name pos:line="31" pos:column="10">PyObject_CallFunction<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">cpy_format_exception<pos:position pos:line="31" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="54">"NNN"<pos:position pos:line="31" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="61">type<pos:position pos:line="31" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="67">value<pos:position pos:line="31" pos:column="72"/></name></expr></argument>,
                               <argument><expr><name pos:line="32" pos:column="32">traceback<pos:position pos:line="32" pos:column="41"/></name></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt> <comment type="block" pos:line="32" pos:column="44">/* New reference. Steals references
                                              from "type", "value" and
                                              "traceback". */</comment>
  <if pos:line="35" pos:column="3">if <condition pos:line="35" pos:column="6">(<expr><name pos:line="35" pos:column="7">list<pos:position pos:line="35" pos:column="11"/></name></expr>)<pos:position pos:line="35" pos:column="12"/></condition><then pos:line="35" pos:column="12">
    <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="5">l<pos:position pos:line="36" pos:column="6"/></name> <operator pos:line="36" pos:column="7">=<pos:position pos:line="36" pos:column="8"/></operator> <call><name pos:line="36" pos:column="9">PyObject_Length<pos:position pos:line="36" pos:column="24"/></name><argument_list pos:line="36" pos:column="24">(<argument><expr><name pos:line="36" pos:column="25">list<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt></block></then></if>

  <for pos:line="38" pos:column="3">for <control pos:line="38" pos:column="7">(<init><decl><type><name pos:line="38" pos:column="8">int<pos:position pos:line="38" pos:column="11"/></name></type> <name pos:line="38" pos:column="12">i<pos:position pos:line="38" pos:column="13"/></name> <init pos:line="38" pos:column="14">= <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="38" pos:column="18"/></init> <condition><expr><name pos:line="38" pos:column="19">i<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">&lt;<pos:position pos:line="38" pos:column="25"/></operator> <name pos:line="38" pos:column="23">l<pos:position pos:line="38" pos:column="24"/></name></expr>;<pos:position pos:line="38" pos:column="25"/></condition> <incr><expr><operator pos:line="38" pos:column="26">++<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="28">i<pos:position pos:line="38" pos:column="29"/></name></expr></incr>)<pos:position pos:line="38" pos:column="30"/></control> <block pos:line="38" pos:column="31">{
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">PyObject<pos:position pos:line="39" pos:column="13"/></name> <modifier pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></modifier></type><name pos:line="39" pos:column="15">line<pos:position pos:line="39" pos:column="19"/></name></decl>;<pos:position pos:line="39" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="40" pos:column="5">char<pos:position pos:line="40" pos:column="9"/></name> <specifier pos:line="40" pos:column="10">const<pos:position pos:line="40" pos:column="15"/></specifier> <modifier pos:line="40" pos:column="16">*<pos:position pos:line="40" pos:column="17"/></modifier></type><name pos:line="40" pos:column="17">msg<pos:position pos:line="40" pos:column="20"/></name></decl>;<pos:position pos:line="40" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="41" pos:column="5">char<pos:position pos:line="41" pos:column="9"/></name> <modifier pos:line="41" pos:column="10">*<pos:position pos:line="41" pos:column="11"/></modifier></type><name pos:line="41" pos:column="11">cpy<pos:position pos:line="41" pos:column="14"/></name></decl>;<pos:position pos:line="41" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><name pos:line="43" pos:column="5">line<pos:position pos:line="43" pos:column="9"/></name> <operator pos:line="43" pos:column="10">=<pos:position pos:line="43" pos:column="11"/></operator> <call><name pos:line="43" pos:column="12">PyList_GET_ITEM<pos:position pos:line="43" pos:column="27"/></name><argument_list pos:line="43" pos:column="27">(<argument><expr><name pos:line="43" pos:column="28">list<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">i<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt> <comment type="block" pos:line="43" pos:column="38">/* Borrowed reference. */</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">Py_INCREF<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name pos:line="44" pos:column="15">line<pos:position pos:line="44" pos:column="19"/></name></expr></argument>)<pos:position pos:line="44" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="46" pos:column="5">msg<pos:position pos:line="46" pos:column="8"/></name> <operator pos:line="46" pos:column="9">=<pos:position pos:line="46" pos:column="10"/></operator> <call><name pos:line="46" pos:column="11">cpy_unicode_or_bytes_to_string<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(<argument><expr><operator pos:line="46" pos:column="42">&amp;<pos:position pos:line="46" pos:column="47"/></operator><name pos:line="46" pos:column="43">line<pos:position pos:line="46" pos:column="47"/></name></expr></argument>)<pos:position pos:line="46" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">Py_DECREF<pos:position pos:line="47" pos:column="14"/></name><argument_list pos:line="47" pos:column="14">(<argument><expr><name pos:line="47" pos:column="15">line<pos:position pos:line="47" pos:column="19"/></name></expr></argument>)<pos:position pos:line="47" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">msg<pos:position pos:line="48" pos:column="12"/></name> <operator pos:line="48" pos:column="13">==<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">NULL<pos:position pos:line="48" pos:column="20"/></name></expr>)<pos:position pos:line="48" pos:column="21"/></condition><then pos:line="48" pos:column="21">
      <block type="pseudo"><continue pos:line="49" pos:column="7">continue;<pos:position pos:line="49" pos:column="16"/></continue></block></then></if>

    <expr_stmt><expr><name pos:line="51" pos:column="5">cpy<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <call><name pos:line="51" pos:column="11">strdup<pos:position pos:line="51" pos:column="17"/></name><argument_list pos:line="51" pos:column="17">(<argument><expr><name pos:line="51" pos:column="18">msg<pos:position pos:line="51" pos:column="21"/></name></expr></argument>)<pos:position pos:line="51" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="23"/></expr_stmt>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">cpy<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">==<pos:position pos:line="52" pos:column="15"/></operator> <name pos:line="52" pos:column="16">NULL<pos:position pos:line="52" pos:column="20"/></name></expr>)<pos:position pos:line="52" pos:column="21"/></condition><then pos:line="52" pos:column="21">
      <block type="pseudo"><continue pos:line="53" pos:column="7">continue;<pos:position pos:line="53" pos:column="16"/></continue></block></then></if>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name><name pos:line="55" pos:column="9">cpy<pos:position pos:line="55" pos:column="12"/></name><index pos:line="55" pos:column="12">[<expr><call><name pos:line="55" pos:column="13">strlen<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">(<argument><expr><name pos:line="55" pos:column="20">cpy<pos:position pos:line="55" pos:column="23"/></name></expr></argument>)<pos:position pos:line="55" pos:column="24"/></argument_list></call> <operator pos:line="55" pos:column="25">-<pos:position pos:line="55" pos:column="26"/></operator> <literal type="number" pos:line="55" pos:column="27">1<pos:position pos:line="55" pos:column="28"/></literal></expr>]<pos:position pos:line="55" pos:column="29"/></index></name> <operator pos:line="55" pos:column="30">==<pos:position pos:line="55" pos:column="32"/></operator> <literal type="char" pos:line="55" pos:column="33">'\n'<pos:position pos:line="55" pos:column="37"/></literal></expr>)<pos:position pos:line="55" pos:column="38"/></condition><then pos:line="55" pos:column="38">
      <block type="pseudo"><expr_stmt><expr><name><name pos:line="56" pos:column="7">cpy<pos:position pos:line="56" pos:column="10"/></name><index pos:line="56" pos:column="10">[<expr><call><name pos:line="56" pos:column="11">strlen<pos:position pos:line="56" pos:column="17"/></name><argument_list pos:line="56" pos:column="17">(<argument><expr><name pos:line="56" pos:column="18">cpy<pos:position pos:line="56" pos:column="21"/></name></expr></argument>)<pos:position pos:line="56" pos:column="22"/></argument_list></call> <operator pos:line="56" pos:column="23">-<pos:position pos:line="56" pos:column="24"/></operator> <literal type="number" pos:line="56" pos:column="25">1<pos:position pos:line="56" pos:column="26"/></literal></expr>]<pos:position pos:line="56" pos:column="27"/></index></name> <operator pos:line="56" pos:column="28">=<pos:position pos:line="56" pos:column="29"/></operator> <literal type="number" pos:line="56" pos:column="30">0<pos:position pos:line="56" pos:column="31"/></literal></expr>;<pos:position pos:line="56" pos:column="32"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="58" pos:column="5">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="58" pos:column="27"/></name></type> <name pos:line="58" pos:column="28">ERROR<pos:position pos:line="58" pos:column="33"/></name><argument_list pos:line="58" pos:column="33">(<argument><expr><literal type="string" pos:line="58" pos:column="34">"%s"<pos:position pos:line="58" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="40">cpy<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></decl>;<pos:position pos:line="58" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="59" pos:column="5">Py_END_ALLOW_THREADS<pos:position pos:line="59" pos:column="25"/></name></type>

        <name pos:line="61" pos:column="9">free<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name pos:line="61" pos:column="14">cpy<pos:position pos:line="61" pos:column="17"/></name></expr></argument>)<pos:position pos:line="61" pos:column="18"/></argument_list></decl>;<pos:position pos:line="61" pos:column="19"/></decl_stmt>
  }<pos:position pos:line="62" pos:column="4"/></block></for>

  <expr_stmt><expr><call><name pos:line="64" pos:column="3">Py_XDECREF<pos:position pos:line="64" pos:column="13"/></name><argument_list pos:line="64" pos:column="13">(<argument><expr><name pos:line="64" pos:column="14">list<pos:position pos:line="64" pos:column="18"/></name></expr></argument>)<pos:position pos:line="64" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="20"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="65" pos:column="3">PyErr_Clear<pos:position pos:line="65" pos:column="14"/></name><argument_list pos:line="65" pos:column="14">()<pos:position pos:line="65" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="17"/></expr_stmt>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1310_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Config_repr<pos:position pos:line="1" pos:column="29"/></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><name pos:line="1" pos:column="30">PyObject<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier></type><name pos:line="1" pos:column="40">s<pos:position pos:line="1" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="42"/></parameter_list> <block pos:line="1" pos:column="43">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">Config<pos:position pos:line="2" pos:column="9"/></name> <modifier pos:line="2" pos:column="10">*<pos:position pos:line="2" pos:column="11"/></modifier></type><name pos:line="2" pos:column="11">self<pos:position pos:line="2" pos:column="15"/></name> <init pos:line="2" pos:column="16">= <expr><operator pos:line="2" pos:column="18">(<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">Config<pos:position pos:line="2" pos:column="25"/></name> <operator pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></operator><operator pos:line="2" pos:column="27">)<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">s<pos:position pos:line="2" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="2" pos:column="30"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="3" pos:column="3">PyObject<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">ret<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><specifier pos:line="4" pos:column="3">static<pos:position pos:line="4" pos:column="9"/></specifier> <type><name pos:line="4" pos:column="10">PyObject<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">node_prefix<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><name pos:line="4" pos:column="34">NULL<pos:position pos:line="4" pos:column="38"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="41">root_prefix<pos:position pos:line="4" pos:column="52"/></name> <init pos:line="4" pos:column="53">= <expr><name pos:line="4" pos:column="55">NULL<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="61">*<pos:position pos:line="4" pos:column="62"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="62">ending<pos:position pos:line="4" pos:column="68"/></name> <init pos:line="4" pos:column="69">= <expr><name pos:line="4" pos:column="71">NULL<pos:position pos:line="4" pos:column="75"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>

  <comment type="block" pos:line="6" pos:column="3">/* This is ok because we have the GIL, so this is thread-save by default. */</comment>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name pos:line="7" pos:column="7">node_prefix<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">==<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="5">node_prefix<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">cpy_string_to_unicode_or_bytes<pos:position pos:line="8" pos:column="49"/></name><argument_list pos:line="8" pos:column="49">(<argument><expr><literal type="string" pos:line="8" pos:column="50">"&lt;collectd.Config node "<pos:position pos:line="8" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="76"/></expr_stmt></block></then></if>
  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">root_prefix<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">==<pos:position pos:line="9" pos:column="21"/></operator> <name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr>)<pos:position pos:line="9" pos:column="27"/></condition><then pos:line="9" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="5">root_prefix<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">cpy_string_to_unicode_or_bytes<pos:position pos:line="10" pos:column="49"/></name><argument_list pos:line="10" pos:column="49">(<argument><expr><literal type="string" pos:line="10" pos:column="50">"&lt;collectd.Config root node "<pos:position pos:line="10" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="81"/></expr_stmt></block></then></if>
  <if pos:line="11" pos:column="3">if <condition pos:line="11" pos:column="6">(<expr><name pos:line="11" pos:column="7">ending<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">NULL<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
    <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="5">ending<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <call><name pos:line="12" pos:column="14">cpy_string_to_unicode_or_bytes<pos:position pos:line="12" pos:column="44"/></name><argument_list pos:line="12" pos:column="44">(<argument><expr><literal type="string" pos:line="12" pos:column="45">"&gt;"<pos:position pos:line="12" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt></block></then></if>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">node_prefix<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">==<pos:position pos:line="13" pos:column="21"/></operator> <name pos:line="13" pos:column="22">NULL<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">||<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">root_prefix<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">==<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">NULL<pos:position pos:line="13" pos:column="49"/></name> <operator pos:line="13" pos:column="50">||<pos:position pos:line="13" pos:column="52"/></operator> <name pos:line="13" pos:column="53">ending<pos:position pos:line="13" pos:column="59"/></name> <operator pos:line="13" pos:column="60">==<pos:position pos:line="13" pos:column="62"/></operator> <name pos:line="13" pos:column="63">NULL<pos:position pos:line="13" pos:column="67"/></name></expr>)<pos:position pos:line="13" pos:column="68"/></condition><then pos:line="13" pos:column="68">
    <block type="pseudo"><return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">NULL<pos:position pos:line="14" pos:column="16"/></name></expr>;<pos:position pos:line="14" pos:column="17"/></return></block></then></if>

  <expr_stmt><expr><name pos:line="16" pos:column="3">ret<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">PyObject_Str<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><name><name pos:line="16" pos:column="22">self<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">-&gt;<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="28">key<pos:position pos:line="16" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">CPY_SUBSTITUTE<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">PyObject_Repr<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="33">ret<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="38">ret<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name><name pos:line="18" pos:column="7">self<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">parent<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">==<pos:position pos:line="18" pos:column="22"/></operator> <name pos:line="18" pos:column="23">NULL<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">||<pos:position pos:line="18" pos:column="30"/></operator> <name><name pos:line="18" pos:column="31">self<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">parent<pos:position pos:line="18" pos:column="43"/></name></name> <operator pos:line="18" pos:column="44">==<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="47">Py_None<pos:position pos:line="18" pos:column="54"/></name></expr>)<pos:position pos:line="18" pos:column="55"/></condition><then pos:line="18" pos:column="55">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="5">CPY_STRCAT<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><operator pos:line="19" pos:column="16">&amp;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="17">ret<pos:position pos:line="19" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">root_prefix<pos:position pos:line="19" pos:column="33"/></name></expr></argument>)<pos:position pos:line="19" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt></block></then>
  <else pos:line="20" pos:column="3">else
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="5">CPY_STRCAT<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><operator pos:line="21" pos:column="16">&amp;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="17">ret<pos:position pos:line="21" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="22">node_prefix<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt></block></else></if>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">CPY_STRCAT<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><operator pos:line="22" pos:column="14">&amp;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="15">ret<pos:position pos:line="22" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="20">ending<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>

  <return pos:line="24" pos:column="3">return <expr><name pos:line="24" pos:column="10">ret<pos:position pos:line="24" pos:column="13"/></name></expr>;<pos:position pos:line="24" pos:column="14"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

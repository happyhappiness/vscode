<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1773_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">dpdk_helper_eal_config_parse<pos:position pos:line="1" pos:column="33"/></name><parameter_list pos:line="1" pos:column="33">(<parameter><decl><type><name pos:line="1" pos:column="34">dpdk_helper_ctx_t<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">*<pos:position pos:line="1" pos:column="53"/></modifier></type><name pos:line="1" pos:column="53">phc<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">oconfig_item_t<pos:position pos:line="1" pos:column="72"/></name> <modifier pos:line="1" pos:column="73">*<pos:position pos:line="1" pos:column="74"/></modifier></type><name pos:line="1" pos:column="74">ci<pos:position pos:line="1" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="77"/></parameter_list> <block pos:line="1" pos:column="78">{
  <expr_stmt><expr><call><name pos:line="2" pos:column="3">DPDK_HELPER_TRACE<pos:position pos:line="2" pos:column="20"/></name><argument_list pos:line="2" pos:column="20">(<argument><expr><name><name pos:line="2" pos:column="21">phc<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">-&gt;<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="26">shm_name<pos:position pos:line="2" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="2" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="36"/></expr_stmt>

  <if pos:line="4" pos:column="3">if <condition pos:line="4" pos:column="6">(<expr><name pos:line="4" pos:column="7">phc<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">==<pos:position pos:line="4" pos:column="13"/></operator> <name pos:line="4" pos:column="14">NULL<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">ERROR<pos:position pos:line="5" pos:column="10"/></name><argument_list pos:line="5" pos:column="10">(<argument><expr><literal type="string" pos:line="5" pos:column="11">"Invalid argument (phc)"<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="37"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><operator pos:line="6" pos:column="12">-<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">EINVAL<pos:position pos:line="6" pos:column="19"/></name></expr>;<pos:position pos:line="6" pos:column="20"/></return>
  }<pos:position pos:line="7" pos:column="4"/></block></then></if>

  <if pos:line="9" pos:column="3">if <condition pos:line="9" pos:column="6">(<expr><name pos:line="9" pos:column="7">ci<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">==<pos:position pos:line="9" pos:column="12"/></operator> <name pos:line="9" pos:column="13">NULL<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition><then pos:line="9" pos:column="18"> <block pos:line="9" pos:column="19">{
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">ERROR<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"Invalid argument (ci)"<pos:position pos:line="10" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="36"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">-<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">EINVAL<pos:position pos:line="11" pos:column="19"/></name></expr>;<pos:position pos:line="11" pos:column="20"/></return>
  }<pos:position pos:line="12" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="14" pos:column="3">int<pos:position pos:line="14" pos:column="6"/></name></type> <name pos:line="14" pos:column="7">status<pos:position pos:line="14" pos:column="13"/></name> <init pos:line="14" pos:column="14">= <expr><literal type="number" pos:line="14" pos:column="16">0<pos:position pos:line="14" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="18"/></decl_stmt>
  <for pos:line="15" pos:column="3">for <control pos:line="15" pos:column="7">(<init><decl><type><name pos:line="15" pos:column="8">int<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">i<pos:position pos:line="15" pos:column="13"/></name> <init pos:line="15" pos:column="14">= <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="18"/></init> <condition><expr><name pos:line="15" pos:column="19">i<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">&lt;<pos:position pos:line="15" pos:column="25"/></operator> <name><name pos:line="15" pos:column="23">ci<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">children_num<pos:position pos:line="15" pos:column="39"/></name></name></expr>;<pos:position pos:line="15" pos:column="40"/></condition> <incr><expr><name pos:line="15" pos:column="41">i<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">++<pos:position pos:line="15" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="45"/></control> <block pos:line="15" pos:column="46">{
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">oconfig_item_t<pos:position pos:line="16" pos:column="19"/></name> <modifier pos:line="16" pos:column="20">*<pos:position pos:line="16" pos:column="21"/></modifier></type><name pos:line="16" pos:column="21">child<pos:position pos:line="16" pos:column="26"/></name> <init pos:line="16" pos:column="27">= <expr><name><name pos:line="16" pos:column="29">ci<pos:position pos:line="16" pos:column="31"/></name><operator pos:line="16" pos:column="31">-&gt;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="33">children<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">+<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">i<pos:position pos:line="16" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="46"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strcasecmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="string" pos:line="18" pos:column="20">"Coremask"<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="32">child<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">key<pos:position pos:line="18" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call> <operator pos:line="18" pos:column="44">==<pos:position pos:line="18" pos:column="46"/></operator> <literal type="number" pos:line="18" pos:column="47">0<pos:position pos:line="18" pos:column="48"/></literal></expr>)<pos:position pos:line="18" pos:column="49"/></condition><then pos:line="18" pos:column="49"> <block pos:line="18" pos:column="50">{
      <expr_stmt><expr><name pos:line="19" pos:column="7">status<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="19" pos:column="41"/></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name pos:line="19" pos:column="42">child<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="49">phc<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">-&gt;<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="54">eal_config<pos:position pos:line="19" pos:column="64"/></name><operator pos:line="19" pos:column="64">.<pos:position pos:line="19" pos:column="65"/></operator><name pos:line="19" pos:column="65">coremask<pos:position pos:line="19" pos:column="73"/></name></name></expr></argument>,
                                         <argument><expr><sizeof pos:line="20" pos:column="42">sizeof<argument_list pos:line="20" pos:column="48">(<argument><expr><name><name pos:line="20" pos:column="49">phc<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">-&gt;<pos:position pos:line="20" pos:column="57"/></operator><name pos:line="20" pos:column="54">eal_config<pos:position pos:line="20" pos:column="64"/></name><operator pos:line="20" pos:column="64">.<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="65">coremask<pos:position pos:line="20" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="21" pos:column="7">DEBUG<pos:position pos:line="21" pos:column="12"/></name><argument_list pos:line="21" pos:column="12">(<argument><expr><literal type="string" pos:line="21" pos:column="13">"dpdk_common: EAL:Coremask %s"<pos:position pos:line="21" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="45">phc<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">eal_config<pos:position pos:line="21" pos:column="60"/></name><operator pos:line="21" pos:column="60">.<pos:position pos:line="21" pos:column="61"/></operator><name pos:line="21" pos:column="61">coremask<pos:position pos:line="21" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then> <elseif pos:line="22" pos:column="7">else <if pos:line="22" pos:column="12">if <condition pos:line="22" pos:column="15">(<expr><call><name pos:line="22" pos:column="16">strcasecmp<pos:position pos:line="22" pos:column="26"/></name><argument_list pos:line="22" pos:column="26">(<argument><expr><literal type="string" pos:line="22" pos:column="27">"MemoryChannels"<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="45">child<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">-&gt;<pos:position pos:line="22" pos:column="55"/></operator><name pos:line="22" pos:column="52">key<pos:position pos:line="22" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call> <operator pos:line="22" pos:column="57">==<pos:position pos:line="22" pos:column="59"/></operator> <literal type="number" pos:line="22" pos:column="60">0<pos:position pos:line="22" pos:column="61"/></literal></expr>)<pos:position pos:line="22" pos:column="62"/></condition><then pos:line="22" pos:column="62"> <block pos:line="22" pos:column="63">{
      <expr_stmt><expr><name pos:line="23" pos:column="7">status<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator>
          <call><name pos:line="24" pos:column="11">cf_util_get_string_buffer<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><name pos:line="24" pos:column="37">child<pos:position pos:line="24" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="44">phc<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">eal_config<pos:position pos:line="24" pos:column="59"/></name><operator pos:line="24" pos:column="59">.<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="60">memory_channels<pos:position pos:line="24" pos:column="75"/></name></name></expr></argument>,
                                    <argument><expr><sizeof pos:line="25" pos:column="37">sizeof<argument_list pos:line="25" pos:column="43">(<argument><expr><name><name pos:line="25" pos:column="44">phc<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">eal_config<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">.<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">memory_channels<pos:position pos:line="25" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="78"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="26" pos:column="7">DEBUG<pos:position pos:line="26" pos:column="12"/></name><argument_list pos:line="26" pos:column="12">(<argument><expr><literal type="string" pos:line="26" pos:column="13">"dpdk_common: EAL:Memory Channels %s"<pos:position pos:line="26" pos:column="50"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="27" pos:column="13">phc<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">eal_config<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">.<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">memory_channels<pos:position pos:line="27" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if></elseif> <elseif pos:line="28" pos:column="7">else <if pos:line="28" pos:column="12">if <condition pos:line="28" pos:column="15">(<expr><call><name pos:line="28" pos:column="16">strcasecmp<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">(<argument><expr><literal type="string" pos:line="28" pos:column="27">"SocketMemory"<pos:position pos:line="28" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="43">child<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">key<pos:position pos:line="28" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call> <operator pos:line="28" pos:column="55">==<pos:position pos:line="28" pos:column="57"/></operator> <literal type="number" pos:line="28" pos:column="58">0<pos:position pos:line="28" pos:column="59"/></literal></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60"> <block pos:line="28" pos:column="61">{
      <expr_stmt><expr><name pos:line="29" pos:column="7">status<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="29" pos:column="41"/></name><argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">child<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="49">phc<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">eal_config<pos:position pos:line="29" pos:column="64"/></name><operator pos:line="29" pos:column="64">.<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="65">socket_memory<pos:position pos:line="29" pos:column="78"/></name></name></expr></argument>,
                                         <argument><expr><sizeof pos:line="30" pos:column="42">sizeof<argument_list pos:line="30" pos:column="48">(<argument><expr><name><name pos:line="30" pos:column="49">phc<pos:position pos:line="30" pos:column="52"/></name><operator pos:line="30" pos:column="52">-&gt;<pos:position pos:line="30" pos:column="57"/></operator><name pos:line="30" pos:column="54">eal_config<pos:position pos:line="30" pos:column="64"/></name><operator pos:line="30" pos:column="64">.<pos:position pos:line="30" pos:column="65"/></operator><name pos:line="30" pos:column="65">socket_memory<pos:position pos:line="30" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="30" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="81"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="31" pos:column="7">DEBUG<pos:position pos:line="31" pos:column="12"/></name><argument_list pos:line="31" pos:column="12">(<argument><expr><literal type="string" pos:line="31" pos:column="13">"dpdk_common: EAL:Socket memory %s"<pos:position pos:line="31" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="50">phc<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">-&gt;<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="55">eal_config<pos:position pos:line="31" pos:column="65"/></name><operator pos:line="31" pos:column="65">.<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="66">socket_memory<pos:position pos:line="31" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="81"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <elseif pos:line="32" pos:column="7">else <if pos:line="32" pos:column="12">if <condition pos:line="32" pos:column="15">(<expr><call><name pos:line="32" pos:column="16">strcasecmp<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">(<argument><expr><literal type="string" pos:line="32" pos:column="27">"FilePrefix"<pos:position pos:line="32" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="41">child<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">key<pos:position pos:line="32" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="52"/></argument_list></call> <operator pos:line="32" pos:column="53">==<pos:position pos:line="32" pos:column="55"/></operator> <literal type="number" pos:line="32" pos:column="56">0<pos:position pos:line="32" pos:column="57"/></literal></expr>)<pos:position pos:line="32" pos:column="58"/></condition><then pos:line="32" pos:column="58"> <block pos:line="32" pos:column="59">{
      <decl_stmt><decl><type><name pos:line="33" pos:column="7">char<pos:position pos:line="33" pos:column="11"/></name></type> <name><name pos:line="33" pos:column="12">prefix<pos:position pos:line="33" pos:column="18"/></name><index pos:line="33" pos:column="18">[<expr><name pos:line="33" pos:column="19">DATA_MAX_NAME_LEN<pos:position pos:line="33" pos:column="36"/></name></expr>]<pos:position pos:line="33" pos:column="37"/></index></name></decl>;<pos:position pos:line="33" pos:column="38"/></decl_stmt>

      <expr_stmt><expr><name pos:line="35" pos:column="7">status<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <call><name pos:line="35" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="35" pos:column="41"/></name><argument_list pos:line="35" pos:column="41">(<argument><expr><name pos:line="35" pos:column="42">child<pos:position pos:line="35" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">prefix<pos:position pos:line="35" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="35" pos:column="57">sizeof<argument_list pos:line="35" pos:column="63">(<argument><expr><name pos:line="35" pos:column="64">prefix<pos:position pos:line="35" pos:column="70"/></name></expr></argument>)<pos:position pos:line="35" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="35" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="73"/></expr_stmt>
      <if pos:line="36" pos:column="7">if <condition pos:line="36" pos:column="10">(<expr><name pos:line="36" pos:column="11">status<pos:position pos:line="36" pos:column="17"/></name> <operator pos:line="36" pos:column="18">==<pos:position pos:line="36" pos:column="20"/></operator> <literal type="number" pos:line="36" pos:column="21">0<pos:position pos:line="36" pos:column="22"/></literal></expr>)<pos:position pos:line="36" pos:column="23"/></condition><then pos:line="36" pos:column="23"> <block pos:line="36" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">snprintf<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><name><name pos:line="37" pos:column="18">phc<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">eal_config<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">.<pos:position pos:line="37" pos:column="34"/></operator><name pos:line="37" pos:column="34">file_prefix<pos:position pos:line="37" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="47">DATA_MAX_NAME_LEN<pos:position pos:line="37" pos:column="64"/></name></expr></argument>,
                 <argument><expr><literal type="string" pos:line="38" pos:column="18">"/var/run/.%s_config"<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">prefix<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">DEBUG<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><literal type="string" pos:line="39" pos:column="15">"dpdk_common: EAL:File prefix %s"<pos:position pos:line="39" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="50">phc<pos:position pos:line="39" pos:column="53"/></name><operator pos:line="39" pos:column="53">-&gt;<pos:position pos:line="39" pos:column="58"/></operator><name pos:line="39" pos:column="55">eal_config<pos:position pos:line="39" pos:column="65"/></name><operator pos:line="39" pos:column="65">.<pos:position pos:line="39" pos:column="66"/></operator><name pos:line="39" pos:column="66">file_prefix<pos:position pos:line="39" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="79"/></expr_stmt>
      }<pos:position pos:line="40" pos:column="8"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif> <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if <condition pos:line="41" pos:column="15">(<expr><call><name pos:line="41" pos:column="16">strcasecmp<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><literal type="string" pos:line="41" pos:column="27">"LogLevel"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="39">child<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">-&gt;<pos:position pos:line="41" pos:column="49"/></operator><name pos:line="41" pos:column="46">key<pos:position pos:line="41" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call> <operator pos:line="41" pos:column="51">==<pos:position pos:line="41" pos:column="53"/></operator> <literal type="number" pos:line="41" pos:column="54">0<pos:position pos:line="41" pos:column="55"/></literal></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56"> <block pos:line="41" pos:column="57">{
      <expr_stmt><expr><name pos:line="42" pos:column="7">status<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name pos:line="42" pos:column="42">child<pos:position pos:line="42" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="49">phc<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">eal_config<pos:position pos:line="42" pos:column="64"/></name><operator pos:line="42" pos:column="64">.<pos:position pos:line="42" pos:column="65"/></operator><name pos:line="42" pos:column="65">log_level<pos:position pos:line="42" pos:column="74"/></name></name></expr></argument>,
                                         <argument><expr><sizeof pos:line="43" pos:column="42">sizeof<argument_list pos:line="43" pos:column="48">(<argument><expr><name><name pos:line="43" pos:column="49">phc<pos:position pos:line="43" pos:column="52"/></name><operator pos:line="43" pos:column="52">-&gt;<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="54">eal_config<pos:position pos:line="43" pos:column="64"/></name><operator pos:line="43" pos:column="64">.<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="65">log_level<pos:position pos:line="43" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="77"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="44" pos:column="7">DEBUG<pos:position pos:line="44" pos:column="12"/></name><argument_list pos:line="44" pos:column="12">(<argument><expr><literal type="string" pos:line="44" pos:column="13">"dpdk_common: EAL:LogLevel %s"<pos:position pos:line="44" pos:column="43"/></literal></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="45">phc<pos:position pos:line="44" pos:column="48"/></name><operator pos:line="44" pos:column="48">-&gt;<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="50">eal_config<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">.<pos:position pos:line="44" pos:column="61"/></operator><name pos:line="44" pos:column="61">log_level<pos:position pos:line="44" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if></elseif> <elseif pos:line="45" pos:column="7">else <if pos:line="45" pos:column="12">if <condition pos:line="45" pos:column="15">(<expr><call><name pos:line="45" pos:column="16">strcasecmp<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><literal type="string" pos:line="45" pos:column="27">"RteDriverLibPath"<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="47">child<pos:position pos:line="45" pos:column="52"/></name><operator pos:line="45" pos:column="52">-&gt;<pos:position pos:line="45" pos:column="57"/></operator><name pos:line="45" pos:column="54">key<pos:position pos:line="45" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call> <operator pos:line="45" pos:column="59">==<pos:position pos:line="45" pos:column="61"/></operator> <literal type="number" pos:line="45" pos:column="62">0<pos:position pos:line="45" pos:column="63"/></literal></expr>)<pos:position pos:line="45" pos:column="64"/></condition><then pos:line="45" pos:column="64"> <block pos:line="45" pos:column="65">{
      <expr_stmt><expr><name pos:line="46" pos:column="7">status<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">=<pos:position pos:line="46" pos:column="15"/></operator> <call><name pos:line="46" pos:column="16">cf_util_get_string_buffer<pos:position pos:line="46" pos:column="41"/></name><argument_list pos:line="46" pos:column="41">(
          <argument><expr><name pos:line="47" pos:column="11">child<pos:position pos:line="47" pos:column="16"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="18">phc<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">-&gt;<pos:position pos:line="47" pos:column="26"/></operator><name pos:line="47" pos:column="23">eal_config<pos:position pos:line="47" pos:column="33"/></name><operator pos:line="47" pos:column="33">.<pos:position pos:line="47" pos:column="34"/></operator><name pos:line="47" pos:column="34">rte_driver_lib_path<pos:position pos:line="47" pos:column="53"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="48" pos:column="11">sizeof<argument_list pos:line="48" pos:column="17">(<argument><expr><name><name pos:line="48" pos:column="18">phc<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">eal_config<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">.<pos:position pos:line="48" pos:column="34"/></operator><name pos:line="48" pos:column="34">rte_driver_lib_path<pos:position pos:line="48" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="56"/></expr_stmt>
      <expr_stmt><expr><call><name pos:line="49" pos:column="7">DEBUG<pos:position pos:line="49" pos:column="12"/></name><argument_list pos:line="49" pos:column="12">(<argument><expr><literal type="string" pos:line="49" pos:column="13">"dpdk_common: EAL:RteDriverLibPath %s"<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>,
            <argument><expr><name><name pos:line="50" pos:column="13">phc<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">eal_config<pos:position pos:line="50" pos:column="28"/></name><operator pos:line="50" pos:column="28">.<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="29">rte_driver_lib_path<pos:position pos:line="50" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if></elseif> <else pos:line="51" pos:column="7">else <block pos:line="51" pos:column="12">{
      <expr_stmt><expr><call><name pos:line="52" pos:column="7">ERROR<pos:position pos:line="52" pos:column="12"/></name><argument_list pos:line="52" pos:column="12">(<argument><expr><literal type="string" pos:line="52" pos:column="13">"dpdk_common: Invalid '%s' configuration option"<pos:position pos:line="52" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="63">child<pos:position pos:line="52" pos:column="68"/></name><operator pos:line="52" pos:column="68">-&gt;<pos:position pos:line="52" pos:column="73"/></operator><name pos:line="52" pos:column="70">key<pos:position pos:line="52" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="75"/></expr_stmt>
      <expr_stmt><expr><name pos:line="53" pos:column="7">status<pos:position pos:line="53" pos:column="13"/></name> <operator pos:line="53" pos:column="14">=<pos:position pos:line="53" pos:column="15"/></operator> <operator pos:line="53" pos:column="16">-<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="17">EINVAL<pos:position pos:line="53" pos:column="23"/></name></expr>;<pos:position pos:line="53" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="54" pos:column="6"/></block></else></if>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">status<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">!=<pos:position pos:line="56" pos:column="18"/></operator> <literal type="number" pos:line="56" pos:column="19">0<pos:position pos:line="56" pos:column="20"/></literal></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21"> <block pos:line="56" pos:column="22">{
      <expr_stmt><expr><call><name pos:line="57" pos:column="7">ERROR<pos:position pos:line="57" pos:column="12"/></name><argument_list pos:line="57" pos:column="12">(<argument><expr><literal type="string" pos:line="57" pos:column="13">"dpdk_common: Parsing EAL configuration failed"<pos:position pos:line="57" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="62"/></expr_stmt>
      <break pos:line="58" pos:column="7">break;<pos:position pos:line="58" pos:column="13"/></break>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
  }<pos:position pos:line="60" pos:column="4"/></block></for>

  <return pos:line="62" pos:column="3">return <expr><name pos:line="62" pos:column="10">status<pos:position pos:line="62" pos:column="16"/></name></expr>;<pos:position pos:line="62" pos:column="17"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

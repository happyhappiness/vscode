<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_339_collectd-4.1.0.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">pplugin_unregister<pos:position pos:line="1" pos:column="30"/></name> <parameter_list pos:line="1" pos:column="31">(<parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">type<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="42">char<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">name<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3" pos:column="9">SV<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier></type><name pos:line="3" pos:column="13">tmp<pos:position pos:line="3" pos:column="16"/></name> <init pos:line="3" pos:column="17">= <expr><name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>

	<if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">type<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">&lt;<pos:position pos:line="5" pos:column="23"/></operator> <literal type="number" pos:line="5" pos:column="21">0<pos:position pos:line="5" pos:column="22"/></literal><operator pos:line="5" pos:column="22">)<pos:position pos:line="5" pos:column="23"/></operator> <operator pos:line="5" pos:column="24">||<pos:position pos:line="5" pos:column="26"/></operator> <operator pos:line="5" pos:column="27">(<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">type<pos:position pos:line="5" pos:column="32"/></name> <operator pos:line="5" pos:column="33">&gt;=<pos:position pos:line="5" pos:column="38"/></operator> <name pos:line="5" pos:column="36">PLUGIN_TYPES<pos:position pos:line="5" pos:column="48"/></name><operator pos:line="5" pos:column="48">)<pos:position pos:line="5" pos:column="49"/></operator></expr>)<pos:position pos:line="5" pos:column="50"/></condition><then pos:line="5" pos:column="50">
		<block type="pseudo"><return pos:line="6" pos:column="17">return <expr><operator pos:line="6" pos:column="24">-<pos:position pos:line="6" pos:column="25"/></operator><literal type="number" pos:line="6" pos:column="25">1<pos:position pos:line="6" pos:column="26"/></literal></expr>;<pos:position pos:line="6" pos:column="27"/></return></block></then></if>

	<if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">NULL<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">==<pos:position pos:line="8" pos:column="20"/></operator> <name pos:line="8" pos:column="21">name<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26">
		<block type="pseudo"><return pos:line="9" pos:column="17">return <expr><operator pos:line="9" pos:column="24">-<pos:position pos:line="9" pos:column="25"/></operator><literal type="number" pos:line="9" pos:column="25">1<pos:position pos:line="9" pos:column="26"/></literal></expr>;<pos:position pos:line="9" pos:column="27"/></return></block></then></if>

	<comment type="block" pos:line="11" pos:column="9">/* freeing the allocated memory of the element itself (pplugin_t *) causes
	 * a segfault during perl_destruct () thus I assume perl somehow takes
	 * care of this... */</comment>

	<expr_stmt><expr><name pos:line="15" pos:column="9">tmp<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">Perl_hv_delete<pos:position pos:line="15" pos:column="29"/></name> <argument_list pos:line="15" pos:column="30">(<argument><expr><name pos:line="15" pos:column="31">perl<pos:position pos:line="15" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="37">plugins<pos:position pos:line="15" pos:column="44"/></name><index pos:line="15" pos:column="44">[<expr><name pos:line="15" pos:column="45">type<pos:position pos:line="15" pos:column="49"/></name></expr>]<pos:position pos:line="15" pos:column="50"/></index></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="52">name<pos:position pos:line="15" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="58">strlen<pos:position pos:line="15" pos:column="64"/></name> <argument_list pos:line="15" pos:column="65">(<argument><expr><name pos:line="15" pos:column="66">name<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="73">0<pos:position pos:line="15" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="76"/></expr_stmt>
	<if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">NULL<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">!=<pos:position pos:line="16" pos:column="20"/></operator> <name pos:line="16" pos:column="21">tmp<pos:position pos:line="16" pos:column="24"/></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25"> <block pos:line="16" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="17" pos:column="17">pplugin_t<pos:position pos:line="17" pos:column="26"/></name> <modifier pos:line="17" pos:column="27">*<pos:position pos:line="17" pos:column="28"/></modifier></type><name pos:line="17" pos:column="28">p<pos:position pos:line="17" pos:column="29"/></name> <init pos:line="17" pos:column="30">= <expr><operator pos:line="17" pos:column="32">(<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">pplugin_t<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">*<pos:position pos:line="17" pos:column="44"/></operator><operator pos:line="17" pos:column="44">)<pos:position pos:line="17" pos:column="45"/></operator><call><name pos:line="17" pos:column="45">SvIV<pos:position pos:line="17" pos:column="49"/></name> <argument_list pos:line="17" pos:column="50">(<argument><expr><operator pos:line="17" pos:column="51">(<pos:position pos:line="17" pos:column="52"/></operator><name pos:line="17" pos:column="52">SV<pos:position pos:line="17" pos:column="54"/></name> <operator pos:line="17" pos:column="55">*<pos:position pos:line="17" pos:column="56"/></operator><operator pos:line="17" pos:column="56">)<pos:position pos:line="17" pos:column="57"/></operator><call><name pos:line="17" pos:column="57">SvRV<pos:position pos:line="17" pos:column="61"/></name> <argument_list pos:line="17" pos:column="62">(<argument><expr><name pos:line="17" pos:column="63">tmp<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="69"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="18" pos:column="17">Perl_sv_free<pos:position pos:line="18" pos:column="29"/></name> <argument_list pos:line="18" pos:column="30">(<argument><expr><name pos:line="18" pos:column="31">perl<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="37">p<pos:position pos:line="18" pos:column="38"/></name><operator pos:line="18" pos:column="38">-&gt;<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="40">sub<pos:position pos:line="18" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
	}<pos:position pos:line="19" pos:column="10"/></block></then></if>
	<return pos:line="20" pos:column="9">return <expr><literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

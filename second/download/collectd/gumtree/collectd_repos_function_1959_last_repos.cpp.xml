<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1959_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">lua_script_init<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">lua_script_t<pos:position pos:line="1" pos:column="40"/></name> <modifier pos:line="1" pos:column="41">*<pos:position pos:line="1" pos:column="42"/></modifier></type><name pos:line="1" pos:column="42">script<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <comment type="block" pos:line="1" pos:column="50">/* {{{ */</comment>
<block pos:line="2" pos:column="1">{
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">memset<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">script<pos:position pos:line="3" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="18">0<pos:position pos:line="3" pos:column="19"/></literal></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="21">sizeof<argument_list pos:line="3" pos:column="27">(<argument><expr><operator pos:line="3" pos:column="28">*<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">script<pos:position pos:line="3" pos:column="35"/></name></expr></argument>)<pos:position pos:line="3" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="38"/></expr_stmt>

  <comment type="block" pos:line="5" pos:column="3">/* initialize the lua context */</comment>
  <expr_stmt><expr><name><name pos:line="6" pos:column="3">script<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">-&gt;<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="11">lua_state<pos:position pos:line="6" pos:column="20"/></name></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <call><name pos:line="6" pos:column="23">luaL_newstate<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">()<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
  <if pos:line="7" pos:column="3">if <condition pos:line="7" pos:column="6">(<expr><name><name pos:line="7" pos:column="7">script<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">lua_state<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">==<pos:position pos:line="7" pos:column="27"/></operator> <name pos:line="7" pos:column="28">NULL<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33"> <block pos:line="7" pos:column="34">{
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">ERROR<pos:position pos:line="8" pos:column="10"/></name><argument_list pos:line="8" pos:column="10">(<argument><expr><literal type="string" pos:line="8" pos:column="11">"Lua plugin: luaL_newstate() failed."<pos:position pos:line="8" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><operator pos:line="9" pos:column="12">-<pos:position pos:line="9" pos:column="13"/></operator><literal type="number" pos:line="9" pos:column="13">1<pos:position pos:line="9" pos:column="14"/></literal></expr>;<pos:position pos:line="9" pos:column="15"/></return>
  }<pos:position pos:line="10" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="12" pos:column="3">/* Open up all the standard Lua libraries. */</comment>
  <expr_stmt><expr><call><name pos:line="13" pos:column="3">luaL_openlibs<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><name><name pos:line="13" pos:column="17">script<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">-&gt;<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="25">lua_state<pos:position pos:line="13" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

<comment type="block" pos:line="15" pos:column="1">/* Load the 'collectd' library */</comment>
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">LUA_VERSION_NUM<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">&lt;<pos:position pos:line="16" pos:column="25"/></operator> <literal type="number" pos:line="16" pos:column="23">502<pos:position pos:line="16" pos:column="26"/></literal></expr></cpp:if>
  <expr_stmt><expr><call><name pos:line="17" pos:column="3">lua_pushcfunction<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name><name pos:line="17" pos:column="21">script<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">-&gt;<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="29">lua_state<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">open_collectd<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="18" pos:column="3">lua_pushstring<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name><name pos:line="18" pos:column="18">script<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">lua_state<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="37">"collectd"<pos:position pos:line="18" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="19" pos:column="3">lua_call<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">script<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">lua_state<pos:position pos:line="19" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="31">1<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="34">0<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>
  <expr_stmt><expr><call><name pos:line="21" pos:column="3">luaL_requiref<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><name><name pos:line="21" pos:column="17">script<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">lua_state<pos:position pos:line="21" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="36">"collectd"<pos:position pos:line="21" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="48">open_collectd<pos:position pos:line="21" pos:column="61"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="63">1<pos:position pos:line="21" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="66"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="22" pos:column="3">lua_pop<pos:position pos:line="22" pos:column="10"/></name><argument_list pos:line="22" pos:column="10">(<argument><expr><name><name pos:line="22" pos:column="11">script<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">lua_state<pos:position pos:line="22" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">endif<pos:position pos:line="23" pos:column="7"/></cpp:directive></cpp:endif>

  <comment type="block" pos:line="25" pos:column="3">/* Prepend BasePath to package.path */</comment>
  <if pos:line="26" pos:column="3">if <condition pos:line="26" pos:column="6">(<expr><name><name pos:line="26" pos:column="7">base_path<pos:position pos:line="26" pos:column="16"/></name><index pos:line="26" pos:column="16">[<expr><literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal></expr>]<pos:position pos:line="26" pos:column="19"/></index></name> <operator pos:line="26" pos:column="20">!=<pos:position pos:line="26" pos:column="22"/></operator> <literal type="char" pos:line="26" pos:column="23">'\0'<pos:position pos:line="26" pos:column="27"/></literal></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <block pos:line="26" pos:column="29">{
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">lua_getglobal<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name><name pos:line="27" pos:column="19">script<pos:position pos:line="27" pos:column="25"/></name><operator pos:line="27" pos:column="25">-&gt;<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="27">lua_state<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="38">"package"<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">lua_getfield<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">(<argument><expr><name><name pos:line="28" pos:column="18">script<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">lua_state<pos:position pos:line="28" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="37">-<pos:position pos:line="28" pos:column="38"/></operator><literal type="number" pos:line="28" pos:column="38">1<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="41">"path"<pos:position pos:line="28" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="49"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="30" pos:column="5">const<pos:position pos:line="30" pos:column="10"/></specifier> <name pos:line="30" pos:column="11">char<pos:position pos:line="30" pos:column="15"/></name> <modifier pos:line="30" pos:column="16">*<pos:position pos:line="30" pos:column="17"/></modifier></type><name pos:line="30" pos:column="17">cur_path<pos:position pos:line="30" pos:column="25"/></name> <init pos:line="30" pos:column="26">= <expr><call><name pos:line="30" pos:column="28">lua_tostring<pos:position pos:line="30" pos:column="40"/></name><argument_list pos:line="30" pos:column="40">(<argument><expr><name><name pos:line="30" pos:column="41">script<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">-&gt;<pos:position pos:line="30" pos:column="52"/></operator><name pos:line="30" pos:column="49">lua_state<pos:position pos:line="30" pos:column="58"/></name></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="60">-<pos:position pos:line="30" pos:column="61"/></operator><literal type="number" pos:line="30" pos:column="61">1<pos:position pos:line="30" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="64"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">char<pos:position pos:line="31" pos:column="9"/></name> <modifier pos:line="31" pos:column="10">*<pos:position pos:line="31" pos:column="11"/></modifier></type><name pos:line="31" pos:column="11">new_path<pos:position pos:line="31" pos:column="19"/></name> <init pos:line="31" pos:column="20">= <expr><call><name pos:line="31" pos:column="22">ssnprintf_alloc<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><literal type="string" pos:line="31" pos:column="38">"%s/?.lua;%s"<pos:position pos:line="31" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">base_path<pos:position pos:line="31" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="64">cur_path<pos:position pos:line="31" pos:column="72"/></name></expr></argument>)<pos:position pos:line="31" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="74"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">lua_pop<pos:position pos:line="33" pos:column="12"/></name><argument_list pos:line="33" pos:column="12">(<argument><expr><name><name pos:line="33" pos:column="13">script<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">lua_state<pos:position pos:line="33" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="32">1<pos:position pos:line="33" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">lua_pushstring<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name><name pos:line="34" pos:column="20">script<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">lua_state<pos:position pos:line="34" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="39">new_path<pos:position pos:line="34" pos:column="47"/></name></expr></argument>)<pos:position pos:line="34" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">free<pos:position pos:line="36" pos:column="9"/></name><argument_list pos:line="36" pos:column="9">(<argument><expr><name pos:line="36" pos:column="10">new_path<pos:position pos:line="36" pos:column="18"/></name></expr></argument>)<pos:position pos:line="36" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">lua_setfield<pos:position pos:line="38" pos:column="17"/></name><argument_list pos:line="38" pos:column="17">(<argument><expr><name><name pos:line="38" pos:column="18">script<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">-&gt;<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="26">lua_state<pos:position pos:line="38" pos:column="35"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="37">-<pos:position pos:line="38" pos:column="38"/></operator><literal type="number" pos:line="38" pos:column="38">2<pos:position pos:line="38" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="41">"path"<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">lua_pop<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name><name pos:line="39" pos:column="13">script<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">lua_state<pos:position pos:line="39" pos:column="30"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="32">1<pos:position pos:line="39" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
  }<pos:position pos:line="40" pos:column="4"/></block></then></if>

  <return pos:line="42" pos:column="3">return <expr><literal type="number" pos:line="42" pos:column="10">0<pos:position pos:line="42" pos:column="11"/></literal></expr>;<pos:position pos:line="42" pos:column="12"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

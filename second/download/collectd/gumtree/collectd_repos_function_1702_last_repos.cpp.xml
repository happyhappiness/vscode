<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_1702_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">snmp_agent_preinit<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">void<pos:position pos:line="1" pos:column="35"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list> <block pos:line="1" pos:column="37">{
  <if pos:line="2" pos:column="3">if <condition pos:line="2" pos:column="6">(<expr><name pos:line="2" pos:column="7">g_agent<pos:position pos:line="2" pos:column="14"/></name> <operator pos:line="2" pos:column="15">!=<pos:position pos:line="2" pos:column="17"/></operator> <name pos:line="2" pos:column="18">NULL<pos:position pos:line="2" pos:column="22"/></name></expr>)<pos:position pos:line="2" pos:column="23"/></condition><then pos:line="2" pos:column="23"> <block pos:line="2" pos:column="24">{
    <comment type="block" pos:line="3" pos:column="5">/* already initialized if config callback was called before init callback */</comment>
    <return pos:line="4" pos:column="5">return <expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr>;<pos:position pos:line="4" pos:column="14"/></return>
  }<pos:position pos:line="5" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name pos:line="7" pos:column="3">g_agent<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">=<pos:position pos:line="7" pos:column="12"/></operator> <call><name pos:line="7" pos:column="13">calloc<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="23">sizeof<argument_list pos:line="7" pos:column="29">(<argument><expr><operator pos:line="7" pos:column="30">*<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">g_agent<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><name pos:line="8" pos:column="7">g_agent<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">==<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">NULL<pos:position pos:line="8" pos:column="22"/></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">ERROR<pos:position pos:line="9" pos:column="10"/></name><argument_list pos:line="9" pos:column="10">(<argument><expr><name pos:line="9" pos:column="11">PLUGIN_NAME<pos:position pos:line="9" pos:column="22"/></name> <literal type="string" pos:line="9" pos:column="23">": Failed to allocate memory for snmp agent context"<pos:position pos:line="9" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">ENOMEM<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
  }<pos:position pos:line="11" pos:column="4"/></block></then></if>

  <expr_stmt><expr><name><name pos:line="13" pos:column="3">g_agent<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">tables<pos:position pos:line="13" pos:column="18"/></name></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">llist_create<pos:position pos:line="13" pos:column="33"/></name><argument_list pos:line="13" pos:column="33">()<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="14" pos:column="3">g_agent<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">scalars<pos:position pos:line="14" pos:column="19"/></name></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <call><name pos:line="14" pos:column="22">llist_create<pos:position pos:line="14" pos:column="34"/></name><argument_list pos:line="14" pos:column="34">()<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>

  <if pos:line="16" pos:column="3">if <condition pos:line="16" pos:column="6">(<expr><name><name pos:line="16" pos:column="7">g_agent<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">-&gt;<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="16">tables<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">==<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">NULL<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">||<pos:position pos:line="16" pos:column="33"/></operator> <name><name pos:line="16" pos:column="34">g_agent<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">scalars<pos:position pos:line="16" pos:column="50"/></name></name> <operator pos:line="16" pos:column="51">==<pos:position pos:line="16" pos:column="53"/></operator> <name pos:line="16" pos:column="54">NULL<pos:position pos:line="16" pos:column="58"/></name></expr>)<pos:position pos:line="16" pos:column="59"/></condition><then pos:line="16" pos:column="59"> <block pos:line="16" pos:column="60">{
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">ERROR<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><name pos:line="17" pos:column="11">PLUGIN_NAME<pos:position pos:line="17" pos:column="22"/></name> <literal type="string" pos:line="17" pos:column="23">": llist_create() failed"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">llist_destroy<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name><name pos:line="18" pos:column="19">g_agent<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">-&gt;<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="28">scalars<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">llist_destroy<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name><name pos:line="19" pos:column="19">g_agent<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">-&gt;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="28">tables<pos:position pos:line="19" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">-<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">ENOMEM<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>

  <decl_stmt><decl><type><name pos:line="23" pos:column="3">int<pos:position pos:line="23" pos:column="6"/></name></type> <name pos:line="23" pos:column="7">err<pos:position pos:line="23" pos:column="10"/></name></decl>;<pos:position pos:line="23" pos:column="11"/></decl_stmt>
  <comment type="block" pos:line="24" pos:column="3">/* make us a agentx client. */</comment>
  <expr_stmt><expr><name pos:line="25" pos:column="3">err<pos:position pos:line="25" pos:column="6"/></name> <operator pos:line="25" pos:column="7">=<pos:position pos:line="25" pos:column="8"/></operator> <call><name pos:line="25" pos:column="9">netsnmp_ds_set_boolean<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">NETSNMP_DS_APPLICATION_ID<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="59">NETSNMP_DS_AGENT_ROLE<pos:position pos:line="25" pos:column="80"/></name></expr></argument>,
                               <argument><expr><literal type="number" pos:line="26" pos:column="32">1<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
  <if pos:line="27" pos:column="3">if <condition pos:line="27" pos:column="6">(<expr><name pos:line="27" pos:column="7">err<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">!=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">0<pos:position pos:line="27" pos:column="15"/></literal></expr>)<pos:position pos:line="27" pos:column="16"/></condition><then pos:line="27" pos:column="16"> <block pos:line="27" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">ERROR<pos:position pos:line="28" pos:column="10"/></name><argument_list pos:line="28" pos:column="10">(<argument><expr><name pos:line="28" pos:column="11">PLUGIN_NAME<pos:position pos:line="28" pos:column="22"/></name> <literal type="string" pos:line="28" pos:column="23">": Failed to set agent role (%d)"<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="58">err<pos:position pos:line="28" pos:column="61"/></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">llist_destroy<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name><name pos:line="29" pos:column="19">g_agent<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">scalars<pos:position pos:line="29" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">llist_destroy<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name><name pos:line="30" pos:column="19">g_agent<pos:position pos:line="30" pos:column="26"/></name><operator pos:line="30" pos:column="26">-&gt;<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="28">tables<pos:position pos:line="30" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">-<pos:position pos:line="31" pos:column="13"/></operator><literal type="number" pos:line="31" pos:column="13">1<pos:position pos:line="31" pos:column="14"/></literal></expr>;<pos:position pos:line="31" pos:column="15"/></return>
  }<pos:position pos:line="32" pos:column="4"/></block></then></if>

  <comment type="block" pos:line="34" pos:column="3">/*
   *  For SNMP debug purposes uses snmp_set_do_debugging(1);
   */</comment>

  <comment type="block" pos:line="38" pos:column="3">/* initialize the agent library */</comment>
  <expr_stmt><expr><name pos:line="39" pos:column="3">err<pos:position pos:line="39" pos:column="6"/></name> <operator pos:line="39" pos:column="7">=<pos:position pos:line="39" pos:column="8"/></operator> <call><name pos:line="39" pos:column="9">init_agent<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><name pos:line="39" pos:column="20">PLUGIN_NAME<pos:position pos:line="39" pos:column="31"/></name></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>
  <if pos:line="40" pos:column="3">if <condition pos:line="40" pos:column="6">(<expr><name pos:line="40" pos:column="7">err<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">!=<pos:position pos:line="40" pos:column="13"/></operator> <literal type="number" pos:line="40" pos:column="14">0<pos:position pos:line="40" pos:column="15"/></literal></expr>)<pos:position pos:line="40" pos:column="16"/></condition><then pos:line="40" pos:column="16"> <block pos:line="40" pos:column="17">{
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">ERROR<pos:position pos:line="41" pos:column="10"/></name><argument_list pos:line="41" pos:column="10">(<argument><expr><name pos:line="41" pos:column="11">PLUGIN_NAME<pos:position pos:line="41" pos:column="22"/></name> <literal type="string" pos:line="41" pos:column="23">": Failed to initialize the agent library (%d)"<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="72">err<pos:position pos:line="41" pos:column="75"/></name></expr></argument>)<pos:position pos:line="41" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="77"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">llist_destroy<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><name><name pos:line="42" pos:column="19">g_agent<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">scalars<pos:position pos:line="42" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">llist_destroy<pos:position pos:line="43" pos:column="18"/></name><argument_list pos:line="43" pos:column="18">(<argument><expr><name><name pos:line="43" pos:column="19">g_agent<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">tables<pos:position pos:line="43" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">-<pos:position pos:line="44" pos:column="13"/></operator><literal type="number" pos:line="44" pos:column="13">1<pos:position pos:line="44" pos:column="14"/></literal></expr>;<pos:position pos:line="44" pos:column="15"/></return>
  }<pos:position pos:line="45" pos:column="4"/></block></then></if>

  <expr_stmt><expr><call><name pos:line="47" pos:column="3">init_snmp<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><name pos:line="47" pos:column="13">PLUGIN_NAME<pos:position pos:line="47" pos:column="24"/></name></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="26"/></expr_stmt>

  <expr_stmt><expr><name><name pos:line="49" pos:column="3">g_agent<pos:position pos:line="49" pos:column="10"/></name><operator pos:line="49" pos:column="10">-&gt;<pos:position pos:line="49" pos:column="15"/></operator><name pos:line="49" pos:column="12">tp<pos:position pos:line="49" pos:column="14"/></name></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <call><name pos:line="49" pos:column="17">read_all_mibs<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">()<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>

  <return pos:line="51" pos:column="3">return <expr><literal type="number" pos:line="51" pos:column="10">0<pos:position pos:line="51" pos:column="11"/></literal></expr>;<pos:position pos:line="51" pos:column="12"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

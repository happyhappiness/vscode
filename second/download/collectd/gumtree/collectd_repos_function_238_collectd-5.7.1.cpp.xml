<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_238_collectd-5.7.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">dpdk_re_init_shm<pos:position pos:line="1" pos:column="28"/></name><parameter_list pos:line="1" pos:column="28">()<pos:position pos:line="1" pos:column="30"/></parameter_list> <block pos:line="1" pos:column="31">{
  <decl_stmt><decl><type><name pos:line="2" pos:column="3">dpdk_config_t<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">temp_config<pos:position pos:line="2" pos:column="28"/></name></decl>;<pos:position pos:line="2" pos:column="29"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="3" pos:column="3">memcpy<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><operator pos:line="3" pos:column="10">&amp;<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="11">temp_config<pos:position pos:line="3" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="24">g_configuration<pos:position pos:line="3" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="3" pos:column="41">sizeof<argument_list pos:line="3" pos:column="47">(<argument><expr><name pos:line="3" pos:column="48">dpdk_config_t<pos:position pos:line="3" pos:column="61"/></name></expr></argument>)<pos:position pos:line="3" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="3" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="4" pos:column="3">DEBUG<pos:position pos:line="4" pos:column="8"/></name><argument_list pos:line="4" pos:column="8">(<argument><expr><literal type="string" pos:line="4" pos:column="9">"dpdkstat: %s: ports %"<pos:position pos:line="4" pos:column="32"/></literal> <name pos:line="4" pos:column="33">PRIu32<pos:position pos:line="4" pos:column="39"/></name> <literal type="string" pos:line="4" pos:column="40">", xstats %"<pos:position pos:line="4" pos:column="52"/></literal> <name pos:line="4" pos:column="53">PRIu32<pos:position pos:line="4" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="61">__func__<pos:position pos:line="4" pos:column="69"/></name></expr></argument>,
        <argument><expr><name><name pos:line="5" pos:column="9">temp_config<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">.<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">num_ports<pos:position pos:line="5" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="32">temp_config<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">.<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="44">num_xstats<pos:position pos:line="5" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="56"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="7" pos:column="3">size_t<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">shm_xstats_size<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">=
      <expr><sizeof pos:line="8" pos:column="7">sizeof<argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">dpdk_config_t<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></sizeof> <operator pos:line="8" pos:column="29">+<pos:position pos:line="8" pos:column="30"/></operator>
      <operator pos:line="9" pos:column="7">(<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">DPDK_STATS_CTX_GET_XSTAT_SIZE<pos:position pos:line="9" pos:column="37"/></name> <operator pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></operator> <name><name pos:line="9" pos:column="40">g_configuration<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">num_xstats<pos:position pos:line="9" pos:column="67"/></name></name><operator pos:line="9" pos:column="67">)<pos:position pos:line="9" pos:column="68"/></operator></expr></init></decl>;<pos:position pos:line="9" pos:column="69"/></decl_stmt>
  <expr_stmt><expr><call><name pos:line="10" pos:column="3">DEBUG<pos:position pos:line="10" pos:column="8"/></name><argument_list pos:line="10" pos:column="8">(<argument><expr><literal type="string" pos:line="10" pos:column="9">"=== SHM new size for %"<pos:position pos:line="10" pos:column="33"/></literal> <name pos:line="10" pos:column="34">PRIu32<pos:position pos:line="10" pos:column="40"/></name> <literal type="string" pos:line="10" pos:column="41">" xstats"<pos:position pos:line="10" pos:column="50"/></literal></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="52">g_configuration<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">-&gt;<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="69">num_xstats<pos:position pos:line="10" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="81"/></expr_stmt>

  <decl_stmt><decl><type><name pos:line="12" pos:column="3">int<pos:position pos:line="12" pos:column="6"/></name></type> <name pos:line="12" pos:column="7">err<pos:position pos:line="12" pos:column="10"/></name> <init pos:line="12" pos:column="11">= <expr><call><name pos:line="12" pos:column="13">dpdk_shm_cleanup<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">()<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
  <if pos:line="13" pos:column="3">if <condition pos:line="13" pos:column="6">(<expr><name pos:line="13" pos:column="7">err<pos:position pos:line="13" pos:column="10"/></name></expr>)<pos:position pos:line="13" pos:column="11"/></condition><then pos:line="13" pos:column="11"> <block pos:line="13" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">ERROR<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"dpdkstat: Error in shm_cleanup in %s"<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">__func__<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">err<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
  }<pos:position pos:line="16" pos:column="4"/></block></then></if>
  <expr_stmt><expr><name pos:line="17" pos:column="3">err<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">dpdk_shm_init<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">shm_xstats_size<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><name pos:line="18" pos:column="7">err<pos:position pos:line="18" pos:column="10"/></name></expr>)<pos:position pos:line="18" pos:column="11"/></condition><then pos:line="18" pos:column="11"> <block pos:line="18" pos:column="12">{
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">WARNING<pos:position pos:line="19" pos:column="12"/></name><argument_list pos:line="19" pos:column="12">(<argument><expr><literal type="string" pos:line="19" pos:column="13">"dpdkstat: Error in shm_init in %s"<pos:position pos:line="19" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="50">__func__<pos:position pos:line="19" pos:column="58"/></name></expr></argument>)<pos:position pos:line="19" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="60"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">err<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></return>
  }<pos:position pos:line="21" pos:column="4"/></block></then></if>
  <comment type="block" pos:line="22" pos:column="3">/* If the XML config() function has been run, don't re-initialize defaults */</comment>
  <if pos:line="23" pos:column="3">if <condition pos:line="23" pos:column="6">(<expr><operator pos:line="23" pos:column="7">!<pos:position pos:line="23" pos:column="8"/></operator><name pos:line="23" pos:column="8">g_configured<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21">
    <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="5">dpdk_config_init_default<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">()<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt></block></then></if>

  <expr_stmt><expr><call><name pos:line="26" pos:column="3">memcpy<pos:position pos:line="26" pos:column="9"/></name><argument_list pos:line="26" pos:column="9">(<argument><expr><name pos:line="26" pos:column="10">g_configuration<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="28">temp_config<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="26" pos:column="41">sizeof<argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">dpdk_config_t<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="64"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="27" pos:column="3">g_configuration<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">collectd_reinit_shm<pos:position pos:line="27" pos:column="39"/></name></name> <operator pos:line="27" pos:column="40">=<pos:position pos:line="27" pos:column="41"/></operator> <literal type="number" pos:line="27" pos:column="42">0<pos:position pos:line="27" pos:column="43"/></literal></expr>;<pos:position pos:line="27" pos:column="44"/></expr_stmt>
  <expr_stmt><expr><name><name pos:line="28" pos:column="3">g_configuration<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">-&gt;<pos:position pos:line="28" pos:column="23"/></operator><name pos:line="28" pos:column="20">raw_data<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">=<pos:position pos:line="28" pos:column="30"/></operator> <operator pos:line="28" pos:column="31">(<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">char<pos:position pos:line="28" pos:column="36"/></name> <operator pos:line="28" pos:column="37">*<pos:position pos:line="28" pos:column="38"/></operator><operator pos:line="28" pos:column="38">)<pos:position pos:line="28" pos:column="39"/></operator><operator pos:line="28" pos:column="39">(<pos:position pos:line="28" pos:column="40"/></operator><name pos:line="28" pos:column="40">g_configuration<pos:position pos:line="28" pos:column="55"/></name> <operator pos:line="28" pos:column="56">+<pos:position pos:line="28" pos:column="57"/></operator> <literal type="number" pos:line="28" pos:column="58">1<pos:position pos:line="28" pos:column="59"/></literal><operator pos:line="28" pos:column="59">)<pos:position pos:line="28" pos:column="60"/></operator></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
  <expr_stmt><expr><call><name pos:line="29" pos:column="3">DPDK_STATS_CTX_INIT<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">g_configuration<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>
  <return pos:line="30" pos:column="3">return <expr><literal type="number" pos:line="30" pos:column="10">0<pos:position pos:line="30" pos:column="11"/></literal></expr>;<pos:position pos:line="30" pos:column="12"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

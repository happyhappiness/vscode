<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_function_424.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">PyObject<pos:position pos:line="1" pos:column="16"/></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type><name pos:line="1" pos:column="18">Values_write<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(<parameter><decl><type><name pos:line="1" pos:column="31">Values<pos:position pos:line="1" pos:column="37"/></name> <modifier pos:line="1" pos:column="38">*<pos:position pos:line="1" pos:column="39"/></modifier></type><name pos:line="1" pos:column="39">self<pos:position pos:line="1" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="45">PyObject<pos:position pos:line="1" pos:column="53"/></name> <modifier pos:line="1" pos:column="54">*<pos:position pos:line="1" pos:column="55"/></modifier></type><name pos:line="1" pos:column="55">args<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="61">PyObject<pos:position pos:line="1" pos:column="69"/></name> <modifier pos:line="1" pos:column="70">*<pos:position pos:line="1" pos:column="71"/></modifier></type><name pos:line="1" pos:column="71">kwds<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list> <block pos:line="1" pos:column="77">{
	<decl_stmt><decl><type><name pos:line="2" pos:column="9">int<pos:position pos:line="2" pos:column="12"/></name></type> <name pos:line="2" pos:column="13">i<pos:position pos:line="2" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="2" pos:column="16">ret<pos:position pos:line="2" pos:column="19"/></name></decl>;<pos:position pos:line="2" pos:column="20"/></decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="3" pos:column="9">const<pos:position pos:line="3" pos:column="14"/></specifier> <name pos:line="3" pos:column="15">data_set_t<pos:position pos:line="3" pos:column="25"/></name> <modifier pos:line="3" pos:column="26">*<pos:position pos:line="3" pos:column="27"/></modifier></type><name pos:line="3" pos:column="27">ds<pos:position pos:line="3" pos:column="29"/></name></decl>;<pos:position pos:line="3" pos:column="30"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="4" pos:column="9">int<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">size<pos:position pos:line="4" pos:column="17"/></name></decl>;<pos:position pos:line="4" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="5" pos:column="9">value_t<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">value<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="6" pos:column="9">value_list_t<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">value_list<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><name pos:line="6" pos:column="35">VALUE_LIST_INIT<pos:position pos:line="6" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="7" pos:column="9">PyObject<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type><name pos:line="7" pos:column="19">values<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><name><name pos:line="7" pos:column="28">self<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">values<pos:position pos:line="7" pos:column="40"/></name></name></expr></init></decl>, <modifier pos:line="7" pos:column="42">*<pos:position pos:line="7" pos:column="43"/></modifier><decl><type ref="prev"/><name pos:line="7" pos:column="43">meta<pos:position pos:line="7" pos:column="47"/></name> <init pos:line="7" pos:column="48">= <expr><name><name pos:line="7" pos:column="50">self<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">-&gt;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="56">meta<pos:position pos:line="7" pos:column="60"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="61"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="8" pos:column="9">double<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">time<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name><name pos:line="8" pos:column="23">self<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">-&gt;<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="29">data<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">time<pos:position pos:line="8" pos:column="38"/></name></name></expr></init></decl>, <decl><type ref="prev"/><name pos:line="8" pos:column="40">interval<pos:position pos:line="8" pos:column="48"/></name> <init pos:line="8" pos:column="49">= <expr><name><name pos:line="8" pos:column="51">self<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">interval<pos:position pos:line="8" pos:column="65"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="66"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">host<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">NULL<pos:position pos:line="9" pos:column="26"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="29">plugin<pos:position pos:line="9" pos:column="35"/></name> <init pos:line="9" pos:column="36">= <expr><name pos:line="9" pos:column="38">NULL<pos:position pos:line="9" pos:column="42"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="44">*<pos:position pos:line="9" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="45">plugin_instance<pos:position pos:line="9" pos:column="60"/></name> <init pos:line="9" pos:column="61">= <expr><name pos:line="9" pos:column="63">NULL<pos:position pos:line="9" pos:column="67"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="69">*<pos:position pos:line="9" pos:column="70"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="70">type<pos:position pos:line="9" pos:column="74"/></name> <init pos:line="9" pos:column="75">= <expr><name pos:line="9" pos:column="77">NULL<pos:position pos:line="9" pos:column="81"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="83">*<pos:position pos:line="9" pos:column="84"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="84">type_instance<pos:position pos:line="9" pos:column="97"/></name> <init pos:line="9" pos:column="98">= <expr><name pos:line="9" pos:column="100">NULL<pos:position pos:line="9" pos:column="104"/></name></expr></init></decl>, <modifier pos:line="9" pos:column="106">*<pos:position pos:line="9" pos:column="107"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="107">dest<pos:position pos:line="9" pos:column="111"/></name> <init pos:line="9" pos:column="112">= <expr><name pos:line="9" pos:column="114">NULL<pos:position pos:line="9" pos:column="118"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="119"/></decl_stmt>
	
	<decl_stmt><decl><specifier pos:line="11" pos:column="9">static<pos:position pos:line="11" pos:column="15"/></specifier> <type><name pos:line="11" pos:column="16">char<pos:position pos:line="11" pos:column="20"/></name> <modifier pos:line="11" pos:column="21">*<pos:position pos:line="11" pos:column="22"/></modifier></type><name><name pos:line="11" pos:column="22">kwlist<pos:position pos:line="11" pos:column="28"/></name><index pos:line="11" pos:column="28">[]<pos:position pos:line="11" pos:column="30"/></index></name> <init pos:line="11" pos:column="31">= <expr><block pos:line="11" pos:column="33">{<expr><literal type="string" pos:line="11" pos:column="34">"destination"<pos:position pos:line="11" pos:column="47"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="49">"type"<pos:position pos:line="11" pos:column="55"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="57">"values"<pos:position pos:line="11" pos:column="65"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="67">"plugin_instance"<pos:position pos:line="11" pos:column="84"/></literal></expr>, <expr><literal type="string" pos:line="11" pos:column="86">"type_instance"<pos:position pos:line="11" pos:column="101"/></literal></expr>,
			<expr><literal type="string" pos:line="12" pos:column="25">"plugin"<pos:position pos:line="12" pos:column="33"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="35">"host"<pos:position pos:line="12" pos:column="41"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="43">"time"<pos:position pos:line="12" pos:column="49"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="51">"interval"<pos:position pos:line="12" pos:column="61"/></literal></expr>, <expr><literal type="string" pos:line="12" pos:column="63">"meta"<pos:position pos:line="12" pos:column="69"/></literal></expr>, <expr><name pos:line="12" pos:column="71">NULL<pos:position pos:line="12" pos:column="75"/></name></expr>}<pos:position pos:line="12" pos:column="76"/></block></expr></init></decl>;<pos:position pos:line="12" pos:column="77"/></decl_stmt>
	<if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">PyArg_ParseTupleAndKeywords<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">args<pos:position pos:line="13" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="48">kwds<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="54">"et|etOetetetetdiO"<pos:position pos:line="13" pos:column="73"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="75">kwlist<pos:position pos:line="13" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="83">NULL<pos:position pos:line="13" pos:column="87"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="89">&amp;<pos:position pos:line="13" pos:column="94"/></operator><name pos:line="13" pos:column="90">dest<pos:position pos:line="13" pos:column="94"/></name></expr></argument>,
			<argument><expr><name pos:line="14" pos:column="25">NULL<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="31">&amp;<pos:position pos:line="14" pos:column="36"/></operator><name pos:line="14" pos:column="32">type<pos:position pos:line="14" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="38">&amp;<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="39">values<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="47">NULL<pos:position pos:line="14" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="53">&amp;<pos:position pos:line="14" pos:column="58"/></operator><name pos:line="14" pos:column="54">plugin_instance<pos:position pos:line="14" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="71">NULL<pos:position pos:line="14" pos:column="75"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="77">&amp;<pos:position pos:line="14" pos:column="82"/></operator><name pos:line="14" pos:column="78">type_instance<pos:position pos:line="14" pos:column="91"/></name></expr></argument>,
			<argument><expr><name pos:line="15" pos:column="25">NULL<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="31">&amp;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="32">plugin<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="40">NULL<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="46">&amp;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="47">host<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="53">&amp;<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="54">time<pos:position pos:line="15" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="60">&amp;<pos:position pos:line="15" pos:column="65"/></operator><name pos:line="15" pos:column="61">interval<pos:position pos:line="15" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="71">&amp;<pos:position pos:line="15" pos:column="76"/></operator><name pos:line="15" pos:column="72">meta<pos:position pos:line="15" pos:column="76"/></name></expr></argument>)<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="78"/></condition><then pos:line="15" pos:column="78">
		<block type="pseudo"><return pos:line="16" pos:column="17">return <expr><name pos:line="16" pos:column="24">NULL<pos:position pos:line="16" pos:column="28"/></name></expr>;<pos:position pos:line="16" pos:column="29"/></return></block></then></if>

	<expr_stmt><expr><call><name pos:line="18" pos:column="9">sstrncpy<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name><name pos:line="18" pos:column="18">value_list<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">host<pos:position pos:line="18" pos:column="33"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="18" pos:column="35">host<pos:position pos:line="18" pos:column="39"/></name></expr> ?<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <expr><name pos:line="18" pos:column="42">host<pos:position pos:line="18" pos:column="46"/></name></expr> <pos:position pos:line="18" pos:column="47"/></then><else pos:line="18" pos:column="47">: <expr><name><name pos:line="18" pos:column="49">self<pos:position pos:line="18" pos:column="53"/></name><operator pos:line="18" pos:column="53">-&gt;<pos:position pos:line="18" pos:column="58"/></operator><name pos:line="18" pos:column="55">data<pos:position pos:line="18" pos:column="59"/></name><operator pos:line="18" pos:column="59">.<pos:position pos:line="18" pos:column="60"/></operator><name pos:line="18" pos:column="60">host<pos:position pos:line="18" pos:column="64"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="66">sizeof<argument_list pos:line="18" pos:column="72">(<argument><expr><name><name pos:line="18" pos:column="73">value_list<pos:position pos:line="18" pos:column="83"/></name><operator pos:line="18" pos:column="83">.<pos:position pos:line="18" pos:column="84"/></operator><name pos:line="18" pos:column="84">host<pos:position pos:line="18" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="89"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="18" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="91"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="19" pos:column="9">sstrncpy<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">(<argument><expr><name><name pos:line="19" pos:column="18">value_list<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">plugin<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="19" pos:column="37">plugin<pos:position pos:line="19" pos:column="43"/></name></expr> ?<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <expr><name pos:line="19" pos:column="46">plugin<pos:position pos:line="19" pos:column="52"/></name></expr> <pos:position pos:line="19" pos:column="53"/></then><else pos:line="19" pos:column="53">: <expr><name><name pos:line="19" pos:column="55">self<pos:position pos:line="19" pos:column="59"/></name><operator pos:line="19" pos:column="59">-&gt;<pos:position pos:line="19" pos:column="64"/></operator><name pos:line="19" pos:column="61">data<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">.<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="66">plugin<pos:position pos:line="19" pos:column="72"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="74">sizeof<argument_list pos:line="19" pos:column="80">(<argument><expr><name><name pos:line="19" pos:column="81">value_list<pos:position pos:line="19" pos:column="91"/></name><operator pos:line="19" pos:column="91">.<pos:position pos:line="19" pos:column="92"/></operator><name pos:line="19" pos:column="92">plugin<pos:position pos:line="19" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="99"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="19" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="101"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="20" pos:column="9">sstrncpy<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><name><name pos:line="20" pos:column="18">value_list<pos:position pos:line="20" pos:column="28"/></name><operator pos:line="20" pos:column="28">.<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="29">plugin_instance<pos:position pos:line="20" pos:column="44"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="20" pos:column="46">plugin_instance<pos:position pos:line="20" pos:column="61"/></name></expr> ?<pos:position pos:line="20" pos:column="63"/></condition><then pos:line="20" pos:column="63"> <expr><name pos:line="20" pos:column="64">plugin_instance<pos:position pos:line="20" pos:column="79"/></name></expr> <pos:position pos:line="20" pos:column="80"/></then><else pos:line="20" pos:column="80">: <expr><name><name pos:line="20" pos:column="82">self<pos:position pos:line="20" pos:column="86"/></name><operator pos:line="20" pos:column="86">-&gt;<pos:position pos:line="20" pos:column="91"/></operator><name pos:line="20" pos:column="88">data<pos:position pos:line="20" pos:column="92"/></name><operator pos:line="20" pos:column="92">.<pos:position pos:line="20" pos:column="93"/></operator><name pos:line="20" pos:column="93">plugin_instance<pos:position pos:line="20" pos:column="108"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="110">sizeof<argument_list pos:line="20" pos:column="116">(<argument><expr><name><name pos:line="20" pos:column="117">value_list<pos:position pos:line="20" pos:column="127"/></name><operator pos:line="20" pos:column="127">.<pos:position pos:line="20" pos:column="128"/></operator><name pos:line="20" pos:column="128">plugin_instance<pos:position pos:line="20" pos:column="143"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="144"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="146"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="21" pos:column="9">sstrncpy<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">value_list<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">.<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">type<pos:position pos:line="21" pos:column="33"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="21" pos:column="35">type<pos:position pos:line="21" pos:column="39"/></name></expr> ?<pos:position pos:line="21" pos:column="41"/></condition><then pos:line="21" pos:column="41"> <expr><name pos:line="21" pos:column="42">type<pos:position pos:line="21" pos:column="46"/></name></expr> <pos:position pos:line="21" pos:column="47"/></then><else pos:line="21" pos:column="47">: <expr><name><name pos:line="21" pos:column="49">self<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">data<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">.<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="60">type<pos:position pos:line="21" pos:column="64"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="21" pos:column="66">sizeof<argument_list pos:line="21" pos:column="72">(<argument><expr><name><name pos:line="21" pos:column="73">value_list<pos:position pos:line="21" pos:column="83"/></name><operator pos:line="21" pos:column="83">.<pos:position pos:line="21" pos:column="84"/></operator><name pos:line="21" pos:column="84">type<pos:position pos:line="21" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="89"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="21" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="91"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="22" pos:column="9">sstrncpy<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name><name pos:line="22" pos:column="18">value_list<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">type_instance<pos:position pos:line="22" pos:column="42"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="22" pos:column="44">type_instance<pos:position pos:line="22" pos:column="57"/></name></expr> ?<pos:position pos:line="22" pos:column="59"/></condition><then pos:line="22" pos:column="59"> <expr><name pos:line="22" pos:column="60">type_instance<pos:position pos:line="22" pos:column="73"/></name></expr> <pos:position pos:line="22" pos:column="74"/></then><else pos:line="22" pos:column="74">: <expr><name><name pos:line="22" pos:column="76">self<pos:position pos:line="22" pos:column="80"/></name><operator pos:line="22" pos:column="80">-&gt;<pos:position pos:line="22" pos:column="85"/></operator><name pos:line="22" pos:column="82">data<pos:position pos:line="22" pos:column="86"/></name><operator pos:line="22" pos:column="86">.<pos:position pos:line="22" pos:column="87"/></operator><name pos:line="22" pos:column="87">type_instance<pos:position pos:line="22" pos:column="100"/></name></name></expr></else></ternary></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="102">sizeof<argument_list pos:line="22" pos:column="108">(<argument><expr><name><name pos:line="22" pos:column="109">value_list<pos:position pos:line="22" pos:column="119"/></name><operator pos:line="22" pos:column="119">.<pos:position pos:line="22" pos:column="120"/></operator><name pos:line="22" pos:column="120">type_instance<pos:position pos:line="22" pos:column="133"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="134"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="136"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="23" pos:column="9">FreeAll<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">()<pos:position pos:line="23" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="19"/></expr_stmt>
	<if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">value_list<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">.<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="24">type<pos:position pos:line="24" pos:column="28"/></name><index pos:line="24" pos:column="28">[<expr><literal type="number" pos:line="24" pos:column="29">0<pos:position pos:line="24" pos:column="30"/></literal></expr>]<pos:position pos:line="24" pos:column="31"/></index></name> <operator pos:line="24" pos:column="32">==<pos:position pos:line="24" pos:column="34"/></operator> <literal type="number" pos:line="24" pos:column="35">0<pos:position pos:line="24" pos:column="36"/></literal></expr>)<pos:position pos:line="24" pos:column="37"/></condition><then pos:line="24" pos:column="37"> <block pos:line="24" pos:column="38">{
		<expr_stmt><expr><call><name pos:line="25" pos:column="17">PyErr_SetString<pos:position pos:line="25" pos:column="32"/></name><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">PyExc_RuntimeError<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="53">"type not set"<pos:position pos:line="25" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="69"/></expr_stmt>
		<return pos:line="26" pos:column="17">return <expr><name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></return>
	}<pos:position pos:line="27" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="28" pos:column="9">ds<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <call><name pos:line="28" pos:column="14">plugin_get_ds<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name><name pos:line="28" pos:column="28">value_list<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">type<pos:position pos:line="28" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
	<if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">ds<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">==<pos:position pos:line="29" pos:column="18"/></operator> <name pos:line="29" pos:column="19">NULL<pos:position pos:line="29" pos:column="23"/></name></expr>)<pos:position pos:line="29" pos:column="24"/></condition><then pos:line="29" pos:column="24"> <block pos:line="29" pos:column="25">{
		<expr_stmt><expr><call><name pos:line="30" pos:column="17">PyErr_Format<pos:position pos:line="30" pos:column="29"/></name><argument_list pos:line="30" pos:column="29">(<argument><expr><name pos:line="30" pos:column="30">PyExc_TypeError<pos:position pos:line="30" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="47">"Dataset %s not found"<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="71">value_list<pos:position pos:line="30" pos:column="81"/></name><operator pos:line="30" pos:column="81">.<pos:position pos:line="30" pos:column="82"/></operator><name pos:line="30" pos:column="82">type<pos:position pos:line="30" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="88"/></expr_stmt>
		<return pos:line="31" pos:column="17">return <expr><name pos:line="31" pos:column="24">NULL<pos:position pos:line="31" pos:column="28"/></name></expr>;<pos:position pos:line="31" pos:column="29"/></return>
	}<pos:position pos:line="32" pos:column="10"/></block></then></if>
	<if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">values<pos:position pos:line="33" pos:column="19"/></name> <operator pos:line="33" pos:column="20">==<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">NULL<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">||<pos:position pos:line="33" pos:column="30"/></operator> <operator pos:line="33" pos:column="31">(<pos:position pos:line="33" pos:column="32"/></operator><call><name pos:line="33" pos:column="32">PyTuple_Check<pos:position pos:line="33" pos:column="45"/></name><argument_list pos:line="33" pos:column="45">(<argument><expr><name pos:line="33" pos:column="46">values<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call> <operator pos:line="33" pos:column="54">==<pos:position pos:line="33" pos:column="56"/></operator> <literal type="number" pos:line="33" pos:column="57">0<pos:position pos:line="33" pos:column="58"/></literal> <operator pos:line="33" pos:column="59">&amp;&amp;<pos:position pos:line="33" pos:column="69"/></operator> <call><name pos:line="33" pos:column="62">PyList_Check<pos:position pos:line="33" pos:column="74"/></name><argument_list pos:line="33" pos:column="74">(<argument><expr><name pos:line="33" pos:column="75">values<pos:position pos:line="33" pos:column="81"/></name></expr></argument>)<pos:position pos:line="33" pos:column="82"/></argument_list></call> <operator pos:line="33" pos:column="83">==<pos:position pos:line="33" pos:column="85"/></operator> <literal type="number" pos:line="33" pos:column="86">0<pos:position pos:line="33" pos:column="87"/></literal><operator pos:line="33" pos:column="87">)<pos:position pos:line="33" pos:column="88"/></operator></expr>)<pos:position pos:line="33" pos:column="89"/></condition><then pos:line="33" pos:column="89"> <block pos:line="33" pos:column="90">{
		<expr_stmt><expr><call><name pos:line="34" pos:column="17">PyErr_Format<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><name pos:line="34" pos:column="30">PyExc_TypeError<pos:position pos:line="34" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="47">"values must be list or tuple"<pos:position pos:line="34" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="79"/></expr_stmt>
		<return pos:line="35" pos:column="17">return <expr><name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></return>
	}<pos:position pos:line="36" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="37" pos:column="9">size<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">int<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">)<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">PySequence_Length<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><name pos:line="37" pos:column="40">values<pos:position pos:line="37" pos:column="46"/></name></expr></argument>)<pos:position pos:line="37" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="48"/></expr_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">size<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">!=<pos:position pos:line="38" pos:column="20"/></operator> <name><name pos:line="38" pos:column="21">ds<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">ds_num<pos:position pos:line="38" pos:column="31"/></name></name></expr>)<pos:position pos:line="38" pos:column="32"/></condition><then pos:line="38" pos:column="32"> <block pos:line="38" pos:column="33">{
		<expr_stmt><expr><call><name pos:line="39" pos:column="17">PyErr_Format<pos:position pos:line="39" pos:column="29"/></name><argument_list pos:line="39" pos:column="29">(<argument><expr><name pos:line="39" pos:column="30">PyExc_RuntimeError<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="50">"type %s needs %d values, got %i"<pos:position pos:line="39" pos:column="83"/></literal></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="85">value_list<pos:position pos:line="39" pos:column="95"/></name><operator pos:line="39" pos:column="95">.<pos:position pos:line="39" pos:column="96"/></operator><name pos:line="39" pos:column="96">type<pos:position pos:line="39" pos:column="100"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="102">ds<pos:position pos:line="39" pos:column="104"/></name><operator pos:line="39" pos:column="104">-&gt;<pos:position pos:line="39" pos:column="109"/></operator><name pos:line="39" pos:column="106">ds_num<pos:position pos:line="39" pos:column="112"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="114">size<pos:position pos:line="39" pos:column="118"/></name></expr></argument>)<pos:position pos:line="39" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="120"/></expr_stmt>
		<return pos:line="40" pos:column="17">return <expr><name pos:line="40" pos:column="24">NULL<pos:position pos:line="40" pos:column="28"/></name></expr>;<pos:position pos:line="40" pos:column="29"/></return>
	}<pos:position pos:line="41" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="42" pos:column="9">value<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">=<pos:position pos:line="42" pos:column="16"/></operator> <call><name pos:line="42" pos:column="17">malloc<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">size<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">*<pos:position pos:line="42" pos:column="30"/></operator> <sizeof pos:line="42" pos:column="31">sizeof<argument_list pos:line="42" pos:column="37">(<argument><expr><operator pos:line="42" pos:column="38">*<pos:position pos:line="42" pos:column="39"/></operator><name pos:line="42" pos:column="39">value<pos:position pos:line="42" pos:column="44"/></name></expr></argument>)<pos:position pos:line="42" pos:column="45"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="47"/></expr_stmt>
	<for pos:line="43" pos:column="9">for <control pos:line="43" pos:column="13">(<init><expr><name pos:line="43" pos:column="14">i<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <literal type="number" pos:line="43" pos:column="18">0<pos:position pos:line="43" pos:column="19"/></literal></expr>;<pos:position pos:line="43" pos:column="20"/></init> <condition><expr><name pos:line="43" pos:column="21">i<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">&lt;<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="25">size<pos:position pos:line="43" pos:column="29"/></name></expr>;<pos:position pos:line="43" pos:column="30"/></condition> <incr><expr><operator pos:line="43" pos:column="31">++<pos:position pos:line="43" pos:column="33"/></operator><name pos:line="43" pos:column="33">i<pos:position pos:line="43" pos:column="34"/></name></expr></incr>)<pos:position pos:line="43" pos:column="35"/></control> <block pos:line="43" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="44" pos:column="17">PyObject<pos:position pos:line="44" pos:column="25"/></name> <modifier pos:line="44" pos:column="26">*<pos:position pos:line="44" pos:column="27"/></modifier></type><name pos:line="44" pos:column="27">item<pos:position pos:line="44" pos:column="31"/></name></decl>, <modifier pos:line="44" pos:column="33">*<pos:position pos:line="44" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="44" pos:column="34">num<pos:position pos:line="44" pos:column="37"/></name></decl>;<pos:position pos:line="44" pos:column="38"/></decl_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">item<pos:position pos:line="45" pos:column="21"/></name> <operator pos:line="45" pos:column="22">=<pos:position pos:line="45" pos:column="23"/></operator> <call><name pos:line="45" pos:column="24">PySequence_Fast_GET_ITEM<pos:position pos:line="45" pos:column="48"/></name><argument_list pos:line="45" pos:column="48">(<argument><expr><name pos:line="45" pos:column="49">values<pos:position pos:line="45" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="57">i<pos:position pos:line="45" pos:column="58"/></name></expr></argument>)<pos:position pos:line="45" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="60"/></expr_stmt> <comment type="block" pos:line="45" pos:column="61">/* Borrowed reference. */</comment>
		<switch pos:line="46" pos:column="17">switch <condition pos:line="46" pos:column="24">(<expr><name><name pos:line="46" pos:column="25">ds<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">ds<pos:position pos:line="46" pos:column="31"/></name><index pos:line="46" pos:column="31">[<expr><name pos:line="46" pos:column="32">i<pos:position pos:line="46" pos:column="33"/></name></expr>]<pos:position pos:line="46" pos:column="34"/></index></name><operator pos:line="46" pos:column="34">.<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">type<pos:position pos:line="46" pos:column="39"/></name></expr>)<pos:position pos:line="46" pos:column="40"/></condition> <block pos:line="46" pos:column="41">{
		<case pos:line="47" pos:column="17">case <expr><name pos:line="47" pos:column="22">DS_TYPE_COUNTER<pos:position pos:line="47" pos:column="37"/></name></expr>:<pos:position pos:line="47" pos:column="38"/></case>
			<expr_stmt><expr><name pos:line="48" pos:column="25">num<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <call><name pos:line="48" pos:column="31">PyNumber_Long<pos:position pos:line="48" pos:column="44"/></name><argument_list pos:line="48" pos:column="44">(<argument><expr><name pos:line="48" pos:column="45">item<pos:position pos:line="48" pos:column="49"/></name></expr></argument>)<pos:position pos:line="48" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="51"/></expr_stmt> <comment type="block" pos:line="48" pos:column="52">/* New reference. */</comment>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name pos:line="49" pos:column="29">num<pos:position pos:line="49" pos:column="32"/></name> <operator pos:line="49" pos:column="33">!=<pos:position pos:line="49" pos:column="35"/></operator> <name pos:line="49" pos:column="36">NULL<pos:position pos:line="49" pos:column="40"/></name></expr>)<pos:position pos:line="49" pos:column="41"/></condition><then pos:line="49" pos:column="41"> <block pos:line="49" pos:column="42">{
				<expr_stmt><expr><name><name pos:line="50" pos:column="33">value<pos:position pos:line="50" pos:column="38"/></name><index pos:line="50" pos:column="38">[<expr><name pos:line="50" pos:column="39">i<pos:position pos:line="50" pos:column="40"/></name></expr>]<pos:position pos:line="50" pos:column="41"/></index></name><operator pos:line="50" pos:column="41">.<pos:position pos:line="50" pos:column="42"/></operator><name pos:line="50" pos:column="42">counter<pos:position pos:line="50" pos:column="49"/></name> <operator pos:line="50" pos:column="50">=<pos:position pos:line="50" pos:column="51"/></operator> <call><name pos:line="50" pos:column="52">PyLong_AsUnsignedLongLong<pos:position pos:line="50" pos:column="77"/></name><argument_list pos:line="50" pos:column="77">(<argument><expr><name pos:line="50" pos:column="78">num<pos:position pos:line="50" pos:column="81"/></name></expr></argument>)<pos:position pos:line="50" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="83"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="51" pos:column="33">Py_XDECREF<pos:position pos:line="51" pos:column="43"/></name><argument_list pos:line="51" pos:column="43">(<argument><expr><name pos:line="51" pos:column="44">num<pos:position pos:line="51" pos:column="47"/></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="52" pos:column="26"/></block></then></if>
			<break pos:line="53" pos:column="25">break;<pos:position pos:line="53" pos:column="31"/></break>
		<case pos:line="54" pos:column="17">case <expr><name pos:line="54" pos:column="22">DS_TYPE_GAUGE<pos:position pos:line="54" pos:column="35"/></name></expr>:<pos:position pos:line="54" pos:column="36"/></case>
			<expr_stmt><expr><name pos:line="55" pos:column="25">num<pos:position pos:line="55" pos:column="28"/></name> <operator pos:line="55" pos:column="29">=<pos:position pos:line="55" pos:column="30"/></operator> <call><name pos:line="55" pos:column="31">PyNumber_Float<pos:position pos:line="55" pos:column="45"/></name><argument_list pos:line="55" pos:column="45">(<argument><expr><name pos:line="55" pos:column="46">item<pos:position pos:line="55" pos:column="50"/></name></expr></argument>)<pos:position pos:line="55" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="52"/></expr_stmt> <comment type="block" pos:line="55" pos:column="53">/* New reference. */</comment>
			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name pos:line="56" pos:column="29">num<pos:position pos:line="56" pos:column="32"/></name> <operator pos:line="56" pos:column="33">!=<pos:position pos:line="56" pos:column="35"/></operator> <name pos:line="56" pos:column="36">NULL<pos:position pos:line="56" pos:column="40"/></name></expr>)<pos:position pos:line="56" pos:column="41"/></condition><then pos:line="56" pos:column="41"> <block pos:line="56" pos:column="42">{
				<expr_stmt><expr><name><name pos:line="57" pos:column="33">value<pos:position pos:line="57" pos:column="38"/></name><index pos:line="57" pos:column="38">[<expr><name pos:line="57" pos:column="39">i<pos:position pos:line="57" pos:column="40"/></name></expr>]<pos:position pos:line="57" pos:column="41"/></index></name><operator pos:line="57" pos:column="41">.<pos:position pos:line="57" pos:column="42"/></operator><name pos:line="57" pos:column="42">gauge<pos:position pos:line="57" pos:column="47"/></name> <operator pos:line="57" pos:column="48">=<pos:position pos:line="57" pos:column="49"/></operator> <call><name pos:line="57" pos:column="50">PyFloat_AsDouble<pos:position pos:line="57" pos:column="66"/></name><argument_list pos:line="57" pos:column="66">(<argument><expr><name pos:line="57" pos:column="67">num<pos:position pos:line="57" pos:column="70"/></name></expr></argument>)<pos:position pos:line="57" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="72"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="58" pos:column="33">Py_XDECREF<pos:position pos:line="58" pos:column="43"/></name><argument_list pos:line="58" pos:column="43">(<argument><expr><name pos:line="58" pos:column="44">num<pos:position pos:line="58" pos:column="47"/></name></expr></argument>)<pos:position pos:line="58" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="59" pos:column="26"/></block></then></if>
			<break pos:line="60" pos:column="25">break;<pos:position pos:line="60" pos:column="31"/></break>
		<case pos:line="61" pos:column="17">case <expr><name pos:line="61" pos:column="22">DS_TYPE_DERIVE<pos:position pos:line="61" pos:column="36"/></name></expr>:<pos:position pos:line="61" pos:column="37"/></case>
			<comment type="block" pos:line="62" pos:column="25">/* This might overflow without raising an exception.
			 * Not much we can do about it */</comment>
			<expr_stmt><expr><name pos:line="64" pos:column="25">num<pos:position pos:line="64" pos:column="28"/></name> <operator pos:line="64" pos:column="29">=<pos:position pos:line="64" pos:column="30"/></operator> <call><name pos:line="64" pos:column="31">PyNumber_Long<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(<argument><expr><name pos:line="64" pos:column="45">item<pos:position pos:line="64" pos:column="49"/></name></expr></argument>)<pos:position pos:line="64" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="51"/></expr_stmt> <comment type="block" pos:line="64" pos:column="52">/* New reference. */</comment>
			<if pos:line="65" pos:column="25">if <condition pos:line="65" pos:column="28">(<expr><name pos:line="65" pos:column="29">num<pos:position pos:line="65" pos:column="32"/></name> <operator pos:line="65" pos:column="33">!=<pos:position pos:line="65" pos:column="35"/></operator> <name pos:line="65" pos:column="36">NULL<pos:position pos:line="65" pos:column="40"/></name></expr>)<pos:position pos:line="65" pos:column="41"/></condition><then pos:line="65" pos:column="41"> <block pos:line="65" pos:column="42">{
				<expr_stmt><expr><name><name pos:line="66" pos:column="33">value<pos:position pos:line="66" pos:column="38"/></name><index pos:line="66" pos:column="38">[<expr><name pos:line="66" pos:column="39">i<pos:position pos:line="66" pos:column="40"/></name></expr>]<pos:position pos:line="66" pos:column="41"/></index></name><operator pos:line="66" pos:column="41">.<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="42">derive<pos:position pos:line="66" pos:column="48"/></name> <operator pos:line="66" pos:column="49">=<pos:position pos:line="66" pos:column="50"/></operator> <call><name pos:line="66" pos:column="51">PyLong_AsLongLong<pos:position pos:line="66" pos:column="68"/></name><argument_list pos:line="66" pos:column="68">(<argument><expr><name pos:line="66" pos:column="69">num<pos:position pos:line="66" pos:column="72"/></name></expr></argument>)<pos:position pos:line="66" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="74"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="67" pos:column="33">Py_XDECREF<pos:position pos:line="67" pos:column="43"/></name><argument_list pos:line="67" pos:column="43">(<argument><expr><name pos:line="67" pos:column="44">num<pos:position pos:line="67" pos:column="47"/></name></expr></argument>)<pos:position pos:line="67" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="68" pos:column="26"/></block></then></if>
			<break pos:line="69" pos:column="25">break;<pos:position pos:line="69" pos:column="31"/></break>
		<case pos:line="70" pos:column="17">case <expr><name pos:line="70" pos:column="22">DS_TYPE_ABSOLUTE<pos:position pos:line="70" pos:column="38"/></name></expr>:<pos:position pos:line="70" pos:column="39"/></case>
			<comment type="block" pos:line="71" pos:column="25">/* This might overflow without raising an exception.
			 * Not much we can do about it */</comment>
			<expr_stmt><expr><name pos:line="73" pos:column="25">num<pos:position pos:line="73" pos:column="28"/></name> <operator pos:line="73" pos:column="29">=<pos:position pos:line="73" pos:column="30"/></operator> <call><name pos:line="73" pos:column="31">PyNumber_Long<pos:position pos:line="73" pos:column="44"/></name><argument_list pos:line="73" pos:column="44">(<argument><expr><name pos:line="73" pos:column="45">item<pos:position pos:line="73" pos:column="49"/></name></expr></argument>)<pos:position pos:line="73" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="51"/></expr_stmt> <comment type="block" pos:line="73" pos:column="52">/* New reference. */</comment>
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><name pos:line="74" pos:column="29">num<pos:position pos:line="74" pos:column="32"/></name> <operator pos:line="74" pos:column="33">!=<pos:position pos:line="74" pos:column="35"/></operator> <name pos:line="74" pos:column="36">NULL<pos:position pos:line="74" pos:column="40"/></name></expr>)<pos:position pos:line="74" pos:column="41"/></condition><then pos:line="74" pos:column="41"> <block pos:line="74" pos:column="42">{
				<expr_stmt><expr><name><name pos:line="75" pos:column="33">value<pos:position pos:line="75" pos:column="38"/></name><index pos:line="75" pos:column="38">[<expr><name pos:line="75" pos:column="39">i<pos:position pos:line="75" pos:column="40"/></name></expr>]<pos:position pos:line="75" pos:column="41"/></index></name><operator pos:line="75" pos:column="41">.<pos:position pos:line="75" pos:column="42"/></operator><name pos:line="75" pos:column="42">absolute<pos:position pos:line="75" pos:column="50"/></name> <operator pos:line="75" pos:column="51">=<pos:position pos:line="75" pos:column="52"/></operator> <call><name pos:line="75" pos:column="53">PyLong_AsUnsignedLongLong<pos:position pos:line="75" pos:column="78"/></name><argument_list pos:line="75" pos:column="78">(<argument><expr><name pos:line="75" pos:column="79">num<pos:position pos:line="75" pos:column="82"/></name></expr></argument>)<pos:position pos:line="75" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="84"/></expr_stmt>
				<expr_stmt><expr><call><name pos:line="76" pos:column="33">Py_XDECREF<pos:position pos:line="76" pos:column="43"/></name><argument_list pos:line="76" pos:column="43">(<argument><expr><name pos:line="76" pos:column="44">num<pos:position pos:line="76" pos:column="47"/></name></expr></argument>)<pos:position pos:line="76" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="49"/></expr_stmt>
			}<pos:position pos:line="77" pos:column="26"/></block></then></if>
			<break pos:line="78" pos:column="25">break;<pos:position pos:line="78" pos:column="31"/></break>
		<default pos:line="79" pos:column="17">default:<pos:position pos:line="79" pos:column="25"/></default>
			<expr_stmt><expr><call><name pos:line="80" pos:column="25">free<pos:position pos:line="80" pos:column="29"/></name><argument_list pos:line="80" pos:column="29">(<argument><expr><name pos:line="80" pos:column="30">value<pos:position pos:line="80" pos:column="35"/></name></expr></argument>)<pos:position pos:line="80" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="37"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="81" pos:column="25">PyErr_Format<pos:position pos:line="81" pos:column="37"/></name><argument_list pos:line="81" pos:column="37">(<argument><expr><name pos:line="81" pos:column="38">PyExc_RuntimeError<pos:position pos:line="81" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="58">"unknown data type %d for %s"<pos:position pos:line="81" pos:column="87"/></literal></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="89">ds<pos:position pos:line="81" pos:column="91"/></name><operator pos:line="81" pos:column="91">-&gt;<pos:position pos:line="81" pos:column="96"/></operator><name pos:line="81" pos:column="93">ds<pos:position pos:line="81" pos:column="95"/></name><index pos:line="81" pos:column="95">[<expr><name pos:line="81" pos:column="96">i<pos:position pos:line="81" pos:column="97"/></name></expr>]<pos:position pos:line="81" pos:column="98"/></index></name><operator pos:line="81" pos:column="98">.<pos:position pos:line="81" pos:column="99"/></operator><name pos:line="81" pos:column="99">type<pos:position pos:line="81" pos:column="103"/></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="105">value_list<pos:position pos:line="81" pos:column="115"/></name><operator pos:line="81" pos:column="115">.<pos:position pos:line="81" pos:column="116"/></operator><name pos:line="81" pos:column="116">type<pos:position pos:line="81" pos:column="120"/></name></name></expr></argument>)<pos:position pos:line="81" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="122"/></expr_stmt>
			<return pos:line="82" pos:column="25">return <expr><name pos:line="82" pos:column="32">NULL<pos:position pos:line="82" pos:column="36"/></name></expr>;<pos:position pos:line="82" pos:column="37"/></return>
		}<pos:position pos:line="83" pos:column="18"/></block></switch>
		<if pos:line="84" pos:column="17">if <condition pos:line="84" pos:column="20">(<expr><call><name pos:line="84" pos:column="21">PyErr_Occurred<pos:position pos:line="84" pos:column="35"/></name><argument_list pos:line="84" pos:column="35">()<pos:position pos:line="84" pos:column="37"/></argument_list></call> <operator pos:line="84" pos:column="38">!=<pos:position pos:line="84" pos:column="40"/></operator> <name pos:line="84" pos:column="41">NULL<pos:position pos:line="84" pos:column="45"/></name></expr>)<pos:position pos:line="84" pos:column="46"/></condition><then pos:line="84" pos:column="46"> <block pos:line="84" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="85" pos:column="25">free<pos:position pos:line="85" pos:column="29"/></name><argument_list pos:line="85" pos:column="29">(<argument><expr><name pos:line="85" pos:column="30">value<pos:position pos:line="85" pos:column="35"/></name></expr></argument>)<pos:position pos:line="85" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt>
			<return pos:line="86" pos:column="25">return <expr><name pos:line="86" pos:column="32">NULL<pos:position pos:line="86" pos:column="36"/></name></expr>;<pos:position pos:line="86" pos:column="37"/></return>
		}<pos:position pos:line="87" pos:column="18"/></block></then></if>
	}<pos:position pos:line="88" pos:column="10"/></block></for>
	<expr_stmt><expr><name><name pos:line="89" pos:column="9">value_list<pos:position pos:line="89" pos:column="19"/></name><operator pos:line="89" pos:column="19">.<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="20">values<pos:position pos:line="89" pos:column="26"/></name></name> <operator pos:line="89" pos:column="27">=<pos:position pos:line="89" pos:column="28"/></operator> <name pos:line="89" pos:column="29">value<pos:position pos:line="89" pos:column="34"/></name></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="90" pos:column="9">value_list<pos:position pos:line="90" pos:column="19"/></name><operator pos:line="90" pos:column="19">.<pos:position pos:line="90" pos:column="20"/></operator><name pos:line="90" pos:column="20">values_len<pos:position pos:line="90" pos:column="30"/></name></name> <operator pos:line="90" pos:column="31">=<pos:position pos:line="90" pos:column="32"/></operator> <name pos:line="90" pos:column="33">size<pos:position pos:line="90" pos:column="37"/></name></expr>;<pos:position pos:line="90" pos:column="38"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="91" pos:column="9">value_list<pos:position pos:line="91" pos:column="19"/></name><operator pos:line="91" pos:column="19">.<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="20">time<pos:position pos:line="91" pos:column="24"/></name></name> <operator pos:line="91" pos:column="25">=<pos:position pos:line="91" pos:column="26"/></operator> <call><name pos:line="91" pos:column="27">DOUBLE_TO_CDTIME_T<pos:position pos:line="91" pos:column="45"/></name><argument_list pos:line="91" pos:column="45">(<argument><expr><name pos:line="91" pos:column="46">time<pos:position pos:line="91" pos:column="50"/></name></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="52"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="92" pos:column="9">value_list<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">.<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="20">interval<pos:position pos:line="92" pos:column="28"/></name></name> <operator pos:line="92" pos:column="29">=<pos:position pos:line="92" pos:column="30"/></operator> <call><name pos:line="92" pos:column="31">DOUBLE_TO_CDTIME_T<pos:position pos:line="92" pos:column="49"/></name><argument_list pos:line="92" pos:column="49">(<argument><expr><name pos:line="92" pos:column="50">interval<pos:position pos:line="92" pos:column="58"/></name></expr></argument>)<pos:position pos:line="92" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="60"/></expr_stmt>
	<expr_stmt><expr><name><name pos:line="93" pos:column="9">value_list<pos:position pos:line="93" pos:column="19"/></name><operator pos:line="93" pos:column="19">.<pos:position pos:line="93" pos:column="20"/></operator><name pos:line="93" pos:column="20">meta<pos:position pos:line="93" pos:column="24"/></name></name> <operator pos:line="93" pos:column="25">=<pos:position pos:line="93" pos:column="26"/></operator> <call><name pos:line="93" pos:column="27">cpy_build_meta<pos:position pos:line="93" pos:column="41"/></name><argument_list pos:line="93" pos:column="41">(<argument><expr><name pos:line="93" pos:column="42">meta<pos:position pos:line="93" pos:column="46"/></name></expr></argument>)<pos:position pos:line="93" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt><empty_stmt pos:line="93" pos:column="48">;<pos:position pos:line="93" pos:column="49"/></empty_stmt>
	<if pos:line="94" pos:column="9">if <condition pos:line="94" pos:column="12">(<expr><name><name pos:line="94" pos:column="13">value_list<pos:position pos:line="94" pos:column="23"/></name><operator pos:line="94" pos:column="23">.<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="24">host<pos:position pos:line="94" pos:column="28"/></name><index pos:line="94" pos:column="28">[<expr><literal type="number" pos:line="94" pos:column="29">0<pos:position pos:line="94" pos:column="30"/></literal></expr>]<pos:position pos:line="94" pos:column="31"/></index></name> <operator pos:line="94" pos:column="32">==<pos:position pos:line="94" pos:column="34"/></operator> <literal type="number" pos:line="94" pos:column="35">0<pos:position pos:line="94" pos:column="36"/></literal></expr>)<pos:position pos:line="94" pos:column="37"/></condition><then pos:line="94" pos:column="37">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="95" pos:column="17">sstrncpy<pos:position pos:line="95" pos:column="25"/></name><argument_list pos:line="95" pos:column="25">(<argument><expr><name><name pos:line="95" pos:column="26">value_list<pos:position pos:line="95" pos:column="36"/></name><operator pos:line="95" pos:column="36">.<pos:position pos:line="95" pos:column="37"/></operator><name pos:line="95" pos:column="37">host<pos:position pos:line="95" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="43">hostname_g<pos:position pos:line="95" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="95" pos:column="55">sizeof<argument_list pos:line="95" pos:column="61">(<argument><expr><name><name pos:line="95" pos:column="62">value_list<pos:position pos:line="95" pos:column="72"/></name><operator pos:line="95" pos:column="72">.<pos:position pos:line="95" pos:column="73"/></operator><name pos:line="95" pos:column="73">host<pos:position pos:line="95" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="95" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="95" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="80"/></expr_stmt></block></then></if>
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name><name pos:line="96" pos:column="13">value_list<pos:position pos:line="96" pos:column="23"/></name><operator pos:line="96" pos:column="23">.<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="24">plugin<pos:position pos:line="96" pos:column="30"/></name><index pos:line="96" pos:column="30">[<expr><literal type="number" pos:line="96" pos:column="31">0<pos:position pos:line="96" pos:column="32"/></literal></expr>]<pos:position pos:line="96" pos:column="33"/></index></name> <operator pos:line="96" pos:column="34">==<pos:position pos:line="96" pos:column="36"/></operator> <literal type="number" pos:line="96" pos:column="37">0<pos:position pos:line="96" pos:column="38"/></literal></expr>)<pos:position pos:line="96" pos:column="39"/></condition><then pos:line="96" pos:column="39">
		<block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="17">sstrncpy<pos:position pos:line="97" pos:column="25"/></name><argument_list pos:line="97" pos:column="25">(<argument><expr><name><name pos:line="97" pos:column="26">value_list<pos:position pos:line="97" pos:column="36"/></name><operator pos:line="97" pos:column="36">.<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="37">plugin<pos:position pos:line="97" pos:column="43"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="45">"python"<pos:position pos:line="97" pos:column="53"/></literal></expr></argument>, <argument><expr><sizeof pos:line="97" pos:column="55">sizeof<argument_list pos:line="97" pos:column="61">(<argument><expr><name><name pos:line="97" pos:column="62">value_list<pos:position pos:line="97" pos:column="72"/></name><operator pos:line="97" pos:column="72">.<pos:position pos:line="97" pos:column="73"/></operator><name pos:line="97" pos:column="73">plugin<pos:position pos:line="97" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="97" pos:column="80"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="97" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="82"/></expr_stmt></block></then></if>
	<expr_stmt><expr><name pos:line="98" pos:column="9">Py_BEGIN_ALLOW_THREADS<pos:position pos:line="98" pos:column="31"/></name></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
	<expr_stmt><expr><name pos:line="99" pos:column="9">ret<pos:position pos:line="99" pos:column="12"/></name> <operator pos:line="99" pos:column="13">=<pos:position pos:line="99" pos:column="14"/></operator> <call><name pos:line="99" pos:column="15">plugin_write<pos:position pos:line="99" pos:column="27"/></name><argument_list pos:line="99" pos:column="27">(<argument><expr><name pos:line="99" pos:column="28">dest<pos:position pos:line="99" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="34">NULL<pos:position pos:line="99" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="99" pos:column="40">&amp;<pos:position pos:line="99" pos:column="45"/></operator><name pos:line="99" pos:column="41">value_list<pos:position pos:line="99" pos:column="51"/></name></expr></argument>)<pos:position pos:line="99" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="53"/></expr_stmt>
	<expr_stmt><expr><name pos:line="100" pos:column="9">Py_END_ALLOW_THREADS<pos:position pos:line="100" pos:column="29"/></name></expr>;<pos:position pos:line="100" pos:column="30"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="101" pos:column="9">meta_data_destroy<pos:position pos:line="101" pos:column="26"/></name><argument_list pos:line="101" pos:column="26">(<argument><expr><name><name pos:line="101" pos:column="27">value_list<pos:position pos:line="101" pos:column="37"/></name><operator pos:line="101" pos:column="37">.<pos:position pos:line="101" pos:column="38"/></operator><name pos:line="101" pos:column="38">meta<pos:position pos:line="101" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="101" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="44"/></expr_stmt>
	<expr_stmt><expr><call><name pos:line="102" pos:column="9">free<pos:position pos:line="102" pos:column="13"/></name><argument_list pos:line="102" pos:column="13">(<argument><expr><name pos:line="102" pos:column="14">value<pos:position pos:line="102" pos:column="19"/></name></expr></argument>)<pos:position pos:line="102" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="21"/></expr_stmt>
	<if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">ret<pos:position pos:line="103" pos:column="16"/></name> <operator pos:line="103" pos:column="17">!=<pos:position pos:line="103" pos:column="19"/></operator> <literal type="number" pos:line="103" pos:column="20">0<pos:position pos:line="103" pos:column="21"/></literal></expr>)<pos:position pos:line="103" pos:column="22"/></condition><then pos:line="103" pos:column="22"> <block pos:line="103" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="104" pos:column="17">PyErr_SetString<pos:position pos:line="104" pos:column="32"/></name><argument_list pos:line="104" pos:column="32">(<argument><expr><name pos:line="104" pos:column="33">PyExc_RuntimeError<pos:position pos:line="104" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="53">"error dispatching values, read the logs"<pos:position pos:line="104" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="96"/></expr_stmt>
		<return pos:line="105" pos:column="17">return <expr><name pos:line="105" pos:column="24">NULL<pos:position pos:line="105" pos:column="28"/></name></expr>;<pos:position pos:line="105" pos:column="29"/></return>
	}<pos:position pos:line="106" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="107" pos:column="9">Py_RETURN_NONE<pos:position pos:line="107" pos:column="23"/></name></expr>;<pos:position pos:line="107" pos:column="24"/></expr_stmt>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/collectd/gumtree/collectd_repos_function_473_collectd-5.6.1.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">interface_read<pos:position pos:line="1" pos:column="26"/></name> <parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><name pos:line="1" pos:column="28">void<pos:position pos:line="1" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="33"/></parameter_list>
<block pos:line="2" pos:column="1">{
<cpp:if pos:line="3" pos:column="1">#<cpp:directive pos:line="3" pos:column="2">if<pos:position pos:line="3" pos:column="4"/></cpp:directive> <expr><name pos:line="3" pos:column="5">HAVE_GETIFADDRS<pos:position pos:line="3" pos:column="20"/></name></expr></cpp:if>
	<decl_stmt><decl><type><name><name pos:line="4" pos:column="9">struct<pos:position pos:line="4" pos:column="15"/></name> <name pos:line="4" pos:column="16">ifaddrs<pos:position pos:line="4" pos:column="23"/></name></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">if_list<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>

<comment type="block" pos:line="6" pos:column="1">/* Darwin/Mac OS X and possible other *BSDs */</comment>
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">HAVE_STRUCT_IF_DATA<pos:position pos:line="7" pos:column="24"/></name></expr></cpp:if>
<cpp:define pos:line="8" pos:column="1">#  <cpp:directive pos:line="8" pos:column="4">define<pos:position pos:line="8" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="8" pos:column="11">IFA_DATA<pos:position pos:line="8" pos:column="19"/></name></cpp:macro> <cpp:value pos:line="8" pos:column="20">if_data<pos:position pos:line="8" pos:column="27"/></cpp:value></cpp:define>
<cpp:define pos:line="9" pos:column="1">#  <cpp:directive pos:line="9" pos:column="4">define<pos:position pos:line="9" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="11">IFA_RX_BYTES<pos:position pos:line="9" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="9" pos:column="24">ifi_ibytes<pos:position pos:line="9" pos:column="34"/></cpp:value></cpp:define>
<cpp:define pos:line="10" pos:column="1">#  <cpp:directive pos:line="10" pos:column="4">define<pos:position pos:line="10" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="11">IFA_TX_BYTES<pos:position pos:line="10" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="10" pos:column="24">ifi_obytes<pos:position pos:line="10" pos:column="34"/></cpp:value></cpp:define>
<cpp:define pos:line="11" pos:column="1">#  <cpp:directive pos:line="11" pos:column="4">define<pos:position pos:line="11" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="11" pos:column="11">IFA_RX_PACKT<pos:position pos:line="11" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="11" pos:column="24">ifi_ipackets<pos:position pos:line="11" pos:column="36"/></cpp:value></cpp:define>
<cpp:define pos:line="12" pos:column="1">#  <cpp:directive pos:line="12" pos:column="4">define<pos:position pos:line="12" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="12" pos:column="11">IFA_TX_PACKT<pos:position pos:line="12" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="12" pos:column="24">ifi_opackets<pos:position pos:line="12" pos:column="36"/></cpp:value></cpp:define>
<cpp:define pos:line="13" pos:column="1">#  <cpp:directive pos:line="13" pos:column="4">define<pos:position pos:line="13" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="13" pos:column="11">IFA_RX_ERROR<pos:position pos:line="13" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="13" pos:column="24">ifi_ierrors<pos:position pos:line="13" pos:column="35"/></cpp:value></cpp:define>
<cpp:define pos:line="14" pos:column="1">#  <cpp:directive pos:line="14" pos:column="4">define<pos:position pos:line="14" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="14" pos:column="11">IFA_TX_ERROR<pos:position pos:line="14" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="14" pos:column="24">ifi_oerrors<pos:position pos:line="14" pos:column="35"/></cpp:value></cpp:define>
<comment type="block" pos:line="15" pos:column="1">/* #endif HAVE_STRUCT_IF_DATA */</comment>

<cpp:elif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">elif<pos:position pos:line="17" pos:column="6"/></cpp:directive> <expr><name pos:line="17" pos:column="7">HAVE_STRUCT_NET_DEVICE_STATS<pos:position pos:line="17" pos:column="35"/></name></expr></cpp:elif>
<cpp:define pos:line="18" pos:column="1">#  <cpp:directive pos:line="18" pos:column="4">define<pos:position pos:line="18" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="18" pos:column="11">IFA_DATA<pos:position pos:line="18" pos:column="19"/></name></cpp:macro> <cpp:value pos:line="18" pos:column="20">net_device_stats<pos:position pos:line="18" pos:column="36"/></cpp:value></cpp:define>
<cpp:define pos:line="19" pos:column="1">#  <cpp:directive pos:line="19" pos:column="4">define<pos:position pos:line="19" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="19" pos:column="11">IFA_RX_BYTES<pos:position pos:line="19" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="19" pos:column="24">rx_bytes<pos:position pos:line="19" pos:column="32"/></cpp:value></cpp:define>
<cpp:define pos:line="20" pos:column="1">#  <cpp:directive pos:line="20" pos:column="4">define<pos:position pos:line="20" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="20" pos:column="11">IFA_TX_BYTES<pos:position pos:line="20" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="20" pos:column="24">tx_bytes<pos:position pos:line="20" pos:column="32"/></cpp:value></cpp:define>
<cpp:define pos:line="21" pos:column="1">#  <cpp:directive pos:line="21" pos:column="4">define<pos:position pos:line="21" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="21" pos:column="11">IFA_RX_PACKT<pos:position pos:line="21" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="21" pos:column="24">rx_packets<pos:position pos:line="21" pos:column="34"/></cpp:value></cpp:define>
<cpp:define pos:line="22" pos:column="1">#  <cpp:directive pos:line="22" pos:column="4">define<pos:position pos:line="22" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="22" pos:column="11">IFA_TX_PACKT<pos:position pos:line="22" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="22" pos:column="24">tx_packets<pos:position pos:line="22" pos:column="34"/></cpp:value></cpp:define>
<cpp:define pos:line="23" pos:column="1">#  <cpp:directive pos:line="23" pos:column="4">define<pos:position pos:line="23" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="23" pos:column="11">IFA_RX_ERROR<pos:position pos:line="23" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="23" pos:column="24">rx_errors<pos:position pos:line="23" pos:column="33"/></cpp:value></cpp:define>
<cpp:define pos:line="24" pos:column="1">#  <cpp:directive pos:line="24" pos:column="4">define<pos:position pos:line="24" pos:column="10"/></cpp:directive> <cpp:macro><name pos:line="24" pos:column="11">IFA_TX_ERROR<pos:position pos:line="24" pos:column="23"/></name></cpp:macro> <cpp:value pos:line="24" pos:column="24">tx_errors<pos:position pos:line="24" pos:column="33"/></cpp:value></cpp:define>
<cpp:else pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">else<pos:position pos:line="25" pos:column="6"/></cpp:directive></cpp:else>
<cpp:error pos:line="26" pos:column="1">#  <cpp:directive pos:line="26" pos:column="4">error<pos:position pos:line="26" pos:column="9"/></cpp:directive> <cpp:literal pos:line="26" pos:column="10">"No suitable type for `struct ifaddrs-&gt;ifa_data' found."<pos:position pos:line="26" pos:column="69"/></cpp:literal></cpp:error>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name><name pos:line="29" pos:column="9">struct<pos:position pos:line="29" pos:column="15"/></name> <name pos:line="29" pos:column="16">IFA_DATA<pos:position pos:line="29" pos:column="24"/></name></name> <modifier pos:line="29" pos:column="25">*<pos:position pos:line="29" pos:column="26"/></modifier></type><name pos:line="29" pos:column="26">if_data<pos:position pos:line="29" pos:column="33"/></name></decl>;<pos:position pos:line="29" pos:column="34"/></decl_stmt>

	<if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">getifaddrs<pos:position pos:line="31" pos:column="23"/></name> <argument_list pos:line="31" pos:column="24">(<argument><expr><operator pos:line="31" pos:column="25">&amp;<pos:position pos:line="31" pos:column="30"/></operator><name pos:line="31" pos:column="26">if_list<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call> <operator pos:line="31" pos:column="35">!=<pos:position pos:line="31" pos:column="37"/></operator> <literal type="number" pos:line="31" pos:column="38">0<pos:position pos:line="31" pos:column="39"/></literal></expr>)<pos:position pos:line="31" pos:column="40"/></condition><then pos:line="31" pos:column="40">
		<block type="pseudo"><return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><operator pos:line="32" pos:column="25">-<pos:position pos:line="32" pos:column="26"/></operator><literal type="number" pos:line="32" pos:column="26">1<pos:position pos:line="32" pos:column="27"/></literal><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator></expr>;<pos:position pos:line="32" pos:column="29"/></return></block></then></if>

	<for pos:line="34" pos:column="9">for <control pos:line="34" pos:column="13">(<init><decl><type><name><name pos:line="34" pos:column="14">struct<pos:position pos:line="34" pos:column="20"/></name> <name pos:line="34" pos:column="21">ifaddrs<pos:position pos:line="34" pos:column="28"/></name></name> <modifier pos:line="34" pos:column="29">*<pos:position pos:line="34" pos:column="30"/></modifier><name pos:line="34" pos:column="30">if_ptr<pos:position pos:line="34" pos:column="36"/></name></type> <init pos:line="34" pos:column="37">= <expr><name pos:line="34" pos:column="39">if_list<pos:position pos:line="34" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="47"/></init> <condition><expr><name pos:line="34" pos:column="48">if_ptr<pos:position pos:line="34" pos:column="54"/></name> <operator pos:line="34" pos:column="55">!=<pos:position pos:line="34" pos:column="57"/></operator> <name pos:line="34" pos:column="58">NULL<pos:position pos:line="34" pos:column="62"/></name></expr>;<pos:position pos:line="34" pos:column="63"/></condition> <incr><expr><name pos:line="34" pos:column="64">if_ptr<pos:position pos:line="34" pos:column="70"/></name> <operator pos:line="34" pos:column="71">=<pos:position pos:line="34" pos:column="72"/></operator> <name><name pos:line="34" pos:column="73">if_ptr<pos:position pos:line="34" pos:column="79"/></name><operator pos:line="34" pos:column="79">-&gt;<pos:position pos:line="34" pos:column="84"/></operator><name pos:line="34" pos:column="81">ifa_next<pos:position pos:line="34" pos:column="89"/></name></name></expr></incr>)<pos:position pos:line="34" pos:column="90"/></control>
	<block pos:line="35" pos:column="9">{
		<if pos:line="36" pos:column="17">if <condition pos:line="36" pos:column="20">(<expr><name><name pos:line="36" pos:column="21">if_ptr<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">ifa_addr<pos:position pos:line="36" pos:column="37"/></name></name> <operator pos:line="36" pos:column="38">!=<pos:position pos:line="36" pos:column="40"/></operator> <name pos:line="36" pos:column="41">NULL<pos:position pos:line="36" pos:column="45"/></name> <operator pos:line="36" pos:column="46">&amp;&amp;<pos:position pos:line="36" pos:column="56"/></operator> <name><name pos:line="36" pos:column="49">if_ptr<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">-&gt;<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="57">ifa_addr<pos:position pos:line="36" pos:column="65"/></name><operator pos:line="36" pos:column="65">-&gt;<pos:position pos:line="36" pos:column="70"/></operator><name pos:line="36" pos:column="67">sa_family<pos:position pos:line="36" pos:column="76"/></name></name> <operator pos:line="36" pos:column="77">==<pos:position pos:line="36" pos:column="79"/></operator> <name pos:line="36" pos:column="80">AF_LINK<pos:position pos:line="36" pos:column="87"/></name></expr>)<pos:position pos:line="36" pos:column="88"/></condition><then pos:line="36" pos:column="88"> <block pos:line="36" pos:column="89">{
			<expr_stmt><expr><name pos:line="37" pos:column="25">if_data<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">=<pos:position pos:line="37" pos:column="34"/></operator> <operator pos:line="37" pos:column="35">(<pos:position pos:line="37" pos:column="36"/></operator>struct <name pos:line="37" pos:column="43">IFA_DATA<pos:position pos:line="37" pos:column="51"/></name> <operator pos:line="37" pos:column="52">*<pos:position pos:line="37" pos:column="53"/></operator><operator pos:line="37" pos:column="53">)<pos:position pos:line="37" pos:column="54"/></operator> <name><name pos:line="37" pos:column="55">if_ptr<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">ifa_data<pos:position pos:line="37" pos:column="71"/></name></name></expr>;<pos:position pos:line="37" pos:column="72"/></expr_stmt>

			<if pos:line="39" pos:column="25">if <condition pos:line="39" pos:column="28">(<expr><operator pos:line="39" pos:column="29">!<pos:position pos:line="39" pos:column="30"/></operator><name pos:line="39" pos:column="30">report_inactive<pos:position pos:line="39" pos:column="45"/></name> <operator pos:line="39" pos:column="46">&amp;&amp;<pos:position pos:line="39" pos:column="56"/></operator> <name><name pos:line="39" pos:column="49">if_data<pos:position pos:line="39" pos:column="56"/></name><operator pos:line="39" pos:column="56">-&gt;<pos:position pos:line="39" pos:column="61"/></operator><name pos:line="39" pos:column="58">IFA_RX_PACKT<pos:position pos:line="39" pos:column="70"/></name></name> <operator pos:line="39" pos:column="71">==<pos:position pos:line="39" pos:column="73"/></operator> <literal type="number" pos:line="39" pos:column="74">0<pos:position pos:line="39" pos:column="75"/></literal> <operator pos:line="39" pos:column="76">&amp;&amp;<pos:position pos:line="39" pos:column="86"/></operator> <name><name pos:line="39" pos:column="79">if_data<pos:position pos:line="39" pos:column="86"/></name><operator pos:line="39" pos:column="86">-&gt;<pos:position pos:line="39" pos:column="91"/></operator><name pos:line="39" pos:column="88">IFA_TX_PACKT<pos:position pos:line="39" pos:column="100"/></name></name> <operator pos:line="39" pos:column="101">==<pos:position pos:line="39" pos:column="103"/></operator> <literal type="number" pos:line="39" pos:column="104">0<pos:position pos:line="39" pos:column="105"/></literal></expr>)<pos:position pos:line="39" pos:column="106"/></condition><then pos:line="39" pos:column="106">
				<block type="pseudo"><continue pos:line="40" pos:column="33">continue;<pos:position pos:line="40" pos:column="42"/></continue></block></then></if>

			<expr_stmt><expr><call><name pos:line="42" pos:column="25">if_submit<pos:position pos:line="42" pos:column="34"/></name> <argument_list pos:line="42" pos:column="35">(<argument><expr><name><name pos:line="42" pos:column="36">if_ptr<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">-&gt;<pos:position pos:line="42" pos:column="47"/></operator><name pos:line="42" pos:column="44">ifa_name<pos:position pos:line="42" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="54">"if_octets"<pos:position pos:line="42" pos:column="65"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="43" pos:column="33">if_data<pos:position pos:line="43" pos:column="40"/></name><operator pos:line="43" pos:column="40">-&gt;<pos:position pos:line="43" pos:column="45"/></operator><name pos:line="43" pos:column="42">IFA_RX_BYTES<pos:position pos:line="43" pos:column="54"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="44" pos:column="33">if_data<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">-&gt;<pos:position pos:line="44" pos:column="45"/></operator><name pos:line="44" pos:column="42">IFA_TX_BYTES<pos:position pos:line="44" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="45" pos:column="25">if_submit<pos:position pos:line="45" pos:column="34"/></name> <argument_list pos:line="45" pos:column="35">(<argument><expr><name><name pos:line="45" pos:column="36">if_ptr<pos:position pos:line="45" pos:column="42"/></name><operator pos:line="45" pos:column="42">-&gt;<pos:position pos:line="45" pos:column="47"/></operator><name pos:line="45" pos:column="44">ifa_name<pos:position pos:line="45" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="54">"if_packets"<pos:position pos:line="45" pos:column="66"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="46" pos:column="33">if_data<pos:position pos:line="46" pos:column="40"/></name><operator pos:line="46" pos:column="40">-&gt;<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="42">IFA_RX_PACKT<pos:position pos:line="46" pos:column="54"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="47" pos:column="33">if_data<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">IFA_TX_PACKT<pos:position pos:line="47" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="56"/></expr_stmt>
			<expr_stmt><expr><call><name pos:line="48" pos:column="25">if_submit<pos:position pos:line="48" pos:column="34"/></name> <argument_list pos:line="48" pos:column="35">(<argument><expr><name><name pos:line="48" pos:column="36">if_ptr<pos:position pos:line="48" pos:column="42"/></name><operator pos:line="48" pos:column="42">-&gt;<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="44">ifa_name<pos:position pos:line="48" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="54">"if_errors"<pos:position pos:line="48" pos:column="65"/></literal></expr></argument>,
				<argument><expr><name><name pos:line="49" pos:column="33">if_data<pos:position pos:line="49" pos:column="40"/></name><operator pos:line="49" pos:column="40">-&gt;<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="42">IFA_RX_ERROR<pos:position pos:line="49" pos:column="54"/></name></name></expr></argument>,
				<argument><expr><name><name pos:line="50" pos:column="33">if_data<pos:position pos:line="50" pos:column="40"/></name><operator pos:line="50" pos:column="40">-&gt;<pos:position pos:line="50" pos:column="45"/></operator><name pos:line="50" pos:column="42">IFA_TX_ERROR<pos:position pos:line="50" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="56"/></expr_stmt>
		}<pos:position pos:line="51" pos:column="18"/></block></then></if>
	}<pos:position pos:line="52" pos:column="10"/></block></for>

	<expr_stmt><expr><call><name pos:line="54" pos:column="9">freeifaddrs<pos:position pos:line="54" pos:column="20"/></name> <argument_list pos:line="54" pos:column="21">(<argument><expr><name pos:line="54" pos:column="22">if_list<pos:position pos:line="54" pos:column="29"/></name></expr></argument>)<pos:position pos:line="54" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="31"/></expr_stmt>
<comment type="block" pos:line="55" pos:column="1">/* #endif HAVE_GETIFADDRS */</comment>

<cpp:elif pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">elif<pos:position pos:line="57" pos:column="6"/></cpp:directive> <expr><name pos:line="57" pos:column="7">KERNEL_LINUX<pos:position pos:line="57" pos:column="19"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="58" pos:column="9">FILE<pos:position pos:line="58" pos:column="13"/></name> <modifier pos:line="58" pos:column="14">*<pos:position pos:line="58" pos:column="15"/></modifier></type><name pos:line="58" pos:column="15">fh<pos:position pos:line="58" pos:column="17"/></name></decl>;<pos:position pos:line="58" pos:column="18"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="59" pos:column="9">char<pos:position pos:line="59" pos:column="13"/></name></type> <name><name pos:line="59" pos:column="14">buffer<pos:position pos:line="59" pos:column="20"/></name><index pos:line="59" pos:column="20">[<expr><literal type="number" pos:line="59" pos:column="21">1024<pos:position pos:line="59" pos:column="25"/></literal></expr>]<pos:position pos:line="59" pos:column="26"/></index></name></decl>;<pos:position pos:line="59" pos:column="27"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="60" pos:column="9">derive_t<pos:position pos:line="60" pos:column="17"/></name></type> <name pos:line="60" pos:column="18">incoming<pos:position pos:line="60" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="60" pos:column="28">outgoing<pos:position pos:line="60" pos:column="36"/></name></decl>;<pos:position pos:line="60" pos:column="37"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="61" pos:column="9">char<pos:position pos:line="61" pos:column="13"/></name> <modifier pos:line="61" pos:column="14">*<pos:position pos:line="61" pos:column="15"/></modifier></type><name pos:line="61" pos:column="15">device<pos:position pos:line="61" pos:column="21"/></name></decl>;<pos:position pos:line="61" pos:column="22"/></decl_stmt>

	<decl_stmt><decl><type><name pos:line="63" pos:column="9">char<pos:position pos:line="63" pos:column="13"/></name> <modifier pos:line="63" pos:column="14">*<pos:position pos:line="63" pos:column="15"/></modifier></type><name pos:line="63" pos:column="15">dummy<pos:position pos:line="63" pos:column="20"/></name></decl>;<pos:position pos:line="63" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="64" pos:column="9">char<pos:position pos:line="64" pos:column="13"/></name> <modifier pos:line="64" pos:column="14">*<pos:position pos:line="64" pos:column="15"/></modifier></type><name><name pos:line="64" pos:column="15">fields<pos:position pos:line="64" pos:column="21"/></name><index pos:line="64" pos:column="21">[<expr><literal type="number" pos:line="64" pos:column="22">16<pos:position pos:line="64" pos:column="24"/></literal></expr>]<pos:position pos:line="64" pos:column="25"/></index></name></decl>;<pos:position pos:line="64" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="65" pos:column="9">int<pos:position pos:line="65" pos:column="12"/></name></type> <name pos:line="65" pos:column="13">numfields<pos:position pos:line="65" pos:column="22"/></name></decl>;<pos:position pos:line="65" pos:column="23"/></decl_stmt>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">(<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">fh<pos:position pos:line="67" pos:column="16"/></name> <operator pos:line="67" pos:column="17">=<pos:position pos:line="67" pos:column="18"/></operator> <call><name pos:line="67" pos:column="19">fopen<pos:position pos:line="67" pos:column="24"/></name> <argument_list pos:line="67" pos:column="25">(<argument><expr><literal type="string" pos:line="67" pos:column="26">"/proc/net/dev"<pos:position pos:line="67" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="43">"r"<pos:position pos:line="67" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="47"/></argument_list></call><operator pos:line="67" pos:column="47">)<pos:position pos:line="67" pos:column="48"/></operator> <operator pos:line="67" pos:column="49">==<pos:position pos:line="67" pos:column="51"/></operator> <name pos:line="67" pos:column="52">NULL<pos:position pos:line="67" pos:column="56"/></name></expr>)<pos:position pos:line="67" pos:column="57"/></condition><then pos:line="67" pos:column="57">
	<block pos:line="68" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="69" pos:column="17">char<pos:position pos:line="69" pos:column="21"/></name></type> <name><name pos:line="69" pos:column="22">errbuf<pos:position pos:line="69" pos:column="28"/></name><index pos:line="69" pos:column="28">[<expr><literal type="number" pos:line="69" pos:column="29">1024<pos:position pos:line="69" pos:column="33"/></literal></expr>]<pos:position pos:line="69" pos:column="34"/></index></name></decl>;<pos:position pos:line="69" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="70" pos:column="17">WARNING<pos:position pos:line="70" pos:column="24"/></name> <argument_list pos:line="70" pos:column="25">(<argument><expr><literal type="string" pos:line="70" pos:column="26">"interface plugin: fopen: %s"<pos:position pos:line="70" pos:column="55"/></literal></expr></argument>,
				<argument><expr><call><name pos:line="71" pos:column="33">sstrerror<pos:position pos:line="71" pos:column="42"/></name> <argument_list pos:line="71" pos:column="43">(<argument><expr><name pos:line="71" pos:column="44">errno<pos:position pos:line="71" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="51">errbuf<pos:position pos:line="71" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="59">sizeof <argument_list pos:line="71" pos:column="66">(<argument><expr><name pos:line="71" pos:column="67">errbuf<pos:position pos:line="71" pos:column="73"/></name></expr></argument>)<pos:position pos:line="71" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="71" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="77"/></expr_stmt>
		<return pos:line="72" pos:column="17">return <expr><operator pos:line="72" pos:column="24">(<pos:position pos:line="72" pos:column="25"/></operator><operator pos:line="72" pos:column="25">-<pos:position pos:line="72" pos:column="26"/></operator><literal type="number" pos:line="72" pos:column="26">1<pos:position pos:line="72" pos:column="27"/></literal><operator pos:line="72" pos:column="27">)<pos:position pos:line="72" pos:column="28"/></operator></expr>;<pos:position pos:line="72" pos:column="29"/></return>
	}<pos:position pos:line="73" pos:column="10"/></block></then></if>

	<while pos:line="75" pos:column="9">while <condition pos:line="75" pos:column="15">(<expr><call><name pos:line="75" pos:column="16">fgets<pos:position pos:line="75" pos:column="21"/></name> <argument_list pos:line="75" pos:column="22">(<argument><expr><name pos:line="75" pos:column="23">buffer<pos:position pos:line="75" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="31">1024<pos:position pos:line="75" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="37">fh<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call> <operator pos:line="75" pos:column="41">!=<pos:position pos:line="75" pos:column="43"/></operator> <name pos:line="75" pos:column="44">NULL<pos:position pos:line="75" pos:column="48"/></name></expr>)<pos:position pos:line="75" pos:column="49"/></condition>
	<block pos:line="76" pos:column="9">{
		<if pos:line="77" pos:column="17">if <condition pos:line="77" pos:column="20">(<expr><operator pos:line="77" pos:column="21">!<pos:position pos:line="77" pos:column="22"/></operator><operator pos:line="77" pos:column="22">(<pos:position pos:line="77" pos:column="23"/></operator><name pos:line="77" pos:column="23">dummy<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">=<pos:position pos:line="77" pos:column="30"/></operator> <call><name pos:line="77" pos:column="31">strchr<pos:position pos:line="77" pos:column="37"/></name><argument_list pos:line="77" pos:column="37">(<argument><expr><name pos:line="77" pos:column="38">buffer<pos:position pos:line="77" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="77" pos:column="46">':'<pos:position pos:line="77" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="50"/></argument_list></call><operator pos:line="77" pos:column="50">)<pos:position pos:line="77" pos:column="51"/></operator></expr>)<pos:position pos:line="77" pos:column="52"/></condition><then pos:line="77" pos:column="52">
			<block type="pseudo"><continue pos:line="78" pos:column="25">continue;<pos:position pos:line="78" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><name><name pos:line="79" pos:column="17">dummy<pos:position pos:line="79" pos:column="22"/></name><index pos:line="79" pos:column="22">[<expr><literal type="number" pos:line="79" pos:column="23">0<pos:position pos:line="79" pos:column="24"/></literal></expr>]<pos:position pos:line="79" pos:column="25"/></index></name> <operator pos:line="79" pos:column="26">=<pos:position pos:line="79" pos:column="27"/></operator> <literal type="char" pos:line="79" pos:column="28">'\0'<pos:position pos:line="79" pos:column="32"/></literal></expr>;<pos:position pos:line="79" pos:column="33"/></expr_stmt>
		<expr_stmt><expr><name pos:line="80" pos:column="17">dummy<pos:position pos:line="80" pos:column="22"/></name><operator pos:line="80" pos:column="22">++<pos:position pos:line="80" pos:column="24"/></operator></expr>;<pos:position pos:line="80" pos:column="25"/></expr_stmt>

		<expr_stmt><expr><name pos:line="82" pos:column="17">device<pos:position pos:line="82" pos:column="23"/></name> <operator pos:line="82" pos:column="24">=<pos:position pos:line="82" pos:column="25"/></operator> <name pos:line="82" pos:column="26">buffer<pos:position pos:line="82" pos:column="32"/></name></expr>;<pos:position pos:line="82" pos:column="33"/></expr_stmt>
		<while pos:line="83" pos:column="17">while <condition pos:line="83" pos:column="23">(<expr><name><name pos:line="83" pos:column="24">device<pos:position pos:line="83" pos:column="30"/></name><index pos:line="83" pos:column="30">[<expr><literal type="number" pos:line="83" pos:column="31">0<pos:position pos:line="83" pos:column="32"/></literal></expr>]<pos:position pos:line="83" pos:column="33"/></index></name> <operator pos:line="83" pos:column="34">==<pos:position pos:line="83" pos:column="36"/></operator> <literal type="char" pos:line="83" pos:column="37">' '<pos:position pos:line="83" pos:column="40"/></literal></expr>)<pos:position pos:line="83" pos:column="41"/></condition>
			<block type="pseudo"><expr_stmt><expr><name pos:line="84" pos:column="25">device<pos:position pos:line="84" pos:column="31"/></name><operator pos:line="84" pos:column="31">++<pos:position pos:line="84" pos:column="33"/></operator></expr>;<pos:position pos:line="84" pos:column="34"/></expr_stmt></block></while>

		<if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name><name pos:line="86" pos:column="21">device<pos:position pos:line="86" pos:column="27"/></name><index pos:line="86" pos:column="27">[<expr><literal type="number" pos:line="86" pos:column="28">0<pos:position pos:line="86" pos:column="29"/></literal></expr>]<pos:position pos:line="86" pos:column="30"/></index></name> <operator pos:line="86" pos:column="31">==<pos:position pos:line="86" pos:column="33"/></operator> <literal type="char" pos:line="86" pos:column="34">'\0'<pos:position pos:line="86" pos:column="38"/></literal></expr>)<pos:position pos:line="86" pos:column="39"/></condition><then pos:line="86" pos:column="39">
			<block type="pseudo"><continue pos:line="87" pos:column="25">continue;<pos:position pos:line="87" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="89" pos:column="17">numfields<pos:position pos:line="89" pos:column="26"/></name> <operator pos:line="89" pos:column="27">=<pos:position pos:line="89" pos:column="28"/></operator> <call><name pos:line="89" pos:column="29">strsplit<pos:position pos:line="89" pos:column="37"/></name> <argument_list pos:line="89" pos:column="38">(<argument><expr><name pos:line="89" pos:column="39">dummy<pos:position pos:line="89" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="46">fields<pos:position pos:line="89" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="54">16<pos:position pos:line="89" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="58"/></expr_stmt>

		<if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><name pos:line="91" pos:column="21">numfields<pos:position pos:line="91" pos:column="30"/></name> <operator pos:line="91" pos:column="31">&lt;<pos:position pos:line="91" pos:column="35"/></operator> <literal type="number" pos:line="91" pos:column="33">11<pos:position pos:line="91" pos:column="35"/></literal></expr>)<pos:position pos:line="91" pos:column="36"/></condition><then pos:line="91" pos:column="36">
			<block type="pseudo"><continue pos:line="92" pos:column="25">continue;<pos:position pos:line="92" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><name pos:line="94" pos:column="17">incoming<pos:position pos:line="94" pos:column="25"/></name> <operator pos:line="94" pos:column="26">=<pos:position pos:line="94" pos:column="27"/></operator> <call><name pos:line="94" pos:column="28">atoll<pos:position pos:line="94" pos:column="33"/></name> <argument_list pos:line="94" pos:column="34">(<argument><expr><name><name pos:line="94" pos:column="35">fields<pos:position pos:line="94" pos:column="41"/></name><index pos:line="94" pos:column="41">[<expr><literal type="number" pos:line="94" pos:column="42">1<pos:position pos:line="94" pos:column="43"/></literal></expr>]<pos:position pos:line="94" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="94" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="95" pos:column="17">outgoing<pos:position pos:line="95" pos:column="25"/></name> <operator pos:line="95" pos:column="26">=<pos:position pos:line="95" pos:column="27"/></operator> <call><name pos:line="95" pos:column="28">atoll<pos:position pos:line="95" pos:column="33"/></name> <argument_list pos:line="95" pos:column="34">(<argument><expr><name><name pos:line="95" pos:column="35">fields<pos:position pos:line="95" pos:column="41"/></name><index pos:line="95" pos:column="41">[<expr><literal type="number" pos:line="95" pos:column="42">9<pos:position pos:line="95" pos:column="43"/></literal></expr>]<pos:position pos:line="95" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="95" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="46"/></expr_stmt>
		<if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><operator pos:line="96" pos:column="21">!<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="22">report_inactive<pos:position pos:line="96" pos:column="37"/></name> <operator pos:line="96" pos:column="38">&amp;&amp;<pos:position pos:line="96" pos:column="48"/></operator> <name pos:line="96" pos:column="41">incoming<pos:position pos:line="96" pos:column="49"/></name> <operator pos:line="96" pos:column="50">==<pos:position pos:line="96" pos:column="52"/></operator> <literal type="number" pos:line="96" pos:column="53">0<pos:position pos:line="96" pos:column="54"/></literal> <operator pos:line="96" pos:column="55">&amp;&amp;<pos:position pos:line="96" pos:column="65"/></operator> <name pos:line="96" pos:column="58">outgoing<pos:position pos:line="96" pos:column="66"/></name> <operator pos:line="96" pos:column="67">==<pos:position pos:line="96" pos:column="69"/></operator> <literal type="number" pos:line="96" pos:column="70">0<pos:position pos:line="96" pos:column="71"/></literal></expr>)<pos:position pos:line="96" pos:column="72"/></condition><then pos:line="96" pos:column="72">
			<block type="pseudo"><continue pos:line="97" pos:column="25">continue;<pos:position pos:line="97" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="99" pos:column="17">if_submit<pos:position pos:line="99" pos:column="26"/></name> <argument_list pos:line="99" pos:column="27">(<argument><expr><name pos:line="99" pos:column="28">device<pos:position pos:line="99" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="36">"if_packets"<pos:position pos:line="99" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="99" pos:column="50">incoming<pos:position pos:line="99" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="60">outgoing<pos:position pos:line="99" pos:column="68"/></name></expr></argument>)<pos:position pos:line="99" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="70"/></expr_stmt>

		<expr_stmt><expr><name pos:line="101" pos:column="17">incoming<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">=<pos:position pos:line="101" pos:column="27"/></operator> <call><name pos:line="101" pos:column="28">atoll<pos:position pos:line="101" pos:column="33"/></name> <argument_list pos:line="101" pos:column="34">(<argument><expr><name><name pos:line="101" pos:column="35">fields<pos:position pos:line="101" pos:column="41"/></name><index pos:line="101" pos:column="41">[<expr><literal type="number" pos:line="101" pos:column="42">0<pos:position pos:line="101" pos:column="43"/></literal></expr>]<pos:position pos:line="101" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="101" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="102" pos:column="17">outgoing<pos:position pos:line="102" pos:column="25"/></name> <operator pos:line="102" pos:column="26">=<pos:position pos:line="102" pos:column="27"/></operator> <call><name pos:line="102" pos:column="28">atoll<pos:position pos:line="102" pos:column="33"/></name> <argument_list pos:line="102" pos:column="34">(<argument><expr><name><name pos:line="102" pos:column="35">fields<pos:position pos:line="102" pos:column="41"/></name><index pos:line="102" pos:column="41">[<expr><literal type="number" pos:line="102" pos:column="42">8<pos:position pos:line="102" pos:column="43"/></literal></expr>]<pos:position pos:line="102" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="102" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">if_submit<pos:position pos:line="103" pos:column="26"/></name> <argument_list pos:line="103" pos:column="27">(<argument><expr><name pos:line="103" pos:column="28">device<pos:position pos:line="103" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="36">"if_octets"<pos:position pos:line="103" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="103" pos:column="49">incoming<pos:position pos:line="103" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="59">outgoing<pos:position pos:line="103" pos:column="67"/></name></expr></argument>)<pos:position pos:line="103" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="69"/></expr_stmt>

		<expr_stmt><expr><name pos:line="105" pos:column="17">incoming<pos:position pos:line="105" pos:column="25"/></name> <operator pos:line="105" pos:column="26">=<pos:position pos:line="105" pos:column="27"/></operator> <call><name pos:line="105" pos:column="28">atoll<pos:position pos:line="105" pos:column="33"/></name> <argument_list pos:line="105" pos:column="34">(<argument><expr><name><name pos:line="105" pos:column="35">fields<pos:position pos:line="105" pos:column="41"/></name><index pos:line="105" pos:column="41">[<expr><literal type="number" pos:line="105" pos:column="42">2<pos:position pos:line="105" pos:column="43"/></literal></expr>]<pos:position pos:line="105" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="105" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="106" pos:column="17">outgoing<pos:position pos:line="106" pos:column="25"/></name> <operator pos:line="106" pos:column="26">=<pos:position pos:line="106" pos:column="27"/></operator> <call><name pos:line="106" pos:column="28">atoll<pos:position pos:line="106" pos:column="33"/></name> <argument_list pos:line="106" pos:column="34">(<argument><expr><name><name pos:line="106" pos:column="35">fields<pos:position pos:line="106" pos:column="41"/></name><index pos:line="106" pos:column="41">[<expr><literal type="number" pos:line="106" pos:column="42">10<pos:position pos:line="106" pos:column="44"/></literal></expr>]<pos:position pos:line="106" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="106" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="107" pos:column="17">if_submit<pos:position pos:line="107" pos:column="26"/></name> <argument_list pos:line="107" pos:column="27">(<argument><expr><name pos:line="107" pos:column="28">device<pos:position pos:line="107" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="107" pos:column="36">"if_errors"<pos:position pos:line="107" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="49">incoming<pos:position pos:line="107" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="107" pos:column="59">outgoing<pos:position pos:line="107" pos:column="67"/></name></expr></argument>)<pos:position pos:line="107" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="69"/></expr_stmt>

		<expr_stmt><expr><name pos:line="109" pos:column="17">incoming<pos:position pos:line="109" pos:column="25"/></name> <operator pos:line="109" pos:column="26">=<pos:position pos:line="109" pos:column="27"/></operator> <call><name pos:line="109" pos:column="28">atoll<pos:position pos:line="109" pos:column="33"/></name> <argument_list pos:line="109" pos:column="34">(<argument><expr><name><name pos:line="109" pos:column="35">fields<pos:position pos:line="109" pos:column="41"/></name><index pos:line="109" pos:column="41">[<expr><literal type="number" pos:line="109" pos:column="42">3<pos:position pos:line="109" pos:column="43"/></literal></expr>]<pos:position pos:line="109" pos:column="44"/></index></name></expr></argument>)<pos:position pos:line="109" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="46"/></expr_stmt>
		<expr_stmt><expr><name pos:line="110" pos:column="17">outgoing<pos:position pos:line="110" pos:column="25"/></name> <operator pos:line="110" pos:column="26">=<pos:position pos:line="110" pos:column="27"/></operator> <call><name pos:line="110" pos:column="28">atoll<pos:position pos:line="110" pos:column="33"/></name> <argument_list pos:line="110" pos:column="34">(<argument><expr><name><name pos:line="110" pos:column="35">fields<pos:position pos:line="110" pos:column="41"/></name><index pos:line="110" pos:column="41">[<expr><literal type="number" pos:line="110" pos:column="42">11<pos:position pos:line="110" pos:column="44"/></literal></expr>]<pos:position pos:line="110" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="110" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="47"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="111" pos:column="17">if_submit<pos:position pos:line="111" pos:column="26"/></name> <argument_list pos:line="111" pos:column="27">(<argument><expr><name pos:line="111" pos:column="28">device<pos:position pos:line="111" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="36">"if_dropped"<pos:position pos:line="111" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="111" pos:column="50">incoming<pos:position pos:line="111" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="60">outgoing<pos:position pos:line="111" pos:column="68"/></name></expr></argument>)<pos:position pos:line="111" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="70"/></expr_stmt>
	}<pos:position pos:line="112" pos:column="10"/></block></while>

	<expr_stmt><expr><call><name pos:line="114" pos:column="9">fclose<pos:position pos:line="114" pos:column="15"/></name> <argument_list pos:line="114" pos:column="16">(<argument><expr><name pos:line="114" pos:column="17">fh<pos:position pos:line="114" pos:column="19"/></name></expr></argument>)<pos:position pos:line="114" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="21"/></expr_stmt>
<comment type="block" pos:line="115" pos:column="1">/* #endif KERNEL_LINUX */</comment>

<cpp:elif pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">elif<pos:position pos:line="117" pos:column="6"/></cpp:directive> <expr><name pos:line="117" pos:column="7">HAVE_LIBKSTAT<pos:position pos:line="117" pos:column="20"/></name></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="118" pos:column="9">derive_t<pos:position pos:line="118" pos:column="17"/></name></type> <name pos:line="118" pos:column="18">rx<pos:position pos:line="118" pos:column="20"/></name></decl>;<pos:position pos:line="118" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="119" pos:column="9">derive_t<pos:position pos:line="119" pos:column="17"/></name></type> <name pos:line="119" pos:column="18">tx<pos:position pos:line="119" pos:column="20"/></name></decl>;<pos:position pos:line="119" pos:column="21"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="120" pos:column="9">char<pos:position pos:line="120" pos:column="13"/></name></type> <name><name pos:line="120" pos:column="14">iname<pos:position pos:line="120" pos:column="19"/></name><index pos:line="120" pos:column="19">[<expr><name pos:line="120" pos:column="20">DATA_MAX_NAME_LEN<pos:position pos:line="120" pos:column="37"/></name></expr>]<pos:position pos:line="120" pos:column="38"/></index></name></decl>;<pos:position pos:line="120" pos:column="39"/></decl_stmt>

	<if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><name pos:line="122" pos:column="13">kc<pos:position pos:line="122" pos:column="15"/></name> <operator pos:line="122" pos:column="16">==<pos:position pos:line="122" pos:column="18"/></operator> <name pos:line="122" pos:column="19">NULL<pos:position pos:line="122" pos:column="23"/></name></expr>)<pos:position pos:line="122" pos:column="24"/></condition><then pos:line="122" pos:column="24">
		<block type="pseudo"><return pos:line="123" pos:column="17">return <expr><operator pos:line="123" pos:column="24">(<pos:position pos:line="123" pos:column="25"/></operator><operator pos:line="123" pos:column="25">-<pos:position pos:line="123" pos:column="26"/></operator><literal type="number" pos:line="123" pos:column="26">1<pos:position pos:line="123" pos:column="27"/></literal><operator pos:line="123" pos:column="27">)<pos:position pos:line="123" pos:column="28"/></operator></expr>;<pos:position pos:line="123" pos:column="29"/></return></block></then></if>

	<for pos:line="125" pos:column="9">for <control pos:line="125" pos:column="13">(<init><decl><type><name pos:line="125" pos:column="14">int<pos:position pos:line="125" pos:column="17"/></name></type> <name pos:line="125" pos:column="18">i<pos:position pos:line="125" pos:column="19"/></name> <init pos:line="125" pos:column="20">= <expr><literal type="number" pos:line="125" pos:column="22">0<pos:position pos:line="125" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="125" pos:column="24"/></init> <condition><expr><name pos:line="125" pos:column="25">i<pos:position pos:line="125" pos:column="26"/></name> <operator pos:line="125" pos:column="27">&lt;<pos:position pos:line="125" pos:column="31"/></operator> <name pos:line="125" pos:column="29">numif<pos:position pos:line="125" pos:column="34"/></name></expr>;<pos:position pos:line="125" pos:column="35"/></condition> <incr><expr><name pos:line="125" pos:column="36">i<pos:position pos:line="125" pos:column="37"/></name><operator pos:line="125" pos:column="37">++<pos:position pos:line="125" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="125" pos:column="40"/></control>
	<block pos:line="126" pos:column="9">{
		<if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><call><name pos:line="127" pos:column="21">kstat_read<pos:position pos:line="127" pos:column="31"/></name> <argument_list pos:line="127" pos:column="32">(<argument><expr><name pos:line="127" pos:column="33">kc<pos:position pos:line="127" pos:column="35"/></name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="37">ksp<pos:position pos:line="127" pos:column="40"/></name><index pos:line="127" pos:column="40">[<expr><name pos:line="127" pos:column="41">i<pos:position pos:line="127" pos:column="42"/></name></expr>]<pos:position pos:line="127" pos:column="43"/></index></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="45">NULL<pos:position pos:line="127" pos:column="49"/></name></expr></argument>)<pos:position pos:line="127" pos:column="50"/></argument_list></call> <operator pos:line="127" pos:column="51">==<pos:position pos:line="127" pos:column="53"/></operator> <operator pos:line="127" pos:column="54">-<pos:position pos:line="127" pos:column="55"/></operator><literal type="number" pos:line="127" pos:column="55">1<pos:position pos:line="127" pos:column="56"/></literal></expr>)<pos:position pos:line="127" pos:column="57"/></condition><then pos:line="127" pos:column="57">
			<block type="pseudo"><continue pos:line="128" pos:column="25">continue;<pos:position pos:line="128" pos:column="34"/></continue></block></then></if>

		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><name pos:line="130" pos:column="21">unique_name<pos:position pos:line="130" pos:column="32"/></name></expr>)<pos:position pos:line="130" pos:column="33"/></condition><then pos:line="130" pos:column="33">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="131" pos:column="25">ssnprintf<pos:position pos:line="131" pos:column="34"/></name><argument_list pos:line="131" pos:column="34">(<argument><expr><name pos:line="131" pos:column="35">iname<pos:position pos:line="131" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="131" pos:column="42">sizeof<argument_list pos:line="131" pos:column="48">(<argument><expr><name pos:line="131" pos:column="49">iname<pos:position pos:line="131" pos:column="54"/></name></expr></argument>)<pos:position pos:line="131" pos:column="55"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="57">"%s_%d_%s"<pos:position pos:line="131" pos:column="67"/></literal></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="69">ksp<pos:position pos:line="131" pos:column="72"/></name><index pos:line="131" pos:column="72">[<expr><name pos:line="131" pos:column="73">i<pos:position pos:line="131" pos:column="74"/></name></expr>]<pos:position pos:line="131" pos:column="75"/></index></name><operator pos:line="131" pos:column="75">-&gt;<pos:position pos:line="131" pos:column="80"/></operator><name pos:line="131" pos:column="77">ks_module<pos:position pos:line="131" pos:column="86"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="88">ksp<pos:position pos:line="131" pos:column="91"/></name><index pos:line="131" pos:column="91">[<expr><name pos:line="131" pos:column="92">i<pos:position pos:line="131" pos:column="93"/></name></expr>]<pos:position pos:line="131" pos:column="94"/></index></name><operator pos:line="131" pos:column="94">-&gt;<pos:position pos:line="131" pos:column="99"/></operator><name pos:line="131" pos:column="96">ks_instance<pos:position pos:line="131" pos:column="107"/></name></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="109">ksp<pos:position pos:line="131" pos:column="112"/></name><index pos:line="131" pos:column="112">[<expr><name pos:line="131" pos:column="113">i<pos:position pos:line="131" pos:column="114"/></name></expr>]<pos:position pos:line="131" pos:column="115"/></index></name><operator pos:line="131" pos:column="115">-&gt;<pos:position pos:line="131" pos:column="120"/></operator><name pos:line="131" pos:column="117">ks_name<pos:position pos:line="131" pos:column="124"/></name></expr></argument>)<pos:position pos:line="131" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="126"/></expr_stmt></block></then>
		<else pos:line="132" pos:column="17">else
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="133" pos:column="25">sstrncpy<pos:position pos:line="133" pos:column="33"/></name><argument_list pos:line="133" pos:column="33">(<argument><expr><name pos:line="133" pos:column="34">iname<pos:position pos:line="133" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="133" pos:column="41">ksp<pos:position pos:line="133" pos:column="44"/></name><index pos:line="133" pos:column="44">[<expr><name pos:line="133" pos:column="45">i<pos:position pos:line="133" pos:column="46"/></name></expr>]<pos:position pos:line="133" pos:column="47"/></index></name><operator pos:line="133" pos:column="47">-&gt;<pos:position pos:line="133" pos:column="52"/></operator><name pos:line="133" pos:column="49">ks_name<pos:position pos:line="133" pos:column="56"/></name></expr></argument>, <argument><expr><sizeof pos:line="133" pos:column="58">sizeof<argument_list pos:line="133" pos:column="64">(<argument><expr><name pos:line="133" pos:column="65">iname<pos:position pos:line="133" pos:column="70"/></name></expr></argument>)<pos:position pos:line="133" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="133" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="73"/></expr_stmt></block></else></if>

		<comment type="block" pos:line="135" pos:column="17">/* try to get 64bit counters */</comment>
		<expr_stmt><expr><name pos:line="136" pos:column="17">rx<pos:position pos:line="136" pos:column="19"/></name> <operator pos:line="136" pos:column="20">=<pos:position pos:line="136" pos:column="21"/></operator> <call><name pos:line="136" pos:column="22">get_kstat_value<pos:position pos:line="136" pos:column="37"/></name> <argument_list pos:line="136" pos:column="38">(<argument><expr><name><name pos:line="136" pos:column="39">ksp<pos:position pos:line="136" pos:column="42"/></name><index pos:line="136" pos:column="42">[<expr><name pos:line="136" pos:column="43">i<pos:position pos:line="136" pos:column="44"/></name></expr>]<pos:position pos:line="136" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="47">"ipackets64"<pos:position pos:line="136" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="61"/></expr_stmt>
		<expr_stmt><expr><name pos:line="137" pos:column="17">tx<pos:position pos:line="137" pos:column="19"/></name> <operator pos:line="137" pos:column="20">=<pos:position pos:line="137" pos:column="21"/></operator> <call><name pos:line="137" pos:column="22">get_kstat_value<pos:position pos:line="137" pos:column="37"/></name> <argument_list pos:line="137" pos:column="38">(<argument><expr><name><name pos:line="137" pos:column="39">ksp<pos:position pos:line="137" pos:column="42"/></name><index pos:line="137" pos:column="42">[<expr><name pos:line="137" pos:column="43">i<pos:position pos:line="137" pos:column="44"/></name></expr>]<pos:position pos:line="137" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="47">"opackets64"<pos:position pos:line="137" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="61"/></expr_stmt>
		<comment type="block" pos:line="138" pos:column="17">/* or fallback to 32bit */</comment>
		<if pos:line="139" pos:column="17">if <condition pos:line="139" pos:column="20">(<expr><name pos:line="139" pos:column="21">rx<pos:position pos:line="139" pos:column="23"/></name> <operator pos:line="139" pos:column="24">==<pos:position pos:line="139" pos:column="26"/></operator> <operator pos:line="139" pos:column="27">-<pos:position pos:line="139" pos:column="28"/></operator><literal type="number" pos:line="139" pos:column="28">1LL<pos:position pos:line="139" pos:column="31"/></literal></expr>)<pos:position pos:line="139" pos:column="32"/></condition><then pos:line="139" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="140" pos:column="25">rx<pos:position pos:line="140" pos:column="27"/></name> <operator pos:line="140" pos:column="28">=<pos:position pos:line="140" pos:column="29"/></operator> <call><name pos:line="140" pos:column="30">get_kstat_value<pos:position pos:line="140" pos:column="45"/></name> <argument_list pos:line="140" pos:column="46">(<argument><expr><name><name pos:line="140" pos:column="47">ksp<pos:position pos:line="140" pos:column="50"/></name><index pos:line="140" pos:column="50">[<expr><name pos:line="140" pos:column="51">i<pos:position pos:line="140" pos:column="52"/></name></expr>]<pos:position pos:line="140" pos:column="53"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="55">"ipackets"<pos:position pos:line="140" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="67"/></expr_stmt></block></then></if>
		<if pos:line="141" pos:column="17">if <condition pos:line="141" pos:column="20">(<expr><name pos:line="141" pos:column="21">tx<pos:position pos:line="141" pos:column="23"/></name> <operator pos:line="141" pos:column="24">==<pos:position pos:line="141" pos:column="26"/></operator> <operator pos:line="141" pos:column="27">-<pos:position pos:line="141" pos:column="28"/></operator><literal type="number" pos:line="141" pos:column="28">1LL<pos:position pos:line="141" pos:column="31"/></literal></expr>)<pos:position pos:line="141" pos:column="32"/></condition><then pos:line="141" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="25">tx<pos:position pos:line="142" pos:column="27"/></name> <operator pos:line="142" pos:column="28">=<pos:position pos:line="142" pos:column="29"/></operator> <call><name pos:line="142" pos:column="30">get_kstat_value<pos:position pos:line="142" pos:column="45"/></name> <argument_list pos:line="142" pos:column="46">(<argument><expr><name><name pos:line="142" pos:column="47">ksp<pos:position pos:line="142" pos:column="50"/></name><index pos:line="142" pos:column="50">[<expr><name pos:line="142" pos:column="51">i<pos:position pos:line="142" pos:column="52"/></name></expr>]<pos:position pos:line="142" pos:column="53"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="55">"opackets"<pos:position pos:line="142" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="67"/></expr_stmt></block></then></if>
		<if pos:line="143" pos:column="17">if <condition pos:line="143" pos:column="20">(<expr><operator pos:line="143" pos:column="21">!<pos:position pos:line="143" pos:column="22"/></operator><name pos:line="143" pos:column="22">report_inactive<pos:position pos:line="143" pos:column="37"/></name> <operator pos:line="143" pos:column="38">&amp;&amp;<pos:position pos:line="143" pos:column="48"/></operator> <name pos:line="143" pos:column="41">rx<pos:position pos:line="143" pos:column="43"/></name> <operator pos:line="143" pos:column="44">==<pos:position pos:line="143" pos:column="46"/></operator> <literal type="number" pos:line="143" pos:column="47">0<pos:position pos:line="143" pos:column="48"/></literal> <operator pos:line="143" pos:column="49">&amp;&amp;<pos:position pos:line="143" pos:column="59"/></operator> <name pos:line="143" pos:column="52">tx<pos:position pos:line="143" pos:column="54"/></name> <operator pos:line="143" pos:column="55">==<pos:position pos:line="143" pos:column="57"/></operator> <literal type="number" pos:line="143" pos:column="58">0<pos:position pos:line="143" pos:column="59"/></literal></expr>)<pos:position pos:line="143" pos:column="60"/></condition><then pos:line="143" pos:column="60">
			<block type="pseudo"><continue pos:line="144" pos:column="25">continue;<pos:position pos:line="144" pos:column="34"/></continue></block></then></if>
		<if pos:line="145" pos:column="17">if <condition pos:line="145" pos:column="20">(<expr><operator pos:line="145" pos:column="21">(<pos:position pos:line="145" pos:column="22"/></operator><name pos:line="145" pos:column="22">rx<pos:position pos:line="145" pos:column="24"/></name> <operator pos:line="145" pos:column="25">!=<pos:position pos:line="145" pos:column="27"/></operator> <operator pos:line="145" pos:column="28">-<pos:position pos:line="145" pos:column="29"/></operator><literal type="number" pos:line="145" pos:column="29">1LL<pos:position pos:line="145" pos:column="32"/></literal><operator pos:line="145" pos:column="32">)<pos:position pos:line="145" pos:column="33"/></operator> <operator pos:line="145" pos:column="34">||<pos:position pos:line="145" pos:column="36"/></operator> <operator pos:line="145" pos:column="37">(<pos:position pos:line="145" pos:column="38"/></operator><name pos:line="145" pos:column="38">tx<pos:position pos:line="145" pos:column="40"/></name> <operator pos:line="145" pos:column="41">!=<pos:position pos:line="145" pos:column="43"/></operator> <operator pos:line="145" pos:column="44">-<pos:position pos:line="145" pos:column="45"/></operator><literal type="number" pos:line="145" pos:column="45">1LL<pos:position pos:line="145" pos:column="48"/></literal><operator pos:line="145" pos:column="48">)<pos:position pos:line="145" pos:column="49"/></operator></expr>)<pos:position pos:line="145" pos:column="50"/></condition><then pos:line="145" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="146" pos:column="25">if_submit<pos:position pos:line="146" pos:column="34"/></name> <argument_list pos:line="146" pos:column="35">(<argument><expr><name pos:line="146" pos:column="36">iname<pos:position pos:line="146" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="43">"if_packets"<pos:position pos:line="146" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="146" pos:column="57">rx<pos:position pos:line="146" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="61">tx<pos:position pos:line="146" pos:column="63"/></name></expr></argument>)<pos:position pos:line="146" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="65"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="148" pos:column="17">/* try to get 64bit counters */</comment>
		<expr_stmt><expr><name pos:line="149" pos:column="17">rx<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">=<pos:position pos:line="149" pos:column="21"/></operator> <call><name pos:line="149" pos:column="22">get_kstat_value<pos:position pos:line="149" pos:column="37"/></name> <argument_list pos:line="149" pos:column="38">(<argument><expr><name><name pos:line="149" pos:column="39">ksp<pos:position pos:line="149" pos:column="42"/></name><index pos:line="149" pos:column="42">[<expr><name pos:line="149" pos:column="43">i<pos:position pos:line="149" pos:column="44"/></name></expr>]<pos:position pos:line="149" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="47">"rbytes64"<pos:position pos:line="149" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="59"/></expr_stmt>
		<expr_stmt><expr><name pos:line="150" pos:column="17">tx<pos:position pos:line="150" pos:column="19"/></name> <operator pos:line="150" pos:column="20">=<pos:position pos:line="150" pos:column="21"/></operator> <call><name pos:line="150" pos:column="22">get_kstat_value<pos:position pos:line="150" pos:column="37"/></name> <argument_list pos:line="150" pos:column="38">(<argument><expr><name><name pos:line="150" pos:column="39">ksp<pos:position pos:line="150" pos:column="42"/></name><index pos:line="150" pos:column="42">[<expr><name pos:line="150" pos:column="43">i<pos:position pos:line="150" pos:column="44"/></name></expr>]<pos:position pos:line="150" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="47">"obytes64"<pos:position pos:line="150" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="59"/></expr_stmt>
		<comment type="block" pos:line="151" pos:column="17">/* or fallback to 32bit */</comment>
		<if pos:line="152" pos:column="17">if <condition pos:line="152" pos:column="20">(<expr><name pos:line="152" pos:column="21">rx<pos:position pos:line="152" pos:column="23"/></name> <operator pos:line="152" pos:column="24">==<pos:position pos:line="152" pos:column="26"/></operator> <operator pos:line="152" pos:column="27">-<pos:position pos:line="152" pos:column="28"/></operator><literal type="number" pos:line="152" pos:column="28">1LL<pos:position pos:line="152" pos:column="31"/></literal></expr>)<pos:position pos:line="152" pos:column="32"/></condition><then pos:line="152" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="153" pos:column="25">rx<pos:position pos:line="153" pos:column="27"/></name> <operator pos:line="153" pos:column="28">=<pos:position pos:line="153" pos:column="29"/></operator> <call><name pos:line="153" pos:column="30">get_kstat_value<pos:position pos:line="153" pos:column="45"/></name> <argument_list pos:line="153" pos:column="46">(<argument><expr><name><name pos:line="153" pos:column="47">ksp<pos:position pos:line="153" pos:column="50"/></name><index pos:line="153" pos:column="50">[<expr><name pos:line="153" pos:column="51">i<pos:position pos:line="153" pos:column="52"/></name></expr>]<pos:position pos:line="153" pos:column="53"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="55">"rbytes"<pos:position pos:line="153" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="153" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="65"/></expr_stmt></block></then></if>
		<if pos:line="154" pos:column="17">if <condition pos:line="154" pos:column="20">(<expr><name pos:line="154" pos:column="21">tx<pos:position pos:line="154" pos:column="23"/></name> <operator pos:line="154" pos:column="24">==<pos:position pos:line="154" pos:column="26"/></operator> <operator pos:line="154" pos:column="27">-<pos:position pos:line="154" pos:column="28"/></operator><literal type="number" pos:line="154" pos:column="28">1LL<pos:position pos:line="154" pos:column="31"/></literal></expr>)<pos:position pos:line="154" pos:column="32"/></condition><then pos:line="154" pos:column="32">
			<block type="pseudo"><expr_stmt><expr><name pos:line="155" pos:column="25">tx<pos:position pos:line="155" pos:column="27"/></name> <operator pos:line="155" pos:column="28">=<pos:position pos:line="155" pos:column="29"/></operator> <call><name pos:line="155" pos:column="30">get_kstat_value<pos:position pos:line="155" pos:column="45"/></name> <argument_list pos:line="155" pos:column="46">(<argument><expr><name><name pos:line="155" pos:column="47">ksp<pos:position pos:line="155" pos:column="50"/></name><index pos:line="155" pos:column="50">[<expr><name pos:line="155" pos:column="51">i<pos:position pos:line="155" pos:column="52"/></name></expr>]<pos:position pos:line="155" pos:column="53"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="55">"obytes"<pos:position pos:line="155" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="65"/></expr_stmt></block></then></if>
		<if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><operator pos:line="156" pos:column="21">(<pos:position pos:line="156" pos:column="22"/></operator><name pos:line="156" pos:column="22">rx<pos:position pos:line="156" pos:column="24"/></name> <operator pos:line="156" pos:column="25">!=<pos:position pos:line="156" pos:column="27"/></operator> <operator pos:line="156" pos:column="28">-<pos:position pos:line="156" pos:column="29"/></operator><literal type="number" pos:line="156" pos:column="29">1LL<pos:position pos:line="156" pos:column="32"/></literal><operator pos:line="156" pos:column="32">)<pos:position pos:line="156" pos:column="33"/></operator> <operator pos:line="156" pos:column="34">||<pos:position pos:line="156" pos:column="36"/></operator> <operator pos:line="156" pos:column="37">(<pos:position pos:line="156" pos:column="38"/></operator><name pos:line="156" pos:column="38">tx<pos:position pos:line="156" pos:column="40"/></name> <operator pos:line="156" pos:column="41">!=<pos:position pos:line="156" pos:column="43"/></operator> <operator pos:line="156" pos:column="44">-<pos:position pos:line="156" pos:column="45"/></operator><literal type="number" pos:line="156" pos:column="45">1LL<pos:position pos:line="156" pos:column="48"/></literal><operator pos:line="156" pos:column="48">)<pos:position pos:line="156" pos:column="49"/></operator></expr>)<pos:position pos:line="156" pos:column="50"/></condition><then pos:line="156" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="157" pos:column="25">if_submit<pos:position pos:line="157" pos:column="34"/></name> <argument_list pos:line="157" pos:column="35">(<argument><expr><name pos:line="157" pos:column="36">iname<pos:position pos:line="157" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="43">"if_octets"<pos:position pos:line="157" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="157" pos:column="56">rx<pos:position pos:line="157" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="60">tx<pos:position pos:line="157" pos:column="62"/></name></expr></argument>)<pos:position pos:line="157" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="64"/></expr_stmt></block></then></if>

		<comment type="block" pos:line="159" pos:column="17">/* no 64bit error counters yet */</comment>
		<expr_stmt><expr><name pos:line="160" pos:column="17">rx<pos:position pos:line="160" pos:column="19"/></name> <operator pos:line="160" pos:column="20">=<pos:position pos:line="160" pos:column="21"/></operator> <call><name pos:line="160" pos:column="22">get_kstat_value<pos:position pos:line="160" pos:column="37"/></name> <argument_list pos:line="160" pos:column="38">(<argument><expr><name><name pos:line="160" pos:column="39">ksp<pos:position pos:line="160" pos:column="42"/></name><index pos:line="160" pos:column="42">[<expr><name pos:line="160" pos:column="43">i<pos:position pos:line="160" pos:column="44"/></name></expr>]<pos:position pos:line="160" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="47">"ierrors"<pos:position pos:line="160" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="58"/></expr_stmt>
		<expr_stmt><expr><name pos:line="161" pos:column="17">tx<pos:position pos:line="161" pos:column="19"/></name> <operator pos:line="161" pos:column="20">=<pos:position pos:line="161" pos:column="21"/></operator> <call><name pos:line="161" pos:column="22">get_kstat_value<pos:position pos:line="161" pos:column="37"/></name> <argument_list pos:line="161" pos:column="38">(<argument><expr><name><name pos:line="161" pos:column="39">ksp<pos:position pos:line="161" pos:column="42"/></name><index pos:line="161" pos:column="42">[<expr><name pos:line="161" pos:column="43">i<pos:position pos:line="161" pos:column="44"/></name></expr>]<pos:position pos:line="161" pos:column="45"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="47">"oerrors"<pos:position pos:line="161" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="58"/></expr_stmt>
		<if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><operator pos:line="162" pos:column="21">(<pos:position pos:line="162" pos:column="22"/></operator><name pos:line="162" pos:column="22">rx<pos:position pos:line="162" pos:column="24"/></name> <operator pos:line="162" pos:column="25">!=<pos:position pos:line="162" pos:column="27"/></operator> <operator pos:line="162" pos:column="28">-<pos:position pos:line="162" pos:column="29"/></operator><literal type="number" pos:line="162" pos:column="29">1LL<pos:position pos:line="162" pos:column="32"/></literal><operator pos:line="162" pos:column="32">)<pos:position pos:line="162" pos:column="33"/></operator> <operator pos:line="162" pos:column="34">||<pos:position pos:line="162" pos:column="36"/></operator> <operator pos:line="162" pos:column="37">(<pos:position pos:line="162" pos:column="38"/></operator><name pos:line="162" pos:column="38">tx<pos:position pos:line="162" pos:column="40"/></name> <operator pos:line="162" pos:column="41">!=<pos:position pos:line="162" pos:column="43"/></operator> <operator pos:line="162" pos:column="44">-<pos:position pos:line="162" pos:column="45"/></operator><literal type="number" pos:line="162" pos:column="45">1LL<pos:position pos:line="162" pos:column="48"/></literal><operator pos:line="162" pos:column="48">)<pos:position pos:line="162" pos:column="49"/></operator></expr>)<pos:position pos:line="162" pos:column="50"/></condition><then pos:line="162" pos:column="50">
			<block type="pseudo"><expr_stmt><expr><call><name pos:line="163" pos:column="25">if_submit<pos:position pos:line="163" pos:column="34"/></name> <argument_list pos:line="163" pos:column="35">(<argument><expr><name pos:line="163" pos:column="36">iname<pos:position pos:line="163" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="163" pos:column="43">"if_errors"<pos:position pos:line="163" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="163" pos:column="56">rx<pos:position pos:line="163" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="163" pos:column="60">tx<pos:position pos:line="163" pos:column="62"/></name></expr></argument>)<pos:position pos:line="163" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="64"/></expr_stmt></block></then></if>
	}<pos:position pos:line="164" pos:column="10"/></block></for>
<comment type="block" pos:line="165" pos:column="1">/* #endif HAVE_LIBKSTAT */</comment>

<cpp:elif pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">elif<pos:position pos:line="167" pos:column="6"/></cpp:directive> <expr><call><name pos:line="167" pos:column="7">defined<pos:position pos:line="167" pos:column="14"/></name><argument_list pos:line="167" pos:column="14">(<argument><expr><name pos:line="167" pos:column="15">HAVE_LIBSTATGRAB<pos:position pos:line="167" pos:column="31"/></name></expr></argument>)<pos:position pos:line="167" pos:column="32"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="168" pos:column="9">sg_network_io_stats<pos:position pos:line="168" pos:column="28"/></name> <modifier pos:line="168" pos:column="29">*<pos:position pos:line="168" pos:column="30"/></modifier></type><name pos:line="168" pos:column="30">ios<pos:position pos:line="168" pos:column="33"/></name></decl>;<pos:position pos:line="168" pos:column="34"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="169" pos:column="9">int<pos:position pos:line="169" pos:column="12"/></name></type> <name pos:line="169" pos:column="13">num<pos:position pos:line="169" pos:column="16"/></name></decl>;<pos:position pos:line="169" pos:column="17"/></decl_stmt>

	<expr_stmt><expr><name pos:line="171" pos:column="9">ios<pos:position pos:line="171" pos:column="12"/></name> <operator pos:line="171" pos:column="13">=<pos:position pos:line="171" pos:column="14"/></operator> <call><name pos:line="171" pos:column="15">sg_get_network_io_stats<pos:position pos:line="171" pos:column="38"/></name> <argument_list pos:line="171" pos:column="39">(<argument><expr><operator pos:line="171" pos:column="40">&amp;<pos:position pos:line="171" pos:column="45"/></operator><name pos:line="171" pos:column="41">num<pos:position pos:line="171" pos:column="44"/></name></expr></argument>)<pos:position pos:line="171" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="46"/></expr_stmt>

	<for pos:line="173" pos:column="9">for <control pos:line="173" pos:column="13">(<init><decl><type><name pos:line="173" pos:column="14">int<pos:position pos:line="173" pos:column="17"/></name></type> <name pos:line="173" pos:column="18">i<pos:position pos:line="173" pos:column="19"/></name> <init pos:line="173" pos:column="20">= <expr><literal type="number" pos:line="173" pos:column="22">0<pos:position pos:line="173" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="173" pos:column="24"/></init> <condition><expr><name pos:line="173" pos:column="25">i<pos:position pos:line="173" pos:column="26"/></name> <operator pos:line="173" pos:column="27">&lt;<pos:position pos:line="173" pos:column="31"/></operator> <name pos:line="173" pos:column="29">num<pos:position pos:line="173" pos:column="32"/></name></expr>;<pos:position pos:line="173" pos:column="33"/></condition> <incr><expr><name pos:line="173" pos:column="34">i<pos:position pos:line="173" pos:column="35"/></name><operator pos:line="173" pos:column="35">++<pos:position pos:line="173" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="173" pos:column="38"/></control> <block pos:line="173" pos:column="39">{
		<if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><operator pos:line="174" pos:column="21">!<pos:position pos:line="174" pos:column="22"/></operator><name pos:line="174" pos:column="22">report_inactive<pos:position pos:line="174" pos:column="37"/></name> <operator pos:line="174" pos:column="38">&amp;&amp;<pos:position pos:line="174" pos:column="48"/></operator> <name><name pos:line="174" pos:column="41">ios<pos:position pos:line="174" pos:column="44"/></name><index pos:line="174" pos:column="44">[<expr><name pos:line="174" pos:column="45">i<pos:position pos:line="174" pos:column="46"/></name></expr>]<pos:position pos:line="174" pos:column="47"/></index></name><operator pos:line="174" pos:column="47">.<pos:position pos:line="174" pos:column="48"/></operator><name pos:line="174" pos:column="48">rx<pos:position pos:line="174" pos:column="50"/></name> <operator pos:line="174" pos:column="51">==<pos:position pos:line="174" pos:column="53"/></operator> <literal type="number" pos:line="174" pos:column="54">0<pos:position pos:line="174" pos:column="55"/></literal> <operator pos:line="174" pos:column="56">&amp;&amp;<pos:position pos:line="174" pos:column="66"/></operator> <name><name pos:line="174" pos:column="59">ios<pos:position pos:line="174" pos:column="62"/></name><index pos:line="174" pos:column="62">[<expr><name pos:line="174" pos:column="63">i<pos:position pos:line="174" pos:column="64"/></name></expr>]<pos:position pos:line="174" pos:column="65"/></index></name><operator pos:line="174" pos:column="65">.<pos:position pos:line="174" pos:column="66"/></operator><name pos:line="174" pos:column="66">tx<pos:position pos:line="174" pos:column="68"/></name> <operator pos:line="174" pos:column="69">==<pos:position pos:line="174" pos:column="71"/></operator> <literal type="number" pos:line="174" pos:column="72">0<pos:position pos:line="174" pos:column="73"/></literal></expr>)<pos:position pos:line="174" pos:column="74"/></condition><then pos:line="174" pos:column="74">
			<block type="pseudo"><continue pos:line="175" pos:column="25">continue;<pos:position pos:line="175" pos:column="34"/></continue></block></then></if>
		<expr_stmt><expr><call><name pos:line="176" pos:column="17">if_submit<pos:position pos:line="176" pos:column="26"/></name> <argument_list pos:line="176" pos:column="27">(<argument><expr><name><name pos:line="176" pos:column="28">ios<pos:position pos:line="176" pos:column="31"/></name><index pos:line="176" pos:column="31">[<expr><name pos:line="176" pos:column="32">i<pos:position pos:line="176" pos:column="33"/></name></expr>]<pos:position pos:line="176" pos:column="34"/></index></name><operator pos:line="176" pos:column="34">.<pos:position pos:line="176" pos:column="35"/></operator><name pos:line="176" pos:column="35">interface_name<pos:position pos:line="176" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="176" pos:column="51">"if_octets"<pos:position pos:line="176" pos:column="62"/></literal></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="64">ios<pos:position pos:line="176" pos:column="67"/></name><index pos:line="176" pos:column="67">[<expr><name pos:line="176" pos:column="68">i<pos:position pos:line="176" pos:column="69"/></name></expr>]<pos:position pos:line="176" pos:column="70"/></index></name><operator pos:line="176" pos:column="70">.<pos:position pos:line="176" pos:column="71"/></operator><name pos:line="176" pos:column="71">rx<pos:position pos:line="176" pos:column="73"/></name></expr></argument>, <argument><expr><name><name pos:line="176" pos:column="75">ios<pos:position pos:line="176" pos:column="78"/></name><index pos:line="176" pos:column="78">[<expr><name pos:line="176" pos:column="79">i<pos:position pos:line="176" pos:column="80"/></name></expr>]<pos:position pos:line="176" pos:column="81"/></index></name><operator pos:line="176" pos:column="81">.<pos:position pos:line="176" pos:column="82"/></operator><name pos:line="176" pos:column="82">tx<pos:position pos:line="176" pos:column="84"/></name></expr></argument>)<pos:position pos:line="176" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="86"/></expr_stmt>
	}<pos:position pos:line="177" pos:column="10"/></block></for>
<comment type="block" pos:line="178" pos:column="1">/* #endif HAVE_LIBSTATGRAB */</comment>

<cpp:elif pos:line="180" pos:column="1">#<cpp:directive pos:line="180" pos:column="2">elif<pos:position pos:line="180" pos:column="6"/></cpp:directive> <expr><call><name pos:line="180" pos:column="7">defined<pos:position pos:line="180" pos:column="14"/></name><argument_list pos:line="180" pos:column="14">(<argument><expr><name pos:line="180" pos:column="15">HAVE_PERFSTAT<pos:position pos:line="180" pos:column="28"/></name></expr></argument>)<pos:position pos:line="180" pos:column="29"/></argument_list></call></expr></cpp:elif>
	<decl_stmt><decl><type><name pos:line="181" pos:column="9">perfstat_id_t<pos:position pos:line="181" pos:column="22"/></name></type> <name pos:line="181" pos:column="23">id<pos:position pos:line="181" pos:column="25"/></name></decl>;<pos:position pos:line="181" pos:column="26"/></decl_stmt>
	<decl_stmt><decl><type><name pos:line="182" pos:column="9">int<pos:position pos:line="182" pos:column="12"/></name></type> <name pos:line="182" pos:column="13">ifs<pos:position pos:line="182" pos:column="16"/></name></decl>;<pos:position pos:line="182" pos:column="17"/></decl_stmt>

	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><operator pos:line="184" pos:column="13">(<pos:position pos:line="184" pos:column="14"/></operator><name pos:line="184" pos:column="14">nif<pos:position pos:line="184" pos:column="17"/></name> <operator pos:line="184" pos:column="18">=<pos:position pos:line="184" pos:column="19"/></operator>  <call><name pos:line="184" pos:column="21">perfstat_netinterface<pos:position pos:line="184" pos:column="42"/></name><argument_list pos:line="184" pos:column="42">(<argument><expr><name pos:line="184" pos:column="43">NULL<pos:position pos:line="184" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="184" pos:column="49">NULL<pos:position pos:line="184" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="184" pos:column="55">sizeof<argument_list pos:line="184" pos:column="61">(<argument><expr><name pos:line="184" pos:column="62">perfstat_netinterface_t<pos:position pos:line="184" pos:column="85"/></name></expr></argument>)<pos:position pos:line="184" pos:column="86"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="88">0<pos:position pos:line="184" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="90"/></argument_list></call><operator pos:line="184" pos:column="90">)<pos:position pos:line="184" pos:column="91"/></operator> <operator pos:line="184" pos:column="92">&lt;<pos:position pos:line="184" pos:column="96"/></operator> <literal type="number" pos:line="184" pos:column="94">0<pos:position pos:line="184" pos:column="95"/></literal></expr>)<pos:position pos:line="184" pos:column="96"/></condition><then pos:line="184" pos:column="96">
	<block pos:line="185" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="186" pos:column="17">char<pos:position pos:line="186" pos:column="21"/></name></type> <name><name pos:line="186" pos:column="22">errbuf<pos:position pos:line="186" pos:column="28"/></name><index pos:line="186" pos:column="28">[<expr><literal type="number" pos:line="186" pos:column="29">1024<pos:position pos:line="186" pos:column="33"/></literal></expr>]<pos:position pos:line="186" pos:column="34"/></index></name></decl>;<pos:position pos:line="186" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="187" pos:column="17">WARNING<pos:position pos:line="187" pos:column="24"/></name> <argument_list pos:line="187" pos:column="25">(<argument><expr><literal type="string" pos:line="187" pos:column="26">"interface plugin: perfstat_netinterface: %s"<pos:position pos:line="187" pos:column="71"/></literal></expr></argument>,
			<argument><expr><call><name pos:line="188" pos:column="25">sstrerror<pos:position pos:line="188" pos:column="34"/></name> <argument_list pos:line="188" pos:column="35">(<argument><expr><name pos:line="188" pos:column="36">errno<pos:position pos:line="188" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="43">errbuf<pos:position pos:line="188" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="188" pos:column="51">sizeof <argument_list pos:line="188" pos:column="58">(<argument><expr><name pos:line="188" pos:column="59">errbuf<pos:position pos:line="188" pos:column="65"/></name></expr></argument>)<pos:position pos:line="188" pos:column="66"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="188" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="188" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="69"/></expr_stmt>
		<return pos:line="189" pos:column="17">return <expr><operator pos:line="189" pos:column="24">(<pos:position pos:line="189" pos:column="25"/></operator><operator pos:line="189" pos:column="25">-<pos:position pos:line="189" pos:column="26"/></operator><literal type="number" pos:line="189" pos:column="26">1<pos:position pos:line="189" pos:column="27"/></literal><operator pos:line="189" pos:column="27">)<pos:position pos:line="189" pos:column="28"/></operator></expr>;<pos:position pos:line="189" pos:column="29"/></return>
	}<pos:position pos:line="190" pos:column="10"/></block></then></if>

	<if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><name pos:line="192" pos:column="13">pnif<pos:position pos:line="192" pos:column="17"/></name> <operator pos:line="192" pos:column="18">!=<pos:position pos:line="192" pos:column="20"/></operator> <name pos:line="192" pos:column="21">nif<pos:position pos:line="192" pos:column="24"/></name> <operator pos:line="192" pos:column="25">||<pos:position pos:line="192" pos:column="27"/></operator> <name pos:line="192" pos:column="28">ifstat<pos:position pos:line="192" pos:column="34"/></name> <operator pos:line="192" pos:column="35">==<pos:position pos:line="192" pos:column="37"/></operator> <name pos:line="192" pos:column="38">NULL<pos:position pos:line="192" pos:column="42"/></name></expr>)<pos:position pos:line="192" pos:column="43"/></condition><then pos:line="192" pos:column="43">
	<block pos:line="193" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="194" pos:column="17">free<pos:position pos:line="194" pos:column="21"/></name><argument_list pos:line="194" pos:column="21">(<argument><expr><name pos:line="194" pos:column="22">ifstat<pos:position pos:line="194" pos:column="28"/></name></expr></argument>)<pos:position pos:line="194" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="30"/></expr_stmt>
		<expr_stmt><expr><name pos:line="195" pos:column="17">ifstat<pos:position pos:line="195" pos:column="23"/></name> <operator pos:line="195" pos:column="24">=<pos:position pos:line="195" pos:column="25"/></operator> <call><name pos:line="195" pos:column="26">malloc<pos:position pos:line="195" pos:column="32"/></name><argument_list pos:line="195" pos:column="32">(<argument><expr><name pos:line="195" pos:column="33">nif<pos:position pos:line="195" pos:column="36"/></name> <operator pos:line="195" pos:column="37">*<pos:position pos:line="195" pos:column="38"/></operator> <sizeof pos:line="195" pos:column="39">sizeof <argument_list pos:line="195" pos:column="46">(<argument><expr><operator pos:line="195" pos:column="47">*<pos:position pos:line="195" pos:column="48"/></operator><name pos:line="195" pos:column="48">ifstat<pos:position pos:line="195" pos:column="54"/></name></expr></argument>)<pos:position pos:line="195" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="195" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="57"/></expr_stmt>
	}<pos:position pos:line="196" pos:column="10"/></block></then></if>
	<expr_stmt><expr><name pos:line="197" pos:column="9">pnif<pos:position pos:line="197" pos:column="13"/></name> <operator pos:line="197" pos:column="14">=<pos:position pos:line="197" pos:column="15"/></operator> <name pos:line="197" pos:column="16">nif<pos:position pos:line="197" pos:column="19"/></name></expr>;<pos:position pos:line="197" pos:column="20"/></expr_stmt>

	<expr_stmt><expr><name><name pos:line="199" pos:column="9">id<pos:position pos:line="199" pos:column="11"/></name><operator pos:line="199" pos:column="11">.<pos:position pos:line="199" pos:column="12"/></operator><name pos:line="199" pos:column="12">name<pos:position pos:line="199" pos:column="16"/></name><index pos:line="199" pos:column="16">[<expr><literal type="number" pos:line="199" pos:column="17">0<pos:position pos:line="199" pos:column="18"/></literal></expr>]<pos:position pos:line="199" pos:column="19"/></index></name><operator pos:line="199" pos:column="19">=<pos:position pos:line="199" pos:column="20"/></operator><literal type="char" pos:line="199" pos:column="20">'\0'<pos:position pos:line="199" pos:column="24"/></literal></expr>;<pos:position pos:line="199" pos:column="25"/></expr_stmt>
	<if pos:line="200" pos:column="9">if <condition pos:line="200" pos:column="12">(<expr><operator pos:line="200" pos:column="13">(<pos:position pos:line="200" pos:column="14"/></operator><name pos:line="200" pos:column="14">ifs<pos:position pos:line="200" pos:column="17"/></name> <operator pos:line="200" pos:column="18">=<pos:position pos:line="200" pos:column="19"/></operator> <call><name pos:line="200" pos:column="20">perfstat_netinterface<pos:position pos:line="200" pos:column="41"/></name><argument_list pos:line="200" pos:column="41">(<argument><expr><operator pos:line="200" pos:column="42">&amp;<pos:position pos:line="200" pos:column="47"/></operator><name pos:line="200" pos:column="43">id<pos:position pos:line="200" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="47">ifstat<pos:position pos:line="200" pos:column="53"/></name></expr></argument>, <argument><expr><sizeof pos:line="200" pos:column="55">sizeof<argument_list pos:line="200" pos:column="61">(<argument><expr><name pos:line="200" pos:column="62">perfstat_netinterface_t<pos:position pos:line="200" pos:column="85"/></name></expr></argument>)<pos:position pos:line="200" pos:column="86"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="200" pos:column="88">nif<pos:position pos:line="200" pos:column="91"/></name></expr></argument>)<pos:position pos:line="200" pos:column="92"/></argument_list></call><operator pos:line="200" pos:column="92">)<pos:position pos:line="200" pos:column="93"/></operator> <operator pos:line="200" pos:column="94">&lt;<pos:position pos:line="200" pos:column="98"/></operator> <literal type="number" pos:line="200" pos:column="96">0<pos:position pos:line="200" pos:column="97"/></literal></expr>)<pos:position pos:line="200" pos:column="98"/></condition><then pos:line="200" pos:column="98">
	<block pos:line="201" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="202" pos:column="17">char<pos:position pos:line="202" pos:column="21"/></name></type> <name><name pos:line="202" pos:column="22">errbuf<pos:position pos:line="202" pos:column="28"/></name><index pos:line="202" pos:column="28">[<expr><literal type="number" pos:line="202" pos:column="29">1024<pos:position pos:line="202" pos:column="33"/></literal></expr>]<pos:position pos:line="202" pos:column="34"/></index></name></decl>;<pos:position pos:line="202" pos:column="35"/></decl_stmt>
		<expr_stmt><expr><call><name pos:line="203" pos:column="17">WARNING<pos:position pos:line="203" pos:column="24"/></name> <argument_list pos:line="203" pos:column="25">(<argument><expr><literal type="string" pos:line="203" pos:column="26">"interface plugin: perfstat_netinterface (interfaces=%d): %s"<pos:position pos:line="203" pos:column="87"/></literal></expr></argument>,
			<argument><expr><name pos:line="204" pos:column="25">nif<pos:position pos:line="204" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="204" pos:column="30">sstrerror<pos:position pos:line="204" pos:column="39"/></name> <argument_list pos:line="204" pos:column="40">(<argument><expr><name pos:line="204" pos:column="41">errno<pos:position pos:line="204" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="48">errbuf<pos:position pos:line="204" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="204" pos:column="56">sizeof <argument_list pos:line="204" pos:column="63">(<argument><expr><name pos:line="204" pos:column="64">errbuf<pos:position pos:line="204" pos:column="70"/></name></expr></argument>)<pos:position pos:line="204" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="204" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="204" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="74"/></expr_stmt>
		<return pos:line="205" pos:column="17">return <expr><operator pos:line="205" pos:column="24">(<pos:position pos:line="205" pos:column="25"/></operator><operator pos:line="205" pos:column="25">-<pos:position pos:line="205" pos:column="26"/></operator><literal type="number" pos:line="205" pos:column="26">1<pos:position pos:line="205" pos:column="27"/></literal><operator pos:line="205" pos:column="27">)<pos:position pos:line="205" pos:column="28"/></operator></expr>;<pos:position pos:line="205" pos:column="29"/></return>
	}<pos:position pos:line="206" pos:column="10"/></block></then></if>

	<for pos:line="208" pos:column="9">for <control pos:line="208" pos:column="13">(<init><decl><type><name pos:line="208" pos:column="14">int<pos:position pos:line="208" pos:column="17"/></name></type> <name pos:line="208" pos:column="18">i<pos:position pos:line="208" pos:column="19"/></name> <init pos:line="208" pos:column="20">= <expr><literal type="number" pos:line="208" pos:column="22">0<pos:position pos:line="208" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="208" pos:column="24"/></init> <condition><expr><name pos:line="208" pos:column="25">i<pos:position pos:line="208" pos:column="26"/></name> <operator pos:line="208" pos:column="27">&lt;<pos:position pos:line="208" pos:column="31"/></operator> <name pos:line="208" pos:column="29">ifs<pos:position pos:line="208" pos:column="32"/></name></expr>;<pos:position pos:line="208" pos:column="33"/></condition> <incr><expr><name pos:line="208" pos:column="34">i<pos:position pos:line="208" pos:column="35"/></name><operator pos:line="208" pos:column="35">++<pos:position pos:line="208" pos:column="37"/></operator></expr></incr>)<pos:position pos:line="208" pos:column="38"/></control>
	<block pos:line="209" pos:column="9">{
		<if pos:line="210" pos:column="17">if <condition pos:line="210" pos:column="20">(<expr><operator pos:line="210" pos:column="21">!<pos:position pos:line="210" pos:column="22"/></operator><name pos:line="210" pos:column="22">report_inactive<pos:position pos:line="210" pos:column="37"/></name> <operator pos:line="210" pos:column="38">&amp;&amp;<pos:position pos:line="210" pos:column="48"/></operator> <name><name pos:line="210" pos:column="41">ifstat<pos:position pos:line="210" pos:column="47"/></name><index pos:line="210" pos:column="47">[<expr><name pos:line="210" pos:column="48">i<pos:position pos:line="210" pos:column="49"/></name></expr>]<pos:position pos:line="210" pos:column="50"/></index></name><operator pos:line="210" pos:column="50">.<pos:position pos:line="210" pos:column="51"/></operator><name pos:line="210" pos:column="51">ipackets<pos:position pos:line="210" pos:column="59"/></name> <operator pos:line="210" pos:column="60">==<pos:position pos:line="210" pos:column="62"/></operator> <literal type="number" pos:line="210" pos:column="63">0<pos:position pos:line="210" pos:column="64"/></literal> <operator pos:line="210" pos:column="65">&amp;&amp;<pos:position pos:line="210" pos:column="75"/></operator> <name><name pos:line="210" pos:column="68">ifstat<pos:position pos:line="210" pos:column="74"/></name><index pos:line="210" pos:column="74">[<expr><name pos:line="210" pos:column="75">i<pos:position pos:line="210" pos:column="76"/></name></expr>]<pos:position pos:line="210" pos:column="77"/></index></name><operator pos:line="210" pos:column="77">.<pos:position pos:line="210" pos:column="78"/></operator><name pos:line="210" pos:column="78">opackets<pos:position pos:line="210" pos:column="86"/></name> <operator pos:line="210" pos:column="87">==<pos:position pos:line="210" pos:column="89"/></operator> <literal type="number" pos:line="210" pos:column="90">0<pos:position pos:line="210" pos:column="91"/></literal></expr>)<pos:position pos:line="210" pos:column="92"/></condition><then pos:line="210" pos:column="92">
			<block type="pseudo"><continue pos:line="211" pos:column="25">continue;<pos:position pos:line="211" pos:column="34"/></continue></block></then></if>

		<expr_stmt><expr><call><name pos:line="213" pos:column="17">if_submit<pos:position pos:line="213" pos:column="26"/></name> <argument_list pos:line="213" pos:column="27">(<argument><expr><name><name pos:line="213" pos:column="28">ifstat<pos:position pos:line="213" pos:column="34"/></name><index pos:line="213" pos:column="34">[<expr><name pos:line="213" pos:column="35">i<pos:position pos:line="213" pos:column="36"/></name></expr>]<pos:position pos:line="213" pos:column="37"/></index></name><operator pos:line="213" pos:column="37">.<pos:position pos:line="213" pos:column="38"/></operator><name pos:line="213" pos:column="38">name<pos:position pos:line="213" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="213" pos:column="44">"if_octets"<pos:position pos:line="213" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="57">ifstat<pos:position pos:line="213" pos:column="63"/></name><index pos:line="213" pos:column="63">[<expr><name pos:line="213" pos:column="64">i<pos:position pos:line="213" pos:column="65"/></name></expr>]<pos:position pos:line="213" pos:column="66"/></index></name><operator pos:line="213" pos:column="66">.<pos:position pos:line="213" pos:column="67"/></operator><name pos:line="213" pos:column="67">ibytes<pos:position pos:line="213" pos:column="73"/></name></expr></argument>, <argument><expr><name><name pos:line="213" pos:column="75">ifstat<pos:position pos:line="213" pos:column="81"/></name><index pos:line="213" pos:column="81">[<expr><name pos:line="213" pos:column="82">i<pos:position pos:line="213" pos:column="83"/></name></expr>]<pos:position pos:line="213" pos:column="84"/></index></name><operator pos:line="213" pos:column="84">.<pos:position pos:line="213" pos:column="85"/></operator><name pos:line="213" pos:column="85">obytes<pos:position pos:line="213" pos:column="91"/></name></expr></argument>)<pos:position pos:line="213" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="93"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="214" pos:column="17">if_submit<pos:position pos:line="214" pos:column="26"/></name> <argument_list pos:line="214" pos:column="27">(<argument><expr><name><name pos:line="214" pos:column="28">ifstat<pos:position pos:line="214" pos:column="34"/></name><index pos:line="214" pos:column="34">[<expr><name pos:line="214" pos:column="35">i<pos:position pos:line="214" pos:column="36"/></name></expr>]<pos:position pos:line="214" pos:column="37"/></index></name><operator pos:line="214" pos:column="37">.<pos:position pos:line="214" pos:column="38"/></operator><name pos:line="214" pos:column="38">name<pos:position pos:line="214" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="44">"if_packets"<pos:position pos:line="214" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="214" pos:column="58">ifstat<pos:position pos:line="214" pos:column="64"/></name><index pos:line="214" pos:column="64">[<expr><name pos:line="214" pos:column="65">i<pos:position pos:line="214" pos:column="66"/></name></expr>]<pos:position pos:line="214" pos:column="67"/></index></name><operator pos:line="214" pos:column="67">.<pos:position pos:line="214" pos:column="68"/></operator><name pos:line="214" pos:column="68">ipackets<pos:position pos:line="214" pos:column="76"/></name></expr></argument> ,<argument><expr><name><name pos:line="214" pos:column="78">ifstat<pos:position pos:line="214" pos:column="84"/></name><index pos:line="214" pos:column="84">[<expr><name pos:line="214" pos:column="85">i<pos:position pos:line="214" pos:column="86"/></name></expr>]<pos:position pos:line="214" pos:column="87"/></index></name><operator pos:line="214" pos:column="87">.<pos:position pos:line="214" pos:column="88"/></operator><name pos:line="214" pos:column="88">opackets<pos:position pos:line="214" pos:column="96"/></name></expr></argument>)<pos:position pos:line="214" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="98"/></expr_stmt>
		<expr_stmt><expr><call><name pos:line="215" pos:column="17">if_submit<pos:position pos:line="215" pos:column="26"/></name> <argument_list pos:line="215" pos:column="27">(<argument><expr><name><name pos:line="215" pos:column="28">ifstat<pos:position pos:line="215" pos:column="34"/></name><index pos:line="215" pos:column="34">[<expr><name pos:line="215" pos:column="35">i<pos:position pos:line="215" pos:column="36"/></name></expr>]<pos:position pos:line="215" pos:column="37"/></index></name><operator pos:line="215" pos:column="37">.<pos:position pos:line="215" pos:column="38"/></operator><name pos:line="215" pos:column="38">name<pos:position pos:line="215" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="215" pos:column="44">"if_errors"<pos:position pos:line="215" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="215" pos:column="57">ifstat<pos:position pos:line="215" pos:column="63"/></name><index pos:line="215" pos:column="63">[<expr><name pos:line="215" pos:column="64">i<pos:position pos:line="215" pos:column="65"/></name></expr>]<pos:position pos:line="215" pos:column="66"/></index></name><operator pos:line="215" pos:column="66">.<pos:position pos:line="215" pos:column="67"/></operator><name pos:line="215" pos:column="67">ierrors<pos:position pos:line="215" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="215" pos:column="76">ifstat<pos:position pos:line="215" pos:column="82"/></name><index pos:line="215" pos:column="82">[<expr><name pos:line="215" pos:column="83">i<pos:position pos:line="215" pos:column="84"/></name></expr>]<pos:position pos:line="215" pos:column="85"/></index></name><operator pos:line="215" pos:column="85">.<pos:position pos:line="215" pos:column="86"/></operator><name pos:line="215" pos:column="86">oerrors<pos:position pos:line="215" pos:column="93"/></name></expr></argument> )<pos:position pos:line="215" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="96"/></expr_stmt>
	}<pos:position pos:line="216" pos:column="10"/></block></for>
<cpp:endif pos:line="217" pos:column="1">#<cpp:directive pos:line="217" pos:column="2">endif<pos:position pos:line="217" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="217" pos:column="8">/* HAVE_PERFSTAT */</comment>

	<return pos:line="219" pos:column="9">return <expr><operator pos:line="219" pos:column="16">(<pos:position pos:line="219" pos:column="17"/></operator><literal type="number" pos:line="219" pos:column="17">0<pos:position pos:line="219" pos:column="18"/></literal><operator pos:line="219" pos:column="18">)<pos:position pos:line="219" pos:column="19"/></operator></expr>;<pos:position pos:line="219" pos:column="20"/></return>
}<pos:position pos:line="220" pos:column="2"/></block></function></unit>
